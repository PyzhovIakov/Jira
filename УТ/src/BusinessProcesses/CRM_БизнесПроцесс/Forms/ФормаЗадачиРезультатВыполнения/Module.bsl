
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ОтложитьНаДату") Тогда
		ОтложитьНаДату = Параметры.ОтложитьНаДату;
	КонецЕсли;
	Если Параметры.Свойство("Задача") Тогда
		Задача = Параметры.Задача;
		НаборМаршрута = РегистрыСведений.CRM_НастройкиЭтаповБизнесПроцессов.СоздатьНаборЗаписей();
		НаборМаршрута.Отбор.Объект.Установить(Задача.БизнесПроцесс);
		НаборМаршрута.Отбор.ТочкаМаршрута.Установить(Задача.CRM_ТочкаМаршрута);
		НаборМаршрута.Прочитать();
		Если НаборМаршрута.Количество() > 0 Тогда
			Элементы.ПеренестиСрок.Видимость = НЕ НаборМаршрута[0].ОтложитьНачалоЭтапаДоступно;
		КонецЕсли;
		// Управление видимостью и доступностью поля дата исполнения.
		ДатаИсполнения = CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса();
		УстановитьПривилегированныйРежим(Истина);
		Элементы.ДатаИсполнения.Видимость = Задача.БизнесПроцесс.КартаМаршрута.РедактироватьДатуВыполненияЗадач;
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	Если Параметры.Свойство("НастройкиЭтапа") Тогда
		Элементы.РезультатВыполнения.АвтоОтметкаНезаполненного = Параметры.НастройкиЭтапа.ОбязательноФиксироватьРезультат;
	КонецЕсли;
	
	CRM_РаботаСЯзыковымиМоделямиСервер.ПриСозданииНаСервере(ЭтотОбъект, "ГруппаАссистент");
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события формы "ПередЗакрытием".
//
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если НЕ Модифицированность Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	Если НЕ ЗавершениеРаботы Тогда	
		Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение,
			 НСтр("ru='Данные были изменены. Сохранить изменения?';
			|en='Data has been changed. Save the changes?'"),
			 РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик ответа на вопрос перед закрытием формы.
//
// Параметры:
//	Результат				- КодВозвратаДиалога	- Ответ на вопрос.
//	ДополнительныеПараметры	- Структура				- Структура дополнительных параметров.
//
Процедура ПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		КомандаОтмена(Неопределено);
	Иначе
		КомандаОК(Неопределено);
	КонецЕсли;
	
КонецПроцедуры // ПередЗакрытиемЗавершение()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	CRM_РаботаСЯзыковымиМоделямиКлиент.ПриОткрытии(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		Модифицированность = Ложь;
		Закрыть(Новый Структура("Отказ, РезультатВыполнения, ОтложитьНаДату, ДатаИсполнения", Ложь,
			 РезультатВыполнения, ОтложитьНаДату,
			 ДатаИсполнения));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Закрыть(Новый Структура("Отказ, РезультатВыполнения, ОтложитьНаДату, ДатаИсполнения", Истина,
		 РезультатВыполнения, ОтложитьНаДату,
		 ДатаИсполнения));
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиСрок(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтложитьСледующуюЗадачуЗавершение", ЭтотОбъект);
	ОткрытьФорму("БизнесПроцесс.CRM_БизнесПроцесс.Форма.ФормаОтложитьСледующуюЗадачу", , , , , ,
		 ОписаниеОповещения,
		 РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОтложитьСледующуюЗадачуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Результат) Тогда
		ОтложитьНаДату = Результат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	Если Элементы.РезультатВыполнения.АвтоОтметкаНезаполненного = Истина Тогда
		ПроверяемыеРеквизиты.Добавить("РезультатВыполнения");
	КонецЕсли;
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
	МодульПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	CRM_СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтотОбъект, Команда);
КонецПроцедуры

#КонецОбласти

#Область ЯзыковыеМодели

&НаКлиенте
Процедура Подключаемый_ДоступностьМенюАссистент()
	
	CRM_РаботаСЯзыковымиМоделямиКлиент.ДоступностьМенюАссистент(ЭтотОбъект);

КонецПроцедуры

#КонецОбласти // ЯзыковыеМодели
