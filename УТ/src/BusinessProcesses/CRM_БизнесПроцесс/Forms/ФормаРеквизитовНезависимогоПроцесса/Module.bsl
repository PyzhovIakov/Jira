
#Область ОписаниеПеременных

// ШаблоныЭлементовФорм
&НаКлиенте
Перем ШаблоныЭлементов_Формы;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИспользоватьПодразделения = CRM_ОбщегоНазначенияПовтИсп.ИспользоватьПодразделения();
	
	БизнесПроцессСсылка = Параметры.БизнесПроцессСсылка;
	Автор = Параметры.Автор;
	Важность = Параметры.Важность;
	Дата = Параметры.Дата;
	ДатаЗавершения = Параметры.ДатаЗавершения;
	КартаМаршрута = Параметры.КартаМаршрута;
	КонтактноеЛицо = Параметры.КонтактноеЛицо;
	Наименование = Параметры.Наименование;
	Номер = Параметры.Номер;
	Описание = Параметры.Описание;
	Организация = Параметры.Организация;
	Ответственный = Параметры.Ответственный;
	Партнер = Параметры.Партнер;
	ПланируемаяДатаЗавершения = Параметры.ПланируемаяДатаЗавершения;
	Подразделение = Параметры.Подразделение;
	Проект = Параметры.Проект;
	Сумма = Параметры.Сумма;
	Предмет = Параметры.Предмет;
	ПотенциальныйКлиент = Параметры.ПотенциальныйКлиент;
	
	ЗадачаВремяОкончание = Параметры.ЗадачаВремяОкончание;
	ЗадачаДатаОкончание = Параметры.ЗадачаДатаОкончание;
	CRM_ОсновнаяКатегория = Параметры.CRM_ОсновнаяКатегория;
	Исполнитель = Параметры.Исполнитель;
	
	ВалютаДокумента = Строка(Константы.ВалютаУправленческогоУчета.Получить());
	
	Элементы.НадписьСостояниеБизнесПроцесса.Заголовок = Параметры.СостояниеБизнесПроцесса.СтрокаСостояния;
	Элементы.НадписьСостояниеБизнесПроцесса.Высота = Параметры.СостояниеБизнесПроцесса.Высота;
	
	ПредметПредставление 	= CRM_ОбщегоНазначенияСервер.ПолучитьПредставлениеПредметаДокумента(Предмет);
	Элементы.ПредметПредставление.Видимость = ЗначениеЗаполнено(Предмет);
	
	СписокКатегорий.ЗагрузитьЗначения(Параметры.МассивКатегорий);
	
	ОтрисоватьКатегорииНаФорме();
	
	ИмяТекущейГруппыСвернутьРазвернуть = "Информация";
	
	Элементы.ЗавершитьБизнесПроцессДосрочно.Видимость = КартаМаршрута.РазрешеноДосрочноеЗавершение;
	ЕстьПравоНаОткатБП = (РольДоступна("ПолныеПрава") Или РольДоступна("CRM_УправлениеБизнесПроцессами"));
	Элементы.ФормаПередвинутьЭтап.Видимость	= (ЕстьПравоНаОткатБП Или КартаМаршрута.РазрешитьПеремещатьТекущийЭтап);
	
	ТипКлиента = CRM_КлиентыСервер.ПолучитьТипКлиента("БизнесПроцессы",
		Партнер, ПотенциальныйКлиент, CRM_ИспользоватьПотенциальныхКлиентов);
	УстановитьВидимостьЭлементов();
	ВидимостьГрупп();
	
	// СтандартныеПодсистемы.Свойства
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Свойства") Тогда
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
		ДополнительныеПараметры.Вставить("Объект", БизнесПроцессСсылка);
		МодульУправлениеСвойствами = ОбщегоНазначения.ОбщийМодуль("CRM_УправлениеСвойствами");
		МодульУправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
	Если Параметры.Свойство("ТолькоПросмотр") Тогда
		ТолькоПросмотр = (Параметры.ТолькоПросмотр И Не ЕстьПравоНаОткатБП);
	КонецЕсли;
	
	Если ТолькоПросмотр Тогда
		Элементы.ДекорацияВыбратьГруппу.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Создан новый партнер" Тогда
		Если ТипЗнч(Источник) = Тип("ФормаКлиентскогоПриложения") Тогда
			Попытка
				бФормаОткрытаИзФормыЭтогоСобытия = (Источник.ВладелецФормы = ЭтотОбъект);
			Исключение
				бФормаОткрытаИзФормыЭтогоСобытия = Ложь;
			КонецПопытки;
		Иначе
			бФормаОткрытаИзФормыЭтогоСобытия = Ложь;
		КонецЕсли;
		Если бФормаОткрытаИзФормыЭтогоСобытия Тогда
			Если ТипЗнч(Параметр) = Тип("СправочникСсылка.Партнеры") Тогда
				ОбновитьПартнераБизнесПроцесса(БизнесПроцессСсылка, Параметр);
				Оповестить("ИзменениеПартнераВБизнесПроцессе", БизнесПроцессСсылка);
			ИначеЕсли ТипЗнч(Параметр) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
				ОбновитьПартнераБизнесПроцесса(БизнесПроцессСсылка,
					 CRM_ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(Параметр, "Владелец"),
					 Параметр);
				Оповестить("ИзменениеПартнераВБизнесПроцессе", БизнесПроцессСсылка);
			КонецЕсли;
			Партнер = CRM_ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(БизнесПроцессСсылка, "Партнер");
			ВидимостьГрупп();	
		КонецЕсли;
	КонецЕсли;
	// СтандартныеПодсистемы.Свойства
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.Свойства") Тогда
		МодульУправлениеСвойствамиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеСвойствамиКлиент");
		Если МодульУправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
			ОбновитьЭлементыДополнительныхРеквизитов();
		КонецЕсли;
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	// СтандартныеПодсистемы.Свойства
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Свойства") Тогда
		МодульУправлениеСвойствами = ОбщегоНазначения.ОбщийМодуль("УправлениеСвойствами");
		МодульУправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КонтактноеЛицоПриИзменении(Элемент)
	
	ИзмененБизнесПроцесс = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	ИзмененБизнесПроцесс = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ИзмененБизнесПроцесс = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	ИзмененБизнесПроцесс = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеПриИзменении(Элемент)
	ИзмененБизнесПроцесс = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СуммаПриИзменении(Элемент)
	ИзмененБизнесПроцесс = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончаниеПриИзменении(Элемент)
	ИзмененаЗадача = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ВремяОкончаниеПриИзменении(Элемент)
	ИзмененаЗадача = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ВремяОкончаниеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Дополнительно = Новый Структура;
	Дополнительно.Вставить("Элемент", Элемент);
	Дополнительно.Вставить("Данные", "ЗадачаВремяОкончание");
	Дополнительно.Вставить("ПриоритетДатыНачала", Ложь);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаОповещенияВыбранногоВремени", ЭтотОбъект, Дополнительно);
	CRM_ОбщегоНазначенияКлиентСервер.ВыбратьВремяИзСписка(ЭтотОбъект, ЗадачаВремяОкончание, Элемент, , ,
		 ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПартнерПриИзменении(Элемент)
	
	Если Элементы.ГруппаКонтейнерФормРегистрации.ПодчиненныеЭлементы.Количество() > 0 Тогда 
														// Находится в режиме ввода Контакта из ПК
														// по существующему клиенту
		ЭлементСИдентификатором = Элементы.ГруппаКонтейнерФормРегистрации.ПодчиненныеЭлементы[0];
		CRM_ШаблоныЭлементовФормКлиент.ОбновитьЗначениеРеквизита(ШаблоныЭлементов_Формы[Прав(ЭлементСИдентификатором.Имя,
			 37)],
			"ПереданныйКлиент", Партнер);
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Партнер) Тогда
		КонтактноеЛицо = ВернутьОсновноеКонтактноеЛицо(Партнер);
	КонецЕсли;
	
	ИзмененБизнесПроцесс = Истина;
	
КонецПроцедуры


&НаКлиенте
Процедура ПотенциальныйКлиентПриИзменении(Элемент)
	
	ИзмененБизнесПроцесс = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланируемаяДатаЗавершенияПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ПланируемаяДатаЗавершения) Тогда
		Если НачалоДня(ПланируемаяДатаЗавершения) < НачалоДня(Дата) Тогда
			СтрокаСообщения = Нстр("ru='Планируемая дата завершения не может быть меньше даты создания,
				| она будет скорректирована.';en='The planned completion date can not be less than the creation date,
				| it will be adjusted.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения, , "ПланируемаяДатаЗавершения");
			ПланируемаяДатаЗавершения = Дата;
		КонецЕсли;
	КонецЕсли;
	
	ИзмененБизнесПроцесс = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияВыбратьГруппуНажатие(Элемент)
	
	МассивКатегорий = СписокКатегорий.ВыгрузитьЗначения();
	
	СтруктураОписаниеКатегорий = Новый Структура("МассивКатегорий,ОсновнаяКатегория,Владелец",
		 МассивКатегорий, CRM_ОсновнаяКатегория,
		 Исполнитель);
	ОписаниеОповещения = Новый ОписаниеОповещения("ДекорацияВыбратьГруппуНажатиеЗавершение", ЭтотОбъект);
	ОткрытьФорму("Задача.ЗадачаИсполнителя.Форма.CRM_ФормаВыборКатегорий",
		 Новый Структура("ОписаниеКатегорий", СтруктураОписаниеКатегорий),
		ЭтотОбъект, , , , ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры
	
&НаКлиенте
Процедура ПредметПредставлениеНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	CRM_ОбщегоНазначенияКлиент.ОткрытьПредмет(Предмет);
КонецПроцедуры

&НаКлиенте
Процедура БизнесПроцессСсылкаПотенциальныйКлиентОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Ключ",
		 CRM_ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(БизнесПроцессСсылка,
		 "ПотенциальныйКлиент"));
	ПараметрыОткрытия.Вставить("ТекущийИнтерес", БизнесПроцессСсылка);
	
	CRM_ЦентрМониторингаКлиент.НачатьЗамерОперацииБизнесСтатистики(
		"CRM_Статистика.ПотенциальныйКлиент.ДлительностьСценариев.ВремяОткрытияФормы", Истина);
	
	ОткрытьФорму("Справочник.CRM_ПотенциальныеКлиенты.ФормаОбъекта", ПараметрыОткрытия, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Закрыть(ПодготовитьСтруктуруДанных());
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Перенаправить(Команда)
	
	МассивЗадач = Новый Массив;
	МассивЗадач.Добавить(БизнесПроцессСсылка);
	CRM_БизнесПроцессыИЗадачиКлиент.ОбработкаКомандыПеренаправить(МассивЗадач, Новый Структура("Источник", ЭтотОбъект));
	
	ОбновитьОтветственногоПодразделение();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьБизнесПроцессДосрочно(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершитьБизнесПроцессДосрочноЗавершение", ЭтотОбъект);
	ОткрытьФорму("БизнесПроцесс.CRM_БизнесПроцесс.Форма.ФормаДосрочногоЗавершения", , ЭтотОбъект, , , ,
		 ОписаниеОповещения,
		 РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик команды формы "СоздатьНовогоКлиента".
//
Процедура СоздатьНовогоКлиента(Команда)
	// ШаблоныЭлементовФорм
	Элементы.СворачиваемаяГруппаДанныеПотенциальногоКлиента.Видимость = Ложь;
	Элементы.ГруппаЗаголовокДанныеПотенциальногоКлиента.Видимость = Ложь;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("СозданиеКлиентаЗавершение", ЭтотОбъект);
	ШаблоныЭлементов_СоздатьЭлементы("Обработка.CRM_СлужебнаяШаблоныЭлементовФорм.Форма.ШаблонСозданиеКлиентаИКонтакта",
		Новый Структура("Ответственный, ПотенциальныйКлиент", Ответственный, 
			CRM_ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(БизнесПроцессСсылка, "ПотенциальныйКлиент")), ОписаниеОповещения, "ГруппаКонтейнерФормРегистрации");
	
	ПотенциальныйКлиент = ПредопределенноеЗначение("Справочник.CRM_ПотенциальныеКлиенты.ПустаяСсылка");
	ТипКлиента = "Клиент";
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры // СоздатьНовогоКлиента()

&НаКлиенте
Процедура Создать_Контакт(Команда)
	
	Элементы.СворачиваемаяГруппаДанныеПотенциальногоКлиента.Видимость = Ложь;
	Элементы.ГруппаЗаголовокДанныеПотенциальногоКлиента.Видимость = Ложь;
	
	Элементы.СворачиваемаяГруппаДанныеКлиента.Видимость = Истина; // отобразить поле выбора партнера
	Элементы.КонтактноеЛицо.Видимость = Ложь;
	Элементы.ГруппаСуммы.Видимость = Ложь;
	Элементы.Партнер.АвтоОтметкаНезаполненного = Истина;
	
	// ШаблоныЭлементовФорм
	ОписаниеОповещения = Новый ОписаниеОповещения("СозданиеКлиентаЗавершение", ЭтотОбъект);
	ШаблоныЭлементов_СоздатьЭлементы("Обработка.CRM_СлужебнаяШаблоныЭлементовФорм.Форма.ШаблонСозданиеКлиентаИКонтакта",
		Новый Структура("ПотенциальныйКлиент, ТолькоКонтакт", 
			CRM_ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(БизнесПроцессСсылка, "ПотенциальныйКлиент")),
			ОписаниеОповещения, "ГруппаКонтейнерФормРегистрации");
КонецПроцедуры

&НаКлиенте
Процедура ПередвинутьЭтап(Команда)
	
	ПараметрыФормы = Новый Структура("Ключ", БизнесПроцессСсылка);
	ОткрытьФорму("БизнесПроцесс.CRM_БизнесПроцесс.Форма.ФормаПеремещенияЭтапа", ПараметрыФормы,
		 ЭтотОбъект, , , , ,
		 РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда,
	 НавигационнаяСсылка = Неопределено,
	 СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Свойства") Тогда
		МодульУправлениеСвойствами = ОбщегоНазначения.ОбщийМодуль("УправлениеСвойствами");
		МодульУправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.Свойства") Тогда
		МодульУправлениеСвойствамиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеСвойствамиКлиент");
		МодульУправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.Свойства") Тогда
		МодульУправлениеСвойствамиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеСвойствамиКлиент");
		МодульУправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура ОбновитьПартнераБизнесПроцесса(БизнесПроцессСсылка, Партнер, КонтактноеЛицо = Неопределено)
	БПОбъект = БизнесПроцессСсылка.ПолучитьОбъект();
	БПОбъект.Партнер = Партнер;
	БПОбъект.КонтактноеЛицо = КонтактноеЛицо;
	БПОбъект.Записать();
КонецПроцедуры

&НаСервере
Процедура ВидимостьГрупп()
	Если ЗначениеЗаполнено(БизнесПроцессСсылка.Партнер) Тогда
		Элементы.ГруппаЗаголовокДанныеКлиента.Видимость = Истина;
		Элементы.ГруппаЗаголовокДанныеПотенциальногоКлиента.Видимость = Ложь;
		Элементы.СворачиваемаяГруппаДанныеКлиента.Видимость = Ложь;
		Элементы.СворачиваемаяГруппаДанныеПотенциальногоКлиента.Видимость = Ложь;
	ИначеЕсли ЗначениеЗаполнено(БизнесПроцессСсылка.ПотенциальныйКлиент) Тогда
		Элементы.ГруппаЗаголовокДанныеПотенциальногоКлиента.Видимость = Истина;
		Элементы.ГруппаЗаголовокДанныеКлиента.Видимость = Ложь;
		Элементы.СворачиваемаяГруппаДанныеКлиента.Видимость = Ложь;
		Элементы.СворачиваемаяГруппаДанныеПотенциальногоКлиента.Видимость = Ложь;
	Иначе
		Элементы.ГруппаЗаголовокДанныеКлиента.Видимость = Истина;
		Элементы.ГруппаЗаголовокДанныеПотенциальногоКлиента.Видимость = Ложь;
		Элементы.СворачиваемаяГруппаДанныеКлиента.Видимость = Ложь;
		Элементы.СворачиваемаяГруппаДанныеПотенциальногоКлиента.Видимость = Ложь;
	КонецЕсли;
	Элементы.ГруппаДатыВажность1.Доступность = БизнесПроцессСсылка.КартаМаршрута.РедактироватьСрокВыполненияЗадач;
КонецПроцедуры

&НаСервере
Функция ВернутьОсновноеКонтактноеЛицо(ВыбранныйПартнер)
	
	Возврат ВыбранныйПартнер.CRM_ОсновноеКонтактноеЛицо;
	
КонецФункции

&НаСервере
Процедура ОбновитьОтветственногоПодразделение()
	
	Ответственный = БизнесПроцессСсылка.Ответственный;
	Подразделение = БизнесПроцессСсылка.Подразделение;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияВыбратьГруппуНажатиеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Модифицированность = Истина;
		ИзмененаЗадача = Истина;
		
		СписокКатегорий.Очистить();
		Для Каждого СтрокаКатегория Из Результат.СписокВыбранныеКатегории Цикл
			СписокКатегорий.Добавить(СтрокаКатегория.Значение);
		КонецЦикла;
		
		CRM_ОсновнаяКатегория = Результат.ОсновнаяКатегория;
		
		ОтрисоватьКатегорииНаФорме();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОтрисоватьКатегорииНаФорме()
	ПрефиксРеквизита = "ПолеВводаКатегория";
	МассивУдаляемыхРеквизитов = Новый Массив();
	нИндекс = 1;
	Пока Истина Цикл
		ИмяРеквизита = ПрефиксРеквизита + Формат(нИндекс, "ЧДЦ=0; ЧН=0; ЧГ=");
		Попытка
			ТестовыйРеквизит = ЭтотОбъект[ИмяРеквизита];
			МассивУдаляемыхРеквизитов.Добавить(ИмяРеквизита);
			нИндекс = нИндекс + 1;
		Исключение
			Прервать;
		КонецПопытки;
	КонецЦикла;
	
	МассивКатегорий = Новый Массив();
	Если ЗначениеЗаполнено(CRM_ОсновнаяКатегория) Тогда
		МассивКатегорий.Добавить(CRM_ОсновнаяКатегория);
	КонецЕсли;
	
	Для Каждого СтрокаКатегория Из СписокКатегорий Цикл
		Если МассивКатегорий.Найти(СтрокаКатегория.Значение) = Неопределено Тогда
			МассивКатегорий.Добавить(СтрокаКатегория.Значение);
		КонецЕсли;
	КонецЦикла;
	
	МассивДобавляемыхРеквизитов = Новый Массив();
	ОписаниеТиповКатегория = Новый ОписаниеТипов("СправочникСсылка.CRM_КатегорииПользователей");
	Для нИндекс = 1 По МассивКатегорий.Количество() Цикл
		ИмяРеквизита = ПрефиксРеквизита + Формат(нИндекс, "ЧДЦ=0; ЧН=0; ЧГ=");
		
		РеквизитКатегория = Новый РеквизитФормы(ИмяРеквизита, ОписаниеТиповКатегория);
		МассивДобавляемыхРеквизитов.Добавить(РеквизитКатегория);
	КонецЦикла;
	
	Для Каждого УдаляемыйЭлемент Из МассивУдаляемыхРеквизитов Цикл
		Если Элементы.Найти(УдаляемыйЭлемент) <> Неопределено Тогда
			Элементы.Удалить(Элементы[УдаляемыйЭлемент]);
		КонецЕсли;
	КонецЦикла;
	ИзменитьРеквизиты(МассивДобавляемыхРеквизитов, МассивУдаляемыхРеквизитов);
	
	нИндекс = 1;
	Для Каждого ДобавляемаяКатегория Из МассивКатегорий Цикл
		ИмяРеквизита = ПрефиксРеквизита + Формат(нИндекс, "ЧДЦ=0; ЧН=0; ЧГ=");
		
		ЭтотОбъект[ИмяРеквизита] = ДобавляемаяКатегория;
		
		ЦветФона = Новый Цвет(ДобавляемаяКатегория.ЦветКрасный, ДобавляемаяКатегория.ЦветЗеленый,
			 ДобавляемаяКатегория.ЦветСиний);
		ЭлементыЗаголовка = Новый Массив;
		Если нИндекс = 1 Тогда
			ЭлементыЗаголовка.Добавить(Новый ФорматированнаяСтрока(" " + ДобавляемаяКатегория.Наименование 
				+ " ", Новый Шрифт(, , Истина), CRM_ОбщегоНазначенияКлиентСервер.ПолучитьКонтрастныйЦвет(ЦветФона), ЦветФона));
		Иначе	
			ЭлементыЗаголовка.Добавить(Новый ФорматированнаяСтрока(" " + ДобавляемаяКатегория.Наименование 
				+ " ", , CRM_ОбщегоНазначенияКлиентСервер.ПолучитьКонтрастныйЦвет(ЦветФона), ЦветФона));
		КонецЕсли;
		ЭлементКатегория = Элементы.Добавить(ИмяРеквизита, Тип("ДекорацияФормы"), Элементы.ГруппаКатегории);
		ЭлементКатегория.Вид = ВидДекорацииФормы.Надпись;
		ЭлементКатегория.Заголовок = Новый ФорматированнаяСтрока(ЭлементыЗаголовка);
		ЭлементКатегория.Подсказка = ДобавляемаяКатегория.Наименование;
		ЭлементКатегория.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Лево;
		ЭлементКатегория.АвтоМаксимальнаяШирина = Ложь;
		ЭлементКатегория.РастягиватьПоГоризонтали = Ложь;
		
		нИндекс = нИндекс + 1;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПолеВводаИгнорироватьОбработчикНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПолеВводаИгнорироватьОбработчикОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПолеВводаИгнорироватьОбработчикОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Функция ПодготовитьСтруктуруДанных()
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Важность", Важность);
	СтруктураДанных.Вставить("КонтактноеЛицо", КонтактноеЛицо);
	СтруктураДанных.Вставить("Наименование", Наименование);
	СтруктураДанных.Вставить("Описание", Описание);
	СтруктураДанных.Вставить("Организация", Организация);
	СтруктураДанных.Вставить("Партнер", Партнер);
	СтруктураДанных.Вставить("ПланируемаяДатаЗавершения", ПланируемаяДатаЗавершения);
	СтруктураДанных.Вставить("Подразделение", Подразделение);
	СтруктураДанных.Вставить("Сумма", Сумма);
	СтруктураДанных.Вставить("ВремяОкончание", ЗадачаВремяОкончание);
	СтруктураДанных.Вставить("ДатаОкончание", ЗадачаДатаОкончание);
	СтруктураДанных.Вставить("МассивКатегорий", СписокКатегорий.ВыгрузитьЗначения());
	СтруктураДанных.Вставить("CRM_ОсновнаяКатегория", CRM_ОсновнаяКатегория);
	СтруктураДанных.Вставить("ИзмененБизнесПроцесс", ИзмененБизнесПроцесс);
	СтруктураДанных.Вставить("ИзмененаЗадача", ИзмененаЗадача);
	СтруктураДанных.Вставить("ПотенциальныйКлиент", ПотенциальныйКлиент);
	
	Возврат СтруктураДанных;
	
КонецФункции

&НаКлиенте
// Процедура обработки выбора времени из списка.
//
Процедура ОбработкаОповещенияВыбранногоВремени(ВыбранноеВремя, Дополнительно) Экспорт
	Если ВыбранноеВремя <> Неопределено Тогда
		ЭтотОбъект[Дополнительно.Данные] = ВыбранноеВремя.Значение;
		ИзмененаЗадача = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СвернутьРазвернутьГруппу(Элемент)
	ИмяГруппыСвернутьРазвернуть = Элемент.Имя;
	ИмяГруппыСвернутьРазвернуть = СтрЗаменить(ИмяГруппыСвернутьРазвернуть, "ДекорацияОткрыть", "");
	ИмяГруппыСвернутьРазвернуть = СтрЗаменить(ИмяГруппыСвернутьРазвернуть, "ДекорацияЗакрыть", "");
	ИмяГруппыСвернутьРазвернуть = СтрЗаменить(ИмяГруппыСвернутьРазвернуть, "ЗаголовокГруппы", "");
	
	Если НЕ ИмяТекущейГруппыСвернутьРазвернуть = ИмяГруппыСвернутьРазвернуть
		И Элементы["ГруппаЗаголовок" + ИмяТекущейГруппыСвернутьРазвернуть].Видимость Тогда
		
		ИзменитьСвернутостьГруппы(ИмяТекущейГруппыСвернутьРазвернуть);
	КонецЕсли;
	ИзменитьСвернутостьГруппы(ИмяГруппыСвернутьРазвернуть);
	ПодключитьОбработчикОжидания("УстановитьАктивностьПослеСворачиванияРазворачиванияГруппы", 0.0001, Истина);
	
	ИмяТекущейГруппыСвернутьРазвернуть = ИмяГруппыСвернутьРазвернуть;
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьСвернутостьГруппы(ИмяГруппы, Свернуть = Неопределено)
	Элементы["СворачиваемаяГруппа" + ИмяГруппы].Видимость = ?(Свернуть = Неопределено,
		 Не Элементы["СворачиваемаяГруппа" + ИмяГруппы].Видимость,
		 Не Свернуть);
	Элементы["ДекорацияОткрыть" + ИмяГруппы].Видимость = ?(Свернуть = Неопределено,
		 Не Элементы["ДекорацияОткрыть" + ИмяГруппы].Видимость,
		 Свернуть);
	Элементы["ДекорацияЗакрыть" + ИмяГруппы].Видимость = ?(Свернуть = Неопределено,
		 Не Элементы["ДекорацияЗакрыть" + ИмяГруппы].Видимость,
		 Не Свернуть);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьАктивностьПослеСворачиванияРазворачиванияГруппы()
	Если Элементы["ДекорацияОткрыть" + ИмяГруппыСвернутьРазвернуть].Видимость Тогда
		ТекущийЭлемент = Элементы["ДекорацияОткрыть" + ИмяГруппыСвернутьРазвернуть];
	Иначе
		ТекущийЭлемент = Элементы["ДекорацияЗакрыть" + ИмяГруппыСвернутьРазвернуть];
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьБизнесПроцессДосрочноЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		
		СтруктураДанных = ПодготовитьСтруктуруДанных();
		СтруктураДанных.Вставить("ПараметрыДосрочногоЗавершения", Результат);
		Закрыть(СтруктураДанных);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СозданиеКлиентаЗавершение(Результат, Шаблон) Экспорт
	
	// ШаблоныЭлементовФорм
	ШаблоныЭлементов_УдалитьЭлементы(Результат.ИдентификаторФормыСтрокой);
	Если Результат.Свойство("Данные") Тогда
		ОбновитьПартнераБизнесПроцесса(БизнесПроцессСсылка, Результат.Данные.Клиент, Результат.Данные.Контакт);
		Партнер = Результат.Данные.Клиент;
		КонтактноеЛицо = Результат.Данные.Контакт;
		
		Элементы.КонтактноеЛицо.Видимость = Истина;
		Элементы.ГруппаСуммы.Видимость = Истина;
		// Вызов ПартнерПриИзменении(Неопределено) и КонтактноеЛицоПриИзменении(Неопределено)
		// в данной форме не имеет смысла
	Иначе
		Партнер = Неопределено;
		Элементы.СворачиваемаяГруппаДанныеКлиента.Видимость = Ложь;
		Элементы.КонтактноеЛицо.Видимость = Истина;
		Элементы.ГруппаСуммы.Видимость = Истина;
		Элементы.Партнер.АвтоОтметкаНезаполненного = Ложь;
	КонецЕсли;
	
	ВидимостьГрупп();
	
	ИзмененБизнесПроцесс = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ШаблоныЭлементовФорм

&НаКлиенте
Процедура ШаблоныЭлементов_СоздатьЭлементы(ИмяФормыШаблона, Параметры, ОписаниеОповещенияОЗакрытии ,
	 ИмяГруппыРазмещения)
	
	Если ШаблоныЭлементов_Формы = Неопределено Тогда
		ШаблоныЭлементов_Формы = Новый Структура;
	КонецЕсли;
	
	ШаблоныЭлементов_ОписаниеФормы = CRM_ШаблоныЭлементовФормКлиент.ОписаниеФормы(ЭтотОбъект, ИмяФормыШаблона, Параметры);
	Если ШаблоныЭлементов_ОписаниеФормы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ШаблоныЭлементов_ОписаниеФормы.ФормаШаблона.ОписаниеОповещенияОЗакрытии = ОписаниеОповещенияОЗакрытии;
	
	ШаблоныЭлементов_Формы.Вставить(ШаблоныЭлементов_ОписаниеФормы.ФормаШаблона.ИдентификаторФормыСтрокой,
		 ШаблоныЭлементов_ОписаниеФормы.ФормаШаблона);
	ШаблоныЭлементов_СоздатьЭлементыНаСервере(ШаблоныЭлементов_ОписаниеФормы.АдресОписанияФормыШаблона,
		 ИмяГруппыРазмещения,
		 ШаблоныЭлементов_ОписаниеФормы.ФормаШаблона.ИдентификаторФормыСтрокой);
	
КонецПроцедуры	

&НаСервере
Процедура ШаблоныЭлементов_СоздатьЭлементыНаСервере(АдресОписанияФормыШаблона, ИмяГруппыРазмещения,
	 ИдентификаторШаблона,
	 ИмяГруппыОбновления = Неопределено)
	
	ОбновлениеГруппы = Элементы.Найти(ИмяГруппыОбновления);
	CRM_ШаблоныЭлементовФорм.СоздатьЭлементыФормыПоШаблону(ЭтотОбъект, АдресОписанияФормыШаблона,
		 ИмяГруппыРазмещения, ИдентификаторШаблона,
		 ОбновлениеГруппы); 
	
КонецПроцедуры	

&НаКлиенте
Процедура ШаблоныЭлементов_ОбновитьЭлементы(ИдентификаторШаблона, // АПК:78 - исключить из проверки.
	 ИмяГруппыОбновления) Экспорт
	
	ФормаШаблона = ШаблоныЭлементов_Формы[ИдентификаторШаблона];
	
	АдресОписанияФормыШаблона = ФормаШаблона.ОписаниеФормы(СтрЗаменить(ИмяГруппыОбновления, ИдентификаторШаблона, ""));
	ЭтотОбъект["ШаблоныЭлементов_АдресОписанияФормы" + ИдентификаторШаблона] = АдресОписанияФормыШаблона;
	
	ШаблоныЭлементов_СоздатьЭлементыНаСервере(АдресОписанияФормыШаблона, "", ИдентификаторШаблона, ИмяГруппыОбновления);
	
КонецПроцедуры	

&НаКлиенте
Процедура ШаблоныЭлементов_УдалитьЭлементы(ИдентификаторФормыСтрокой)
	
	ШаблоныЭлементов_УдалитьЭлементыНаСервере(ИдентификаторФормыСтрокой);
	ШаблоныЭлементов_Формы.Удалить(ИдентификаторФормыСтрокой);
	
КонецПроцедуры	

&НаСервере
Процедура ШаблоныЭлементов_УдалитьЭлементыНаСервере(ИдентификаторФормыСтрокой)
	
	CRM_ШаблоныЭлементовФорм.УдалитьЭлементыФормы(ЭтотОбъект, ИдентификаторФормыСтрокой);
	
КонецПроцедуры	

&НаКлиенте
Процедура Подключаемый_ШаблоныЭлементов_ВыполнитьКоманду(Команда) 
	CRM_ШаблоныЭлементовФормКлиент.ВыполнитьКоманду(Команда, ЭтотОбъект, ШаблоныЭлементов_Формы[Прав(Команда.Имя, 37)]);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ШаблоныЭлементов_ПриИзменении(Элемент)
	CRM_ШаблоныЭлементовФормКлиент.ПриИзменении(Элемент, ЭтотОбъект, ШаблоныЭлементов_Формы[Прав(Элемент.Имя, 37)]);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ШаблоныЭлементов_НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	CRM_ШаблоныЭлементовФормКлиент.НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка,
		 ЭтотОбъект, ШаблоныЭлементов_Формы[Прав(Элемент.Имя,
		 37)]);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ШаблоныЭлементов_ОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	CRM_ШаблоныЭлементовФормКлиент.ОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка,
		 ЭтотОбъект, ШаблоныЭлементов_Формы[Прав(Элемент.Имя,
		 37)]);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ШаблоныЭлементов_Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	CRM_ШаблоныЭлементовФормКлиент.Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка,
		 ЭтотОбъект, ШаблоныЭлементов_Формы[Прав(Элемент.Имя,
		 37)]);
КонецПроцедуры

&НаКлиенте
Процедура ТипКлиентаПриИзменении(Элемент)
	УстановитьВидимостьЭлементов();
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементов()
	
	ТипКлиентаПартнер = (ТипКлиента = "Клиент");
	
	Элементы.Партнер.Видимость             = ТипКлиентаПартнер;
	Элементы.КонтактноеЛицо.Видимость      = ТипКлиентаПартнер;
	Элементы.ГруппаСуммы.Видимость         = ТипКлиентаПартнер;
	Элементы.ПотенциальныйКлиент.Видимость = Не ТипКлиентаПартнер;
	Элементы.Подразделение.Видимость       = ИспользоватьПодразделения;
	
	//Элементы.ДекорацияКлиент.Видимость = Не CRM_ИспользоватьПотенциальныхКлиентов;
	//Элементы.ТипКлиента.Видимость      = CRM_ИспользоватьПотенциальныхКлиентов;
	
КонецПроцедуры

#КонецОбласти
