
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Для НомерПотока = 0 По 10 Цикл
		НомераПотоков.Добавить(НомерПотока);
	КонецЦикла;
	
	ПрочитатьДанные();
	ОбновитьПредставлениеДанных();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Модифицированность Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить?'");
	
	ОповещениеЗавершения = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
	
	ПоказатьВопрос(ОповещениеЗавершения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
		
	Если Результат = КодВозвратаДиалога.Да Тогда
		СохранитьДанные();
	КонецЕсли;
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НомераПотоковПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.НомераПотоков.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		
		Элементы.НастройкаПотоков.ОтборСтрок = Неопределено;
		
	Иначе
		
		ДанныеОтбора = Новый Структура("НомерПотока", ТекущиеДанные.Значение);
		Элементы.НастройкаПотоков.ОтборСтрок = Новый ФиксированнаяСтруктура(ДанныеОтбора);
		
		Для Сч = 0 По 10 Цикл
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
				"Команда_Поток" + Сч, "Доступность", ТекущиеДанные.Значение <> Сч);
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
				"Меню_Поток" + Сч, "Доступность", ТекущиеДанные.Значение <> Сч);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НомераПотоковПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Если Строка = Неопределено Тогда
		ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.НеОбрабатывать;
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура НомераПотоковПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	НовыйНомерПотока = Элемент.ДанныеСтроки(Строка).Значение;
	
	Для Каждого Строка Из ПараметрыПеретаскивания.Значение Цикл
		Строка.НомерПотока = НовыйНомерПотока;
	КонецЦикла;
	
	Модифицированность = Истина;
	
	ОбновитьПредставлениеДанных();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохнанитьНастройкуИЗакрыть(Команда)
	СохранитьДанные();
	Модифицированность = Ложь;
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройку(Команда)
	СохранитьДанные();
	Модифицированность = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура Переместить(Команда)
	
	ЧастиИмени = СтрРазделить(Команда.Имя, "_");
	НовыйНомерПотока = Число(СтрЗаменить(ЧастиИмени[1], "Поток", ""));
	
	Для Каждого ИдентификаторСтроки Из Элементы.НастройкаПотоков.ВыделенныеСтроки Цикл
		ДанныеСтроки = Элементы.НастройкаПотоков.ДанныеСтроки(ИдентификаторСтроки);
		ДанныеСтроки.НомерПотока = НовыйНомерПотока;
	КонецЦикла;
	
	ОбновитьПредставлениеДанных();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПрочитатьДанные()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПотокиДоставкиПочты.НомерПотока КАК НомерПотока,
	|	ЕСТЬNULL(УчетныеЗаписиЭлектроннойПочты.Ссылка, ЗНАЧЕНИЕ(Справочник.УчетныеЗаписиЭлектроннойПочты.ПустаяСсылка)) КАК УчетнаяЗапись,
	|	ВЫБОР
	|		КОГДА УчетныеЗаписиЭлектроннойПочты.Предопределенный
	|			ТОГДА 5
	|		КОГДА УчетныеЗаписиЭлектроннойПочты.ПометкаУдаления
	|			ТОГДА 4
	|		КОГДА НЕ УчетныеЗаписиЭлектроннойПочты.ПометкаУдаления
	|			ТОГДА 3
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПометкаУдаления
	|ИЗ
	|	РегистрСведений.CRM_ПотокиДоставкиПочты КАК ПотокиДоставкиПочты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УчетныеЗаписиЭлектроннойПочты КАК УчетныеЗаписиЭлектроннойПочты
	|		ПО ПотокиДоставкиПочты.УчетнаяЗапись = УчетныеЗаписиЭлектроннойПочты.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерПотока,
	|	УчетнаяЗапись");
	
	НастройкаПотоков.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура СохранитьДанные()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПотокиДоставкиПочты.НомерПотока КАК НомерПотока
	|ИЗ
	|	РегистрСведений.CRM_ПотокиДоставкиПочты КАК ПотокиДоставкиПочты");
	ВключеннныеПотокиПрежние = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("НомерПотока");
	ВключенныеПотокиНовые = НастройкаПотоков.Выгрузить().ВыгрузитьКолонку("НомерПотока");
	
	Для Каждого НомерПотока Из ВключеннныеПотокиПрежние Цикл
		Если НомерПотока = 0 Тогда
			Продолжить;
		КонецЕсли;
		Если ВключенныеПотокиНовые.Найти(НомерПотока) = Неопределено Тогда
			ИмяЗадания = "CRM_ПолучениеИОтправкаЭлектронныхПисемПоток" + НомерПотока;
			РегламентныеЗаданияСервер.УстановитьИспользованиеРегламентногоЗадания(
				Метаданные.РегламентныеЗадания[ИмяЗадания],
				Ложь);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого НомерПотока Из ВключенныеПотокиНовые Цикл
		Если НомерПотока = 0 Тогда
			Продолжить;
		КонецЕсли;
		Если ВключеннныеПотокиПрежние.Найти(НомерПотока) = Неопределено Тогда
			ИмяЗадания = "CRM_ПолучениеИОтправкаЭлектронныхПисемПоток" + НомерПотока;
			РегламентныеЗаданияСервер.УстановитьИспользованиеРегламентногоЗадания(
				Метаданные.РегламентныеЗадания[ИмяЗадания],
				Истина);
		КонецЕсли;
	КонецЦикла;
	
	НаборЗаписей = РегистрыСведений.CRM_ПотокиДоставкиПочты.СоздатьНаборЗаписей();
	НаборЗаписей.Загрузить(НастройкаПотоков.Выгрузить());
	НаборЗаписей.Записать();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПредставлениеДанных()
	
	Для Каждого Элемент Из НомераПотоков Цикл
		
		Если Элемент.Значение = 0 Тогда
			Элемент.Представление = НСтр("ru = 'Не в потоке'");
			Продолжить;
		КонецЕсли;
			
		Элемент.Представление = НСтр("ru = 'Поток'") + " " + Строка(Элемент.Значение);
		Элемент.Картинка = БиблиотекаКартинок.CRM_РежимРедактированияСпискаЭлементов;
		
		НайденныеСтроки = НастройкаПотоков.НайтиСтроки(Новый Структура("НомерПотока", Элемент.Значение));
		Если НайденныеСтроки.Количество() > 0 Тогда
			Элемент.Представление = Элемент.Представление + " (" + НайденныеСтроки.Количество() + ")";
			Элемент.Картинка = БиблиотекаКартинок.CRM_РежимРедактированияСпискаЭлементовАктивно;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
