		#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура - обработчик события формы "ПриСозданииНаСервере"
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Владелец") Тогда
		Элементы.ГруппаПользователи.Видимость = Ложь;
		ПользовательВладелец = Параметры.Владелец;
		
		Если Список.КомпоновщикНастроек.Настройки.Отбор.Элементы.Количество() > 0 Тогда
			  ТекОтбор = Список.КомпоновщикНастроек.Настройки.Отбор.Элементы[0];
		Иначе ТекОтбор = Список.Отбор.Элементы[0];
		КонецЕсли;
		ТекОтбор.ПравоеЗначение = ПользовательВладелец;
		ТекОтбор.Использование = Истина;
	КонецЕсли;

	ТолькоПросмотр	= НЕ сфпСофтФонПроСервер.сфпРолиДоступны("ПолныеПрава, ДобавлениеИзменениеПользователей");

	ИспользоватьГруппыПользователей = сфпСофтФонПроСервер.сфпИспользоватьГруппыПользователей();
	Если ИспользоватьГруппыПользователей Тогда
		Элементы.КонтролируемыйПользователь.Заголовок =
			НСтр("ru = 'Контролируемый пользователь / группа пользователей'");

	Иначе	
		Элементы.КонтролируемыйПользователь.Заголовок = НСтр("ru = 'Контролируемый пользователь'");
		
		Если Список.КомпоновщикНастроек.Настройки.Отбор.Элементы.Количество() > 0 Тогда
			  ТекОтбор = Список.КомпоновщикНастроек.Настройки.Отбор.Элементы[1];
		Иначе ТекОтбор = Список.Отбор.Элементы[1];
		КонецЕсли;
		ТекОтбор.ПравоеЗначение = Ложь;
		ТекОтбор.Использование = Истина;
	КонецЕсли;

КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПользователиПриАктивизацииСтроки(Элемент)
	
	Если НЕ Элементы.ГруппаПользователи.Видимость Тогда
		Возврат;
	КонецЕсли;

	ТекДанные = Элементы.Пользователи.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		  ПользовательВладелец = ТекДанные.Ссылка;
	Иначе ПользовательВладелец = "";
	КонецЕсли;
	
	Если Список.КомпоновщикНастроек.Настройки.Отбор.Элементы.Количество() > 0 Тогда
		  ТекОтбор = Список.КомпоновщикНастроек.Настройки.Отбор.Элементы[0];
	Иначе ТекОтбор = Список.Отбор.Элементы[0];
	КонецЕсли;
	ТекОтбор.ПравоеЗначение = ПользовательВладелец;
	ТекОтбор.Использование = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
// Процедура - обработчик события "Выбор" таблицы формы "Список"
//
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если НЕ (Поле.Имя = "КонтролируемыйПользователь") Тогда
		Возврат;
	КонецЕсли;
	ТД = Элемент.ТекущиеДанные;
	Если ТД = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ПараметрыФормы = Новый Структура("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("ТекущаяСтрока", ТД.КонтролируемыйПользователь);
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ТекущаяСтрока",	Элемент.ТекущаяСтрока);
	ДополнительныеПараметры.Вставить("ТекущиеДанные",	ТД);
	ОписаниеВыбора = Новый ОписаниеОповещения("ОбработкаВыбораПользователя", ЭтотОбъект, ДополнительныеПараметры);
	Если ТипЗнч(ТД.КонтролируемыйПользователь) = Тип("СправочникСсылка.ГруппыПользователей") Тогда
		ОткрытьФорму("Справочник.ГруппыПользователей.ФормаВыбора", ПараметрыФормы, ЭтотОбъект, , , , ОписаниеВыбора);
	Иначе
		ОткрытьФорму("Справочник.Пользователи.ФормаВыбора", ПараметрыФормы, ЭтотОбъект, , , , ОписаниеВыбора);
	КонецЕсли;	
КонецПроцедуры // СписокВыбор()

&НаКлиенте
// Процедура - обработчик события "ПередНачаломДобавления" таблицы формы "Список"
//
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	Если Копирование Тогда
		ТД = Элемент.ТекущиеДанные;
		Если ТД = Неопределено Тогда
			Возврат;
		КонецЕсли;
		ПараметрыФормы.Вставить("ТекущаяСтрока", ТД.КонтролируемыйПользователь);
		ДополнительныеПараметры = Новый Структура;
		Если ТипЗнч(ТД.КонтролируемыйПользователь) = Тип("СправочникСсылка.ГруппыПользователей") Тогда
			ДополнительныеПараметры.Вставить("ЭтоГруппа", Истина);
			ОписаниеВыбора = Новый ОписаниеОповещения("ОбработкаДобавленияПользователя", ЭтотОбъект, ДополнительныеПараметры);
			ОткрытьФорму("Справочник.ГруппыПользователей.ФормаВыбора", ПараметрыФормы, ЭтотОбъект, , , , ОписаниеВыбора);
		Иначе
			ДополнительныеПараметры.Вставить("ЭтоГруппа", Ложь);
			ОписаниеВыбора = Новый ОписаниеОповещения("ОбработкаДобавленияПользователя", ЭтотОбъект, ДополнительныеПараметры);
			ОткрытьФорму("Справочник.Пользователи.ФормаВыбора", ПараметрыФормы, ЭтотОбъект, , , , ОписаниеВыбора);
		КонецЕсли;	
	Иначе
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("РежимВыбора",			Истина);
		ПараметрыФормы.Вставить("МножественныйВыбор",	Истина);
		ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",	Ложь);
		ПараметрыФормы.Вставить("ВыборГруппПользователей", ИспользоватьГруппыПользователей);
		ОткрытьФорму("Справочник.Пользователи.ФормаВыбора", ПараметрыФормы, ЭтотОбъект);
	КонецЕсли;
КонецПроцедуры // СписокПередНачаломДобавления()

&НаКлиенте
// Процедура - обработчик события "ПередНачаломИзменения" таблицы формы "Список"
//
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
	ТД = Элемент.ТекущиеДанные;
	Если ТД = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ПараметрыФормы = Новый Структура("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("ТекущаяСтрока", ТД.КонтролируемыйПользователь);
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ТекущаяСтрока",	Элемент.ТекущаяСтрока);
	ДополнительныеПараметры.Вставить("ТекущиеДанные",	ТД);
	ОписаниеВыбора = Новый ОписаниеОповещения("ОбработкаВыбораПользователя", ЭтотОбъект, ДополнительныеПараметры);
	Если ТипЗнч(ТД.КонтролируемыйПользователь) = Тип("СправочникСсылка.ГруппыПользователей") Тогда
		ОткрытьФорму("Справочник.ГруппыПользователей.ФормаВыбора", ПараметрыФормы, ЭтотОбъект, , , , ОписаниеВыбора);
	Иначе
		ОткрытьФорму("Справочник.Пользователи.ФормаВыбора", ПараметрыФормы, ЭтотОбъект, , , , ОписаниеВыбора);
	КонецЕсли;	
КонецПроцедуры // СписокПередНачаломИзменения()

&НаКлиенте
Процедура СписокОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если Не ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		Возврат;
	КонецЕсли;
	ЗаписьДобавлена = Ложь;
	ВыбранныйЭлемент = Неопределено;

	Для Каждого ЭлементМассива Из ВыбранноеЗначение Цикл
		ЭтоГруппа = Ложь;
		Если ТипЗнч(ЭлементМассива) = Тип("СправочникСсылка.ГруппыПользователей") Тогда
			ЭтоГруппа = Истина;
		КонецЕсли;
		ДобавитьКонтролируемогоПользователя(ПользовательВладелец, ЭлементМассива, ЭтоГруппа);
		ЗаписьДобавлена = Истина;
		ВыбранныйЭлемент = ЭлементМассива;
	КонецЦикла;
	Если ЗаписьДобавлена Тогда
		УстановитьТекущуюЗапись(ПользовательВладелец, ВыбранныйЭлемент);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
// Процедура - обработчик команды формы "ПодборКонтролируемыхПользователей"
//
Процедура ПодборКонтролируемыхПользователей(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора",			Истина);
	ПараметрыФормы.Вставить("МножественныйВыбор",	Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",	Ложь);
	Если ИспользоватьГруппыПользователей Тогда
		ПараметрыФормы.Вставить("ВыборГруппПользователей", Истина);
		ПараметрыФормы.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.ГруппыИЭлементы);
	КонецЕсли;
	ОткрытьФорму("Справочник.Пользователи.ФормаВыбора", ПараметрыФормы, Элементы.Список);
	
КонецПроцедуры // ПодборКонтролируемыхПользователей()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
// Функция добавляет контролируемого пользователя
//
// Параметры:
//	Пользователь				- СправочникСсылка	- Пользователь
//	КонтролируемыйПользователь	- СправочникСсылка	- Контролируемый пользователь
//	ЭтоГруппа					- Булево			- Признак
//
// Возвращаемое значение:
//	Булево	- Результат добавления
//
Функция ДобавитьКонтролируемогоПользователя(Пользователь, КонтролируемыйПользователь, ЭтоГруппа)
	НоваяЗапись = РегистрыСведений.сфпДоступныеДляПрослушиванияПользователи.СоздатьМенеджерЗаписи();
	НоваяЗапись.Пользователь 				= Пользователь;
	НоваяЗапись.КонтролируемыйПользователь	= КонтролируемыйПользователь;
	НоваяЗапись.ЭтоГруппа					= ЭтоГруппа;
	Попытка
		НоваяЗапись.Записать(Истина);
		ЗаписьДобавлена = Истина;
	Исключение
		ЗаписьДобавлена = Ложь;
	КонецПопытки;
	Возврат ЗаписьДобавлена;
КонецФункции // ДобавитьКонтролируемогоПользователя()	

&НаСервереБезКонтекста
// Функция изменяет контролируемого пользователя
//
// Параметры:
//	ЗаписьРегистра				- РегистрСведенийЗапись	- Запись регистра сведений
//	КонтролируемыйПользователь	- СправочникСсылка		- Контролируемый пользователь
//
// Возвращаемое значение:
//	Булево	- Результат изменения
//
Функция ИзменитьКонтролируемогоПользователя(ЗаписьРегистра, КонтролируемыйПользователь)
	НоваяЗапись = РегистрыСведений.сфпДоступныеДляПрослушиванияПользователи.СоздатьМенеджерЗаписи();
	НоваяЗапись.Пользователь 				= ЗаписьРегистра.Пользователь;
	НоваяЗапись.КонтролируемыйПользователь	= КонтролируемыйПользователь;
	НоваяЗапись.Прочитать();
	Если НоваяЗапись.Выбран() Тогда
		Возврат Ложь;
	КонецЕсли;
	НоваяЗапись.Пользователь 				= ЗаписьРегистра.Пользователь;
	НоваяЗапись.КонтролируемыйПользователь	= ЗаписьРегистра.КонтролируемыйПользователь;
	НоваяЗапись.Прочитать();
	Если НЕ НоваяЗапись.Выбран() Тогда
		Возврат Ложь;
	КонецЕсли;
	НоваяЗапись.КонтролируемыйПользователь = КонтролируемыйПользователь;
	Попытка
		НоваяЗапись.Записать(Истина);
		ЗаписьИзменена = Истина;
	Исключение
		ЗаписьИзменена = Ложь;
	КонецПопытки;
	Возврат ЗаписьИзменена;
КонецФункции // ИзменитьКонтролируемогоПользователя()	

&НаСервере
// Процедура устанавливает текущую запись в списке
//
// Параметры:
//	Пользователь				- СправочникСсылка	- Пользователь
//	КонтролируемыйПользователь	- СправочникСсылка	- Контролируемый пользователь
//
Процедура УстановитьТекущуюЗапись(Пользователь, КонтролируемыйПользователь)
	Элементы.Список.Обновить();
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Пользователь", Пользователь);
	СтруктураОтбора.Вставить("КонтролируемыйПользователь",  КонтролируемыйПользователь);
	КлючЗаписи = РегистрыСведений.сфпДоступныеДляПрослушиванияПользователи.СоздатьКлючЗаписи(СтруктураОтбора);
	Элементы.Список.ТекущаяСтрока = КлючЗаписи;
КонецПроцедуры // УстановитьТекущуюЗапись()

&НаКлиенте
// Процедура - обработчик выбора пользователя
//
// Параметры:
//	ВыбранныйЭлемент		- СправочникСсылка	- Выбранный пользователь
//	ДополнительныеПараметры	- Структура			- Структура дополнительных параметров
//
Процедура ОбработкаВыбораПользователя(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ЗаписьИзменена = ИзменитьКонтролируемогоПользователя(Параметры.ТекущаяСтрока, ВыбранныйЭлемент);
	Если ЗаписьИзменена Тогда
		Параметры.ТекущиеДанные.КонтролируемыйПользователь = ВыбранныйЭлемент;
		ОбновитьОтображениеДанных();
	КонецЕсли;	
КонецПроцедуры // ОбработкаВыбораПользователя()	

&НаКлиенте
// Процедура - подключаемый обработчик подбора пользователя
//
// Параметры:
//	МассивПолучателей	- МассивПолучателей	 - Массив пользователей
//	ДополнительныеПараметры	 - Структура	 - Структура дополнительных параметров
//
Процедура Подключаемый_ОбработкаПодбораПользователя(МассивПолучателей, // АПК:78 - исключить из проверки.
	 ДополнительныеПараметры) Экспорт
	Если МассивПолучателей = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если НЕ ТипЗнч(МассивПолучателей) = Тип("Массив") Тогда
		Возврат;
	КонецЕсли;
	ЗаписьДобавлена = Ложь;	
	ВыбранныйЭлемент = Неопределено;
	Для Каждого СтрокаМассива Из МассивПолучателей Цикл
		Если ДобавитьКонтролируемогоПользователя(ЭтотОбъект.ПользовательВладелец, СтрокаМассива,
			 ДополнительныеПараметры.ЭтоГруппа) Тогда
			ЗаписьДобавлена = Истина;	
			ВыбранныйЭлемент = СтрокаМассива;
		КонецЕсли;	
	КонецЦикла;
	Если ЗаписьДобавлена Тогда
		УстановитьТекущуюЗапись(ПользовательВладелец, ВыбранныйЭлемент);
	КонецЕсли;	
КонецПроцедуры // Подключаемый_ОбработкаПодбораПользователя()	

&НаКлиенте
// Процедура - обработчик добавления пользователя
//
// Параметры:
//	ВыбранныйЭлемент		- СправочникСсылка	- Выбранный пользователь
//	ДополнительныеПараметры	- Структура			- Структура дополнительных параметров
//
Процедура ОбработкаДобавленияПользователя(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ЗаписьДобавлена = ДобавитьКонтролируемогоПользователя(ЭтотОбъект.ПользовательВладелец,
		 ВыбранныйЭлемент,
		 ДополнительныеПараметры.ЭтоГруппа);
	Если ЗаписьДобавлена Тогда
		Элементы.Список.Обновить();
	КонецЕсли;	
КонецПроцедуры // ОбработкаДобавленияПользователя()	

#КонецОбласти
