
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Процедура выполняет проверку и отправку письма автоответчика.
//
// Параметры:
//  ПолученныеПисьма - Массив	 - Полученные письма.
//  УчетнаяЗапись	 - СправочникСсылка.УчетныеЗаписиЭлектроннойПочты	 - Учетная запись.
//
Процедура ВыполнитьПроверкуИОтправкуПисьмаАвтоответчика(ПолученныеПисьма, УчетнаяЗапись) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ПолученныеПисьма.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПериодСутокМеждуАвтоответами = 3;
	СекундВСутках = 86400;
	
	ЗаписьАвтоответчика = РегистрыСведений.CRM_АвтоответчикПочты.СоздатьМенеджерЗаписи();
	ЗаписьАвтоответчика.УчетнаяЗапись = УчетнаяЗапись;
	ЗаписьАвтоответчика.Прочитать();
	
	Если Не ЗаписьАвтоответчика.Выбран() Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗаписьАвтоответчика.Включена Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяДата = ТекущаяДатаСеанса();
	
	ДатаНачалаРаботыАвтоответчика	= ЗаписьАвтоответчика.ДатаНачала;
	Если ЗначениеЗаполнено(ЗаписьАвтоответчика.ДатаЗавершения) Тогда
		ДатаКонцаРаботыАвтоответчика = КонецДня(ЗаписьАвтоответчика.ДатаЗавершения);
	Иначе
		ДатаКонцаРаботыАвтоответчика = КонецДня(Дата('39991231'));
	КонецЕсли;
	
	Если ТекущаяДата < ДатаНачалаРаботыАвтоответчика
			Или ТекущаяДата > ДатаКонцаРаботыАвтоответчика Тогда
		Возврат;
	КонецЕсли;
	
	СлужебныйПользователь = CRM_ОбщегоНазначенияПовтИсп.СлужебныйПользовательРобот();
	
	ЗапросОтправленныеАвтоответы = Новый Запрос(
	"ВЫБРАТЬ
	|	ЭлектронноеПисьмоИсходящееПолучателиПисьма.Адрес КАК Адрес,
	|	МАКСИМУМ(ЭлектронноеПисьмоИсходящее.Дата) КАК Дата
	|ИЗ
	|	Документ.ЭлектронноеПисьмоИсходящее КАК ЭлектронноеПисьмоИсходящее
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭлектронноеПисьмоИсходящее.ПолучателиПисьма КАК ЭлектронноеПисьмоИсходящееПолучателиПисьма
	|		ПО (ЭлектронноеПисьмоИсходящееПолучателиПисьма.Ссылка = ЭлектронноеПисьмоИсходящее.Ссылка)
	|ГДЕ
	|	ЭлектронноеПисьмоИсходящее.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ЭлектронноеПисьмоИсходящее.УчетнаяЗапись = &УчетнаяЗапись
	|	И ЭлектронноеПисьмоИсходящее.CRM_ЭтоАвтоОтвет
	|
	|СГРУППИРОВАТЬ ПО
	|	ЭлектронноеПисьмоИсходящееПолучателиПисьма.Адрес");
	
	ЗапросОтправленныеАвтоответы.Параметры.Вставить("УчетнаяЗапись", УчетнаяЗапись);
	ЗапросОтправленныеАвтоответы.Параметры.Вставить("ДатаНачала", ДатаНачалаРаботыАвтоответчика);
	ЗапросОтправленныеАвтоответы.Параметры.Вставить("ДатаОкончания", ДатаКонцаРаботыАвтоответчика);
	
	ВыборкаАвтоответы = ЗапросОтправленныеАвтоответы.Выполнить().Выбрать();
	
	ЗапросПолученныеПисьма = Новый Запрос(
	"ВЫБРАТЬ
	|	ЭлектронноеПисьмоВходящее.Ссылка КАК Ссылка,
	|	ЭлектронноеПисьмоВходящее.ОтправительАдрес КАК Адрес
	|ИЗ
	|	Документ.ЭлектронноеПисьмоВходящее КАК ЭлектронноеПисьмоВходящее
	|ГДЕ
	|	ЭлектронноеПисьмоВходящее.Ссылка В(&ПолученныеПисьма)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭлектронноеПисьмоВходящее.Дата
	|ИТОГИ ПО
	|	Адрес");
	
	ЗапросПолученныеПисьма.Параметры.Вставить("ПолученныеПисьма", ПолученныеПисьма);
	ВыборкаОтправители = ЗапросПолученныеПисьма.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаОтправители.Следующий() Цикл
		ВыборкаПисьма = ВыборкаОтправители.Выбрать();
		Если ВыборкаПисьма.Следующий() Тогда
			
			Если ВыборкаАвтоответы.НайтиСледующий(ВыборкаОтправители.Адрес, "Адрес") Тогда
				Если (ТекущаяДата - ВыборкаАвтоответы.Дата) > ПериодСутокМеждуАвтоответами * СекундВСутках Тогда
					СоздатьПисьмоАвтоответ(ВыборкаПисьма.Ссылка, УчетнаяЗапись, ТекущаяДата,
						СлужебныйПользователь, ЗаписьАвтоответчика);
				КонецЕсли;
				ВыборкаАвтоответы.Сбросить();
			Иначе
				СоздатьПисьмоАвтоответ(ВыборкаПисьма.Ссылка, УчетнаяЗапись, ТекущаяДата,
					СлужебныйПользователь, ЗаписьАвтоответчика);
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СоздатьПисьмоАвтоответ(ПолученноеПисьмо, УчетнаяЗапись, Дата, Пользователь, ЗаписьАвтоответчика)
	
	НачатьТранзакцию();
	
	Попытка
	
		ПисьмоАвтоответчика = Документы.ЭлектронноеПисьмоИсходящее.СоздатьДокумент();
		
		ПисьмоАвтоответчика.Дата						= Дата;
		ПисьмоАвтоответчика.УчетнаяЗапись				= УчетнаяЗапись;
		ПисьмоАвтоответчика.ОтправительПредставление	= ПисьмоАвтоответчика.УчетнаяЗапись.Наименование;
		ПисьмоАвтоответчика.Ответственный				= Пользователь;
		ПисьмоАвтоответчика.Автор						= Пользователь;
		ПисьмоАвтоответчика.Важность					= Перечисления.ВариантыВажностиВзаимодействия.Обычная;
		ПисьмоАвтоответчика.СтатусПисьма				= Перечисления.СтатусыИсходящегоЭлектронногоПисьма.Исходящее;
		ПисьмоАвтоответчика.Кодировка					= "utf-8";
		ПисьмоАвтоответчика.ТипТекста					= Перечисления.ТипыТекстовЭлектронныхПисем.HTML;
		ПисьмоАвтоответчика.СписокПолучателейПисьма		= ПолученноеПисьмо.ОтправительПредставление;
		ПисьмоАвтоответчика.CRM_ТипОтвета				= Перечисления.CRM_ТипыОтвета.ОтветНаПисьмо;
		
		ПисьмоАвтоответчика.CRM_Предмет					= ПолученноеПисьмо;
		ПисьмоАвтоответчика.ВзаимодействиеОснование		= ПолученноеПисьмо;
		ПисьмоАвтоответчика.ИдентификаторОснования		= ПолученноеПисьмо.ИдентификаторСообщения;
		ПисьмоАвтоответчика.ИдентификаторыОснований		= СокрЛП(
			ПолученноеПисьмо.ИдентификаторыОснований + " <" + ПолученноеПисьмо.ИдентификаторСообщения + ">");
		
		ПисьмоАвтоответчика.Тема		= ЗаписьАвтоответчика.ТемаОтвета;
		ПисьмоАвтоответчика.ТекстHTML	= ЗаписьАвтоответчика.ТекстПисьмаHTML;
		
		ПисьмоАвтоответчика.CRM_ЭтоАвтоОтвет = Истина;
		
		CRM_Взаимодействия.ДобавитьТекстИсходногоПисьма(ПисьмоАвтоответчика.ТекстHTML, ПолученноеПисьмо, ПолученноеПисьмо);
		
		НоваяСтрокаПолучателей = ПисьмоАвтоответчика.ПолучателиПисьма.Добавить();
		НоваяСтрокаПолучателей.Адрес			= ПолученноеПисьмо.ОтправительАдрес;
		НоваяСтрокаПолучателей.Представление	= ПолученноеПисьмо.ОтправительПредставление;
		НоваяСтрокаПолучателей.Контакт			= ПолученноеПисьмо.ОтправительКонтакт;
		
		ПисьмоАвтоответчика.Записать();
		
		ПапкаУчетнойЗаписи = CRM_УправлениеЭлектроннойПочтой.ПапкаУчетнойЗаписи(
			УчетнаяЗапись, Перечисления.CRM_ВидыПапокЭлектроннойПочты.Исходящие);
		
		Взаимодействия.УстановитьПапкуЭлектронногоПисьма(ПисьмоАвтоответчика.Ссылка, ПапкаУчетнойЗаписи, Ложь);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ТекстСообщенияОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не удалось записать автоответ на письмо %1 от %2, отправленное c адреса %3, по причине:
					|%4'",
			ОбщегоНазначения.КодОсновногоЯзыка()),
			ПолученноеПисьмо.Тема, ПолученноеПисьмо.Дата, ПолученноеПисьмо.ОтправительАдрес,
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ЗаписьЖурналаРегистрации(
			CRM_УправлениеЭлектроннойПочтой.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Ошибка, , ,
			ТекстСообщенияОбОшибке);
		
	КонецПопытки;

КонецПроцедуры

#КонецОбласти

#КонецЕсли
