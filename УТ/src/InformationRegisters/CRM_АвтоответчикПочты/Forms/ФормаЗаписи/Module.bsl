
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Скрытие блока с учетной записью и пользователем при редактировании из настроек.
	Если Параметры.Свойство("РедактированиеИзНастроек") Тогда
		Элементы.ГруппаБлок2.Видимость = Ложь;
	КонецЕсли;
	
	Если ПустаяСтрока(ТекстПисьмаHTMLРедактор) Тогда
		// Необходимые теги для редактора.
		CRM_ВзаимодействияКлиентСервер.ДобавитьНеобходимыеТэгиHTML(ТекстПисьмаHTMLРедактор);
		
		// Шрифт по умолчанию из настроек.
		НастройкиХранилище = CRM_ВзаимодействияВызовСервера.ПолучитьНастройкуРаботаСПочтой();
		
		ШрифтПоУмолчанию = ?(
			НастройкиХранилище.Свойство("ШрифтПоУмолчаниюВЭлектронномПисьме"),
			НастройкиХранилище.ШрифтПоУмолчаниюВЭлектронномПисьме,
			WindowsШрифты.ШрифтДиалоговИМеню);
		
		Если ШрифтПоУмолчанию = WindowsШрифты.ШрифтДиалоговИМеню Тогда
			ШрифтПоУмолчанию = Константы.CRM_ШрифтПисьмаПоУмолчанию.ПолучитьШрифт();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ТекстПисьмаHTMLРедактор = ТекущийОбъект.ТекстПисьмаHTML;
	
КонецПроцедуры // ПриЧтенииНаСервере()

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ТекстПисьмаHTMLПриЗаписи = CRM_РаботаСHTMLКлиент.ТекстВПолеHTML(
		Элементы.ТекстПисьмаHTMLРедактор);
	
	CRM_РаботаСHTML.УстановитьУбратьСкриптВставки(ТекстПисьмаHTMLПриЗаписи, Истина);
	
КонецПроцедуры // ПередЗаписью()

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ТекстПисьмаHTML = ТекстПисьмаHTMLПриЗаписи;
	
КонецПроцедуры // ПередЗаписьюНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	CRM_РаботаСHTML.УстановитьУбратьСкриптВставки(ТекстПисьмаHTMLРедактор);
	
КонецПроцедуры // ПриОткрытии()

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область РедакторHTML

&НаКлиенте
Процедура ВыполнитьКомандуСписка(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ИмяКоманды = Сред(Элемент.Имя, 8);
	
	CRM_РаботаСHTMLКлиент.ВыполнитьHTMLКоманду(ЭтотОбъект, Элементы.ТекстПисьмаHTMLРедактор, ИмяКоманды, ВыбранноеЗначение);
	
	ТекущийЭлемент = Элементы.ТекстПисьмаHTMLРедактор;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьКоманду(Команда)
	
	ИмяКоманды = Сред(Команда.Имя, 8);
	
	Если ИмяКоманды = "Undo" Тогда
		CRM_ЦентрМониторингаКлиентСервер.ЗаписатьОперациюБизнесСтатистики("CRM_Статистика.Взаимодействия.СозданиеЭлектронногоПисьма.Удобство.КоличествоНажатийКнопкаОтменитьПоследнееДействие");
	ИначеЕсли ИмяКоманды = "Redo" Тогда
		CRM_ЦентрМониторингаКлиентСервер.ЗаписатьОперациюБизнесСтатистики("CRM_Статистика.Взаимодействия.СозданиеЭлектронногоПисьма.Удобство.КоличествоНажатийКнопкаПовторитьСледующееДействие");
	ИначеЕсли ИмяКоманды = "InsertHorizontalRule" Тогда
		CRM_ЦентрМониторингаКлиентСервер.ЗаписатьОперациюБизнесСтатистики("CRM_Статистика.Взаимодействия.СозданиеЭлектронногоПисьма.Удобство.КоличествоНажатийКнопкаГоризонтальнаяЛиния");
	ИначеЕсли ИмяКоманды = "InsertHorizontalRule" Тогда
		CRM_ЦентрМониторингаКлиентСервер.ЗаписатьОперациюБизнесСтатистики("CRM_Статистика.Взаимодействия.СозданиеЭлектронногоПисьма.Удобство.КоличествоНажатийКнопкаГоризонтальнаяЛиния");
	ИначеЕсли ИмяКоманды = "Bold" Тогда
		CRM_ЦентрМониторингаКлиентСервер.ЗаписатьОперациюБизнесСтатистики("CRM_Статистика.Взаимодействия.СозданиеЭлектронногоПисьма.Удобство.КоличествоНажатийКнопкаПолужирный");
	ИначеЕсли ИмяКоманды = "Italic" Тогда
		CRM_ЦентрМониторингаКлиентСервер.ЗаписатьОперациюБизнесСтатистики("CRM_Статистика.Взаимодействия.СозданиеЭлектронногоПисьма.Удобство.КоличествоНажатийКнопкаКурсив");
	ИначеЕсли ИмяКоманды = "Underline" Тогда
		CRM_ЦентрМониторингаКлиентСервер.ЗаписатьОперациюБизнесСтатистики("CRM_Статистика.Взаимодействия.СозданиеЭлектронногоПисьма.Удобство.КоличествоНажатийКнопкаПодчеркнутый");
	ИначеЕсли ИмяКоманды = "JustifyLeft" Тогда
		CRM_ЦентрМониторингаКлиентСервер.ЗаписатьОперациюБизнесСтатистики("CRM_Статистика.Взаимодействия.СозданиеЭлектронногоПисьма.Удобство.КоличествоНажатийКнопкаВыравниваниеПоЛевомуКраю");
	ИначеЕсли ИмяКоманды = "JustifyCenter" Тогда
		CRM_ЦентрМониторингаКлиентСервер.ЗаписатьОперациюБизнесСтатистики("CRM_Статистика.Взаимодействия.СозданиеЭлектронногоПисьма.Удобство.КоличествоНажатийКнопкаВыравниваниеПоЦентру");
	ИначеЕсли ИмяКоманды = "JustifyRight" Тогда
		CRM_ЦентрМониторингаКлиентСервер.ЗаписатьОперациюБизнесСтатистики("CRM_Статистика.Взаимодействия.СозданиеЭлектронногоПисьма.Удобство.КоличествоНажатийКнопкаВыравниваниеПоПравомуКраю");
	ИначеЕсли ИмяКоманды = "JustifyFull" Тогда
		CRM_ЦентрМониторингаКлиентСервер.ЗаписатьОперациюБизнесСтатистики("CRM_Статистика.Взаимодействия.СозданиеЭлектронногоПисьма.Удобство.КоличествоНажатийКнопкаВыравниваниеПоШирине");
	КонецЕсли;
	
	CRM_РаботаСHTMLКлиент.ВыполнитьHTMLКоманду(ЭтотОбъект, Элементы.ТекстПисьмаHTMLРедактор, ИмяКоманды);
	
КонецПроцедуры // ВыполнитьКоманду()

&НаКлиенте
Процедура ВставитьИзображение(Команда)
	
	CRM_ЦентрМониторингаКлиентСервер.ЗаписатьОперациюБизнесСтатистики("CRM_Статистика.Взаимодействия.СозданиеЭлектронногоПисьма.Удобство.КоличествоНажатийКнопкаВставитьИзображение");
	CRM_РаботаСHTMLКлиент.ВставитьИзображение(ЭтотОбъект, Элементы.ТекстПисьмаHTMLРедактор, Ложь);
	
КонецПроцедуры // ВставитьИзображение()

&НаКлиенте
Процедура ВставитьКартинкуИзБуфера(Команда)
	
	CRM_ЦентрМониторингаКлиентСервер.ЗаписатьОперациюБизнесСтатистики("CRM_Статистика.Взаимодействия.СозданиеЭлектронногоПисьма.Удобство.КоличествоНажатийКнопкаВставитькартинкуИзБуфера");
	CRM_РаботаСHTMLКлиент.ВставитьКартинкуИзБуфера(ЭтотОбъект, Элементы.ТекстПисьмаHTMLРедактор);
	
КонецПроцедуры // ВставитьКартинкуИзБуфера()

&НаКлиенте
Процедура ВставитьГиперссылку(Команда)
	
	CRM_ЦентрМониторингаКлиентСервер.ЗаписатьОперациюБизнесСтатистики("CRM_Статистика.Взаимодействия.СозданиеЭлектронногоПисьма.Удобство.КоличествоНажатийКнопкаВставитьГиперссылку");
	CRM_РаботаСHTMLКлиент.ВставитьГиперссылку(ЭтотОбъект, Элементы.ТекстПисьмаHTMLРедактор);
	
КонецПроцедуры // ВставитьГиперссылку()

&НаКлиенте
Процедура ВставитьТаблицу(Команда)
	
	CRM_ЦентрМониторингаКлиентСервер.ЗаписатьОперациюБизнесСтатистики("CRM_Статистика.Взаимодействия.СозданиеЭлектронногоПисьма.Удобство.КоличествоНажатийКнопкаВставитьТаблицу");
	CRM_РаботаСHTMLКлиент.ВставитьТаблицу(ЭтотОбъект, Элементы.ТекстПисьмаHTMLРедактор);
	
КонецПроцедуры // ВставитьТаблицу()

&НаКлиенте
Процедура УвеличитьШрифт(Команда)
	
	CRM_РаботаСHTMLКлиент.УвеличитьШрифт(ЭтотОбъект, Элементы.ТекстПисьмаHTMLРедактор);
	
КонецПроцедуры // УвеличитьШрифт()

&НаКлиенте
Процедура УменьшитьШрифт(Команда)
	
	CRM_РаботаСHTMLКлиент.УменьшитьШрифт(ЭтотОбъект, Элементы.ТекстПисьмаHTMLРедактор);
	
КонецПроцедуры // УменьшитьШрифт()

&НаКлиенте
Процедура ИзменитьШрифт(Команда)
	
	CRM_РаботаСHTMLКлиент.ИзменитьШрифт(ЭтотОбъект, Элементы.ТекстПисьмаHTMLРедактор);
	
КонецПроцедуры // ИзменитьШрифт()

&НаКлиенте
Процедура ВыборЦвета(Команда)
	
	ИмяКоманды = Сред(Команда.Имя, 8);
	
	CRM_РаботаСHTMLКлиент.ВыборЦвета(ЭтотОбъект, Элементы.ТекстПисьмаHTMLРедактор, ИмяКоманды);
	
КонецПроцедуры // ВыборЦвета()

&НаКлиенте
Процедура ПоказатьДопФорматирование(Команда)
	
	CRM_ЦентрМониторингаКлиентСервер.ЗаписатьОперациюБизнесСтатистики("CRM_Статистика.Взаимодействия.СозданиеЭлектронногоПисьма.Удобство.КоличествоНажатийКнопкаДополнительноеФорматирование");
	
	Элементы.ПоказатьДопФорматирование.Пометка	= Не Элементы.ПоказатьДопФорматирование.Пометка;
	Элементы.ГруппаДополнительное.Видимость		= Элементы.ПоказатьДопФорматирование.Пометка;
	
КонецПроцедуры // ПоказатьДопФорматирование()

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВключенаПриИзменении(Элемент)
	
	CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики(
		"CRM_Статистика.Взаимодействия.НастройкаУчетнойЗаписи.Удобство.КоличествоНажатийГиперссылкаНастройкаАвтоответчика.КоличествоНажатийКнопкаВключитьАвтоответчик");
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстПисьмаHTMLРедакторДокументСформирован(Элемент)
	
	ТекстПисьмаПриОткрытии = Элементы.ТекстПисьмаHTMLРедактор.Документ.body.innerHTML; 
	CRM_ВзаимодействияКлиентСервер.ДобавитьНеобходимыеТэгиHTML(ТекстПисьмаПриОткрытии);
	
	CRM_РаботаСHTMLКлиент.ПолеHTMLДокументСформирован(ЭтотОбъект, Элемент);
	
	УстановитьШрифтПисьмаИзНастроек();
	
	ОкноБраузераТекстаПисьма = Элементы.ТекстПисьмаHTMLРедактор.Документ.defaultView;
	Если ОкноБраузераТекстаПисьма.referencePasteOnInit <> Неопределено Тогда
		ОкноБраузераТекстаПисьма.referencePasteOnInit();
	КонецЕсли;
	
КонецПроцедуры // ТекстПисьмаHTMLРедакторДокументСформирован()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьШрифтПисьмаИзНастроек()
	
	// Установка шрифта для HTML требует фокуса на элементе.
	ТекущийЭлементВременная = ТекущийЭлемент;
	ТекущийЭлемент = Элементы.ТекстПисьмаHTMLРедактор;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма",		ЭтотОбъект);
	ДополнительныеПараметры.Вставить("ПолеHTML",	Элементы.ТекстПисьмаHTMLРедактор);
	
	CRM_РаботаСHTMLКлиент.ИзменитьШрифтЗавершение(ШрифтПоУмолчанию, ДополнительныеПараметры);
	
	ТекущийЭлемент = ТекущийЭлементВременная;
	
КонецПроцедуры // УстановитьШрифтПисьмаИзНастроек()

#КонецОбласти
