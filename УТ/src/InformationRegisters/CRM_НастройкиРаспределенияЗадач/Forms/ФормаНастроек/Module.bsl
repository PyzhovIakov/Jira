
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	ОтборПользователь  = ТекущийПользователь;
	ОтборПодразделение  = ТекущийПользователь.Подразделение;
	
	ЧьиНастройки = "Пользователи";
	ПерекраситьКнопкиВариантаОтображенияНастроек(ЧьиНастройки);
	НастроитьВидимостьОтбора(ЧьиНастройки);
	
	ИспользоватьПодразделения = CRM_ОбщегоНазначенияПовтИсп.ИспользоватьПодразделения();
	Элементы.ВыбратьНастройкиПодразделения.Видимость  = ИспользоватьПодразделения;
	Элементы.ГруппаОтборПодразделения.Видимость       = ИспользоватьПодразделения;
	
	Если ТипЗнч(ОтборПодразделение.ТекущийРуководитель) = Тип("СправочникСсылка.Пользователи") Тогда
		ЯвляетсяРуководителем	= (ОтборПодразделение.ТекущийРуководитель = ТекущийПользователь);
	Иначе
		ЯвляетсяРуководителем	= (ОтборПодразделение.ТекущийРуководитель = ТекущийПользователь.ФизическоеЛицо);
	КонецЕсли;
	
	ЕстьПраваАдминистратора		= (РольДоступна("ПолныеПрава") Или РольДоступна("Администрирование"));
	Элементы.ВыбратьНастройкиОбщие.Видимость = ЕстьПраваАдминистратора;
	
	ЕстьПравоРедактирования		= (ЯвляетсяРуководителем Или ЕстьПраваАдминистратора);
	Элементы.ВыбратьНастройкиПодразделения.Видимость	= ЕстьПравоРедактирования;
	Элементы.ГруппаОтборПодразделения.Видимость			= ЕстьПравоРедактирования;
	
	СхемаКомпоновки = РегистрыСведений.CRM_НастройкиРаспределенияЗадач.ПолучитьМакет("Настройки");
	АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(СхемаКомпоновки, УникальныйИдентификатор);
	
	ИсточникНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресВоВременномХранилище);
	КомпоновщикВажность.Инициализировать(ИсточникНастроек);
	КомпоновщикСрочность.Инициализировать(ИсточникНастроек);
	НастройкиПоУмолчанию = СхемаКомпоновки.НастройкиПоУмолчанию;
	ЗагрузитьНастройки();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборПользовательПриИзменении(Элемент)
	ЗагрузитьНастройки();
КонецПроцедуры

&НаКлиенте
Процедура ОтборПодразделениеПриИзменении(Элемент)
	ЗагрузитьНастройки();
КонецПроцедуры

&НаКлиенте
Процедура ОтборПользовательОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, СтандартнаяОбработка)
	Если Модифицированность Тогда
		СтандартнаяОбработка = Ложь;
		ЗадатьВопросОСохранении(, ВыбранноеЗначение);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтборПодразделениеОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, СтандартнаяОбработка)
	Если Модифицированность Тогда
		СтандартнаяОбработка = Ложь;
		ЗадатьВопросОСохранении(, ВыбранноеЗначение);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьНастройкиПользователи(Команда)
	ОбработатьВыборОтбораНастроек("Пользователи");
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьНастройкиПодразделения(Команда)
	ОбработатьВыборОтбораНастроек("Подразделения");
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьОбщиеНастройки(Команда)
	ОбработатьВыборОтбораНастроек("Общие");
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	Если Модифицированность Тогда
		ЗаписатьИзменения();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СохранитьиЗакрыть(Команда)
	
	Если Модифицированность Тогда
		ЗаписатьИзменения();
	КонецЕсли;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработатьВыборОтбораНастроек(ОтборНастройки);
	
	Если Модифицированность Тогда
		ЗадатьВопросОСохранении(ОтборНастройки);
	Иначе
		ПереключитьВидНастроек(ОтборНастройки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПереключитьВидНастроек(ВидНастроек)
	
	ЧьиНастройки = ВидНастроек;
	ПерекраситьКнопкиВариантаОтображенияНастроек(ВидНастроек);
	НастроитьВидимостьОтбора(ВидНастроек);
	ЗагрузитьНастройки();
	
КонецПроцедуры

// Настраивает цвет кнопок настроек по виду
//
// Параметры:
//  ВидНастроек  - Строка - выбранный вид настроек
//
&НаСервере
Процедура ПерекраситьКнопкиВариантаОтображенияНастроек(ВидНастроек)
	
	ИмяКоманды = "ВыбратьНастройки" + ВидНастроек;
	
	МассивКнопок = Новый Массив;
	МассивКнопок.Добавить(Элементы.ВыбратьНастройкиПользователи);
	МассивКнопок.Добавить(Элементы.ВыбратьНастройкиПодразделения);
	МассивКнопок.Добавить(Элементы.ВыбратьНастройкиОбщие);
	
	Для Каждого ТекущаяКнопка Из МассивКнопок Цикл
		ТекущаяКнопка.Пометка = (ИмяКоманды = Команды[ТекущаяКнопка.Имя].Имя);
		
		Если ТекущаяКнопка.Пометка Тогда
			ТекущаяКнопка.ЦветФона		= ЦветаСтиля.CRM_ОсновнойГолубой;
			ТекущаяКнопка.ЦветРамки		= ЦветаСтиля.CRM_ОсновнойГолубой;
			ТекущаяКнопка.ЦветТекста	= ЦветаСтиля.ЦветФонаПоля;
		Иначе
			ТекущаяКнопка.ЦветФона		= ЦветаСтиля.CRM_СерыйДляВторостепенныхФункций;
			ТекущаяКнопка.ЦветРамки		= ЦветаСтиля.CRM_СерыйДляВторостепенныхФункций;
			ТекущаяКнопка.ЦветТекста	= ЦветаСтиля.ЦветФонаПоля;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Настраивает видимость полей отбора пользователя или подразделения
//
// Параметры:
//  ВидНастроек  - Строка - выбранный вид настроек
//
&НаСервере
Процедура НастроитьВидимостьОтбора(ВидНастроек)
	Элементы.ОтборПользователь.Видимость = (ВидНастроек = "Пользователи");
	Элементы.ОтборПодразделение.Видимость = (ВидНастроек = "Подразделения");
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройки()
	
	МенеджерЗаписи = РегистрыСведений.CRM_НастройкиРаспределенияЗадач.СоздатьМенеджерЗаписи();
	Если ЧьиНастройки = "Пользователи" Тогда
		МенеджерЗаписи.Объект = ОтборПользователь;
	ИначеЕсли ЧьиНастройки = "Подразделения" Тогда
		МенеджерЗаписи.Объект = ОтборПодразделение;
	Иначе
		МенеджерЗаписи.Объект = "Общие настройки";
	КонецЕсли;
	МенеджерЗаписи.Прочитать();
	
	Если МенеджерЗаписи.Выбран() Тогда
		НастройкиВажности = МенеджерЗаписи.НастройкиВажности.Получить();
		Если НастройкиВажности <> Неопределено Тогда
			КомпоновщикВажность.ЗагрузитьНастройки(НастройкиВажности);
		Иначе
			КомпоновщикВажность.ЗагрузитьНастройки(НастройкиПоУмолчанию);
		КонецЕсли;
		НастройкиСрочности = МенеджерЗаписи.НастройкиСрочности.Получить();
		Если НастройкиСрочности <> Неопределено Тогда
			КомпоновщикСрочность.ЗагрузитьНастройки(НастройкиСрочности);
		Иначе
			КомпоновщикСрочность.ЗагрузитьНастройки(НастройкиПоУмолчанию);
		КонецЕсли;
	Иначе
		КомпоновщикВажность.ЗагрузитьНастройки(НастройкиПоУмолчанию);
		КомпоновщикСрочность.ЗагрузитьНастройки(НастройкиПоУмолчанию);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзменения()
	
	МенеджерЗаписи = РегистрыСведений.CRM_НастройкиРаспределенияЗадач.СоздатьМенеджерЗаписи();
	Если ЧьиНастройки = "Пользователи" Тогда
		МенеджерЗаписи.Объект = ОтборПользователь;
	ИначеЕсли ЧьиНастройки = "Подразделения" Тогда
		МенеджерЗаписи.Объект = ОтборПодразделение;
	Иначе
		МенеджерЗаписи.Объект = "Общие настройки";
	КонецЕсли;
	
	Если КомпоновщикВажность.Настройки.Отбор.Элементы.Количество() > 0 Тогда
		МенеджерЗаписи.НастройкиВажности = Новый ХранилищеЗначения(КомпоновщикВажность.Настройки);
	КонецЕсли;
	
	Если КомпоновщикСрочность.Настройки.Отбор.Элементы.Количество() > 0 Тогда
		МенеджерЗаписи.НастройкиСрочности = Новый ХранилищеЗначения(КомпоновщикСрочность.Настройки);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(МенеджерЗаписи.НастройкиВажности)
		Или ЗначениеЗаполнено(МенеджерЗаписи.НастройкиСрочности) Тогда
		МенеджерЗаписи.Записать();
	Иначе
		МенеджерЗаписи.Прочитать();
		Если МенеджерЗаписи.Выбран() Тогда
			МенеджерЗаписи.Удалить();
		КонецЕсли;
	КонецЕсли;
	
	Модифицированность = Ложь;
	
	Если ЧьиНастройки = "Пользователи" Тогда
		РассчитатьВажностьИСрочностьЗадачПользователя(ТекущийПользователь);
	ИначеЕсли ЧьиНастройки = "Подразделения" Тогда
		РассчитатьВажностьИСрочностьЗадачПодразделения(ОтборПодразделение);
	Иначе
		РассчитатьВажностьИСрочностьЗадач();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомпоновщикСрочностьНастройкиОтборПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура КомпоновщикВажностьНастройкиОтборПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		Отказ = Истина;
		ТекстВопроса = НСтр("ru='Данные были изменены. Сохранить изменения?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаОтветаОСохранении", ЭтотОбъект,
			Новый Структура("Закрыть", Истина));
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗадатьВопросОСохранении(ВидНастроек = Неопределено, НовыйОбъектНастроек = Неопределено)
	
	ТекстВопроса = НСтр("ru='Данные были изменены. Сохранить изменения?'");
	ДополнительныеПараметры = Новый Структура;
	Если ЗначениеЗаполнено(ВидНастроек) Тогда
		ДополнительныеПараметры = Новый Структура("ВидНастроек", ВидНастроек);
	КонецЕсли;
	Если ЗначениеЗаполнено(НовыйОбъектНастроек) Тогда
		ДополнительныеПараметры = Новый Структура("НовыйОбъектНастроек", НовыйОбъектНастроек);
	КонецЕсли;
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаОтветаОСохранении", ЭтотОбъект, ДополнительныеПараметры);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОтветаОСохранении(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаписатьИзменения();
	Иначе
		Модифицированность = Ложь;
	КонецЕсли;
	
	Если ДополнительныеПараметры.Свойство("ВидНастроек") Тогда
		ПереключитьВидНастроек(ДополнительныеПараметры.ВидНастроек);
	ИначеЕсли ДополнительныеПараметры.Свойство("Закрыть") Тогда
		Закрыть();
	ИначеЕсли ДополнительныеПараметры.Свойство("НовыйОбъектНастроек") Тогда
		Если ТипЗнч(ДополнительныеПараметры.НовыйОбъектНастроек) = Тип("СправочникСсылка.Пользователи") Тогда
			ОтборПользователь = ДополнительныеПараметры.НовыйОбъектНастроек;
		Иначе
			ОтборПодразделение = ДополнительныеПараметры.НовыйОбъектНастроек;
		КонецЕсли;
		ЗагрузитьНастройки();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура РассчитатьВажностьИСрочностьЗадачПользователя(Пользователь)
	
	Запрос = Новый Запрос;
	Условие = "CRM_ОбъектыАРМ.Пользователь = &Пользователь
	|	И НЕ CRM_ВажностьСрочностьЗадач.РучнаяУстановкаВажностиИСрочности";
	Запрос.Текст = CRM_БизнесПроцессыИЗадачиСервер.ТекстЗапросаДляРасчетаВажностиИСрочностиЗадач(Условие);
	
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	CRM_БизнесПроцессыИЗадачиСервер.ОбработатьРезультатЗапросаВажностиИСрочностиЗадач(РезультатЗапроса);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура РассчитатьВажностьИСрочностьЗадачПодразделения(Подразделение)
	
	Запрос = Новый Запрос;
	Условие = "CRM_ОбъектыАРМ.Пользователь.Подразделение = &Подразделение
	|	И НЕ CRM_ВажностьСрочностьЗадач.РучнаяУстановкаВажностиИСрочности";
	Запрос.Текст = CRM_БизнесПроцессыИЗадачиСервер.ТекстЗапросаДляРасчетаВажностиИСрочностиЗадач(Условие);
	
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	CRM_БизнесПроцессыИЗадачиСервер.ОбработатьРезультатЗапросаВажностиИСрочностиЗадач(РезультатЗапроса);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура РассчитатьВажностьИСрочностьЗадач()
	
	Запрос = Новый Запрос;
	Условие = "НЕ CRM_ВажностьСрочностьЗадач.РучнаяУстановкаВажностиИСрочности";
	Запрос.Текст = CRM_БизнесПроцессыИЗадачиСервер.ТекстЗапросаДляРасчетаВажностиИСрочностиЗадач(Условие);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	CRM_БизнесПроцессыИЗадачиСервер.ОбработатьРезультатЗапросаВажностиИСрочностиЗадач(РезультатЗапроса);
	
КонецПроцедуры

#КонецОбласти
