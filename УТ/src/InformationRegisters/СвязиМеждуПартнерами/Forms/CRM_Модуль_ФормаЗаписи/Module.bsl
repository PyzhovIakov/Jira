
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Запись, ЭтотОбъект);
	
	Если НЕ ЗначениеЗаполнено(Запись.Автор)
	 ИЛИ ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		Запись.Автор = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	Если Параметры.Свойство("Партнер") Тогда
		Запись.ПервыйПартнер = Параметры.Партнер;
	КонецЕсли;
	
	// +CRM_Модуль
	ЗаполнитьЗначенияСвойств(Запись, Параметры.ЗначенияЗаполнения);
	Если Параметры.ЗначенияЗаполнения.Свойство("CRM_Интерес") Тогда
		Элементы.CRM_Интерес.Видимость = Ложь;
		Если ЗначениеЗаполнено(Параметры.ЗначенияЗаполнения.CRM_Интерес.Партнер) Тогда
			Запись.ПервыйПартнер = Параметры.ЗначенияЗаполнения.CRM_Интерес.Партнер;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("ОткрытиеИзИнтереса") Тогда
		Элементы.CRM_Интерес.Видимость = Ложь;
	КонецЕсли;
	// -CRM_Модуль
	
	ПартнерыИКонтрагенты.ЗаголовокРеквизитаВЗависимостиОтФОИспользоватьПартнеровКакКонтрагентов(
	               ЭтотОбъект, "Партнер1", НСтр("ru = 'Первый контрагент';
												|en = 'The first counterparty'"));
	ПартнерыИКонтрагенты.ЗаголовокРеквизитаВЗависимостиОтФОИспользоватьПартнеровКакКонтрагентов(
	               ЭтотОбъект, "Партнер2", НСтр("ru = 'Второй контрагент';
												|en = 'The second counterparty'"));
	ПартнерыИКонтрагенты.ЗаголовокРеквизитаВЗависимостиОтФОИспользоватьПартнеровКакКонтрагентов(
	               ЭтотОбъект, "", НСтр("ru = 'Связь между контрагентами';
										|en = 'Connections between counterparties'"));
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект)
	
	Если Запись.ПервыйПартнер = Запись.ВторойПартнер Тогда
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровКакКонтрагентов") Тогда
			ТекстСообщения = НСтр("ru = 'Контрагенты, указанные в связи не должны совпадать.';
									|en = 'Counterparties specified in the link cannot match.'");
		Иначе
			ТекстСообщения = НСтр("ru = 'Партнеры, указанные в связи не должны совпадать.';
									|en = 'Partners specified in the link should not match.'");
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		ТекстСообщения,
		,
		"ПервыйПартнер",, Отказ);
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

// +CRM_Модуль
&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ЗаписанаСвязьМеждуПартнерами", Новый Структура("Интерес, ПервыйПартнер, ВторойПартнер", Запись.CRM_Интерес, Запись.ПервыйПартнер, Запись.ВторойПартнер));
КонецПроцедуры
// -CRM_Модуль

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

#КонецОбласти
