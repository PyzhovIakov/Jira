#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область ПереходНаНовуюВерсию

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаВерсию_3_1_31_12(Параметры) Экспорт
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	CRM_ОповещенияПользовательскиеНастройки.ВидОповещения КАК ВидОповещения,
		|	CRM_ОповещенияПользовательскиеНастройки.Пользователь КАК Пользователь
		|ИЗ
		|	РегистрСведений.CRM_ОповещенияПользовательскиеНастройки КАК CRM_ОповещенияПользовательскиеНастройки
		|ГДЕ
		|	(CRM_ОповещенияПользовательскиеНастройки.ВидОповещения = ЗНАЧЕНИЕ(Справочник.CRM_ВидыОповещений.ОповещенияОДняхРождения)
		|			ИЛИ CRM_ОповещенияПользовательскиеНастройки.ВидОповещения = ЗНАЧЕНИЕ(Справочник.CRM_ВидыОповещений.CRM_ОповещенияОКлючевыхСобытиях))
		|	И (CRM_ОповещенияПользовательскиеНастройки.Периодичность = ЗНАЧЕНИЕ(Перечисление.CRM_ПериодичностьОповещений.Минута)
		|			ИЛИ CRM_ОповещенияПользовательскиеНастройки.Периодичность = ЗНАЧЕНИЕ(Перечисление.CRM_ПериодичностьОповещений.Час))";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	РезультатЗапросаТаблица = Запрос.Выполнить().Выгрузить();
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = "РегистрСведений.CRM_ОповещенияПользовательскиеНастройки";
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, РезультатЗапросаТаблица, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаВерсию_3_1_31_12(Параметры) Экспорт
	
	МетаданныеРегистра    = Метаданные.РегистрыСведений.CRM_ОповещенияПользовательскиеНастройки;
	ПолноеИмяРегистра     = МетаданныеРегистра.ПолноеИмя();
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДополнительныеПараметры.ИмяВременнойТаблицы = "ВТДанныеДляОбработки";

	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	РезультатСозданияТаблицы 
		= ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуИзмеренийНезависимогоРегистраСведенийДляОбработки(
		Параметры.Очередь, ПолноеИмяРегистра, МенеджерВременныхТаблиц, ДополнительныеПараметры);
	Если Не РезультатСозданияТаблицы.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Не РезультатСозданияТаблицы.ЕстьДанныеДляОбработки;
		Возврат;
	КонецЕсли;
	Если Не РезультатСозданияТаблицы.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВТДанныеДляОбработки.ВидОповещения КАК ВидОповещения,
	|	ВТДанныеДляОбработки.Пользователь КАК Пользователь
	|ИЗ
	|	ВТДанныеДляОбработки КАК ВТДанныеДляОбработки";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ПроблемныхОбъектов = 0;
	ОбъектовОбработано = 0;
	
	Пока Выборка.Следующий() Цикл
		
		НаборЗаписейДляИзменения = РегистрыСведений.CRM_ОповещенияПользовательскиеНастройки.СоздатьНаборЗаписей();
		НаборЗаписейДляИзменения.Отбор.ВидОповещения.Установить(Выборка.ВидОповещения);
		НаборЗаписейДляИзменения.Отбор.Пользователь.Установить(Выборка.Пользователь);
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра);
		ЭлементБлокировки.УстановитьЗначение("ВидОповещения", Выборка.ВидОповещения);
		ЭлементБлокировки.УстановитьЗначение("Пользователь", Выборка.Пользователь);
		
		НачатьТранзакцию();
		
		Попытка
			Блокировка.Заблокировать();
			НаборЗаписейДляИзменения.Прочитать();
			
			Для Каждого Запись Из НаборЗаписейДляИзменения Цикл
				Запись.СрокОповещения = 1;
				Запись.Периодичность = Перечисления.CRM_ПериодичностьОповещений.День;
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписейДляИзменения);
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(НаборЗаписейДляИзменения);
			
			ОбъектовОбработано = ОбъектовОбработано + 1;
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			МетаданныеОбъекта = Метаданные.НайтиПоПолномуИмени("РегистрСведений.CRM_ОповещенияПользовательскиеНастройки");
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать записи в %ИмяОбъекта%. По причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяОбъекта%", "РегистрСведений.CRM_ОповещенияПользовательскиеНастройки");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", 
				ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеОбъекта, , 
				ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь,
		 "РегистрСведений.CRM_ОповещенияПользовательскиеНастройки");
	Если ОбъектовОбработано = 0 И ПроблемныхОбъектов <> 0 Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Процедуре "
			+ "РегистрСведений.CRM_ОповещенияПользовательскиеНастройки.ОбработатьДанныеДляПереходаНаВерсию_3_1_31_12 " 
			+ "не удалось обработать некоторые объекты (пропущены): %1'"), ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	Иначе
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			 УровеньЖурналаРегистрации.Информация,
		Метаданные.РегистрыСведений.CRM_ОповещенияПользовательскиеНастройки, ,
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Процедура РегистрСведений." 
			+ "CRM_ОповещенияПользовательскиеНастройки.ОбработатьДанныеДляПереходаНаВерсию_3_1_31_12 "
			+ "обработала очередную порцию объектов: %1'"),
			ОбъектовОбработано));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли