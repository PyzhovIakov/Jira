#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет настройки свзяи обращений с интересами при переходе.
//
// Параметры:
//  Параметры - Структура - содержит параметры
//
Процедура ЗаполнитьНастройкиСвязиОбращенийСИнтересамиПриПереходе(Параметры) Экспорт

КонецПроцедуры

// Возвращает признак того, является ли ссылка источником обращения
//
// Параметры:
//  Ссылка - ЛюбаяСсылка - Проверяемая ссылка.
//
// Возвращаемое значение:
//  Булево - результат проверки
//
Функция ЭтоИсточникОбращения(Ссылка) Экспорт
	Возврат Метаданные.РегистрыСведений.CRM_НастройкиСвязиОбращенийСИнтересами.Измерения.ИсточникОбращения.Тип.СодержитТип(ТипЗнч(Ссылка));
КонецФункции

// Выполняет дополнительные действия при создании формы источника.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма источника.
//  ИсточникОбращения - см. РегистрыСведений.CRM_НастройкиСвязиОбращенийСИнтересами.ЭтоИсточникОбращения.
//  Группа - Строка - Имя элемента группы.
//
Процедура ФормаИсточникаПриСозданииНаСервере(Форма, ИсточникОбращения = Неопределено, Группа = "") Экспорт

	Если ИсточникОбращения = Неопределено Тогда
		ИсточникОбращения = Форма.Объект.Ссылка;
	КонецЕсли;
	
	МассивДобавляемыхРеквизитов = Новый Массив;
	
	Если ТипЗнч(ИсточникОбращения) = Тип("СправочникСсылка.УчетныеЗаписиЭлектроннойПочты") Тогда
		ЗаголовокФлага = НСтр("ru='Автоматически связывать письма с интересами';
			|en='Automatically associate emails with active leads'");
	ИначеЕсли ТипЗнч(ИсточникОбращения) = Тип("СправочникСсылка.CRM_УчетныеЗаписиМессенджеров") Тогда
		ЗаголовокФлага = НСтр("ru='Автоматически связывать входящие сообщения с активными интересами';
			|en='Automatically associate incoming messages with active leads'");
	ИначеЕсли ИсточникОбращения = "Телефония" Тогда
		ЗаголовокФлага = НСтр("ru='Автоматически связывать входящие звонки с активными интересами';
			|en='Automatically associate incoming calls with active leads'");
	Иначе
		ЗаголовокФлага = НСтр("ru='Автоматически связывать с активными интересами';
			|en='Automatically associate with active leads'");
	КонецЕсли;
	
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("НастройкиСвязиОбращенийСИнтересами_Связывать",
		Новый ОписаниеТипов("Булево"), , ЗаголовокФлага, Истина));
	Если ИсточникОбращения = "Телефония" Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("НастройкиСвязиОбращенийСИнтересами_РежимСвязи",
			Новый ОписаниеТипов("ПеречислениеСсылка.CRM_РежимыСвязиОбращенияСИнтересами"), , НСтр("ru='Если активных интересов более одного, тогда';en='If active leads more than one, than'"), Истина));
	КонецЕсли;
	
	Форма.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);
	
	СвязыватьСИнтересом = СвязыватьСИнтересом(ИсточникОбращения);
	Форма["НастройкиСвязиОбращенийСИнтересами_Связывать"] = СвязыватьСИнтересом;
	
	Если ИсточникОбращения = "Телефония" Тогда
		Настройки = НастройкиРежимСвязи(ИсточникОбращения);
		Форма["НастройкиСвязиОбращенийСИнтересами_РежимСвязи"] = Настройки.РежимСвязи;
	КонецЕсли;
	
	Если Группа <> "" Тогда
		ГруппаРасположения = Форма.Элементы.Найти(Группа);
	Иначе
		ГруппаРасположения = Неопределено;
	КонецЕсли;
	
	Расположение = Форма.Элементы.Найти("НастройкиСвязиОбращенийСИнтересами");
	Если Расположение = Неопределено Тогда
		Расположение = Форма.Элементы.Добавить("НастройкиСвязиОбращенийСИнтересами", Тип("ГруппаФормы"), ГруппаРасположения);
		Расположение.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		Расположение.ОтображатьЗаголовок = Ложь;
		Расположение.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	КонецЕсли;
	
	ЭлементСвязывать = Форма.Элементы.Добавить("НастройкиСвязиОбращенийСИнтересами_Связывать",
		 Тип("ПолеФормы"),
		 Расположение);
	ЭлементСвязывать.Вид = ВидПоляФормы.ПолеФлажка;
	ЭлементСвязывать.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
	ЭлементСвязывать.ПутьКДанным = "НастройкиСвязиОбращенийСИнтересами_Связывать";
	ЭлементСвязывать.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
	Если ИсточникОбращения = "Телефония" Тогда
		
		ЭлементРежимСвязи = Форма.Элементы.Добавить("НастройкиСвязиОбращенийСИнтересами_РежимСвязи",
			 Тип("ПолеФормы"),
			 Расположение);
		ЭлементРежимСвязи.Вид = ВидПоляФормы.ПолеВвода;
		ЭлементРежимСвязи.ВысотаЗаголовка = 2;
		ЭлементРежимСвязи.ПутьКДанным = "НастройкиСвязиОбращенийСИнтересами_РежимСвязи";
		
		ЭлементРежимСвязи.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
		ЭлементРежимСвязи.Подсказка = НСтр("ru='Если Интересов более одного, то в соответствии с настройкой:
										|- не связывать;
										|- связывать со всеми — входящий телефонный звонок будет связан со всеми активными Интересами
										|по этому клиенту (потенциальному клиенту);
										|- связывать с последним — входящий телефонный звонок будет связан с последним активным Интересом 
										|по этому клиенту (потенциальному клиенту).'");
		
		Список = Новый СписокЗначений;
		Список.Добавить(Перечисления.CRM_РежимыСвязиОбращенияСИнтересами.НеСвязывать);
		Список.Добавить(Перечисления.CRM_РежимыСвязиОбращенияСИнтересами.СвязыватьСоВсеми);
		Список.Добавить(Перечисления.CRM_РежимыСвязиОбращенияСИнтересами.СвязыватьСПоследним);
		
		НовыйМассив = Новый Массив();
		ПараметрВыбора = Новый ПараметрВыбора("Отбор.Ссылка", Список);
		НовыйМассив.Добавить(ПараметрВыбора);
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		ЭлементРежимСвязи.ПараметрыВыбора = НовыеПараметры;
		
		УО = Форма.УсловноеОформление.Элементы;
		ЭлементУО = УО.Добавить();
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
		ПолеУсловия = ЭлементУО.Поля.Элементы.Добавить();
		ПолеУсловия.Поле = Новый ПолеКомпоновкиДанных("НастройкиСвязиОбращенийСИнтересами_РежимСвязи");
		ГруппаУсловия = ЭлементУО.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		ГруппаУсловия.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
		
		ЭлементУсловия = ГруппаУсловия.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементУсловия.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("НастройкиСвязиОбращенийСИнтересами_Связывать");
		ЭлементУсловия.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементУсловия.ПравоеЗначение = Истина;
		
		ЭлементУсловия = ГруппаУсловия.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементУсловия.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("НастройкиСвязиОбращенийСИнтересами_РежимСвязи");
		ЭлементУсловия.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
		
	КонецЕсли;
	
	Если Не ИсточникОбращения = "Телефония" Тогда
		ЭлементСвязывать.Подсказка = НСтр("ru='Алгоритм связывания следующий:
										|1. Связывание по номеру Интереса/Обращения, найденному в теме письма, комментарии заявки или тексте сообщения.
										|Номер должен начинаться с ""#"" и может состоять из букв, цифр и знака дефиса.
										|2. Если номера не нашлось, то проверяется основание письма (ответ или пересылка), 
										|основание заявки. И связывается с Интересами/Обращениями, с которыми связаны эти основания.'");
	КонецЕсли;
КонецПроцедуры

// Выполняет дополнительные действия при записи формы источника.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма источника.
//  ИсточникОбращения - см. РегистрыСведений.CRM_НастройкиСвязиОбращенийСИнтересами.ЭтоИсточникОбращения.
//
Процедура ФормаИсточникаПриЗаписи(Форма, ИсточникОбращения = Неопределено) Экспорт

	Если ИсточникОбращения = Неопределено Тогда
		ИсточникОбращения = Форма.Объект.Ссылка;
	КонецЕсли;
	
	МенеджерЗаписи = СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ИсточникОбращения = ИсточникОбращения;
	
	Если Форма.Элементы.Найти("НастройкиСвязиОбращенийСИнтересами_Связывать") <> Неопределено Тогда
		МенеджерЗаписи.СвязыватьОбращенияСИнтересами = Форма["НастройкиСвязиОбращенийСИнтересами_Связывать"];
	КонецЕсли;
	
	Если ИсточникОбращения = "Телефония" Тогда
		Если Форма.Элементы.Найти("НастройкиСвязиОбращенийСИнтересами_Связывать") <> Неопределено Тогда
			МенеджерЗаписи.РежимСвязиЕслиИнтересовБолееОдного = Форма["НастройкиСвязиОбращенийСИнтересами_РежимСвязи"];
		КонецЕсли;
	КонецЕсли;
	
	МенеджерЗаписи.Записать();
	
КонецПроцедуры

// Выполняет настройку связи обращений с интересами.
//
// Параметры:
//  ОбъектСвязи - см. РегистрыСведений.CRM_НастройкиСвязиОбращенийСИнтересами.ЭтоИсточникОбращения.
//
// Возвращаемое значение:
//  Структура - содержит настройки
//
Функция СвязыватьСИнтересом(ОбъектСвязи) Экспорт
	
	ТипОбъекта = ТипЗнч(ОбъектСвязи);
	
	Если ТипОбъекта = Тип("СправочникСсылка.УчетныеЗаписиЭлектроннойПочты") Тогда
		ИсточникОбращения = ОбъектСвязи;
	ИначеЕсли ТипОбъекта = Тип("СправочникСсылка.CRM_УчетныеЗаписиМессенджеров") Тогда
		ИсточникОбращения = ОбъектСвязи;
	ИначеЕсли ТипОбъекта = Тип("СправочникСсылка.CRM_ИсточникиПолученияЛидов") Тогда
		ИсточникОбращения = ОбъектСвязи;
	ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.ЭлектронноеПисьмоВходящее") 
		Или ТипОбъекта = Тип("ДокументОбъект.ЭлектронноеПисьмоИсходящее") Тогда
		ИсточникОбращения = ОбъектСвязи.УчетнаяЗапись;
	ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.ТелефонныйЗвонок") 
		И ОбъектСвязи.Входящий Тогда
		ИсточникОбращения = "Телефония";
	ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.CRM_СообщениеМессенджера") Тогда
		ИсточникОбращения = ОбъектСвязи.Диалог.УчетнаяЗапись;
	ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.CRM_Заявка") Тогда
		ИсточникОбращения = ОбъектСвязи.ИсточникПолучения;
	ИначеЕсли ТипОбъекта = Тип("Строка") И ОбъектСвязи = "Телефония" Тогда
		ИсточникОбращения = "Телефония";
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
	Выборка = Выбрать(Новый Структура("ИсточникОбращения", ИсточникОбращения));
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.СвязыватьОбращенияСИнтересами;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

// Функция возвращает структуру настроек, содержашую режим связи.
//
// Параметры:
//  ОбъектСвязи - см. РегистрыСведений.CRM_НастройкиСвязиОбращенийСИнтересами.ЭтоИсточникОбращения.
// 
// Возвращаемое значение:
//   - Структура
//
Функция НастройкиРежимСвязи(ОбъектСвязи) Экспорт
	
	Настройки = Новый Структура("РежимСвязи", Перечисления.CRM_РежимыСвязиОбращенияСИнтересами.НеСвязывать);
	ИсточникОбращения = "Телефония";
	Выборка = Выбрать(Новый Структура("ИсточникОбращения", ИсточникОбращения));
	Если Выборка.Следующий() Тогда
		Если ЗначениеЗаполнено(Выборка.РежимСвязиЕслиИнтересовБолееОдного) Тогда
			Настройки.РежимСвязи = Выборка.РежимСвязиЕслиИнтересовБолееОдного;
		КонецЕсли;
	КонецЕсли;
	Возврат Настройки;
	
КонецФункции

#КонецОбласти

#КонецЕсли
