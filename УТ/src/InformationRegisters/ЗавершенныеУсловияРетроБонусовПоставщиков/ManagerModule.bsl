//@strict-types

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// Описание ограничения доступа
// 
// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЧтениеОбъектаРазрешено(ДокументУсловий)";
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Параметры:
//  ДокументыУсловий - Массив из ДокументСсылка.УсловияРетроБонусовПоставщика 
//  ЗавершитьРасчеты - Булево - 
// 
// Возвращаемое значение:
//  Структура - Изменить статус расчета:
// * ЕстьОшибки - Булево 
// * ИнформацияОбОшибке - Строка 
//
Функция ИзменитьСтатусРасчетов(ДокументыУсловий, ЗавершитьРасчеты) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	РезультатИзменения = Новый Структура;
	РезультатИзменения.Вставить("ЕстьОшибки", Ложь);
	РезультатИзменения.Вставить("ИнформацияОбОшибке", "");
	
	НачатьТранзакцию();
	
	Попытка
		
		БлокировкаДанных = Новый БлокировкаДанных;
		ЭлементБлокировкиДанных = 
			БлокировкаДанных.Добавить("РегистрСведений.ЗавершенныеУсловияРетроБонусовПоставщиков");
		ЭлементБлокировкиДанных.Режим = РежимБлокировкиДанных.Исключительный;
		БлокировкаДанных.Заблокировать();
		
		ДокументыУсловийДляИзменения = ДокументыУсловийСИнымСтатусомРасчетов(ДокументыУсловий, ЗавершитьРасчеты);
		ТекущийПользователь = Пользователи.ТекущийПользователь();
		
		Для Каждого ДокументУсловий Из ДокументыУсловийДляИзменения Цикл
			
			НаборЗаписей = РегистрыСведений.ЗавершенныеУсловияРетроБонусовПоставщиков.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ДокументУсловий.Установить(ДокументУсловий);
			
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.ДокументУсловий = ДокументУсловий;
			НоваяЗапись.Завершено = ЗавершитьРасчеты;
			НоваяЗапись.Ответственный = ТекущийПользователь;
			НаборЗаписей.Записать();
			
			ДатаВМиллисекундах = ТекущаяУниверсальнаяДатаВМиллисекундах();
			НаборЗаписейИстория = 
				РегистрыСведений.ЗавершенныеУсловияРетроБонусовПоставщиковИстория.СоздатьНаборЗаписей();
			НаборЗаписейИстория.Отбор.ДокументУсловий.Установить(ДокументУсловий);
			НаборЗаписейИстория.Отбор.ДатаВМиллисекундах.Установить(ДатаВМиллисекундах);
			
			НоваяЗаписьИстории = НаборЗаписейИстория.Добавить();
			НоваяЗаписьИстории.ДокументУсловий = ДокументУсловий;
			НоваяЗаписьИстории.ПериодЗаписи = ТекущаяДатаСеанса();
			НоваяЗаписьИстории.ДатаВМиллисекундах = ДатаВМиллисекундах;
			НоваяЗаписьИстории.Завершено = ЗавершитьРасчеты;
			НоваяЗаписьИстории.Ответственный = ТекущийПользователь;
			НаборЗаписейИстория.Записать();
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ШаблонОшибки = НСтр("ru = 'Не удалось изменить статус расчетов по причине: %1.'");
		ПредставлениеОшибки = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонОшибки,
			ПредставлениеОшибки);
		РезультатИзменения.ЕстьОшибки = Истина;
		РезультатИзменения.ИнформацияОбОшибке = ТекстОшибки;
		
	КонецПопытки;
	
	Возврат РезультатИзменения;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Параметры:
//  ДокументыУсловий - Массив из ДокументСсылка.УсловияРетроБонусовПоставщика - Документы условий
//  ЗавершитьРасчеты - Булево - Значение завершения
// 
// Возвращаемое значение:
//  Массив из ДокументСсылка.УсловияРетроБонусовПоставщика
//
Функция ДокументыУсловийСИнымСтатусомРасчетов(ДокументыУсловий, ЗавершитьРасчеты)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументыУсловий", ДокументыУсловий);
	Запрос.УстановитьПараметр("ЗавершитьРасчеты", ЗавершитьРасчеты);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УсловияРетроБонусовПоставщика.Ссылка КАК ДокументУсловий
	|ИЗ
	|	Документ.УсловияРетроБонусовПоставщика КАК УсловияРетроБонусовПоставщика
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗавершенныеУсловияРетроБонусовПоставщиков КАК
	|			ЗавершенныеУсловияРетроБонусовПоставщиков
	|		ПО УсловияРетроБонусовПоставщика.Ссылка = ЗавершенныеУсловияРетроБонусовПоставщиков.ДокументУсловий
	|ГДЕ
	|	УсловияРетроБонусовПоставщика.Ссылка В (&ДокументыУсловий)
	|	И ЕСТЬNULL(ЗавершенныеУсловияРетроБонусовПоставщиков.Завершено, ЛОЖЬ) <> &ЗавершитьРасчеты";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ДокументУсловий");
	
КонецФункции

#КонецОбласти

#КонецЕсли