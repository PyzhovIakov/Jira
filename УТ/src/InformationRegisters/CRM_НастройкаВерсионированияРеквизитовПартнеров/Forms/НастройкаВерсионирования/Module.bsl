
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТолькоПросмотр = НЕ Пользователи.ЭтоПолноправныйПользователь();
		
	Если Параметры.Свойство("Данные") Тогда
		Если Параметры.Данные = "Клиенты" Тогда
			Заголовок = НСтр("ru='Настройка истории изменения данных клиентов';en='Setting history of customer data change'");
			Элементы.ГруппаИнтересы.Видимость = Ложь;
		ИначеЕсли Параметры.Данные = "Интересы" Тогда
			Заголовок = НСтр("ru='Настройка истории изменения данных интересов';
				|en='Configure the history of changing lead data'");
			Элементы.ГруппаСтраницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
			Элементы.ГруппаКлиенты.Видимость = Ложь;
			Элементы.ГруппаКонтакты.Видимость = Ложь;
			Элементы.ГруппаПотенциальныеКлиенты.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	МассивПропуститьРеквизиты = Новый Массив();
	МассивПропуститьРеквизиты.Добавить("Код");
	МассивПропуститьРеквизиты.Добавить("Предопределенный");
	МассивПропуститьРеквизиты.Добавить("Ссылка");
	МассивПропуститьРеквизиты.Добавить("ЭтоГруппа");
	//МассивПропуститьРеквизиты.Добавить("ПометкаУдаления");
	МассивПропуститьРеквизиты.Добавить("ИмяПредопределенныхДанных");
	МассивПропуститьРеквизиты.Добавить("Проведен");
	МассивПропуститьРеквизиты.Добавить("Автор");
	МассивПропуститьРеквизиты.Добавить("ДокументОснование");
	МассивПропуститьРеквизиты.Добавить("Завершен");
	МассивПропуститьРеквизиты.Добавить("ПричинаОтказа");
	МассивПропуститьРеквизиты.Добавить("ДатаЗакрытия");
	МассивПропуститьРеквизиты.Добавить("ВероятностьСделки");
	МассивПропуститьРеквизиты.Добавить("Фотография");
	МассивПропуститьРеквизиты.Добавить("Идентификатор");
	МассивПропуститьРеквизиты.Добавить("ДатаРегистрации");
	МассивПропуститьРеквизиты.Добавить("НеОбновлятьФото");
	
	// Реквизиты справочника Партнеры.
	Для Каждого Реквизит Из Метаданные.Справочники.Партнеры.СтандартныеРеквизиты Цикл
		Если МассивПропуститьРеквизиты.Найти(Реквизит.Имя) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаРеквизиты.Добавить();
		НоваяСтрока.Имя = Реквизит.Имя;
		НоваяСтрока.Представление = Реквизит.Представление();
	КонецЦикла;
	Для Каждого Реквизит Из Метаданные.Справочники.Партнеры.Реквизиты Цикл
		Если МассивПропуститьРеквизиты.Найти(Реквизит.Имя) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаРеквизиты.Добавить();
		НоваяСтрока.Имя = Реквизит.Имя;
		НоваяСтрока.Представление = Реквизит.Синоним;
	КонецЦикла;
	
	Если CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
		НоваяСтрока = ТаблицаРеквизиты.Добавить();
		НоваяСтрока.Имя = "CRM_УровниДоступа";
		НоваяСтрока.Представление = НСтр("ru = 'Уровни доступа'");
	КонецЕсли;
	
	// Реквизиты справочника КонтактныеЛицаПартнеров.
	Для Каждого Реквизит Из Метаданные.Справочники.КонтактныеЛицаПартнеров.СтандартныеРеквизиты Цикл
		Если МассивПропуститьРеквизиты.Найти(Реквизит.Имя) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаРеквизитыКонтактногоЛица.Добавить();
		НоваяСтрока.Имя = Реквизит.Имя;
		НоваяСтрока.Представление = Реквизит.Представление();
	КонецЦикла;
	Для Каждого Реквизит Из Метаданные.Справочники.КонтактныеЛицаПартнеров.Реквизиты Цикл
		Если МассивПропуститьРеквизиты.Найти(Реквизит.Имя) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаРеквизитыКонтактногоЛица.Добавить();
		НоваяСтрока.Имя = Реквизит.Имя;
		НоваяСтрока.Представление = Реквизит.Синоним;
	КонецЦикла;
	
	Если CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
		НоваяСтрока = ТаблицаРеквизитыКонтактногоЛица.Добавить();
		НоваяСтрока.Имя = "CRM_УровниДоступа";
		НоваяСтрока.Представление = НСтр("ru = 'Уровни доступа'");
	КонецЕсли;
	
	// Реквизиты документа Интерес.
	Для Каждого Реквизит Из Метаданные.Документы.CRM_Интерес.СтандартныеРеквизиты Цикл
		Если МассивПропуститьРеквизиты.Найти(Реквизит.Имя) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаРеквизитыИнтерес.Добавить();
		НоваяСтрока.Имя = Реквизит.Имя;
		НоваяСтрока.Представление = Реквизит.Представление();
	КонецЦикла;
	Для Каждого Реквизит Из Метаданные.Документы.CRM_Интерес.Реквизиты Цикл
		Если МассивПропуститьРеквизиты.Найти(Реквизит.Имя) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаРеквизитыИнтерес.Добавить();
		НоваяСтрока.Имя = Реквизит.Имя;
		НоваяСтрока.Представление = Реквизит.Синоним;
	КонецЦикла;
	
	// Реквизиты справочника CRM_ПотенциальныеКлиенты.
	Для Каждого Реквизит Из Метаданные.Справочники.CRM_ПотенциальныеКлиенты.СтандартныеРеквизиты Цикл
		Если МассивПропуститьРеквизиты.Найти(Реквизит.Имя) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаРеквизитыПотенциальныйКлиент.Добавить();
		НоваяСтрока.Имя = Реквизит.Имя;
		НоваяСтрока.Представление = Реквизит.Представление();
	КонецЦикла;
	Для Каждого Реквизит Из Метаданные.Справочники.CRM_ПотенциальныеКлиенты.Реквизиты Цикл
		Если МассивПропуститьРеквизиты.Найти(Реквизит.Имя) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаРеквизитыПотенциальныйКлиент.Добавить();
		НоваяСтрока.Имя = Реквизит.Имя;
		НоваяСтрока.Представление = Реквизит.Синоним;
	КонецЦикла;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьДополнительныеРеквизитыИСведения") Тогда
		// Дополнительные реквизиты справочника Партнеры.
		МассивРеквизитов = Новый Массив();
		Для Каждого СтрокаТаблицы Из УправлениеСвойствами.НаборСвойствПоИмени("Справочник_Партнеры_Общие").ДополнительныеРеквизиты Цикл
			Если МассивРеквизитов.Найти(СтрокаТаблицы.Свойство) = Неопределено Тогда
				МассивРеквизитов.Добавить(СтрокаТаблицы.Свойство);
			КонецЕсли;
		КонецЦикла;
		Для Каждого СтрокаТаблицы Из УправлениеСвойствами.НаборСвойствПоИмени("Справочник_Партнеры_Компании_CRM").ДополнительныеРеквизиты Цикл
			Если МассивРеквизитов.Найти(СтрокаТаблицы.Свойство) = Неопределено Тогда
				МассивРеквизитов.Добавить(СтрокаТаблицы.Свойство);
			КонецЕсли;
		КонецЦикла;
		Для Каждого СтрокаТаблицы Из УправлениеСвойствами.НаборСвойствПоИмени("Справочник_Партнеры_ЧастныеЛица_CRM").ДополнительныеРеквизиты Цикл
			Если МассивРеквизитов.Найти(СтрокаТаблицы.Свойство) = Неопределено Тогда
				МассивРеквизитов.Добавить(СтрокаТаблицы.Свойство);
			КонецЕсли;
		КонецЦикла;
		Для Каждого ДопРеквизитСсылка Из МассивРеквизитов Цикл
			НоваяСтрока = ТаблицаРеквизиты.Добавить();
			НоваяСтрока.Имя = ДопРеквизитСсылка;
			НоваяСтрока.Представление = Строка(ДопРеквизитСсылка);
		КонецЦикла;
		
		// Дополнительные реквизиты справочника КонтактныеЛицаПартнеров.
		МассивРеквизитов = Новый Массив();
		Для Каждого СтрокаТаблицы Из УправлениеСвойствами.НаборСвойствПоИмени("Справочник_КонтактныеЛицаПартнеров").ДополнительныеРеквизиты Цикл
			Если МассивРеквизитов.Найти(СтрокаТаблицы.Свойство) = Неопределено Тогда
				МассивРеквизитов.Добавить(СтрокаТаблицы.Свойство);
			КонецЕсли;
		КонецЦикла;
		Для Каждого ДопРеквизитСсылка Из МассивРеквизитов Цикл
			НоваяСтрока = ТаблицаРеквизитыКонтактногоЛица.Добавить();
			НоваяСтрока.Имя = ДопРеквизитСсылка;
			НоваяСтрока.Представление = Строка(ДопРеквизитСсылка);
		КонецЦикла;
		
		// Дополнительные реквизиты документа Интерес.
		МассивРеквизитов = Новый Массив();
		Для Каждого СтрокаТаблицы Из УправлениеСвойствами.НаборСвойствПоИмени("Документ_CRM_Интерес").ДополнительныеРеквизиты Цикл
			Если МассивРеквизитов.Найти(СтрокаТаблицы.Свойство) = Неопределено Тогда
				МассивРеквизитов.Добавить(СтрокаТаблицы.Свойство);
			КонецЕсли;
		КонецЦикла;
		Для Каждого ДопРеквизитСсылка Из МассивРеквизитов Цикл
			НоваяСтрока = ТаблицаРеквизитыИнтерес.Добавить();
			НоваяСтрока.Имя = ДопРеквизитСсылка;
			НоваяСтрока.Представление = Строка(ДопРеквизитСсылка);
		КонецЦикла;
		
		// Дополнительные реквизиты справочника CRM_ПотенциальныеКлиенты.
		МассивРеквизитов = Новый Массив();
		Для Каждого СтрокаТаблицы Из УправлениеСвойствами.НаборСвойствПоИмени("Справочник_CRM_ПотенциальныеКлиенты").ДополнительныеРеквизиты Цикл
			Если МассивРеквизитов.Найти(СтрокаТаблицы.Свойство) = Неопределено Тогда
				МассивРеквизитов.Добавить(СтрокаТаблицы.Свойство);
			КонецЕсли;
		КонецЦикла;
		Для Каждого ДопРеквизитСсылка Из МассивРеквизитов Цикл
			НоваяСтрока = ТаблицаРеквизитыПотенциальныйКлиент.Добавить();
			НоваяСтрока.Имя = ДопРеквизитСсылка;
			НоваяСтрока.Представление = Строка(ДопРеквизитСсылка);
		КонецЦикла;
		
	КонецЕсли;
	
	// Контактная информация справочника Партнеры.
	МассивРодителей = Новый Массив();
	МассивРодителей.Добавить(Справочники.ВидыКонтактнойИнформации.СправочникПартнеры);
	МассивРодителей.Добавить(Справочники.ВидыКонтактнойИнформации.CRM_СправочникПартнерыЧастноеЛицо);
	МассивРодителей.Добавить(Справочники.ВидыКонтактнойИнформации.CRM_СправочникПартнерыКомпания);
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВидыКонтактнойИнформации
	|ГДЕ
	|	Родитель В (&МассивРодителей)
	|	И НЕ ПометкаУдаления
	|	И НЕ ЭтоГруппа
	|УПОРЯДОЧИТЬ ПО
	|	Наименование
	|");
	Запрос.УстановитьПараметр("МассивРодителей", МассивРодителей);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ТаблицаРеквизиты.Добавить();
		НоваяСтрока.Имя = Выборка.Ссылка;
		НоваяСтрока.Представление = Строка(Выборка.Ссылка);
	КонецЦикла;
	
	// Контактная информация справочника КонтактныеЛицаПартнеров.
	МассивРодителей = Новый Массив();
	МассивРодителей.Добавить(Справочники.ВидыКонтактнойИнформации.СправочникКонтактныеЛицаПартнеров);
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВидыКонтактнойИнформации
	|ГДЕ
	|	Родитель В (&МассивРодителей)
	|	И НЕ ПометкаУдаления
	|	И НЕ ЭтоГруппа
	|УПОРЯДОЧИТЬ ПО
	|	Наименование
	|");
	Запрос.УстановитьПараметр("МассивРодителей", МассивРодителей);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ТаблицаРеквизитыКонтактногоЛица.Добавить();
		НоваяСтрока.Имя = Выборка.Ссылка;
		НоваяСтрока.Представление = Строка(Выборка.Ссылка);
	КонецЦикла;
	
	// Контактная информация справочника CRM_ПотенциальныеКлиенты.
	МассивРодителей = Новый Массив();
	МассивРодителей.Добавить(Справочники.ВидыКонтактнойИнформации.СправочникCRM_ПотенциальныеКлиенты);
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВидыКонтактнойИнформации
	|ГДЕ
	|	Родитель В (&МассивРодителей)
	|	И НЕ ПометкаУдаления
	|	И НЕ ЭтоГруппа
	|УПОРЯДОЧИТЬ ПО
	|	Наименование
	|");
	Запрос.УстановитьПараметр("МассивРодителей", МассивРодителей);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ТаблицаРеквизитыПотенциальныйКлиент.Добавить();
		НоваяСтрока.Имя = Выборка.Ссылка;
		НоваяСтрока.Представление = Строка(Выборка.Ссылка);
	КонецЦикла;
	
	НоваяСтрока = ТаблицаРеквизиты.Добавить();
	НоваяСтрока.Имя = "Сегмент";
	НоваяСтрока.Представление = НСтр("ru='Сегмент клиента';en='Customer Segment'");
	
	бОтмеченРеквизитСегмент = Ложь;
	СтруктураНастройки = РегистрыСведений.CRM_НастройкаВерсионированияРеквизитовПартнеров.ПолучитьНастройку();
	Если ТипЗнч(СтруктураНастройки) = Тип("Структура")
		 И ТипЗнч(СтруктураНастройки.СтруктураНастройки) = Тип("Структура") Тогда
		Если СтруктураНастройки.СтруктураНастройки.Свойство("Реквизиты")
			 И ТипЗнч(СтруктураНастройки.СтруктураНастройки.Реквизиты) = Тип("Массив") Тогда
			Для Каждого СтрокаТаблицы Из ТаблицаРеквизиты Цикл
				Если СтруктураНастройки.СтруктураНастройки.Реквизиты.Найти(СтрокаТаблицы.Имя) <> Неопределено Тогда
					СтрокаТаблицы.Пометка = Истина;
					Если СтрокаТаблицы.Имя = "Сегмент" Тогда
						бОтмеченРеквизитСегмент = Истина;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Если СтруктураНастройки.СтруктураНастройки.Свойство("РеквизитыКонтактногоЛица")
			 И ТипЗнч(СтруктураНастройки.СтруктураНастройки.РеквизитыКонтактногоЛица) = Тип("Массив") Тогда
			Для Каждого СтрокаТаблицы Из ТаблицаРеквизитыКонтактногоЛица Цикл
				Если СтруктураНастройки.СтруктураНастройки.РеквизитыКонтактногоЛица.Найти(СтрокаТаблицы.Имя) <> Неопределено Тогда
					СтрокаТаблицы.Пометка = Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Если СтруктураНастройки.СтруктураНастройки.Свойство("РеквизитыИнтереса")
			 И ТипЗнч(СтруктураНастройки.СтруктураНастройки.РеквизитыИнтереса) = Тип("Массив") Тогда
			Для Каждого СтрокаТаблицы Из ТаблицаРеквизитыИнтерес Цикл
				Если СтруктураНастройки.СтруктураНастройки.РеквизитыИнтереса.Найти(СтрокаТаблицы.Имя) <> Неопределено Тогда
					СтрокаТаблицы.Пометка = Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Если СтруктураНастройки.СтруктураНастройки.Свойство("РеквизитыПотенциальногоКлиента")
			 И ТипЗнч(СтруктураНастройки.СтруктураНастройки.РеквизитыПотенциальногоКлиента) = Тип("Массив") Тогда
			Для Каждого СтрокаТаблицы Из ТаблицаРеквизитыПотенциальныйКлиент Цикл
				Если СтруктураНастройки.СтруктураНастройки.РеквизитыПотенциальногоКлиента.Найти(СтрокаТаблицы.Имя) <> Неопределено Тогда
					СтрокаТаблицы.Пометка = Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;

	Элементы.ГруппаПотенциальныеКлиенты.Видимость = ПолучитьФункциональнуюОпцию("CRM_ИспользоватьПотенциальныхКлиентов");
	
	Элементы.РасписаниеОчистки.Заголовок = ТекущееРасписание();
	Элементы.ПериодХраненияИсторииРеквизитовОбъектов.Видимость = НаборКонстант.CRM_ОчищатьИсториюРеквизитовОбъектов;
	Элементы.ГруппаРасписание.Видимость = НаборКонстант.CRM_ОчищатьИсториюРеквизитовОбъектов;
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события формы "ПередЗакрытием".
//
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	Если Модифицированность Тогда
		Отказ = Истина;
		ОбратныйВызов = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОбратныйВызов,
			 НСтр("ru='Данные были изменены. Сохранить данные?';en='Data has been changed. Save data?'"),
			 РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли;	
КонецПроцедуры // ПередЗакрытием()

&НаКлиенте
// Процедура - обработчик ответа на вопрос перед закрытием формы.
//
// Параметры:
//	Результат				- КодВозвратаДиалога	- Ответ на вопрос.
//	ДополнительныеПараметры	- Структура				- Структура дополнительных параметров.
//
Процедура ПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
    Если Результат = КодВозвратаДиалога.Да Тогда
		СохранитьНастройку();
	ИначеЕсли Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
    КонецЕсли;
	Модифицированность	= Ложь;
	Закрыть();
КонецПроцедуры // ПередЗакрытиемЗавершение()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОчищатьИсториюРеквизитовОбъектовПриИзменении(Элемент)
	
	Элементы.ПериодХраненияИсторииРеквизитовОбъектов.Видимость = НаборКонстант.CRM_ОчищатьИсториюРеквизитовОбъектов;
	Элементы.ГруппаРасписание.Видимость = НаборКонстант.CRM_ОчищатьИсториюРеквизитовОбъектов;
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	Если НаборКонстант.CRM_ОчищатьИсториюРеквизитовОбъектов
		И НаборКонстант.CRM_ПериодХраненияИсторииРеквизитовОбъектов = 0 Тогда
		НаборКонстант.CRM_ПериодХраненияИсторииРеквизитовОбъектов = 180;
		Подключаемый_ПриИзмененииРеквизита(Элементы.ПериодХраненияИсторииРеквизитовОбъектов);
	КонецЕсли;
	
	УстановитьПараметрРегламентногоЗадания("Использование", НаборКонстант.CRM_ОчищатьИсториюРеквизитовОбъектов);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодХраненияИсторииПриИзменении(Элемент)
	
	Если НаборКонстант.CRM_ПериодХраненияИсторииРеквизитовОбъектов < 7 Тогда
		НаборКонстант.CRM_ПериодХраненияИсторииРеквизитовОбъектов = 7;
	КонецЕсли;
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаРеквизиты

&НаКлиенте
Процедура ТаблицаРеквизитыПометкаПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура КомандаОК(Команда)
	ВопросПервоначальноеЗаполнение = СохранитьНастройку();
	Если ВопросПервоначальноеЗаполнение Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("КомандаОКЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru='В истории реквизитов клиентов не обнаружено записей по существующим"
"ABC/XYZ классам или сегментам клиентов."
"Выполнить первоначальное заполнение истории?';en='There are no records in customers history details by"
"ABC/XYZ classes or segments of customers."
"Make initial filling of history?'"), РежимДиалогаВопрос.ДаНет);
		//
		Возврат;
	КонецЕсли;
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура КомандаОКЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ВыполнитьПервоначальноеЗаполнениеНаСервере();
		Состояние(НСтр("ru='Первоначальное заполнение выполнено'"));
	КонецЕсли;
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура КомандаУстановитьФлажкиТаблицаРеквизиты(Команда)
	Для Каждого СтрокаТаблицы Из ТаблицаРеквизиты Цикл
		СтрокаТаблицы.Пометка = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура КомандаУстановитьФлажкиТаблицаРеквизитыКонтактногоЛица(Команда)
	Для Каждого СтрокаТаблицы Из ТаблицаРеквизитыКонтактногоЛица Цикл
		СтрокаТаблицы.Пометка = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура КомандаУстановитьФлажкиТаблицаРеквизитыИнтересы(Команда)
	Для Каждого СтрокаТаблицы Из ТаблицаРеквизитыИнтерес Цикл
		СтрокаТаблицы.Пометка = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура КомандаУстановитьФлажкиТаблицаПотенциальныеКлиенты(Команда)
	Для Каждого СтрокаТаблицы Из ТаблицаРеквизитыПотенциальныйКлиент Цикл
		СтрокаТаблицы.Пометка = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура КомандаСнятьФлажкиТаблицаРеквизиты(Команда)
	Для Каждого СтрокаТаблицы Из ТаблицаРеквизиты Цикл
		СтрокаТаблицы.Пометка = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура КомандаСнятьФлажкиТаблицаРеквизитыИнтересы(Команда)
	Для Каждого СтрокаТаблицы Из ТаблицаРеквизитыИнтерес Цикл
		СтрокаТаблицы.Пометка = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура КомандаСнятьФлажкиТаблицаРеквизитыКонтактногоЛица(Команда)
	Для Каждого СтрокаТаблицы Из ТаблицаРеквизитыКонтактногоЛица Цикл
		СтрокаТаблицы.Пометка = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура КомандаСнятьФлажкиТаблицаПотенциальныеКлиенты(Команда)
	Для Каждого СтрокаТаблицы Из ТаблицаРеквизитыПотенциальныйКлиент Цикл
		СтрокаТаблицы.Пометка = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура КомандаНастроитьРасписаниеОчистки(Команда)
	
	ДиалогРасписания = Новый ДиалогРасписанияРегламентногоЗадания(ТекущееРасписание());
	ОписаниеОповещения = Новый ОписаниеОповещения("НастроитьРасписаниеОчисткиЗавершение", ЭтотОбъект);
	ДиалогРасписания.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаКоличествоИОбъемХранимойИсторииИзменений(Команда)
	ОткрытьФорму("Отчет.CRM_КоличествоИОбъемХранимойИсторииИзменений.ФормаОбъекта");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

///////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Функция СохранитьНастройку()
	СтруктураНастройки = Новый Структура("Реквизиты,РеквизитыКонтактногоЛица,РеквизитыИнтереса,
		|РеквизитыПотенциальногоКлиента",
											Новый Массив(), Новый Массив(), Новый Массив(), Новый Массив());
	
	бОтмеченРеквизитСегмент = Ложь;
	Для Каждого СтрокаТаблицы Из ТаблицаРеквизиты Цикл
		Если СтрокаТаблицы.Пометка Тогда
			СтруктураНастройки.Реквизиты.Добавить(СтрокаТаблицы.Имя);
			Если СтрокаТаблицы.Имя = "Сегмент" Тогда
				бОтмеченРеквизитСегмент = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Для Каждого СтрокаТаблицы Из ТаблицаРеквизитыКонтактногоЛица Цикл
		Если СтрокаТаблицы.Пометка Тогда
			СтруктураНастройки.РеквизитыКонтактногоЛица.Добавить(СтрокаТаблицы.Имя);
		КонецЕсли;
	КонецЦикла;
	Для Каждого СтрокаТаблицы Из ТаблицаРеквизитыИнтерес Цикл
		Если СтрокаТаблицы.Пометка Тогда
			СтруктураНастройки.РеквизитыИнтереса.Добавить(СтрокаТаблицы.Имя);
		КонецЕсли;
	КонецЦикла;
	Для Каждого СтрокаТаблицы Из ТаблицаРеквизитыПотенциальныйКлиент Цикл
		Если СтрокаТаблицы.Пометка Тогда
			СтруктураНастройки.РеквизитыПотенциальногоКлиента.Добавить(СтрокаТаблицы.Имя);
		КонецЕсли;
	КонецЦикла;

	РегистрыСведений.CRM_НастройкаВерсионированияРеквизитовПартнеров.СохранитьНастройку(СтруктураНастройки);
	Если бОтмеченРеквизитСегмент Тогда
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	СУММА(Подзапрос.КоличествоВИстории) КАК КоличествоВИстории,
		|	СУММА(Подзапрос.Количество) КАК Количество
		|ИЗ
		|	(ВЫБРАТЬ ПЕРВЫЕ 1
		|		1 КАК КоличествоВИстории,
		|		0 КАК Количество
		|	ИЗ
		|		РегистрСведений.CRM_ИсторияРеквизитовОбъектов
		|	ГДЕ
		|		Реквизит = ""Сегмент""
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ ПЕРВЫЕ 1
		|		0,
		|		1
		|	ИЗ
		|		РегистрСведений.ПартнерыСегмента) КАК Подзапрос
		|");
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			КоличествоВИстории = ?(ТипЗнч(Выборка.КоличествоВИстории) = Тип("Число"), Выборка.КоличествоВИстории, 0);
			Количество = ?(ТипЗнч(Выборка.Количество) = Тип("Число"), Выборка.Количество, 0);
			Если КоличествоВИстории = 0 И Количество > 0 Тогда
				ЕстьЗаписиПоСегментам = Ложь;
			Иначе
				ЕстьЗаписиПоСегментам = Истина;
			КонецЕсли;
		КонецЕсли;
	Иначе
		ЕстьЗаписиПоСегментам = Истина;
	КонецЕсли;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	СУММА(Подзапрос.КоличествоВИстории) КАК КоличествоВИстории,
	|	СУММА(Подзапрос.Количество) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ ПЕРВЫЕ 1
	|		1 КАК КоличествоВИстории,
	|		0 КАК Количество
	|	ИЗ
	|		РегистрСведений.CRM_ИсторияРеквизитовОбъектов
	|	ГДЕ
	|		Реквизит В (""ABCКласс"", ""XYZКласс"")
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		0,
	|		1
	|	ИЗ
	|		РегистрСведений.ABCXYZКлассификацияКлиентов) КАК Подзапрос
	|");
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		КоличествоВИстории = ?(ТипЗнч(Выборка.КоличествоВИстории) = Тип("Число"), Выборка.КоличествоВИстории, 0);
		Количество = ?(ТипЗнч(Выборка.Количество) = Тип("Число"), Выборка.Количество, 0);
		Если КоличествоВИстории = 0 И Количество > 0 Тогда
			ЕстьЗаписиПоABCXYZ = Ложь;
		Иначе
			ЕстьЗаписиПоABCXYZ = Истина;
		КонецЕсли;
	КонецЕсли;
	Модифицированность = Ложь;
	
	Возврат (Не ЕстьЗаписиПоСегментам Или Не ЕстьЗаписиПоABCXYZ);
КонецФункции

&НаСервере
Процедура ВыполнитьПервоначальноеЗаполнениеНаСервере()
	Если Не ЕстьЗаписиПоСегментам Тогда
		Набор = РегистрыСведений.ПартнерыСегмента.СоздатьНаборЗаписей();
		Набор.Прочитать();
		Набор.Записать();
	КонецЕсли;
	Если Не ЕстьЗаписиПоABCXYZ Тогда
		Набор = РегистрыСведений.ABCXYZКлассификацияКлиентов.СоздатьНаборЗаписей();
		Набор.Прочитать();
		Набор.Записать();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НастроитьРасписаниеОчисткиЗавершение(Расписание, ДополнительныеПараметры) Экспорт
	
	Если Расписание = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПараметрРегламентногоЗадания("Расписание", Расписание);
	Элементы.РасписаниеОчистки.Заголовок = Расписание;
	
КонецПроцедуры

&НаСервере
Функция ТекущееРасписание()
	Возврат ПолучитьПараметрРегламентногоЗадания("Расписание", Новый РасписаниеРегламентногоЗадания);
КонецФункции

&НаСервере
Процедура УстановитьПараметрРегламентногоЗадания(ИмяПараметра, ЗначениеПараметра)
	
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("Метаданные", Метаданные.РегламентныеЗадания.CRM_ОчисткаИсторииРеквизитовОбъектов);
	Если Не ОбщегоНазначения.РазделениеВключено() Тогда
		ПараметрыЗадания.Вставить("ИмяМетода", Метаданные.РегламентныеЗадания.CRM_ОчисткаИсторииРеквизитовОбъектов.ИмяМетода);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	СписокЗаданий = РегламентныеЗаданияСервер.НайтиЗадания(ПараметрыЗадания);
	Если СписокЗаданий.Количество() = 0 Тогда
		ПараметрыЗадания.Вставить(ИмяПараметра, ЗначениеПараметра);
		РегламентныеЗаданияСервер.ДобавитьЗадание(ПараметрыЗадания);
	Иначе
		ПараметрыЗадания = Новый Структура(ИмяПараметра, ЗначениеПараметра);
		Для Каждого Задание Из СписокЗаданий Цикл
			РегламентныеЗаданияСервер.ИзменитьЗадание(Задание, ПараметрыЗадания);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПараметрРегламентногоЗадания(ИмяПараметра, ЗначениеПоУмолчанию)
	
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("Метаданные", Метаданные.РегламентныеЗадания.CRM_ОчисткаИсторииРеквизитовОбъектов);
	Если Не ОбщегоНазначения.РазделениеВключено() Тогда
		ПараметрыЗадания.Вставить("ИмяМетода", Метаданные.РегламентныеЗадания.CRM_ОчисткаИсторииРеквизитовОбъектов.ИмяМетода);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	СписокЗаданий = РегламентныеЗаданияСервер.НайтиЗадания(ПараметрыЗадания);
	Для Каждого Задание Из СписокЗаданий Цикл
		Возврат Задание[ИмяПараметра];
	КонецЦикла;
	
	Возврат ЗначениеПоУмолчанию;
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ПриИзмененииРеквизита(Элемент)
	
	КонстантаИмя = ПриИзмененииРеквизитаСервер(Элемент.Имя);
	
	Если КонстантаИмя <> "" Тогда
		Оповестить("Запись_НаборКонстант", Новый Структура, КонстантаИмя);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПриИзмененииРеквизитаСервер(ИмяЭлемента)
	
	РеквизитПутьКДанным = Элементы[ИмяЭлемента].ПутьКДанным;
	КонстантаИмя = СохранитьЗначениеРеквизита(РеквизитПутьКДанным);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Возврат КонстантаИмя;
	
КонецФункции

&НаСервере
Функция СохранитьЗначениеРеквизита(РеквизитПутьКДанным)
	
	КонстантаИмя = "";
	Если НРег(Лев(РеквизитПутьКДанным, 14)) = НРег("НаборКонстант.") Тогда
		КонстантаИмя = Сред(РеквизитПутьКДанным, 15);
	КонецЕсли;
	
	// Сохранения значения константы.
	Если КонстантаИмя <> "" Тогда
		КонстантаМенеджер = Константы[КонстантаИмя];
		КонстантаЗначение = НаборКонстант[КонстантаИмя];
		
		Если КонстантаМенеджер.Получить() <> КонстантаЗначение Тогда
			КонстантаМенеджер.Установить(КонстантаЗначение);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат КонстантаИмя;
	
КонецФункции

#КонецОбласти