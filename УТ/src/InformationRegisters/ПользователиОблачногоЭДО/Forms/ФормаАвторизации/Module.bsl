// @strict-types

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбщегоНазначенияБЭД.СброситьРазмерыИПоложениеОкна(ЭтотОбъект);
	
	ЗаполнитьДанныеФормы();
	
	НастроитьЭлементыФормы(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипСервисаПриИзменении(Элемент)
	
	НастроитьЭлементыФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьЗабылиПарольНажатие(Элемент)
	
	НавигационнаяСсылка = НавигационнаяСсылкаЗабылиПароль();
	ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(НавигационнаяСсылка);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьНетПриложенияНажатие(Элемент)
	
	НавигационнаяСсылка = НавигационнаяСсылкаНетПриложения();
	ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(НавигационнаяСсылка);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресСервисаПриИзменении(Элемент)
	
	СтрокаПоиска = "/ru_RU/";
	Если СтрЗаканчиваетсяНа(АдресСервиса, СтрокаПоиска) Тогда
		Позиция = СтрНайти(АдресСервиса, СтрокаПоиска, НаправлениеПоиска.СКонца);
		АдресСервиса = Лев(АдресСервиса, Позиция - 1);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УчетнаяЗаписьПриИзменении(Элемент)
	
	ПриИзмененииУчетнойЗаписи();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПриложения

&НаКлиенте
Процедура ПриложенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Авторизоваться(Элементы.Приложения.ТекущаяСтрока);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Далее(Команда)
	
	Авторизоваться();
	
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	
	Авторизоваться(Элементы.Приложения.ТекущаяСтрока);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаполнениеДанныхФормы

&НаСервере
Процедура ЗаполнитьДанныеФормы()
	
	ЗаполнитьТипыСервисовДляПоключения();
	
	НовоеПодключение = Параметры.НовоеПодключение;
	УчетнаяЗапись = Параметры.УчетнаяЗапись;
	Логин = Параметры.Логин;
	
	ЕстьОтборПоУчетнойЗаписи = ЗначениеЗаполнено(УчетнаяЗапись);
	Пользователь = Пользователи.АвторизованныйПользователь();
	ЭтоПолноправныйПользователь = Пользователи.ЭтоПолноправныйПользователь();
	
	Если НовоеПодключение Тогда
		УстановитьТипСервисаПоУмолчанию();
	Иначе
		ПриИзмененииУчетнойЗаписи();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТипыСервисовДляПоключения()
	
	СписокВыбораТипаСервиса = Элементы.ТипСервиса.СписокВыбора; // СписокЗначений из Строка
	СписокВыбораТипаСервиса.Добавить(ТипСервиса1СФреш(), НСтр("ru = '1cfresh.com'"));
	СписокВыбораТипаСервиса.Добавить(ТипСервисаДругой(), НСтр("ru = 'Указать адрес...'"));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТипСервисаПоУмолчанию()
	
	ТипСервиса = ТипСервиса1СФреш();
	
КонецПроцедуры

// Параметры:
//  ПриложенияДляВыбора - Массив из Структура:
//  * Наименование - Строка
//  * АдресОбласти - Строка
//  * НомерОбласти - Число
&НаСервере
Процедура ЗаполнитьПриложенияДляВыбора(ПриложенияДляВыбора)
	
	Если ЗначениеЗаполнено(Приложения) Тогда
		Приложения.Очистить();
	КонецЕсли;
	
	Для Каждого ПриложениеДляВыбора Из ПриложенияДляВыбора Цикл
		НовоеПриложение = Приложения.Добавить();
		НовоеПриложение.Наименование = СтрШаблон("%1 (%2)",
			ПриложениеДляВыбора.Наименование, Формат(ПриложениеДляВыбора.НомерОбласти, "ЧГ=0;"));
		НовоеПриложение.АдресОбласти = ПриложениеДляВыбора.АдресОбласти;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область НастройкаЭлементовФормы

// Параметры:
//  Форма - См. РегистрСведений.ПользователиОблачногоЭДО.Форма.ФормаАвторизации
&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьЭлементыФормы(Форма)
	
	Элементы = Форма.Элементы;
	
	ЭтоТипСервиса1СФреш = (Форма.ТипСервиса = ТипСервиса1СФреш());
	
	Если Форма.НовоеПодключение Тогда
		Элементы.АдресСервиса.Видимость = Не ЭтоТипСервиса1СФреш;
		Элементы.НадписьЗабылиПароль.Видимость = ЭтоТипСервиса1СФреш;
		Элементы.НадписьНетПриложения.Видимость = ЭтоТипСервиса1СФреш;
		Форма.ТекущийЭлемент = ?(ЭтоТипСервиса1СФреш, Элементы.Логин, Элементы.АдресСервиса);
		Элементы.УчетнаяЗапись.Видимость = Ложь;
		Элементы.Пользователь.Видимость = Ложь;
	Иначе
		Элементы.ТипСервиса.Видимость = Ложь;
		Элементы.АдресСервиса.Видимость = Ложь;
		Форма.ТекущийЭлемент = ?(ПустаяСтрока(Форма.Логин), Элементы.Логин, Элементы.Пароль);
		Элементы.НадписьЗабылиПароль.Видимость = ЭтоТипСервиса1СФреш;
		Элементы.НадписьНетПриложения.Видимость = Ложь;
		Если Форма.ЕстьОтборПоУчетнойЗаписи Тогда
			Элементы.УчетнаяЗапись.Доступность = Ложь;
		КонецЕсли;
		Если Не Форма.ЭтоПолноправныйПользователь Тогда
			Элементы.Пользователь.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	НастроитьОтображениеОшибки(Форма);
	
КонецПроцедуры

// Параметры:
//  Форма - См. РегистрСведений.ПользователиОблачногоЭДО.Форма.ФормаАвторизации
//  ТекстОшибки - Строка
&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьОтображениеОшибки(Форма, ТекстОшибки = "")
	
	Элементы = Форма.Элементы;
	
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		Элементы.КартинкаОшибкаВхода.Видимость = Истина;
		Элементы.НадписьОшибкаВхода.Видимость = Истина;
		Элементы.НадписьОшибкаВхода.Заголовок = ТекстОшибки;
	Иначе
		Элементы.КартинкаОшибкаВхода.Видимость = Ложь;
		Элементы.НадписьОшибкаВхода.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьПриложенияДляВыбора()
	
	Элементы.СтраницыЭтапов.ТекущаяСтраница = Элементы.СтраницаВыборПриложения;
	
	Элементы.КнопкаВыбрать.КнопкаПоУмолчанию = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область УчетныеЗаписи

&НаСервере
Процедура ПриИзмененииУчетнойЗаписи()
	
	Если Не ЗначениеЗаполнено(УчетнаяЗапись) Тогда
		Возврат;
	КонецЕсли;
	
	АдресСервиса = Справочники.УчетныеЗаписиОблачногоЭДО.АдресСервиса(УчетнаяЗапись);
	ЭтоСервис1СФреш = РегистрыСведений.ПользователиОблачногоЭДО.ЭтоСервис1СФреш(АдресСервиса);
	ТипСервиса = ?(ЭтоСервис1СФреш, ТипСервиса1СФреш(), ТипСервисаДругой());
	
КонецПроцедуры

#КонецОбласти

#Область ТипыСервисовДляПодключения

// Возвращаемое значение:
//  Строка
&НаКлиентеНаСервереБезКонтекста
Функция ТипСервиса1СФреш()
	Возврат "1cfresh"
КонецФункции

// Возвращаемое значение:
//  Строка
&НаКлиентеНаСервереБезКонтекста
Функция ТипСервисаДругой()
	Возврат "ДругойСервис";
КонецФункции

#КонецОбласти

#Область Авторизация

// Параметры:
//  ИдентификаторПриложения - Неопределено,Число
&НаКлиенте
Процедура Авторизоваться(ИдентификаторПриложения = Неопределено)
	
	ТекстОшибки = "";
	Если ПроверитьЗаполнениеРеквизитов(ТекстОшибки) Тогда
		НастроитьОтображениеОшибки(ЭтотОбъект, ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	Результат = АвторизоватьсяВФоне(ИдентификаторПриложения);
	
	ДлительнаяОперация = Результат.ДлительнаяОперация;
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	ИначеЕсли ДлительнаяОперация.Статус <> "Выполняется" Тогда
		АвторизоватьсяЗавершение(ДлительнаяОперация, Результат.ПараметрыПользователя);
		Возврат;
	КонецЕсли;
	
	Элементы.СтраницыЭтапов.ТекущаяСтраница = Элементы.СтраницаОжидание;
	
	Оповещение = Новый ОписаниеОповещения("АвторизоватьсяЗавершение", ЭтотОбъект, Результат.ПараметрыПользователя);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(Результат.ДлительнаяОперация, Оповещение, ПараметрыОжидания);
	
КонецПроцедуры

// Параметры:
//  ИдентификаторПриложения - Неопределено,Число
//
// Возвращаемое значение:
//  Структура:
//  * ПараметрыПользователя - См. РегистрыСведений.ПользователиОблачногоЭДО.НовыеПараметрыПользователя
//  * ДлительнаяОперация - См. ДлительныеОперации.ВыполнитьФункцию
&НаСервере
Функция АвторизоватьсяВФоне(Знач ИдентификаторПриложения = Неопределено)
	
	ПараметрыПользователя = РегистрыСведений.ПользователиОблачногоЭДО.НовыеПараметрыПользователя();
	ПараметрыПользователя.Пользователь = Пользователь;
	ПараметрыПользователя.Логин = Логин;
	ПараметрыПользователя.Пароль = Пароль;
	
	ЭтоНоваяУчетнаяЗапись = Истина;
	
	Если ЗначениеЗаполнено(УчетнаяЗапись) Тогда
		ЭтоНоваяУчетнаяЗапись = Ложь;
		ПараметрыПользователя.АдресСервиса = АдресСервиса;
	ИначеЕсли ТипСервиса <> ТипСервиса1СФреш() Тогда
		ПараметрыПользователя.АдресСервиса = АдресСервиса;
	ИначеЕсли ИдентификаторПриложения = Неопределено Тогда
		ПараметрыПользователя.АдресСервиса = РегистрыСведений.ПользователиОблачногоЭДО.АдресСервиса1СФреш();
	Иначе
		Приложение = Приложения.НайтиПоИдентификатору(ИдентификаторПриложения);
		ПараметрыПользователя.АдресСервиса = Приложение.АдресОбласти;
	КонецЕсли;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	
	// См. РегистрыСведений.ПользователиОблачногоЭДО.Авторизоваться
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения,
		"РегистрыСведений.ПользователиОблачногоЭДО.Авторизоваться", ПараметрыПользователя, ЭтоНоваяУчетнаяЗапись);
	
	Результат = Новый Структура("ПараметрыПользователя,ДлительнаяОперация", ПараметрыПользователя, ДлительнаяОперация);
	Возврат Результат;
	
КонецФункции

// Параметры:
//  ДлительнаяОперация - см. ДлительныеОперации.ВыполнитьФункцию
//  ПараметрыПользователя - См. РегистрыСведений.ПользователиОблачногоЭДО.НовыеПараметрыПользователя
&НаКлиенте
Процедура АвторизоватьсяЗавершение(ДлительнаяОперация, ПараметрыПользователя) Экспорт
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	ИначеЕсли ДлительнаяОперация.Статус <> "Выполнено" Тогда
		Если ЗначениеЗаполнено(ДлительнаяОперация.КраткоеПредставлениеОшибки) Тогда
			ТекстОшибки = ДлительнаяОперация.КраткоеПредставлениеОшибки;
		Иначе
			ТекстОшибки = НСтр("ru = 'Не удалось подключиться к облачному ЭДО. Повторите попытку позже.'");
		КонецЕсли;
		НастроитьОтображениеОшибки(ЭтотОбъект, ТекстОшибки);
		Элементы.СтраницыЭтапов.ТекущаяСтраница = Элементы.СтраницаВход;
		Возврат;
	КонецЕсли;
	
	РезультатОбработки = ОбработатьРезультатАвторизации(ДлительнаяОперация.АдресРезультата);
	
	Если РезультатОбработки.Успех Тогда
		Закрыть(ПараметрыПользователя);
	ИначеЕсли ЗначениеЗаполнено(Приложения) Тогда
		ОтобразитьПриложенияДляВыбора();
	Иначе
		Элементы.СтраницыЭтапов.ТекущаяСтраница = Элементы.СтраницаВход;
	КонецЕсли;
	
КонецПроцедуры

// Параметры:
//  АдресРезультата - Строка
// 
// Возвращаемое значение:
//  Структура:
//  * Успех - Булево
&НаСервере
Функция ОбработатьРезультатАвторизации(Знач АдресРезультата)
	
	РезультатОбработки = Новый Структура("Успех", Ложь);
	
	Если ЗначениеЗаполнено(Приложения) Тогда
		Приложения.Очистить();
	КонецЕсли;
	
	РезультатАвторизации = ПолучитьИзВременногоХранилища(АдресРезультата);// См. РегистрыСведений.ПользователиОблачногоЭДО.Авторизоваться
	УдалитьИзВременногоХранилища(АдресРезультата);
	
	Если ЗначениеЗаполнено(РезультатАвторизации.ТекстОшибки) Тогда
		НастроитьОтображениеОшибки(ЭтотОбъект, РезультатАвторизации.ТекстОшибки);
		Возврат РезультатОбработки;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РезультатАвторизации.ПриложенияДляВыбора) Тогда
		ЗаполнитьПриложенияДляВыбора(РезультатАвторизации.ПриложенияДляВыбора);
		Возврат РезультатОбработки;
	КонецЕсли;
	
	РезультатОбработки.Успех = Истина;
	
	Возврат РезультатОбработки;
	
КонецФункции

// Параметры:
//  ТекстОшибки - Строка
// 
// Возвращаемое значение:
//  Булево
&НаКлиенте
Функция ПроверитьЗаполнениеРеквизитов(ТекстОшибки)
	
	ПустыеРеквизиты = Новый Массив; // Массив из Строка
	
	Если НовоеПодключение Тогда
		
		Если ТипСервиса = ТипСервисаДругой() И ПустаяСтрока(АдресСервиса) Тогда
			ПустыеРеквизиты.Добавить(НСтр("ru = 'URL'"));
		КонецЕсли;
		
	Иначе
		
		Если Не ЗначениеЗаполнено(УчетнаяЗапись) Тогда
			ПустыеРеквизиты.Добавить(НСтр("ru = 'Учетная запись'"));
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Пользователь) Тогда
			ПустыеРеквизиты.Добавить(НСтр("ru = 'Пользователь'"));
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПустаяСтрока(Логин) Тогда
		ПустыеРеквизиты.Добавить(НСтр("ru = 'Логин'"));
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПустыеРеквизиты) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ТекстОшибки = НСтр("ru = 'Не указан'") + " " + СтрСоединить(ПустыеРеквизиты, ", ");
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область НавигационныеСсылки

// Возвращаемое значение:
//  Строка
&НаСервереБезКонтекста
Функция НавигационнаяСсылкаЗабылиПароль()
	Возврат РегистрыСведений.ПользователиОблачногоЭДО.АдресСервиса1СФреш() + "/recover";
КонецФункции

// Возвращаемое значение:
//  Строка
&НаСервереБезКонтекста
Функция НавигационнаяСсылкаНетПриложения()
	Возврат "https://1cfresh.com/register/open";
КонецФункции

#КонецОбласти

#КонецОбласти
