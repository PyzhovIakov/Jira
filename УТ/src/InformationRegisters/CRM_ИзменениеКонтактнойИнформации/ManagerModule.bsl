#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Добавляет контактные данные.
//
// Параметры:
//	ВладелецКИ - СправочникСсылка - владелец контактной информации.
//
Процедура ДобавитьДанные(ВладелецКИ) Экспорт
	
	СвязыватьРанееПолученныеEmailиЗвонкиСКлиентами =
		ПолучитьФункциональнуюОпцию("CRM_СвязыватьРанееПолученныеEmailиЗвонкиСКлиентами");
	Если НЕ СвязыватьРанееПолученныеEmailиЗвонкиСКлиентами Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеДопустимыхТипов = Метаданные.РегистрыСведений.CRM_ИзменениеКонтактнойИнформации.Измерения.Объект.Тип;

	ВладелецКИДопустим = ЗначениеЗаполнено(ВладелецКИ) И ОписаниеДопустимыхТипов.СодержитТип( ТипЗнч(ВладелецКИ) );
	
	Если НЕ ВладелецКИДопустим Тогда
		Возврат;
	КонецЕсли;
	
	// получение измененных видов КИ
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НоваяКИ.Ссылка КАК ВладелецКИ,
		|	НоваяКИ.Вид КАК ВидКИ,
		|	НоваяКИ.Тип КАК ТипКИ,
		|	НоваяКИ.АдресЭП КАК АдресЭП,
		|	НоваяКИ.НомерТелефона КАК НомерТелефона
		|ПОМЕСТИТЬ ВремНоваяКИБезЗначения
		|ИЗ
		|	&НоваяКИ КАК НоваяКИ
		|ГДЕ
		|	НЕ НоваяКИ.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ПустаяСсылка)
		|	И НЕ НоваяКИ.Представление = """"
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВремНоваяКИБезЗначения.ВладелецКИ КАК ВладелецКИ,
		|	ВремНоваяКИБезЗначения.ВидКИ КАК ВидКИ,
		|	ВЫБОР
		|		КОГДА ВремНоваяКИБезЗначения.ТипКИ = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
		|			ТОГДА ВремНоваяКИБезЗначения.АдресЭП
		|		КОГДА ВремНоваяКИБезЗначения.ТипКИ = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
		|			ТОГДА ВремНоваяКИБезЗначения.НомерТелефона
		|		ИНАЧЕ NULL
		|	КОНЕЦ КАК ЗначениеКИ,
		|	ВремНоваяКИБезЗначения.ТипКИ КАК ТипКИ
		|ПОМЕСТИТЬ ВремНоваяКИ
		|ИЗ
		|	ВремНоваяКИБезЗначения КАК ВремНоваяКИБезЗначения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПредыдущаяКИ.Контакт КАК ВладелецКИ,
		|	ПредыдущаяКИ.ВидКонтактнойИнформации КАК ВидКИ,
		|	ПредыдущаяКИ.СтрокаПоиска КАК ЗначениеКИ,
		|	ВЫРАЗИТЬ(ПредыдущаяКИ.ВидКонтактнойИнформации КАК Справочник.ВидыКонтактнойИнформации).Тип КАК ТипКИ
		|ПОМЕСТИТЬ ВремПредыдущаяКИ
		|ИЗ
		|	&ПредыдущаяКИ КАК ПредыдущаяКИ
		|ГДЕ
		|	НЕ ПредыдущаяКИ.ВидКонтактнойИнформации = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ПустаяСсылка)
		|	И НЕ ПредыдущаяКИ.СтрокаПоиска = """"
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЫБОР
		|		КОГДА ВремНоваяКИ.ВидКИ ЕСТЬ NULL
		|			ТОГДА ВремПредыдущаяКИ.ВидКИ
		|		ИНАЧЕ ВремНоваяКИ.ВидКИ
		|	КОНЕЦ КАК ВидКИ
		|ПОМЕСТИТЬ ИзмененныеВидыКИ
		|ИЗ
		|	ВремНоваяКИ КАК ВремНоваяКИ
		|		ПОЛНОЕ СОЕДИНЕНИЕ ВремПредыдущаяКИ КАК ВремПредыдущаяКИ
		|		ПО ВремНоваяКИ.ВладелецКИ = ВремПредыдущаяКИ.ВладелецКИ
		|			И ВремНоваяКИ.ВидКИ = ВремПредыдущаяКИ.ВидКИ
		|			И ВремНоваяКИ.ЗначениеКИ = ВремПредыдущаяКИ.ЗначениеКИ
		|ГДЕ
		|	(ВремНоваяКИ.ЗначениеКИ ЕСТЬ NULL
		// BSLLS:LogicalOrInTheWhereSectionOfQuery-off
		// Допустимое использоваине ИЛИ в секции ГДЕ запроса.
		|			ИЛИ ВремПредыдущаяКИ.ЗначениеКИ ЕСТЬ NULL)
		// BSLLS:LogicalOrInTheWhereSectionOfQuery-on
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИзмененныеВидыКИ.ВидКИ КАК ВидКИ,
		|	ВЫРАЗИТЬ(ИзмененныеВидыКИ.ВидКИ КАК Справочник.ВидыКонтактнойИнформации).Тип КАК ТипКИ
		|ИЗ
		|	ИзмененныеВидыКИ КАК ИзмененныеВидыКИ
		|ГДЕ
		|	ВЫРАЗИТЬ(ИзмененныеВидыКИ.ВидКИ КАК Справочник.ВидыКонтактнойИнформации).Тип В (&ДопустимыеТипыКИ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВремНоваяКИ.ВладелецКИ КАК ВладелецКИ,
		|	ВремНоваяКИ.ВидКИ КАК ВидКИ,
		|	ВремНоваяКИ.ЗначениеКИ КАК ЗначениеКИ,
		|	ВремНоваяКИ.ТипКИ КАК ТипКИ
		|ИЗ
		|	ВремНоваяКИ КАК ВремНоваяКИ";
	
	МассивДопустимыхТиповКИ = Новый Массив;
	МассивДопустимыхТиповКИ.Добавить(Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	МассивДопустимыхТиповКИ.Добавить(Перечисления.ТипыКонтактнойИнформации.Телефон);
	Запрос.УстановитьПараметр("ДопустимыеТипыКИ", МассивДопустимыхТиповКИ);
	
	НоваяКИ = ВладелецКИ.КонтактнаяИнформация.Выгрузить();
	НоваяКИ.Колонки.Добавить("Ссылка", ОписаниеДопустимыхТипов);
	НоваяКИ.ЗаполнитьЗначения(ВладелецКИ, "Ссылка");
	
	Для Каждого СтрНоваяКИ Из НоваяКИ Цикл
		
		Если СтрНоваяКИ.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
			СтрНоваяКИ.НомерТелефона = CRM_ПоискКонтактов.ФорматироватьНомерДляПоиска(СокрЛП(СтрНоваяКИ.НомерТелефона));
		КонецЕсли;
		
		Если СтрНоваяКИ.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
			СтрНоваяКИ.АдресЭП = СокрЛП(СтрНоваяКИ.АдресЭП);
		КонецЕсли;
		
	КонецЦикла;
	
	Запрос.УстановитьПараметр("НоваяКИ", НоваяКИ);
	
	ДанныеПоиска = РегистрыСведений.CRM_ДанныеДляПоискаКонтактов.СоздатьНаборЗаписей();
	ДанныеПоиска.Отбор.Контакт.Установить(ВладелецКИ);
	ДанныеПоиска.Прочитать();
	Запрос.УстановитьПараметр("ПредыдущаяКИ", ДанныеПоиска.Выгрузить());
	
	МассивРезультатовЗапроса = Запрос.ВыполнитьПакет();
	ИзмененныеДанныеТЗ = МассивРезультатовЗапроса[4].Выгрузить();
	НоваяКИОбработанная = МассивРезультатовЗапроса[5].Выгрузить();
	
	ДанныеДляЗаписи = РегистрыСведений.CRM_ИзменениеКонтактнойИнформации.СоздатьНаборЗаписей();
	ДанныеДляЗаписи.Отбор.Объект.Установить(ВладелецКИ);
	ДанныеДляЗаписи.Прочитать();
	
	ТаблицаЗаписей = ДанныеДляЗаписи.Выгрузить();
	
	// очищение записей по измененным видам КИ
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВходнаяТаблицаЗаписей.Объект КАК Объект,
		|	ВходнаяТаблицаЗаписей.ВидКИ КАК ВидКИ,
		|	ВходнаяТаблицаЗаписей.ЗначениеКИ КАК ЗначениеКИ
		|ПОМЕСТИТЬ ИсходныеДанные
		|ИЗ
		|	&ВходнаяТаблицаЗаписей КАК ВходнаяТаблицаЗаписей
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИсходныеДанные.Объект КАК Объект,
		|	ИсходныеДанные.ВидКИ КАК ВидКИ,
		|	ИсходныеДанные.ЗначениеКИ КАК ЗначениеКИ
		|ИЗ
		|	ИсходныеДанные КАК ИсходныеДанные
		|ГДЕ
		|	НЕ ИсходныеДанные.ВидКИ В (&ИзмененныеВидыКИ)";
	
	Запрос.УстановитьПараметр("ВходнаяТаблицаЗаписей", ТаблицаЗаписей);
	Запрос.УстановитьПараметр("ИзмененныеВидыКИ", ИзмененныеДанныеТЗ.ВыгрузитьКолонку("ВидКИ"));
	
	ТаблицаЗаписей = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаТЗ Из ИзмененныеДанныеТЗ Цикл
		
		ПараметрыПоиска = Новый Структура("ВидКИ", СтрокаТЗ.ВидКИ);		
		СтрокиКЗаписи = НоваяКИОбработанная.НайтиСтроки(ПараметрыПоиска);
		
		Для Каждого СтрокаКЗаписи Из СтрокиКЗаписи Цикл
		
			Если НЕ (ЗначениеЗаполнено(СтрокаКЗаписи.ВидКИ)
						И ЗначениеЗаполнено(СтрокаКЗаписи.ЗначениеКИ)) Тогда
				Продолжить;
			КонецЕсли;
		
			НоваяСтрока = ТаблицаЗаписей.Добавить();
			НоваяСтрока.Объект = ВладелецКИ;
			НоваяСтрока.ВидКИ = СтрокаКЗаписи.ВидКИ;
			НоваяСтрока.ЗначениеКИ = СтрокаКЗаписи.ЗначениеКИ;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ТаблицаЗаписей.Колонки.Добавить("КлючУникальности",
									Метаданные.РегистрыСведений.CRM_ИзменениеКонтактнойИнформации.Измерения.КлючУникальности.Тип);
	
	Для Каждого СтрокаТЗ Из ТаблицаЗаписей Цикл
		СтрокаТЗ.КлючУникальности = Строка(Новый УникальныйИдентификатор);
	КонецЦикла;
	
	ДанныеДляЗаписи.Загрузить(ТаблицаЗаписей);
	
	ДанныеДляЗаписи.Записать();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция СобытиеЖурналаРегистрации() Экспорт
	Возврат  НСтр("ru = 'Связывание ранее полученных обращений'");
КонецФункции

// Связывает ранее полученные e-mail и звонки с клиентами.
//
Процедура СвязыватьРанееПолученныеEmailиЗвонкиСКлиентами() Экспорт
	
	// получение данных для обработки
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	CRM_ИзменениеКонтактнойИнформации.Объект КАК ОбъектКИ,
		|	ВЫБОР
		|		КОГДА CRM_ИзменениеКонтактнойИнформации.Объект ССЫЛКА Справочник.КонтактныеЛицаПартнеров
		|			ТОГДА 100
		|		КОГДА CRM_ИзменениеКонтактнойИнформации.Объект ССЫЛКА Справочник.Партнеры
		|			ТОГДА 90
		|		КОГДА CRM_ИзменениеКонтактнойИнформации.Объект ССЫЛКА Справочник.CRM_ПотенциальныеКлиенты
		|			ТОГДА 80
		|	КОНЕЦ КАК Приоритет,
		|	CRM_ИзменениеКонтактнойИнформации.ЗначениеКИ КАК ЗначениеКИ,
		|	CRM_ИзменениеКонтактнойИнформации.ВидКИ.Тип КАК ТипКИ
		|ПОМЕСТИТЬ времДанные
		|ИЗ
		|	РегистрСведений.CRM_ИзменениеКонтактнойИнформации КАК CRM_ИзменениеКонтактнойИнформации
		|
		|СГРУППИРОВАТЬ ПО
		|	CRM_ИзменениеКонтактнойИнформации.Объект,
		|	CRM_ИзменениеКонтактнойИнформации.ЗначениеКИ,
		|	CRM_ИзменениеКонтактнойИнформации.ВидКИ.Тип
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(времДанные.Приоритет) КАК Приоритет,
		|	времДанные.ЗначениеКИ КАК ЗначениеКИ,
		|	времДанные.ТипКИ КАК ТипКИ
		|ПОМЕСТИТЬ МаксЗначенияКИ
		|ИЗ
		|	времДанные КАК времДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	времДанные.ЗначениеКИ,
		|	времДанные.ТипКИ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(времДанные.ОбъектКИ) КАК ОбъектКИ,
		|	времДанные.Приоритет КАК Приоритет,
		|	времДанные.ЗначениеКИ КАК ЗначениеКИ,
		|	времДанные.ТипКИ КАК ТипКИ
		|ПОМЕСТИТЬ БезДублей
		|ИЗ
		|	МаксЗначенияКИ КАК МаксЗначенияКИ
		|		ЛЕВОЕ СОЕДИНЕНИЕ времДанные КАК времДанные
		|		ПО МаксЗначенияКИ.Приоритет = времДанные.Приоритет
		|			И (времДанные.ЗначениеКИ = МаксЗначенияКИ.ЗначениеКИ)
		|			И (времДанные.ТипКИ = МаксЗначенияКИ.ТипКИ)
		|
		|СГРУППИРОВАТЬ ПО
		|	времДанные.Приоритет,
		|	времДанные.ЗначениеКИ,
		|	времДанные.ТипКИ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БезДублей.ОбъектКИ КАК ОбъектКИ,
		|	БезДублей.ЗначениеКИ КАК ЗначениеКИ,
		|	БезДублей.ТипКИ КАК ТипКИ
		|ИЗ
		|	БезДублей КАК БезДублей
		|ГДЕ
		|	БезДублей.ТипКИ = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БезДублей.ОбъектКИ КАК ОбъектКИ,
		|	БезДублей.ЗначениеКИ КАК ЗначениеКИ,
		|	БезДублей.ТипКИ КАК ТипКИ
		|ИЗ
		|	БезДублей КАК БезДублей
		|ГДЕ
		|	БезДублей.ТипКИ = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ДанныеЭлектроннойПочты = РезультатЗапроса[3].Выгрузить();
	ДанныеТелефонов = РезультатЗапроса[4].Выгрузить();
	
	Если ДанныеЭлектроннойПочты.Количество() = 0 И ДанныеТелефонов.Количество() = 0 Тогда
		ЗаписьЖурналаРегистрации(СобытиеЖурналаРегистрации(), 
			УровеньЖурналаРегистрации.Информация, , ,
			НСтр("ru='Нет данных для обработки'"));
		Возврат;
	КонецЕсли;
	
	// ПОИСК:
	
	ОписаниеТиповКонтакта = Метаданные.ОпределяемыеТипы.сфпКонтактВзаимодействия.Тип;
	
	ПустыеЗначенияКонтакта = Новый Массив;
	ПустыеЗначенияКонтакта.Добавить(Неопределено);
	
	Для каждого ВероятныйТипКонтакта Из ОписаниеТиповКонтакта.Типы() Цикл
	    ПустаяСсылкаНаОбъектТипа = Новый(ВероятныйТипКонтакта);
		ПустыеЗначенияКонтакта.Добавить(ПустаяСсылкаНаОбъектТипа);
	КонецЦикла;
	
	// Поиск по адресу электронной почты и телефону:
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеПодстановкиЭП_ТЗ.ОбъектКИ КАК ОбъектКИ,
		|	ДанныеПодстановкиЭП_ТЗ.ЗначениеКИ КАК ЗначениеКИ,
		|	ДанныеПодстановкиЭП_ТЗ.ТипКИ КАК ТипКИ
		|ПОМЕСТИТЬ ДанныеПодстановкиЭП
		|ИЗ
		|	&ДанныеПодстановкиЭП_ТЗ КАК ДанныеПодстановкиЭП_ТЗ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеПодстановкиТелефонов_ТЗ.ОбъектКИ КАК ОбъектКИ,
		|	ДанныеПодстановкиТелефонов_ТЗ.ЗначениеКИ КАК ЗначениеКИ,
		|	ДанныеПодстановкиТелефонов_ТЗ.ТипКИ КАК ТипКИ
		|ПОМЕСТИТЬ ДанныеПодстановкиТелефонов
		|ИЗ
		|	&ДанныеПодстановкиТелефонов_ТЗ КАК ДанныеПодстановкиТелефонов_ТЗ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЭлектронноеПисьмоИсходящееПолучателиПисьма.Ссылка КАК Ссылка,
		|	ЭлектронноеПисьмоИсходящееПолучателиПисьма.НомерСтроки КАК НомерСтроки,
		|	""ПолучателиПисьма"" КАК ИмяТЧ,
		|	ДанныеПодстановкиЭП.ОбъектКИ КАК ОбъектКИ,
		|	ДанныеПодстановкиЭП.ЗначениеКИ КАК ЗначениеКИ,
		|	ДанныеПодстановкиЭП.ТипКИ КАК ТипКИ
		|ИЗ
		|	ДанныеПодстановкиЭП КАК ДанныеПодстановкиЭП
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭлектронноеПисьмоИсходящее.ПолучателиПисьма КАК ЭлектронноеПисьмоИсходящееПолучателиПисьма
		|		ПО ДанныеПодстановкиЭП.ЗначениеКИ = ЭлектронноеПисьмоИсходящееПолучателиПисьма.Адрес
		|ГДЕ
		|	ЭлектронноеПисьмоИсходящееПолучателиПисьма.Контакт В (&ПустыеЗначенияКонтакта)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭлектронноеПисьмоИсходящееПолучателиКопий.Ссылка,
		|	ЭлектронноеПисьмоИсходящееПолучателиКопий.НомерСтроки,
		|	""ПолучателиКопий"",
		|	ДанныеПодстановкиЭП.ОбъектКИ,
		|	ДанныеПодстановкиЭП.ЗначениеКИ,
		|	ДанныеПодстановкиЭП.ТипКИ
		|ИЗ
		|	ДанныеПодстановкиЭП КАК ДанныеПодстановкиЭП
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭлектронноеПисьмоИсходящее.ПолучателиКопий КАК ЭлектронноеПисьмоИсходящееПолучателиКопий
		|		ПО ДанныеПодстановкиЭП.ЗначениеКИ = ЭлектронноеПисьмоИсходящееПолучателиКопий.Адрес
		|ГДЕ
		|	ЭлектронноеПисьмоИсходящееПолучателиКопий.Контакт В (&ПустыеЗначенияКонтакта)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭлектронноеПисьмоИсходящееПолучателиОтвета.Ссылка,
		|	ЭлектронноеПисьмоИсходящееПолучателиОтвета.НомерСтроки,
		|	""ПолучателиОтвета"",
		|	ДанныеПодстановкиЭП.ОбъектКИ,
		|	ДанныеПодстановкиЭП.ЗначениеКИ,
		|	ДанныеПодстановкиЭП.ТипКИ
		|ИЗ
		|	ДанныеПодстановкиЭП КАК ДанныеПодстановкиЭП
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭлектронноеПисьмоИсходящее.ПолучателиОтвета КАК ЭлектронноеПисьмоИсходящееПолучателиОтвета
		|		ПО ДанныеПодстановкиЭП.ЗначениеКИ = ЭлектронноеПисьмоИсходящееПолучателиОтвета.Адрес
		|ГДЕ
		|	ЭлектронноеПисьмоИсходящееПолучателиОтвета.Контакт В (&ПустыеЗначенияКонтакта)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭлектронноеПисьмоИсходящееПолучателиСкрытыхКопий.Ссылка,
		|	ЭлектронноеПисьмоИсходящееПолучателиСкрытыхКопий.НомерСтроки,
		|	""ПолучателиСкрытыхКопий"",
		|	ДанныеПодстановкиЭП.ОбъектКИ,
		|	ДанныеПодстановкиЭП.ЗначениеКИ,
		|	ДанныеПодстановкиЭП.ТипКИ
		|ИЗ
		|	ДанныеПодстановкиЭП КАК ДанныеПодстановкиЭП
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭлектронноеПисьмоИсходящее.ПолучателиСкрытыхКопий КАК ЭлектронноеПисьмоИсходящееПолучателиСкрытыхКопий
		|		ПО ДанныеПодстановкиЭП.ЗначениеКИ = ЭлектронноеПисьмоИсходящееПолучателиСкрытыхКопий.Адрес
		|ГДЕ
		|	ЭлектронноеПисьмоИсходящееПолучателиСкрытыхКопий.Контакт В (&ПустыеЗначенияКонтакта)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭлектронноеПисьмоВходящееПолучателиПисьма.Ссылка,
		|	ЭлектронноеПисьмоВходящееПолучателиПисьма.НомерСтроки,
		|	""ПолучателиПисьма"",
		|	ДанныеПодстановкиЭП.ОбъектКИ,
		|	ДанныеПодстановкиЭП.ЗначениеКИ,
		|	ДанныеПодстановкиЭП.ТипКИ
		|ИЗ
		|	ДанныеПодстановкиЭП КАК ДанныеПодстановкиЭП
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭлектронноеПисьмоВходящее.ПолучателиПисьма КАК ЭлектронноеПисьмоВходящееПолучателиПисьма
		|		ПО ДанныеПодстановкиЭП.ЗначениеКИ = ЭлектронноеПисьмоВходящееПолучателиПисьма.Адрес
		|ГДЕ
		|	ЭлектронноеПисьмоВходящееПолучателиПисьма.Контакт В (&ПустыеЗначенияКонтакта)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭлектронноеПисьмоВходящееПолучателиКопий.Ссылка,
		|	ЭлектронноеПисьмоВходящееПолучателиКопий.НомерСтроки,
		|	""ПолучателиКопий"",
		|	ДанныеПодстановкиЭП.ОбъектКИ,
		|	ДанныеПодстановкиЭП.ЗначениеКИ,
		|	ДанныеПодстановкиЭП.ТипКИ
		|ИЗ
		|	ДанныеПодстановкиЭП КАК ДанныеПодстановкиЭП
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭлектронноеПисьмоВходящее.ПолучателиКопий КАК ЭлектронноеПисьмоВходящееПолучателиКопий
		|		ПО ДанныеПодстановкиЭП.ЗначениеКИ = ЭлектронноеПисьмоВходящееПолучателиКопий.Адрес
		|ГДЕ
		|	ЭлектронноеПисьмоВходящееПолучателиКопий.Контакт В (&ПустыеЗначенияКонтакта)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭлектронноеПисьмоВходящееПолучателиОтвета.Ссылка,
		|	ЭлектронноеПисьмоВходящееПолучателиОтвета.НомерСтроки,
		|	""ПолучателиОтвета"",
		|	ДанныеПодстановкиЭП.ОбъектКИ,
		|	ДанныеПодстановкиЭП.ЗначениеКИ,
		|	ДанныеПодстановкиЭП.ТипКИ
		|ИЗ
		|	ДанныеПодстановкиЭП КАК ДанныеПодстановкиЭП
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭлектронноеПисьмоВходящее.ПолучателиОтвета КАК ЭлектронноеПисьмоВходящееПолучателиОтвета
		|		ПО ДанныеПодстановкиЭП.ЗначениеКИ = ЭлектронноеПисьмоВходящееПолучателиОтвета.Адрес
		|ГДЕ
		|	ЭлектронноеПисьмоВходящееПолучателиОтвета.Контакт В (&ПустыеЗначенияКонтакта)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭлектронноеПисьмоВходящее.Ссылка,
		|	-1,
		|	""Шапка"",
		|	ДанныеПодстановкиЭП.ОбъектКИ,
		|	ДанныеПодстановкиЭП.ЗначениеКИ,
		|	ДанныеПодстановкиЭП.ТипКИ
		|ИЗ
		|	ДанныеПодстановкиЭП КАК ДанныеПодстановкиЭП
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭлектронноеПисьмоВходящее КАК ЭлектронноеПисьмоВходящее
		|		ПО ДанныеПодстановкиЭП.ЗначениеКИ = ЭлектронноеПисьмоВходящее.ОтправительАдрес
		|ГДЕ
		|	ЭлектронноеПисьмоВходящее.ОтправительКонтакт В (&ПустыеЗначенияКонтакта)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТелефонныйЗвонок.Ссылка,
		|	-1,
		|	""Шапка"",
		|	ДанныеПодстановкиТелефонов.ОбъектКИ,
		|	ДанныеПодстановкиТелефонов.ЗначениеКИ,
		|	ДанныеПодстановкиТелефонов.ТипКИ
		|ИЗ
		|	ДанныеПодстановкиТелефонов КАК ДанныеПодстановкиТелефонов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТелефонныйЗвонок КАК ТелефонныйЗвонок
		|		ПО ДанныеПодстановкиТелефонов.ЗначениеКИ = ТелефонныйЗвонок.АбонентКакСвязаться
		|ГДЕ
		|	ТелефонныйЗвонок.АбонентКонтакт В (&ПустыеЗначенияКонтакта)";
	
	Запрос.УстановитьПараметр("ДанныеПодстановкиЭП_ТЗ", ДанныеЭлектроннойПочты);
	Запрос.УстановитьПараметр("ДанныеПодстановкиТелефонов_ТЗ", ДанныеТелефонов);
	Запрос.УстановитьПараметр("ПустыеЗначенияКонтакта", ПустыеЗначенияКонтакта);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	// BSLLS:PairingBrokenTransaction-off
	НачатьТранзакцию();
	
	СсылкиСОшибкамиСвязывания = Новый Массив;
	Счетчик = 0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Попытка

			ЗаполняемыйОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			ОбъектЗаблокированУспешно = Истина;
			
			Попытка
				ЗаполняемыйОбъект.Заблокировать();
			Исключение
				ОбъектЗаблокированУспешно = Ложь;
				
				СсылкиСОшибкамиСвязывания.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
				
				ЗаписьЖурналаРегистрации(СобытиеЖурналаРегистрации(),
					УровеньЖурналаРегистрации.Предупреждение, , ЗаполняемыйОбъект, ОписаниеОшибки());
			КонецПопытки;
			
			Если НЕ ОбъектЗаблокированУспешно Тогда
				Продолжить;
			КонецЕсли;
			
			Если ВыборкаДетальныеЗаписи.ТипКИ = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
			
				Если ВыборкаДетальныеЗаписи.ИмяТЧ = "Шапка" Тогда
					ЗаполняемыйОбъект.ОтправительКонтакт = ВыборкаДетальныеЗаписи.ОбъектКИ;
					ЗаполняемыйОбъект.ОтправительПредставление = Строка(ЗаполняемыйОбъект.ОтправительКонтакт);
				Иначе			
					ЗаполняемаяСтрока = ЗаполняемыйОбъект[ВыборкаДетальныеЗаписи.ИмяТЧ][ВыборкаДетальныеЗаписи.НомерСтроки - 1];
					ЗаполняемаяСтрока.Контакт = ВыборкаДетальныеЗаписи.ОбъектКИ;
					ЗаполняемаяСтрока.Представление = Строка(ЗаполняемаяСтрока.Контакт);
					
					Если ВыборкаДетальныеЗаписи.ИмяТЧ = "ПолучателиПисьма" Тогда
						ЗаполняемыйОбъект.СписокПолучателейПисьма = ВзаимодействияКлиентСервер.ПолучитьПредставлениеСпискаАдресатов(ЗаполняемыйОбъект.ПолучателиПисьма,
																																		Ложь);
					ИначеЕсли ВыборкаДетальныеЗаписи.ИмяТЧ = "ПолучателиКопий" Тогда
						ЗаполняемыйОбъект.СписокПолучателейКопий = ВзаимодействияКлиентСервер.ПолучитьПредставлениеСпискаАдресатов(ЗаполняемыйОбъект.ПолучателиКопий,
																																		Ложь);
					ИначеЕсли ВыборкаДетальныеЗаписи.ИмяТЧ = "ПолучателиОтвета" Тогда
					ИначеЕсли ВыборкаДетальныеЗаписи.ИмяТЧ = "ПолучателиСкрытыхКопий" Тогда
						ЗаполняемыйОбъект.СписокПолучателейСкрытыхКопий = ВзаимодействияКлиентСервер.ПолучитьПредставлениеСпискаАдресатов(ЗаполняемыйОбъект.ПолучателиСкрытыхКопий,
																																		Ложь);
					КонецЕсли;
					
				КонецЕсли;
				
			ИначеЕсли ВыборкаДетальныеЗаписи.ТипКИ = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
				
				Если ВыборкаДетальныеЗаписи.ИмяТЧ = "Шапка" Тогда
					ЗаполняемыйОбъект.АбонентКонтакт = ВыборкаДетальныеЗаписи.ОбъектКИ;
					ЗаполняемыйОбъект.АбонентПредставление = Строка(ЗаполняемыйОбъект.АбонентКонтакт);
				КонецЕсли;
				
			КонецЕсли;
		
			ЗаполняемыйОбъект.Записать();
			
			Счетчик = Счетчик + 1;
			Если Счетчик % 100 = 0 Тогда 
				ЗафиксироватьТранзакцию(); 
				НачатьТранзакцию(); 
			КонецЕсли;
			
		Исключение
			ОтменитьТранзакцию();
			
			СсылкиСОшибкамиСвязывания.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
			
			ЗаписьЖурналаРегистрации(СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Ошибка, , ,
				НСтр("ru='Не удалось заполнить объект: '") + ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				
			Прервать;
				
		КонецПопытки;
		
	КонецЦикла;
	
	Если ТранзакцияАктивна() Тогда
		ЗафиксироватьТранзакцию();
	КонецЕсли;
	// BSLLS:PairingBrokenTransaction-on
	
	СсылкиСОшибкамиСвязывания = ОбщегоНазначенияКлиентСервер.СвернутьМассив(СсылкиСОшибкамиСвязывания);
	
	// Удаление более неактуальных записей
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ИзменениеКонтактнойИнформации.Объект КАК Объект,
	|	ИзменениеКонтактнойИнформации.КлючУникальности КАК КлючУникальности
	|ИЗ
	|	РегистрСведений.CRM_ИзменениеКонтактнойИнформации КАК ИзменениеКонтактнойИнформации
	|ГДЕ
	|	НЕ ИзменениеКонтактнойИнформации.Объект В (&СсылкиСОшибкамиСвязывания)");
	
	Запрос.Параметры.Вставить("СсылкиСОшибкамиСвязывания", СсылкиСОшибкамиСвязывания);
	
	ВыборкаКУдалению = Запрос.Выполнить().Выбрать();
	Пока ВыборкаКУдалению.Следующий() Цикл
		ЗаписьКУдалению = РегистрыСведений.CRM_ИзменениеКонтактнойИнформации.СоздатьМенеджерЗаписи();
		ЗаписьКУдалению.Объект = ВыборкаКУдалению.Объект;
		ЗаписьКУдалению.КлючУникальности = ВыборкаКУдалению.КлючУникальности;
		ЗаписьКУдалению.Удалить();
	КонецЦикла;
	
	ЗаписьЖурналаРегистрации(СобытиеЖурналаРегистрации(),
		УровеньЖурналаРегистрации.Информация, , ,
		НСтр("ru='Связывание завершено. Не связано объектов: '") + СсылкиСОшибкамиСвязывания.Количество());
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти

#КонецЕсли
