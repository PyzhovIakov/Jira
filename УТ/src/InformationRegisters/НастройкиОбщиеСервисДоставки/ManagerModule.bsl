#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает значение настройки, если она существует.
// 
// Параметры:
//  НаименованиеПараметра - Строка - Наименование параметра
//  ТипГрузоперевозки - Число, ПеречислениеСсылка.ТипыГрузоперевозки - Тип грузоперевозки
// 
// Возвращаемое значение:
//  Неопределено - Значение настройки
Функция ПолучитьЗначениеНастройки(НаименованиеПараметра, ТипГрузоперевозки) Экспорт
	
	Результат = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НастройкиОбщиеСервисДоставки.Значение,
		|	НастройкиОбщиеСервисДоставки.ЗначениеХранилищеЗначения
		|ИЗ
		|	РегистрСведений.НастройкиОбщиеСервисДоставки КАК НастройкиОбщиеСервисДоставки
		|ГДЕ
		|	НастройкиОбщиеСервисДоставки.ТипГрузоперевозки = &ТипГрузоперевозки
		|	И НастройкиОбщиеСервисДоставки.НаименованиеПараметра = &НаименованиеПараметра";
	
	Запрос.УстановитьПараметр("ТипГрузоперевозки",
		СервисДоставкиКлиентСервер.ЧисловойИдентификаторГрузоперевозчика(ТипГрузоперевозки));
	Запрос.УстановитьПараметр("НаименованиеПараметра", НаименованиеПараметра);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Значение) Тогда
			Результат = ВыборкаДетальныеЗаписи.Значение;
		ИначеЕсли ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ЗначениеХранилищеЗначения) Тогда
			Результат = ВыборкаДетальныеЗаписи.ЗначениеХранилищеЗначения.Получить();
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Возвращает значения настроек параметров.
// 
// Параметры:
//  НаименованияПараметры - Массив из Строка - Наименование параметров
//  ТипГрузоперевозки - Число, ПеречислениеСсылка.ТипыГрузоперевозки, Неопределено - Тип грузоперевозки
// 
// Возвращаемое значение:
//  Структура - Значения настроек:
//  * Ключ - Строка
//  * Значение - Произвольный.
Функция ПолучитьЗначенияНастроек(НаименованияПараметры, ТипГрузоперевозки = Неопределено) Экспорт
	
	Результат = Новый Структура;
	
	МассивПараметров = Новый Массив;
	Если ТипЗнч(НаименованияПараметры) = Тип("Строка") Тогда
		Массив = СтрРазделить(НаименованияПараметры, ",", Ложь);
	ИначеЕсли ТипЗнч(НаименованияПараметры) = Тип("Массив") Тогда
		Массив = НаименованияПараметры;
	КонецЕсли;
	Для Каждого НаименованиеПараметра Из Массив Цикл
		МассивПараметров.Добавить(СокрЛП(НаименованиеПараметра));
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НастройкиОбщиеСервисДоставки.ТипГрузоперевозки КАК ТипГрузоперевозки,
		|	НастройкиОбщиеСервисДоставки.НаименованиеПараметра КАК Ключ,
		|	НастройкиОбщиеСервисДоставки.Значение,
		|	НастройкиОбщиеСервисДоставки.ЗначениеХранилищеЗначения
		|ИЗ
		|	РегистрСведений.НастройкиОбщиеСервисДоставки КАК НастройкиОбщиеСервисДоставки
		|ГДЕ
		|	ВЫБОР
		|		КОГДА &ТипГрузоперевозки <> НЕОПРЕДЕЛЕНО
		|			ТОГДА НастройкиОбщиеСервисДоставки.ТипГрузоперевозки = &ТипГрузоперевозки
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ
		|	И НЕ НастройкиОбщиеСервисДоставки.НаименованиеПараметра ПОДОБНО ""Кэш_%""
		|	И НастройкиОбщиеСервисДоставки.НаименованиеПараметра В (&МассивПараметров)
		|ИТОГИ ПО
		|	ТипГрузоперевозки";
	
	Запрос.УстановитьПараметр("ТипГрузоперевозки",
		СервисДоставкиКлиентСервер.ЧисловойИдентификаторГрузоперевозчика(ТипГрузоперевозки));
	Запрос.УстановитьПараметр("МассивПараметров", МассивПараметров);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаТипГрузоперевозки = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТипГрузоперевозки.Следующий() Цикл
		
		ПараметрыГрузоперевозки = Результат;
		
		Если ТипГрузоперевозки = Неопределено Тогда
			КлючГрузоперевозки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("ТипГрузоперевозки_%1",
				ВыборкаТипГрузоперевозки.ТипГрузоперевозки);
			ПараметрыГрузоперевозки = Новый Структура;
			Результат.Вставить(КлючГрузоперевозки, ПараметрыГрузоперевозки);
		КонецЕсли;

		Выборка = ВыборкаТипГрузоперевозки.Выбрать();
	
		Пока Выборка.Следующий() Цикл
			
			Значение = Неопределено;
		
			Если ЗначениеЗаполнено(Выборка.Значение) Тогда
				Значение = Выборка.Значение;
			ИначеЕсли ЗначениеЗаполнено(Выборка.ЗначениеХранилищеЗначения) Тогда
				Значение = Выборка.ЗначениеХранилищеЗначения.Получить();
			КонецЕсли;
			
			ПараметрыГрузоперевозки.Вставить(Выборка.Ключ, Значение);
			
		КонецЦикла;
	
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Возвращает значения настроек, указанных в параметре НаименованияПараметры настроек.
// Если настройка сервиса перевозчика отсутствует, то для каждого указанного параметра возращается значение "Неопределено".
// Если в настройке отсуствует указанный параметр, то для него возвращается значение "Неопределено".
// 
// Параметры:
//  НаименованияПараметры - Строка, Массив из Строка - Наименования параметров
//  ДоступныеСервисыДоставки - Массив из Число, Неопределено - Доступные сервисы доставки
// 
// Возвращаемое значение:
//  Соответствие из число - Значения "настроек по-умолчанию" для сервиса доставки. Свойства:
//   *Ключ - Число - идентификатор типа грузоперевозки
//   *Значение - Структура - значения параметров, имена которых перечислены в НаименованияПараметры. Свойства:
//    **ОрганизацияБизнесСети - ОпределяемыйТип.ОрганизацияСервисДоставки - организация - заказчик перевозки.
//
Функция ПолучитьЗначенияНастроекДоступныхСервисовДоставки(Знач НаименованияПараметры,
	ДоступныеСервисыДоставки = Неопределено) Экспорт
	
	Результат = Новый Соответствие;
	
	МассивПараметров = Новый Массив;
	Если ТипЗнч(НаименованияПараметры) = Тип("Строка") Тогда
		Массив = СтрРазделить(НаименованияПараметры, ",", Ложь);
	ИначеЕсли ТипЗнч(НаименованияПараметры) = Тип("Массив") Тогда
		Массив = НаименованияПараметры;
	КонецЕсли;
	Для Каждого НаименованиеПараметра Из Массив Цикл
		МассивПараметров.Добавить(СокрЛП(НаименованиеПараметра));
	КонецЦикла;
	
	Если ДоступныеСервисыДоставки = Неопределено Тогда
		ДоступныеСервисыДоставки = СервисДоставкиВызовСервера.ДоступныеСервисыДоставки();
	КонецЕсли;
	
	// Инициализация свойств возвращаемого значения
	Для Каждого ТипГрузоперевозки Из ДоступныеСервисыДоставки Цикл

		Результат.Вставить(ТипГрузоперевозки, Новый Структура);
		ПараметрыГрузоперевозки = Результат[ТипГрузоперевозки];

		Для Каждого ИмяПараметра Из МассивПараметров Цикл
			ПараметрыГрузоперевозки.Вставить(ИмяПараметра, Неопределено);
		КонецЦикла;

	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НастройкиОбщиеСервисДоставки.ТипГрузоперевозки КАК ТипГрузоперевозки,
		|	НастройкиОбщиеСервисДоставки.НаименованиеПараметра КАК Ключ,
		|	НастройкиОбщиеСервисДоставки.Значение,
		|	НастройкиОбщиеСервисДоставки.ЗначениеХранилищеЗначения
		|ИЗ
		|	РегистрСведений.НастройкиОбщиеСервисДоставки КАК НастройкиОбщиеСервисДоставки
		|ГДЕ
		|	НастройкиОбщиеСервисДоставки.ТипГрузоперевозки В (&ТипыГрузоперевозки)
		|	И НЕ НастройкиОбщиеСервисДоставки.НаименованиеПараметра ПОДОБНО ""Кэш_%""
		|	И НастройкиОбщиеСервисДоставки.НаименованиеПараметра В (&МассивПараметров)
		|ИТОГИ ПО
		|	ТипГрузоперевозки";
	
	Запрос.УстановитьПараметр("ТипыГрузоперевозки", ДоступныеСервисыДоставки);
	Запрос.УстановитьПараметр("МассивПараметров", МассивПараметров);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаТипГрузоперевозки = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТипГрузоперевозки.Следующий() Цикл

		ПараметрыГрузоперевозки = Результат[ВыборкаТипГрузоперевозки.ТипГрузоперевозки];

		Выборка = ВыборкаТипГрузоперевозки.Выбрать();

		Пока Выборка.Следующий() Цикл

			Значение = Неопределено;

			Если ЗначениеЗаполнено(Выборка.Значение) Тогда
				Значение = Выборка.Значение;
			ИначеЕсли ЗначениеЗаполнено(Выборка.ЗначениеХранилищеЗначения) Тогда
				Значение = Выборка.ЗначениеХранилищеЗначения.Получить();
			КонецЕсли;

			ПараметрыГрузоперевозки.Вставить(Выборка.Ключ, Значение);
		КонецЦикла;

	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Установить значение настройки параметра.
// 
// Параметры:
//  НаименованиеПараметра - Строка - Наименование параметра
//  ТипГрузоперевозки - Число, ПеречислениеСсылка.ТипыГрузоперевозки - Тип грузоперевозки
//  Значение - Произвольный - Значение параметра
//  ЭтоХранилищеЗначения - Булево - Признак помещения значения в хранилище значения.
Процедура УстановитьЗначениеНастройки(НаименованиеПараметра, ТипГрузоперевозки, Значение, ЭтоХранилищеЗначения = Ложь) Экспорт
	
	МенеджерЗаписи = РегистрыСведений.НастройкиОбщиеСервисДоставки.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.НаименованиеПараметра = НаименованиеПараметра;
	МенеджерЗаписи.ТипГрузоперевозки = СервисДоставкиКлиентСервер.ЧисловойИдентификаторГрузоперевозчика(ТипГрузоперевозки);
	Если ЭтоХранилищеЗначения Тогда
		МенеджерЗаписи.ЗначениеХранилищеЗначения = Новый ХранилищеЗначения(Значение);
	Иначе
		МенеджерЗаписи.Значение = Значение;
	КонецЕсли;
	МенеджерЗаписи.Записать();
	
КонецПроцедуры

// Установить значение настройки параметра, если оно не было заполнено ранее.
// 
// Параметры:
//  НаименованиеПараметра - Строка - Наименование параметра
//  ТипГрузоперевозки - Число, ПеречислениеСсылка.ТипыГрузоперевозки - Тип грузоперевозки
//  Значение - Произвольный - Значение параметра
//  ЭтоХранилищеЗначения - Булево - Признак помещения значения в хранилище значения.
Процедура ИнициализацияЗначениеНастройки(НаименованиеПараметра, ТипГрузоперевозки, Значение, ЭтоХранилищеЗначения = Ложь) Экспорт
	
	ЗначениеНастройки = ПолучитьЗначениеНастройки(НаименованиеПараметра, ТипГрузоперевозки);
		
	Если ЗначениеНастройки = Неопределено Тогда
		УстановитьЗначениеНастройки(НаименованиеПараметра, ТипГрузоперевозки, Значение, ЭтоХранилищеЗначения);
	КонецЕсли;
	
КонецПроцедуры

// Возвращает настройки грузоперевозки.
// 
// Параметры:
//  ТипГрузоперевозки - Число, ПеречислениеСсылка.ТипыГрузоперевозки - Тип грузоперевозки
// 
// Возвращаемое значение:
//  ВыборкаИзРезультатаЗапроса - Настройки грузоперевозки
Функция ПолучитьНастройкиГрузоперевозки(ТипГрузоперевозки) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НастройкиОбщиеСервисДоставки.НаименованиеПараметра КАК НаименованиеПараметра,
	|	НастройкиОбщиеСервисДоставки.Значение КАК Значение,
	|	НастройкиОбщиеСервисДоставки.ЗначениеХранилищеЗначения КАК ЗначениеХранилищеЗначения
	|ИЗ
	|	РегистрСведений.НастройкиОбщиеСервисДоставки КАК НастройкиОбщиеСервисДоставки
	|ГДЕ
	|	НастройкиОбщиеСервисДоставки.ТипГрузоперевозки = &ТипГрузоперевозки
	|	И НЕ НастройкиОбщиеСервисДоставки.НаименованиеПараметра ПОДОБНО ""Кэш_%""";
	
	Запрос.УстановитьПараметр("ТипГрузоперевозки",
		СервисДоставкиКлиентСервер.ЧисловойИдентификаторГрузоперевозчика(ТипГрузоперевозки));
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

#КонецОбласти

#КонецЕсли