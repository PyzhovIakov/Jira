#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область ПереходНаНовуюВерсию

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗаписатьСостояниеЛида(Лид, Состояние = Неопределено,
	 Знач СконвертированВОбъект = Неопределено, ПричинаОтклонения = Неопределено, Комментарий = "",
	 СвязанСКлиентом = Неопределено,
	 ДанныеПовторногоОбращения = Неопределено, ОтмеченВручную = Ложь) Экспорт
	
	Если Лид.ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеПовторногоОбращения) = Тип("Структура") Тогда
		
		Состояние = ДанныеПовторногоОбращения.Состояние;
		СконвертированВОбъект = ДанныеПовторногоОбращения.CRM_Интерес;
		
	Иначе
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	CRM_ЖурналДокументов.CRM_Интерес КАК CRM_Интерес
		                      |ИЗ
		                      |	РегистрСведений.CRM_ЖурналДокументов КАК CRM_ЖурналДокументов
		                      |ГДЕ
		                      |	CRM_ЖурналДокументов.Объект = &Объект
		                      |	И CRM_ЖурналДокументов.CRM_Интерес <> ЗНАЧЕНИЕ(Документ.CRM_Интерес.ПустаяСсылка)");
		
		Запрос.УстановитьПараметр("Объект", Лид);
		Если НЕ Запрос.Выполнить().Пустой() И (Состояние = Неопределено
			 ИЛИ Состояние = Справочники.CRM_СостоянияЛидов.Новый) Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТипЗнч(Лид) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее")
		 Или ТипЗнч(Лид) = Тип("ДокументСсылка.ЭлектронноеПисьмоИсходящее") Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ
			|	CRM_СостоянияЛидов.Лид КАК Лид
			|ИЗ
			|	РегистрСведений.CRM_СостоянияЛидов КАК CRM_СостоянияЛидов
			|ГДЕ
			|	CRM_СостоянияЛидов.Лид В (&ЦепочкаПисем) И 
			|	CRM_СостоянияЛидов.Состояние = &Состояние");
		Запрос.УстановитьПараметр("Состояние", Справочники.CRM_СостоянияЛидов.Новый);
		Запрос.УстановитьПараметр("ЦепочкаПисем", ПолучитьЦепочкуПисем(Лид));
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			МенеджерЗаписи = РегистрыСведений.CRM_СостоянияЛидов.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Лид = Выборка.Лид;
			МенеджерЗаписи.Прочитать();
			МенеджерЗаписи.Состояние =  Справочники.CRM_СостоянияЛидов.ПовторныйОбработанный;
			МенеджерЗаписи.Записать();
		КонецЦикла;
	КонецЕсли;
	
	МенеджерЗаписи = РегистрыСведений.CRM_СостоянияЛидов.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Лид = Лид;
	МенеджерЗаписи.Прочитать();
	МенеджерЗаписи.Лид = Лид;
	Если СвязанСКлиентом <> Неопределено Тогда
		МенеджерЗаписи.СвязанСКлиентом = СвязанСКлиентом;
	КонецЕсли;
	Если ТипЗнч(Лид) = Тип("ДокументСсылка.CRM_Заявка") Тогда
		МенеджерЗаписи.ВидКанала = Перечисления.CRM_ВидыКаналовПоступленияОбращений.Заявка;
		МенеджерЗаписи.КаналПолучения = Лид.ИсточникПолучения;
	ИначеЕсли ТипЗнч(Лид) = Тип("ДокументСсылка.ТелефонныйЗвонок") Тогда
		МенеджерЗаписи.ВидКанала = Перечисления.CRM_ВидыКаналовПоступленияОбращений.ТелефонныйЗвонок;
	ИначеЕсли ТипЗнч(Лид) = Тип("ДокументСсылка.CRM_СообщениеМессенджера")
		Или ТипЗнч(Лид) = Тип("СправочникСсылка.CRM_Диалоги") Тогда
		Если Лид.ID_Пользователя = "" Тогда
			Возврат;
		КонецЕсли;
		МенеджерЗаписи.ВидКанала = Перечисления.CRM_ВидыКаналовПоступленияОбращений.Диалоги;
		МенеджерЗаписи.КаналПолучения = Лид.УчетнаяЗапись;
	ИначеЕсли ТипЗнч(Лид) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
		МенеджерЗаписи.ВидКанала = Перечисления.CRM_ВидыКаналовПоступленияОбращений.ЭлектроннаяПочта;
		МенеджерЗаписи.КаналПолучения = Лид.УчетнаяЗапись;
	ИначеЕсли ТипЗнч(Лид) = Тип("ДокументСсылка.ЭлектронноеПисьмоИсходящее") Тогда
		МенеджерЗаписи.ВидКанала = Перечисления.CRM_ВидыКаналовПоступленияОбращений.ЭлектроннаяПочта;
		МенеджерЗаписи.КаналПолучения = Лид.УчетнаяЗапись;
	КонецЕсли;
	
	ПредыдущееСостояние = МенеджерЗаписи.Состояние;
	
	МенеджерЗаписи.Состояние = ?(ЗначениеЗаполнено(Состояние), Состояние, Справочники.CRM_СостоянияЛидов.Новый);
	МенеджерЗаписи.ПричинаОтклонения = ПричинаОтклонения;
	
	Если ТипЗнч(Лид) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") 
		И ПредыдущееСостояние = Справочники.CRM_СостоянияЛидов.ПустаяСсылка()
		И Лид.CRM_СкрытьВАРМ Тогда
		МенеджерЗаписи.Состояние = Справочники.CRM_СостоянияЛидов.ПустаяСсылка();
	КонецЕсли;
	
	ПредыдущееСконвертированВОбъект = МенеджерЗаписи.СконвертированВОбъект;
	
	МенеджерЗаписи.СконвертированВОбъект = СконвертированВОбъект;
	МенеджерЗаписи.Комментарий = Комментарий;
	
	Если (МенеджерЗаписи.Состояние = Справочники.CRM_СостоянияЛидов.Новый И Не ОтмеченВручную)
		ИЛИ МенеджерЗаписи.Состояние = Справочники.CRM_СостоянияЛидов.Повторный Тогда
		Если Не ПроверитьСрокЖизниОбращения(Лид, МенеджерЗаписи.КаналПолучения) Тогда
			Возврат;
		КонецЕсли;
		МенеджерЗаписи.ДатаОбработки = '00010101';
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Лид, "CRM_РольОтветственного")
			И НЕ ЗначениеЗаполнено(Лид.Ответственный) И ЗначениеЗаполнено(Лид.CRM_РольОтветственного) Тогда
			МенеджерЗаписи.ОтветственныйЗаОбработку = Лид.CRM_РольОтветственного;
		Иначе
			МенеджерЗаписи.ОтветственныйЗаОбработку = Лид.Ответственный;
		КонецЕсли;
	ИначеЕсли НЕ (МенеджерЗаписи.Состояние = ПредыдущееСостояние
		И МенеджерЗаписи.СконвертированВОбъект = ПредыдущееСконвертированВОбъект) Тогда
		МенеджерЗаписи.ДатаОбработки = ТекущаяДатаСеанса();
		МенеджерЗаписи.ОтветственныйЗаОбработку = CRM_ОбщегоНазначенияСервер.ТекущийПользователь();
	КонецЕсли;
	
	Если МенеджерЗаписи.Состояние = Справочники.CRM_СостоянияЛидов.Сконвертирован Тогда
		СконвертированВОбъект	= МенеджерЗаписи.СконвертированВОбъект;
		Если ЗначениеЗаполнено(СконвертированВОбъект) Тогда 
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СконвертированВОбъект, "Ответственный") Тогда
				Если ЗначениеЗаполнено(СконвертированВОбъект.Ответственный) Тогда
					Если ТипЗнч(СконвертированВОбъект.Ответственный) = Тип("СправочникСсылка.РолиИсполнителей") Тогда
						МенеджерЗаписи.ДатаОбработки 			= Дата('00010101');
						МенеджерЗаписи.ОтветственныйЗаОбработку	= СконвертированВОбъект.Ответственный;
					КонецЕсли;	
				ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СконвертированВОбъект,
					 "CRM_РольОтветственного") Тогда
					Если ЗначениеЗаполнено(СконвертированВОбъект.CRM_РольОтветственного) Тогда
						МенеджерЗаписи.ДатаОбработки			= Дата('00010101');
						МенеджерЗаписи.ОтветственныйЗаОбработку	= СконвертированВОбъект.CRM_РольОтветственного;
					КонецЕсли;
				Иначе
					МенеджерЗаписи.ДатаОбработки				= Дата('00010101');
					МенеджерЗаписи.ОтветственныйЗаОбработку		= Справочники.Пользователи.ПустаяСсылка();
				КонецЕсли;
			ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СконвертированВОбъект,
				 "CRM_РольОтветственного") Тогда
				Если ЗначениеЗаполнено(СконвертированВОбъект.CRM_РольОтветственного) Тогда
					МенеджерЗаписи.ДатаОбработки			= Дата('00010101');
					МенеджерЗаписи.ОтветственныйЗаОбработку	= СконвертированВОбъект.CRM_РольОтветственного;
				КонецЕсли;
			Иначе
				МенеджерЗаписи.ДатаОбработки				= Дата('00010101');
				МенеджерЗаписи.ОтветственныйЗаОбработку		= Справочники.Пользователи.ПустаяСсылка();
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли МенеджерЗаписи.Состояние = Справочники.CRM_СостоянияЛидов.ПовторныйОбработанный Тогда
		СконвертированВОбъект	= МенеджерЗаписи.СконвертированВОбъект;
		Если ЗначениеЗаполнено(СконвертированВОбъект) Тогда 
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СконвертированВОбъект, "Ответственный") Тогда
				Если ЗначениеЗаполнено(СконвертированВОбъект.Ответственный) Тогда
					Если ТипЗнч(СконвертированВОбъект.Ответственный) = Тип("СправочникСсылка.РолиИсполнителей") Тогда
						МенеджерЗаписи.ДатаОбработки 			= Дата('00010101');
						МенеджерЗаписи.ОтветственныйЗаОбработку	= СконвертированВОбъект.Ответственный;
					КонецЕсли;	
				ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СконвертированВОбъект,
					 "CRM_РольОтветственного") Тогда
					Если ЗначениеЗаполнено(СконвертированВОбъект.CRM_РольОтветственного) Тогда
						МенеджерЗаписи.ДатаОбработки			= Дата('00010101');
						МенеджерЗаписи.ОтветственныйЗаОбработку	= СконвертированВОбъект.CRM_РольОтветственного;
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СконвертированВОбъект,
				 "CRM_РольОтветственного") Тогда
				Если ЗначениеЗаполнено(СконвертированВОбъект.CRM_РольОтветственного) Тогда
					МенеджерЗаписи.ДатаОбработки			= Дата('00010101');
					МенеджерЗаписи.ОтветственныйЗаОбработку	= СконвертированВОбъект.CRM_РольОтветственного;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли МенеджерЗаписи.Состояние = Справочники.CRM_СостоянияЛидов.Новый Тогда
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Лид, "CRM_Предмет") Тогда
			ОснованиеОбъект	= Лид.CRM_Предмет;
			Если ЗначениеЗаполнено(ОснованиеОбъект) Тогда
				Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ОснованиеОбъект, "Ответственный")
					 И НЕ ЗначениеЗаполнено(ОснованиеОбъект.Ответственный) Тогда
					МенеджерЗаписи.ДатаОбработки = Дата('00010101');
					МенеджерЗаписи.ОтветственныйЗаОбработку = Справочники.Пользователи.ПустаяСсылка();
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Лид, "ВзаимодействиеОснование") Тогда
			ОснованиеОбъект	= Лид.ВзаимодействиеОснование;
			Если ЗначениеЗаполнено(ОснованиеОбъект) Тогда
				Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ОснованиеОбъект, "Ответственный")
					 И НЕ ЗначениеЗаполнено(ОснованиеОбъект.Ответственный) Тогда
					МенеджерЗаписи.ДатаОбработки = Дата('00010101');
					МенеджерЗаписи.ОтветственныйЗаОбработку = Справочники.Пользователи.ПустаяСсылка();
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если МенеджерЗаписи.Состояние = Справочники.CRM_СостоянияЛидов.Отклонен 
		И ТипЗнч(МенеджерЗаписи.КаналПолучения) = Тип("СправочникСсылка.УчетныеЗаписиЭлектроннойПочты")
		И ТипЗнч(МенеджерЗаписи.Лид) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
		
		ЛидОбъект = МенеджерЗаписи.Лид.ПолучитьОбъект();
		ЛидОбъект.Ответственный = МенеджерЗаписи.ОтветственныйЗаОбработку;
		ЛидОбъект.CRM_РольОтветственного = Справочники.РолиИсполнителей.ПустаяСсылка();
		
		Если Не ТранзакцияАктивна() Тогда
			ЛидОбъект.Записать();
		КонецЕсли;
		
	КонецЕсли;
	
	МенеджерЗаписи.ОтмеченВручную = ОтмеченВручную;
	
	МенеджерЗаписи.Описание = ОписаниеОбращения(Лид);
	МенеджерЗаписи.Записать();
	
	Если ТипЗнч(Лид) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее")
		Или ТипЗнч(Лид) = Тип("ДокументСсылка.ЭлектронноеПисьмоИсходящее") Тогда
		Если (Не ЗначениеЗаполнено(ПредыдущееСостояние) 
			Или ПредыдущееСостояние = Справочники.CRM_СостоянияЛидов.Новый)
			И Состояние <> Справочники.CRM_СостоянияЛидов.Новый Тогда
			РегистрыСведений.CRM_НепрочитанныеЭлектронныеПисьмаМоиДела.УстановитьПометкуОПрочтенииВсемПользователям(Лид);
			КонецЕсли;
	КонецЕсли;
	
	РегистрыСведений.CRM_ОбъектыАРМ_Обращения.ЗарегистрироватьЛидВАРМ(Лид, МенеджерЗаписи.Состояние);
	
	// Сроки обработки обращений
	РегистрыСведений.CRM_СрокиОбработкиОбращений.ЗарегистрироватьСрокОбработкиОбращения(Лид, МенеджерЗаписи.Состояние);
	
КонецПроцедуры

Процедура УдалитьСостояниеЛида(Лид) Экспорт
	НаборЗаписей = РегистрыСведений.CRM_СостоянияЛидов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Лид.Установить(Лид);
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество() > 0 Тогда
		НаборЗаписей.Очистить();
		НаборЗаписей.Записать();
	КонецЕсли;
КонецПроцедуры

Функция СсылкаЯвляетсяЛидом(Ссылка, СУказаниемПричиныОтклонения = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не (Константы.CRM_ОтображатьВАРМИсходящиеПисьмаИЗвонки.Получить() = Истина) Тогда
		Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.ЭлектронноеПисьмоИсходящее") Тогда
			Возврат Ложь;
		ИначеЕсли (ТипЗнч(Ссылка) = Тип("ДокументСсылка.ТелефонныйЗвонок")) И НЕ Ссылка.Входящий Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	ЭтоЛид = Ложь;
	
	Если Метаданные.РегистрыСведений.CRM_СостоянияЛидов.Измерения.Лид.Тип.СодержитТип(ТипЗнч(Ссылка)) Тогда
		МетаданныеОбъекта = Ссылка.Метаданные();
		Если CRM_ОбщегоНазначенияСервер.ЕстьРеквизитДокумента("УчетнаяЗапись", МетаданныеОбъекта) Тогда
			Если Ссылка.УчетнаяЗапись.CRM_ИсточникЛидов Тогда
				Если МетаданныеОбъекта.Имя = "CRM_СообщениеМессенджера"
					И Ссылка.ВидСообщения = Перечисления.CRM_ВидыСообщенияМессенджера.Исходящее Тогда
					ЭтоЛид = Ложь;
				ИначеЕсли МетаданныеОбъекта.Имя = "ЭлектронноеПисьмоВходящее" Тогда
					Если СУказаниемПричиныОтклонения Тогда
						ЭтоЛид = Ссылка.УчетнаяЗапись.CRM_ИсточникЛидов И Ссылка.УчетнаяЗапись.CRM_УказыватьПричинуОтклонения;
					Иначе
						ЭтоЛид = УчетнаяЗаписьЭлПочтыЯвляетсяИсточникомЛидов(Ссылка.УчетнаяЗапись, Ссылка);
					КонецЕсли;
				Иначе
					Если СУказаниемПричиныОтклонения Тогда
						ЭтоЛид = Ссылка.УчетнаяЗапись.CRM_ИсточникЛидов И Ссылка.УчетнаяЗапись.CRM_УказыватьПричинуОтклонения;
					Иначе
						ЭтоЛид = Ссылка.УчетнаяЗапись.CRM_ИсточникЛидов;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		Иначе
			Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.ТелефонныйЗвонок") Тогда
				Если СУказаниемПричиныОтклонения Тогда
					ЭтоЛид = Константы.CRM_ОбязательноУказыватьПричинуПотериЗвонков.Получить();
				Иначе
					ЭтоЛид = Константы.сфпНастройкиТелефонии_ИсточникЛидов.Получить();
				КонецЕсли;
			ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.CRM_Заявка") Тогда
				Если СУказаниемПричиныОтклонения Тогда
					ЭтоЛид = Ссылка.ИсточникПолучения.CRM_ИсточникЛидов И Ссылка.ИсточникПолучения.CRM_УказыватьПричинуОтклонения;
				Иначе
					ЭтоЛид = Ссылка.ИсточникПолучения.CRM_ИсточникЛидов;
				КонецЕсли;
			Иначе
				ЭтоЛид = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ЭтоЛид;
	
КонецФункции

Функция ЕстьЛидыВМассивеСсылок(МассивСсылок, СУказаниемПричиныОтклонения) Экспорт
	Для каждого Ссылка Из МассивСсылок Цикл
		Если СсылкаЯвляетсяЛидом(Ссылка, СУказаниемПричиныОтклонения) И ЭтоТекущийЛид(Ссылка) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	Возврат Ложь;
КонецФункции

Функция ЭтоТекущийЛид(Ссылка) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	CRM_СостоянияЛидов.Состояние КАК Состояние
	                      |ИЗ
	                      |	РегистрСведений.CRM_СостоянияЛидов КАК CRM_СостоянияЛидов
	                      |ГДЕ
	                      |	CRM_СостоянияЛидов.Лид = &Лид
	                      |	И CRM_СостоянияЛидов.Состояние В (&СостоянияТекущихЛидов)");
	Запрос.УстановитьПараметр("Лид", Ссылка);
	СостоянияТекущихЛидов = Новый СписокЗначений;
	СостоянияТекущихЛидов.Добавить(Справочники.CRM_СостоянияЛидов.Новый);
	Запрос.УстановитьПараметр("СостоянияТекущихЛидов", СостоянияТекущихЛидов);
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

Функция ПолучитьТекущееСостояниеЛида(Ссылка) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	CRM_СостоянияЛидов.Состояние КАК Состояние,
	                      |	CRM_СостоянияЛидов.Комментарий КАК Комментарий,
	                      |	CRM_СостоянияЛидов.ПричинаОтклонения КАК ПричинаОтклонения,
						  |	CRM_СостоянияЛидов.ДатаОбработки КАК ДатаОбработки,
						  |	CRM_СостоянияЛидов.ОтветственныйЗаОбработку КАК ОтветственныйЗаОбработку,
	                      |	CRM_СостоянияЛидов.СконвертированВОбъект КАК СконвертированВОбъект
	                      |ИЗ
	                      |	РегистрСведений.CRM_СостоянияЛидов КАК CRM_СостоянияЛидов
	                      |ГДЕ
	                      |	CRM_СостоянияЛидов.Лид = &Лид");
	Запрос.УстановитьПараметр("Лид", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Состояние = Новый Структура;
		Состояние.Вставить("Состояние", Выборка.Состояние);
		Состояние.Вставить("СконвертированВОбъект", Выборка.СконвертированВОбъект);
		Состояние.Вставить("Комментарий", Выборка.Комментарий);
		Состояние.Вставить("ПричинаОтклонения", Выборка.ПричинаОтклонения);
		Состояние.Вставить("ДатаОбработки", Выборка.ДатаОбработки);
		Состояние.Вставить("ОтветственныйЗаОбработку", Выборка.ОтветственныйЗаОбработку);
		Возврат Состояние;
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

Функция ПолучитьТекущееСостояниеЛидов(МассивСсылок) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	CRM_СостоянияЛидов.Лид КАК Лид,
	                      |	CRM_СостоянияЛидов.Состояние КАК Состояние,
	                      |	CRM_СостоянияЛидов.Комментарий КАК Комментарий,
	                      |	CRM_СостоянияЛидов.ПричинаОтклонения КАК ПричинаОтклонения,
						  |	CRM_СостоянияЛидов.ДатаОбработки КАК ДатаОбработки,
						  |	CRM_СостоянияЛидов.ОтветственныйЗаОбработку КАК ОтветственныйЗаОбработку,
	                      |	CRM_СостоянияЛидов.СконвертированВОбъект КАК СконвертированВОбъект
	                      |ИЗ
	                      |	РегистрСведений.CRM_СостоянияЛидов КАК CRM_СостоянияЛидов
	                      |ГДЕ
	                      |	CRM_СостоянияЛидов.Лид В(&МассивЛидов)");
	Запрос.УстановитьПараметр("МассивЛидов", МассивСсылок);
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

Процедура ЗаписатьВспомогательныеДанныеОбращения(Обращение, СвязанСКлиентом = Неопределено) Экспорт

	МенеджерЗаписи = РегистрыСведений.CRM_СостоянияЛидов.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Лид = Обращение;
	МенеджерЗаписи.Прочитать();
	МенеджерЗаписи.Лид = Обращение;
	МенеджерЗаписи.Описание = ОписаниеОбращения(Обращение);
	
	Если СвязанСКлиентом <> Неопределено Тогда
		МенеджерЗаписи.СвязанСКлиентом = СвязанСКлиентом;
	КонецЕсли;
	
	Если МенеджерЗаписи.Состояние = Справочники.CRM_СостоянияЛидов.Новый
		ИЛИ МенеджерЗаписи.Состояние = Справочники.CRM_СостоянияЛидов.Повторный Тогда
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Обращение, "CRM_РольОтветственного")
			И НЕ ЗначениеЗаполнено(Обращение.Ответственный) И ЗначениеЗаполнено(Обращение.CRM_РольОтветственного) Тогда
			МенеджерЗаписи.ОтветственныйЗаОбработку = Обращение.CRM_РольОтветственного;
		Иначе
			МенеджерЗаписи.ОтветственныйЗаОбработку = Обращение.Ответственный;
		КонецЕсли;
	КонецЕсли;
	
	Если МенеджерЗаписи.Состояние = Справочники.CRM_СостоянияЛидов.Сконвертирован Тогда
		СконвертированВОбъект	= МенеджерЗаписи.СконвертированВОбъект;
		Если ЗначениеЗаполнено(СконвертированВОбъект) Тогда 
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СконвертированВОбъект, "Ответственный") Тогда
				Если ЗначениеЗаполнено(СконвертированВОбъект.Ответственный) Тогда
					Если ТипЗнч(СконвертированВОбъект.Ответственный) = Тип("СправочникСсылка.РолиИсполнителей") Тогда
						МенеджерЗаписи.ДатаОбработки 			= Дата('00010101');
						МенеджерЗаписи.ОтветственныйЗаОбработку	= СконвертированВОбъект.Ответственный;
					КонецЕсли;	
				ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СконвертированВОбъект,
					 "CRM_РольОтветственного") Тогда
					Если ЗначениеЗаполнено(СконвертированВОбъект.CRM_РольОтветственного) Тогда
						МенеджерЗаписи.ДатаОбработки			= Дата('00010101');
						МенеджерЗаписи.ОтветственныйЗаОбработку	= СконвертированВОбъект.CRM_РольОтветственного;
					КонецЕсли;
				Иначе
					МенеджерЗаписи.ДатаОбработки				= Дата('00010101');
					МенеджерЗаписи.ОтветственныйЗаОбработку		= Справочники.Пользователи.ПустаяСсылка();
				КонецЕсли;
			ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СконвертированВОбъект,
				 "CRM_РольОтветственного") Тогда
				Если ЗначениеЗаполнено(СконвертированВОбъект.CRM_РольОтветственного) Тогда
					МенеджерЗаписи.ДатаОбработки			= Дата('00010101');
					МенеджерЗаписи.ОтветственныйЗаОбработку	= СконвертированВОбъект.CRM_РольОтветственного;
				КонецЕсли;
			Иначе
				МенеджерЗаписи.ДатаОбработки				= Дата('00010101');
				МенеджерЗаписи.ОтветственныйЗаОбработку		= Справочники.Пользователи.ПустаяСсылка();
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли МенеджерЗаписи.Состояние = Справочники.CRM_СостоянияЛидов.Новый Тогда
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Обращение, "CRM_Предмет") Тогда
			ОснованиеОбъект	= Обращение.CRM_Предмет;
			Если ЗначениеЗаполнено(ОснованиеОбъект) Тогда
				Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ОснованиеОбъект, "Ответственный")
					 И НЕ ЗначениеЗаполнено(ОснованиеОбъект.Ответственный) Тогда
					МенеджерЗаписи.ДатаОбработки = Дата('00010101');
					МенеджерЗаписи.ОтветственныйЗаОбработку = Справочники.Пользователи.ПустаяСсылка();
				КонецЕсли;	
			КонецЕсли;	
		ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Обращение, "ВзаимодействиеОснование") Тогда
			ОснованиеОбъект	= Обращение.ВзаимодействиеОснование;
			Если ЗначениеЗаполнено(ОснованиеОбъект) Тогда
				Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ОснованиеОбъект, "Ответственный")
					 И НЕ ЗначениеЗаполнено(ОснованиеОбъект.Ответственный) Тогда
					МенеджерЗаписи.ДатаОбработки = Дата('00010101');
					МенеджерЗаписи.ОтветственныйЗаОбработку = Справочники.Пользователи.ПустаяСсылка();
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;
	
	МенеджерЗаписи.Записать();
	
	РегистрыСведений.CRM_ОбъектыАРМ_Обращения.ЗарегистрироватьЛидВАРМ(Обращение, МенеджерЗаписи.Состояние);
	
КонецПроцедуры

Процедура ОбновитьПоСконвертированВОбъект(СконвертированВОбъект) Экспорт
	Если НЕ ЗначениеЗаполнено(СконвертированВОбъект) Тогда
		Возврат;
	ИначеЕсли НЕ ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СконвертированВОбъект, "Ответственный") Тогда
		Возврат;
	ИначеЕсли НЕ ЗначениеЗаполнено(СконвертированВОбъект.Ответственный) Тогда
		Возврат;
	ИначеЕсли НЕ (ТипЗнч(СконвертированВОбъект.Ответственный) = Тип("СправочникСсылка.Пользователи")) Тогда
		Возврат;
	КонецЕсли;	
	Запрос	= Новый Запрос;
	Запрос.УстановитьПараметр("СконвертированВОбъект", СконвертированВОбъект);
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	CRM_СостоянияЛидов.Лид КАК Лид
	               |ИЗ
	               |	РегистрСведений.CRM_СостоянияЛидов КАК CRM_СостоянияЛидов
	               |ГДЕ
	               |	CRM_СостоянияЛидов.СконвертированВОбъект = &СконвертированВОбъект";
	Выборка	= Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		МенеджерЗаписи		= РегистрыСведений.CRM_СостоянияЛидов.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Лид	= Выборка.Лид;
		МенеджерЗаписи.Прочитать();
		Если ЗначениеЗаполнено(МенеджерЗаписи.ОтветственныйЗаОбработку) 
			И (ТипЗнч(МенеджерЗаписи.ОтветственныйЗаОбработку) = Тип("СправочникСсылка.Пользователи")) Тогда
			Продолжить;
		КонецЕсли;	
		МенеджерЗаписи.ДатаОбработки			= ТекущаяДатаСеанса();
		МенеджерЗаписи.ОтветственныйЗаОбработку	= СконвертированВОбъект.Ответственный; 
		МенеджерЗаписи.Записать();
	КонецЦикла;
КонецПроцедуры

// Возвращает является ли объект лидом либо отмеченным как обращение
//
// Параметры:
//  Ссылка  - Ссылка на объект
//
// Возвращаемое значение:
//   Булево   - Объект отмечен как обращение вручную
//
Функция СсылкаОтмеченаКакОбращениеВручную(Ссылка) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	CRM_СостоянияЛидов.ОтмеченВручную КАК ОтмеченВручную
	|ИЗ
	|	РегистрСведений.CRM_СостоянияЛидов КАК CRM_СостоянияЛидов
	|ГДЕ
	|	CRM_СостоянияЛидов.Лид = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Возврат Выборка.Следующий();
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция УчетнаяЗаписьЭлПочтыЯвляетсяИсточникомЛидов(УчетнаяЗапись, Письмо)
	
	Если ТипЗнч(УчетнаяЗапись) <> Тип("СправочникСсылка.УчетныеЗаписиЭлектроннойПочты") Тогда
		// Поведение по умолчанию
		Возврат УчетнаяЗапись.CRM_ИсточникЛидов;
	КонецЕсли;
	
	Если НЕ УчетнаяЗапись.CRM_ИсточникЛидов Тогда
		// Поведение по умолчанию
		Возврат Ложь;
	КонецЕсли;                                   
	
	//Если НЕ УчетнаяЗапись.CRM_СинхронизироватьПапкиСПочтовымСервером Тогда
	//	// Поведение по умолчанию
	//	Возврат УчетнаяЗапись.CRM_ИсточникЛидов;
	//КонецЕсли;
	
	МассивУчетныхЗаписей = Новый Массив;
	МассивУчетныхЗаписей.Добавить(УчетнаяЗапись);
	МассивПапок = CRM_Взаимодействия.МассивПапокИсточниковОбращений(МассивУчетныхЗаписей);
	
	// Папки не заданы - поведение по умолчанию
	Если МассивПапок.Количество() = 0 Тогда
		Возврат УчетнаяЗапись.CRM_ИсточникЛидов;
	КонецЕсли;
	
	Папка = CRM_Взаимодействия.ПапкаПисьма(Письмо);
	
	// Папка письма еще не определена, но поскольку в учетной записи настроен список папок,
	// считаем, что лид пока создавать не нужно. (Будет создан после установки папки.)
	// Такой сценарий выполняется для получаемых впервые писем.
	Если НЕ ЗначениеЗаполнено(Папка) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если МассивПапок.Найти(Папка) = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина; 
	
КонецФункции

// Возвращает значение реквизита, используемое при поиске в АРМ
Функция ОписаниеОбращения(Обращение)
	
	ТекстОписания = "";
	
	Если Не ЗначениеЗаполнено(Обращение) Тогда
		Возврат ТекстОписания;
	КонецЕсли;
	
	Контакт = "";
	КонтактАдрес = "";
	КонтактТелефон = "";
	Если ТипЗнч(Обращение) = Тип("СправочникСсылка.CRM_Диалоги") Тогда
		тКрайнийСрок = Формат(Обращение.ДатаНачала, "ДФ='d MMM'");
	Иначе
		тКрайнийСрок = Формат(Обращение.Дата, "ДФ='d MMM'");
	КонецЕсли;

	Если ТипЗнч(Обращение) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
		Контакт = Обращение.ОтправительКонтакт;
		КонтактАдрес = Обращение.ОтправительАдрес;
	ИначеЕсли ТипЗнч(Обращение) = Тип("ДокументСсылка.CRM_Заявка") Тогда
		Контакт = ?(ЗначениеЗаполнено(Обращение.Контакт), Обращение.Контакт, Обращение.Наименование);
		КонтактАдрес = Обращение.ЭлектроннаяПочта;
		КонтактТелефон = Обращение.Телефон;
	ИначеЕсли ТипЗнч(Обращение) = Тип("ДокументСсылка.ТелефонныйЗвонок") Тогда
		Контакт = Обращение.АбонентКонтакт;
		КонтактАдрес = Обращение.АбонентКакСвязаться;
	ИначеЕсли ТипЗнч(Обращение) = Тип("ДокументСсылка.CRM_СообщениеМессенджера") 
				Или ТипЗнч(Обращение) = Тип("СправочникСсылка.CRM_Диалоги") Тогда
		Контакт = Обращение.Контакт;
		КонтактАдрес = Обращение.КонтактПредставление;
	КонецЕсли;

	Если ТипЗнч(Обращение) = Тип("ДокументСсылка.CRM_Заявка") Тогда
		ТекстОписания =
			тКрайнийСрок + " | " + Строка(?(ЗначениеЗаполнено(Контакт), Строка(Контакт), "")) 
				+ ?(ЗначениеЗаполнено(КонтактТелефон), " <" + КонтактТелефон + ">", "") + ?(ЗначениеЗаполнено(КонтактАдрес), " <" + КонтактАдрес + ">", "");
	Иначе			
		ТекстОписания =
			тКрайнийСрок + " | " + Строка(?(ЗначениеЗаполнено(Контакт), Строка(Контакт) + " <" 
				+ КонтактАдрес + ">",
				 КонтактАдрес));
	КонецЕсли;
	
	Возврат ТекстОписания;
	
КонецФункции

Функция ПроверитьСрокЖизниОбращения(Обращение, КаналПолучения)
	
	СрокЖизни = 0;
	ТипОбращения = ТипЗнч(Обращение);
	
	Если ЗначениеЗаполнено(КаналПолучения) Тогда
		СрокЖизни = КаналПолучения.CRM_СрокЖизниОбращения;
	ИначеЕсли ТипОбращения = Тип("ДокументСсылка.ТелефонныйЗвонок") Тогда
		СрокЖизни = Константы.CRM_СрокЖизниЗвонков.Получить();
	КонецЕсли;
	
	Если СрокЖизни = 0 Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ТипОбращения = Тип("СправочникСсылка.CRM_Диалоги") Тогда
		ДатаОбращения = Обращение.ДатаНачала;
	Иначе
		ДатаОбращения = Обращение.Дата;
	КонецЕсли;
	
	Возврат (ДатаОбращения + СрокЖизни*86400 > ТекущаяДатаСеанса());
	
КонецФункции

Функция ПолучитьЦепочкуПисем(Письмо)
	
	ТекПисьмо = Письмо;
	СписокЦепочки = Новый СписокЗначений;
	ВключатьВышестоящие = Ложь;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
		|	СвязанныеДокументы.Ссылка КАК Ссылка,
		|	ЭлектронноеПисьмоВходящее.ВзаимодействиеОснование КАК ВзаимодействиеОснование
		|ИЗ
		|	КритерийОтбора.СвязанныеДокументы(&ЗначениеКритерияОтбора) КАК СвязанныеДокументы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭлектронноеПисьмоВходящее КАК ЭлектронноеПисьмоВходящее
		|		ПО СвязанныеДокументы.Ссылка = ЭлектронноеПисьмоВходящее.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СвязанныеДокументы.Ссылка,
		|	ЭлектронноеПисьмоИсходящее.ВзаимодействиеОснование
		|ИЗ
		|	КритерийОтбора.СвязанныеДокументы(&ЗначениеКритерияОтбора) КАК СвязанныеДокументы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭлектронноеПисьмоИсходящее КАК ЭлектронноеПисьмоИсходящее
		|		ПО СвязанныеДокументы.Ссылка = ЭлектронноеПисьмоИсходящее.Ссылка";
	
	Запрос.УстановитьПараметр("ЗначениеКритерияОтбора", Письмо);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее")
			И ТипЗнч(Выборка.ВзаимодействиеОснование) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее")
			И Выборка.Ссылка.ОтправительАдрес = Выборка.ВзаимодействиеОснование.ОтправительАдрес Тогда
			
			Продолжить;
		КонецЕсли;
		
		СписокЦепочки.Добавить(Выборка.ВзаимодействиеОснование);
		ВключатьВышестоящие = Истина;
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Пока CRM_ОбщегоНазначенияСервер.ЕстьРеквизитДокумента("ВзаимодействиеОснование", ТекПисьмо.Метаданные())
		И ЗначениеЗаполнено(ТекПисьмо.ВзаимодействиеОснование) И ТекПисьмо.ВзаимодействиеОснование <> ТекПисьмо Цикл
		
		РеквизитОтправитель = "";
		Если ТипЗнч(ТекПисьмо) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
			РеквизитОтправитель = "ОтправительАдрес";
		ИначеЕсли ТипЗнч(ТекПисьмо) = Тип("ДокументСсылка.ЭлектронноеПисьмоИсходящее") Тогда
			РеквизитОтправитель = "CRM_ОтправительАдрес";
		КонецЕсли;
		
		Если Не ВключатьВышестоящие И РеквизитОтправитель <> ""
			И ТипЗнч(ТекПисьмо.ВзаимодействиеОснование) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее")
			И ТекПисьмо[РеквизитОтправитель] = ТекПисьмо.ВзаимодействиеОснование.ОтправительАдрес Тогда
			
			ТекПисьмо = ТекПисьмо.ВзаимодействиеОснование;
			Продолжить;
		КонецЕсли;
		
		Если СписокЦепочки.НайтиПоЗначению(ТекПисьмо.ВзаимодействиеОснование) = Неопределено Тогда
			СписокЦепочки.Добавить(ТекПисьмо.ВзаимодействиеОснование);
		Иначе
			Прервать;
		КонецЕсли;
		
		ТекПисьмо = ТекПисьмо.ВзаимодействиеОснование;
		
	КонецЦикла;
	
	Возврат СписокЦепочки;
	
КонецФункции

#КонецОбласти

#КонецЕсли
