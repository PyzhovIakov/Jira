#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// Возвращает список заказов, требующих повторной отправки в сервис в виду изменения товарного состава оснований.
// товарного состава в документах-основаниях.
// 
// Параметры:
//  ПараметрыОтбораЗаказов - Структура - :
// * ТипГрузоперевозки - ПеречислениеСсылка.ТипыГрузоперевозки - Условный параметр, не используется при наличии параметра Список
// * Организация - ОпределяемыйТип.ОрганизацияСервисДоставки - Условный параметр, не используется при наличии параметра Список
// * Список - Массив из Структура - :
// ** Идентификатор - УникальныйИдентификатор - Идентификатор заказа на доставку.
// 
// Возвращаемое значение:
//  СписокЗначений Из УникальныйИдентификатор - Заказы к повторной отправке
Функция ЗаказыКПовторнойОтправке(ПараметрыОтбораЗаказов) Экспорт
	
	Результат = Новый СписокЗначений;
	
	ТипГрузоперевозки = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыОтбораЗаказов, "ТипГрузоперевозки");
	Организация = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыОтбораЗаказов, "Организация");
	Список = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыОтбораЗаказов, "Список");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаРегистра.ИдентификаторДокумента КАК ИдентификаторДокумента,
	|	ТаблицаРегистра.Номер КАК НомерЗаказа,
	|	ТаблицаРегистра.Дата КАК ДатаЗаказа
	|ИЗ
	|	РегистрСведений.ЖурналЗаказовСервисДоставки КАК ТаблицаРегистра
	|ГДЕ
	|	&ОсновноеУсловие
	|	И ТаблицаРегистра.ЕстьИзмененияТоварногоСостава";
	
	Если Список = Неопределено Тогда
		
		ОсновноеУсловие = "
		|	ТаблицаРегистра.Организация = &Организация
		|	И ТаблицаРегистра.ТипГрузоперевозки = &ТипГрузоперевозки";
		
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("ТипГрузоперевозки", ТипГрузоперевозки);
		
	Иначе
		
		ОсновноеУсловие = "ТаблицаРегистра.ИдентификаторДокумента В (&МассивИдентификаторов)";
		
		МассивИдентификаторов = Новый Массив;
		
		Для Каждого Структура Из Список Цикл
			МассивИдентификаторов.Добавить(Структура.ИдентификаторДокумента);
		КонецЦикла;
		
		Запрос.УстановитьПараметр("МассивИдентификаторов", МассивИдентификаторов);
		
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОсновноеУсловие", ОсновноеУсловие);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ПредставлениеДокумента = СервисДоставкиКлиентСервер.ПредставлениеЗаказаНаДоставку(Выборка, Истина);
		Результат.Добавить(Выборка.ИдентификаторДокумента, ПредставлениеДокумента, Истина);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

// Возвращает список идентификаторов частично доставленных заказов, требующих обработки пользователем.
//
// Параметры:
// 	ПараметрыОтбораЗаказов - Структура:
// 		* ТипГрузоперевозки - Число - Условный параметр, не используется при наличии параметра Список
// 		* Организация - ОпределяемыйТип.ОрганизацияСервисДоставки - Условный параметр, не используется при наличии параметра Список
// 		* Список - Массив Из Структура:
// 			** ИдентификаторДокумента - УникальныйИдентификатор - Идентификатор заказа на доставку, назначеннный в системе интеграции
//
// Возвращаемое значение:
// 	СписокЗначений из УникальныйИдентификатор.
//
Функция ЗаказыТребующиеОбработкиЧастичнойДоставки(ПараметрыОтбораЗаказов) Экспорт
	
	Результат = Новый СписокЗначений();
	
	ТипГрузоперевозки = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыОтбораЗаказов, "ТипГрузоперевозки");
	Организация = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыОтбораЗаказов, "Организация");
	Список = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыОтбораЗаказов, "Список");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРегистра.ИдентификаторДокумента КАК ИдентификаторДокумента,
	|	ТаблицаРегистра.Номер КАК НомерЗаказа,
	|	ТаблицаРегистра.Дата КАК ДатаЗаказа
	|ИЗ
	|	РегистрСведений.ЖурналЗаказовСервисДоставки КАК ТаблицаРегистра
	|ГДЕ
	|	&ОсновноеУсловие
	|	И ТаблицаРегистра.КоличествоДокументовОснований > 0
	|	И ТаблицаРегистра.ТребуетсяКорректировкаПоЧастичнойДоставке";
	
	Если Список = Неопределено Тогда
		
		ОсновноеУсловие = "
		|	ТаблицаРегистра.Организация = &Организация
		|	И ТаблицаРегистра.ТипГрузоперевозки = &ТипГрузоперевозки";
		
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("ТипГрузоперевозки", ТипГрузоперевозки);
		
	Иначе
		
		ОсновноеУсловие = "ТаблицаРегистра.ИдентификаторДокумента В (&МассивИдентификаторов)";
		
		МассивИдентификаторов = Новый Массив;
		
		Для Каждого Структура Из Список Цикл
			МассивИдентификаторов.Добавить(Структура.ИдентификаторДокумента);
		КонецЦикла;
		
		Запрос.УстановитьПараметр("МассивИдентификаторов", МассивИдентификаторов);
		
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОсновноеУсловие", ОсновноеУсловие);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ПредставлениеДокумента = СервисДоставкиКлиентСервер.ПредставлениеЗаказаНаДоставку(Выборка, Истина);
		Результат.Добавить(Выборка.ИдентификаторДокумента, ПредставлениеДокумента, Истина);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли