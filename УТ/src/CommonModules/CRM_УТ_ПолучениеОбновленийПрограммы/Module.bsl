
#Область ПрограммныйИнтерфейс

#Область Исправления

// Процедура выпоняет регистрацию игнорируемого исправления.
//
// Параметры:
//  Идентификатор	 - Строка	 - Идентификатор записи.
//  Подсистема		 - Строка	 - Подсистема.
//  ВерсииПодсистемы - Строка	 - Версии подсистемы.
//
Процедура ЗарегистрироватьИгнорируемоеИсправление(Идентификатор, Подсистема = "", ВерсииПодсистемы = "") Экспорт
	
    УстановитьПривилегированныйРежим(Истина);
	МЗ = РегистрыСведений.CRM_УТ_ИгнорируемыеИсправления.СоздатьМенеджерЗаписи();
	МЗ.Идентификатор = Идентификатор;
	МЗ.Подсистема = Подсистема;
	МЗ.ВерсииПодсистемы = ВерсииПодсистемы;
	МЗ.Записать();
	
КонецПроцедуры

// Процедура выполняет очистку игнорируемых исправлений.
//
// Параметры:
//  Параметры	 - Структура, Неопредеено	 - Параметры.
//
Процедура ОчиститьИгнорируемыеИсправления(Параметры = Неопределено) Экспорт
	
	НЗ = РегистрыСведений.CRM_УТ_ИгнорируемыеИсправления.СоздатьНаборЗаписей();
	НЗ.Записать(Истина);
	
КонецПроцедуры

// Процедура дополняет массив игнорируемыми исправлениями.
//
// Параметры:
//  МассивИдентификаторов	 - Массив	 - Массив идентификаторов записей.
//
Процедура ДополнитьМассивИгнорируемымиИсправлениями(МассивИдентификаторов) Экспорт
	
    УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	CRM_УТ_ИгнорируемыеИсправления.Идентификатор КАК Идентификатор
		|ИЗ
		|	РегистрСведений.CRM_УТ_ИгнорируемыеИсправления КАК CRM_УТ_ИгнорируемыеИсправления";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		МассивИдентификаторов.Добавить(Выборка.Идентификатор);
	КонецЦикла;
	
КонецПроцедуры

// Процедура выполняет проверку кода ошибки.
//
// Параметры:
//  Идентификатор		 - Строка	 - Идентификатор исправления.
//  РезультатПолучения	 - Структура	 - Результат получения.
//
Процедура ПроверитьКодОшибки(Идентификатор, РезультатПолучения) Экспорт
	Если РезультатПолучения.КодОшибки = "ClientError" Тогда
		РезультатПолучения.КодОшибки = "";
		ЗарегистрироватьИгнорируемоеИсправление(Идентификатор);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#КонецОбласти
