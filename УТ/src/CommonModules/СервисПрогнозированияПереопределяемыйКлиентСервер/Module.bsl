
#Область СлужебныйПрограммныйИнтерфейс

// Реквизиты справочника Виды планов, необходимые для сервиса прогнозирования.
// 
// Возвращаемое значение:
//  Строка - список реквизитов.
Функция РеквизитыВидаПланаДляСервисаПрогнозирования() Экспорт
	
	Возврат "Периодичность, КоличествоПериодов,
		|АвтоматическиОбновлятьПрогноз, ПериодичностьОбновленияПрогноза, КоличествоОбновленийЗаПериод,
		|МетрикаОценкиКачестваПрогноза, ВзвешиваниеОбъектовПриПодсчетеМетрики, СглаживаниеВыбросовИсторическихДанных,
		|НижняяГраницаВыброса, ВерхняяГраницаВыброса, РассчитыватьОтклонениеПоСезоннымЗначениям,
		|НачалоПрогнозирования, ЗаполнятьПоДаннымСервиса,
		|КоличествоПериодовДляОценкиТочности,
		|ДеньНеделиНачалаПрогноза, ИдентификаторМоделиПрогнозирования,
		|ВариантПрогнозированияПоКатегориям";
	
КонецФункции

// Значения по умолчанию реквизитов справочника Виды планов, необходимые для сервиса прогнозирования.
// 
// Возвращаемое значение:
//  Структура:
//  * Периодичность - ПеречислениеСсылка.Периодичность -
//  * ДеньНеделиНачалаПрогноза - ПеречислениеСсылка.ДниНедели - 
//  * КоличествоПериодов - Число - 
//  * АвтоматическиОбновлятьПрогноз - Булево - 
//  * ПериодичностьОбновленияПрогноза - Число - 
//  * КоличествоОбновленийЗаПериод - Число - 
//  * МетрикаОценкиКачестваПрогноза - Строка - 
//  * ВзвешиваниеОбъектовПриПодсчетеМетрики - Число - 
//  * СглаживаниеВыбросовИсторическихДанных - Число - 
//  * НижняяГраницаВыброса - Число -
//  * ВерхняяГраницаВыброса - Число - 
//  * РассчитыватьОтклонениеПоСезоннымЗначениям - Число - 
//  * НачалоПрогнозирования - Дата - 
//  * ЗаполнятьПоДаннымСервиса - Булево - 
//  * КоличествоПериодовДляОценкиТочности - Число - 
//  * ВариантПрогнозированияПоКатегориям - Число - 
Функция ЗначенияВидаПлановПоУмолчанию() Экспорт
	
	Структура = Новый Структура(РеквизитыВидаПланаДляСервисаПрогнозирования());
	
	Структура.Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Неделя");
	Структура.ДеньНеделиНачалаПрогноза = ПредопределенноеЗначение("Перечисление.ДниНедели.Понедельник");
	Структура.КоличествоПериодов = 5;
	Структура.АвтоматическиОбновлятьПрогноз = Ложь;
	Структура.ПериодичностьОбновленияПрогноза = 0;
	Структура.КоличествоОбновленийЗаПериод = 0;
	Структура.МетрикаОценкиКачестваПрогноза = "MAE";
	Структура.ВзвешиваниеОбъектовПриПодсчетеМетрики = 0;
	Структура.СглаживаниеВыбросовИсторическихДанных = 0;

	Структура.НижняяГраницаВыброса = 2;
	Структура.ВерхняяГраницаВыброса = 2;
	Структура.РассчитыватьОтклонениеПоСезоннымЗначениям = 0;
	Структура.НачалоПрогнозирования = Неопределено;
	Структура.ЗаполнятьПоДаннымСервиса = Истина;
	Структура.КоличествоПериодовДляОценкиТочности = 4;
	
	Структура.ИдентификаторМоделиПрогнозирования = -1;
	Структура.ВариантПрогнозированияПоКатегориям = 0;
	
	Возврат Структура;
	
КонецФункции

// Описание выгружаемого элемента данных.
// 
// Параметры:
//  ОсновноеОписание - Структура - см. ОсновноеОписаниеВыгружаемогоЭлементаДанных:
//  * ИмяВСервисе - Строка - 
//  * Обязательный - Булево -
//  * Выгружать - Булево -  
//  * ИмяВИсточнике - ПеречислениеСсылка.КоллекцииСервисаПрогнозированияПродаж, Строка - 
//  * ТипДанных - Строка - 
//  Представление - Строка -
//  Категориальный - Булево - 
//  ВложенноеОписание - см. ОписаниеВыгружаемогоЭлементаДанных.
// Возвращаемое значение:
//  Структура:
//  * ИмяВСервисе - Строка - 
//  * Обязательный - Булево -
//  * Выгружать - Булево -  
//  * ИмяВИсточнике - ПеречислениеСсылка.КоллекцииСервисаПрогнозированияПродаж, Строка - 
//  * ТипДанных - Строка - 
//  * Представление - Строка -
//  * Категориальный - Булево - 
//  * ВложенноеОписание - см. ОписаниеВыгружаемогоЭлементаДанных.
//  * ЭтоПользовательскоеПоле - Булево - 
//  * ДополнительноеСвойство - Неопределено, Строка, Число - 
Функция ОписаниеВыгружаемогоЭлементаДанных(ОсновноеОписание,
	Представление = "",
	Категориальный = Истина,
	ВложенноеОписание = Неопределено) Экспорт
	
	Структура = Новый Структура();
	Структура.Вставить("ИмяВСервисе",       ОсновноеОписание.ИмяВСервисе);
	Структура.Вставить("Обязательный",      ОсновноеОписание.Обязательный);
	Структура.Вставить("Выгружать",         ОсновноеОписание.Выгружать);
	Структура.Вставить("ИмяВИсточнике",     ОсновноеОписание.ИмяВИсточнике); // Источником является запрос выборки данных.
	Структура.Вставить("ТипДанных",         ОсновноеОписание.ТипДанных); // Тип коллекции или данных реквизита.
	Структура.Вставить("Представление",     Представление);
	Структура.Вставить("Категориальный",    Категориальный);
	Структура.Вставить("ВложенноеОписание", ВложенноеОписание); // Описание предопределенных реквизитов сервиса.
	
	Структура.Вставить("ЭтоПользовательскоеПоле", Ложь);
	Структура.Вставить("ДополнительноеСвойство", Неопределено); // Дополнительный реквизит (сведение).
	
	Возврат Структура;
	
КонецФункции

// Возвращает ссылку на калькулятор расчета затрат на построение прогноза сервисом.
// 
// Возвращаемое значение:
// 	Строка - ссылка на калькулятор.
Функция СсылкаНаКалькуляторРасчетаЗатратНаПостроениеПрогноза() Экспорт
	
	Возврат "https://portal.1c.ru/applications/1C-Forecast-sales";
	
КонецФункции

// Возвращает идентификатор сервиса на портале ИТС.
// 
// Возвращаемое значение:
// 	Строка
Функция ИдентификаторСервиса() Экспорт
	
	Возврат "1C-Forecast";
	
КонецФункции

// Это группировка компоновки данных.
// 
// Параметры:
//  ЭлементКомпоновки - ГруппаЭлементовОтбораКомпоновкиДанных, ЭлементОтбораКомпоновкиДанных -
// 
// Возвращаемое значение:
//  Булево - 
Функция ЭтоГруппировкаКомпоновкиДанных(ЭлементКомпоновки) Экспорт
	Возврат ТипЗнч(ЭлементКомпоновки) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных");
КонецФункции

#КонецОбласти
