
#Область СлужебныйПрограммныйИнтерфейс

#Область ОпределениеФормОбъектов

// Процедура - Обработка получения форм объектов CRM
//
// Параметры:
//  Источник				 - ДокументСсылка - Источник. 
//  ВидФормы				 - Строка - Имя стандартной формы. 
//  Параметры				 - Структура - Параметры формы. 
//  ВыбраннаяФорма			 - Строка, ФормаКлиентскогоПриложения - Содержит имя открываемой формы или объект метаданных Форма.
//  ДополнительнаяИнформация - Структура - Дополнительная информация открытия формы.
//  СтандартнаяОбработка	 - Булево - Признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаПолученияФормОбъектовCRMМодуль(Источник, ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка) Экспорт
	
	Если Параметры.Свойство("Ключ") Тогда
		
		ВыбраннаяФорма = "Документ." + Параметры.Ключ.Метаданные().Имя +"."+ ВидФормы;
		
	Иначе
	
		#Область ПолученияФормВстреча
		
		Если ТипЗнч(Источник) = Тип("ДокументМенеджер.Встреча") Тогда
		
			Если ВидФормы = "ФормаОбъекта" Тогда
				СтандартнаяОбработка = Ложь;
				ВыбраннаяФорма = "Документ.CRM_Взаимодействие.Форма.ФормаДокумента";
				Параметры.Вставить("ВидВзаимодействия", Справочники.CRM_ВидыВзаимодействий.Встреча);
				CRM_МетодыМодулейМенеджеровДокументов.ПодменитьПараметрыПартнера(Параметры);
			КонецЕсли;
		
		#КонецОбласти
		
		#Область ПолученияФормЗапланированноеВзаимодействие
		
		ИначеЕсли ТипЗнч(Источник) = Тип("ДокументМенеджер.ЗапланированноеВзаимодействие") Тогда
		
			Если ВидФормы = "ФормаОбъекта" Тогда
				СтандартнаяОбработка = Ложь;
				ВыбраннаяФорма = "Документ.CRM_Взаимодействие.Форма.ФормаДокумента";
				ВидВзаимодействияПрочее = CRM_МетодыМодулейМенеджеровДокументов.ПолучитьВидВзаимодействия(Перечисления.CRM_ВидыСобытий.Прочее);
				Параметры.Вставить("ВидВзаимодействия", ВидВзаимодействияПрочее);
				CRM_МетодыМодулейМенеджеровДокументов.ПодменитьПараметрыПартнера(Параметры);
			КонецЕсли;
			
		КонецЕсли;
			
		#КонецОбласти
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОпределениеФормОбъектов

#Область CRM_Интерес

// Заполняет таблицу реквизитов, зависимых от хозяйственной операции
//
// Параметры:
//	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - хозяйственная операция соглашения
//	МассивВсехРеквизитов - Массив - реквизиты, которые не зависят от хозяйственной операции
//	МассивРеквизитовОперации - Массив - реквизиты, которые зависят от хозяйственной операции.
//
Процедура ИнтересЗаполнитьИменаРеквизитовПоХозяйственнойОперации(ХозяйственнаяОперация, МассивВсехРеквизитов, МассивРеквизитовОперации) Экспорт
	
	МассивВсехРеквизитов = Новый Массив;
	МассивВсехРеквизитов.Добавить("Товары.ПроцентРучнойСкидки");
	МассивВсехРеквизитов.Добавить("Товары.СуммаРучнойСкидки");
	МассивВсехРеквизитов.Добавить("Товары.ПроцентАвтоматическойСкидки");
	МассивВсехРеквизитов.Добавить("Товары.СуммаАвтоматическойСкидки");
	
	МассивРеквизитовОперации = Новый Массив;
	Если ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию Тогда
		МассивРеквизитовОперации.Добавить("Товары.ПроцентРучнойСкидки");
		МассивРеквизитовОперации.Добавить("Товары.СуммаРучнойСкидки");
		МассивРеквизитовОперации.Добавить("Товары.ПроцентАвтоматическойСкидки");
		МассивРеквизитовОперации.Добавить("Товары.СуммаАвтоматическойСкидки");
	КонецЕсли;
	
КонецПроцедуры

// Возвращает структуру параметров для заполнения налогообложения НДС продажи.
//
// Параметры:
//  Объект - ДокументОбъект.КоммерческоеПредложениеКлиенту - документ, по которому необходимо сформировать параметры.
//
// Возвращаемое значение:
//  Структура - Параметры заполнения, описание параметров см. УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСПродажи();
//
Функция ИнтересПараметрыЗаполненияНалогообложенияНДСПродажи(Объект) Экспорт
	
	ПараметрыЗаполнения = УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСПродажи();
	
	ПараметрыЗаполнения.Организация = Объект.Организация;
	ПараметрыЗаполнения.Дата = Объект.Дата;
	ПараметрыЗаполнения.Склад = Объект.Склад;
	ПараметрыЗаполнения.Договор = Объект.Договор;
	ПараметрыЗаполнения.ЭтоЗаказ = Истина;
	
	
	ПараметрыЗаполнения.РеализацияТоваров = Истина;
	ПараметрыЗаполнения.РеализацияРаботУслуг = Истина;
		
	Возврат ПараметрыЗаполнения;
	
КонецФункции

Функция Интерес_СформироватьПечатнуюФормуКоммерческогоПредложения(МассивОбъектов, ОбъектыПечати, КомплектыПечати, ПараметрыПечати = Неопределено) Экспорт
	
	Возврат Интерес_ПечатнаяФормаКоммерческоеПредложениеКлиенту(МассивОбъектов, ОбъектыПечати, ПараметрыПечати);
	
	// Устаревший вариант
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ДокументЗапасы.Ссылка КАК Ссылка,
	               |	ДокументЗапасы.Ссылка.Организация КАК Организация,
	               |	ДокументЗапасы.Ссылка.Организация.Префикс КАК Префикс,
	               |	ДокументЗапасы.Ссылка.Дата КАК ДатаДокумента,
	               |	ДокументЗапасы.Ссылка.Номер КАК Номер,
	               |	ДокументЗапасы.Ссылка.Партнер КАК Партнер,
	               |	ДокументЗапасы.Ссылка.Валюта КАК Валюта,
	               |	ДокументЗапасы.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	               |	ДокументЗапасы.Ссылка.ОжидаемаяВыручка КАК ОжидаемаяВыручка,
	               |	ДокументЗапасы.НомерСтроки КАК НомерСтроки,
	               |	ДокументЗапасы.Номенклатура КАК Номенклатура,
	               |	ДокументЗапасы.Характеристика КАК Характеристика,
	               |	ДокументЗапасы.КоличествоУпаковок КАК Количество,
	               |	ДокументЗапасы.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	ВЫБОР
	               |		КОГДА &ОтображатьСкидки
	               |			ТОГДА ДокументЗапасы.Цена
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ДокументЗапасы.КоличествоУпаковок = 0
	               |					ТОГДА 0
	               |				ИНАЧЕ ДокументЗапасы.Сумма / ДокументЗапасы.КоличествоУпаковок
	               |			КОНЕЦ
	               |	КОНЕЦ КАК Цена,
	               |	ДокументЗапасы.ПроцентРучнойСкидки КАК ПроцентРучнойСкидки,
	               |	ДокументЗапасы.Сумма КАК Сумма,
	               |	ДокументЗапасы.СтавкаНДС КАК СтавкаНДС,
	               |	ДокументЗапасы.СуммаНДС КАК СуммаНДС,
	               |	ДокументЗапасы.Всего КАК Всего,
	               |	ДокументЗапасы.Содержание КАК Содержание,
	               |	"""" КАК КомментарийВарианта
	               |ИЗ
	               |	Документ.CRM_Интерес.Товары КАК ДокументЗапасы
	               |ГДЕ
	               |	ДокументЗапасы.Ссылка В(&МассивОбъектов)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомерСтроки
	               |ИТОГИ
	               |	СУММА(Всего)
	               |ПО
	               |	Ссылка";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ОтображатьСкидки", ПараметрыПечати.ОтображатьСкидки);
	
	Запрос.Текст = ТекстЗапроса;
	ВыборкаДокументов = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Пока ВыборкаДокументов.Следующий() Цикл
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.КоммерческоеПредложениеКлиенту.CRM_ПФ_MXL_КоммерческоеПредложение");
		
		ОбластьЗаголовок                = Макет.ПолучитьОбласть("Заголовок");
		ОбластьКонтактноеЛицо           = Макет.ПолучитьОбласть("КонтактноеЛицо");
		ОбластьПредлагаемОзнакомиться   = Макет.ПолучитьОбласть("ПредлагаемОзнакомиться");
		
		ОбластьМенеджер                 = Макет.ПолучитьОбласть("Менеджер");
		ОбластьПустаяСтрокаТонкая       = Макет.ПолучитьОбласть("ПустаяСтрокаТонкая");
		ОбластьДополнительнаяИнформация = Макет.ПолучитьОбласть("ДополнительнаяИнформация");
		ОбластьСрокДействия             = Макет.ПолучитьОбласть("СрокДействияЧастичныйВыкуп");

		
		ДанныеОбъекта = Новый Структура;
		ДанныеШапки = ВыборкаДокументов.Ссылка;
		СведенияОрганизации = Новый Структура;
		СведенияОрганизации.Вставить("Наименование");
		СведенияОрганизации.Вставить("ПолноеНаименование");
		СведенияОрганизации.Вставить("Телефоны");
		СведенияОрганизации.Вставить("ЮридическийАдрес");
		СведенияОрганизации.Вставить("ЭлектроннаяПочта");
		
		КоммерческиеПредложенияДокументыПереопределяемый.ЗаполнитьДанныеОрганизации(ДанныеШапки.Организация, СведенияОрганизации);
		
		Если ЗначениеЗаполнено(СведенияОрганизации.ПолноеНаименование) Тогда
			ПредставлениеОрганизации = СведенияОрганизации.ПолноеНаименование;
		Иначе
			ПредставлениеОрганизации = СведенияОрганизации.Наименование;
		КонецЕсли;
		
		
		Если ТипЗнч(ДанныеШапки.Ответственный) = Тип("СправочникСсылка.Пользователи") Тогда
			Менеджер = ДанныеШапки.Ответственный;
		Иначе
			Менеджер = Пользователи.АвторизованныйПользователь();
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Менеджер) Тогда
			
			МассивСМенеджером = Новый Массив;
			МассивСМенеджером.Добавить(Менеджер);
			
			ТребуемыеТипыКонтактнойИнформации = Новый Массив;
			ТребуемыеТипыКонтактнойИнформации.Добавить(Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
			ТребуемыеТипыКонтактнойИнформации.Добавить(Перечисления.ТипыКонтактнойИнформации.Телефон);
			
			ТаблицаКонтактнойИнформации = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(
			МассивСМенеджером,
			ТребуемыеТипыКонтактнойИнформации,,
			ДанныеШапки.Дата);
			
			ТелефонМенеджера = КоммерческиеПредложенияДокументы.ПредставлениеКонтактнойИнформацииИзТаблицы(
			ТаблицаКонтактнойИнформации,
			Перечисления.ТипыКонтактнойИнформации.Телефон);
			
			АдресЭлектроннойПочтыМенеджера = КоммерческиеПредложенияДокументы.ПредставлениеКонтактнойИнформацииИзТаблицы(
			ТаблицаКонтактнойИнформации,
			Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
			
		Иначе
			ТелефонМенеджера = "";
			АдресЭлектроннойПочтыМенеджера   = "";
		КонецЕсли;
		
		
		ДанныеОбъекта.Вставить("Ссылка",                              ДанныеШапки.Ссылка);
		ДанныеОбъекта.Вставить("Организация",                         ДанныеШапки.Организация);
		ДанныеОбъекта.Вставить("ТелефонОрганизации",                  СведенияОрганизации.Телефоны);
		ДанныеОбъекта.Вставить("АдресОрганизации",                    СведенияОрганизации.ЮридическийАдрес);
		ДанныеОбъекта.Вставить("АдресЭлектроннойПочтыОрганизации",    ?(СведенияОрганизации.Свойство("ЭлектроннаяПочта"),СведенияОрганизации.ЭлектроннаяПочта, ""));
		ДанныеОбъекта.Вставить("Клиент",                              ДанныеШапки.Партнер);
		ДанныеОбъекта.Вставить("Контрагент",                          ДанныеШапки.Контрагент);
		ДанныеОбъекта.Вставить("ПредставлениеОрганизации",            ПредставлениеОрганизации);
		ДанныеОбъекта.Вставить("ПредставлениеКлиента",                КоммерческиеПредложенияДокументы.ПредставлениеПартнераКонтрагента(ДанныеОбъекта.Клиент, ДанныеШапки.Контрагент));
		ДанныеОбъекта.Вставить("КонтактноеЛицо",                      ДанныеШапки.КонтактноеЛицо);
		ДанныеОбъекта.Вставить("Менеджер",                            Менеджер);
		ДанныеОбъекта.Вставить("АдресЭлектроннойПочтыМенеджера",      АдресЭлектроннойПочтыМенеджера);
		ДанныеОбъекта.Вставить("ТелефонМенеджера",                    ТелефонМенеджера);
		ДанныеОбъекта.Вставить("Номер",                               ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеШапки.Номер, Ложь, Истина));
		ДанныеОбъекта.Вставить("Дата",                                Формат(ДанныеШапки.Дата,"ДЛФ=D"));
		ДанныеОбъекта.Вставить("КонтактнаяИнформацияПредложения",     КонтактнаяИнформацияПредложения(ДанныеОбъекта));
	
		КоммерческиеПредложенияДокументыПереопределяемый.ПриФормированииЗаголовкаПечатнойФормы(Макет, ОбластьЗаголовок, ДанныеОбъекта);
		
		ДополнительныеПараметрыВывода = Неопределено;
		
		ОбластьЗаголовок.Параметры.Заполнить(ДанныеОбъекта);
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		Если ЗначениеЗаполнено(ДанныеОбъекта.КонтактноеЛицо) Тогда
			ОбластьКонтактноеЛицо.Параметры.Заполнить(ДанныеОбъекта);
			ТабличныйДокумент.Вывести(ОбластьКонтактноеЛицо);
		КонецЕсли;
		
		ОбластьПредлагаемОзнакомиться.Параметры.Заполнить(ДанныеОбъекта);
		ТабличныйДокумент.Вывести(ОбластьПредлагаемОзнакомиться);

		КПВывестиСтрокиВарианта(ТабличныйДокумент, Макет, ВыборкаДокументов, ПараметрыПечати.ОтображатьСкидки);
					
		ТабличныйДокумент.Вывести(ОбластьПустаяСтрокаТонкая);
		
		ОбластьСрокДействия.Параметры.Заполнить(ДанныеОбъекта);
		ТабличныйДокумент.Вывести(ОбластьСрокДействия);
		
		ОбластьМенеджер.Параметры.Заполнить(ДанныеОбъекта);
		ТабличныйДокумент.Вывести(ОбластьМенеджер);
	
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументов.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;	
КонецФункции

Процедура Интерес_ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	Если Не Константы.CRM_ЗапретитьПечатьСчетаИзИнтереса.Получить() Тогда
		// Счет на оплату
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьСчетовНаОплату";
		КомандаПечати.Идентификатор = "СчетНаОплату";
		КомандаПечати.Представление = НСтр("ru = 'Счет на оплату';
		|en = 'Commercial invoice'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.Картинка = БиблиотекаКартинок.ФорматMXL;
		
		// Счет на оплату
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьСчетовНаОплату";
		КомандаПечати.Идентификатор = "СчетНаОплату";
		КомандаПечати.Представление = НСтр("ru = 'Счет на оплату с факсимиле';
		|en = 'Commercial invoice with facsimile'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("ОтображатьФаксимиле", Истина);
		КомандаПечати.Картинка = БиблиотекаКартинок.ФорматMXL;
	КонецЕсли;
	
КонецПроцедуры

Функция Интерес_ПечатнаяФормаКоммерческоеПредложениеКлиенту(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ДанныеДляПечати = Интерес_ДанныеДляПечати(МассивОбъектов, ПараметрыПечати);
	
	ДанныеШапки   = ДанныеДляПечати.РезультатПоШапке.Выбрать();  // ВыборкаИзРезультатаЗапроса
	ТаблицаТовары = ДанныеДляПечати.РезультатПоТоварам.Выгрузить(); // ТаблицаЗначений
	
	ТаблицаТоварыДокумента = Новый ТаблицаЗначений;
	Для Каждого КолонкаТаблицыЗначений Из ТаблицаТовары.Колонки Цикл
		ТаблицаТоварыДокумента.Колонки.Добавить(КолонкаТаблицыЗначений.Имя, КолонкаТаблицыЗначений.ТипЗначения);
	КонецЦикла;
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеШапки.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ТаблицаТоварыДокумента.Очистить();
		
		ПараметрыПоиска = Новый Структура;
		ПараметрыПоиска.Вставить("Ссылка", ДанныеШапки.Ссылка);
		
		НайденныеСтроки = ТаблицаТовары.НайтиСтроки(ПараметрыПоиска);
		
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			НоваяСтрока = ТаблицаТоварыДокумента.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, НайденнаяСтрока);
		КонецЦикла;
		
		ДанныеОбъекта = Интерес_ДанныеОбъектаПоДаннымДляПечати(ДанныеШапки, ТаблицаТоварыДокумента);
		Интерес_ЗаполнитьТабличныйДокументКоммерческоеПредложениеКлиенту(ТабличныйДокумент, ДанныеОбъекта, ПараметрыПечати);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеШапки.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Заполнить табличный документ коммерческое предложение клиенту.
// 
// Параметры:
//  ТабличныйДокумент - ТабличныйДокумент - 
//  ДанныеОбъекта     - Структура -
//  ПараметрыПечати   - Структура - 
//
Процедура Интерес_ЗаполнитьТабличныйДокументКоммерческоеПредложениеКлиенту(ТабличныйДокумент, ДанныеОбъекта, ПараметрыПечати)
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.КоммерческоеПредложениеКлиенту.CRM_ПФ_MXL_КоммерческоеПредложение");
	
	ОтображатьСкидки = (ПараметрыПечати.Свойство("ОтображатьСкидки") И ПараметрыПечати.ОтображатьСкидки);
	
	Если ПараметрыПечати.Свойство("ОтображатьСкидки")
		И Не ПараметрыПечати.ОтображатьСкидки Тогда
		
		Если ДанныеОбъекта.ВариантУказанияСрокаПоставки = Перечисления.ВариантыСроковПоставкиКоммерческихПредложений.НеУказывается Тогда
			ИмяОбластиШапкаТаблицы             = "ШапкаТаблицыТовары";
			ИмяОбластиСтрокаТаблицы            = "СтрокаТаблицыТовары";
			ИмяИменованнойОбластиСтрокаТаблицы = "ОбластьТовары";
		Иначе
			ИмяОбластиШапкаТаблицы             = "ШапкаТаблицыТоварыСрокПоставки";
			ИмяОбластиСтрокаТаблицы            = "СтрокаТаблицыТоварыСрокПоставки";
			ИмяИменованнойОбластиСтрокаТаблицы = "ОбластьТоварыСрокПоставки";
		КонецЕсли;
		
	Иначе
		
		Если ДанныеОбъекта.ВариантУказанияСрокаПоставки = Перечисления.ВариантыСроковПоставкиКоммерческихПредложений.НеУказывается Тогда
			ИмяОбластиШапкаТаблицы             = "ШапкаТаблицыТоварыСкидка";
			ИмяОбластиСтрокаТаблицы            = "СтрокаТаблицыТоварыСкидка";
			ИмяИменованнойОбластиСтрокаТаблицы = "ОбластьТоварыСкидка";
		Иначе
			ИмяОбластиШапкаТаблицы             = "ШапкаТаблицыТоварыСрокПоставкиСкидка";
			ИмяОбластиСтрокаТаблицы            = "СтрокаТаблицыТоварыСрокПоставкиСкидка";
			ИмяИменованнойОбластиСтрокаТаблицы = "ОбластьТоварыСрокПоставкиСкидка";
		КонецЕсли;
		
	КонецЕсли;
	
	ОбластьШтрихкода                = Макет.ПолучитьОбласть("ОбластьШтрихкода");
	ОбластьЗаголовок                = Макет.ПолучитьОбласть("Заголовок");
	ОбластьКонтактноеЛицо           = Макет.ПолучитьОбласть("КонтактноеЛицо");
	ОбластьПредлагаемОзнакомиться   = Макет.ПолучитьОбласть("ПредлагаемОзнакомиться");
	ОбластьШапкаТаблицыТовары       = Макет.ПолучитьОбласть(ИмяОбластиШапкаТаблицы);
	ОбластьСтрокаТаблицыТовары      = Макет.ПолучитьОбласть(ИмяОбластиСтрокаТаблицы);
	ИменованнаяОбластьСтрокаТовары  = ИмяИменованнойОбластиСтрокаТаблицы;
	ОбластьПодвалТаблицыТовары      = Макет.ПолучитьОбласть("ПодвалТаблицыТовары");
	ОбластьМенеджер                 = Макет.ПолучитьОбласть("Менеджер");
	ОбластьПустаяСтрокаТонкая       = Макет.ПолучитьОбласть("ПустаяСтрокаТонкая");
	ОбластьДополнительнаяИнформация = Макет.ПолучитьОбласть("ДополнительнаяИнформация");
	ОбластьСрокДействия             = Макет.ПолучитьОбласть("СрокДействияЧастичныйВыкуп");
	
	КоммерческиеПредложенияДокументыПереопределяемый.ПриВыводеШтриховогоКодаВПечатныеФормы(ТабличныйДокумент, Макет, ОбластьШтрихкода, ДанныеОбъекта);
	
	КоммерческиеПредложенияДокументыПереопределяемый.ПриФормированииЗаголовкаПечатнойФормы(Макет, ОбластьЗаголовок, ДанныеОбъекта);
	
	ДополнительныеПараметрыВывода = Неопределено;
	
	ОбластьЗаголовок.Параметры.Заполнить(ДанныеОбъекта);
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	
	Если ЗначениеЗаполнено(ДанныеОбъекта.КонтактноеЛицо) Тогда
		ОбластьКонтактноеЛицо.Параметры.Заполнить(ДанныеОбъекта);
		ТабличныйДокумент.Вывести(ОбластьКонтактноеЛицо);
	КонецЕсли;
	
	ОбластьПредлагаемОзнакомиться.Параметры.Заполнить(ДанныеОбъекта);
	ТабличныйДокумент.Вывести(ОбластьПредлагаемОзнакомиться);
		
	ТабличныйДокумент.Вывести(ОбластьШапкаТаблицыТовары);
	
	// +CRM
	Ном = 0;
	
	СтруктураДопИнф = Новый Структура("Характеристика, Серия");	
	// -CRM
	
	Для Каждого СтрокаТовары Из ДанныеОбъекта.Товары Цикл
		
		СтандартнаяОбработка = Истина;
		Интерес_ПриВыводеСтрокиТоварыПечатнуюФорму(ТабличныйДокумент,
                                            СтрокаТовары,
                                            ОбластьСтрокаТаблицыТовары,
                                            ИменованнаяОбластьСтрокаТовары,
                                            ДополнительныеПараметрыВывода,
                                            СтандартнаяОбработка,
											Ном, СтруктураДопИнф); // CRM+ парамеры
		
		Если СтандартнаяОбработка Тогда
			ОбластьСтрокаТаблицыТовары.Параметры.Заполнить(СтрокаТовары);
			// +CRM
			Интерес_CRM_ДозаполнитьСтрокуТовары(ОбластьСтрокаТаблицыТовары, СтрокаТовары, Ном, СтруктураДопИнф);
			// -CRM
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыТовары);
		КонецЕсли;
		
	КонецЦикла;
	// -CRM
	
	// +CRM
	ОбластьПодвалТаблицыТовары.Параметры.Заполнить(ДанныеОбъекта);
	// -CRM
	
	ТабличныйДокумент.Вывести(ОбластьПодвалТаблицыТовары);
	
	ТабличныйДокумент.Вывести(ОбластьПустаяСтрокаТонкая);
	
	
	ОбластьСрокДействия.Параметры.Заполнить(ДанныеОбъекта);
	ТабличныйДокумент.Вывести(ОбластьСрокДействия);
	
	Если Не ПустаяСтрока(ДанныеОбъекта.УсловияПоставкиПредставление) Тогда
		
		ТабличныйДокумент.Вывести(ОбластьПустаяСтрокаТонкая);
		ОбластьДополнительнаяИнформация.Параметры.Заполнить(ДанныеОбъекта);
		ТабличныйДокумент.Вывести(ОбластьДополнительнаяИнформация);
		
	КонецЕсли;
	
	ОбластьМенеджер.Параметры.Заполнить(ДанныеОбъекта);
	ТабличныйДокумент.Вывести(ОбластьМенеджер);
	
КонецПроцедуры

Процедура Интерес_ПриВыводеСтрокиТоварыПечатнуюФорму(ТабличныйДокумент, СтрокаТовары, ОбластьСтрокаТаблицыТовары, ИменованнаяОбластьСтрокаТовары, ДополнительныеПараметрыВывода, СтандартнаяОбработка,
			Ном, СтруктураДопИнф) Экспорт // CRM+ параметры
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьНаборы") Тогда 
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Если ДополнительныеПараметрыВывода = Неопределено Тогда
		 ДополнительныеПараметрыВывода = Новый Структура;
	КонецЕсли;
	
	Если НЕ ДополнительныеПараметрыВывода.Свойство("НомерСтроки")  Тогда
		 ДополнительныеПараметрыВывода.Вставить("НомерСтроки", 0);
	КонецЕсли;
	
	Если НаборыСервер.ИспользоватьОбластьНабор(СтрокаТовары, Истина) Тогда
		
		Если СтрокаТовары.ВариантПредставленияНабораВПечатныхФормах = Перечисления.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие Тогда
			
			Если СтрокаТовары.ВариантРасчетаЦеныНабора = Перечисления.ВариантыРасчетаЦенНаборов.РассчитываетсяИзЦенКомплектующих Тогда
			
				ДанныеСтроки = Новый Структура;
				ДанныеСтроки.Вставить("НомерСтроки",      "");
				ДанныеСтроки.Вставить("Номенклатура",     "");
				ДанныеСтроки.Вставить("Количество",       "");
				ДанныеСтроки.Вставить("ЕдиницаИзмерения", "");
				ДанныеСтроки.Вставить("СрокПоставки",     "");
				ДанныеСтроки.Вставить("Цена",             "");
				ДанныеСтроки.Вставить("СуммаСкидки",      "");
				ДанныеСтроки.Вставить("СуммаСНДС",        "");
			
				ОбластьСтрокаТаблицыТовары.Параметры.Заполнить(ДанныеСтроки);
				ОбластьСтрокаТаблицыТовары.Параметры.Номенклатура = СтрокаТовары.Номенклатура;
				
			Иначе
				
				ЗаполнитьЗначенияСвойств(ОбластьСтрокаТаблицыТовары.Параметры, СтрокаТовары);
				// +CRM
				ВремНом = Ном;
				Интерес_CRM_ДозаполнитьСтрокуТовары(ОбластьСтрокаТаблицыТовары, СтрокаТовары, ВремНом, СтруктураДопИнф);
				// -CRM
				
			КонецЕсли;
			
		Иначе
			
			// +CRM
			//ДополнительныеПараметрыВывода.НомерСтроки = ДополнительныеПараметрыВывода.НомерСтроки + 1;
			//ОбластьСтрокаТаблицыТовары.Параметры.НомерСтроки = ДополнительныеПараметрыВывода.НомерСтроки;
			Ном = Ном + 1;
			ОбластьСтрокаТаблицыТовары.Параметры.НомерСтроки = Ном;
			// -CRM
			
		КонецЕсли;
		
		ОбластьСтрокаТаблицыТовары.Области[ИменованнаяОбластьСтрокаТовары].ГраницаСверху = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1, 0);
		ОбластьСтрокаТаблицыТовары.Области[ИменованнаяОбластьСтрокаТовары].ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
		ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыТовары);
		
	ИначеЕсли НаборыСервер.ИспользоватьОбластьКомплектующие(СтрокаТовары, Истина) Тогда
		
		ДополнительныеПараметрыВывода.НомерСтроки = ДополнительныеПараметрыВывода.НомерСтроки + 1;
		
		Если СтрокаТовары.ВариантПредставленияНабораВПечатныхФормах = Перечисления.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие Тогда
			
			Если СтрокаТовары.ВариантРасчетаЦеныНабора = Перечисления.ВариантыРасчетаЦенНаборов.РассчитываетсяИзЦенКомплектующих Тогда
				
				ЗаполнитьЗначенияСвойств(ОбластьСтрокаТаблицыТовары.Параметры, СтрокаТовары);
				// +CRM
				Интерес_CRM_ДозаполнитьСтрокуТовары(ОбластьСтрокаТаблицыТовары, СтрокаТовары, Ном, СтруктураДопИнф);
				// -CRM
				
			Иначе
				
				ДанныеСтроки = Новый Структура;
				ДанныеСтроки.Вставить("НомерСтроки",      "");
				ДанныеСтроки.Вставить("Номенклатура",     "");
				ДанныеСтроки.Вставить("Количество",       "");
				ДанныеСтроки.Вставить("ЕдиницаИзмерения", "");
				ДанныеСтроки.Вставить("СрокПоставки",     "");
				ДанныеСтроки.Вставить("Цена",             "");
				ДанныеСтроки.Вставить("СуммаСкидки",      "");
				ДанныеСтроки.Вставить("СуммаСНДС",        "");
			
				ОбластьСтрокаТаблицыТовары.Параметры.Заполнить(ДанныеСтроки);
				СтрокаТовары.Номенклатура = СтрШаблон(НСтр("ru = '%1, %2 %3';
															|en = '%1, %2 %3'"), СтрокаТовары.Номенклатура, СтрокаТовары.Количество, СтрокаТовары.ЕдиницаИзмерения);
				
				// +CRM
				Ном = Ном + 1;
				ОбластьСтрокаТаблицыТовары.Параметры.НомерСтроки = Ном;
				// -CRM
				
			КонецЕсли;
			
		Иначе
			
			ЗаполнитьЗначенияСвойств(ОбластьСтрокаТаблицыТовары.Параметры, СтрокаТовары);
			// +CRM
			Интерес_CRM_ДозаполнитьСтрокуТовары(ОбластьСтрокаТаблицыТовары, СтрокаТовары, Ном, СтруктураДопИнф);
			// -CRM
			
		КонецЕсли;
		
		ПараметрыОбласти = ОбластьСтрокаТаблицыТовары.Параметры; // ПараметрыМакетаТабличногоДокумента
		//ПараметрыОбласти.НомерСтроки = ДополнительныеПараметрыВывода.НомерСтроки; // +CRM
		ОбластьСтрокаТаблицыТовары.Параметры.Номенклатура = " - " + СтрокаТовары.Номенклатура;
		
		ОбластьСтрокаТаблицыТовары.Области[ИменованнаяОбластьСтрокаТовары].ГраницаСверху = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
		
		ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыТовары);
		
	Иначе
		
		ДополнительныеПараметрыВывода.НомерСтроки = ДополнительныеПараметрыВывода.НомерСтроки + 1;
		
		ЗаполнитьЗначенияСвойств(ОбластьСтрокаТаблицыТовары.Параметры, СтрокаТовары);
		ОбластьСтрокаТаблицыТовары.Параметры.НомерСтроки = ДополнительныеПараметрыВывода.НомерСтроки;
		// +CRM
		Интерес_CRM_ДозаполнитьСтрокуТовары(ОбластьСтрокаТаблицыТовары, СтрокаТовары, Ном, СтруктураДопИнф);
		// -CRM
		
		ОбластьСтрокаТаблицыТовары.Области[ИменованнаяОбластьСтрокаТовары].ГраницаСверху = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1, 0);
		ОбластьСтрокаТаблицыТовары.Области[ИменованнаяОбластьСтрокаТовары].ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1, 0);
		
		ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыТовары);
		
		Возврат;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура Интерес_CRM_ДозаполнитьСтрокуТовары(ОбластьСтрокаТаблицыТовары, СтрокаТовары, Ном, СтруктураДопИнф, УвеличитьНомер = Истина)
	
	Если УвеличитьНомер Тогда
		Ном = Ном + 1;
	КонецЕсли;
	ОбластьСтрокаТаблицыТовары.Параметры.НомерСтроки = Ном;
				
	Если Не СтрокаТовары.ЭтоУслуга Тогда
		СтруктураДопИнф.Характеристика = СтрокаТовары.Характеристика;			
		ХарактеристикаНоменклатуры = КППредставлениеСерий(СтруктураДопИнф);
		ОбластьСтрокаТаблицыТовары.Параметры.Номенклатура = ?(ПустаяСтрока(СтрокаТовары.Содержание), СтрокаТовары.Номенклатура + 
												ХарактеристикаНоменклатуры, СтрокаТовары.Содержание);
	Иначе	
		ОбластьСтрокаТаблицыТовары.Параметры.Номенклатура = ?(ПустаяСтрока(СтрокаТовары.Содержание), СтрокаТовары.Номенклатура,
												СтрокаТовары.Содержание);
	КонецЕсли;
				
КонецПроцедуры

// Подготовка данных объекта по данным для печати.
// 
// Параметры:
// 	ДанныеШапки - ВыборкаИзРезультатаЗапроса.
// 	ТаблицаТовары - ТаблицаЗначений - товары:
//    * НомерСтроки - Число.
Функция Интерес_ДанныеОбъектаПоДаннымДляПечати(ДанныеШапки, ТаблицаТовары)

	ДанныеОбъекта = Новый Структура;
	
#Область ДанныеОрганизации
	
	СведенияОрганизации = Новый Структура;
	СведенияОрганизации.Вставить("Наименование");
	СведенияОрганизации.Вставить("ПолноеНаименование");
	СведенияОрганизации.Вставить("Телефоны");
	СведенияОрганизации.Вставить("ЮридическийАдрес");
	СведенияОрганизации.Вставить("ЭлектроннаяПочта");
	
	КоммерческиеПредложенияДокументыПереопределяемый.ЗаполнитьДанныеОрганизации(ДанныеШапки.Организация, СведенияОрганизации);
	
	Если ЗначениеЗаполнено(СведенияОрганизации.ПолноеНаименование) Тогда
		ПредставлениеОрганизации = СведенияОрганизации.ПолноеНаименование;
	Иначе
		ПредставлениеОрганизации = СведенияОрганизации.Наименование;
	КонецЕсли;
	
#КонецОбласти
	
#Область КонтактнаяИнформация
	
	Если ЗначениеЗаполнено(ДанныеШапки.Менеджер) Тогда
		
		МассивСМенеджером = Новый Массив;
		МассивСМенеджером.Добавить(ДанныеШапки.Менеджер);
		
		ТребуемыеТипыКонтактнойИнформации = Новый Массив;
		ТребуемыеТипыКонтактнойИнформации.Добавить(Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
		
		ТаблицаКонтактнойИнформации = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(
		                                   МассивСМенеджером,
		                                   ТребуемыеТипыКонтактнойИнформации,,
		                                   ДанныеШапки.Дата);
		
		АдресЭлектроннойПочтыМенеджера = КоммерческиеПредложенияДокументы.ПредставлениеКонтактнойИнформацииИзТаблицы(
		                                   ТаблицаКонтактнойИнформации,
		                                   Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
		
	Иначе
		ТелефонМенеджера = "";
		АдресЭлектроннойПочтыМенеджера   = "";
	КонецЕсли;
	
#КонецОбласти

#Область Товары

	ЕстьСкидки = Ложь;
	ДанныеОбъекта.Вставить("СуммаВсего", 0);
	ДанныеОбъекта.Вставить("СуммаВсегоНДС", 0);
	ДанныеОбъекта.Вставить("КоличествоТоваров", 0);
	ДанныеОбъекта.Вставить("Товары", Новый Массив);
	
	
	Для Каждого СтрокаТовары Из ТаблицаТовары Цикл
		
		Если СтрокаТовары.СуммаСкидки <> 0 Тогда
			ЕстьСкидки = Истина;
		КонецЕсли;
		
		ДанныеОбъекта.СуммаВсего        = ДанныеОбъекта.СуммаВсего + СтрокаТовары.Сумма;
		ДанныеОбъекта.СуммаВсегоНДС     = ДанныеОбъекта.СуммаВсегоНДС + СтрокаТовары.СуммаНДС;
		ДанныеОбъекта.КоличествоТоваров = ДанныеОбъекта.КоличествоТоваров + 1;
		
		СтрокаТаблицыТовары = Новый Структура;
		
		НаименованиеТовара = КоммерческиеПредложенияДокументыКлиентСервер.ПредставлениеНоменклатурыДляПечати(СтрокаТовары.Номенклатура, СтрокаТовары.Характеристика);
		
		СтрокаТаблицыТовары.Вставить("НомерСтроки",      СтрокаТовары.НомерСтроки);
		СтрокаТаблицыТовары.Вставить("Номенклатура",     НаименованиеТовара);
		СтрокаТаблицыТовары.Вставить("Количество",       СтрокаТовары.Количество);
		СтрокаТаблицыТовары.Вставить("ЕдиницаИзмерения", СтрокаТовары.ЕдиницаИзмерения);
		СтрокаТаблицыТовары.Вставить("Цена",             Формат(СтрокаТовары.Цена,"ЧДЦ=2; ЧРД=."));
		СтрокаТаблицыТовары.Вставить("СуммаСНДС",        Формат(СтрокаТовары.СуммаСНДС,"ЧДЦ=2; ЧРД=."));
		СтрокаТаблицыТовары.Вставить("СуммаСкидки",      Формат(СтрокаТовары.СуммаСкидки,"ЧДЦ=2; ЧРД=."));
		СтрокаТаблицыТовары.Вставить("СрокПоставки",     КоммерческиеПредложенияДокументыКлиентСервер.СрокПоставкиСтрокой(ДанныеШапки.ВариантУказанияСрокаПоставки, 
		                                                                                                                  СтрокаТовары.СрокПоставки));
																														  
		// +CRM																												  
		СтрокаТаблицыТовары.Вставить("НоменклатураСсылка",     СтрокаТовары.Номенклатура);
		СтрокаТаблицыТовары.Вставить("ЭтоУслуга", СтрокаТовары.ЭтоУслуга);
		СтрокаТаблицыТовары.Вставить("Характеристика", СтрокаТовары.Характеристика);
		СтрокаТаблицыТовары.Вставить("Содержание", "");
		СтрокаТаблицыТовары.Вставить("ЭтоНоменклатура", Истина);
		
		СтрокаТаблицыТовары.Вставить("КоличествоЧисло", СтрокаТовары.Количество);
		СтрокаТаблицыТовары.Вставить("ЦенаЧисло", СтрокаТовары.Цена);
		СтрокаТаблицыТовары.Вставить("СуммаЧисло", СтрокаТовары.Сумма);
		СтрокаТаблицыТовары.Вставить("СуммаСНДСЧисло", СтрокаТовары.СуммаСНДС);
		СтрокаТаблицыТовары.Вставить("СуммаНДСЧисло", СтрокаТовары.СуммаНДС);
		СтрокаТаблицыТовары.Вставить("СуммаСкидкиЧисло", СтрокаТовары.СуммаСкидки);
		// -CRM
		
		КоммерческиеПредложенияДокументыПереопределяемый.ДополнитьДанныеОбъектаДляПечати(СтрокаТаблицыТовары, СтрокаТовары, ДанныеОбъекта);
		
		ДанныеОбъекта.Товары.Добавить(СтрокаТаблицыТовары);
		
	КонецЦикла;	
	
	ПредставлениеСуммДокумента = КоммерческиеПредложенияДокументы.ПредставлениеСуммДокументаДляПечати(ДанныеШапки,
                                                                                                  ДанныеОбъекта.СуммаВсего,
                                                                                                  ДанныеОбъекта.СуммаВсегоНДС,
                                                                                                  ДанныеОбъекта.КоличествоТоваров);
		

#КонецОбласти

#Область ЗаполнениеДанныхОбъекта 

	ПредставлениеСуммДокумента = КоммерческиеПредложенияДокументы.ПредставлениеСуммДокументаДляПечати(ДанныеШапки,
	                                                                                                  ДанныеОбъекта.СуммаВсего,
	                                                                                                  ДанныеОбъекта.СуммаВсегоНДС,																									  
	                                                                                                  ДанныеОбъекта.КоличествоТоваров);
	
	ДанныеОбъекта.Вставить("Ссылка",                              ДанныеШапки.Ссылка);
	ДанныеОбъекта.Вставить("Организация",                         ДанныеШапки.Организация);
	ДанныеОбъекта.Вставить("ТелефонОрганизации",                  СведенияОрганизации.Телефоны);
	ДанныеОбъекта.Вставить("АдресОрганизации",                    СведенияОрганизации.ЮридическийАдрес);
	ДанныеОбъекта.Вставить("АдресЭлектроннойПочтыОрганизации",    ?(СведенияОрганизации.Свойство("ЭлектроннаяПочта"),СведенияОрганизации.ЭлектроннаяПочта, ""));
	ДанныеОбъекта.Вставить("Клиент",                              ДанныеШапки.Клиент);
	ДанныеОбъекта.Вставить("Контрагент",                          ДанныеШапки.Контрагент);
	ДанныеОбъекта.Вставить("ПредставлениеОрганизации",            ПредставлениеОрганизации);
	ДанныеОбъекта.Вставить("ПредставлениеКлиента",                ПредставлениеКлиента(ДанныеОбъекта.Клиент, ДанныеОбъекта.Контрагент));
	ДанныеОбъекта.Вставить("КонтактноеЛицо",                      ДанныеШапки.КонтактноеЛицо);
	ДанныеОбъекта.Вставить("Менеджер",                            ДанныеШапки.Менеджер);
	ДанныеОбъекта.Вставить("АдресЭлектроннойПочтыМенеджера",      АдресЭлектроннойПочтыМенеджера);
	ДанныеОбъекта.Вставить("ТелефонМенеджера",                    ТелефонМенеджера);
	ДанныеОбъекта.Вставить("Номер",                               ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеШапки.Номер, Ложь, Истина));
	ДанныеОбъекта.Вставить("Дата",                                Формат(ДанныеШапки.Дата,"ДЛФ=D"));
	ДанныеОбъекта.Вставить("ВариантУказанияСрокаПоставки",        ДанныеШапки.ВариантУказанияСрокаПоставки);
	ДанныеОбъекта.Вставить("УсловияОплаты",                       ДанныеШапки.УсловияОплаты);
	ДанныеОбъекта.Вставить("УсловияДоставки",                     ДанныеШапки.УсловияДоставки);
	ДанныеОбъекта.Вставить("ПрочиеУсловия",                       ДанныеШапки.ПрочиеУсловия);
	ДанныеОбъекта.Вставить("КонтактнаяИнформацияПредложения",     КонтактнаяИнформацияПредложения(ДанныеОбъекта));
	ДанныеОбъекта.Вставить("ИтоговаяСтрока",                      ПредставлениеСуммДокумента.ИтоговаяСтрока);
	ДанныеОбъекта.Вставить("СуммаПрописью",                       ПредставлениеСуммДокумента.СуммаПрописью);
	ДанныеОбъекта.Вставить("ЕстьСкидки",                          ЕстьСкидки);
	ДанныеОбъекта.Вставить("ПредставлениеСрокаДействия",          КоммерческиеПредложенияДокументы.ПредставлениеСрокаДействияДляПечати(ЕстьСкидки, ДанныеШапки.СрокДействия));
	ДанныеОбъекта.Вставить("ПредставлениеЧастичногоВыкупа",       КоммерческиеПредложенияДокументы.ПредставлениеЧастичногоВыкупаДляПечати(ДанныеШапки.МожетВыкупатьсяЧастично));
	ДанныеОбъекта.Вставить("УсловияПоставкиПредставление",        КоммерческиеПредложенияДокументы.ПредставлениеУсловийПоставкиДляПечати(ДанныеОбъекта.УсловияОплаты, 
	                                                                                                                                     ДанныеОбъекта.УсловияДоставки, 
	                                                                                                                                     ДанныеОбъекта.ПрочиеУсловия));
	
#КонецОбласти
	
	Возврат ДанныеОбъекта;
	
КонецФункции

Функция Интерес_ДанныеДляПечати(МассивОбъектов, ПараметрыПечати)
	
	СтруктураДанныхДляПечати = Неопределено;
	СтандартнаяОбработка = Истина;
	Интерес_КоммерческоеПредложениеКлиентуПриФормированииСтруктурыДанныхПечати(
		МассивОбъектов,
		СтруктураДанныхДляПечати,
		ПараметрыПечати,
		СтандартнаяОбработка);
		
	Если Не СтандартнаяОбработка Тогда
		Возврат СтруктураДанныхДляПечати;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	ОтображатьСкидки = Истина;
	Если ПараметрыПечати.Свойство("ОтображатьСкидки")
		И Не ПараметрыПечати.ОтображатьСкидки Тогда
		ОтображатьСкидки = Ложь;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ОтображатьСкидки", ОтображатьСкидки);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КоммерческоеПредложениеКлиенту.Ссылка                              КАК Ссылка,
	|	КоммерческоеПредложениеКлиенту.Дата                                КАК Дата,
	|	КоммерческоеПредложениеКлиенту.Номер                               КАК Номер,
	|	КоммерческоеПредложениеКлиенту.Ответственный                       КАК Менеджер,
	|	КоммерческоеПредложениеКлиенту.КонтактноеЛицо                      КАК КонтактноеЛицо,
	|	КоммерческоеПредложениеКлиенту.Организация                         КАК Организация,
	|	""""                        										КАК СрокДействия,
	|	КоммерческоеПредложениеКлиенту.Валюта                              КАК Валюта,
	|	КоммерческоеПредложениеКлиенту.ЦенаВключаетНДС                     КАК ЦенаВключаетНДС,
	|	ВЫБОР
	|		КОГДА КоммерческоеПредложениеКлиенту.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ТОГДА ЛОЖЬ ИНАЧЕ ИСТИНА КОНЕЦ      	   						КАК УчитыватьНДС,
	|	""""                												КАК УсловияДоставки,
	|	""""                  												КАК УсловияОплаты,
	|	"""" 																КАК ПрочиеУсловия,
	|	КоммерческоеПредложениеКлиенту.Партнер                              КАК Клиент,
	|	КоммерческоеПредложениеКлиенту.Контрагент                          КАК Контрагент,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыСроковПоставкиКоммерческихПредложений.НеУказывается) КАК ВариантУказанияСрокаПоставки,
	|	ЛОЖЬ             													КАК МожетВыкупатьсяЧастично
	|ИЗ
	|	Документ.CRM_Интерес КАК КоммерческоеПредложениеКлиенту
	|ГДЕ
	|	КоммерческоеПредложениеКлиенту.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка                                                   КАК Ссылка,
	|	Товары.НомерСтроки                                              КАК НомерСтроки,
	|	Товары.Номенклатура                                             КАК Номенклатура,
	|	Товары.Характеристика                                           КАК Характеристика,
	|	Товары.СуммаРучнойСкидки + Товары.СуммаАвтоматическойСкидки     КАК СуммаСкидки,
	|	Товары.ПроцентРучнойСкидки + Товары.ПроцентАвтоматическойСкидки КАК ПроцентСкидки,
	|	Товары.Номенклатура.ЕдиницаИзмерения                            КАК ЕдиницаИзмерения,
	|	Товары.Количество                                               КАК Количество,
	|ВЫБОР
	|	КОГДА &ОтображатьСкидки
	|		ТОГДА Товары.Цена
	|	ИНАЧЕ ВЫБОР
	|			КОГДА Товары.Количество = 0
	|				ТОГДА 0
	|			ИНАЧЕ Товары.Сумма / Товары.Количество
	|		КОНЕЦ
	|КОНЕЦ                                                              КАК Цена,
	|	Товары.СуммаСНДС                                                КАК СуммаСНДС,
	|	Товары.Сумма                                                    КАК Сумма,
	|	Товары.СуммаНДС                                                 КАК СуммаНДС,
	|	""""				                                             КАК СрокПоставки,	
	|	ВЫБОР 
	|		КОГДА Товары.Номенклатура.ТипНоменклатуры = Значение(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ 															КАК ЭтоУслуга	
	|ИЗ
	|	Документ.CRM_Интерес.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	
	ПакетРезультатовЗапроса = Запрос.ВыполнитьПакет(); // Массив из ВыборкаИзРезультатаЗапроса
	
	СтруктураДанныхДляПечати = Новый Структура;
	СтруктураДанныхДляПечати.Вставить("РезультатПоШапке",   ПакетРезультатовЗапроса[0]);
	СтруктураДанныхДляПечати.Вставить("РезультатПоТоварам", ПакетРезультатовЗапроса[1]);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

Процедура Интерес_КоммерческоеПредложениеКлиентуПриФормированииСтруктурыДанныхПечати(МассивОбъектов, СтруктураДанныхДляПечати, ПараметрыПечати, СтандартнаяОбработка) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьНаборы") Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов",   МассивОбъектов);
	
	ОтображатьСкидки = Истина;
	Если ПараметрыПечати.Свойство("ОтображатьСкидки")
		И Не ПараметрыПечати.ОтображатьСкидки Тогда
		ОтображатьСкидки = Ложь;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ОтображатьСкидки", ОтображатьСкидки);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	КоммерческоеПредложениеКлиенту.Ссылка                              КАК Ссылка,
	|	КоммерческоеПредложениеКлиенту.Дата                                КАК Дата,
	|	КоммерческоеПредложениеКлиенту.Номер                               КАК Номер,
	|	КоммерческоеПредложениеКлиенту.Ответственный                       КАК Менеджер,
	|	КоммерческоеПредложениеКлиенту.КонтактноеЛицо                      КАК КонтактноеЛицо,
	|	КоммерческоеПредложениеКлиенту.Организация                         КАК Организация,
	|	""""                        										КАК СрокДействия,
	|	КоммерческоеПредложениеКлиенту.Валюта                              КАК Валюта,
	|	КоммерческоеПредложениеКлиенту.ЦенаВключаетНДС                     КАК ЦенаВключаетНДС,
	|	ВЫБОР
	|		КОГДА КоммерческоеПредложениеКлиенту.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ТОГДА ЛОЖЬ ИНАЧЕ ИСТИНА КОНЕЦ      	   						КАК УчитыватьНДС,
	|	""""                												КАК УсловияДоставки,
	|	""""                  												КАК УсловияОплаты,
	|	"""" 																КАК ПрочиеУсловия,
	|	КоммерческоеПредложениеКлиенту.Партнер                              КАК Клиент,
	|	КоммерческоеПредложениеКлиенту.Контрагент                          КАК Контрагент,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыСроковПоставкиКоммерческихПредложений.НеУказывается) КАК ВариантУказанияСрокаПоставки,
	|	ЛОЖЬ             													КАК МожетВыкупатьсяЧастично	
	|ИЗ
	|	Документ.CRM_Интерес КАК КоммерческоеПредложениеКлиенту
	|ГДЕ
	|	КоммерческоеПредложениеКлиенту.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////1
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка                                                          КАК Ссылка,
	|	ТаблицаТовары.НомерСтроки                                                     КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура                                                    КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                                                  КАК Характеристика,
	|	ТаблицаТовары.СуммаРучнойСкидки + ТаблицаТовары.СуммаАвтоматическойСкидки     КАК СуммаСкидки,
	|	ТаблицаТовары.ПроцентРучнойСкидки + ТаблицаТовары.ПроцентАвтоматическойСкидки КАК ПроцентСкидки,
	|	ТаблицаТовары.Номенклатура.ЕдиницаИзмерения										КАК ЕдиницаИзмерения,
	|	ТаблицаТовары.Количество                                                      КАК Количество,
	|	ВЫБОР
	|		КОГДА &ОтображатьСкидки
	|			ТОГДА ТаблицаТовары.Цена
	|		ИНАЧЕ ВЫБОР
	|			КОГДА ТаблицаТовары.Количество = 0
	|				ТОГДА 0
	|			ИНАЧЕ ТаблицаТовары.Сумма / ТаблицаТовары.Количество
	|		КОНЕЦ
	|	КОНЕЦ                                                                         КАК Цена,
	|	ТаблицаТовары.СуммаСНДС                                                       КАК СуммаСНДС,
	|	ТаблицаТовары.Сумма                                                           КАК Сумма,
	|	ТаблицаТовары.СуммаНДС                                                        КАК СуммаНДС,
	|	ТаблицаТовары.СтавкаНДС                                                       КАК СтавкаНДС,
	|	""""                                                    						КАК СрокПоставки,	
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаТовары.Номенклатура.ТипНоменклатуры = Значение(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ 																			КАК ЭтоУслуга,
	|
	|	ВариантыКомплектацииНоменклатуры.Ссылка                                       КАК ВариантКомплектацииНоменклатуры,
	|	ВариантыКомплектацииНоменклатуры.ВариантПредставленияНабораВПечатныхФормах    КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ВариантыКомплектацииНоменклатуры.ВариантРасчетаЦеныНабора                     КАК ВариантРасчетаЦеныНабора,
	|	ТаблицаТовары.НоменклатураНабора                                              КАК НоменклатураНабора,
	|	ТаблицаТовары.ХарактеристикаНабора                                            КАК ХарактеристикаНабора
	|
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.CRM_Интерес.Товары КАК ТаблицаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
	|		ПО ВариантыКомплектацииНоменклатуры.Владелец      = ТаблицаТовары.НоменклатураНабора
	|		И ВариантыКомплектацииНоменклатуры.Характеристика = ТаблицаТовары.ХарактеристикаНабора
	|		И ВариантыКомплектацииНоменклатуры.Основной	
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////2
	|ВЫБРАТЬ
	|	Таблица.Ссылка                 КАК Ссылка,
	|	Таблица.НоменклатураНабора     КАК НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора   КАК ХарактеристикаНабора,
	|	МИНИМУМ(Таблица.НомерСтроки)   КАК НомерСтроки,
	|	СУММА(Таблица.Сумма)           КАК Сумма,
	|	СУММА(Таблица.СуммаНДС)        КАК СуммаНДС,
	|	СУММА(Таблица.СуммаСНДС)       КАК СуммаСНДС,
	|	СУММА(Таблица.СуммаСкидки)     КАК СуммаСкидки
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыПодготовка
	|ИЗ
	|	Товары КАК Таблица
	|
	|ГДЕ
	|	Таблица.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Ссылка,
	|	Таблица.НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////3
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваров.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ТоварыРазличные
	|ИЗ
	|	Товары КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////4
	|ВЫБРАТЬ
	|	Товары.Ссылка                                    КАК Ссылка,
	|	Товары.ВариантКомплектацииНоменклатуры           КАК ВариантКомплектацииНоменклатуры,
	|	Товары.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	Товары.ВариантРасчетаЦеныНабора                  КАК ВариантРасчетаЦеныНабора,
	|	Товары.НоменклатураНабора,
	|	Товары.ХарактеристикаНабора,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	ВЫБОР КОГДА Товары.ВариантКомплектацииНоменклатуры.НоменклатураОсновногоКомпонента = Товары.Номенклатура
	|		И Товары.ВариантКомплектацииНоменклатуры.ХарактеристикаОсновногоКомпонента = Товары.Характеристика ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ОсновнаяКомплектующая,
	|	Товары.СрокПоставки КАК СрокПоставки,
	|	Товары.СтавкаНДС КАК СтавкаНДС,
	|	0 КАК КоличествоПоУмолчанию,
	|	Товары.Количество КАК Количество
	|
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительноЧастьПервая
	|ИЗ
	|	Товары КАК Товары
	|ГДЕ
	|	Товары.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТоварыРазличные.Ссылка                                                                  КАК Ссылка,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка                                           КАК ВариантКомплектацииНоменклатуры,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.ВариантРасчетаЦеныНабора                  КАК ВариантРасчетаЦеныНабора,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец                                  КАК НоменклатураНабора,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Характеристика                            КАК ХарактеристикаНабора,
	|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура   КАК Номенклатура,
	|	ВариантыКомплектацииНоменклатурыТовары.Характеристика КАК Характеристика,
	|	ЛОЖЬ КАК ОсновнаяКомплектующая,
	|	NULL КАК СрокПоставки,
	|	NULL КАК СтавкаНДС,
	|	СУММА(ВариантыКомплектацииНоменклатурыТовары.Количество) КАК КоличествоПоУмолчанию,
	|	0 КАК Количество
	|
	|ИЗ
	|	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыРазличные КАК ТоварыРазличные
	|		ПО ИСТИНА
	|ГДЕ
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка В (ВЫБРАТЬ РАЗЛИЧНЫЕ Т.ВариантКомплектацииНоменклатуры ИЗ Товары КАК Т)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыРазличные.Ссылка,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Характеристика,
	|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура,
	|	ВариантыКомплектацииНоменклатурыТовары.Характеристика,
	|	ВариантыКомплектацииНоменклатурыТовары.Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////5
	|ВЫБРАТЬ
	|	Таблица.Ссылка,
	|	Таблица.ВариантКомплектацииНоменклатуры,
	|	Таблица.ВариантРасчетаЦеныНабора,
	|	Таблица.ВариантПредставленияНабораВПечатныхФормах,
	|	Таблица.НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика,
	|	МАКСИМУМ(Таблица.СтавкаНДС) КАК СтавкаНДС,
	|	МАКСИМУМ(Таблица.СрокПоставки) КАК СрокПоставки,
	|	МАКСИМУМ(Таблица.ОсновнаяКомплектующая) КАК ОсновнаяКомплектующая,
	|	СУММА(Таблица.КоличествоПоУмолчанию) КАК КоличествоПоУмолчанию,
	|	СУММА(Таблица.Количество) КАК Количество
	|
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительноЧастьВторая
	|ИЗ
	|	ВременнаяТаблицаНаборыДополнительноЧастьПервая КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Ссылка,
	|	Таблица.ВариантКомплектацииНоменклатуры,
	|	Таблица.ВариантРасчетаЦеныНабора,
	|	Таблица.ВариантПредставленияНабораВПечатныхФормах,
	|	Таблица.НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////6
	|ВЫБРАТЬ
	|	Результат.Ссылка,
	|	Результат.ВариантКомплектацииНоменклатуры,
	|	Результат.ВариантРасчетаЦеныНабора,
	|	Результат.ВариантПредставленияНабораВПечатныхФормах,
	|	Результат.НоменклатураНабора,
	|	Результат.ХарактеристикаНабора,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА Результат.ОсновнаяКомплектующая
	|				ТОГДА Результат.СтавкаНДС
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК СтавкаНДС,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА Результат.ОсновнаяКомплектующая
	|				ТОГДА Результат.СрокПоставки
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК СрокПоставки,
	|	ВЫРАЗИТЬ(МИНИМУМ(ВЫБОР
	|			КОГДА Результат.КоличествоПоУмолчанию <> 0 И Результат.ОсновнаяКомплектующая
	|				ТОГДА Результат.Количество / Результат.КоличествоПоУмолчанию
	|			ИНАЧЕ NULL
	|		КОНЕЦ) + 0.5 КАК Число(10,0)) - 1 КАК Количество
	|
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительно
	|ИЗ
	|	ВременнаяТаблицаНаборыДополнительноЧастьВторая КАК Результат
	|СГРУППИРОВАТЬ ПО
	|	Результат.Ссылка,
	|	Результат.ВариантКомплектацииНоменклатуры,
	|	Результат.ВариантРасчетаЦеныНабора,
	|	Результат.ВариантПредставленияНабораВПечатныхФормах,
	|	Результат.НоменклатураНабора,
	|	Результат.ХарактеристикаНабора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////7
	|ВЫБРАТЬ
	|	ВременнаяТаблицаНаборыДополнительно.ВариантКомплектацииНоменклатуры КАК ВариантКомплектацииНоменклатурыВариантКомплектацииНоменклатуры,
	// CRM+
	|	ВЫБОР КОГДА ЛОЖЬ ТОГДА
	//|	ВЫБОР КОГДА Таблица.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКоммерческихПредложений.ПриемНаКомиссию) ТОГДА
	// CRM-
	|		ВЫБОР КОГДА ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах = ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)
	|		ИНАЧЕ
	|			ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
	|		КОНЕЦ
	|	ИНАЧЕ
	|		ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
	|	КОНЕЦ                                                      КАК ВариантПредставленияНабораВПечатныхФормах,
	// CRM+
	|	ВЫБОР КОГДА ЛОЖЬ ТОГДА
	//|	ВЫБОР КОГДА Таблица.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКоммерческихПредложений.ПриемНаКомиссию) ТОГДА
	// CRM-
	|		ВЫБОР КОГДА
	|			ВЫБОР КОГДА ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах = ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)
	|			ИНАЧЕ
	|				ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
	|			КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)
	|			И ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора В (ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоЦенам),ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоДолям)) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.РассчитываетсяИзЦенКомплектующих)
	|		ИНАЧЕ
	|			ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора
	|		КОНЕЦ
	|	ИНАЧЕ
	|		ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора
	|	КОНЕЦ                                                       КАК ВариантРасчетаЦеныНабора,
	|	Таблица.Ссылка                                              КАК Ссылка,
	|	Таблица.НоменклатураНабора                                  КАК НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора                                КАК ХарактеристикаНабора,
	|	Таблица.НомерСтроки                                         КАК НомерСтроки,
	|	ЕСТЬNULL(ВременнаяТаблицаНаборыДополнительно.Количество, 1) КАК Количество,
	|	Таблица.Сумма                                               КАК Сумма,
	|	Таблица.СуммаНДС                                            КАК СуммаНДС,
	|	Таблица.СуммаСНДС                                           КАК СуммаСНДС,
	|	Таблица.СуммаСкидки                                         КАК СуммаСкидки,
	|	ВременнаяТаблицаНаборыДополнительно.СрокПоставки            КАК СрокПоставки,
	|	ВременнаяТаблицаНаборыДополнительно.СтавкаНДС               КАК СтавкаНДС
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборы
	|ИЗ
	|	ВременнаяТаблицаНаборыПодготовка КАК Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборыДополнительно КАК ВременнаяТаблицаНаборыДополнительно
	|		ПО Таблица.НоменклатураНабора = ВременнаяТаблицаНаборыДополнительно.НоменклатураНабора
	|		И Таблица.ХарактеристикаНабора = ВременнаяТаблицаНаборыДополнительно.ХарактеристикаНабора
	|		И Таблица.Ссылка = ВременнаяТаблицаНаборыДополнительно.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////8
	|ВЫБРАТЬ
	|	
	|	Товары.Ссылка                                           КАК Ссылка,
	|	Товары.ВариантПредставленияНабораВПечатныхФормах        КАК ВариантПредставленияНабораВПечатныхФормах,
	|	Товары.ВариантРасчетаЦеныНабора                         КАК ВариантРасчетаЦеныНабора,
	|	Товары.НоменклатураНабора                               КАК НоменклатураНабора,
	|	Товары.ХарактеристикаНабора                             КАК ХарактеристикаНабора,
	|	Товары.ЭтоНабор                                         КАК ЭтоНабор,
	|	Товары.ЭтоКомплектующие                                 КАК ЭтоКомплектующие,
	|
	|	Товары.НомерСтроки                                      КАК НомерСтроки,
	|	Товары.Номенклатура                                     КАК Номенклатура,
	|	Товары.ЕдиницаИзмерения                                 КАК ЕдиницаИзмерения,
	|	Товары.Количество                                       КАК Количество,
	|
	|	Товары.Цена КАК Цена,
	|
	|	Товары.Сумма                                             КАК Сумма,
	|	Товары.СтавкаНДС                                         КАК СтавкаНДС,
	|	Товары.СуммаНДС                                          КАК СуммаНДС,
	|	Товары.СуммаСНДС                                         КАК СуммаСНДС,
	|	Товары.СрокПоставки                                      КАК СрокПоставки,
	|	ЕСТЬNULL(Товары.Характеристика, """")                    КАК Характеристика,
	|	Товары.СуммаСкидки                                       КАК СуммаСкидки,
	|	
	|	Товары.ЭтоУслуга										КАК ЭтоУслуга
	|
	|ИЗ (
	|
	|	ВЫБРАТЬ
	|		Таблица.Ссылка,
	|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
	|			ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ПустаяСсылка)
	|		КОНЕЦ КАК ВариантПредставленияНабораВПечатныхФормах,
	|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
	|			ВременнаяТаблицаНаборы.ВариантРасчетаЦеныНабора
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ПустаяСсылка)
	|		КОНЕЦ КАК ВариантРасчетаЦеныНабора,
	|		Таблица.НоменклатураНабора,
	|		Таблица.ХарактеристикаНабора,
	|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|		КОНЕЦ КАК ЭтоКомплектующие,
	|		ЛОЖЬ КАК ЭтоНабор,
	|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
	|			ВременнаяТаблицаНаборы.НомерСтроки
	|		ИНАЧЕ
	|			Таблица.НомерСтроки
	|		КОНЕЦ КАК НомерСтроки,
	|		Таблица.Номенклатура,
	|		Таблица.Количество,
	|		Таблица.Цена,
	|		Таблица.Сумма,
	|		Таблица.СтавкаНДС,
	|		Таблица.СуммаНДС,
	|		Таблица.СуммаСНДС,
	|		Таблица.СрокПоставки,
	|		Таблица.Характеристика,
	|		Таблица.ЕдиницаИзмерения,
	|		Таблица.СуммаСкидки,
	|
	|		Таблица.ЭтоУслуга										КАК ЭтоУслуга
	|
	|	ИЗ
	|		Товары КАК Таблица
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборы КАК ВременнаяТаблицаНаборы
	|			ПО ВременнаяТаблицаНаборы.НоменклатураНабора = Таблица.НоменклатураНабора
	|			 И ВременнаяТаблицаНаборы.ХарактеристикаНабора = Таблица.ХарактеристикаНабора
	|			 И ВременнаяТаблицаНаборы.Ссылка = Таблица.Ссылка
	|
	|	ГДЕ
	|		Таблица.НоменклатураНабора = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		ИЛИ (Таблица.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	        И ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах В (ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоКомплектующие),
	|	                                                                              ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)))
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ВременнаяТаблицаНаборы.Ссылка,
	|		ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах,
	|		ВременнаяТаблицаНаборы.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
	|		ВременнаяТаблицаНаборы.НоменклатураНабора,
	|		ВременнаяТаблицаНаборы.ХарактеристикаНабора,
	|		ЛОЖЬ КАК ЭтоКомплектующие,
	|		ИСТИНА КАК ЭтоНабор,
	|		ВременнаяТаблицаНаборы.НомерСтроки,
	|		ВременнаяТаблицаНаборы.НоменклатураНабора,
	|		ВременнаяТаблицаНаборы.Количество,
	|		ВЫБОР
	|			КОГДА &ОтображатьСкидки ТОГДА
	|				ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.Количество, 1) <> 0 ТОГДА
	|					(ВременнаяТаблицаНаборы.Сумма) / ЕСТЬNULL(ВременнаяТаблицаНаборы.Количество, 1)
	|				ИНАЧЕ
	|					0
	|				КОНЕЦ
	|			ИНАЧЕ
	|				ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.Количество, 1) <> 0 ТОГДА
	|					(ВременнаяТаблицаНаборы.Сумма) / ЕСТЬNULL(ВременнаяТаблицаНаборы.Количество, 1)
	|				ИНАЧЕ
	|					0
	|				КОНЕЦ
	|		КОНЕЦ КАК Цена,
	|		ВременнаяТаблицаНаборы.Сумма КАК Сумма,
	|		ВременнаяТаблицаНаборы.СтавкаНДС,
	|		ВременнаяТаблицаНаборы.СуммаНДС,
	|		ВременнаяТаблицаНаборы.СуммаСНДС,
	|		ВременнаяТаблицаНаборы.СрокПоставки,
	|		ВременнаяТаблицаНаборы.ХарактеристикаНабора,
	|		ВременнаяТаблицаНаборы.НоменклатураНабора.ЕдиницаИзмерения,
	|		ВременнаяТаблицаНаборы.СуммаСкидки,
	|
	|		ВЫБОР 
	|			КОГДА ВременнаяТаблицаНаборы.НоменклатураНабора.ТипНоменклатуры = Значение(Перечисление.ТипыНоменклатуры.Услуга)
	|				ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ 																	КАК ЭтоУслуга
	|
	|	ИЗ
	|		ВременнаяТаблицаНаборы КАК ВременнаяТаблицаНаборы
	|	ГДЕ
	|		ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах В (ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор),
	|	                                                                        ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие))
	|) КАК Товары
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.НомерСтроки,
	|	ЭтоНабор УБЫВ
	|";
	
	ПакетРезультатовЗапроса = Запрос.ВыполнитьПакет();
	
	СтруктураДанныхДляПечати = Новый Структура;
	СтруктураДанныхДляПечати.Вставить("РезультатПоШапке",        ПакетРезультатовЗапроса[0]);
	СтруктураДанныхДляПечати.Вставить("РезультатПоТоварам",      ПакетРезультатовЗапроса[8]);
	
КонецПроцедуры

#КонецОбласти // CRM_Интерес

#Область КоммерческоеПредложение

#Область Печать

Функция КП_СформироватьПечатнуюФормуКоммерческогоПредложения(МассивОбъектов, ОбъектыПечати, КомплектыПечати, ПараметрыПечати = Неопределено) Экспорт
	
	//Возврат КП_СформироватьПечатнуюФормуКоммерческогоПредложения_Устаревший(МассивОбъектов, ОбъектыПечати, КомплектыПечати, ПараметрыПечати);
	Возврат ПечатнаяФормаКоммерческоеПредложениеКлиенту(МассивОбъектов, ОбъектыПечати, ПараметрыПечати);
	
КонецФункции

Функция ПечатнаяФормаКоммерческоеПредложениеКлиенту(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ДанныеДляПечати = ДанныеДляПечати(МассивОбъектов, ПараметрыПечати);
	
	ДанныеШапки   = ДанныеДляПечати.РезультатПоШапке.Выбрать();  // ВыборкаИзРезультатаЗапроса
	ТаблицаТовары = ДанныеДляПечати.РезультатПоТоварам.Выгрузить(); // ТаблицаЗначений
	
	ТаблицаТоварыДокумента = Новый ТаблицаЗначений;
	Для Каждого КолонкаТаблицыЗначений Из ТаблицаТовары.Колонки Цикл
		ТаблицаТоварыДокумента.Колонки.Добавить(КолонкаТаблицыЗначений.Имя, КолонкаТаблицыЗначений.ТипЗначения);
	КонецЦикла;
	
	// +CRM
	ТаблицаВариантов = CRM_ПолучитьТаблицуВариантов(МассивОбъектов);
	// -CRM
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеШапки.Следующий() Цикл
		
		// Код перенесен ниже, чтобы избежать вывода лишних разделителей страница
		// в том случае, если документ не будет выведен (НайденныеСтроки.Количество() = 0)
		//Если Не ПервыйДокумент Тогда
		//	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();			
		//КонецЕсли;
		//
		//ПервыйДокумент = Ложь;
		//НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ТаблицаТоварыДокумента.Очистить();
		
		ПараметрыПоиска = Новый Структура;
		ПараметрыПоиска.Вставить("Ссылка", ДанныеШапки.Ссылка);
		
		НайденныеСтроки = ТаблицаТовары.НайтиСтроки(ПараметрыПоиска);
		
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			НоваяСтрока = ТаблицаТоварыДокумента.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, НайденнаяСтрока);
		КонецЦикла;
		
		// +CRM
		Если НайденныеСтроки.Количество() = 0 Тогда // В случае, если НомерВарианта = Неопределено,
													// и в документе нет утвержденного варианта
			Продолжить;
		КонецЕсли;
		
		НомерВарианта = Неопределено;
		Если НЕ (ПараметрыПечати = Неопределено) И ПараметрыПечати.Свойство("НомерВарианта") Тогда
			НомерВарианта = ПараметрыПечати.НомерВарианта;
		КонецЕсли;
		
		Если НомерВарианта = Неопределено Тогда
			ПараметрыПоиска.Вставить("Утвержден", Истина);
		ИначеЕсли НомерВарианта = -1 Тогда
			
		Иначе
			ПараметрыПоиска.Вставить("ИДВарианта", НомерВарианта);
		КонецЕсли;
		НайденныеВарианты = ТаблицаВариантов.НайтиСтроки(ПараметрыПоиска);
		
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		// -CRM
		
		ДанныеОбъекта = ДанныеОбъектаПоДаннымДляПечати(ДанныеШапки, ТаблицаТоварыДокумента, НайденныеВарианты);
		ЗаполнитьТабличныйДокументКоммерческоеПредложениеКлиенту(ТабличныйДокумент, ДанныеОбъекта, ПараметрыПечати);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеШапки.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Заполнить табличный документ коммерческое предложение клиенту.
// 
// Параметры:
//  ТабличныйДокумент - ТабличныйДокумент - 
//  ДанныеОбъекта     - Структура -
//  ПараметрыПечати   - Структура - 
//
Процедура ЗаполнитьТабличныйДокументКоммерческоеПредложениеКлиенту(ТабличныйДокумент, ДанныеОбъекта, ПараметрыПечати)
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.КоммерческоеПредложениеКлиенту.CRM_ПФ_MXL_КоммерческоеПредложение");
	
	ОтображатьСкидки = (ПараметрыПечати.Свойство("ОтображатьСкидки") И ПараметрыПечати.ОтображатьСкидки);
	
	Если ПараметрыПечати.Свойство("ОтображатьСкидки")
		И Не ПараметрыПечати.ОтображатьСкидки Тогда
		
		Если ДанныеОбъекта.ВариантУказанияСрокаПоставки = Перечисления.ВариантыСроковПоставкиКоммерческихПредложений.НеУказывается Тогда
			ИмяОбластиШапкаТаблицы             = "ШапкаТаблицыТовары";
			ИмяОбластиСтрокаТаблицы            = "СтрокаТаблицыТовары";
			ИмяИменованнойОбластиСтрокаТаблицы = "ОбластьТовары";
		Иначе
			ИмяОбластиШапкаТаблицы             = "ШапкаТаблицыТоварыСрокПоставки";
			ИмяОбластиСтрокаТаблицы            = "СтрокаТаблицыТоварыСрокПоставки";
			ИмяИменованнойОбластиСтрокаТаблицы = "ОбластьТоварыСрокПоставки";
		КонецЕсли;
		
	Иначе
		
		Если ДанныеОбъекта.ВариантУказанияСрокаПоставки = Перечисления.ВариантыСроковПоставкиКоммерческихПредложений.НеУказывается Тогда
			ИмяОбластиШапкаТаблицы             = "ШапкаТаблицыТоварыСкидка";
			ИмяОбластиСтрокаТаблицы            = "СтрокаТаблицыТоварыСкидка";
			ИмяИменованнойОбластиСтрокаТаблицы = "ОбластьТоварыСкидка";
		Иначе
			ИмяОбластиШапкаТаблицы             = "ШапкаТаблицыТоварыСрокПоставкиСкидка";
			ИмяОбластиСтрокаТаблицы            = "СтрокаТаблицыТоварыСрокПоставкиСкидка";
			ИмяИменованнойОбластиСтрокаТаблицы = "ОбластьТоварыСрокПоставкиСкидка";
		КонецЕсли;
		
	КонецЕсли;
	
	ОбластьШтрихкода                = Макет.ПолучитьОбласть("ОбластьШтрихкода");
	ОбластьЗаголовок                = Макет.ПолучитьОбласть("Заголовок");
	ОбластьКонтактноеЛицо           = Макет.ПолучитьОбласть("КонтактноеЛицо");
	ОбластьПредлагаемОзнакомиться   = Макет.ПолучитьОбласть("ПредлагаемОзнакомиться");
	ОбластьШапкаТаблицыТовары       = Макет.ПолучитьОбласть(ИмяОбластиШапкаТаблицы);
	ОбластьСтрокаТаблицыТовары      = Макет.ПолучитьОбласть(ИмяОбластиСтрокаТаблицы);
	ИменованнаяОбластьСтрокаТовары  = ИмяИменованнойОбластиСтрокаТаблицы;
	ОбластьПодвалТаблицыТовары      = Макет.ПолучитьОбласть("ПодвалТаблицыТовары");
	ОбластьМенеджер                 = Макет.ПолучитьОбласть("Менеджер");
	ОбластьПустаяСтрокаТонкая       = Макет.ПолучитьОбласть("ПустаяСтрокаТонкая");
	ОбластьДополнительнаяИнформация = Макет.ПолучитьОбласть("ДополнительнаяИнформация");
	ОбластьСрокДействия             = Макет.ПолучитьОбласть("СрокДействияЧастичныйВыкуп");
	
	КоммерческиеПредложенияДокументыПереопределяемый.ПриВыводеШтриховогоКодаВПечатныеФормы(ТабличныйДокумент, Макет, ОбластьШтрихкода, ДанныеОбъекта);
	
	КоммерческиеПредложенияДокументыПереопределяемый.ПриФормированииЗаголовкаПечатнойФормы(Макет, ОбластьЗаголовок, ДанныеОбъекта);
	
	ДополнительныеПараметрыВывода = Неопределено;
	
	ОбластьЗаголовок.Параметры.Заполнить(ДанныеОбъекта);
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	
	Если ЗначениеЗаполнено(ДанныеОбъекта.КонтактноеЛицо) Тогда
		ОбластьКонтактноеЛицо.Параметры.Заполнить(ДанныеОбъекта);
		ТабличныйДокумент.Вывести(ОбластьКонтактноеЛицо);
	КонецЕсли;
	
	ОбластьПредлагаемОзнакомиться.Параметры.Заполнить(ДанныеОбъекта);
	ТабличныйДокумент.Вывести(ОбластьПредлагаемОзнакомиться);
	
	Сч = 0;
	Для Каждого СтрокиВарианта Из ДанныеОбъекта.Товары Цикл // +CRM - массив массивов вариантов КП
		
		// +CRM
		Если ДанныеОбъекта.Товары.Количество() > 1 И СтрокиВарианта.Количество() > 0 Тогда // выводится несколько вариантов (все)
			Если СтрокиВарианта[0].Утвержден Тогда    
				ДобавитьКОбластиВариант = НСтр("ru=' (утв.)';en=' (Approved)'");
			Иначе
				ДобавитьКОбластиВариант = ""; 
			КонецЕсли; 
			
			// область варианта
			ОбластьВарианта = Макет.ПолучитьОбласть("Вариант");
			ИмяВариантаПоУмолчанию = НСтр("ru='Вариант ';en='Option'") + СтрокиВарианта[0].ИДВарианта;
			ОбластьВарианта.Параметры.Вариант = ИмяВариантаПоУмолчанию + 
											?(ИмяВариантаПоУмолчанию = СтрокиВарианта[0].ИмяВарианта ИЛИ ПустаяСтрока(СтрокиВарианта[0].ИмяВарианта),
											"", " """ + СтрокиВарианта[0].ИмяВарианта + """") + ДобавитьКОбластиВариант;
			ТабличныйДокумент.Вывести(ОбластьВарианта);
		КонецЕсли;
		// -CRM
		
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицыТовары);
		
		// +CRM
		ИтогоПоРазделу 	= 0;
		ИтогоСумма 		= 0;
		ИтогоСуммаНДС 	= 0;
		ИтогоБезСкидок 	= 0;
		
		Ном = 0;
		МассивИтогов = Новый Массив;
		МассивИтоговСкидок = Новый Массив;
		МассивРазделителей = Новый Массив;
		
		СтруктураДопИнф = Новый Структура("Характеристика, Серия");
		
		// -CRM
		
		Для Каждого СтрокаТовары Из СтрокиВарианта Цикл
			
			Если СтрокаТовары.ЭтоНоменклатура Тогда
				
				СтандартнаяОбработка = Истина;
				ПриВыводеСтрокиТоварыПечатнуюФорму(ТабличныйДокумент,
	                                                СтрокаТовары,
	                                                ОбластьСтрокаТаблицыТовары,
	                                                ИменованнаяОбластьСтрокаТовары,
	                                                ДополнительныеПараметрыВывода,
	                                                СтандартнаяОбработка,
													Ном, СтруктураДопИнф, ИтогоСумма, ИтогоСуммаНДС, МассивИтогов, МассивИтоговСкидок); // CRM+ парамеры
				
				Если СтандартнаяОбработка Тогда
					ОбластьСтрокаТаблицыТовары.Параметры.Заполнить(СтрокаТовары);
					// +CRM
					CRM_ДозаполнитьСтрокуТовары(ОбластьСтрокаТаблицыТовары, СтрокаТовары, Ном, СтруктураДопИнф, ИтогоСумма, ИтогоСуммаНДС, МассивИтогов, МассивИтоговСкидок);
					// -CRM
					ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыТовары);
				КонецЕсли;
			
			Иначе
				// +CRM
				Если МассивРазделителей.Количество() > 0 Тогда
					ИтогоПоРазделу = МассивИтогов[МассивИтогов.Количество() - 1];
					ИтогоСкидкаПоРазделу = МассивИтоговСкидок[МассивИтоговСкидок.Количество() - 1];
					Разделитель = МассивРазделителей[МассивРазделителей.Количество() - 1];
					МассивИтогов.Удалить(МассивИтогов.Количество() - 1);
					МассивИтоговСкидок.Удалить(МассивИтоговСкидок.Количество() - 1);
					МассивРазделителей.Удалить(МассивРазделителей.Количество() - 1);
					Если Разделитель.Итог Тогда
						
						ОбластьСтрокаТаблицыТовары.Области[ИменованнаяОбластьСтрокаТовары].ГраницаСверху = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1, 0);
						ОбластьСтрокаТаблицыТовары.Области[ИменованнаяОбластьСтрокаТовары].ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1, 0);
						ОбластьСтрокаТаблицыТовары.Параметры.Заполнить(СтрокаТовары);
						ОбластьСтрокаТаблицыТовары.Параметры.НомерСтроки = "";
						ОбластьСтрокаТаблицыТовары.Параметры.Количество = "";
						ОбластьСтрокаТаблицыТовары.Параметры.ЕдиницаИзмерения = "";
						ОбластьСтрокаТаблицыТовары.Параметры.Цена = "";
						
						// Строки итогов по иерархии (итоги).
						Если ОтображатьСкидки Тогда
							
							ОбластьСтрокаТаблицыТовары.Параметры.Номенклатура  = НСтр("ru='Итого по: ';en='Total by:'") + Строка(Разделитель);
							
							ОбластьСтрокаТаблицыТовары.Параметры.СуммаСкидки = СокрЛП(Формат(ИтогоСкидкаПоРазделу, "ЧЦ=15; ЧДЦ=2"));
							ОбластьСтрокаТаблицыТовары.Параметры.СуммаСНДС = СокрЛП(CRM_ОбщегоНазначенияКлиентСервер.ФорматСумм(ИтогоПоРазделу));
							
						Иначе	
							
							ОбластьСтрокаТаблицыТовары.Параметры.Номенклатура   = НСтр("ru='Итого по: ';en='Total by:'") + Строка(Разделитель);
							
							ОбластьСтрокаТаблицыТовары.Параметры.СуммаСНДС = СокрЛП(CRM_ОбщегоНазначенияКлиентСервер.ФорматСумм(ИтогоПоРазделу));
							                        
						КонецЕсли;
						
						ОбластьСтрокаТаблицыТовары.Область(1, 3, 1, 3).Шрифт = Новый Шрифт(, , Истина, , , );
						ОбластьСтрокаТаблицыТовары.Область(1, 11, 1, 11).Шрифт = Новый Шрифт(, , Истина, , , );
						ОбластьСтрокаТаблицыТовары.Область(1, 12, 1, 12).Шрифт = Новый Шрифт(, , Истина, , , );
						
						ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыТовары);
						
						ОбластьСтрокаТаблицыТовары.Область(1, 3, 1, 3).Шрифт = Новый Шрифт(, , Ложь, , , );
						ОбластьСтрокаТаблицыТовары.Область(1, 11, 1, 11).Шрифт = Новый Шрифт(, , Ложь, , , );
						ОбластьСтрокаТаблицыТовары.Область(1, 12, 1, 12).Шрифт = Новый Шрифт(, , Ложь, , , );
						
					КонецЕсли;
				КонецЕсли;
				
				ОбластьСтрокаТаблицыТовары.Параметры.Заполнить(СтрокаТовары);
				ОбластьСтрокаТаблицыТовары.Параметры.НомерСтроки = "";
				
				// Строки разделителей иерархии (заголовки).
				Если ОтображатьСкидки Тогда
					ОбластьСтрокаТаблицыТовары.Параметры.Номенклатура = СтрокаТовары.НоменклатураСсылка;
				Иначе	
					ОбластьСтрокаТаблицыТовары.Параметры.Номенклатура = СтрокаТовары.НоменклатураСсылка;
				КонецЕсли;
				МассивИтогов.Добавить(0);
				МассивИтоговСкидок.Добавить(0);
				Если НЕ ТипЗнч(СтрокаТовары.Номенклатура) = Тип("Неопределено") Тогда 
					МассивРазделителей.Добавить(СтрокаТовары.НоменклатураСсылка);
				КонецЕсли;
				
				ОбластьСтрокаТаблицыТовары.Область(1, 3, 1, 3).Шрифт = Новый Шрифт(, , Истина, , , );
				
				ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыТовары);
				
				ОбластьСтрокаТаблицыТовары.Область(1, 3, 1, 3).Шрифт = Новый Шрифт(, , Ложь, , , );
				// -CRM
				
			КонецЕсли;		
			
		КонецЦикла;
		
		// +CRM
		// Вывод итогов последнего разделителя, если таковой имеется
		Если МассивИтогов.Количество() > 0 Тогда
			ИтогоПоРазделу = МассивИтогов[МассивИтогов.Количество() - 1];
			ИтогоСкидкаПоРазделу = МассивИтоговСкидок[МассивИтоговСкидок.Количество() - 1];
			Разделитель = МассивРазделителей[МассивРазделителей.Количество() - 1];
			МассивИтогов.Удалить(МассивИтогов.Количество()-1);
			МассивИтоговСкидок.Удалить(МассивИтоговСкидок.Количество() - 1);
			МассивРазделителей.Удалить(МассивРазделителей.Количество() - 1);
			Если Разделитель.Итог Тогда
						
				ОбластьСтрокаТаблицыТовары.Области[ИменованнаяОбластьСтрокаТовары].ГраницаСверху = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1, 0);
				ОбластьСтрокаТаблицыТовары.Области[ИменованнаяОбластьСтрокаТовары].ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1, 0);
				ОбластьСтрокаТаблицыТовары.Параметры.Заполнить(СтрокаТовары);
				ОбластьСтрокаТаблицыТовары.Параметры.НомерСтроки = "";
				ОбластьСтрокаТаблицыТовары.Параметры.Количество = "";
				ОбластьСтрокаТаблицыТовары.Параметры.ЕдиницаИзмерения = "";
				ОбластьСтрокаТаблицыТовары.Параметры.Цена = "";
				
				// Строки итогов по иерархии (итоги).
				Если ОтображатьСкидки Тогда
					
					ОбластьСтрокаТаблицыТовары.Параметры.Номенклатура  = НСтр("ru='Итого по: ';en='Total by:'") + Строка(Разделитель);
					
					ОбластьСтрокаТаблицыТовары.Параметры.СуммаСкидки = СокрЛП(Формат(ИтогоСкидкаПоРазделу, "ЧЦ=15; ЧДЦ=2"));
					ОбластьСтрокаТаблицыТовары.Параметры.СуммаСНДС = СокрЛП(CRM_ОбщегоНазначенияКлиентСервер.ФорматСумм(ИтогоПоРазделу));
					
				Иначе	
					
					ОбластьСтрокаТаблицыТовары.Параметры.Номенклатура   = НСтр("ru='Итого по: ';en='Total by:'") + Строка(Разделитель);
					
					ОбластьСтрокаТаблицыТовары.Параметры.СуммаСНДС = СокрЛП(CRM_ОбщегоНазначенияКлиентСервер.ФорматСумм(ИтогоПоРазделу));
					                        
				КонецЕсли;
				
				ОбластьСтрокаТаблицыТовары.Область(1, 3, 1, 3).Шрифт = Новый Шрифт(, , Истина, , , );
				ОбластьСтрокаТаблицыТовары.Область(1, 11, 1, 11).Шрифт = Новый Шрифт(, , Истина, , , );
				ОбластьСтрокаТаблицыТовары.Область(1, 12, 1, 12).Шрифт = Новый Шрифт(, , Истина, , , );
				
				ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыТовары);
				
				ОбластьСтрокаТаблицыТовары.Область(1, 3, 1, 3).Шрифт = Новый Шрифт(, , Ложь, , , );
				ОбластьСтрокаТаблицыТовары.Область(1, 11, 1, 11).Шрифт = Новый Шрифт(, , Ложь, , , );
				ОбластьСтрокаТаблицыТовары.Область(1, 12, 1, 12).Шрифт = Новый Шрифт(, , Ложь, , , );
						
			КонецЕсли;
		КонецЕсли;
		// -CRM
		
		// +CRM
		//ОбластьПодвалТаблицыТовары.Параметры.Заполнить(ДанныеОбъекта);		
		ОбластьПодвалТаблицыТовары.Параметры.ИтоговаяСтрока = ДанныеОбъекта.МассивПредставленийСуммДокумента[Сч].ИтоговаяСтрока;
		ОбластьПодвалТаблицыТовары.Параметры.СуммаПрописью = ДанныеОбъекта.МассивПредставленийСуммДокумента[Сч].СуммаПрописью;
		Сч = Сч + 1;
		// -CRM
		
		ТабличныйДокумент.Вывести(ОбластьПодвалТаблицыТовары);
		
		ТабличныйДокумент.Вывести(ОбластьПустаяСтрокаТонкая);
		
	КонецЦикла; // +CRM Конец обхода массива массивов вариантов КП
	
	ОбластьСрокДействия.Параметры.Заполнить(ДанныеОбъекта);
	ТабличныйДокумент.Вывести(ОбластьСрокДействия);
	
	Если Не ПустаяСтрока(ДанныеОбъекта.УсловияПоставкиПредставление) Тогда
		
		ТабличныйДокумент.Вывести(ОбластьПустаяСтрокаТонкая);
		ОбластьДополнительнаяИнформация.Параметры.Заполнить(ДанныеОбъекта);
		ТабличныйДокумент.Вывести(ОбластьДополнительнаяИнформация);
		
	КонецЕсли;
	
	ОбластьМенеджер.Параметры.Заполнить(ДанныеОбъекта);
	ТабличныйДокумент.Вывести(ОбластьМенеджер);
	
КонецПроцедуры

Процедура ПриВыводеСтрокиТоварыПечатнуюФорму(ТабличныйДокумент, СтрокаТовары, ОбластьСтрокаТаблицыТовары, ИменованнаяОбластьСтрокаТовары, ДополнительныеПараметрыВывода, СтандартнаяОбработка,
			Ном, СтруктураДопИнф, ИтогоСумма, ИтогоСуммаНДС, МассивИтогов, МассивИтоговСкидок) Экспорт // CRM+ параметры
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьНаборы") Тогда 
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Если ДополнительныеПараметрыВывода = Неопределено Тогда
		 ДополнительныеПараметрыВывода = Новый Структура;
	КонецЕсли;
	
	Если НЕ ДополнительныеПараметрыВывода.Свойство("НомерСтроки")  Тогда
		 ДополнительныеПараметрыВывода.Вставить("НомерСтроки", 0);
	КонецЕсли;
	
	Если НаборыСервер.ИспользоватьОбластьНабор(СтрокаТовары, Истина) Тогда
		
		Если СтрокаТовары.ВариантПредставленияНабораВПечатныхФормах = Перечисления.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие Тогда
			
			Если СтрокаТовары.ВариантРасчетаЦеныНабора = Перечисления.ВариантыРасчетаЦенНаборов.РассчитываетсяИзЦенКомплектующих Тогда
			
				ДанныеСтроки = Новый Структура;
				ДанныеСтроки.Вставить("НомерСтроки",      "");
				ДанныеСтроки.Вставить("Номенклатура",     "");
				ДанныеСтроки.Вставить("Количество",       "");
				ДанныеСтроки.Вставить("ЕдиницаИзмерения", "");
				ДанныеСтроки.Вставить("СрокПоставки",     "");
				ДанныеСтроки.Вставить("Цена",             "");
				ДанныеСтроки.Вставить("СуммаСкидки",      "");
				ДанныеСтроки.Вставить("СуммаСНДС",        "");
			
				ОбластьСтрокаТаблицыТовары.Параметры.Заполнить(ДанныеСтроки);
				ОбластьСтрокаТаблицыТовары.Параметры.Номенклатура = СтрокаТовары.Номенклатура;
				
			Иначе
				
				ЗаполнитьЗначенияСвойств(ОбластьСтрокаТаблицыТовары.Параметры, СтрокаТовары);
				// +CRM
				ВремНом = Ном;
				CRM_ДозаполнитьСтрокуТовары(ОбластьСтрокаТаблицыТовары, СтрокаТовары, ВремНом, СтруктураДопИнф, ИтогоСумма, ИтогоСуммаНДС, МассивИтогов, МассивИтоговСкидок);
				// -CRM
				
			КонецЕсли;
			
		Иначе
			
			// +CRM
			//ДополнительныеПараметрыВывода.НомерСтроки = ДополнительныеПараметрыВывода.НомерСтроки + 1;
			//ОбластьСтрокаТаблицыТовары.Параметры.НомерСтроки = ДополнительныеПараметрыВывода.НомерСтроки;
			Ном = Ном + 1;
			ОбластьСтрокаТаблицыТовары.Параметры.НомерСтроки = Ном;
			// -CRM
			
		КонецЕсли;
		
		ОбластьСтрокаТаблицыТовары.Области[ИменованнаяОбластьСтрокаТовары].ГраницаСверху = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1, 0);
		ОбластьСтрокаТаблицыТовары.Области[ИменованнаяОбластьСтрокаТовары].ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
		ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыТовары);
		
	ИначеЕсли НаборыСервер.ИспользоватьОбластьКомплектующие(СтрокаТовары, Истина) Тогда
		
		ДополнительныеПараметрыВывода.НомерСтроки = ДополнительныеПараметрыВывода.НомерСтроки + 1;
		
		Если СтрокаТовары.ВариантПредставленияНабораВПечатныхФормах = Перечисления.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие Тогда
			
			Если СтрокаТовары.ВариантРасчетаЦеныНабора = Перечисления.ВариантыРасчетаЦенНаборов.РассчитываетсяИзЦенКомплектующих Тогда
				
				ЗаполнитьЗначенияСвойств(ОбластьСтрокаТаблицыТовары.Параметры, СтрокаТовары);
				// +CRM
				CRM_ДозаполнитьСтрокуТовары(ОбластьСтрокаТаблицыТовары, СтрокаТовары, Ном, СтруктураДопИнф, ИтогоСумма, ИтогоСуммаНДС, МассивИтогов, МассивИтоговСкидок);
				// -CRM
				
			Иначе
				
				ДанныеСтроки = Новый Структура;
				ДанныеСтроки.Вставить("НомерСтроки",      "");
				ДанныеСтроки.Вставить("Номенклатура",     "");
				ДанныеСтроки.Вставить("Количество",       "");
				ДанныеСтроки.Вставить("ЕдиницаИзмерения", "");
				ДанныеСтроки.Вставить("СрокПоставки",     "");
				ДанныеСтроки.Вставить("Цена",             "");
				ДанныеСтроки.Вставить("СуммаСкидки",      "");
				ДанныеСтроки.Вставить("СуммаСНДС",        "");
			
				ОбластьСтрокаТаблицыТовары.Параметры.Заполнить(ДанныеСтроки);
				СтрокаТовары.Номенклатура = СтрШаблон(НСтр("ru = '%1, %2 %3';
															|en = '%1, %2 %3'"), СтрокаТовары.Номенклатура, СтрокаТовары.Количество, СтрокаТовары.ЕдиницаИзмерения);
				
				// +CRM
				Ном = Ном + 1;
				ОбластьСтрокаТаблицыТовары.Параметры.НомерСтроки = Ном;
				// -CRM
				
			КонецЕсли;
			
		Иначе
			
			ЗаполнитьЗначенияСвойств(ОбластьСтрокаТаблицыТовары.Параметры, СтрокаТовары);
			// +CRM
			CRM_ДозаполнитьСтрокуТовары(ОбластьСтрокаТаблицыТовары, СтрокаТовары, Ном, СтруктураДопИнф, ИтогоСумма, ИтогоСуммаНДС, МассивИтогов, МассивИтоговСкидок);
			// -CRM
			
		КонецЕсли;
		
		ПараметрыОбласти = ОбластьСтрокаТаблицыТовары.Параметры; // ПараметрыМакетаТабличногоДокумента
		//ПараметрыОбласти.НомерСтроки = ДополнительныеПараметрыВывода.НомерСтроки; // +CRM
		ОбластьСтрокаТаблицыТовары.Параметры.Номенклатура = " - " + СтрокаТовары.Номенклатура;
		
		ОбластьСтрокаТаблицыТовары.Области[ИменованнаяОбластьСтрокаТовары].ГраницаСверху = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
		
		ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыТовары);
		
	Иначе
		
		ДополнительныеПараметрыВывода.НомерСтроки = ДополнительныеПараметрыВывода.НомерСтроки + 1;
		
		ЗаполнитьЗначенияСвойств(ОбластьСтрокаТаблицыТовары.Параметры, СтрокаТовары);
		ОбластьСтрокаТаблицыТовары.Параметры.НомерСтроки = ДополнительныеПараметрыВывода.НомерСтроки;
		// +CRM
		CRM_ДозаполнитьСтрокуТовары(ОбластьСтрокаТаблицыТовары, СтрокаТовары, Ном, СтруктураДопИнф, ИтогоСумма, ИтогоСуммаНДС, МассивИтогов, МассивИтоговСкидок);
		// -CRM
		
		ОбластьСтрокаТаблицыТовары.Области[ИменованнаяОбластьСтрокаТовары].ГраницаСверху = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1, 0);
		ОбластьСтрокаТаблицыТовары.Области[ИменованнаяОбластьСтрокаТовары].ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1, 0);
		
		ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыТовары);
		
		Возврат;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура CRM_ДозаполнитьСтрокуТовары(ОбластьСтрокаТаблицыТовары, СтрокаТовары, Ном, СтруктураДопИнф, ИтогоСумма, ИтогоСуммаНДС, МассивИтогов, МассивИтоговСкидок, УвеличитьНомер = Истина)
	
	Если УвеличитьНомер Тогда
		Ном = Ном + 1;
	КонецЕсли;
	ОбластьСтрокаТаблицыТовары.Параметры.НомерСтроки = Ном;
				
	Если Не СтрокаТовары.ЭтоУслуга Тогда
		СтруктураДопИнф.Характеристика = СтрокаТовары.Характеристика;			
		ХарактеристикаНоменклатуры = КППредставлениеСерий(СтруктураДопИнф);
		ОбластьСтрокаТаблицыТовары.Параметры.Номенклатура = ?(ПустаяСтрока(СтрокаТовары.Содержание), СтрокаТовары.Номенклатура + 
												ХарактеристикаНоменклатуры, СтрокаТовары.Содержание);
	Иначе	
		ОбластьСтрокаТаблицыТовары.Параметры.Номенклатура = ?(ПустаяСтрока(СтрокаТовары.Содержание), СтрокаТовары.Номенклатура,
												СтрокаТовары.Содержание);
	КонецЕсли;
	
	ИтогоСумма = ИтогоСумма + СтрокаТовары.СуммаСНДСЧисло;
	ИтогоСуммаНДС = ИтогоСуммаНДС + СтрокаТовары.СуммаНДСЧисло;
	Если МассивИтогов.Количество() > 0 Тогда
		МассивИтогов[МассивИтогов.Количество() - 1] = МассивИтогов[МассивИтогов.Количество() - 1] + СтрокаТовары.СуммаСНДСЧисло;
	КонецЕсли;
	Если МассивИтоговСкидок.Количество() > 0 Тогда
		МассивИтоговСкидок[МассивИтоговСкидок.Количество() - 1] = МассивИтоговСкидок[МассивИтоговСкидок.Количество() - 1] + СтрокаТовары.СуммаСкидкиЧисло;
	КонецЕсли;
				
КонецПроцедуры

Функция CRM_ПолучитьТаблицуВариантов(МассивОбъектов)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КоммерческоеПредложениеКлиентуТовары.Ссылка КАК Ссылка,
		|	КоммерческоеПредложениеКлиентуТовары.CRM_ИДВарианта КАК ИДВарианта,
		|	КоммерческоеПредложениеКлиентуТовары.CRM_Утвержден КАК Утвержден
		|ИЗ
		|	Документ.КоммерческоеПредложениеКлиенту.Товары КАК КоммерческоеПредложениеКлиентуТовары
		|ГДЕ
		|	КоммерческоеПредложениеКлиентуТовары.Ссылка В(&МассивОбъектов)
		|
		|СГРУППИРОВАТЬ ПО
		|	КоммерческоеПредложениеКлиентуТовары.Ссылка,
		|	КоммерческоеПредложениеКлиентуТовары.CRM_ИДВарианта,
		|	КоммерческоеПредложениеКлиентуТовары.CRM_Утвержден";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции


// Подготовка данных объекта по данным для печати.
// 
// Параметры:
// 	ДанныеШапки - ВыборкаИзРезультатаЗапроса.
// 	ТаблицаТовары - ТаблицаЗначений - товары:
//    * НомерСтроки - Число.
Функция ДанныеОбъектаПоДаннымДляПечати(ДанныеШапки, ТаблицаТовары, ТаблицаВариантов)

	ДанныеОбъекта = Новый Структура;
	
#Область ДанныеОрганизации
	
	СведенияОрганизации = Новый Структура;
	СведенияОрганизации.Вставить("Наименование");
	СведенияОрганизации.Вставить("ПолноеНаименование");
	СведенияОрганизации.Вставить("Телефоны");
	СведенияОрганизации.Вставить("ЮридическийАдрес");
	СведенияОрганизации.Вставить("ЭлектроннаяПочта");
	
	КоммерческиеПредложенияДокументыПереопределяемый.ЗаполнитьДанныеОрганизации(ДанныеШапки.Организация, СведенияОрганизации);
	
	Если ЗначениеЗаполнено(СведенияОрганизации.ПолноеНаименование) Тогда
		ПредставлениеОрганизации = СведенияОрганизации.ПолноеНаименование;
	Иначе
		ПредставлениеОрганизации = СведенияОрганизации.Наименование;
	КонецЕсли;
	
#КонецОбласти
	
#Область КонтактнаяИнформация
	
	Если ЗначениеЗаполнено(ДанныеШапки.Менеджер) Тогда
		
		МассивСМенеджером = Новый Массив;
		МассивСМенеджером.Добавить(ДанныеШапки.Менеджер);
		
		ТребуемыеТипыКонтактнойИнформации = Новый Массив;
		ТребуемыеТипыКонтактнойИнформации.Добавить(Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
		
		ТаблицаКонтактнойИнформации = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(
		                                   МассивСМенеджером,
		                                   ТребуемыеТипыКонтактнойИнформации,,
		                                   ДанныеШапки.Дата);
		
		АдресЭлектроннойПочтыМенеджера = КоммерческиеПредложенияДокументы.ПредставлениеКонтактнойИнформацииИзТаблицы(
		                                   ТаблицаКонтактнойИнформации,
		                                   Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
		
	Иначе
		ТелефонМенеджера = "";
		АдресЭлектроннойПочтыМенеджера   = "";
	КонецЕсли;
	
#КонецОбласти

#Область Товары

	ЕстьСкидки = Ложь;
	ДанныеОбъекта.Вставить("СуммаВсего", 0);
	ДанныеОбъекта.Вставить("СуммаВсегоНДС", 0);
	ДанныеОбъекта.Вставить("КоличествоТоваров", 0);
	ДанныеОбъекта.Вставить("Товары", Новый Массив); // +CRM используется как массив массивов (для хранения вариантов КП)
	
	// +CRM
	МассивПредставленийСуммДокумента = Новый Массив;
	
	Для Каждого СтрокаВарианта Из ТаблицаВариантов Цикл
		
		ДанныеВарианта = Новый Структура;
		ДанныеВарианта.Вставить("ЕстьСкидки", Ложь);
		ДанныеВарианта.Вставить("СуммаВсего", 0);
		ДанныеВарианта.Вставить("СуммаВсегоНДС", 0);
		ДанныеВарианта.Вставить("КоличествоТоваров", 0);
		ДанныеВарианта.Вставить("КоличествоРазделителей", 0);
		
		ПараметрыПоиска = Новый Структура;
		ПараметрыПоиска.Вставить("ИДВарианта", СтрокаВарианта.ИДВарианта);
		НайденныеСтроки = ТаблицаТовары.НайтиСтроки(ПараметрыПоиска);
		
		СтрокиВарианта = Новый Массив;
		// -CRM
		
		Для Каждого СтрокаТовары Из НайденныеСтроки Цикл
			
			Если СтрокаТовары.СуммаСкидки <> 0 Тогда
				ЕстьСкидки = Истина;
				ДанныеВарианта.ЕстьСкидки = Истина;
			КонецЕсли;
			
			ДанныеВарианта.СуммаВсего        = ДанныеВарианта.СуммаВсего + СтрокаТовары.Сумма;
			ДанныеВарианта.СуммаВсегоНДС     = ДанныеВарианта.СуммаВсегоНДС + СтрокаТовары.СуммаНДС;
			ДанныеВарианта.КоличествоТоваров = ДанныеВарианта.КоличествоТоваров + 1;
			
			СтрокаТаблицыТовары = Новый Структура;
			
			НаименованиеТовара = КоммерческиеПредложенияДокументыКлиентСервер.ПредставлениеНоменклатурыДляПечати(СтрокаТовары.Номенклатура, СтрокаТовары.Характеристика);
			
			СтрокаТаблицыТовары.Вставить("НомерСтроки",      СтрокаТовары.НомерСтроки);
			СтрокаТаблицыТовары.Вставить("Номенклатура",     НаименованиеТовара);
			СтрокаТаблицыТовары.Вставить("Количество",       СтрокаТовары.Количество);
			СтрокаТаблицыТовары.Вставить("ЕдиницаИзмерения", СтрокаТовары.ЕдиницаИзмерения);
			СтрокаТаблицыТовары.Вставить("Цена",             Формат(СтрокаТовары.Цена,"ЧДЦ=2; ЧРД=."));
			СтрокаТаблицыТовары.Вставить("СуммаСНДС",        Формат(СтрокаТовары.СуммаСНДС,"ЧДЦ=2; ЧРД=."));
			СтрокаТаблицыТовары.Вставить("СуммаСкидки",      Формат(СтрокаТовары.СуммаСкидки,"ЧДЦ=2; ЧРД=."));
			СтрокаТаблицыТовары.Вставить("СрокПоставки",     КоммерческиеПредложенияДокументыКлиентСервер.СрокПоставкиСтрокой(ДанныеШапки.ВариантУказанияСрокаПоставки, 
			                                                                                                                  СтрокаТовары.СрокПоставки));
																															  
			// +CRM																												  
			СтрокаТаблицыТовары.Вставить("НоменклатураСсылка",     СтрокаТовары.Номенклатура);
			СтрокаТаблицыТовары.Вставить("ЭтоУслуга", СтрокаТовары.ЭтоУслуга);
			СтрокаТаблицыТовары.Вставить("Характеристика", СтрокаТовары.Характеристика);
			СтрокаТаблицыТовары.Вставить("Содержание", СтрокаТовары.Содержание);
			СтрокаТаблицыТовары.Вставить("ЭтоНоменклатура", СтрокаТовары.ЭтоНоменклатура);
			Если НЕ СтрокаТовары.ЭтоНоменклатура Тогда
				ДанныеВарианта.КоличествоРазделителей = ДанныеВарианта.КоличествоРазделителей + 1;
			КонецЕсли;
			СтрокаТаблицыТовары.Вставить("КоличествоЧисло", СтрокаТовары.Количество);
			СтрокаТаблицыТовары.Вставить("ЦенаЧисло", СтрокаТовары.Цена);
			СтрокаТаблицыТовары.Вставить("СуммаЧисло", СтрокаТовары.Сумма);
			СтрокаТаблицыТовары.Вставить("СуммаСНДСЧисло", СтрокаТовары.СуммаСНДС);
			СтрокаТаблицыТовары.Вставить("СуммаНДСЧисло", СтрокаТовары.СуммаНДС);
			СтрокаТаблицыТовары.Вставить("СуммаСкидкиЧисло", СтрокаТовары.СуммаСкидки);
			
			СтрокаТаблицыТовары.Вставить("ИДВарианта", СтрокаТовары.ИДВарианта);
			СтрокаТаблицыТовары.Вставить("ИмяВарианта", СтрокаТовары.ИмяВарианта);
			СтрокаТаблицыТовары.Вставить("КомментарийВарианта", СтрокаТовары.КомментарийВарианта);
			СтрокаТаблицыТовары.Вставить("Утвержден", СтрокаТовары.Утвержден);
			// -CRM
			
			КоммерческиеПредложенияДокументыПереопределяемый.ДополнитьДанныеОбъектаДляПечати(СтрокаТаблицыТовары, СтрокаТовары, ДанныеВарианта); // +CRM ДанныеВарианта вместо ДанныеОбъекта
			
			СтрокиВарианта.Добавить(СтрокаТаблицыТовары);
			
		КонецЦикла;
		
		ДанныеОбъекта.Товары.Добавить(СтрокиВарианта);
		
		ПредставлениеСуммДокумента = КоммерческиеПредложенияДокументы.ПредставлениеСуммДокументаДляПечати(ДанныеШапки,
	                                                                                                  ДанныеВарианта.СуммаВсего,
	                                                                                                  ДанныеВарианта.СуммаВсегоНДС,
																									  ДанныеВарианта.КоличествоТоваров - ДанныеВарианта.КоличествоРазделителей); // +CRM
	                                                                                                  //ДанныеОбъекта.КоличествоТоваров);
		МассивПредставленийСуммДокумента.Добавить(ПредставлениеСуммДокумента);
	
	КонецЦикла;

#КонецОбласти

#Область ЗаполнениеДанныхОбъекта 

	ПредставлениеСуммДокумента = КоммерческиеПредложенияДокументы.ПредставлениеСуммДокументаДляПечати(ДанныеШапки,
	                                                                                                  ДанныеОбъекта.СуммаВсего,
	                                                                                                  ДанныеОбъекта.СуммаВсегоНДС,																									  
	                                                                                                  ДанныеОбъекта.КоличествоТоваров);
	
	ДанныеОбъекта.Вставить("Ссылка",                              ДанныеШапки.Ссылка);
	ДанныеОбъекта.Вставить("Организация",                         ДанныеШапки.Организация);
	ДанныеОбъекта.Вставить("ТелефонОрганизации",                  СведенияОрганизации.Телефоны);
	ДанныеОбъекта.Вставить("АдресОрганизации",                    СведенияОрганизации.ЮридическийАдрес);
	ДанныеОбъекта.Вставить("АдресЭлектроннойПочтыОрганизации",    ?(СведенияОрганизации.Свойство("ЭлектроннаяПочта"),СведенияОрганизации.ЭлектроннаяПочта, ""));
	ДанныеОбъекта.Вставить("Клиент",                              ДанныеШапки.Клиент);
	ДанныеОбъекта.Вставить("Контрагент",                          ДанныеШапки.Контрагент);
	ДанныеОбъекта.Вставить("ПредставлениеОрганизации",            ПредставлениеОрганизации);
	ДанныеОбъекта.Вставить("ПредставлениеКлиента",                ПредставлениеКлиента(ДанныеОбъекта.Клиент, ДанныеОбъекта.Контрагент));
	ДанныеОбъекта.Вставить("КонтактноеЛицо",                      ДанныеШапки.КонтактноеЛицо);
	ДанныеОбъекта.Вставить("Менеджер",                            ДанныеШапки.Менеджер);
	ДанныеОбъекта.Вставить("АдресЭлектроннойПочтыМенеджера",      АдресЭлектроннойПочтыМенеджера);
	ДанныеОбъекта.Вставить("ТелефонМенеджера",                    ТелефонМенеджера);
	ДанныеОбъекта.Вставить("Номер",                               ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеШапки.Номер, Ложь, Истина));
	ДанныеОбъекта.Вставить("Дата",                                Формат(ДанныеШапки.Дата,"ДЛФ=D"));
	ДанныеОбъекта.Вставить("ВариантУказанияСрокаПоставки",        ДанныеШапки.ВариантУказанияСрокаПоставки);
	ДанныеОбъекта.Вставить("УсловияОплаты",                       ДанныеШапки.УсловияОплаты);
	ДанныеОбъекта.Вставить("УсловияДоставки",                     ДанныеШапки.УсловияДоставки);
	ДанныеОбъекта.Вставить("ПрочиеУсловия",                       ДанныеШапки.ПрочиеУсловия);
	ДанныеОбъекта.Вставить("КонтактнаяИнформацияПредложения",     КонтактнаяИнформацияПредложения(ДанныеОбъекта));
	ДанныеОбъекта.Вставить("ИтоговаяСтрока",                      ПредставлениеСуммДокумента.ИтоговаяСтрока);
	ДанныеОбъекта.Вставить("СуммаПрописью",                       ПредставлениеСуммДокумента.СуммаПрописью);
	
	ДанныеОбъекта.Вставить("МассивПредставленийСуммДокумента",    МассивПредставленийСуммДокумента); // +CRM
	
	// +CRM
	//ДанныеОбъекта.Вставить("ЕстьСкидки",                          ЕстьСкидки);
	//ДанныеОбъекта.Вставить("ПредставлениеСрокаДействия",          КоммерческиеПредложенияДокументы.ПредставлениеСрокаДействияДляПечати(ЕстьСкидки, ДанныеШапки.СрокДействия));
	ДанныеОбъекта.Вставить("ЕстьСкидки",                          Ложь);
	ДанныеОбъекта.Вставить("ПредставлениеСрокаДействия",          КоммерческиеПредложенияДокументы.ПредставлениеСрокаДействияДляПечати(Ложь, ДанныеШапки.СрокДействия));
	// -CRM
	
	ДанныеОбъекта.Вставить("ПредставлениеЧастичногоВыкупа",       КоммерческиеПредложенияДокументы.ПредставлениеЧастичногоВыкупаДляПечати(ДанныеШапки.МожетВыкупатьсяЧастично));
	// +CRM
	//ДанныеОбъекта.Вставить("УсловияПоставкиПредставление",        КоммерческиеПредложенияДокументы.ПредставлениеУсловийПоставкиДляПечати(ДанныеОбъекта.УсловияОплаты, 
	//                                                                                                                                     ДанныеОбъекта.УсловияДоставки, 
	//                                                                                                                                     ДанныеОбъекта.ПрочиеУсловия));
	ДанныеОбъекта.Вставить("УсловияПоставкиПредставление",        CRM_МетодыМодулейМенеджеровДокументов.ПредставлениеУсловийПоставкиДляПечати(ДанныеОбъекта.УсловияОплаты,
			ДанныеОбъекта.УсловияДоставки, 
			ДанныеОбъекта.ПрочиеУсловия,
			ДанныеШапки.CRM_ИсходныеУсловия,
			ДанныеШапки.CRM_ПорядокВыполненияРабот));
	// -CRM
	
#КонецОбласти
	
	Возврат ДанныеОбъекта;
	
КонецФункции

Функция ПредставлениеКлиента(Клиент, Контрагент)
	
	Возврат КоммерческиеПредложенияДокументы.ПредставлениеПартнераКонтрагента(Клиент, Контрагент);
	
КонецФункции

Функция КонтактнаяИнформацияПредложения(ДанныеОбъекта)
	
	МассивСтрок = Новый Массив;
	
	Если Не ПустаяСтрока(ДанныеОбъекта.АдресОрганизации) Тогда
		МассивСтрок.Добавить(ДанныеОбъекта.АдресОрганизации);
	КонецЕсли;
	
	Если Не ПустаяСтрока(ДанныеОбъекта.ТелефонОрганизации) Тогда
		МассивСтрок.Добавить(ДанныеОбъекта.ТелефонОрганизации);
	КонецЕсли;
	
	Если Не ПустаяСтрока(ДанныеОбъекта.АдресЭлектроннойПочтыМенеджера) Тогда
		МассивСтрок.Добавить(ДанныеОбъекта.АдресЭлектроннойПочтыМенеджера);
	ИначеЕсли Не ПустаяСтрока(ДанныеОбъекта.АдресЭлектроннойПочтыОрганизации) Тогда
		МассивСтрок.Добавить(ДанныеОбъекта.АдресЭлектроннойПочтыОрганизации);
	КонецЕсли;
	
	Возврат СтрСоединить(МассивСтрок, Символы.ПС);
	
КонецФункции

Функция ДанныеДляПечати(МассивОбъектов, ПараметрыПечати)
	
	СтруктураДанныхДляПечати = Неопределено;
	СтандартнаяОбработка = Истина;
	КоммерческоеПредложениеКлиентуПриФормированииСтруктурыДанныхПечати(
		МассивОбъектов,
		СтруктураДанныхДляПечати,
		ПараметрыПечати,
		СтандартнаяОбработка);
		
	Если Не СтандартнаяОбработка Тогда
		Возврат СтруктураДанныхДляПечати;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	ОтображатьСкидки = Истина;
	Если ПараметрыПечати.Свойство("ОтображатьСкидки")
		И Не ПараметрыПечати.ОтображатьСкидки Тогда
		ОтображатьСкидки = Ложь;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ОтображатьСкидки", ОтображатьСкидки);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КоммерческоеПредложениеКлиенту.Ссылка                              КАК Ссылка,
	|	КоммерческоеПредложениеКлиенту.Дата                                КАК Дата,
	|	КоммерческоеПредложениеКлиенту.Номер                               КАК Номер,
	|	КоммерческоеПредложениеКлиенту.Менеджер                            КАК Менеджер,
	|	КоммерческоеПредложениеКлиенту.КонтактноеЛицо                      КАК КонтактноеЛицо,
	|	КоммерческоеПредложениеКлиенту.Организация                         КАК Организация,
	|	КоммерческоеПредложениеКлиенту.СрокДействия                        КАК СрокДействия,
	|	КоммерческоеПредложениеКлиенту.Валюта                              КАК Валюта,
	|	КоммерческоеПредложениеКлиенту.ЦенаВключаетНДС                     КАК ЦенаВключаетНДС,
	|	КоммерческоеПредложениеКлиенту.Налогообложение                     КАК УчитыватьНДС,
	|	КоммерческоеПредложениеКлиенту.УсловияДоставкиТекст                КАК УсловияДоставки,
	|	КоммерческоеПредложениеКлиенту.УсловияОплатыТекст                  КАК УсловияОплаты,
	|	КоммерческоеПредложениеКлиенту.ПрочаяДополнительнаяИнформацияТекст КАК ПрочиеУсловия,
	|	КоммерческоеПредложениеКлиенту.Клиент                              КАК Клиент,
	|	КоммерческоеПредложениеКлиенту.Контрагент                          КАК Контрагент,
	|	КоммерческоеПредложениеКлиенту.ВариантУказанияСрокаПоставки        КАК ВариантУказанияСрокаПоставки,
	|	КоммерческоеПредложениеКлиенту.МожетВыкупатьсяЧастично             КАК МожетВыкупатьсяЧастично,
	|	КоммерческоеПредложениеКлиенту.CRM_ИсходныеУсловия             	   КАК CRM_ИсходныеУсловия,
	|	КоммерческоеПредложениеКлиенту.CRM_ПорядокВыполненияРабот      	   КАК CRM_ПорядокВыполненияРабот
	|ИЗ
	|	Документ.КоммерческоеПредложениеКлиенту КАК КоммерческоеПредложениеКлиенту
	|ГДЕ
	|	КоммерческоеПредложениеКлиенту.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка                                                   КАК Ссылка,
	|	Товары.НомерСтроки                                              КАК НомерСтроки,
	|	Товары.Номенклатура                                             КАК Номенклатура,
	|	Товары.Характеристика                                           КАК Характеристика,
	|	Товары.СуммаРучнойСкидки + Товары.СуммаАвтоматическойСкидки     КАК СуммаСкидки,
	|	Товары.ПроцентРучнойСкидки + Товары.ПроцентАвтоматическойСкидки КАК ПроцентСкидки,
	|	&УсловияЕдиницыИзмерения                                        КАК ЕдиницаИзмерения,
	|	Товары.Количество                                               КАК Количество,
	|ВЫБОР
	|	КОГДА &ОтображатьСкидки
	|		ТОГДА Товары.Цена
	|	ИНАЧЕ ВЫБОР
	|			КОГДА Товары.Количество = 0
	|				ТОГДА 0
	|			ИНАЧЕ Товары.Сумма / Товары.Количество
	|		КОНЕЦ
	|КОНЕЦ                                                              КАК Цена,
	|	Товары.СуммаСНДС                                                КАК СуммаСНДС,
	|	Товары.Сумма                                                    КАК Сумма,
	|	Товары.СуммаНДС                                                 КАК СуммаНДС,
	|	Товары.СрокПоставки                                             КАК СрокПоставки,
	|	Товары.CRM_Содержание                                           КАК Содержание,
	|	ВЫБОР 
	|		КОГДА Товары.Номенклатура.ТипНоменклатуры = Значение(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ 															КАК ЭтоУслуга,
	|	ВЫБОР 
	|		КОГДА НЕ Товары.CRM_ЭтоРазделитель
	|			ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ 															КАК ЭтоНоменклатура,
	
	|	Товары.CRM_ИДВарианта КАК ИДВарианта,
	|	Товары.CRM_ИмяВарианта КАК ИмяВарианта,
	|	Товары.CRM_Утвержден КАК Утвержден,
	|	ДокументКомментарииВариантов.КомментарийВарианта
	|ИЗ
	|	Документ.КоммерческоеПредложениеКлиенту.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КоммерческоеПредложениеКлиенту.CRM_КомментарииВариантов КАК ДокументКомментарииВариантов
	|		ПО Товары.Ссылка = ДокументКомментарииВариантов.Ссылка
	|			И Товары.CRM_ИДВарианта = ДокументКомментарииВариантов.ИДВарианта
	|ГДЕ
	|	Товары.Ссылка В(&МассивОбъектов)
	|	И Товары.CRM_ИДВарианта = &ИДВарианта
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	
	УсловияЕдиницыИзмерения = "Товары.ЕдиницаИзмерения";
	КоммерческиеПредложенияДокументыПереопределяемый.ПолучитьТекстЗапросаПолученияЕдиницыИзмерения(УсловияЕдиницыИзмерения);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловияЕдиницыИзмерения", УсловияЕдиницыИзмерения);
	
	// +CRM
	Если НЕ (ПараметрыПечати = Неопределено) И ПараметрыПечати.Свойство("НомерВарианта") Тогда
		НомерВарианта = ПараметрыПечати.НомерВарианта;
	Иначе
		НомерВарианта = Неопределено;
	КонецЕсли;
	
	Если НомерВарианта = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Товары.CRM_ИДВарианта = &ИДВарианта", "Товары.CRM_Утвержден"); // Печать только утвержденного варианта
																																// из каждого документа
	ИначеЕсли НомерВарианта = -1 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Товары.CRM_ИДВарианта = &ИДВарианта", "ИСТИНА");
	Иначе
		Запрос.УстановитьПараметр("ИДВарианта", НомерВарианта);
	КонецЕсли;
	// -CRM
	
	ПакетРезультатовЗапроса = Запрос.ВыполнитьПакет(); // Массив из ВыборкаИзРезультатаЗапроса
	
	СтруктураДанныхДляПечати = Новый Структура;
	СтруктураДанныхДляПечати.Вставить("РезультатПоШапке",   ПакетРезультатовЗапроса[0]);
	СтруктураДанныхДляПечати.Вставить("РезультатПоТоварам", ПакетРезультатовЗапроса[1]);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

Процедура КоммерческоеПредложениеКлиентуПриФормированииСтруктурыДанныхПечати(МассивОбъектов, СтруктураДанныхДляПечати, ПараметрыПечати, СтандартнаяОбработка) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьНаборы") Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов",   МассивОбъектов);
	
	ОтображатьСкидки = Истина;
	Если ПараметрыПечати.Свойство("ОтображатьСкидки")
		И Не ПараметрыПечати.ОтображатьСкидки Тогда
		ОтображатьСкидки = Ложь;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ОтображатьСкидки", ОтображатьСкидки);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	КоммерческоеПредложениеКлиенту.Ссылка                              КАК Ссылка,
	|	КоммерческоеПредложениеКлиенту.Дата                                КАК Дата,
	|	КоммерческоеПредложениеКлиенту.Номер                               КАК Номер,
	|	КоммерческоеПредложениеКлиенту.Менеджер                            КАК Менеджер,
	|	КоммерческоеПредложениеКлиенту.КонтактноеЛицо                      КАК КонтактноеЛицо,
	|	КоммерческоеПредложениеКлиенту.Организация                         КАК Организация,
	|	КоммерческоеПредложениеКлиенту.СрокДействия                        КАК СрокДействия,
	|	КоммерческоеПредложениеКлиенту.Валюта                              КАК Валюта,
	|	КоммерческоеПредложениеКлиенту.ЦенаВключаетНДС                     КАК ЦенаВключаетНДС,
	|	КоммерческоеПредложениеКлиенту.Налогообложение                     КАК УчитыватьНДС,
	|	КоммерческоеПредложениеКлиенту.УсловияДоставкиТекст                КАК УсловияДоставки,
	|	КоммерческоеПредложениеКлиенту.УсловияОплатыТекст                  КАК УсловияОплаты,
	|	КоммерческоеПредложениеКлиенту.ПрочаяДополнительнаяИнформацияТекст КАК ПрочиеУсловия,
	|	КоммерческоеПредложениеКлиенту.Клиент                              КАК Клиент,
	|	КоммерческоеПредложениеКлиенту.Контрагент                          КАК Контрагент,
	|	КоммерческоеПредложениеКлиенту.ВариантУказанияСрокаПоставки        КАК ВариантУказанияСрокаПоставки,
	|	КоммерческоеПредложениеКлиенту.МожетВыкупатьсяЧастично             КАК МожетВыкупатьсяЧастично,
	|	КоммерческоеПредложениеКлиенту.CRM_ИсходныеУсловия             	   КАК CRM_ИсходныеУсловия,
	|	КоммерческоеПредложениеКлиенту.CRM_ПорядокВыполненияРабот      	   КАК CRM_ПорядокВыполненияРабот
	|ИЗ
	|	Документ.КоммерческоеПредложениеКлиенту КАК КоммерческоеПредложениеКлиенту
	|ГДЕ
	|	КоммерческоеПредложениеКлиенту.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////1
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка                                                          КАК Ссылка,
	|	ТаблицаТовары.НомерСтроки                                                     КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура                                                    КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                                                  КАК Характеристика,
	|	ТаблицаТовары.СуммаРучнойСкидки + ТаблицаТовары.СуммаАвтоматическойСкидки     КАК СуммаСкидки,
	|	ТаблицаТовары.ПроцентРучнойСкидки + ТаблицаТовары.ПроцентАвтоматическойСкидки КАК ПроцентСкидки,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ЕдиницаИзмерения = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ТаблицаТовары.ЕдиницаИзмерения
	|	КОНЕЦ                                                                         КАК ЕдиницаИзмерения,
	|	ТаблицаТовары.Количество                                                      КАК Количество,
	|	ВЫБОР
	|		КОГДА &ОтображатьСкидки
	|			ТОГДА ТаблицаТовары.Цена
	|		ИНАЧЕ ВЫБОР
	|			КОГДА ТаблицаТовары.Количество = 0
	|				ТОГДА 0
	|			ИНАЧЕ ТаблицаТовары.Сумма / ТаблицаТовары.Количество
	|		КОНЕЦ
	|	КОНЕЦ                                                                         КАК Цена,
	|	ТаблицаТовары.СуммаСНДС                                                       КАК СуммаСНДС,
	|	ТаблицаТовары.Сумма                                                           КАК Сумма,
	|	ТаблицаТовары.СуммаНДС                                                        КАК СуммаНДС,
	|	ТаблицаТовары.СтавкаНДС                                                       КАК СтавкаНДС,
	|	ТаблицаТовары.СрокПоставки                                                    КАК СрокПоставки,
	|
	|	ТаблицаТовары.CRM_Содержание													КАК Содержание,
	|	ВЫБОР 
	|		КОГДА ТаблицаТовары.Номенклатура.ТипНоменклатуры = Значение(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ 																			КАК ЭтоУслуга,
	|	ВЫБОР 
	|		КОГДА НЕ ТаблицаТовары.CRM_ЭтоРазделитель
	|			ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ 																			КАК ЭтоНоменклатура,
	|	ТаблицаТовары.CRM_ИДВарианта 													КАК ИДВарианта,
	|	ТаблицаТовары.CRM_ИмяВарианта 													КАК ИмяВарианта,
	|	ТаблицаТовары.CRM_Утвержден 													КАК Утвержден,
	|	ДокументКомментарииВариантов.КомментарийВарианта								КАК КомментарийВарианта,
	|
	|	ВариантыКомплектацииНоменклатуры.Ссылка                                       КАК ВариантКомплектацииНоменклатуры,
	|	ВариантыКомплектацииНоменклатуры.ВариантПредставленияНабораВПечатныхФормах    КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ВариантыКомплектацииНоменклатуры.ВариантРасчетаЦеныНабора                     КАК ВариантРасчетаЦеныНабора,
	|	ТаблицаТовары.НоменклатураНабора                                              КАК НоменклатураНабора,
	|	ТаблицаТовары.ХарактеристикаНабора                                            КАК ХарактеристикаНабора
	|
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.КоммерческоеПредложениеКлиенту.Товары КАК ТаблицаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
	|		ПО ВариантыКомплектацииНоменклатуры.Владелец      = ТаблицаТовары.НоменклатураНабора
	|		И ВариантыКомплектацииНоменклатуры.Характеристика = ТаблицаТовары.ХарактеристикаНабора
	|		И ВариантыКомплектацииНоменклатуры.Основной
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.КоммерческоеПредложениеКлиенту.CRM_КомментарииВариантов КАК ДокументКомментарииВариантов
	|		ПО ТаблицаТовары.Ссылка = ДокументКомментарииВариантов.Ссылка
	|		И ТаблицаТовары.CRM_ИДВарианта = ДокументКомментарииВариантов.ИДВарианта
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.CRM_ИДВарианта = &ИДВарианта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////2
	|ВЫБРАТЬ
	|	Таблица.Ссылка                 КАК Ссылка,
	|	Таблица.НоменклатураНабора     КАК НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора   КАК ХарактеристикаНабора,
	|	МИНИМУМ(Таблица.НомерСтроки)   КАК НомерСтроки,
	|	СУММА(Таблица.Сумма)           КАК Сумма,
	|	СУММА(Таблица.СуммаНДС)        КАК СуммаНДС,
	|	СУММА(Таблица.СуммаСНДС)       КАК СуммаСНДС,
	|	СУММА(Таблица.СуммаСкидки)     КАК СуммаСкидки,
	|
	|	МИНИМУМ(Таблица.ИДВарианта)    КАК ИДВарианта
	|
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыПодготовка
	|ИЗ
	|	Товары КАК Таблица
	|
	|ГДЕ
	|	Таблица.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Ссылка,
	|	Таблица.НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////3
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваров.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ТоварыРазличные
	|ИЗ
	|	Товары КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////4
	|ВЫБРАТЬ
	|	Товары.Ссылка                                    КАК Ссылка,
	|	Товары.ВариантКомплектацииНоменклатуры           КАК ВариантКомплектацииНоменклатуры,
	|	Товары.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	Товары.ВариантРасчетаЦеныНабора                  КАК ВариантРасчетаЦеныНабора,
	|	Товары.НоменклатураНабора,
	|	Товары.ХарактеристикаНабора,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	ВЫБОР КОГДА Товары.ВариантКомплектацииНоменклатуры.НоменклатураОсновногоКомпонента = Товары.Номенклатура
	|		И Товары.ВариантКомплектацииНоменклатуры.ХарактеристикаОсновногоКомпонента = Товары.Характеристика ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ОсновнаяКомплектующая,
	|	Товары.СрокПоставки КАК СрокПоставки,
	|	Товары.СтавкаНДС КАК СтавкаНДС,
	|	0 КАК КоличествоПоУмолчанию,
	|	Товары.Количество КАК Количество
	|
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительноЧастьПервая
	|ИЗ
	|	Товары КАК Товары
	|ГДЕ
	|	Товары.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТоварыРазличные.Ссылка                                                                  КАК Ссылка,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка                                           КАК ВариантКомплектацииНоменклатуры,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.ВариантРасчетаЦеныНабора                  КАК ВариантРасчетаЦеныНабора,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец                                  КАК НоменклатураНабора,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Характеристика                            КАК ХарактеристикаНабора,
	|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура   КАК Номенклатура,
	|	ВариантыКомплектацииНоменклатурыТовары.Характеристика КАК Характеристика,
	|	ЛОЖЬ КАК ОсновнаяКомплектующая,
	|	NULL КАК СрокПоставки,
	|	NULL КАК СтавкаНДС,
	|	СУММА(ВариантыКомплектацииНоменклатурыТовары.Количество) КАК КоличествоПоУмолчанию,
	|	0 КАК Количество
	|
	|ИЗ
	|	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыРазличные КАК ТоварыРазличные
	|		ПО ИСТИНА
	|ГДЕ
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка В (ВЫБРАТЬ РАЗЛИЧНЫЕ Т.ВариантКомплектацииНоменклатуры ИЗ Товары КАК Т)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыРазличные.Ссылка,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Характеристика,
	|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура,
	|	ВариантыКомплектацииНоменклатурыТовары.Характеристика,
	|	ВариантыКомплектацииНоменклатурыТовары.Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////5
	|ВЫБРАТЬ
	|	Таблица.Ссылка,
	|	Таблица.ВариантКомплектацииНоменклатуры,
	|	Таблица.ВариантРасчетаЦеныНабора,
	|	Таблица.ВариантПредставленияНабораВПечатныхФормах,
	|	Таблица.НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика,
	|	МАКСИМУМ(Таблица.СтавкаНДС) КАК СтавкаНДС,
	|	МАКСИМУМ(Таблица.СрокПоставки) КАК СрокПоставки,
	|	МАКСИМУМ(Таблица.ОсновнаяКомплектующая) КАК ОсновнаяКомплектующая,
	|	СУММА(Таблица.КоличествоПоУмолчанию) КАК КоличествоПоУмолчанию,
	|	СУММА(Таблица.Количество) КАК Количество
	|
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительноЧастьВторая
	|ИЗ
	|	ВременнаяТаблицаНаборыДополнительноЧастьПервая КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Ссылка,
	|	Таблица.ВариантКомплектацииНоменклатуры,
	|	Таблица.ВариантРасчетаЦеныНабора,
	|	Таблица.ВариантПредставленияНабораВПечатныхФормах,
	|	Таблица.НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////6
	|ВЫБРАТЬ
	|	Результат.Ссылка,
	|	Результат.ВариантКомплектацииНоменклатуры,
	|	Результат.ВариантРасчетаЦеныНабора,
	|	Результат.ВариантПредставленияНабораВПечатныхФормах,
	|	Результат.НоменклатураНабора,
	|	Результат.ХарактеристикаНабора,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА Результат.ОсновнаяКомплектующая
	|				ТОГДА Результат.СтавкаНДС
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК СтавкаНДС,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА Результат.ОсновнаяКомплектующая
	|				ТОГДА Результат.СрокПоставки
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК СрокПоставки,
	|	ВЫРАЗИТЬ(МИНИМУМ(ВЫБОР
	|			КОГДА Результат.КоличествоПоУмолчанию <> 0 И Результат.ОсновнаяКомплектующая
	|				ТОГДА Результат.Количество / Результат.КоличествоПоУмолчанию
	|			ИНАЧЕ NULL
	|		КОНЕЦ) + 0.5 КАК Число(10,0)) - 1 КАК Количество
	|
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительно
	|ИЗ
	|	ВременнаяТаблицаНаборыДополнительноЧастьВторая КАК Результат
	|СГРУППИРОВАТЬ ПО
	|	Результат.Ссылка,
	|	Результат.ВариантКомплектацииНоменклатуры,
	|	Результат.ВариантРасчетаЦеныНабора,
	|	Результат.ВариантПредставленияНабораВПечатныхФормах,
	|	Результат.НоменклатураНабора,
	|	Результат.ХарактеристикаНабора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////7
	|ВЫБРАТЬ
	|	ВременнаяТаблицаНаборыДополнительно.ВариантКомплектацииНоменклатуры КАК ВариантКомплектацииНоменклатурыВариантКомплектацииНоменклатуры,
	|	ВЫБОР КОГДА Таблица.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКоммерческихПредложений.ПриемНаКомиссию) ТОГДА
	|		ВЫБОР КОГДА ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах = ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)
	|		ИНАЧЕ
	|			ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
	|		КОНЕЦ
	|	ИНАЧЕ
	|		ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
	|	КОНЕЦ                                                      КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ВЫБОР КОГДА Таблица.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКоммерческихПредложений.ПриемНаКомиссию) ТОГДА
	|		ВЫБОР КОГДА
	|			ВЫБОР КОГДА ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах = ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)
	|			ИНАЧЕ
	|				ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
	|			КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)
	|			И ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора В (ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоЦенам),ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоДолям)) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.РассчитываетсяИзЦенКомплектующих)
	|		ИНАЧЕ
	|			ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора
	|		КОНЕЦ
	|	ИНАЧЕ
	|		ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора
	|	КОНЕЦ                                                       КАК ВариантРасчетаЦеныНабора,
	|	Таблица.Ссылка                                              КАК Ссылка,
	|	Таблица.НоменклатураНабора                                  КАК НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора                                КАК ХарактеристикаНабора,
	|	Таблица.НомерСтроки                                         КАК НомерСтроки,
	|	ЕСТЬNULL(ВременнаяТаблицаНаборыДополнительно.Количество, 1) КАК Количество,
	|	Таблица.Сумма                                               КАК Сумма,
	|	Таблица.СуммаНДС                                            КАК СуммаНДС,
	|	Таблица.СуммаСНДС                                           КАК СуммаСНДС,
	|	Таблица.СуммаСкидки                                         КАК СуммаСкидки,
	|	ВременнаяТаблицаНаборыДополнительно.СрокПоставки            КАК СрокПоставки,
	|	ВременнаяТаблицаНаборыДополнительно.СтавкаНДС               КАК СтавкаНДС,
	|
	|	Таблица.ИДВарианта                                          КАК ИДВарианта
	|
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборы
	|ИЗ
	|	ВременнаяТаблицаНаборыПодготовка КАК Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборыДополнительно КАК ВременнаяТаблицаНаборыДополнительно
	|		ПО Таблица.НоменклатураНабора = ВременнаяТаблицаНаборыДополнительно.НоменклатураНабора
	|		И Таблица.ХарактеристикаНабора = ВременнаяТаблицаНаборыДополнительно.ХарактеристикаНабора
	|		И Таблица.Ссылка = ВременнаяТаблицаНаборыДополнительно.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////8
	|ВЫБРАТЬ
	|	
	|	Товары.Ссылка                                           КАК Ссылка,
	|	Товары.ВариантПредставленияНабораВПечатныхФормах        КАК ВариантПредставленияНабораВПечатныхФормах,
	|	Товары.ВариантРасчетаЦеныНабора                         КАК ВариантРасчетаЦеныНабора,
	|	Товары.НоменклатураНабора                               КАК НоменклатураНабора,
	|	Товары.ХарактеристикаНабора                             КАК ХарактеристикаНабора,
	|	Товары.ЭтоНабор                                         КАК ЭтоНабор,
	|	Товары.ЭтоКомплектующие                                 КАК ЭтоКомплектующие,
	|
	|	Товары.НомерСтроки                                      КАК НомерСтроки,
	|	Товары.Номенклатура                                     КАК Номенклатура,
	|	Товары.ЕдиницаИзмерения                                 КАК ЕдиницаИзмерения,
	|	Товары.Количество                                       КАК Количество,
	|
	|	Товары.Цена КАК Цена,
	|
	|	Товары.Сумма                                             КАК Сумма,
	|	Товары.СтавкаНДС                                         КАК СтавкаНДС,
	|	Товары.СуммаНДС                                          КАК СуммаНДС,
	|	Товары.СуммаСНДС                                         КАК СуммаСНДС,
	|	Товары.СрокПоставки                                      КАК СрокПоставки,
	|	ЕСТЬNULL(Товары.Характеристика, """")                    КАК Характеристика,
	|	Товары.СуммаСкидки                                       КАК СуммаСкидки,
	|
	|	Товары.Содержание										КАК Содержание,
	|	Товары.ЭтоУслуга										КАК ЭтоУслуга,
	|	Товары.ЭтоНоменклатура									КАК ЭтоНоменклатура,
	|	Товары.ИДВарианта 										КАК ИДВарианта,
	|	Товары.ИмяВарианта 										КАК ИмяВарианта,
	|	Товары.Утвержден 										КАК Утвержден,
	|	Товары.КомментарийВарианта								КАК КомментарийВарианта
	|
	|
	|ИЗ (
	|
	|	ВЫБРАТЬ
	|		Таблица.Ссылка,
	|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
	|			ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ПустаяСсылка)
	|		КОНЕЦ КАК ВариантПредставленияНабораВПечатныхФормах,
	|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
	|			ВременнаяТаблицаНаборы.ВариантРасчетаЦеныНабора
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ПустаяСсылка)
	|		КОНЕЦ КАК ВариантРасчетаЦеныНабора,
	|		Таблица.НоменклатураНабора,
	|		Таблица.ХарактеристикаНабора,
	|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|		КОНЕЦ КАК ЭтоКомплектующие,
	|		ЛОЖЬ КАК ЭтоНабор,
	|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
	|			ВременнаяТаблицаНаборы.НомерСтроки
	|		ИНАЧЕ
	|			Таблица.НомерСтроки
	|		КОНЕЦ КАК НомерСтроки,
	|		Таблица.Номенклатура,
	|		Таблица.Количество,
	|		Таблица.Цена,
	|		Таблица.Сумма,
	|		Таблица.СтавкаНДС,
	|		Таблица.СуммаНДС,
	|		Таблица.СуммаСНДС,
	|		Таблица.СрокПоставки,
	|		Таблица.Характеристика,
	|		Таблица.ЕдиницаИзмерения,
	|		Таблица.СуммаСкидки,
	|
	|		Таблица.Содержание									КАК Содержание,
	|		Таблица.ЭтоУслуга										КАК ЭтоУслуга,
	|		Таблица.ЭтоНоменклатура									КАК ЭтоНоменклатура,
	|		Таблица.ИДВарианта 										КАК ИДВарианта,
	|		Таблица.ИмяВарианта 									КАК ИмяВарианта,
	|		Таблица.Утвержден 										КАК Утвержден,
	|		Таблица.КомментарийВарианта								КАК КомментарийВарианта
	|
	|	ИЗ
	|		Товары КАК Таблица
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборы КАК ВременнаяТаблицаНаборы
	|			ПО ВременнаяТаблицаНаборы.НоменклатураНабора = Таблица.НоменклатураНабора
	|			 И ВременнаяТаблицаНаборы.ХарактеристикаНабора = Таблица.ХарактеристикаНабора
	|			 И ВременнаяТаблицаНаборы.Ссылка = Таблица.Ссылка
	|
	|	ГДЕ
	|		Таблица.НоменклатураНабора = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		ИЛИ (Таблица.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	        И ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах В (ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоКомплектующие),
	|	                                                                              ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)))
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ВременнаяТаблицаНаборы.Ссылка,
	|		ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах,
	|		ВременнаяТаблицаНаборы.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
	|		ВременнаяТаблицаНаборы.НоменклатураНабора,
	|		ВременнаяТаблицаНаборы.ХарактеристикаНабора,
	|		ЛОЖЬ КАК ЭтоКомплектующие,
	|		ИСТИНА КАК ЭтоНабор,
	|		ВременнаяТаблицаНаборы.НомерСтроки,
	|		ВременнаяТаблицаНаборы.НоменклатураНабора,
	|		ВременнаяТаблицаНаборы.Количество,
	|		ВЫБОР
	|			КОГДА &ОтображатьСкидки ТОГДА
	|				ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.Количество, 1) <> 0 ТОГДА
	|					(ВременнаяТаблицаНаборы.Сумма) / ЕСТЬNULL(ВременнаяТаблицаНаборы.Количество, 1)
	|				ИНАЧЕ
	|					0
	|				КОНЕЦ
	|			ИНАЧЕ
	|				ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.Количество, 1) <> 0 ТОГДА
	|					(ВременнаяТаблицаНаборы.Сумма) / ЕСТЬNULL(ВременнаяТаблицаНаборы.Количество, 1)
	|				ИНАЧЕ
	|					0
	|				КОНЕЦ
	|		КОНЕЦ КАК Цена,
	|		ВременнаяТаблицаНаборы.Сумма КАК Сумма,
	|		ВременнаяТаблицаНаборы.СтавкаНДС,
	|		ВременнаяТаблицаНаборы.СуммаНДС,
	|		ВременнаяТаблицаНаборы.СуммаСНДС,
	|		ВременнаяТаблицаНаборы.СрокПоставки,
	|		ВременнаяТаблицаНаборы.ХарактеристикаНабора,
	|		ВременнаяТаблицаНаборы.НоменклатураНабора.ЕдиницаИзмерения,
	|		ВременнаяТаблицаНаборы.СуммаСкидки,
	|
	|		""""																	КАК Содержание,
	|		ВЫБОР 
	|			КОГДА ВременнаяТаблицаНаборы.НоменклатураНабора.ТипНоменклатуры = Значение(Перечисление.ТипыНоменклатуры.Услуга)
	|				ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ 																	КАК ЭтоУслуга,
	|		ИСТИНА																	КАК ЭтоНоменклатура,
	|		ВременнаяТаблицаНаборы.ИДВарианта	 									КАК ИДВарианта,
	|		""""								 									КАК ИмяВарианта,
	|		ИСТИНА																	КАК Утвержден,
	|		""""																	КАК КомментарийВарианта
	|
	|	ИЗ
	|		ВременнаяТаблицаНаборы КАК ВременнаяТаблицаНаборы
	|	ГДЕ
	|		ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах В (ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор),
	|	                                                                        ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие))
	|) КАК Товары
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.НомерСтроки,
	|	ЭтоНабор УБЫВ
	|";
	
	УсловияЕдиницыИзмерения = "Товары.ЕдиницаИзмерения";
	КоммерческиеПредложенияДокументыПереопределяемый.ПолучитьТекстЗапросаПолученияЕдиницыИзмерения(УсловияЕдиницыИзмерения);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловияЕдиницыИзмерения", УсловияЕдиницыИзмерения);
	
	// +CRM
	Если НЕ (ПараметрыПечати = Неопределено) И ПараметрыПечати.Свойство("НомерВарианта") Тогда
		НомерВарианта = ПараметрыПечати.НомерВарианта;
	Иначе
		НомерВарианта = Неопределено;
	КонецЕсли;
	
	Если НомерВарианта = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаТовары.CRM_ИДВарианта = &ИДВарианта", "ТаблицаТовары.CRM_Утвержден"); // Печать только утвержденного варианта
																																// из каждого документа
	ИначеЕсли НомерВарианта = -1 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаТовары.CRM_ИДВарианта = &ИДВарианта", "ИСТИНА");
	Иначе
		Запрос.УстановитьПараметр("ИДВарианта", НомерВарианта);
	КонецЕсли;
	// -CRM
	
	ПакетРезультатовЗапроса = Запрос.ВыполнитьПакет();
	
	СтруктураДанныхДляПечати = Новый Структура;
	СтруктураДанныхДляПечати.Вставить("РезультатПоШапке",        ПакетРезультатовЗапроса[0]);
	СтруктураДанныхДляПечати.Вставить("РезультатПоТоварам",      ПакетРезультатовЗапроса[8]);
	
КонецПроцедуры

#КонецОбласти

Функция КП_СформироватьПечатнуюФормуКоммерческогоПредложения_Устаревший(МассивОбъектов, ОбъектыПечати, КомплектыПечати, ПараметрыПечати = Неопределено) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	Если НЕ (ПараметрыПечати = Неопределено) И ПараметрыПечати.Свойство("НомерВарианта") Тогда
		НомерВарианта = ПараметрыПечати.НомерВарианта;
	Иначе
		НомерВарианта = Неопределено;
	КонецЕсли;
	Запрос = Новый Запрос;
	
	Если НомерВарианта = Неопределено Тогда	// Печать нескольких документов.
		
		ТекстВременныхТаблиц = "";
		ТекстТаблиц = "";
		
		Для Индекс = 0 По МассивОбъектов.ВГраница() Цикл
			
			ТекстВременныхТаблиц = ТекстВременныхТаблиц + "
			|ВЫБРАТЬ
			|	ДокументЗапасы.Ссылка,
			|	ДокументЗапасы.CRM_ИДВарианта КАК ИДВарианта,
			|	ДокументЗапасы.CRM_Утвержден КАК Утвержден
			|ПОМЕСТИТЬ Временная"+Строка(Индекс)+"
			|ИЗ
			|	Документ.КоммерческоеПредложениеКлиенту.Товары КАК ДокументЗапасы
			|ГДЕ
			|	ДокументЗапасы.Ссылка = &Ссылка"+Строка(Индекс)+"
			|	И ДокументЗапасы.CRM_Утвержден
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ДокументЗапасы.Ссылка,
			|	ДокументЗапасы.CRM_ИДВарианта,
			|	ДокументЗапасы.CRM_Утвержден КАК Утвержден
			|ИЗ
			|	Документ.КоммерческоеПредложениеКлиенту.Товары КАК ДокументЗапасы
			|ГДЕ
			|	ДокументЗапасы.Ссылка = &Ссылка"+Строка(Индекс)+"
			|	И ДокументЗапасы.CRM_ИДВарианта = 1
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////";
			
			Если ТекстТаблиц = "" Тогда
				ТекстТаблиц = ТекстТаблиц + "
				|ВЫБРАТЬ
				|	ВложенныйЗапрос.Ссылка,
				|	ВложенныйЗапрос.ИДВарианта,
				|	ВложенныйЗапрос.Утвержден
				|ПОМЕСТИТЬ ВариантыИтог";
			Иначе
				ТекстТаблиц = ТекстТаблиц + "
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ВложенныйЗапрос.Ссылка,
				|	ВложенныйЗапрос.ИДВарианта,
				|	ВложенныйЗапрос.Утвержден";
			КонецЕсли;
			ТекстТаблиц = ТекстТаблиц + "
			|ИЗ
			|	(ВЫБРАТЬ ПЕРВЫЕ 1
			|		Временная"+Строка(Индекс)+".Ссылка КАК Ссылка,
			|		Временная"+Строка(Индекс)+".ИДВарианта КАК ИДВарианта,
			|		Временная"+Строка(Индекс)+".Утвержден КАК Утвержден
			|	ИЗ
			|		Временная"+Строка(Индекс)+" КАК Временная"+Строка(Индекс)+") КАК ВложенныйЗапрос";
			
			Запрос.УстановитьПараметр("Ссылка"+Строка(Индекс), МассивОбъектов[Индекс]);
		КонецЦикла;
		
		ТекстЗапроса = ТекстВременныхТаблиц + ТекстТаблиц + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДокументЗапасы.Ссылка КАК Ссылка,
		|	ДокументЗапасы.Ссылка.Организация,
		|	ДокументЗапасы.Ссылка.Организация.Префикс КАК Префикс,
		|	ДокументЗапасы.Ссылка.Дата КАК ДатаДокумента,
		|	ДокументЗапасы.Ссылка.Номер КАК Номер,
		|	ДокументЗапасы.Ссылка.Партнер,
		|	ДокументЗапасы.Ссылка.Валюта,
		|	ДокументЗапасы.Ссылка.ЦенаВключаетНДС,
		|	ДокументЗапасы.Ссылка.СуммаДокумента,
		|	ДокументЗапасы.НомерСтроки КАК НомерСтроки,
		|	ДокументЗапасы.Номенклатура,
		|	ДокументЗапасы.Характеристика,
		|	ДокументЗапасы.Количество,
		|	ДокументЗапасы.ЕдиницаИзмерения,
		|	ВЫБОР
		|		КОГДА &ОтображатьСкидки
		|			ТОГДА ДокументЗапасы.Цена
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ДокументЗапасы.Количество = 0
		|					ТОГДА 0
		|				ИНАЧЕ ДокументЗапасы.Сумма / ДокументЗапасы.Количество
		|			КОНЕЦ
		|	КОНЕЦ КАК Цена,
		|	ДокументЗапасы.ПроцентРучнойСкидки,
		|	ДокументЗапасы.Сумма,
		|	ДокументЗапасы.СтавкаНДС,
		|	ДокументЗапасы.СуммаНДС,
		|	ДокументЗапасы.Всего,
		|	ДокументЗапасы.Содержание,
		|	ДокументЗапасы.CRM_ИДВарианта КАК ИДВарианта,
		|	ДокументЗапасы.CRM_ИмяВарианта КАК ИмяВарианта,
		|	ДокументЗапасы.CRM_Утвержден КАК Утвержден,
		|	ВЫБОР
		|		КОГДА ДокументЗапасы.ПроцентРучнойСкидки <> 0
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ЕстьСкидка,
		|	ДокументЗапасы.CRM_ЭтоРазделитель КАК ЭтоРазделитель,
		|	ДокументКомментарииВариантов.КомментарийВарианта
		|ИЗ
		|	ВариантыИтог КАК ВариантыИтог
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КоммерческоеПредложениеКлиенту.Товары КАК ДокументЗапасы
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.КоммерческоеПредложениеКлиенту.CRM_КомментарииВариантов КАК ДокументКомментарииВариантов
		|			ПО ДокументЗапасы.Ссылка = ДокументКомментарииВариантов.Ссылка
		|				И ДокументЗапасы.CRM_ИДВарианта = ДокументКомментарииВариантов.ИДВарианта
		|		ПО ВариантыИтог.Ссылка = ДокументЗапасы.Ссылка
		|			И ВариантыИтог.ИДВарианта = ДокументЗапасы.CRM_ИДВарианта
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	НомерСтроки
		|ИТОГИ
		|	СУММА(ЕстьСкидка),
		|	МАКСИМУМ(ИмяВарианта)
		|ПО
		|	Ссылка,
		|	Утвержден,
		|	ИДВарианта";
		
	ИначеЕсли НомерВарианта = -1 Тогда		// Печать всех вариантов документа.
		ТекстЗапроса = "ВЫБРАТЬ  РАЗРЕШЕННЫЕ
		|	ДокументЗапасы.Ссылка КАК Ссылка,
		|	ДокументЗапасы.Ссылка.Организация,
		|	ДокументЗапасы.Ссылка.Организация.Префикс КАК Префикс,
		|	ДокументЗапасы.Ссылка.Дата КАК ДатаДокумента,
		|	ДокументЗапасы.Ссылка.Номер КАК Номер,
		|	ДокументЗапасы.Ссылка.Партнер,
		|	ДокументЗапасы.Ссылка.Валюта,
		|	ДокументЗапасы.Ссылка.ЦенаВключаетНДС,
		|	ДокументЗапасы.Ссылка.СуммаДокумента,
		|	ДокументЗапасы.НомерСтроки КАК НомерСтроки,
		|	ДокументЗапасы.Номенклатура,
		|	ДокументЗапасы.Характеристика,
		|	ДокументЗапасы.Количество,
		|	ДокументЗапасы.ЕдиницаИзмерения,
		|	ВЫБОР
		|		КОГДА &ОтображатьСкидки
		|			ТОГДА ДокументЗапасы.Цена
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ДокументЗапасы.Количество = 0
		|					ТОГДА 0
		|				ИНАЧЕ ДокументЗапасы.Сумма / ДокументЗапасы.Количество
		|			КОНЕЦ
		|	КОНЕЦ КАК Цена,
		|	ДокументЗапасы.ПроцентРучнойСкидки КАК ПроцентРучнойСкидки,
		|	ДокументЗапасы.Сумма,
		|	ДокументЗапасы.СтавкаНДС,
		|	ДокументЗапасы.СуммаНДС,
		|	ДокументЗапасы.Всего,
		|	ДокументЗапасы.Содержание,
		|	ДокументЗапасы.CRM_ИДВарианта КАК ИДВарианта,
		|	ДокументЗапасы.CRM_ИмяВарианта КАК ИмяВарианта,
		|	ДокументЗапасы.CRM_Утвержден КАК Утвержден,
		|	ВЫБОР
		|		КОГДА ДокументЗапасы.ПроцентРучнойСкидки <> 0
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ЕстьСкидка,
		|	ДокументЗапасы.CRM_ЭтоРазделитель КАК ЭтоРазделитель,
		|	ДокументКомментарииВариантов.КомментарийВарианта
		|ИЗ
		|	Документ.КоммерческоеПредложениеКлиенту.Товары КАК ДокументЗапасы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КоммерческоеПредложениеКлиенту.CRM_КомментарииВариантов КАК ДокументКомментарииВариантов
		|		ПО ДокументЗапасы.Ссылка = ДокументКомментарииВариантов.Ссылка
		|			И ДокументЗапасы.CRM_ИДВарианта = ДокументКомментарииВариантов.ИДВарианта
		|ГДЕ
		|	ДокументЗапасы.Ссылка В(&МассивОбъектов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	Утвержден УБЫВ,
		|	ИДВарианта
		|ИТОГИ
		|	СУММА(ЕстьСкидка),
		|	МАКСИМУМ(ИмяВарианта)
		|ПО
		|	Ссылка,
		|	Утвержден,
		|	ИДВарианта";
		
		Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
		
	Иначе									// Печать конткретного варианта документа.
		ТекстЗапроса = "ВЫБРАТЬ  РАЗРЕШЕННЫЕ
		|	ДокументЗапасы.Ссылка КАК Ссылка,
		|	ДокументЗапасы.Ссылка.Организация,
		|	ДокументЗапасы.Ссылка.Организация.Префикс КАК Префикс,
		|	ДокументЗапасы.Ссылка.Дата КАК ДатаДокумента,
		|	ДокументЗапасы.Ссылка.Номер КАК Номер,
		|	ДокументЗапасы.Ссылка.Партнер,
		|	ДокументЗапасы.Ссылка.Валюта,
		|	ДокументЗапасы.Ссылка.ЦенаВключаетНДС,
		|	ДокументЗапасы.Ссылка.СуммаДокумента,
		|	ДокументЗапасы.НомерСтроки КАК НомерСтроки,
		|	ДокументЗапасы.Номенклатура,
		|	ДокументЗапасы.Характеристика,
		|	ДокументЗапасы.Количество,
		|	ДокументЗапасы.ЕдиницаИзмерения,
		|	ВЫБОР
		|		КОГДА &ОтображатьСкидки
		|			ТОГДА ДокументЗапасы.Цена
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ДокументЗапасы.Количество = 0
		|					ТОГДА 0
		|				ИНАЧЕ ДокументЗапасы.Сумма / ДокументЗапасы.Количество
		|			КОНЕЦ
		|	КОНЕЦ КАК Цена,
		|	ДокументЗапасы.ПроцентРучнойСкидки КАК ПроцентРучнойСкидки,
		|	ДокументЗапасы.Сумма,
		|	ДокументЗапасы.СтавкаНДС,
		|	ДокументЗапасы.СуммаНДС,
		|	ДокументЗапасы.Всего,
		|	ДокументЗапасы.Содержание,
		|	ДокументЗапасы.CRM_ИДВарианта КАК ИДВарианта,
		|	ДокументЗапасы.CRM_ИмяВарианта КАК ИмяВарианта,
		|	ДокументЗапасы.CRM_Утвержден КАК Утвержден,
		|	ВЫБОР
		|		КОГДА ДокументЗапасы.ПроцентРучнойСкидки <> 0
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ЕстьСкидка,
		|	ДокументЗапасы.CRM_ЭтоРазделитель КАК ЭтоРазделитель,
		|	ДокументКомментарииВариантов.КомментарийВарианта
		|ИЗ
		|	Документ.КоммерческоеПредложениеКлиенту.Товары КАК ДокументЗапасы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КоммерческоеПредложениеКлиенту.CRM_КомментарииВариантов КАК ДокументКомментарииВариантов
		|		ПО ДокументЗапасы.Ссылка = ДокументКомментарииВариантов.Ссылка
		|			И ДокументЗапасы.CRM_ИДВарианта = ДокументКомментарииВариантов.ИДВарианта
		|ГДЕ
		|	ДокументЗапасы.Ссылка В(&МассивОбъектов)
		|	И ДокументЗапасы.CRM_ИДВарианта = &ИДВарианта
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|ИТОГИ
		|	СУММА(ЕстьСкидка)
		|ПО
		|	Ссылка,
		|	Утвержден,
		|	ИДВарианта";
		
		Запрос.УстановитьПараметр("МассивОбъектов"	,МассивОбъектов);
		Запрос.УстановитьПараметр("ИДВарианта"		,НомерВарианта);
	КонецЕсли;
	
    Запрос.УстановитьПараметр("ОтображатьСкидки", ПараметрыПечати.ОтображатьСкидки);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДокументЗапасы.Ссылка.Партнер", "ДокументЗапасы.Ссылка.Клиент КАК Партнер");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДокументЗапасы.Всего", "ДокументЗапасы.СуммаСНДС КАК Всего");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДокументЗапасы.Содержание", "ДокументЗапасы.CRM_Содержание КАК Содержание");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДокументЗапасы.ПроцентРучнойСкидки", "ДокументЗапасы.ПроцентРучнойСкидки+ДокументЗапасы.ПроцентАвтоматическойСкидки");
	
	Запрос.Текст = ТекстЗапроса;
	ВыборкаДокументов = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	//Макет = ПолучитьМакет("ПФ_MXL_КоммерческоеПредложение");
	
	Пока ВыборкаДокументов.Следующий() Цикл
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.КоммерческоеПредложениеКлиенту.CRM_ПФ_MXL_КоммерческоеПредложение");
		
		Если Макет.Области.Найти("Менеджер")<>Неопределено Тогда
			ОбластьЗаголовок                = Макет.ПолучитьОбласть("Заголовок");
			ОбластьКонтактноеЛицо           = Макет.ПолучитьОбласть("КонтактноеЛицо");
			ОбластьПредлагаемОзнакомиться   = Макет.ПолучитьОбласть("ПредлагаемОзнакомиться");
			
			ОбластьМенеджер                 = Макет.ПолучитьОбласть("Менеджер");
			ОбластьПустаяСтрокаТонкая       = Макет.ПолучитьОбласть("ПустаяСтрокаТонкая");
			ОбластьДополнительнаяИнформация = Макет.ПолучитьОбласть("ДополнительнаяИнформация");
			ОбластьСрокДействия             = Макет.ПолучитьОбласть("СрокДействияЧастичныйВыкуп");

			
			ДанныеОбъекта = Новый Структура;
			ДанныеШапки = ВыборкаДокументов.Ссылка;
			СведенияОрганизации = Новый Структура;
			СведенияОрганизации.Вставить("Наименование");
			СведенияОрганизации.Вставить("ПолноеНаименование");
			СведенияОрганизации.Вставить("Телефоны");
			СведенияОрганизации.Вставить("ЮридическийАдрес");
			СведенияОрганизации.Вставить("ЭлектроннаяПочта");
			
			КоммерческиеПредложенияДокументыПереопределяемый.ЗаполнитьДанныеОрганизации(ДанныеШапки.Организация, СведенияОрганизации);
			
			Если ЗначениеЗаполнено(СведенияОрганизации.ПолноеНаименование) Тогда
				ПредставлениеОрганизации = СведенияОрганизации.ПолноеНаименование;
			Иначе
				ПредставлениеОрганизации = СведенияОрганизации.Наименование;
			КонецЕсли;
			
			
			Если ЗначениеЗаполнено(ДанныеШапки.Менеджер) Тогда
				
				МассивСМенеджером = Новый Массив;
				МассивСМенеджером.Добавить(ДанныеШапки.Менеджер);
				
				ТребуемыеТипыКонтактнойИнформации = Новый Массив;
				ТребуемыеТипыКонтактнойИнформации.Добавить(Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
				
				ТаблицаКонтактнойИнформации = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(
				МассивСМенеджером,
				ТребуемыеТипыКонтактнойИнформации,,
				ДанныеШапки.Дата);
				
				АдресЭлектроннойПочтыМенеджера = КоммерческиеПредложенияДокументы.ПредставлениеКонтактнойИнформацииИзТаблицы(
				ТаблицаКонтактнойИнформации,
				Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
				
			Иначе
				ТелефонМенеджера = "";
				АдресЭлектроннойПочтыМенеджера   = "";
			КонецЕсли;
			
			ДанныеОбъекта.Вставить("Ссылка",                              ДанныеШапки.Ссылка);
			ДанныеОбъекта.Вставить("Организация",                         ДанныеШапки.Организация);
			ДанныеОбъекта.Вставить("ТелефонОрганизации",                  СведенияОрганизации.Телефоны);
			ДанныеОбъекта.Вставить("АдресОрганизации",                    СведенияОрганизации.ЮридическийАдрес);
			ДанныеОбъекта.Вставить("АдресЭлектроннойПочтыОрганизации",    ?(СведенияОрганизации.Свойство("ЭлектроннаяПочта"),СведенияОрганизации.ЭлектроннаяПочта, ""));
			ДанныеОбъекта.Вставить("Клиент",                              ДанныеШапки.Клиент);
			ДанныеОбъекта.Вставить("Контрагент",                          ДанныеШапки.Контрагент);
			ДанныеОбъекта.Вставить("ПредставлениеОрганизации",            ПредставлениеОрганизации);
			ДанныеОбъекта.Вставить("ПредставлениеКлиента",                КоммерческиеПредложенияДокументы.ПредставлениеПартнераКонтрагента(ДанныеОбъекта.Клиент, ДанныеОбъекта.Контрагент));
			ДанныеОбъекта.Вставить("КонтактноеЛицо",                      ДанныеШапки.КонтактноеЛицо);
			ДанныеОбъекта.Вставить("Менеджер",                            ДанныеШапки.Менеджер);
			ДанныеОбъекта.Вставить("АдресЭлектроннойПочтыМенеджера",      АдресЭлектроннойПочтыМенеджера);
			ДанныеОбъекта.Вставить("ТелефонМенеджера",                    ТелефонМенеджера);
			ДанныеОбъекта.Вставить("Номер",                               ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеШапки.Номер, Ложь, Истина));
			ДанныеОбъекта.Вставить("Дата",                                Формат(ДанныеШапки.Дата,"ДЛФ=D"));
			ДанныеОбъекта.Вставить("ВариантУказанияСрокаПоставки",        ДанныеШапки.ВариантУказанияСрокаПоставки);
			ДанныеОбъекта.Вставить("УсловияОплаты",                       ДанныеШапки.УсловияОплатыТекст);
			ДанныеОбъекта.Вставить("УсловияДоставки",                     ДанныеШапки.УсловияДоставкиТекст);
			ДанныеОбъекта.Вставить("ПрочиеУсловия",                       ДанныеШапки.ПрочаяДополнительнаяИнформацияТекст);
			ДанныеОбъекта.Вставить("КонтактнаяИнформацияПредложения",     КонтактнаяИнформацияПредложения(ДанныеОбъекта));
			ДанныеОбъекта.Вставить("ПредставлениеСрокаДействия",          КоммерческиеПредложенияДокументы.ПредставлениеСрокаДействияДляПечати(Ложь, ДанныеШапки.СрокДействия));
			ДанныеОбъекта.Вставить("ПредставлениеЧастичногоВыкупа",       КоммерческиеПредложенияДокументы.ПредставлениеЧастичногоВыкупаДляПечати(ДанныеШапки.МожетВыкупатьсяЧастично));
			ДанныеОбъекта.Вставить("УсловияПоставкиПредставление",        CRM_МетодыМодулейМенеджеровДокументов.ПредставлениеУсловийПоставкиДляПечати(ДанныеОбъекта.УсловияОплаты,
			ДанныеОбъекта.УсловияДоставки, 
			ДанныеОбъекта.ПрочиеУсловия,
			ДанныеШапки.CRM_ИсходныеУсловия,
			ДанныеШапки.CRM_ПорядокВыполненияРабот));
		
			КоммерческиеПредложенияДокументыПереопределяемый.ПриФормированииЗаголовкаПечатнойФормы(Макет, ОбластьЗаголовок, ДанныеОбъекта);
			
			ДополнительныеПараметрыВывода = Неопределено;
			
			ОбластьЗаголовок.Параметры.Заполнить(ДанныеОбъекта);
			ТабличныйДокумент.Вывести(ОбластьЗаголовок);
			
			Если ЗначениеЗаполнено(ДанныеОбъекта.КонтактноеЛицо) Тогда
				ОбластьКонтактноеЛицо.Параметры.Заполнить(ДанныеОбъекта);
				ТабличныйДокумент.Вывести(ОбластьКонтактноеЛицо);
			КонецЕсли;
			
			ОбластьПредлагаемОзнакомиться.Параметры.Заполнить(ДанныеОбъекта);
			ТабличныйДокумент.Вывести(ОбластьПредлагаемОзнакомиться);

			ВыборкаВариантУтвержен = ВыборкаДокументов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаВариантУтвержен.Следующий() Цикл
				ВыборкаВариантИд = ВыборкаВариантУтвержен.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаВариантИд.Следующий() Цикл
					Если НомерВарианта = -1 Тогда // Все варианты
						Если ВыборкаВариантИд.Утвержден Тогда    
							ДобавитьКОбластиВариант = НСтр("ru=' (утв.)';en=' (Approved)'");
						Иначе
							ДобавитьКОбластиВариант = ""; 
						КонецЕсли; 
						
						// область варианта
						ОбластьВарианта = Макет.ПолучитьОбласть("Вариант");
						ИмяВариантаПоУмолчанию = НСтр("ru='Вариант ';en='Option'") + ВыборкаВариантИд.ИДВарианта;
						ОбластьВарианта.Параметры.Вариант = ИмяВариантаПоУмолчанию + ?(ИмяВариантаПоУмолчанию = ВыборкаВариантИд.ИмяВарианта ИЛИ ПустаяСтрока(ВыборкаВариантИд.ИмяВарианта), "", " """ + ВыборкаВариантИд.ИмяВарианта + """") + ДобавитьКОбластиВариант;
						ТабличныйДокумент.Вывести(ОбластьВарианта);
					КонецЕсли;
						
					КПВывестиСтрокиВарианта(ТабличныйДокумент, Макет, ВыборкаВариантИд, ПараметрыПечати.ОтображатьСкидки);
						
				КонецЦикла;
			КонецЦикла;
			
			ТабличныйДокумент.Вывести(ОбластьПустаяСтрокаТонкая);
			
			ОбластьСрокДействия.Параметры.Заполнить(ДанныеОбъекта);
			ТабличныйДокумент.Вывести(ОбластьСрокДействия);
			
			Если Не ПустаяСтрока(ДанныеОбъекта.УсловияПоставкиПредставление) Тогда
				
				ТабличныйДокумент.Вывести(ОбластьПустаяСтрокаТонкая);
				ОбластьДополнительнаяИнформация.Параметры.Заполнить(ДанныеОбъекта);
				ТабличныйДокумент.Вывести(ОбластьДополнительнаяИнформация);
				
			КонецЕсли;
			
			ОбластьМенеджер.Параметры.Заполнить(ДанныеОбъекта);
			ТабличныйДокумент.Вывести(ОбластьМенеджер);

		Иначе
			
			СведенияОбОрганизации = CRM_ОбщегоНазначенияСервер.СведенияОЮрФизЛице(ВыборкаДокументов.Организация, ВыборкаДокументов.ДатаДокумента);
			
			Если CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
				СведенияОбКонтрагенте = CRM_ОбщегоНазначенияСервер.СведенияОЮрФизЛице(ВыборкаДокументов.Партнер, ВыборкаДокументов.ДатаДокумента, ,);
			Иначе
				СведенияОбКонтрагенте = Новый Структура("ПолноеНаименование", ?(ЗначениеЗаполнено(ВыборкаДокументов.Партнер.НаименованиеПолное), 
																				ВыборкаДокументов.Партнер.НаименованиеПолное, ВыборкаДокументов.Партнер.Наименование));
			КонецЕсли;
			
			Если CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("Константы", "CRM_ПечататьНомераДокументовБезПрефиксов") Тогда
				ФлагУдалитьПрефикс = Константы["CRM_ПечататьНомераДокументовБезПрефиксов"].Получить();
			Иначе
				ФлагУдалитьПрефикс = Ложь;
			КонецЕсли;
			НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаДокументов.Номер, ФлагУдалитьПрефикс, ФлагУдалитьПрефикс);
			
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
			ОбластьМакета.Параметры.ТекстЗаголовка = НСтр("ru='Коммерческое предложение № ';en='Quote No. '")
													+ НомерДокумента
													+ НСтр("ru=' от ';en=' from '")
													+ Формат(ВыборкаДокументов.ДатаДокумента, "ДФ=""dd MMMM yyyy""");
			ТабличныйДокумент.Вывести(ОбластьМакета);
			// поставщик и покупатель
			ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
			ОбластьМакета.Параметры.ПредставлениеПоставщика = СведенияОбОрганизации.ПолноеНаименование;
			ТабличныйДокумент.Вывести(ОбластьМакета);
			ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
			ОбластьМакета.Параметры.ПредставлениеПолучателя = СведенияОбКонтрагенте.ПолноеНаименование;
			ТабличныйДокумент.Вывести(ОбластьМакета);
			ВыборкаВариантУтвержен = ВыборкаДокументов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаВариантУтвержен.Следующий() Цикл
				ВыборкаВариантИд = ВыборкаВариантУтвержен.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаВариантИд.Следующий() Цикл
					Если НомерВарианта = 0 Тогда // Все варианты
						Если ВыборкаВариантИд.Утвержден Тогда    
							ДобавитьКОбластиВариант = НСтр("ru=' (утв.)';en=' (Approved)'");
						Иначе
							ДобавитьКОбластиВариант = ""; 
						КонецЕсли; 
						
						// область варианта
						ОбластьВарианта = Макет.ПолучитьОбласть("Вариант");
						ИмяВариантаПоУмолчанию = НСтр("ru='Вариант ';en='Option'") + ВыборкаВариантИд.ИДВарианта;
						ОбластьВарианта.Параметры.Вариант = ИмяВариантаПоУмолчанию + ?(ИмяВариантаПоУмолчанию = ВыборкаВариантИд.ИмяВарианта, "", " """ + ВыборкаВариантИд.ИмяВарианта + """") + ДобавитьКОбластиВариант;
						ТабличныйДокумент.Вывести(ОбластьВарианта);
					КонецЕсли;
						
					КПВывестиСтрокиВариантаСтарая(ТабличныйДокумент, Макет, ВыборкаВариантИд, ПараметрыПечати.ОтображатьСкидки);
						
				КонецЦикла;
			КонецЦикла;
			
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументов.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;	
КонецФункции

Функция КПВывестиСтрокиВарианта(ТабличныйДокумент, Макет, ВыборкаВариантИд, ОтображатьСкидки) Экспорт
	
	// шапка таблицы
	
	Если ОтображатьСкидки Тогда
		ОбластьНомера = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
		ОбластьДанных = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
		ОбластьСкидок = Макет.ПолучитьОбласть("ШапкаТаблицы|Скидка");
		ОбластьСуммы  = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");
		
		ТабличныйДокумент.Вывести(ОбластьНомера);
		ТабличныйДокумент.Присоединить(ОбластьДанных);
		ТабличныйДокумент.Присоединить(ОбластьСкидок);
		ТабличныйДокумент.Присоединить(ОбластьСуммы);
	Иначе
		ОбластьДанных = Макет.ПолучитьОбласть("ШапкаТаблицыБезСкидок");
		ТабличныйДокумент.Вывести(ОбластьДанных);
	КонецЕсли;
	
	Если ОтображатьСкидки Тогда
		ОбластьНомера = Макет.ПолучитьОбласть("Строка|НомерСтроки");
		ОбластьДанных = Макет.ПолучитьОбласть("Строка|Данные");
		ОбластьСкидок = Макет.ПолучитьОбласть("Строка|Скидка");
		ОбластьСуммы  = Макет.ПолучитьОбласть("Строка|Сумма");
	Иначе
		ОбластьДанных = Макет.ПолучитьОбласть("СтрокаБезСкидок");
	КонецЕсли;

	ИтогоПоРазделу 	= 0;
	ИтогоСумма 		= 0;
	ИтогоСуммаНДС 	= 0;
	ИтогоБезСкидок 	= 0;	
	
	Ном = 0;
	ПерваяСтрока = Истина;
	МассивИтогов = Новый Массив;
	МассивИтоговСкидок = Новый Массив;
	МассивРазделителей = Новый Массив;
	
	ТекРазделитель = Справочники.CRM_Разделители.ПустаяСсылка();
	СтруктураДопИнф = Новый Структура("Характеристика, Серия"); 
	
	ОписаниеВарианта = "";
	
	// СтрокиТаблицы
	ВыборкаЗапасы = ВыборкаВариантИд.Выбрать();
	Пока ВыборкаЗапасы.Следующий() Цикл
		
		ОписаниеВарианта = ВыборкаЗапасы.КомментарийВарианта;
		
		Если ТипЗнч(ВыборкаЗапасы.Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
			Ном = Ном + 1;
			// строки номенклатуры
			Если ОтображатьСкидки Тогда
				ОбластьНомера.Параметры.Ном = Ном;
				ТабличныйДокумент.Вывести(ОбластьНомера);
				ОбластьДанных.Параметры.Заполнить(ВыборкаЗапасы);
			Иначе
				ОбластьДанных.Параметры.Ном = Ном;
				ОбластьДанных.Параметры.Заполнить(ВыборкаЗапасы);
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ВыборкаЗапасы.ЕдиницаИзмерения) Тогда
				ОбластьДанных.Параметры.ЕдиницаИзмерения = ВыборкаЗапасы.Номенклатура.ЕдиницаИзмерения;
			КонецЕсли;			
			// +CRM
			ТипНоменклатуры = ВыборкаЗапасы.Номенклатура.ТипНоменклатуры;
			Если Не ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга Тогда
				СтруктураДопИнф.Характеристика = ВыборкаЗапасы.Характеристика;			
				ХарактеристикаНоменклатуры = КППредставлениеСерий(СтруктураДопИнф);
				ОбластьДанных.Параметры.Содержание = ?(ПустаяСтрока(ВыборкаЗапасы.Содержание), ВыборкаЗапасы.Номенклатура.НаименованиеПолное + ХарактеристикаНоменклатуры, ВыборкаЗапасы.Содержание);
			Иначе	
				ОбластьДанных.Параметры.Содержание = ?(ПустаяСтрока(ВыборкаЗапасы.Содержание), ВыборкаЗапасы.Номенклатура.НаименованиеПолное, ВыборкаЗапасы.Содержание);
			КонецЕсли;	
			// -CRM
			
			ОбластьДанных.Область(1, 1, 1, 1).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Лево;
			ОбластьДанных.Область(1, 1, 1, 1).Шрифт = Новый Шрифт(, , Ложь, , , );
			Если ОтображатьСкидки Тогда
				ТабличныйДокумент.Присоединить(ОбластьДанных);
			КонецЕсли;	
			Если ОтображатьСкидки Тогда

				ОбластьСкидок.Параметры.Скидка = ВыборкаЗапасы.Количество * ВыборкаЗапасы.Цена - ВыборкаЗапасы.Сумма;
				ОбластьСкидок.Параметры.СуммаБезСкидки = ВыборкаЗапасы.Количество * ВыборкаЗапасы.Цена;
				ОбластьСкидок.Область(1, 1, 1, 2).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
				ОбластьСкидок.Область(1, 1, 1, 2).Шрифт = Новый Шрифт(, , Ложь, , , );
				ТабличныйДокумент.Присоединить(ОбластьСкидок);
				ИтогоБезСкидок = ИтогоБезСкидок + ОбластьСкидок.Параметры.СуммаБезСкидки;

				ОбластьСуммы.Параметры.Сумма = ВыборкаЗапасы.Сумма;
				ОбластьСуммы.Область(1, 1, 1, 1).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
				ОбластьСуммы.Область(1, 1, 1, 1).Шрифт = Новый Шрифт(, , Ложь, , , );
				ТабличныйДокумент.Присоединить(ОбластьСуммы);
			Иначе	
				ОбластьДанных.Параметры.Сумма = ВыборкаЗапасы.Сумма;
				ТабличныйДокумент.Вывести(ОбластьДанных);

			КонецЕсли;
			ИтогоСумма = ИтогоСумма + ВыборкаЗапасы.Сумма;
			ИтогоСуммаНДС = ИтогоСуммаНДС + ВыборкаЗапасы.СуммаНДС;
			
			Если МассивИтогов.Количество() > 0 Тогда
				МассивИтогов[МассивИтогов.Количество() - 1] = МассивИтогов[МассивИтогов.Количество() - 1] + ВыборкаЗапасы.Сумма;
			КонецЕсли;
			Если МассивИтоговСкидок.Количество() > 0 Тогда
				МассивИтоговСкидок[МассивИтоговСкидок.Количество() - 1] = МассивИтоговСкидок[МассивИтоговСкидок.Количество() - 1] + (ВыборкаЗапасы.Количество * ВыборкаЗапасы.Цена - ВыборкаЗапасы.Сумма);
			КонецЕсли;
		Иначе
			Если МассивРазделителей.Количество() > 0 Тогда
				ИтогоПоРазделу = МассивИтогов[МассивИтогов.Количество() - 1];
				ИтогоСкидкаПоРазделу = МассивИтоговСкидок[МассивИтоговСкидок.Количество() - 1];
				Разделитель = МассивРазделителей[МассивРазделителей.Количество() - 1];
				МассивИтогов.Удалить(МассивИтогов.Количество() - 1);
				МассивИтоговСкидок.Удалить(МассивИтоговСкидок.Количество() - 1);
				МассивРазделителей.Удалить(МассивРазделителей.Количество() - 1);
				Если Разделитель.Итог Тогда
					// Строки итогов по иерархии (итоги).
					Если ОтображатьСкидки Тогда
						ОбластьНомера.Параметры.Ном = "";
						ТабличныйДокумент.Вывести(ОбластьНомера);
						ОбластьДанных.Параметры.Содержание  = НСтр("ru='Итого по: ';en='Total by:'") + Строка(Разделитель);
						ОбластьДанных.Параметры.Номенклатура = Разделитель;
						ОбластьДанных.Параметры.Количество = "";
						ОбластьДанных.Параметры.Цена = "";
						ОбластьДанных.Параметры.ЕдиницаИзмерения = "";
						ОбластьДанных.Область(1, 1, 1, 1).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Лево;
						ОбластьДанных.Область(1, 1, 1, 1).Шрифт = Новый Шрифт(, , Истина, , , );
						ТабличныйДокумент.Присоединить(ОбластьДанных);

						ОбластьСкидок.Параметры.СуммаБезСкидки = СокрЛП(Формат(ИтогоПоРазделу + ИтогоСкидкаПоРазделу, "ЧЦ=15; ЧДЦ=2"));
						ОбластьСкидок.Параметры.Скидка = СокрЛП(Формат(ИтогоСкидкаПоРазделу, "ЧЦ=15; ЧДЦ=2"));
						ОбластьСкидок.Область(1, 1, 1, 2).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
						ОбластьСкидок.Область(1, 1, 1, 2).Шрифт = Новый Шрифт(, , Истина, , , );
						ТабличныйДокумент.Присоединить(ОбластьСкидок);

						ОбластьСуммы.Параметры.Сумма = СокрЛП(CRM_ОбщегоНазначенияКлиентСервер.ФорматСумм(ИтогоПоРазделу));
						ОбластьСуммы.Область(1, 1, 1, 1).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
						ОбластьСуммы.Область(1, 1, 1, 1).Шрифт = Новый Шрифт(, , Истина, , , );
						ТабличныйДокумент.Присоединить(ОбластьСуммы);
					Иначе	
						ОбластьДанных.Параметры.Ном = "";
						ОбластьДанных.Параметры.Содержание  = НСтр("ru='Итого по: ';en='Total by:'") + Строка(Разделитель);
						ОбластьДанных.Параметры.Номенклатура = Разделитель;
						ОбластьДанных.Параметры.Количество = "";
						ОбластьДанных.Параметры.Цена = "";
						ОбластьДанных.Параметры.ЕдиницаИзмерения = "";
						ОбластьДанных.Параметры.Сумма = СокрЛП(CRM_ОбщегоНазначенияКлиентСервер.ФорматСумм(ИтогоПоРазделу));
						ОбластьДанных.Область(1, 3, 1, 3).Шрифт = Новый Шрифт(, , Истина, , , );
						ОбластьДанных.Область(1, 9, 1, 9).Шрифт = Новый Шрифт(, , Истина, , , );

						ТабличныйДокумент.Вывести(ОбластьДанных);
						
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			// Строки разделителей иерархии (заголовки).
			Если ОтображатьСкидки Тогда
				ОбластьНомера.Параметры.Ном = "";
				ТабличныйДокумент.Вывести(ОбластьНомера);
				ОбластьДанных.Параметры.Содержание  = ВыборкаЗапасы.Номенклатура;
				ОбластьДанных.Параметры.Номенклатура = ВыборкаЗапасы.Номенклатура;
				ОбластьДанных.Параметры.Количество = "";
				ОбластьДанных.Параметры.Цена = "";
				ОбластьДанных.Параметры.ЕдиницаИзмерения = "";
				ОбластьДанных.Область(1, 1, 1, 1).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Лево;
				ОбластьДанных.Область(1, 1, 1, 1).Шрифт = Новый Шрифт(, , Истина, , , );
				ТабличныйДокумент.Присоединить(ОбластьДанных);

				ОбластьСкидок.Параметры.СуммаБезСкидки = "";
				ОбластьСкидок.Параметры.Скидка = "";
				ТабличныйДокумент.Присоединить(ОбластьСкидок);

				ОбластьСуммы.Параметры.Сумма = "";
				ТабличныйДокумент.Присоединить(ОбластьСуммы);
			Иначе	
				ОбластьДанных.Параметры.Ном = "";
				ОбластьДанных.Параметры.Содержание  = ВыборкаЗапасы.Номенклатура;
				ОбластьДанных.Параметры.Номенклатура = ВыборкаЗапасы.Номенклатура;
				ОбластьДанных.Параметры.Количество = "";
				ОбластьДанных.Параметры.Цена = "";
				ОбластьДанных.Параметры.ЕдиницаИзмерения = "";
				ОбластьДанных.Параметры.Сумма = "";
				ТабличныйДокумент.Вывести(ОбластьДанных);
				
			КонецЕсли;
			МассивИтогов.Добавить(0);
			МассивИтоговСкидок.Добавить(0);
			Если НЕ ТипЗнч(ВыборкаЗапасы.Номенклатура) = Тип("Неопределено") Тогда 
				МассивРазделителей.Добавить(ВыборкаЗапасы.Номенклатура);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если МассивИтогов.Количество() > 0 Тогда
		ИтогоПоРазделу = МассивИтогов[МассивИтогов.Количество() - 1];
		ИтогоСкидкаПоРазделу = МассивИтоговСкидок[МассивИтоговСкидок.Количество() - 1];
		Разделитель = МассивРазделителей[МассивРазделителей.Количество() - 1];
		МассивИтогов.Удалить(МассивИтогов.Количество()-1);
		МассивИтоговСкидок.Удалить(МассивИтоговСкидок.Количество() - 1);
		МассивРазделителей.Удалить(МассивРазделителей.Количество() - 1);
		Если Разделитель.Итог Тогда
			// Последняя строка итогов по иерархии (итоги).
			Если ОтображатьСкидки Тогда
				ОбластьНомера.Параметры.Ном = "";
				ТабличныйДокумент.Вывести(ОбластьНомера);
				ОбластьДанных.Параметры.Содержание  = НСтр("ru='Итого по: ';en='Total by:'") + Строка(Разделитель);
				ОбластьДанных.Параметры.Номенклатура = Разделитель;
				ОбластьДанных.Параметры.Количество = "";
				ОбластьДанных.Параметры.Цена = "";
				ОбластьДанных.Параметры.ЕдиницаИзмерения = "";
				ОбластьДанных.Область(1, 1, 1, 1).Шрифт = Новый Шрифт(, , Истина, , , );
				ТабличныйДокумент.Присоединить(ОбластьДанных);

				ОбластьСкидок.Параметры.СуммаБезСкидки = СокрЛП(Формат(ИтогоПоРазделу + ИтогоСкидкаПоРазделу, "ЧЦ=15; ЧДЦ=2"));
				ОбластьСкидок.Параметры.Скидка = СокрЛП(Формат(ИтогоСкидкаПоРазделу, "ЧЦ=15; ЧДЦ=2"));
				ОбластьСкидок.Область(1, 1, 1, 2).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
				ОбластьСкидок.Область(1, 1, 1, 2).Шрифт = Новый Шрифт(, , Истина, , , );
				ТабличныйДокумент.Присоединить(ОбластьСкидок);

				ОбластьСуммы.Параметры.Сумма = СокрЛП(Формат(ИтогоПоРазделу, "ЧЦ=15; ЧДЦ=2"));
				ОбластьСуммы.Область(1, 1, 1, 1).Шрифт = Новый Шрифт(, , Истина, , , );
				ТабличныйДокумент.Присоединить(ОбластьСуммы);
			Иначе	
				ОбластьДанных.Параметры.Ном = "";
				ОбластьДанных.Параметры.Содержание  = НСтр("ru='Итого по: ';en='Total by:'") + Строка(Разделитель);
				ОбластьДанных.Параметры.Номенклатура = Разделитель;
				ОбластьДанных.Параметры.Количество = "";
				ОбластьДанных.Параметры.Цена = "";
				ОбластьДанных.Параметры.ЕдиницаИзмерения = "";
				ОбластьДанных.Область(1, 3, 1, 3).Шрифт = Новый Шрифт(, , Истина, , , );
				ОбластьДанных.Параметры.Сумма = СокрЛП(Формат(ИтогоПоРазделу, "ЧЦ=15; ЧДЦ=2"));
				ОбластьДанных.Область(1, 9, 1, 9).Шрифт = Новый Шрифт(, , Истина, , , );
				ТабличныйДокумент.Вывести(ОбластьДанных);
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// итоги
	Если ОтображатьСкидки Тогда
		
		ОбластьНомера = Макет.ПолучитьОбласть("Итого|НомерСтроки");
		ОбластьДанных = Макет.ПолучитьОбласть("Итого|Данные");
		ОбластьСкидок = Макет.ПолучитьОбласть("Итого|Скидка");
		ОбластьСуммы = Макет.ПолучитьОбласть("Итого|Сумма");
		
		ТабличныйДокумент.Вывести(ОбластьНомера);
		ТабличныйДокумент.Присоединить(ОбластьДанных);

		ОбластьСкидок.Параметры.ВсегоБезСкидок = ИтогоБезСкидок;
		ОбластьСкидок.Параметры.ВсегоСкидок = ИтогоБезСкидок - ИтогоСумма;
		ТабличныйДокумент.Присоединить(ОбластьСкидок);

		ОбластьСуммы.Параметры.Всего = CRM_ОбщегоНазначенияКлиентСервер.ФорматСумм(ИтогоСумма);
		ТабличныйДокумент.Присоединить(ОбластьСуммы);
		
		// итоги НДС
		//Если УчитыватьНДС Тогда
		ОбластьНомера = Макет.ПолучитьОбласть("ИтогоНДС|НомерСтроки");
		ОбластьДанных = Макет.ПолучитьОбласть("ИтогоНДС|Данные");
		ОбластьСкидок = Макет.ПолучитьОбласть("ИтогоНДС|Скидка");
		ОбластьСуммы = Макет.ПолучитьОбласть("ИтогоНДС|Сумма");
		ТабличныйДокумент.Вывести(ОбластьНомера);
		ОбластьДанных.Параметры.НДС = ?(ВыборкаВариантИд.ЦенаВключаетНДС, НСтр("ru='В том числе НДС:';en='Including VAT:'"), НСтр("ru='Сумма НДС:'"));
		ТабличныйДокумент.Присоединить(ОбластьДанных);

		ТабличныйДокумент.Присоединить(ОбластьСкидок);

		ОбластьСуммы.Параметры.ВсегоНДС = CRM_ОбщегоНазначенияКлиентСервер.ФорматСумм(ИтогоСуммаНДС);
		ТабличныйДокумент.Присоединить(ОбластьСуммы);
		//КонецЕсли;
		
		
	Иначе	
		ОбластьДанных = Макет.ПолучитьОбласть("ИтогоБезСкидок");
		
		ОбластьДанных.Параметры.Всего = CRM_ОбщегоНазначенияКлиентСервер.ФорматСумм(ИтогоСумма);
		ТабличныйДокумент.Вывести(ОбластьДанных);
		
		// итоги НДС
		//Если УчитыватьНДС Тогда
		ОбластьДанных = Макет.ПолучитьОбласть("ИтогоНДСБезСкидок");
		ОбластьДанных.Параметры.НДС = ?(ВыборкаВариантИд.ЦенаВключаетНДС, НСтр("ru='В том числе НДС:';en='Including VAT:'"), НСтр("ru='Сумма НДС:'"));
		ОбластьДанных.Параметры.ВсегоНДС = CRM_ОбщегоНазначенияКлиентСервер.ФорматСумм(ИтогоСуммаНДС);
		ТабличныйДокумент.Вывести(ОбластьДанных);
		//КонецЕсли;
		
				
	КонецЕсли;
	// сумма прописью
	
	СуммаКПрописи = ИтогоСумма + ?(ВыборкаВариантИд.ЦенаВключаетНДС, 0, ИтогоСуммаНДС);
	ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
	ОбластьМакета.Параметры.ИтоговаяСтрока = НСтр("ru='Всего наименований ';en='All items '") + Ном + НСтр("ru=', на сумму '") + CRM_ОбщегоНазначенияКлиентСервер.ФорматСумм(СуммаКПрописи, ВыборкаВариантИд.Валюта);
	ОбластьМакета.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаКПрописи, ВыборкаВариантИд.Валюта);
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	// заголовок таблицы
	Если ЗначениеЗаполнено(ОписаниеВарианта) Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("ОписаниеВарианта");
		ОбластьМакета.Параметры.ПредставлениеОписания = ОписаниеВарианта;
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЕсли; 
КонецФункции

Функция КПВывестиСтрокиВариантаСтарая(ТабличныйДокумент, Макет, ВыборкаВариантИд, ЕстьСкидки) Экспорт
	
	// шапка таблицы
	ОбластьНомера = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
	ОбластьДанных = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
	ОбластьСкидок = Макет.ПолучитьОбласть("ШапкаТаблицы|Скидка");
	ОбластьСуммы  = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");
	
	ТабличныйДокумент.Вывести(ОбластьНомера);
	ТабличныйДокумент.Присоединить(ОбластьДанных);
	Если ВыборкаВариантИд.ЕстьСкидка > 0 Тогда
		ТабличныйДокумент.Присоединить(ОбластьСкидок);
	КонецЕсли;
	ТабличныйДокумент.Присоединить(ОбластьСуммы);
	
	ОбластьНомера = Макет.ПолучитьОбласть("Строка|НомерСтроки");
	ОбластьДанных = Макет.ПолучитьОбласть("Строка|Данные");
	ОбластьСкидок = Макет.ПолучитьОбласть("Строка|Скидка");
	ОбластьСуммы  = Макет.ПолучитьОбласть("Строка|Сумма");

	ИтогоПоРазделу 	= 0;
	ИтогоСумма 		= 0;
	ИтогоСуммаНДС 	= 0;
	ИтогоБезСкидок 	= 0;	
	
	Ном = 0;
	ПерваяСтрока = Истина;
	МассивИтогов = Новый Массив;
	МассивИтоговСкидок = Новый Массив;
	МассивРазделителей = Новый Массив;
	
	ТекРазделитель = Справочники.CRM_Разделители.ПустаяСсылка();
	СтруктураДопИнф = Новый Структура("Характеристика, Серия"); 
	
	ОписаниеВарианта = "";
	
	// СтрокиТаблицы
	ВыборкаЗапасы = ВыборкаВариантИд.Выбрать();
	Пока ВыборкаЗапасы.Следующий() Цикл
		
		ОписаниеВарианта = ВыборкаЗапасы.КомментарийВарианта;
		
		Если ТипЗнч(ВыборкаЗапасы.Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
			Ном = Ном + 1;
			// строки номенклатуры
			ОбластьНомера.Параметры.Ном = Ном;
			ТабличныйДокумент.Вывести(ОбластьНомера);
			ОбластьДанных.Параметры.Заполнить(ВыборкаЗапасы);

			Если Не ЗначениеЗаполнено(ВыборкаЗапасы.ЕдиницаИзмерения) Тогда
				ОбластьДанных.Параметры.ЕдиницаИзмерения = ВыборкаЗапасы.Номенклатура.ЕдиницаИзмерения;
			КонецЕсли;			
			// +CRM
			ТипНоменклатуры = ВыборкаЗапасы.Номенклатура.ТипНоменклатуры;
			Если Не ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга Тогда
				СтруктураДопИнф.Характеристика = ВыборкаЗапасы.Характеристика;			
				ХарактеристикаНоменклатуры = КППредставлениеСерий(СтруктураДопИнф);
				ОбластьДанных.Параметры.Содержание = ?(ПустаяСтрока(ВыборкаЗапасы.Содержание), ВыборкаЗапасы.Номенклатура.НаименованиеПолное + 
														ХарактеристикаНоменклатуры, ВыборкаЗапасы.Содержание);
			Иначе	
				ОбластьДанных.Параметры.Содержание = ?(ПустаяСтрока(ВыборкаЗапасы.Содержание), ВыборкаЗапасы.Номенклатура.НаименованиеПолное, ВыборкаЗапасы.Содержание);
			КонецЕсли;	
			// -CRM
			
			ОбластьДанных.Область(1, 1, 1, 1).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Лево;
			ОбластьДанных.Область(1, 1, 1, 1).Шрифт = Новый Шрифт(, , Ложь, , , );
			ТабличныйДокумент.Присоединить(ОбластьДанных);

			Если ЕстьСкидки Тогда
				ОбластьСкидок.Параметры.Скидка = ВыборкаЗапасы.Количество * ВыборкаЗапасы.Цена - ВыборкаЗапасы.Сумма;
				ОбластьСкидок.Параметры.СуммаБезСкидки = ВыборкаЗапасы.Количество * ВыборкаЗапасы.Цена;
				ОбластьСкидок.Область(1, 1, 1, 2).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
				ОбластьСкидок.Область(1, 1, 1, 2).Шрифт = Новый Шрифт(, , Ложь, , , );
				ТабличныйДокумент.Присоединить(ОбластьСкидок);
				ИтогоБезСкидок = ИтогоБезСкидок + ОбластьСкидок.Параметры.СуммаБезСкидки;
			КонецЕсли;
			ОбластьСуммы.Параметры.Сумма = ВыборкаЗапасы.Сумма;
			ОбластьСуммы.Область(1, 1, 1, 1).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
			ОбластьСуммы.Область(1, 1, 1, 1).Шрифт = Новый Шрифт(, , Ложь, , , );
			ТабличныйДокумент.Присоединить(ОбластьСуммы);

			ИтогоСумма = ИтогоСумма + ВыборкаЗапасы.Сумма;
			ИтогоСуммаНДС = ИтогоСуммаНДС + ВыборкаЗапасы.СуммаНДС;
			
			Если МассивИтогов.Количество() > 0 Тогда
				МассивИтогов[МассивИтогов.Количество() - 1] = МассивИтогов[МассивИтогов.Количество() - 1] + ВыборкаЗапасы.Сумма;
			КонецЕсли;
			Если МассивИтоговСкидок.Количество() > 0 Тогда
				МассивИтоговСкидок[МассивИтоговСкидок.Количество() - 1] = МассивИтоговСкидок[МассивИтоговСкидок.Количество() - 1] + (ВыборкаЗапасы.Количество * ВыборкаЗапасы.Цена - ВыборкаЗапасы.Сумма);
			КонецЕсли;
		Иначе
			Если МассивРазделителей.Количество() > 0 Тогда
				ИтогоПоРазделу = МассивИтогов[МассивИтогов.Количество() - 1];
				ИтогоСкидкаПоРазделу = МассивИтоговСкидок[МассивИтоговСкидок.Количество() - 1];
				Разделитель = МассивРазделителей[МассивРазделителей.Количество() - 1];
				МассивИтогов.Удалить(МассивИтогов.Количество() - 1);
				МассивИтоговСкидок.Удалить(МассивИтоговСкидок.Количество() - 1);
				МассивРазделителей.Удалить(МассивРазделителей.Количество() - 1);
				Если Разделитель.Итог Тогда
					// Строки итогов по иерархии (итоги).
					ОбластьНомера.Параметры.Ном = "";
					ТабличныйДокумент.Вывести(ОбластьНомера);
					ОбластьДанных.Параметры.Содержание  = НСтр("ru='Итого по: ';en='Total by:'") + Строка(Разделитель);
					ОбластьДанных.Параметры.Номенклатура = Разделитель;
					ОбластьДанных.Параметры.Количество = "";
					ОбластьДанных.Параметры.Цена = "";
					ОбластьДанных.Параметры.ЕдиницаИзмерения = "";
					ОбластьДанных.Область(1, 1, 1, 1).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Лево;
					ОбластьДанных.Область(1, 1, 1, 1).Шрифт = Новый Шрифт(, , Истина, , , );
					ТабличныйДокумент.Присоединить(ОбластьДанных);
					Если ЕстьСкидки Тогда
						ОбластьСкидок.Параметры.СуммаБезСкидки = СокрЛП(Формат(ИтогоПоРазделу + ИтогоСкидкаПоРазделу, "ЧЦ=15; ЧДЦ=2"));
						ОбластьСкидок.Параметры.Скидка = СокрЛП(Формат(ИтогоСкидкаПоРазделу, "ЧЦ=15; ЧДЦ=2"));
						ОбластьСкидок.Область(1, 1, 1, 2).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
						ОбластьСкидок.Область(1, 1, 1, 2).Шрифт = Новый Шрифт(, , Истина, , , );
						ТабличныйДокумент.Присоединить(ОбластьСкидок);
					КонецЕсли;
					ОбластьСуммы.Параметры.Сумма = СокрЛП(CRM_ОбщегоНазначенияКлиентСервер.ФорматСумм(ИтогоПоРазделу));
					ОбластьСуммы.Область(1, 1, 1, 1).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
					ОбластьСуммы.Область(1, 1, 1, 1).Шрифт = Новый Шрифт(, , Истина, , , );
					ТабличныйДокумент.Присоединить(ОбластьСуммы);
					
				КонецЕсли;
			КонецЕсли;
			// Строки разделителей иерархии (заголовки).
			ОбластьНомера.Параметры.Ном = "";
			ТабличныйДокумент.Вывести(ОбластьНомера);
			ОбластьДанных.Параметры.Содержание  = ВыборкаЗапасы.Номенклатура;
			ОбластьДанных.Параметры.Номенклатура = ВыборкаЗапасы.Номенклатура;
			ОбластьДанных.Параметры.Количество = "";
			ОбластьДанных.Параметры.Цена = "";
			ОбластьДанных.Параметры.ЕдиницаИзмерения = "";
			ОбластьДанных.Область(1, 1, 1, 1).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Лево;
			ОбластьДанных.Область(1, 1, 1, 1).Шрифт = Новый Шрифт(, , Истина, , , );
			ТабличныйДокумент.Присоединить(ОбластьДанных);
			Если ЕстьСкидки Тогда
				ОбластьСкидок.Параметры.СуммаБезСкидки = "";
				ОбластьСкидок.Параметры.Скидка = "";
				ТабличныйДокумент.Присоединить(ОбластьСкидок);
			КонецЕсли;
			ОбластьСуммы.Параметры.Сумма = "";
			ТабличныйДокумент.Присоединить(ОбластьСуммы);
			
			МассивИтогов.Добавить(0);
			МассивИтоговСкидок.Добавить(0);
			Если НЕ ТипЗнч(ВыборкаЗапасы.Номенклатура) = Тип("Неопределено") Тогда 
				МассивРазделителей.Добавить(ВыборкаЗапасы.Номенклатура);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если МассивИтогов.Количество() > 0 Тогда
		ИтогоПоРазделу = МассивИтогов[МассивИтогов.Количество() - 1];
		ИтогоСкидкаПоРазделу = МассивИтоговСкидок[МассивИтоговСкидок.Количество() - 1];
		Разделитель = МассивРазделителей[МассивРазделителей.Количество() - 1];
		МассивИтогов.Удалить(МассивИтогов.Количество()-1);
		МассивИтоговСкидок.Удалить(МассивИтоговСкидок.Количество() - 1);
		МассивРазделителей.Удалить(МассивРазделителей.Количество() - 1);
		Если Разделитель.Итог Тогда
			// Последняя строка итогов по иерархии (итоги).
			ОбластьНомера.Параметры.Ном = "";
			ТабличныйДокумент.Вывести(ОбластьНомера);
			ОбластьДанных.Параметры.Содержание  = НСтр("ru='Итого по: ';en='Total by:'") + Строка(Разделитель);
			ОбластьДанных.Параметры.Номенклатура = Разделитель;
			ОбластьДанных.Параметры.Количество = "";
			ОбластьДанных.Параметры.Цена = "";
			ОбластьДанных.Параметры.ЕдиницаИзмерения = "";
			ОбластьДанных.Область(1, 1, 1, 1).Шрифт = Новый Шрифт(, , Истина, , , );
			ТабличныйДокумент.Присоединить(ОбластьДанных);
			Если ЕстьСкидки Тогда
				ОбластьСкидок.Параметры.СуммаБезСкидки = СокрЛП(Формат(ИтогоПоРазделу + ИтогоСкидкаПоРазделу, "ЧЦ=15; ЧДЦ=2"));
				ОбластьСкидок.Параметры.Скидка = СокрЛП(Формат(ИтогоСкидкаПоРазделу, "ЧЦ=15; ЧДЦ=2"));
				ОбластьСкидок.Область(1, 1, 1, 2).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
				ОбластьСкидок.Область(1, 1, 1, 2).Шрифт = Новый Шрифт(, , Истина, , , );
				ТабличныйДокумент.Присоединить(ОбластьСкидок);
			КонецЕсли;
			ОбластьСуммы.Параметры.Сумма = СокрЛП(Формат(ИтогоПоРазделу, "ЧЦ=15; ЧДЦ=2"));
			ОбластьСуммы.Область(1, 1, 1, 1).Шрифт = Новый Шрифт(, , Истина, , , );
			ТабличныйДокумент.Присоединить(ОбластьСуммы);
			
		КонецЕсли;
	КонецЕсли;
	
	// итоги
	ОбластьНомера = Макет.ПолучитьОбласть("Итого|НомерСтроки");
	ОбластьДанных = Макет.ПолучитьОбласть("Итого|Данные");
	ОбластьСкидок = Макет.ПолучитьОбласть("Итого|Скидка");
	ОбластьСуммы = Макет.ПолучитьОбласть("Итого|Сумма");
	
	ТабличныйДокумент.Вывести(ОбластьНомера);
	ТабличныйДокумент.Присоединить(ОбластьДанных);
	Если ЕстьСкидки Тогда
		ОбластьСкидок.Параметры.ВсегоБезСкидок = ИтогоБезСкидок;
		ОбластьСкидок.Параметры.ВсегоСкидок = ИтогоБезСкидок - ИтогоСумма;
		ТабличныйДокумент.Присоединить(ОбластьСкидок);
	КонецЕсли;
	ОбластьСуммы.Параметры.Всего = CRM_ОбщегоНазначенияКлиентСервер.ФорматСумм(ИтогоСумма);
	ТабличныйДокумент.Присоединить(ОбластьСуммы);
	
	// итоги НДС
	//Если УчитыватьНДС Тогда
		ОбластьНомера = Макет.ПолучитьОбласть("ИтогоНДС|НомерСтроки");
		ОбластьДанных = Макет.ПолучитьОбласть("ИтогоНДС|Данные");
		ОбластьСкидок = Макет.ПолучитьОбласть("ИтогоНДС|Скидка");
		ОбластьСуммы = Макет.ПолучитьОбласть("ИтогоНДС|Сумма");
		ТабличныйДокумент.Вывести(ОбластьНомера);
		ОбластьДанных.Параметры.НДС = ?(ВыборкаВариантИд.ЦенаВключаетНДС, НСтр("ru='В том числе НДС:';en='Including VAT:'"), НСтр("ru='Сумма НДС:'"));
		ТабличныйДокумент.Присоединить(ОбластьДанных);
		Если ЕстьСкидки Тогда
			ТабличныйДокумент.Присоединить(ОбластьСкидок);
		КонецЕсли;
		ОбластьСуммы.Параметры.ВсегоНДС = CRM_ОбщегоНазначенияКлиентСервер.ФорматСумм(ИтогоСуммаНДС);
		ТабличныйДокумент.Присоединить(ОбластьСуммы);
	//КонецЕсли;
	// сумма прописью
	СуммаКПрописи = ИтогоСумма + ?(ВыборкаВариантИд.ЦенаВключаетНДС, 0, ИтогоСуммаНДС);
	ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
	ОбластьМакета.Параметры.ИтоговаяСтрока = НСтр("ru='Всего наименований ';en='All items '") + Ном + НСтр("ru=', на сумму '") + CRM_ОбщегоНазначенияКлиентСервер.ФорматСумм(СуммаКПрописи, ВыборкаВариантИд.Валюта);
	ОбластьМакета.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаКПрописи, ВыборкаВариантИд.Валюта);
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	// заголовок таблицы
	Если ЗначениеЗаполнено(ОписаниеВарианта) Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("ОписаниеВарианта");
		ОбластьМакета.Параметры.ПредставлениеОписания = ОписаниеВарианта;
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЕсли; 
	
КонецФункции

Функция КППредставлениеСерий(Выборка) 

	Результат = "(";

	Если ЗначениеЗаполнено(Выборка.Характеристика) Тогда
		Результат = Результат + Выборка.Характеристика;
	КонецЕсли;

	Если ЗначениеЗаполнено(Выборка.Серия) Тогда
		Результат = ?(Результат = "(", Результат, Результат + "; ");
		Результат = Результат + Выборка.Серия;
	КонецЕсли;

	Результат = Результат + ")";

	Возврат ?(Результат = "()", "", " " + Результат)

КонецФункции // ПредставлениеСерий()

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеКоммерческоеПредложениеКлиенту(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КоммерческоеПредложениеКлиенту.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.КоммерческоеПредложениеКлиенту КАК КоммерческоеПредложениеКлиенту
	|ГДЕ
	|	КоммерческоеПредложениеКлиенту.Автор = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|	И НЕ КоммерческоеПредложениеКлиенту.УдалитьCRM_Автор = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)";
	
	РезультатЗапросаТаблица = Запрос.Выполнить().Выгрузить();
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, РезультатЗапросаТаблица.ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеКоммерческоеПредложениеКлиенту(Параметры) Экспорт
	
	ПроблемныхОбъектов = 0;
	ОбъектовОбработано = 0;
	ПолноеИмяОбъекта = "Документ.КоммерческоеПредложениеКлиенту";
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			
			Блокировка.Заблокировать();
			
			ОбъектКП = Выборка.Ссылка.ПолучитьОбъект();
			ОбъектКП.Автор = ОбъектКП.УдалитьCRM_Автор;
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ОбъектКП);
			
			ОбъектовОбработано = ОбъектовОбработано + 1;
			
			ЗафиксироватьТранзакцию();
		Исключение
			// Если не удалось обработать объект, повторяем попытку снова.
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			ОтменитьТранзакцию();
			
			ТекстОшибки = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось заполнить реквизит ""Автор"" в Коммерческом предложении клиенту: %1 по причине:
					|%2'"), Выборка.Ссылка, ТекстОшибки);
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				 УровеньЖурналаРегистрации.Предупреждение,
				, Выборка.Ссылка, ТекстСообщения);
		КонецПопытки;
	КонецЦикла;
	
	Если ОбъектовОбработано = 0 И ПроблемныхОбъектов <> 0 Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Процедуре CRM_Модуль_МетодыМодулейМенеджеровДокументов.ОбработатьДанныеКоммерческоеПредложениеКлиенту не удалось обработать некоторые объекты (пропущены): %1'"),
				ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	Иначе
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Информация, , ,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Процедура CRM_Модуль_МетодыМодулейМенеджеровДокументов.ОбработатьДанныеКоммерческоеПредложениеКлиенту обработала очередную порцию объектов: %1'"),
					ОбъектовОбработано));
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена =
		ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти // ОбновлениеИнформационнойБазы

#КонецОбласти

#КонецОбласти // СлужебныйПрограммныйИнтерфейс
