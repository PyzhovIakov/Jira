
#Область ПрограммныйИнтерфейс

//Вызывается при начальном заполнении справочника.
//
// Параметры:
//  КодыЯзыков - Массив - список языков конфигурации. Актуально для мультиязычных конфигураций.
//  Элементы   - ТаблицаЗначений - данные заполнения. Состав колонок соответствует набору реквизитов справочника.
//  ТабличныеЧасти - Структура - Ключ - Имя табличной части объекта.
//                               Значение - Выгрузка в таблицу значений пустой табличной части.
//
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт

	//++ Локализация
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ЕдиныйНалоговыйПлатеж";
	Элемент.ИдентификаторЭлемента = "ЕдиныйНалоговыйПлатеж";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ЕНВД";
	Элемент.ИдентификаторЭлемента = "ЕНВД";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ЕСХН";
	Элемент.ИдентификаторЭлемента = "ЕСХН";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ЗемельныйНалог";
	Элемент.ИдентификаторЭлемента = "ЗемельныйНалог";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НалогНаИмущество";
	Элемент.ИдентификаторЭлемента = "НалогНаИмущество";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НалогНаПрибыль_РегиональныйБюджет";
	Элемент.ИдентификаторЭлемента = "НалогНаПрибыль_РегиональныйБюджет";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НалогНаПрибыль_ФедеральныйБюджет";
	Элемент.ИдентификаторЭлемента = "НалогНаПрибыль_ФедеральныйБюджет";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НалогНаПрибыль_НалоговыйАгент";
	Элемент.ИдентификаторЭлемента = "НалогНаПрибыль_НалоговыйАгент";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НДС";
	Элемент.ИдентификаторЭлемента = "НДС";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НДС_ВвозимыеТовары";
	Элемент.ИдентификаторЭлемента = "НДС_ВвозимыеТовары";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НДС_НалоговыйАгент";
	Элемент.ИдентификаторЭлемента = "НДС_НалоговыйАгент";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НДФЛ";
	Элемент.ИдентификаторЭлемента = "НДФЛ";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НДФЛ_ИП";
	Элемент.ИдентификаторЭлемента = "НДФЛ_ИП";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПрочиеНалогиИСборы";
	Элемент.ИдентификаторЭлемента = "ПрочиеНалогиИСборы";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТорговыйСбор";
	Элемент.ИдентификаторЭлемента = "ТорговыйСбор";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТранспортныйНалог";
	Элемент.ИдентификаторЭлемента = "ТранспортныйНалог";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "УСН_Доходы";
	Элемент.ИдентификаторЭлемента = "УСН_Доходы";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "УСН_ДоходыМинусРасходы";
	Элемент.ИдентификаторЭлемента = "УСН_ДоходыМинусРасходы";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "УСН_МинимальныйНалог";
	Элемент.ИдентификаторЭлемента = "УСН_МинимальныйНалог";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПФРПоСуммарномуТарифу";
	Элемент.ИдентификаторЭлемента = "ПФРПоСуммарномуТарифу";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПФРСтраховаяЧасть";
	Элемент.ИдентификаторЭлемента = "ПФРСтраховаяЧасть";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПФРНакопительнаяЧасть";
	Элемент.ИдентификаторЭлемента = "ПФРНакопительнаяЧасть";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПФРДополнительныйТарифЛЭ";
	Элемент.ИдентификаторЭлемента = "ПФРДополнительныйТарифЛЭ";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПФРДополнительныйТарифШахтеры";
	Элемент.ИдентификаторЭлемента = "ПФРДополнительныйТарифШахтеры";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПФРЗаЗанятыхНаПодземныхИВредныхРаботах";
	Элемент.ИдентификаторЭлемента = "ПФРЗаЗанятыхНаПодземныхИВредныхРаботах";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах";
	Элемент.ИдентификаторЭлемента = "ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПФРСПревышения";
	Элемент.ИдентификаторЭлемента = "ПФРСПревышения";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ФФОМС";
	Элемент.ИдентификаторЭлемента = "ФФОМС";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТФОМС";
	Элемент.ИдентификаторЭлемента = "ТФОМС";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ФСС";
	Элемент.ИдентификаторЭлемента = "ФСС";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ФССНС";
	Элемент.ИдентификаторЭлемента = "ФССНС";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НДФЛДоходыКонтрагентов";
	Элемент.ИдентификаторЭлемента = "НДФЛДоходыКонтрагентов";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НДФЛДивиденды";
	Элемент.ИдентификаторЭлемента = "НДФЛДивиденды";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НДФЛДивидендыСотрудникам";
	Элемент.ИдентификаторЭлемента = "НДФЛДивидендыСотрудникам";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НДФЛДоначисленныйПоРезультатамПроверки";
	Элемент.ИдентификаторЭлемента = "НДФЛДоначисленныйПоРезультатамПроверки";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НДФЛПередачаЗадолженностиВНалоговыйОрган";
	Элемент.ИдентификаторЭлемента = "НДФЛПередачаЗадолженностиВНалоговыйОрган";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НДФЛПрочиеРасчетыСПерсоналом";
	Элемент.ИдентификаторЭлемента = "НДФЛПрочиеРасчетыСПерсоналом";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НДФЛСПревышения";
	Элемент.ИдентификаторЭлемента = "НДФЛСПревышения";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НДФЛДивидендыСПревышения";
	Элемент.ИдентификаторЭлемента = "НДФЛДивидендыСПревышения";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПФРДоПредельнойВеличины";
	Элемент.ИдентификаторЭлемента = "ПФРДоПредельнойВеличины";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НДС_ОбратноеОбложение";
	Элемент.ИдентификаторЭлемента = "НДС_ОбратноеОбложение";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "АУСН";
	Элемент.ИдентификаторЭлемента = "АУСН";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "СтраховыеВзносыЕдиныйТариф";
	Элемент.ИдентификаторЭлемента = "СтраховыеВзносыЕдиныйТариф";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОПСИностранныхРаботников";
	Элемент.ИдентификаторЭлемента = "ОПСИностранныхРаботников";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОМСИностранныхРаботников";
	Элемент.ИдентификаторЭлемента = "ОМСИностранныхРаботников";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОССИностранныхРаботников";
	Элемент.ИдентификаторЭлемента = "ОССИностранныхРаботников";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		НаименованиеПредопределенногоЭлемента(Элемент.ИмяПредопределенныхДанных), КодыЯзыков);
	//-- Локализация
	

КонецПроцедуры

// Наименование предопределенного элемента.
// 
// Параметры:
//  ИмяПредопределенного - Строка - Имя предопределенного элемента
// 
// Возвращаемое значение:
//  Строка - Наименование предопределенного элемента
Функция НаименованиеПредопределенногоЭлемента(ИмяПредопределенного) Экспорт
	//++ Локализация
	Если ИмяПредопределенного = "ЕдиныйНалоговыйПлатеж" Тогда
		Возврат "ru = 'Единый налоговый платеж'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "ЕНВД" Тогда
		Возврат "ru = 'ЕНВД'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "ЕСХН" Тогда
		Возврат "ru = 'ЕСХН'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "ЗемельныйНалог" Тогда
		Возврат "ru = 'Земельный налог'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "НалогНаИмущество" Тогда
		Возврат "ru = 'Налог на имущество организаций'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "НалогНаПрибыль_РегиональныйБюджет" Тогда
		Возврат "ru = 'Налог на прибыль, региональный бюджет'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "НалогНаПрибыль_ФедеральныйБюджет" Тогда
		Возврат "ru = 'Налог на прибыль, федеральный бюджет'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "НалогНаПрибыль_НалоговыйАгент" Тогда
		Возврат "ru = 'Налог на прибыль при исполнении обязанностей налогового агента'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "НДС" Тогда
		Возврат "ru = 'НДС'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "НДС_ВвозимыеТовары" Тогда
		Возврат "ru = 'НДС при импорте товаров из ЕАЭС'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "НДС_НалоговыйАгент" Тогда
		Возврат "ru = 'НДС при исполнении обязанностей налогового агента'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "НДФЛ" Тогда
		Возврат "ru = 'НДФЛ при исполнении обязанностей налогового агента'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "НДФЛ_ИП" Тогда
		Возврат "ru = 'НДФЛ индивидуального предпринимателя '"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "ПрочиеНалогиИСборы" Тогда
		Возврат "ru = 'Прочие налоги и сборы'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "ТорговыйСбор" Тогда
		Возврат "ru = 'Торговый сбор'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "ТранспортныйНалог" Тогда
		Возврат "ru = 'Транспортный налог организаций'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "УСН_Доходы" Тогда
		Возврат "ru = 'Налог при УСН (доходы)'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "УСН_ДоходыМинусРасходы" Тогда
		Возврат "ru = 'Налог при УСН (доходы минус расходы)'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "УСН_МинимальныйНалог" Тогда
		Возврат "ru = 'Минимальный налог УСН'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "ПФРПоСуммарномуТарифу" Тогда
		Возврат "ru = 'ПФР - по суммарному тарифу с 1 января 2014 года'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "ПФРСтраховаяЧасть" Тогда
		Возврат "ru = 'Страховые взносы в ПФР'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "ПФРНакопительнаяЧасть" Тогда
		Возврат "ru = 'Страховые взносы в ПФР, накопительная часть (до 2014 г.)'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "ПФРДополнительныйТарифЛЭ" Тогда
		Возврат "ru = 'Взносы на выплату доплат к пенсии членам летных экипажей'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "ПФРДополнительныйТарифШахтеры" Тогда
		Возврат "ru = 'Взносы на выплату доплат к пенсии шахтерам'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "ПФРЗаЗанятыхНаПодземныхИВредныхРаботах" Тогда
		Возврат "ru = 'Взносы в ПФР (дополнительный тариф за занятых на работах с вредными условиями труда)'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах" Тогда
		Возврат "ru = 'Взносы в ПФР (дополнительный тариф за занятых на работах с тяжелыми условиями труда)'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "ПФРСПревышения" Тогда
		Возврат "ru = 'ПФР - с базы сверх предельной величины, с 1 января 2016 года'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "ФФОМС" Тогда
		Возврат "ru = 'Страховые взносы в ФФОМС'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "ТФОМС" Тогда
		Возврат "ru = 'ТФОМС'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "ФСС" Тогда
		Возврат "ru = 'Страховые взносы в ФСС'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "ФССНС" Тогда
		Возврат "ru = 'Страховые взносы от несчастных случаев'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "НДФЛДоходыКонтрагентов" Тогда
		Возврат "ru = 'НДФЛ с доходов контрагентов'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "НДФЛДивиденды" Тогда
		Возврат "ru = 'НДФЛ с дивидендов'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "НДФЛДивидендыСотрудникам" Тогда
		Возврат "ru = 'НДФЛ с дивидендов работникам'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "НДФЛДоначисленныйПоРезультатамПроверки" Тогда
		Возврат "ru = 'НДФЛ, доначисленный по результатам проверки'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "НДФЛПередачаЗадолженностиВНалоговыйОрган" Тогда
		Возврат "ru = 'НДФЛ передача задолженности в налоговый орган'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "НДФЛПрочиеРасчетыСПерсоналом" Тогда
		Возврат "ru = 'НДФЛ с доходов по прочим операциям с персоналом'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "НДФЛСПревышения" Тогда
		Возврат "ru = 'НДФЛ с доходов свыше предельной величины, исчисленный налоговым агентом'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "НДФЛДивидендыСПревышения" Тогда
		Возврат "ru = 'НДФЛ с дивидендов свыше предельной величины'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "ПФРДоПредельнойВеличины" Тогда
		Возврат "ru = 'ПФР - с базы до предельной величины'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "НДС_ОбратноеОбложение" Тогда
		Возврат "ru = 'НДС налогового агента по отдельным видам товаров'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "АУСН" Тогда
		Возврат "ru = 'Налог при АУСН'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "СтраховыеВзносыЕдиныйТариф" Тогда
		Возврат "ru = 'Страховые взносы по единому тарифу'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "ОПСИностранныхРаботников" Тогда
		Возврат "ru = 'Взносы на пенсионное страхование иностранных работников'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "ОМСИностранныхРаботников" Тогда
		Возврат "ru = 'Взносы на медицинское страхование иностранных работников'"; // @НСтр-1
	ИначеЕсли ИмяПредопределенного = "ОССИностранныхРаботников" Тогда
		Возврат "ru = 'Взносы на социальное страхование иностранных работников'"; // @НСтр-1
	КонецЕсли;
	//-- Локализация
	
КонецФункции

//++ Локализация

// Возвращает список предопределенных видов НДФЛ налогового агента.
// 
// Возвращаемое значение:
//  Массив из СправочникСсылка.ВидыНалоговВзносов - НДФЛ налогового агента
//
Функция НДФЛНалоговогоАгента() Экспорт
	
	ВидовНалогов = Новый Массив;
	
	// НДФЛ налогового агента
	ВидовНалогов.Добавить(Справочники.ВидыНалоговВзносов.НДФЛ);
	ВидовНалогов.Добавить(Справочники.ВидыНалоговВзносов.НДФЛДивиденды);
	ВидовНалогов.Добавить(Справочники.ВидыНалоговВзносов.НДФЛДивидендыСотрудникам);
	ВидовНалогов.Добавить(Справочники.ВидыНалоговВзносов.НДФЛДоначисленныйПоРезультатамПроверки);
	ВидовНалогов.Добавить(Справочники.ВидыНалоговВзносов.НДФЛДоходыКонтрагентов);
	ВидовНалогов.Добавить(Справочники.ВидыНалоговВзносов.НДФЛПередачаЗадолженностиВНалоговыйОрган);
	ВидовНалогов.Добавить(Справочники.ВидыНалоговВзносов.НДФЛПрочиеРасчетыСПерсоналом);
	ВидовНалогов.Добавить(Справочники.ВидыНалоговВзносов.НДФЛСПревышения);
	ВидовНалогов.Добавить(Справочники.ВидыНалоговВзносов.НДФЛДивидендыСПревышения);
	
	Возврат ВидовНалогов;
	
КонецФункции

// Возвращает список предопределенных видов НДФЛ индивидуального предпринимателя.
// 
// Возвращаемое значение:
//  Массив из СправочникСсылка.ВидыНалоговВзносов - НДФЛ предпринимателя
//
Функция НДФЛПредпринимателя() Экспорт
	
	ВидыНалогов = Новый Массив;
	
	// НДФЛ предпринимателя
	ВидыНалогов.Добавить(Справочники.ВидыНалоговВзносов.НДФЛ_ИП);
	
	Возврат ВидыНалогов;

КонецФункции

// Возвращает КБК с учетом вида налогового обязательства
//
// Параметры:
//   ТипНалога                  - СправочникСсылка.ВидыНалоговВзносов
//   ВидНалоговогоОбязательства - ПеречислениеСсылка.ВидыПлатежейВГосБюджет
//   Период                     - Дата
//
// Возвращаемое значение:
//   Строка
//
Функция КБКПоВидуНалоговогоОбязательства(ТипНалога, Знач ВидНалоговогоОбязательства = Неопределено, Знач Период = Неопределено) Экспорт
	
	КБК = КБКПоТипуНалога(ТипНалога);
	Если ПустаяСтрока(КБК) Тогда
		Возврат "";
	КонецЕсли;
	
	
	Возврат КБК;
	
КонецФункции

// Возвращает вид налога по КБК, если определить не удалось возвращает ПрочиеНалогиИСборы
//
// Параметры:
//   КодБК - Строка
// 
// Возвращаемое значение:
//   СправочникСсылка.ВидыНалоговВзносов
//
Функция ТипНалогаПоКБК(Знач КодБК) Экспорт
	
	ВидНалога = Справочники.ВидыНалоговВзносов.ПрочиеНалогиИСборы;
	Если НЕ ПлатежиВБюджетКлиентСервер.КБКЗадан(КодБК) Тогда
		Возврат ВидНалога;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыНалоговВзносов.Ссылка
	|ИЗ
	|	Справочник.ВидыНалоговВзносов КАК ВидыНалоговВзносов
	|ГДЕ
	|	ВидыНалоговВзносов.Предопределенный";
	Выборка = Запрос.Выполнить().Выбрать();
	ШаблонСравнения = ШаблонСравненияКБК(КодБК);
	Пока Выборка.Следующий() Цикл
		Если ШаблонСравнения = ШаблонСравненияКБК(КБКПоТипуНалога(Выборка.Ссылка)) Тогда
			ВидНалога = Выборка.Ссылка;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ВидНалога;
	
КонецФункции

//-- Локализация

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ФормаВыбораПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
//++ Локализация


//-- Локализация

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ Локализация
Функция КБКПоТипуНалога(ТипНалога)
	
	КодБК = "";
	Если ТипНалога = Справочники.ВидыНалоговВзносов.ЕдиныйНалоговыйПлатеж Тогда
		КодБК = "18201061201010000510";	// ЕдиныйНалоговыйПлатеж
	
	
	КонецЕсли;
	
	Возврат КодБК;
	
КонецФункции


Функция ШаблонСравненияКБК(КБК)
	
	ГраницыАдминистратораКБК  = ПлатежиВБюджетКлиентСервер.РасположениеЭлементаКБК("КодГлавногоАдминистратора");
	ГраницыПеременнойЧастиКБК = ПлатежиВБюджетКлиентСервер.РасположениеЭлементаКБК("КодПодвидаДоходов");
	ШаблонКБК = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", ГраницыАдминистратораКБК.Длина)
		+ Сред(КБК, ГраницыАдминистратораКБК.Начало + ГраницыАдминистратораКБК.Длина);
	ШаблонКБК = Лев(ШаблонКБК, ГраницыПеременнойЧастиКБК.Начало - 1)
		+ СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", ГраницыПеременнойЧастиКБК.Длина)
		+ Сред(ШаблонКБК, ГраницыПеременнойЧастиКБК.Начало + ГраницыПеременнойЧастиКБК.Длина);
	
	Возврат ШаблонКБК;
	
КонецФункции
//-- Локализация

#КонецОбласти
