///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

// @strict-types
#Если Не ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Отображает сообщение о том, что функциональность не доступна в мобильном клиенте
//
Процедура СообщитьФункциональностьПокаНеДоступна() Экспорт
	
	ТекстСообщения = НСтр("ru = 'Функциональность в мобильном клиенте пока недоступна.
		|Воспользуйтесь веб-клиентом или тонким клиентом'");

#Если Сервер Тогда
	ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
#Иначе
	ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
#КонецЕсли

КонецПроцедуры

#Область ОформлениеЭлементов

// Задает базовые свойства для кнопки на мобильном клиенте.
//
// Параметры:
//  Кнопка - КнопкаФормы - Кнопка для которой необходимо установить свойства;
//
Процедура ОформитьБазовуюКнопку(Кнопка) Экспорт
	
	Если Кнопка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Кнопка.Ширина = 10;
	Кнопка.Высота = 1;
	
	Кнопка.РастягиватьПоГоризонтали = Истина;
	Кнопка.РастягиватьПоВертикали = Ложь;
	
	Кнопка.Фигура = ФигураКнопки.Овал;
	Кнопка.ОтображениеФигуры = ОтображениеФигурыКнопки.Всегда;
	Кнопка.Отображение = ОтображениеКнопки.Текст;
	Кнопка.АвтоМаксимальнаяВысота = Ложь;

КонецПроцедуры

// Задает свойства для элемента формы.
//
// Параметры:
//  ЭлементыСтиля - Структура - Закэшированные элементы стиля с ключами:
//	 * ШрифтАкцентнойКнопки 				- Шрифт
//	 * ШрифтДополнительнойКнопки 		- Шрифт
//	 * ЦветАктивнойДополнительнойКнопки 	- Цвет
//	 * ЦветАкцента						- Цвет
//	 * ЦветАкцентаОтрицательный			- Цвет
//	 * ЦветДополнительнойКнопки			- Цвет
//  Элемент - ПолеФормы - Кнопка для которой необходимо установить свойства
//  Активность - Булево - Определяет активность элемента;
//
Процедура ОформитьПроизвольныйЭлементПоСостоянию(ЭлементыСтиля, Элемент, Активность) Экспорт
	
	Если Элемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элемент.Шрифт = ЭлементыСтиля.ШрифтДополнительнойКнопки;

	Элемент.ЦветТекста = WebЦвета.Черный;

	Элемент.ЦветФона = ?(Активность,
		ЭлементыСтиля.ЦветАктивнойДополнительнойКнопки,
		ЭлементыСтиля.ЦветДополнительнойКнопки);

	Элемент.ЦветРамки= ?(Активность,
		ЭлементыСтиля.ЦветАктивнойДополнительнойКнопки,
		ЭлементыСтиля.ЦветДополнительнойКнопки);
	
КонецПроцедуры

// Задает свойства для элемента формы.
//
// Параметры:
//  ЭлементыСтиля - Структура - Закэшированные элементы стиля
//  Кнопка - КнопкаФормы - Кнопка для которой необходимо установить свойства
//  Положительная - Булево - Определяет цвет элемента;
//
Процедура ОформитьАкцентнуюКнопку(ЭлементыСтиля, Кнопка, Положительная = Истина) Экспорт
	
	Если Кнопка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОформитьБазовуюКнопку(Кнопка);

	Кнопка.Шрифт = ЭлементыСтиля.ШрифтАкцентнойКнопки;
	Кнопка.ЦветТекста = WebЦвета.Белый;
	
	ЦветКнопки = ?(Положительная = Истина,
		ЭлементыСтиля.ЦветАкцента,
		ЭлементыСтиля.ЦветАкцентаОтрицательный);
	
	Кнопка.ЦветФона = ЦветКнопки;
	Кнопка.ЦветРамки = ЦветКнопки;
	
КонецПроцедуры

// Задает свойства для элемента формы.
//
// Параметры:
//  ЭлементыСтиля - Структура - Закэшированные элементы стиля
//  Кнопка - Кнопка - Кнопка для которой необходимо установить свойства;
//
Процедура ОформитьДополнительнуюКнопку(ЭлементыСтиля, Кнопка) Экспорт
	
	Если Кнопка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОформитьБазовуюКнопку(Кнопка);

	Кнопка.Шрифт = ЭлементыСтиля.ШрифтАкцентнойКнопки;
	Кнопка.ЦветТекста = WebЦвета.Черный;
	
	ЦветКнопки = ЭлементыСтиля.ЦветДополнительнойКнопки;
	
	Кнопка.ЦветФона = ЦветКнопки;

	Кнопка.ЦветРамки = ЦветКнопки;
	
КонецПроцедуры

#КонецОбласти // ОформлениеЭлементов

#Область АдаптацияФорм

#Область ТекущиеДелаПоЭДОЛегкийИнтерфейс

//Активирует страницу формы ТекущиеДелаПоЭДОЛегкийИнтерфейс
//Параметры:
// Форма - ФормаКлиентскогоПриложения - Адаптируемая форма
// СведенияОРазделе - Структура - структура, содержащая сведения о разделе с ключами:
//  * ИмяСтраницы - Строка - Имя элемента страницы для переключения
//  * ИмяКоманды - Строка - Имя команды переключения страницы
//  * ЗаголовокКоманды - Строка - Заголовок команды переключения
//  * ИмяСписка - Строка - Имя динамического списка
//  * ИмяГруппыКолонокСписка - Строка - Имя группы колонок списка
//  * ИсключаемыеКолонкиСписка - Строка - Исключаемые колонки списка через запятую
//  * ЗаголовокФормы - Строка - Заголовок формы, при актвации страницы
//  * ЭтоВходящиеИлиИсходящие - Булево - Признак входяище или исходящие документы
//
Процедура АктивироватьСтраницуФормыТекущиеДелаПоЭДОЛегкийИнтерфейс(Форма, СведенияОРазделе) Экспорт

	//@skip-check bsl-legacy-check-string-literal
	СведенияОбЭлементахФормы = Форма["МК_СведенияОбЭлементахФормы"];
	Если СведенияОбЭлементахФормы = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Элементы = Форма.Элементы;

	Форма.Заголовок = СведенияОРазделе.ЗаголовокФормы;

	Форма.ТекущийРаздел = СведенияОРазделе.ИмяСписка;
	
	СтраницаДляАктивации = Элементы[СведенияОРазделе.ИмяСтраницы];
	
	Если СведенияОРазделе.ЭтоВходящиеИлиИсходящие Тогда
		
		Если Элементы.Страницы.ТекущаяСтраница <> Элементы.СтраницаВходящиеИсходящие Тогда
			Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаВходящиеИсходящие;
		КонецЕсли;
		
		Если Элементы.СтраницыВходящиеИсходящие.ТекущаяСтраница <> СтраницаДляАктивации Тогда
			
			Элементы.СтраницыВходящиеИсходящие.ТекущаяСтраница = СтраницаДляАктивации;
		КонецЕсли;
		
	Иначе
		Элементы.Страницы.ТекущаяСтраница = СтраницаДляАктивации;
	КонецЕсли;

	СброситьОформлениеПереключателейСтраницФормыТекущиеДелаПоЭДОЛегкийИнтерфейс(Форма);
	
	ОформитьПроизвольныйЭлементПоСостоянию(СведенияОбЭлементахФормы.ЭлементыСтиля,
		Элементы[СведенияОРазделе.ИмяКоманды],
		Истина);

КонецПроцедуры

//Сбрасывает оформление у переключателей страниц
//Параметры:
// Форма - ФормаКлиентскогоПриложения - АдаптируемаяФорма
//
Процедура СброситьОформлениеПереключателейСтраницФормыТекущиеДелаПоЭДОЛегкийИнтерфейс(Форма) Экспорт

	//@skip-check bsl-legacy-check-string-literal
	СведенияОбЭлементахФормы = Форма["МК_СведенияОбЭлементахФормы"];
	Если СведенияОбЭлементахФормы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы = Форма.Элементы;
	
	Для Каждого СведенияОРазделе Из СведенияОбЭлементахФормы.СведенияОРазделах Цикл
		ОформитьПроизвольныйЭлементПоСостоянию(СведенияОбЭлементахФормы.ЭлементыСтиля,
			Элементы[СведенияОРазделе.Значение["ИмяКоманды"]],
			Ложь);
	КонецЦикла;

КонецПроцедуры

//Оформляет кнопки переключателей страниц
//Параметры:
// Форма - ФормаКлиентскогоПриложения - АдаптируемаяФорма
//
Процедура ОформитьПереключателиСтраницФормыТекущиеДелаПОЭДОЛегкийИнтерфейс(Форма) Экспорт
	
	//@skip-check bsl-legacy-check-string-literal
	СведенияОбЭлементахФормы = Форма["МК_СведенияОбЭлементахФормы"];
	Если СведенияОбЭлементахФормы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы = Форма.Элементы;
	
	Для Каждого СведенияОРазделе Из СведенияОбЭлементахФормы.СведенияОРазделах Цикл
		ОформитьДополнительнуюКнопку(СведенияОбЭлементахФормы.ЭлементыСтиля,
			Элементы[СведенияОРазделе.Значение["ИмяКоманды"]]);
	КонецЦикла;

КонецПроцедуры

// Настраивает отображение кнопки Фильтры в командной панеле
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - Форма, содержащая фильтры
// 	КнопкаПоказатьСкрытьФильтры - ПолеФормы - Кнопка (элемент формы) для настройки
//	ИмяКонтейнераФильтров - Строка - Имя контейнера со всеми фильтрами
//
Процедура НастроитьКнопкуФильтры(Форма, КнопкаПоказатьСкрытьФильтры, ИмяКонтейнераФильтров) Экспорт

	Если Форма.Количествофильтров > 0 Тогда
		КнопкаПоказатьСкрытьФильтры.Картинка = БиблиотекаКартинок.ФильтрВМобильномЭДО_Включен;
	Иначе
		КнопкаПоказатьСкрытьФильтры.Картинка = БиблиотекаКартинок.ФильтрВМобильномЭДО;
	КонецЕсли;
	
	КнопкаПоказатьСкрытьФильтры.Пометка = Форма.Элементы[ИмяКонтейнераФильтров].Видимость;

КонецПроцедуры

#КонецОбласти // ТекущиеДелаПоЭДОЛегкийИнтерфейс

#КонецОбласти // АдаптацияФорм

#КонецОбласти // ПрограммныйИнтерфейс

#КонецЕсли