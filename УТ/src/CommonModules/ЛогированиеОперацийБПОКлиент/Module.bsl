///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Выполняет обновление параметров логирования подключаемого оборудования, данные обновляются
// из процедуры ПриОпределенииПараметровЛогированияПодключаемогоОборудования.
Процедура ОбновитьПараметрыЛогированияОперацийСПодключаемымОборудованием() Экспорт
	
	Параметры = ЛогированиеОперацийБПОСлужебныйВызовСервера.ПараметрыЛогированияОперацийСОборудованием();
	ПодключаемоеОборудование = МенеджерОборудованияКлиент.ПодключаемоеОборудование();
	ПодключаемоеОборудование.СистемаЛогирования = НоваяСистемаЛогирования(Параметры);
	
КонецПроцедуры

// Открытие форму списка операций проверки КМ
//
// Параметры:
//  ПараметрКоманды - Произвольный - источник, в котором реализована команда
//  ПараметрыВыполненияКоманды - ПараметрыВыполненияКоманды
//
Процедура ОткрытьОперацииСОборудованием(ПараметрКоманды, ПараметрыВыполненияКоманды) Экспорт
	
	// ++ НеМобильноеПриложение
#Если Не МобильноеПриложениеКлиент Тогда 
	// Замер производительности.
	КлючеваяОперация = "ОбщийМодуль.ЛогированиеОперацийБПОКлиент.ОткрытьОперацииСОборудованием";
	ОбщегоНазначенияБПОКлиент.ЗамерВремениБПО(КлючеваяОперация, Неопределено, Ложь, Истина);
#КонецЕсли
	
	ПараметрыФормы = Новый Структура();
	ОткрытьФорму("РегистрСведений.ОперацииСПодключаемымОборудованием.ФормаСписка", 
		ПараметрыФормы, 
		ПараметрыВыполненияКоманды.Источник, 
		ПараметрыВыполненияКоманды.Уникальность, 
		ПараметрыВыполненияКоманды.Окно);
	// -- НеМобильноеПриложение
	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция НоваяЗаписьЛога() Экспорт
	
	Результат = Новый Структура();
	Результат.Вставить("Оборудование", Неопределено);
	Результат.Вставить("Дата", Неопределено);
	Результат.Вставить("НомерОперации",0);
	Результат.Вставить("ВходящиеПараметры", Новый Структура());
	Результат.Вставить("ИсходящиеПараметры", Новый Структура());
	Результат.Вставить("ИдентификаторыПараметров", "");
	Результат.Вставить("Таймкод", 0);
	Результат.Вставить("ВремяВыполнения", 0);
	Результат.Вставить("ТипЗаписи", "");
	Результат.Вставить("РевизияИнтерфейса", 0);
	Результат.Вставить("ВерсияДрайвера", "");
	Результат.Вставить("ВерсияКомпонента", "");
	Результат.Вставить("Операция", "");
	Результат.Вставить("ПредставлениеОперации", "");
	Результат.Вставить("ИДУстройства", "");
	Результат.Вставить("КодОшибки", 0);
	Результат.Вставить("ТекстОшибки", "");
	Результат.Вставить("Результат", Ложь);
	Возврат Результат
	
КонецФункции

Функция НоваяСистемаЛогирования(Параметры) Экспорт
	
	Если Параметры = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если Параметры.ИспользоватьЛогирование Тогда
		Результат = Новый Структура();
		Результат.Вставить("ИнтервалПереносаНаСервер", 60);
		Результат.Вставить("ПоследнийПереносНаСервер", 0);
		Результат.Вставить("ТипыОборудования", Новый Структура());
		Результат.Вставить("НомерОперации", 0);
		Результат.Вставить("Записи", Новый Массив());
		Результат.Вставить("ТекущаяЗапись", Неопределено);
		Результат.Вставить("Модуль", ЭтотОбъект);
		Результат.Вставить("ОписанияОпераций", Новый Соответствие());
		СформироватьОписаниеОпераций(Результат);
		
		Результат.ИнтервалПереносаНаСервер = Параметры.ИнтервалПереносаНаСервер;
		МинимальныйИнтервалПереноса = 60;
		Если Результат.ИнтервалПереносаНаСервер < МинимальныйИнтервалПереноса Тогда
			Результат.ИнтервалПереносаНаСервер = МинимальныйИнтервалПереноса;
		КонецЕсли;
		ПодключитьОбработчикОжидания("ПодключаемоеОборудование_ЗаписатьЛогНаСервере", Результат.ИнтервалПереносаНаСервер);
	Иначе 
		Результат = Неопределено;
		ОтключитьОбработчикОжидания("ПодключаемоеОборудование_ЗаписатьЛогНаСервере");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция НачатьЗаписьЛогаОперации(СистемаЛогирования, ПараметрыПодключения, Операция, ЗначенияПараметров = Неопределено, ИдентификаторыСтруктуры = "") Экспорт
	
	Запись = НоваяЗаписьЛога();
	Запись.Дата = ТекущаяДата();
	Запись.Таймкод = ТекущаяУниверсальнаяДатаВМиллисекундах();
	СистемаЛогирования.НомерОперации = СистемаЛогирования.НомерОперации + 1;
	Запись.НомерОперации = СистемаЛогирования.НомерОперации;
	Если ПараметрыПодключения <> Неопределено Тогда
		Запись.Оборудование = ПараметрыПодключения.ИдентификаторУстройства;
		Если ПараметрыПодключения.Свойство("ИДУстройства") Тогда
			Запись.ИДУстройства = ПараметрыПодключения.ИДУстройства;
		КонецЕсли;
		Запись.ВерсияДрайвера = ПараметрыПодключения.ВерсияДрайвера;
		Запись.РевизияИнтерфейса = ПараметрыПодключения.РевизияИнтерфейса;
	КонецЕсли;
	Запись.Операция = Операция;
	
	ОписаниеОперации = ОписаниеКоманды(СистемаЛогирования, Операция);
	Если ОписаниеОперации = Неопределено Тогда
		Запись.ПредставлениеОперации = Операция;
	Иначе
		Запись.ПредставлениеОперации = ?(ПустаяСтрока(ОписаниеОперации.ОперацияЛокализация), ОписаниеОперации.Операция, ОписаниеОперации.ОперацияЛокализация);
	КонецЕсли;
	
	Если ЗначенияПараметров <> Неопределено Тогда
		ТипЗначенияПараметров = ТипЗнч(ЗначенияПараметров);
		Если ТипЗначенияПараметров = Тип("Массив") Тогда
			ЗаписатьПараметрыВходящихИзМассива(СистемаЛогирования, Запись, ЗначенияПараметров);
		ИначеЕсли ТипЗначенияПараметров= Тип("Структура") Тогда
			Если ПустаяСтрока(ИдентификаторыСтруктуры) Тогда
				Запись.ВходящиеПараметры = ЗначенияПараметров;
			Иначе
				ЗаписатьПараметрыВходящихИзСтруктуры(СистемаЛогирования, Запись, ЗначенияПараметров, ИдентификаторыСтруктуры);
			КонецЕсли;
		Иначе
			Запись.ВходящиеПараметры.Вставить(ИдентификаторыСтруктуры, ЗначенияПараметров);
		КонецЕсли;
	КонецЕсли;
	
	СистемаЛогирования.ТекущаяЗапись = Запись;
	Возврат Запись;
	
КонецФункции

Процедура ЗавершитьЗаписьЛогаОперации(СистемаЛогирования, Запись, РезультатВызова, ИдентификаторыИсходящихПараметров = "") Экспорт
	
	Если Запись = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Запись.ВремяВыполнения = ТекущаяУниверсальнаяДатаВМиллисекундах() - Запись.Таймкод;
	Запись.ТипЗаписи = "Инфо";
	Если РезультатВызова = Неопределено Тогда
		
		Если Запись <> Неопределено Тогда
			Запись.ТипЗаписи = "Исключение";
			Запись.ТекстОшибки = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			Запись.Результат = Ложь;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(РезультатВызова) = Тип("РезультатАсинхВызоваВнешнейКомпоненты") Тогда
		
		Если ТипЗнч(РезультатВызова.Значение) = Тип("Булево") Тогда
			Запись.Результат = РезультатВызова.Значение;
			ЗаписатьПараметрыИсходящихИзМассива(СистемаЛогирования, Запись, РезультатВызова.Параметры);
			Если ПустаяСтрока(Запись.ИДУстройства) И Запись.ИсходящиеПараметры.Свойство("DeviceID") Тогда
				Запись.ИДУстройства = Запись.ИсходящиеПараметры.DeviceID;
			КонецЕсли;
			Если Не Запись.Результат Тогда
				Запись.ТипЗаписи = "Ошибка";
			КонецЕсли;
			
		Иначе
			Запись.Результат = Истина;
			Запись.ИсходящиеПараметры = Новый Структура("Результат", РезультатВызова.Значение);
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(РезультатВызова) = Тип("Булево") Тогда
		Запись.Результат = РезультатВызова;
		
	ИначеЕсли ТипЗнч(РезультатВызова) = Тип("Структура") Тогда
		Если РезультатВызова.Свойство("Подключено") Тогда
			Запись.Результат = РезультатВызова.Подключено;
		Иначе
			Запись.Результат = Истина;
		КонецЕсли;
		ЗаписатьПараметрыИсходящихИзСтруктуры(СистемаЛогирования, Запись, РезультатВызова, ИдентификаторыИсходящихПараметров);
		
	Иначе
		Запись.Результат = Истина;
		
	КонецЕсли;
	
	СистемаЛогирования.Записи.Добавить(Запись);
	
КонецПроцедуры

// Записать ошибку драйвера в лог операции.
// 
// Параметры:
//  СистемаЛогирования - Структура
//  Запись  - Структура
//  РезультатВызова - РезультатАсинхВызоваВнешнейКомпоненты
//
Процедура ЗаписатьОшибкуДрайвераВЛогОперации(СистемаЛогирования, Запись, РезультатВызова) Экспорт
	
	Если Запись <> Неопределено Тогда
		Запись.КодОшибки = РезультатВызова.Значение;
		Запись.Результат = Ложь;
		Если РезультатВызова.Параметры.Количество()>0 Тогда
			Запись.ТекстОшибки = РезультатВызова.Параметры[0];
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаписатьОшибкуВЛогОперации(СистемаЛогирования, Запись, ОписаниеОшибки) Экспорт
	
	Если Запись <> Неопределено Тогда
		Запись.Результат = Ложь;
		Запись.ТекстОшибки = ОписаниеОшибки;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаписатьЛогНаСервере() Экспорт
	
	СистемаЛогирования = ОбщегоНазначенияБПОКлиент.СистемаЛогирования();
	Если СистемаЛогирования = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СистемаЛогирования.Записи.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Записи = СистемаЛогирования.Записи;
	СистемаЛогирования.Записи = Новый Массив();
	ЛогированиеОперацийБПОСлужебныйВызовСервера.ЗаписатьЛогНаСервере(Записи);
	
	СистемаЛогирования.ПоследнийПереносНаСервер = ТекущаяУниверсальнаяДатаВМиллисекундах();
	
КонецПроцедуры

Процедура ЗаписатьЛогНаСервереПриЗавершении(Отказ, ТекстПредупреждения) Экспорт
	
	СистемаЛогирования = ОбщегоНазначенияБПОКлиент.СистемаЛогирования();
	Если СистемаЛогирования = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СистемаЛогирования.Записи.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	ТекстПредупреждения = НСтр("ru = 'Не до конца выполнена запись операций работы с подключаемым оборудованием.
								|Для записи всех операций нажмите кнопку ""Продолжить работу"", а затем повторно выполните завершение работы приложения.'");
	
	ПодключитьОбработчикОжидания("ПодключаемоеОборудование_ЗаписатьЛогНаСервереПриЗавершении", 0.1, Истина);
	
КонецПроцедуры

Процедура ЗавершитьЗаписьЛогаИсключением(СистемаЛогирования, Запись, ТекстОшибки) Экспорт
	
	Если Запись = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Запись.ВремяВыполнения = ТекущаяУниверсальнаяДатаВМиллисекундах() - Запись.Таймкод;
	Запись.ТипЗаписи = "Исключение";
	Запись.ТекстОшибки = ТекстОшибки;
	Запись.Результат = Ложь;
	
	СистемаЛогирования.Записи.Добавить(Запись);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОписаниеКоманды(СистемаЛогирования, Команда, МаксимальнаяРевизия = 0)
	
	Описание = СистемаЛогирования.ОписанияОпераций.Получить(Команда);
	Если Описание <> Неопределено Тогда
		
		Если МаксимальнаяРевизия <> 0 Тогда
			Ревизия = НайтиВМассивеСтруктурЗначениеБольшеЧем(Описание.Ревизии, "НомерРевизии", МаксимальнаяРевизия);
			Если Ревизия <> Неопределено Тогда
				Возврат Ревизия;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	Возврат Описание;
	
КонецФункции

Процедура ЗаписатьПараметрыВходящихИзСтруктуры(СистемаЛогирования, Запись, ЗначенияПараметров, ИдентификаторыПараметров)
	
	Операция = Запись.Операция;
	Ревизия  = Запись.РевизияИнтерфейса;
	Описание = ОписаниеКоманды(СистемаЛогирования, Операция, Ревизия);
	Если Описание = Неопределено Тогда
		ИдентификаторыЛогирования = Новый Массив();
	Иначе
		ИдентификаторыЛогирования = Описание.ИдентификаторыВходящих;
	КонецЕсли;
	Параметры = Запись.ВходящиеПараметры;
	ЗаписатьПараметрыИзСтруктуры(ИдентификаторыЛогирования, Параметры, ЗначенияПараметров, ИдентификаторыПараметров);
	
КонецПроцедуры

Процедура ЗаписатьПараметрыИсходящихИзСтруктуры(СистемаЛогирования, Запись, ЗначенияПараметров, ИдентификаторыПараметров)
	
	Операция = Запись.Операция;
	Ревизия  = Запись.РевизияИнтерфейса;
	Описание = ОписаниеКоманды(СистемаЛогирования, Операция, Ревизия);
	Если Описание = Неопределено Тогда
		ИдентификаторыЛогирования = Новый Массив();
	Иначе
		ИдентификаторыЛогирования = Описание.ИдентификаторыИсходящих;
	КонецЕсли;
	Параметры = Запись.ИсходящиеПараметры;
	ЗаписатьПараметрыИзСтруктуры(ИдентификаторыЛогирования, Параметры, ЗначенияПараметров, ИдентификаторыПараметров);
	
КонецПроцедуры

Процедура ЗаписатьПараметрыИзСтруктуры(ИдентификаторыЛогирования, Параметры, ЗначенияПараметров, ИдентификаторыПараметров)
	
	ИдентификаторыСтруктуры = СтрРазделить(ИдентификаторыПараметров, ",", Истина);
	
	Индекс = 0;
	Для каждого ИдентификаторСтруктуры Из ИдентификаторыСтруктуры Цикл
		
		Если ПустаяСтрока(ИдентификаторСтруктуры) Тогда
			Индекс = Индекс + 1;
			Продолжить;
		КонецЕсли;
		
		Если Индекс < ИдентификаторыЛогирования.Количество() Тогда
			Идентификатор = ИдентификаторыЛогирования[Индекс];
		Иначе
			Идентификатор = СокрЛП(ИдентификаторСтруктуры);
		КонецЕсли;
		
		Значение = Неопределено;
		Если ЗначенияПараметров.Свойство(ИдентификаторСтруктуры, Значение) Тогда
			Если ПустаяСтрока(Идентификатор) Тогда
				Идентификатор = СтрШаблон(НСтр("ru = 'Параметр_%1'"), Индекс);
			КонецЕсли;
			
			Если ТипЗнч(Значение) = Тип("Строка") 
				И ОбработкаСтрокиXML.НайтиНедопустимыеСимволыXML(Значение, 1) > 0 Тогда
				Значение = ЗаписатьЗначениеJSON(Значение);
			КонецЕсли;
			Параметры.Вставить(Идентификатор, Значение);
		КонецЕсли;
		Индекс = Индекс + 1;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаписатьПараметрыВходящихИзМассива(СистемаЛогирования, Запись, ЗначенияПараметров)
	
	Операция = Запись.Операция;
	Ревизия  = Запись.РевизияИнтерфейса; 
	Описание = ОписаниеКоманды(СистемаЛогирования, Операция, Ревизия);
	Если Описание = Неопределено Тогда
		ИдентификаторыЛогирования = Неопределено;
	Иначе
		ИдентификаторыЛогирования = Описание.ИдентификаторыВходящих;
	КонецЕсли;
	Параметры = Запись.ВходящиеПараметры;
	
	ЗаписатьПараметрыИзМассива(ИдентификаторыЛогирования, Параметры, ЗначенияПараметров);
	
КонецПроцедуры

Процедура ЗаписатьПараметрыИсходящихИзМассива(СистемаЛогирования, Запись, ЗначенияПараметров)
	
	Операция = Запись.Операция;
	Ревизия  = Запись.РевизияИнтерфейса;
	Описание = ОписаниеКоманды(СистемаЛогирования, Операция, Ревизия);
	Если Описание = Неопределено Тогда
		ИдентификаторыЛогирования = Неопределено;
	Иначе
		ИдентификаторыЛогирования = Описание.ИдентификаторыИсходящих;
	КонецЕсли;
	Параметры = Запись.ИсходящиеПараметры;
	
	ЗаписатьПараметрыИзМассива(ИдентификаторыЛогирования, Параметры, ЗначенияПараметров);
	
КонецПроцедуры

Процедура ЗаписатьПараметрыИзМассива(ИдентификаторыЛогирования, Параметры, ЗначенияПараметров)
	
	Индекс = 0;
	Для Каждого Значение Из ЗначенияПараметров Цикл
		
		Если ТипЗнч(Значение) = Тип("Строка") 
			И ОбработкаСтрокиXML.НайтиНедопустимыеСимволыXML(Значение, 1) > 0 Тогда
			Значение = ЗаписатьЗначениеJSON(Значение);
		КонецЕсли;
		Если ИдентификаторыЛогирования = Неопределено Тогда
			Идентификатор = СтрШаблон(НСтр("ru = 'Параметр_%1'"), Индекс);
			Параметры.Вставить(СокрЛП(Идентификатор), Значение);
		ИначеЕсли Индекс < ИдентификаторыЛогирования.Количество() Тогда
			Идентификатор = СокрЛП(ИдентификаторыЛогирования[Индекс]);
			Если ЗначениеЗаполнено(Идентификатор) Тогда
				Параметры.Вставить(Идентификатор, Значение);
			КонецЕсли;
		КонецЕсли;
		Индекс = Индекс + 1;
	
	КонецЦикла;
	
КонецПроцедуры

Функция НайтиВМассивеСтруктурЗначениеБольшеЧем(Массив, Идентификатор, Значение)
	
	Для каждого Элемент Из Массив Цикл
	
		Если Элемент[Идентификатор] > Значение Тогда
			Возврат Элемент;
		КонецЕсли;
	
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

Функция НайтиВМассивеСтруктурЗначениеНеБольшеЧем(Массив, Идентификатор, ЗначениеПоиска, НайденныйИндекс = 0)
	
	Найдено = Неопределено;
	Элемент = Неопределено;
	НайденныйИндекс = 0;
	Для Индекс = 0 По Массив.ВГраница() Цикл
		Найдено = Элемент;
		Элемент = Массив[Индекс];
		Если Элемент[Идентификатор] >= ЗначениеПоиска Тогда
			Прервать;
		КонецЕсли;
		НайденныйИндекс = Индекс;
	КонецЦикла;
	Возврат Найдено;
	
КонецФункции

Процедура ДобавитьОперацию(СистемаЛогирования, МаксимальнаяРевизия, Операция, ОперацияЛокализация, 
	ИдентификаторыВходящих, ИдентификаторыВходящихЛокализация, ИдентификаторыИсходящих, ИдентификаторыИсходящихЛокализация)
	
	Описание = СистемаЛогирования.ОписанияОпераций.Получить(Операция);
	Если Описание = Неопределено Тогда
		Описание = Новый Структура();
		Описание.Вставить("ОперацияЛокализация", ОперацияЛокализация);
		Описание.Вставить("ИдентификаторыВходящих", Новый Массив());
		Описание.Вставить("ИдентификаторыИсходящих", Новый Массив());
		Описание.Вставить("ИдентификаторыВходящихЛокализация", Новый Массив());
		Описание.Вставить("ИдентификаторыИсходящихЛокализация", Новый Массив());
		Описание.Вставить("Ревизии", Новый Массив());
	КонецЕсли;
	
	Если МаксимальнаяРевизия = 0 Тогда
		Описание.ИдентификаторыВходящих = СтрРазделить(ИдентификаторыВходящих,",",Истина);
		Описание.ИдентификаторыИсходящих = СтрРазделить(ИдентификаторыИсходящих,",",Истина);
		Описание.ИдентификаторыВходящихЛокализация = СтрРазделить(ИдентификаторыВходящихЛокализация,",",Истина);
		Описание.ИдентификаторыИсходящихЛокализация = СтрРазделить(ИдентификаторыИсходящихЛокализация,",",Истина);
	Иначе
		Индекс = 0;
		Ревизии = Описание.Ревизии;
		НайденнаяРевизия = НайтиВМассивеСтруктурЗначениеНеБольшеЧем(Ревизии, "НомерРевизии", МаксимальнаяРевизия, Индекс);
		Если НайденнаяРевизия = Неопределено Тогда
			ИндексВставки = 0;
		Иначе
			ИндексВставки = Индекс + 1;
		КонецЕсли;
		Ревизия = Новый Структура();
		Ревизия.Вставить("НомерРевизии", МаксимальнаяРевизия);
		Ревизия.Вставить("ИдентификаторыВходящих", СтрРазделить(ИдентификаторыВходящих,",",Истина));
		Ревизия.Вставить("ИдентификаторыИсходящих", СтрРазделить(ИдентификаторыИсходящих,",",Истина));
		Ревизия.Вставить("ИдентификаторыВходящихЛокализация", СтрРазделить(ИдентификаторыВходящих,",",Истина));
		Ревизия.Вставить("ИдентификаторыИсходящихЛокализация", СтрРазделить(ИдентификаторыИсходящих,",",Истина));
		Ревизии.Вставить(ИндексВставки, Ревизия);
	КонецЕсли;
	СистемаЛогирования.ОписанияОпераций.Вставить(Операция, Описание);
	
КонецПроцедуры

Процедура СформироватьОписаниеОпераций(СистемаЛогирования)
	
	// 2. Обязательные функции и методы, связанные с использованием драйвера подключаемого оборудования в системе
	ДобавитьОперацию(СистемаЛогирования, 0, "GetInterfaceRevision", НСтр("ru = 'Получить ревизию интерфейса'"), "", "", "", "");
	ДобавитьОперацию(СистемаЛогирования, 0, "GetDescription", НСтр("ru = 'Получить описание'"), "", "", "DriverDescription", НСтр("ru = 'Описание драйвера'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "GetLastError", НСтр("ru = 'Получить ошибку'"), "", "", "ErrorDescription", НСтр("ru = 'Описание ошибки'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "EquipmentParameters", НСтр("ru = 'Параметры оборудования'"), "EquipmentType, ", НСтр("ru = 'Тип оборудования,'"), ", TableParameters", НСтр("ru = ', Таблица параметров'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "ConnectEquipment", НСтр("ru = 'Подключить оборудование'"), ", EquipmentType, ConnectionParameters", НСтр("ru = ', Тип оборудования, Параметры подключения'"), "DeviceID, , ", НСтр("ru = 'ИД устройства, ,'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "DisconnectEquipment", НСтр("ru = 'Отключить оборудование'"), "DeviceID", НСтр("ru = 'ИД устройства'"), "", "");
	ДобавитьОперацию(СистемаЛогирования, 0, "EquipmentTest", НСтр("ru = 'Тестирования оборудования'"), "EquipmentType, ConnectionParameters, , ", НСтр("ru = 'Тип оборудования, Параметры подключения, ,'"), ", , Description, DemoModeIsActivated", НСтр("ru = ', , Описание, Активирован демо режим'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "EquipmentAutoSetup", НСтр("ru = 'Автонастройка оборудования'"), ", ConnectionParameters, , ShowAutoSetupWindow, Timeout", НСтр("ru = ', Параметры подключения, , Показывать окно автонастройки, Таймаут'"), "EquipmentType, , ConnectionParameters, , ", НСтр("ru = 'Тип оборудования, , Параметры подключения, ,'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "SetApplicationInformation", НСтр("ru = 'Установить информацию приложения'"), "ApplicationSettings", НСтр("ru = 'Параметры приложения'"), "", "");
	ДобавитьОперацию(СистемаЛогирования, 0, "GetAdditionalActions", НСтр("ru = 'Получить дополнительные действия'"), "", "", "TableActions", НСтр("ru = 'Таблица действий'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "DoAdditionalAction", НСтр("ru = 'Выполнить дополнительное действие'"), "ActionName", НСтр("ru = 'Имя действия'"), "", "");
	ДобавитьОперацию(СистемаЛогирования, 0, "GetLocalizationPattern", НСтр("ru = 'Получить шаблон локализации'"), "", "", "LocalizationPattern", НСтр("ru = 'Шаблон локализации'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "SetLocalization", НСтр("ru = 'Установить локализацию'"), "LanguageCode, LocalizationPattern", НСтр("ru = 'Код языка, Шаблон локализации'"), "", "");
	ДобавитьОперацию(СистемаЛогирования, 0, "GetParameters", НСтр("ru = 'Получить параметры'"), "", "", "TableParameters", НСтр("ru = 'Таблица параметров'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "SetParameter", НСтр("ru = 'Установить параметр'"), "Name, Value", НСтр("ru = 'Имя, Значение'"), "", "");
	ДобавитьОперацию(СистемаЛогирования, 0, "Open", НСтр("ru = 'Подключить'"), "", "", "DeviceID", НСтр("ru = 'ИД устройства'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "Close", НСтр("ru = 'Отключить'"), "DeviceID", НСтр("ru = 'ИД устройства'"), "", "");
	ДобавитьОперацию(СистемаЛогирования, 0, "DeviceTest", НСтр("ru = 'Тест устройства'"), "", "", "Description, DemoModeIsActivated", НСтр("ru = 'Описание, Активирован демо режим'"));
	
	// 3.1. Требования к разработке драйверов для электронных весов
	ДобавитьОперацию(СистемаЛогирования, 0, "ScaleOptions", НСтр("ru = 'Параметры весов'"), "DeviceID, ", НСтр("ru = 'ИД устройства,'"), ", ScaleOptions", НСтр("ru = ', Параметры весов'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "Calibrate", НСтр("ru = 'Установить вес тары'"), "DeviceID, TareWeight", НСтр("ru = 'ИД устройства, Вес тары'"), "", "");
	ДобавитьОперацию(СистемаЛогирования, 0, "GetWeight", НСтр("ru = 'Получить вес'"), "DeviceID, ", НСтр("ru = 'ИД устройства,'"), ", Weight", НСтр("ru = ', Текущий вес'"));
	
	// 3.2. Требования к разработке драйверов для электронных весов с печатью этикеток в режиме "OFFLINE"
	ДобавитьОперацию(СистемаЛогирования, 0, "UploadGoods", НСтр("ru = 'Выгрузить товары'"), "DeviceID, GoodsTable, PackageStatus", НСтр("ru = 'ИД устройства, Таблица товаров, Статус пакета'"), "", "");
	ДобавитьОперацию(СистемаЛогирования, 0, "ClearGoods", НСтр("ru = 'Очистить товары'"), "DeviceID", НСтр("ru = 'ИД устройства'"), "", "");
	ДобавитьОперацию(СистемаЛогирования, 0, "UploadProductImages", НСтр("ru = 'Выгрузить изображения товаров'"), "DeviceID, TableImages, PackageStatus", НСтр("ru = 'ИД устройства, Таблица изображений, Статус пакета'"), "", "");
	
	// 3.3. Требования к разработке драйверов для дисплеев покупателя
	ДобавитьОперацию(СистемаЛогирования, 0, "StringOutputOnCustomerDisplay", НСтр("ru = 'Вывести строку на дисплей покупателя'"), "DeviceID, Strings", НСтр("ru = 'ИД устройства, Строки'"), "", "");
	ДобавитьОперацию(СистемаЛогирования, 0, "ClearCustomerDisplay", НСтр("ru = 'Очистить дисплей покупателя'"), "DeviceID", НСтр("ru = 'ИД устройства'"), "", "");
	ДобавитьОперацию(СистемаЛогирования, 0, "OutputHTML", НСтр("ru = 'Вывести HTML'"), "DeviceID, HTML", НСтр("ru = 'ИД устройства, HTML'"), "", "");
	ДобавитьОперацию(СистемаЛогирования, 0, "QRCodeOutputOnCustomerDisplay", НСтр("ru = 'Вывести QR код на дисплей покупателя'"), "DeviceID, QRCodeValue, QRСodePicture", НСтр("ru = 'ИД устройства, Значение QR кода, Картинка QRКода'"), "", "");
	ДобавитьОперацию(СистемаЛогирования, 0, "DisplayOperationStatus", НСтр("ru = 'Отобразить статус операции'"), "DeviceID, OperationStatus", НСтр("ru = 'ИД устройства, Статус операции'"), "", "");
	ДобавитьОперацию(СистемаЛогирования, 0, "DisplayWorkplaceStatus", НСтр("ru = 'Отобразить статус рабочего места'"), "DeviceID, WorkplaceStatus, SoundSignal", НСтр("ru = 'ИД устройства, Статус рабочего места, Звуковой сигнал'"), "", "");
	ДобавитьОперацию(СистемаЛогирования, 0, "GetCustomerDisplayOptions", НСтр("ru = 'Получить параметры дисплея покупателя'"), "DeviceID, ", НСтр("ru = 'ИД устройства,'"), ", CustomerDisplayOptions", НСтр("ru = ', Параметры дисплея покупателя'"));
	
	// 3.4. Требования к разработке драйверов для терминалов сбора данных
	ДобавитьОперацию(СистемаЛогирования, 0, "UploadTable", НСтр("ru = 'Выгрузить таблицу'"), "DeviceID, GoodsTable, PackageStatus", НСтр("ru = 'ИД устройства, Таблица товаров, Статус пакета'"), "", "");
	ДобавитьОперацию(СистемаЛогирования, 0, "DownloadTable", НСтр("ru = 'Загрузить таблицу'"), "DeviceID, ", НСтр("ru = 'ИД устройства,'"), ", DownloadTable", НСтр("ru = ', Таблица загрузки'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "ClearTable", НСтр("ru = 'Очистить таблицу'"), "DeviceID", НСтр("ru = 'ИД устройства'"), "", "");
	
	// 3.5. Требования к разработке драйверов для ККТ с функцией передачи в ОФД
	ДобавитьОперацию(СистемаЛогирования, 0, "GetDataKKT", НСтр("ru = 'Получить параметры ККТ'"), "DeviceID, ", НСтр("ru = 'ИД устройства,'"), ", TableParametersKKT", НСтр("ru = ', Таблица параметров ККТ'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "OperationFN", НСтр("ru = 'Операция ФН'"), "DeviceID, OperationType, ParametersFiscal", НСтр("ru = 'ИД устройства, Тип операции, Параметры фискализации'"), "", "");
	ДобавитьОперацию(СистемаЛогирования, 0, "OpenShift", НСтр("ru = 'Открыть смену'"), "DeviceID, InputParameters, ", НСтр("ru = 'ИД устройства, Входные параметры,'"), ", , OutputParameters", НСтр("ru = ', , Выходные параметры'"));
	ДобавитьОперацию(СистемаЛогирования, 3000, "OpenShift", НСтр("ru = 'Открыть смену'"), "DeviceID, InputParameters, , , ", НСтр("ru = 'ИД устройства, Входные параметры, , ,'"), ", , OutputParameters, SessionNumber, DocumentNumber", НСтр("ru = ', , Выходные параметры, Номер смены, Номер документа'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "CloseShift", НСтр("ru = 'Закрыть смену'"), "DeviceID, InputParameters, ", НСтр("ru = 'ИД устройства, Входные параметры,'"), ", , OutputParameters", НСтр("ru = ', , Выходные параметры'"));
	ДобавитьОперацию(СистемаЛогирования, 3000, "CloseShift", НСтр("ru = 'Закрыть смену'"), "DeviceID, InputParameters, , , ", НСтр("ru = 'ИД устройства, Входные параметры, , ,'"), ", , OutputParameters, SessionNumber, DocumentNumber", НСтр("ru = ', , Выходные параметры, Номер смены, Номер документа'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "ProcessCheck", НСтр("ru = 'Сформировать чек'"), "DeviceID, Electronically, CheckPackage, ", НСтр("ru = 'ИД устройства, Электронно, Данные чека,'"), ", Electronically, , DocumentOutputParameters", НСтр("ru = ', Электронно, , Выходные параметры документа'"));
	ДобавитьОперацию(СистемаЛогирования, 3000, "ProcessCheck", НСтр("ru = 'Сформировать чек'"), "DeviceID, Electronically, CheckPackage, , , , ", НСтр("ru = 'ИД устройства, Электронно, Данные чека, , , ,'"), ", Electronically, , CheckNumber, SessionNumber, FiscalSign, АдресСайтаПроверки", НСтр("ru = ', Электронно, , Номер чека, Номер смены, Фискальный признак, Address Site Inspections'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "ProcessCorrectionCheck", НСтр("ru = 'Сформировать чек коррекции'"), "DeviceID, CheckPackage, ", НСтр("ru = 'ИД устройства, Данные чека,'"), ", , DocumentOutputParameters", НСтр("ru = ', , Выходные параметры документа'"));
	ДобавитьОперацию(СистемаЛогирования, 3000, "ProcessCorrectionCheck", НСтр("ru = 'Сформировать чек коррекции'"), "DeviceID, CheckCorrectionPackage, , , , ", НСтр("ru = 'ИД устройства, Данные чека коррекции, , , ,'"), ", , CheckNumber, SessionNumber, FiscalSign, АдресСайтаПроверки", НСтр("ru = ', , Номер чека, Номер смены, Фискальный признак, Address Site Inspections'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "PrintTextDocument", НСтр("ru = 'Напечатать текстовый документ'"), "DeviceID, DocumentPackage", НСтр("ru = 'ИД устройства, Данные документа'"), "", "");
	ДобавитьОперацию(СистемаЛогирования, 0, "CashInOutcome", НСтр("ru = 'Напечатать чек внесения выемки'"), "DeviceID, InputParameters, Amount", НСтр("ru = 'ИД устройства, Входные параметры, Сумма'"), "", "");
	ДобавитьОперацию(СистемаЛогирования, 0, "PrintXReport", НСтр("ru = 'Напечатать отчет без гашения'"), "DeviceID, InputParameters", НСтр("ru = 'ИД устройства, Входные параметры'"), "", "");
	ДобавитьОперацию(СистемаЛогирования, 0, "PrintCheckCopy", НСтр("ru = 'Напечатать копию чека'"), "DeviceID, CheckNumber", НСтр("ru = 'ИД устройства, Номер чека'"), "", "");
	ДобавитьОперацию(СистемаЛогирования, 0, "GetCurrentStatus", НСтр("ru = 'Получить текущее состояние'"), "DeviceID, InputParameters, ", НСтр("ru = 'ИД устройства, Входные параметры,'"), ", , OutputParameters", НСтр("ru = ', , Выходные параметры'"));
	ДобавитьОперацию(СистемаЛогирования, 3000, "GetCurrentStatus", НСтр("ru = 'Получить текущее состояние'"), "DeviceID, , , , ", НСтр("ru = 'ИД устройства, , , ,'"), ", CheckNumber, SessionNumber, SessionState, StatusParameters", НСтр("ru = ', Номер чека, Номер смены, Статус смены, Параметры состояния'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "ReportCurrentStatusOfSettlements", НСтр("ru = 'Отчет о текущем состоянии расчетов'"), "DeviceID, InputParameters, ", НСтр("ru = 'ИД устройства, Входные параметры,'"), ", , OutputParameters", НСтр("ru = ', , Выходные параметры'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "OpenCashDrawer", НСтр("ru = 'Открыть денежный ящик'"), "DeviceID", НСтр("ru = 'ИД устройства'"), "", "");
	ДобавитьОперацию(СистемаЛогирования, 0, "GetLineLength", НСтр("ru = 'Получить ширину строки'"), "DeviceID, ", НСтр("ru = 'ИД устройства,'"), ", LineLength", НСтр("ru = ', Ширина строки'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "OpenSessionRegistrationKM", НСтр("ru = 'Открыть сессию регистрации КМ'"), "DeviceID", НСтр("ru = 'ИД устройства'"), "", "");
	ДобавитьОперацию(СистемаЛогирования, 0, "CloseSessionRegistrationKM", НСтр("ru = 'Закрыть сессию регистрации КМ'"), "DeviceID", НСтр("ru = 'ИД устройства'"), "", "");
	ДобавитьОперацию(СистемаЛогирования, 0, "RequestKM", НСтр("ru = 'Запрос КМ'"), "DeviceID, RequestKM, ", НСтр("ru = 'ИД устройства, Запрос КМ,'"), ", , RequestKMResult", НСтр("ru = ', , Результат запроса КМ'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "GetProcessingKMResult", НСтр("ru = 'Получить результаты запроса КМ'"), "DeviceID, , ", НСтр("ru = 'ИД устройства, ,'"), ", ProcessingKMResult, RequestStatus", НСтр("ru = ', Результат запроса КМ, Статус запроса'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "ConfirmKM", НСтр("ru = 'Подтвердить КМ'"), "DeviceID, GUID, ConfirmationType", НСтр("ru = 'ИД устройства, Идентификатор запроса, Тип подтверждения'"), "", "");
	
	// 3.6. Требования к разработке драйверов для принтеров чеков
	ДобавитьОперацию(СистемаЛогирования, 0, "PrintTextDocument", НСтр("ru = 'Напечатать текстовый документ'"), "DeviceID, DocumentPackage", НСтр("ru = 'ИД устройства, Данные документа'"), "", "");
	ДобавитьОперацию(СистемаЛогирования, 0, "OpenCashDrawer", НСтр("ru = 'Открыть денежный ящик'"), "DeviceID", НСтр("ru = 'ИД устройства'"), "", "");
	ДобавитьОперацию(СистемаЛогирования, 0, "GetLineLength", НСтр("ru = 'Получить ширину строки'"), "DeviceID, ", НСтр("ru = 'ИД устройства,'"), ", LineLength", НСтр("ru = ', Ширина строки'"));
	
	// 3.7. Требования к разработке драйверов для принтеров этикеток
	ДобавитьОперацию(СистемаЛогирования, 0, "InitializePrinter", НСтр("ru = 'Инициализация принтера'"), "DeviceID", НСтр("ru = 'ИД устройства'"), "", "");
	ДобавитьОперацию(СистемаЛогирования, 0, "PrintLabels", НСтр("ru = 'Печать этикеток'"), "DeviceID, LabelsTable, PackageStatus", НСтр("ru = 'ИД устройства, Таблица этикеток, Статус пакета'"), "", "");
	
	// 3.9. Требования к разработке драйверов для эквайринговых терминалов
	ДобавитьОперацию(СистемаЛогирования, 0, "TerminalParamters", НСтр("ru = 'Параметры терминала'"), "DeviceID, ", НСтр("ru = 'ИД устройства,'"), ", TerminalParamters", НСтр("ru = ', Параметры терминала'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "Pay", НСтр("ru = 'Оплатить'"), "DeviceID, OperationParameters, , ", НСтр("ru = 'ИД устройства, Входяшие параметры, ,'"), ", , OperationParameters, Slip", НСтр("ru = ', , Исходящие параметры, Текст квитанции'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "ReturnPayment", НСтр("ru = 'Вернуть платеж'"), "DeviceID, OperationParameters, , ", НСтр("ru = 'ИД устройства, Входяшие параметры, ,'"), ", , OperationParameters, Slip", НСтр("ru = ', , Исходящие параметры, Текст квитанции'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "CancelPayment", НСтр("ru = 'Отменить платеж'"), "DeviceID, OperationParameters, , ", НСтр("ru = 'ИД устройства, Входяшие параметры, ,'"), ", , OperationParameters, Slip", НСтр("ru = ', , Исходящие параметры, Текст квитанции'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "Authorisation", НСтр("ru = 'Преавторизация'"), "DeviceID, OperationParameters, , ", НСтр("ru = 'ИД устройства, Входяшие параметры, ,'"), ", , OperationParameters, Slip", НСтр("ru = ', , Исходящие параметры, Текст квитанции'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "AuthConfirmation", НСтр("ru = 'Завершить преавторизацию'"), "DeviceID, OperationParameters, , ", НСтр("ru = 'ИД устройства, Входяшие параметры, ,'"), ", , OperationParameters, Slip", НСтр("ru = ', , Исходящие параметры, Текст квитанции'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "CancelAuthorisation", НСтр("ru = 'Отменить преавторизацию'"), "DeviceID, OperationParameters, , ", НСтр("ru = 'ИД устройства, Входяшие параметры, ,'"), ", , OperationParameters, Slip", НСтр("ru = ', , Исходящие параметры, Текст квитанции'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "PayWithCashWithdrawal", НСтр("ru = 'Оплата с выдачей наличных'"), "DeviceID, OperationParameters, , ", НСтр("ru = 'ИД устройства, Входяшие параметры, ,'"), ", , OperationParameters, Slip", НСтр("ru = ', , Исходящие параметры, Текст квитанции'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "PurchaseWithEnrollment", НСтр("ru = 'Покупка с зачислением'"), "DeviceID, OperationParameters, , ", НСтр("ru = 'ИД устройства, Входяшие параметры, ,'"), ", , OperationParameters, Slip", НСтр("ru = ', , Исходящие параметры, Текст квитанции'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "GetCardParametrs", НСтр("ru = 'Получить параметры карты'"), "DeviceID, ConsumerPresentedQR, FromLastOperation, , , , , ", НСтр("ru = 'ИД устройства, Реквизиты карты QR, От последней операции, , , , ,'"), ", , , CardNumber, CardNumberHash, PaymentAccountReference, CardType, IsOwnCard", НСтр("ru = ', , , Номер карты, Хеш номер карты, Ссылка на платежный счет, Тип карты, Своя карта'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "PayCertificate", НСтр("ru = 'Оплатить сертификатом'"), "DeviceID, OperationParameters, , ", НСтр("ru = 'ИД устройства, Входяшие параметры, ,'"), ", , OperationParameters, Slip", НСтр("ru = ', , Исходящие параметры, Текст квитанции'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "ReturnCertificate", НСтр("ru = 'Вернуть сертификатом'"), "DeviceID, OperationParameters, , ", НСтр("ru = 'ИД устройства, Входяшие параметры, ,'"), ", , OperationParameters, Slip", НСтр("ru = ', , Исходящие параметры, Текст квитанции'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "EmergencyReversal", НСтр("ru = 'Аварийная отмена операции'"), "DeviceID", НСтр("ru = 'ИД устройства'"), "", "");
	ДобавитьОперацию(СистемаЛогирования, 0, "GetOperationByCards", НСтр("ru = 'Получить операции по картам'"), "DeviceID, ", НСтр("ru = 'ИД устройства,'"), ", TableOperations", НСтр("ru = ', Таблица операций'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "Settlement", НСтр("ru = 'Итоги дня по картам'"), "DeviceID, ", НСтр("ru = 'ИД устройства,'"), ", Slip", НСтр("ru = ', Текст квитанции'"));

	ДобавитьОперацию(СистемаЛогирования, 3005, "PayByPaymentCard", НСтр("ru = 'Оплатить платежной картой'"), "DeviceID, CardNumber, Amount, ReceiptNumber, , , ", НСтр("ru = 'ИД устройства, Номер карты, Сумма, Номер чека, , ,'"), ", CardNumber, , ReceiptNumber, RRNCode, AuthorizationCode, Slip", НСтр("ru = ', Номер карты, , Номер чека, Код RRN, Код авторизации, Текст квитанции'"));
	ДобавитьОперацию(СистемаЛогирования, 4000, "PayByPaymentCard", НСтр("ru = 'Оплатить платежной картой'"), "DeviceID, MerchantNumber, Amount, CardNumber, ReceiptNumber, , , ", НСтр("ru = 'ИД устройства, Номер мерчанта, Сумма, Номер карты, Номер чека, , ,'"), ", , , CardNumber, ReceiptNumber, RRNCode, AuthorizationCode, Slip", НСтр("ru = ', , , Номер карты, Номер чека, Код RRN, Код авторизации, Текст квитанции'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "PayByPaymentCard", НСтр("ru = 'Оплатить платежной картой'"), "DeviceID, MerchantNumber, Amount, CardNumber, ReceiptNumber, , , ", НСтр("ru = 'ИД устройства, Номер мерчанта, Сумма, Номер карты, Номер чека, , ,'"), ", , , CardNumber, ReceiptNumber, RRNCode, AuthorizationCode, Slip", НСтр("ru = ', , , Номер карты, Номер чека, Код RRN, Код авторизации, Текст квитанции'"));
	
	ДобавитьОперацию(СистемаЛогирования, 3005, "ReturnPaymentByPaymentCard", НСтр("ru = 'Вернуть платеж по платежной карте'"), "DeviceID, CardNumber, Amount, ReceiptNumber, RRNCode, AuthorizationCode, ", НСтр("ru = 'ИД устройства, Номер карты, Сумма, Номер чека, Код RRN, Код авторизации,'"), ", CardNumber, , ReceiptNumber, RRNCode, AuthorizationCode, Slip", НСтр("ru = ', Номер карты, , Номер чека, Код RRN, Код авторизации, Текст квитанции'"));
	ДобавитьОперацию(СистемаЛогирования, 4000, "ReturnPaymentByPaymentCard", НСтр("ru = 'Вернуть платеж по платежной карте'"), "DeviceID, MerchantNumber, Amount, CardNumber, ReceiptNumber, RRNCode, AuthorizationCode, ", НСтр("ru = 'ИД устройства, Номер мерчанта, Сумма, Номер карты, Номер чека, Код RRN, Код авторизации,'"), ", , , CardNumber, ReceiptNumber, RRNCode, , Slip", НСтр("ru = ', , , Номер карты, Номер чека, Код RRN, , Текст квитанции'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "ReturnPaymentByPaymentCard", НСтр("ru = 'Вернуть платеж по платежной карте'"), "DeviceID, MerchantNumber, Amount, CardNumber, ReceiptNumber, RRNCode, AuthorizationCode, ", НСтр("ru = 'ИД устройства, Номер мерчанта, Сумма, Номер карты, Номер чека, Код RRN, Код авторизации,'"), ", , , CardNumber, ReceiptNumber, RRNCode, , Slip", НСтр("ru = ', , , Номер карты, Номер чека, Код RRN, , Текст квитанции'"));

	ДобавитьОперацию(СистемаЛогирования, 3005, "CancelPaymentByPaymentCard", НСтр("ru = 'Отменить платеж по платежной карте'"), "DeviceID, CardNumber, Amount, ReceiptNumber, RRNCode, AuthorizationCode, ", НСтр("ru = 'ИД устройства, Номер карты, Сумма, Номер чека, Код RRN, Код авторизации,'"), ", CardNumber, , ReceiptNumber, RRNCode, AuthorizationCode, Slip", НСтр("ru = ', Номер карты, , Номер чека, Код RRN, Код авторизации, Текст квитанции'"));
	ДобавитьОперацию(СистемаЛогирования, 4000, "CancelPaymentByPaymentCard", НСтр("ru = 'Отменить платеж по платежной карте'"), "DeviceID, MerchantNumber, Amount, CardNumber, ReceiptNumber, RRNCode, AuthorizationCode, ", НСтр("ru = 'ИД устройства, Номер мерчанта, Сумма, Номер карты, Номер чека, Код RRN, Код авторизации,'"), ", , , CardNumber, ReceiptNumber, , , Slip", НСтр("ru = ', , , Номер карты, Номер чека, , , Текст квитанции'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "CancelPaymentByPaymentCard", НСтр("ru = 'Отменить платеж по платежной карте'"), "DeviceID, MerchantNumber, Amount, CardNumber, ReceiptNumber, RRNCode, AuthorizationCode, ", НСтр("ru = 'ИД устройства, Номер мерчанта, Сумма, Номер карты, Номер чека, Код RRN, Код авторизации,'"), ", , , CardNumber, ReceiptNumber, , , Slip", НСтр("ru = ', , , Номер карты, Номер чека, , , Текст квитанции'"));
	
	ДобавитьОперацию(СистемаЛогирования, 4000, "PayByPaymentCardWithCashWithdrawal", НСтр("ru = 'Оплатить платежной картой с выдачей наличных'"), "DeviceID, MerchantNumber, AmountPayment, AmountCash, , , , , ", НСтр("ru = 'ИД устройства, Номер мерчанта, Сумма операции, Сумма наличных, , , , ,'"), ", , , , CardNumber, ReceiptNumber, RRNCode, AuthorizationCode, Slip", НСтр("ru = ', , , , Номер карты, Номер чека, Код RRN, Код авторизации, Текст квитанции'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "PayByPaymentCardWithCashWithdrawal", НСтр("ru = 'Оплатить платежной картой с выдачей наличных'"), "DeviceID, MerchantNumber, AmountPayment, AmountCash, , , , , ", НСтр("ru = 'ИД устройства, Номер мерчанта, Сумма операции, Сумма наличных, , , , ,'"), ", , , , CardNumber, ReceiptNumber, RRNCode, AuthorizationCode, Slip", НСтр("ru = ', , , , Номер карты, Номер чека, Код RRN, Код авторизации, Текст квитанции'"));

	ДобавитьОперацию(СистемаЛогирования, 3005, "GetCardParametrs", НСтр("ru = 'Получить параметры карты'"), "DeviceID, FromLastOperation, , , , ", НСтр("ru = 'ИД устройства, От последней операции, , , ,'"), ", , CardNumber, CardNumberHash, CardType, IsOwnCard", НСтр("ru = ', , Номер карты, Хеш номер карты, Тип карты, Своя карта'"));
	ДобавитьОперацию(СистемаЛогирования, 4000, "GetCardParametrs", НСтр("ru = 'Получить параметры карты'"), "DeviceID, FromLastOperation, , , , , ", НСтр("ru = 'ИД устройства, От последней операции, , , , ,'"), ", , CardNumber, CardNumberHash, PaymentAccountReference, CardType, IsOwnCard", НСтр("ru = ', , Номер карты, Хеш номер карты, Ссылка на платежный счет, Тип карты, Своя карта'"));

	ДобавитьОперацию(СистемаЛогирования, 4000, "PayElectronicCertificate", НСтр("ru = 'Оплатить электронным сертификатом'"), "DeviceID, MerchantNumber, BasketID, ElectronicCertificateAmount, OwnFundsAmount, , , , , , ", НСтр("ru = 'ИД устройства, Номер мерчанта, Идентификатор корзины, Сумма электроного сертификата, Сумма собственных средств, , , , , ,'"), ", , BasketID, , , CardNumber, ReceiptNumber, RRNCode, AuthorizationCode, OperationStatus, Slip", НСтр("ru = ', , Идентификатор корзины, , , Номер карты, Номер чека, Код RRN, Код авторизации, Статус операции, Текст квитанции'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "PayElectronicCertificate", НСтр("ru = 'Оплатить электронным сертификатом'"), "DeviceID, MerchantNumber, BasketID, ElectronicCertificateAmount, OwnFundsAmount, , , , , , ", НСтр("ru = 'ИД устройства, Номер мерчанта, Идентификатор корзины, Сумма электроного сертификата, Сумма собственных средств, , , , , ,'"), ", , BasketID, , , CardNumber, ReceiptNumber, RRNCode, AuthorizationCode, OperationStatus, Slip", НСтр("ru = ', , Идентификатор корзины, , , Номер карты, Номер чека, Код RRN, Код авторизации, Статус операции, Текст квитанции'"));
	
	ДобавитьОперацию(СистемаЛогирования, 4000, "ReturnElectronicCertificate", НСтр("ru = 'Вернуть электронным сертификатом'"), "DeviceID, MerchantNumber, BasketID, ElectronicCertificateAmount, OwnFundsAmount, CardNumber, ReceiptNumber, RRNCode, , , ", НСтр("ru = 'ИД устройства, Номер мерчанта, Идентификатор корзины, Сумма электроного сертификата, Сумма собственных средств, Номер карты, Номер чека, Код RRN, , ,'"), ", , BasketID, , , CardNumber, ReceiptNumber, RRNCode, AuthorizationCode, OperationStatus, Slip", НСтр("ru = ', , Идентификатор корзины, , , Номер карты, Номер чека, Код RRN, Код авторизации, Статус операции, Текст квитанции'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "ReturnElectronicCertificate", НСтр("ru = 'Вернуть электронным сертификатом'"), "DeviceID, MerchantNumber, BasketID, ElectronicCertificateAmount, OwnFundsAmount, CardNumber, ReceiptNumber, RRNCode, , , ", НСтр("ru = 'ИД устройства, Номер мерчанта, Идентификатор корзины, Сумма электроного сертификата, Сумма собственных средств, Номер карты, Номер чека, Код RRN, , ,'"), ", , BasketID, , , CardNumber, ReceiptNumber, RRNCode, AuthorizationCode, OperationStatus, Slip", НСтр("ru = ', , Идентификатор корзины, , , Номер карты, Номер чека, Код RRN, Код авторизации, Статус операции, Текст квитанции'"));
	
	// 3.10. Требования к разработке драйверов для RFID считывателей
	ДобавитьОперацию(СистемаЛогирования, 0, "OpenSessionRFID", НСтр("ru = 'Открыть сессию RFID'"), "DeviceID", НСтр("ru = 'ИД устройства'"), "", "");
	ДобавитьОперацию(СистемаЛогирования, 0, "CloseSessionRFID", НСтр("ru = 'Закрыть сессию RFID'"), "DeviceID", НСтр("ru = 'ИД устройства'"), "", "");
	ДобавитьОперацию(СистемаЛогирования, 0, "GetDataTagsRFID", НСтр("ru = 'Получить данные меток RFID'"), "DeviceID, PackageID, ", НСтр("ru = 'ИД устройства, ИД пакета,'"), ", , TagsTable", НСтр("ru = ', , Таблица меток'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "SaveDataTagRFID", НСтр("ru = 'Записать данные в метку RFID'"), "DeviceID, TID, EPC, Data, MemoryBank, Timeout", НСтр("ru = 'ИД устройства, TID, EPC, Данные, Банк памяти, Таймаут'"), ", TID, EPC, , , ", НСтр("ru = ', TID, EPC, , ,'"));
	
	// 3.11. Требования к разработке устройств распознавания
	ДобавитьОперацию(СистемаЛогирования, 0, "Recognize", НСтр("ru = 'Распознать'"), "DeviceID, Training, Variants, ", НСтр("ru = 'ИД устройства, Обучение, Варианты,'"), ", , , GoodsRecognizeTable", НСтр("ru = ', , , Таблица распознанных товаров'"));
	ДобавитьОперацию(СистемаЛогирования, 0, "ConfirmRecognize", НСтр("ru = 'Подтвердить распознавание'"), "DeviceID, Code", НСтр("ru = 'ИД устройства, Код'"), "", "");
	
КонецПроцедуры

#КонецОбласти
