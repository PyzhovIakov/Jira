////////////////////////////////////////////////////////////////////////////////
//	Общие процедуры для обработки проверки правописания в поле HTML-документа
//
////////////////////////////////////////////////////////////////////////////////


#Область СлужебныйПрограммныйИнтерфейс

Процедура ПоказатьОшибки(Форма, ПолеДокументаHTML, РеквизитДокументаHTML, ПроверяемыйТекст) Экспорт
	
	ЭлементBody = ПолеДокументаHTML.Документ.querySelector("body");
	НачальнаяПозицияBody = СтрНайти(ПроверяемыйТекст, "<body");
	КонечнаяПозицияBody =  СтрНайти(ПроверяемыйТекст, "</body>");
	ЧислоСимволов = КонечнаяПозицияBody - НачальнаяПозицияBody + СтрДлина("</body>");
	ЭлементBody.outerHTML = Сред(ПроверяемыйТекст, НачальнаяПозицияBody, ЧислоСимволов);
	
	СкрытьОшибкиВЦитируемойЧасти(ПолеДокументаHTML);
	
	ПроверяемыйТекст = CRM_РаботаСHTMLКлиент.ТекстВПолеHTML(ПолеДокументаHTML);
	СтильСкрипт = ПолучитьТекстСтиляИСкрипта();
	ПроверяемыйТекст = СтрЗаменить(ПроверяемыйТекст, "</body>", СтильСкрипт.Стиль + СтильСкрипт.Скрипт + "</body>");
	РеквизитДокументаHTML = ПроверяемыйТекст;
	
	Если Форма.Элементы.CRM_ГруппаПроверкаПравописания.Видимость Тогда
		ЗаполнитьДанныеОшибки(Форма, ПолеДокументаHTML);
	КонецЕсли;
	
КонецПроцедуры

Функция СкрытьОшибки(ПолеДокументаHTML) Экспорт
	
	Ошибки = ПолеДокументаHTML.Документ.querySelectorAll(".mistake");
	Для Каждого Ошибка Из Ошибки Цикл
		CRM_РаботаСHTMLКлиент.Полифил_replaceWith(ПолеДокументаHTML, Ошибка, Ошибка.textContent);
	КонецЦикла;
	
	ПроверяемыйТекст = ПолеДокументаHTML.Документ.documentElement.outerHTML;
	СтильСкрипт = ПолучитьТекстСтиляИСкрипта();
	ПроверяемыйТекст = СтрЗаменить(ПроверяемыйТекст, СтильСкрипт.Стиль, "");
	ПроверяемыйТекст = СтрЗаменить(ПроверяемыйТекст, СтильСкрипт.Скрипт, "");
	
	Возврат ПроверяемыйТекст;

КонецФункции

Функция СкрытьОшибкиВЦитируемойЧасти(ПолеДокументаHTML) Экспорт
	
	Ошибки = ПолеДокументаHTML.Документ.querySelectorAll(".mistake");
	Для Каждого Ошибка Из Ошибки Цикл
		Если CRM_РаботаСHTMLКлиент.Полифил_closest(Ошибка, ".source-text") <> Неопределено Тогда
			CRM_РаботаСHTMLКлиент.Полифил_replaceWith(ПолеДокументаHTML, Ошибка, Ошибка.textContent);
		КонецЕсли;
	КонецЦикла;
	
	ПроверяемыйТекст = ПолеДокументаHTML.Документ.documentElement.outerHTML;
	Возврат ПроверяемыйТекст;

КонецФункции

#Область ОбработкаКомандФормы

Процедура ЗаменитьНаВариант(Форма, ПолеДокументаHTML, ИмяКоманды = Неопределено, ЗаменяющееСлово = Неопределено) Экспорт

	НомерОшибки = Форма.CRM_НомерТекущейОшибки;
	
	Если ЗначениеЗаполнено(ИмяКоманды) Тогда
		НомерВарианта = Число(СтрЗаменить(ИмяКоманды, "ЗаменитьНаВариант", ""));
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ЗаменяющееСлово) Тогда
		ЗаменяющееСлово = Форма.CRM_СписокОшибок[НомерОшибки].Значение.s[НомерВарианта];
	КонецЕсли;
	
	ЗаменяемыйЭлементHTML = ПолеДокументаHTML.Документ.getElementById("mistake" + НомерОшибки);
	
	Если ЗаменяемыйЭлементHTML <> Неопределено Тогда
		CRM_РаботаСHTMLКлиент.Полифил_replaceWith(ПолеДокументаHTML, ЗаменяемыйЭлементHTML, ЗаменяющееСлово);
		Форма.CRM_СписокОшибок[НомерОшибки].Представление = ЗаменяющееСлово;
	КонецЕсли;
	
	Если Форма.Элементы.CRM_ГруппаПроверкаПравописания.Видимость Тогда
		ПерейтиНаСледующееСлово(Форма, ПолеДокументаHTML, Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьКомандуПроверкиПравописания(Форма, ПолеДокументаHTML, ИмяКоманды) Экспорт
	
	Если ИмяКоманды = "Пропустить" Тогда
		Пропустить(Форма, ПолеДокументаHTML);
	ИначеЕсли ИмяКоманды = "ПропуститьВсе" Тогда
		ПропуститьВсе(Форма, ПолеДокументаHTML);
	ИначеЕсли ИмяКоманды = "Заменить" Или ИмяКоманды = "ВариантыЗамены" Тогда
		Заменить(Форма, ПолеДокументаHTML)
	ИначеЕсли ИмяКоманды = "ЗаменитьВсе" Тогда
		ЗаменитьВсе(Форма, ПолеДокументаHTML)
	ИначеЕсли ИмяКоманды = "ДекорацияYandexSpeller" Тогда
		ОткрытьYandexSpeller()
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьYandexSpellerЗавершение(КодВозврата, ДополнительныеПараметры) Экспорт
	
	// Действие не требуется
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТекстСтиляИСкрипта()
	
	Стиль = "<style type=""text/css"">.mistake {border-bottom: 2px dotted #ff0000;}</style>";
	Скрипт =
		"<script type=""text/javascript"">
		|	var mistakesElems = document.querySelectorAll("".mistake"");
		|	mistakesElems.forEach(function (element) {
		|		element.addEventListener(""mouseup"", function (event) {
		|			event.preventDefault();
		|			if (event.button === 2) {
		|				element.click();
		|			}
		|		});
		|	});
		|</script>";
	
	Результат = Новый Структура("Стиль, Скрипт", Стиль, Скрипт);
	Возврат Результат;

КонецФункции

Процедура УдалитьТегиТекущейОшибки(ПолеДокументаHTML, НомерОшибки)
	
	УдаляемыйЭлемент = ПолеДокументаHTML.Документ.getElementById("mistake" + НомерОшибки);
	Если УдаляемыйЭлемент <> Неопределено Тогда
		CRM_РаботаСHTMLКлиент.Полифил_replaceWith(ПолеДокументаHTML, УдаляемыйЭлемент, УдаляемыйЭлемент.textContent);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПерейтиНаСледующееСлово(Форма, ПолеДокументаHTML, ВыводитьПредупреждение)
	
	НомерОшибки = Форма.CRM_НомерТекущейОшибки;
	СписокОшибок = Форма.CRM_СписокОшибок;
	
	Если НомерОшибки = (СписокОшибок.Количество() - 1) Тогда
		ПолеДокументаHTML.Документ.getSelection().empty();
		Форма.CRM_ТекстСОшибкой = "";
		Форма.CRM_ВариантыЗамены.Очистить();
		УстановитьДоступностьКнопок(Форма);
		Если ВыводитьПредупреждение Тогда
			ПоказатьОповещениеПользователя(
				НСтр("ru='Проверка правописания';en='Spell check'"), ,
				НСтр("ru='Проверка правописания завершена!';en='Spell check is completed!'"),
				БиблиотекаКартинок.CRM_ПроверкаПравописания);
			Форма.Элементы.CRM_ГруппаПроверкаПравописания.Видимость = Ложь;
		КонецЕсли;
	Иначе
		НомерОшибки = НомерОшибки + 1;
		Форма.CRM_НомерТекущейОшибки = НомерОшибки;
		
		ЭлементОшибки = ПолеДокументаHTML.Документ.getElementById("mistake" + НомерОшибки);
		Если (СписокОшибок[НомерОшибки].Пометка И Не НомерОшибки = (СписокОшибок.Количество() - 1))
			Или ЭлементОшибки = Неопределено
			Или CRM_РаботаСHTMLКлиент.Полифил_closest(ЭлементОшибки, ".source-text") <> Неопределено Тогда
				ПерейтиНаСледующееСлово(Форма, ПолеДокументаHTML, ВыводитьПредупреждение);
		Иначе
			ЗаполнитьДанныеОшибки(Форма, ПолеДокументаHTML);
			//ПолеДокументаHTML.Документ.getElementById("mistake" + НомерОшибки).scrollIntoView();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДанныеОшибки(Форма, ПолеДокументаHTML) Экспорт
	
	Для Счетчик = 0 По Форма.CRM_СписокОшибок.Количество() - 1 Цикл
		ЭлементОшибка = ПолеДокументаHTML.Документ.getElementById("mistake" + Счетчик);
		Если ЭлементОшибка <> Неопределено Тогда
			НомерОшибки = Счетчик;
			Форма.CRM_НомерТекущейОшибки = Счетчик;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ЭлементОшибка = Неопределено Тогда
		ПоказатьОповещениеПользователя(
			НСтр("ru='Проверка правописания';en='Spell check'"), ,
			НСтр("ru='Проверка правописания завершена!';en='Spell check is completed!'")
				+ Символы.ПС + НСтр("ru='Ошибок не найдено!;en='No errors found!'"),
			БиблиотекаКартинок.CRM_ПроверкаПравописания);
		Форма.Элементы.CRM_ГруппаПроверкаПравописания.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	
	СписокОшибок = Форма.CRM_СписокОшибок;
	Форма.CRM_ВариантыЗамены.ЗагрузитьЗначения(СписокОшибок[НомерОшибки].Значение.s);
	
	УстановитьДоступностьКнопок(Форма);
	ВывестиАбзацСОшибкой(Форма, ПолеДокументаHTML);
	ВыделитьСловоВТексте(Форма, ПолеДокументаHTML, НомерОшибки);
	
КонецПроцедуры

Процедура УстановитьДоступностьКнопок(Форма)
	
	Если Форма.CRM_ВариантыЗамены.Количество() = 0 Тогда
		Форма.Элементы.Заменить.Доступность		= Ложь;
		Форма.Элементы.ЗаменитьВсе.Доступность	= Ложь;
	Иначе
		Форма.Элементы.Пропустить.Доступность	= Истина;
		Форма.Элементы.ПропуститьВсе.Доступность = Истина;
		Форма.Элементы.Заменить.Доступность		= Истина;
		Форма.Элементы.ЗаменитьВсе.Доступность	= Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыделитьСловоВТексте(Форма, ПолеДокументаHTML, НомерОшибки)
	
	Узел			= ПолеДокументаHTML.Документ.getElementById("mistake" + НомерОшибки);
	ПолеДокументаHTML.Документ.getSelection().setBaseAndExtent(Узел, 0, Узел, 1);
	
КонецПроцедуры

Процедура ВывестиАбзацСОшибкой(Форма, ПолеДокументаHTML)
	
	//Для Счетчик = 0 По Форма.CRM_СписокОшибок.Количество() - 1 Цикл
	//	ЭлементОшибка = ПолеДокументаHTML.Документ.getElementById("mistake" + Счетчик);
	//	Если ЭлементОшибка <> Неопределено Тогда
	//		НомерОшибки = Счетчик;
	//		Форма.CRM_НомерТекущейОшибки = Счетчик;
	//		Прервать;
	//	КонецЕсли;
	//КонецЦикла;
	
	НомерОшибки = Форма.CRM_НомерТекущейОшибки;
	ЭлементОшибка = ПолеДокументаHTML.Документ.getElementById("mistake" + НомерОшибки);
	
	Если ЭлементОшибка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РодительЭлементаОшибка = ПолеДокументаHTML.Документ.getElementById("mistake" + НомерОшибки).parentNode;
	Форма.CRM_ТекстСОшибкой = "<html><head></head><body>" + РодительЭлементаОшибка.outerHTML + "</body>";
	ЭлементДляУстановкиСтиля = "id=""mistake" + НомерОшибки;
	Форма.CRM_ТекстСОшибкой = СтрЗаменить(Форма.CRM_ТекстСОшибкой, ЭлементДляУстановкиСтиля, "style=""color:red;"" " 
		+ ЭлементДляУстановкиСтиля);
	
КонецПроцедуры

Процедура Пропустить(Форма, ПолеДокументаHTML)
	
	НомерОшибки = Форма.CRM_НомерТекущейОшибки;
	Форма.CRM_СписокОшибок[НомерОшибки].Пометка = Истина;
	УдалитьТегиТекущейОшибки(ПолеДокументаHTML, НомерОшибки);
	ПерейтиНаСледующееСлово(Форма, ПолеДокументаHTML, Истина)
	
КонецПроцедуры

Процедура ПропуститьВсе(Форма, ПолеДокументаHTML)
	
	ВрНомер = Форма.CRM_НомерТекущейОшибки;
	СписокОшибок = Форма.CRM_СписокОшибок;
	ПропускаемоеСлово = Форма.CRM_СписокОшибок[ВрНомер].Значение.word;
	
	Для НомерОшибки = 0 По СписокОшибок.Количество() - 1 Цикл
		Если СписокОшибок[НомерОшибки].Значение.word = ПропускаемоеСлово 
			И Не СписокОшибок[НомерОшибки].Пометка Тогда
			Форма.CRM_НомерТекущейОшибки = НомерОшибки;
			Форма.CRM_СписокОшибок[НомерОшибки].Пометка = Истина;
			УдалитьТегиТекущейОшибки(ПолеДокументаHTML, НомерОшибки);
		КонецЕсли;
	КонецЦикла;
	Форма.CRM_НомерТекущейОшибки = ВрНомер;
	
	Если ВрНомер < (СписокОшибок.Количество() - 2) Тогда 
		ПерейтиНаСледующееСлово(Форма, ПолеДокументаHTML, Истина);
	КонецЕсли;
	
КонецПроцедуры 

Процедура Заменить(Форма, ПолеДокументаHTML)
	
	ЗаменяющееСлово = Форма.Элементы.ВариантыЗамены.ТекущиеДанные.Значение;
	ЗаменитьНаВариант(Форма, ПолеДокументаHTML, , ЗаменяющееСлово);
	
КонецПроцедуры

Процедура ЗаменитьВсе(Форма, ПолеДокументаHTML)
	
	СписокОшибок = Форма.CRM_СписокОшибок;
	
	Для НомерОшибки = 0 По СписокОшибок.Количество() - 1 Цикл
		ЗаменяемоеСлово = Форма.CRM_СписокОшибок[НомерОшибки].Значение.word;
		Если СписокОшибок[НомерОшибки].Значение.word = ЗаменяемоеСлово 
			И Не СписокОшибок[НомерОшибки].Пометка Тогда
			ЗаменяющееСлово = ?(СписокОшибок[НомерОшибки].Значение.s.Количество() = 0, ЗаменяемоеСлово, 
				СписокОшибок[НомерОшибки].Значение.s[0]);
			Форма.CRM_НомерТекущейОшибки = НомерОшибки;
			ЗаменитьНаВариант(Форма, ПолеДокументаHTML, , ЗаменяющееСлово);
			Форма.CRM_СписокОшибок[НомерОшибки].Пометка = Истина;
			УдалитьТегиТекущейОшибки(ПолеДокументаHTML, НомерОшибки);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОткрытьYandexSpeller()
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьYandexSpellerЗавершение", ЭтотОбъект);
	НачатьЗапускПриложения(ОписаниеОповещения, "http://api.yandex.ru/speller");
	
КонецПроцедуры

#КонецОбласти