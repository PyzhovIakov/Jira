
#Область ПрограммныйИнтерфейс

// Процедура выполняет обновление ленты.
//
// Параметры:
//  ОбъектЛенты		 - Ссылка	 - Ссылка на объект ленты.
//  Форма			 - ФормаКлиентскогоПриложения	 - Форма.
//  Режим			 - Строка	 - Режим ленты.
//  Прокрутить		 - Булево	 - Признак проктрутки.
//  НеЗаполнять		 - Булево	 - Признак необходимости заполнения.
//  ЭтоФормаСписка	 - Булево	 - Признак это форма списка.
//
Процедура ОбновитьЛенту(ОбъектЛенты, Форма, Режим, Прокрутить, НеЗаполнять, ЭтоФормаСписка = Ложь) Экспорт
	
	ПараметрыЛенты = Новый Структура;
	ПараметрыЛенты.Вставить("Режим",				Режим);
	ПараметрыЛенты.Вставить("Объект",				ОбъектЛенты);
	Если ТипЗнч(ОбъектЛенты) = Тип("Массив") И Не ЭтоФормаСписка
		 И ОбъектЛенты.Найти(Форма.Объект.Ссылка) = Неопределено Тогда
		ПараметрыЛенты.Вставить("ОбъектФормы",		Форма.Объект.Ссылка);
	КонецЕсли;
	
	ПараметрыЛенты.Вставить("АдресКартинок",					Форма.Лента_АдресКартинок);
	ПараметрыЛенты.Вставить("АдресКартинокФайлов",				Форма.Лента_АдресКартинокФайлов);
	ПараметрыЛенты.Вставить("АдресаКартинокЗакрепа",			Форма.Лента_АдресаКартинокЗакрепа);
	ПараметрыЛенты.Вставить("АдресКартинкиСохраненияФайла",		Форма.Лента_АдресКартинкиСохраненияФайла);
	ПараметрыЛенты.Вставить("АдресКартинкиКопированияВБуфер",	Форма.Лента_АдресКартинкиКопированияВБуфер);
	
	ПараметрыЛенты.Вставить("Отбор",				Форма.Лента_Отбор);
	ПараметрыЛенты.Вставить("ОбъектовИстории",		Форма.Лента_КоличествоОбъектовИстории);
	ПараметрыЛенты.Вставить("Прокрутить",			Прокрутить);
	ПараметрыЛенты.Вставить("Пустая",				НеЗаполнять);
	ПараметрыЛенты.Вставить("ЭтоФормаСписка",		ЭтоФормаСписка);
	ПараметрыЛенты.Вставить("ЗакрепленныеСверху",	Форма.Лента_ЗакрепленныеСверху);
	
	ПолучателиЧата = Новый Массив;
	Форма.Лента_HTML = CRM_ЛентаСобытий.СформироватьЛенту(ПараметрыЛенты, ПолучателиЧата);
	Прокрутить = Ложь;
	
	ОбластьВводаНастритьВидимостьКомандПослеФормированияЛенты(Форма);
	
	Если Форма.Лента_ЗначенияНастроек.ИспользоватьЧаты Тогда
		
		Если ТипЗнч(ОбъектЛенты) = Тип("Массив") Тогда // Передача из Интереса
			СсылкаНаОбъект = Форма.Объект.Ссылка;
		Иначе
			СсылкаНаОбъект = ОбъектЛенты;
		КонецЕсли;
		
		Если НЕ ЭтоФормаСписка Тогда
			
			ПараметрыДополнения = Новый Структура;
			ПараметрыДополнения.Вставить("Ссылка", СсылкаНаОбъект);
			ПараметрыДополнения.Вставить("УчетнаяЗапись", Форма.БыстрыйВвод_ЧатУчетнаяЗапись);
			МассивКонтактов = Новый Массив;
			Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.CRM_Интерес") Тогда
				Если ЗначениеЗаполнено(Форма.Объект.Партнер) Тогда
					МассивКонтактов.Добавить(Форма.Объект.Партнер);
				ИначеЕсли ЗначениеЗаполнено(Форма.Объект.ПотенциальныйКлиент) Тогда
					МассивКонтактов.Добавить(Форма.Объект.ПотенциальныйКлиент);
				КонецЕсли;
				Для Каждого Строка Из Форма.Объект.Контакты Цикл
					МассивКонтактов.Добавить(Строка.Контакт);
				КонецЦикла;
				Если ЗначениеЗаполнено(Форма.Объект.Ответственный) Тогда
					МассивКонтактов.Добавить(Форма.Объект.Ответственный);
				КонецЕсли;
				Для Каждого Строка Из Форма.Объект.Соисполнители Цикл
					МассивКонтактов.Добавить(Строка.Соисполнитель);
				КонецЦикла;
			ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("СправочникСсылка.Партнеры") Тогда
				МассивКонтактов.Добавить(СсылкаНаОбъект);
				Если ЗначениеЗаполнено(Форма.Объект.ОсновнойМенеджер) Тогда
					МассивКонтактов.Добавить(Форма.Объект.ОсновнойМенеджер);
				КонецЕсли;
				Для Каждого Строка Из Форма.КонтактныеЛицаПартнера Цикл
					МассивКонтактов.Добавить(Строка.КонтактноеЛицо);
				КонецЦикла;
			ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
				МассивКонтактов.Добавить(СсылкаНаОбъект);
			ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("СправочникСсылка.CRM_ПотенциальныеКлиенты") Тогда
				МассивКонтактов.Добавить(СсылкаНаОбъект);
				Если ЗначениеЗаполнено(Форма.Объект.Партнер) Тогда
					МассивКонтактов.Добавить(Форма.Объект.Партнер);
				КонецЕсли;
				Если ЗначениеЗаполнено(Форма.Объект.КонтактноеЛицо) Тогда
					МассивКонтактов.Добавить(Форма.Объект.КонтактноеЛицо);
				КонецЕсли;
			КонецЕсли;
			ПараметрыДополнения.Вставить("МассивКонтактов", МассивКонтактов);
			
			CRM_КлиентыСервер.ДополнитьПолучателейЧата(ПолучателиЧата, ПараметрыДополнения);
			
		КонецЕсли;
		
		УчетныеЗаписиМессенджеров = CRM_КлиентыСервер.УчетныеЗаписиМессенджеров(Форма.БыстрыйВвод_ЧатВидКИ, СсылкаНаОбъект);
		НастроитьОбластьВводаУчетныеЗаписиМессенджеров(УчетныеЗаписиМессенджеров, Форма);
		
		НастроитьОбластьВводаПослеФормированияЛенты(ПараметрыЛенты, ПолучателиЧата, Форма);

	КонецЕсли;
	
КонецПроцедуры

// Процедура выполняет настройку области ввода после формирования ленты.
//
// Параметры:
//  ПараметрыЛенты	 - Структура	 - Параметры ленты.
//  ПолучателиЧата	 - Массив	 - Массив получателей чата.
//  Форма			 - ФормаКлиентскогоПриложения	 - Форма.
//
Процедура НастроитьОбластьВводаПослеФормированияЛенты(ПараметрыЛенты, Знач ПолучателиЧата, Форма) Экспорт
	
	Элементы = Форма.Элементы;
	
	ВидимостьКомандыЧат = Форма.Лента_ЗначенияНастроек.ИспользоватьЧаты;
	
	Если ВидимостьКомандыЧат Тогда
		
		Форма.БыстрыйВвод_ЧатПолучатели.Очистить();
		Форма.БыстрыйВвод_ЧатПредставлениеПолучателя = "";
		ЧатПолучателиСписокВыбора = Элементы.БыстрыйВвод_ЧатПредставлениеПолучателя.СписокВыбора;
		ЧатПолучателиСписокВыбора.Очистить();
		
		Для Каждого ДанныеПолучателя Из ПолучателиЧата Цикл
			НоваяСтрока = Форма.БыстрыйВвод_ЧатПолучатели.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеПолучателя);
			ЧатПолучателиСписокВыбора.Добавить(ДанныеПолучателя.Идентификатор, ДанныеПолучателя.Представление);
		КонецЦикла;
		
		Если Форма.БыстрыйВвод_ЧатПолучатели.Количество() > 0 Тогда
			ПервыйПолучатель = Форма.БыстрыйВвод_ЧатПолучатели[0];
			Форма.БыстрыйВвод_ЧатИдентификаторПолучателя	= ПервыйПолучатель.Идентификатор;
			Форма.БыстрыйВвод_ЧатАдрес						= ПервыйПолучатель.Адрес;
			Форма.БыстрыйВвод_ЧатПолучатель					= ПервыйПолучатель.Контакт;
			Форма.БыстрыйВвод_ЧатПредставлениеПолучателя	= ПервыйПолучатель.Представление;

			// учетная запись есть в списке доступных пользователю
			Если Форма.БыстрыйВвод_ЧатУчетныеЗаписи.НайтиСтроки(Новый Структура("УчетнаяЗапись",
				 ПервыйПолучатель.УчетнаяЗапись)).Количество() > 0 Тогда
				Форма.БыстрыйВвод_ЧатУчетнаяЗапись				= ПервыйПолучатель.УчетнаяЗапись;
				Форма.БыстрыйВвод_ЧатПредставлениеУчетнойЗаписи = ПервыйПолучатель.УчетнаяЗапись;
			КонецЕсли; 
			
			Форма.БыстрыйВвод_ЧатГруппа						= ПервыйПолучатель.Группа;
			Форма.БыстрыйВвод_ЧатЭтоНомерТелефона			= ПервыйПолучатель.ЭтоНомерТелефона;
			Форма.БыстрыйВвод_ЧатВидКИ					= ПервыйПолучатель.ВидКИ;
			
			// настроить с учетом установленного получателя
			УчетныеЗаписиМессенджеров = CRM_КлиентыСервер.УчетныеЗаписиМессенджеров(Форма.БыстрыйВвод_ЧатВидКИ,
				 ПараметрыЛенты.Объект);
			НастроитьОбластьВводаУчетныеЗаписиМессенджеров(УчетныеЗаписиМессенджеров, Форма);

		ИначеЕсли НЕ ПараметрыЛенты.ЭтоФормаСписка Тогда
			Элементы.БыстрыйВвод_ЧатПредставлениеПолучателя.СписокВыбора.Добавить("НайтиВМессенджерах",
				 НСтр("ru = 'Найти в мессенджерах'"), ,
				 БиблиотекаКартинок.Обновить);
		КонецЕсли;
		
		НастроитьОбластьВводаЧатСодержание(Форма);
	КонецЕсли;
	
КонецПроцедуры

// Процедура выполняет настройку области ввода учетных записей мессенджеров.
//
// Параметры:
//  УчетныеЗаписиМессенджеров	 - Массив	 - Массив учетных записей мессенджеров.
//  Форма						 - ФормаКлиентскогоПриложения	 - Форма.
//
Процедура НастроитьОбластьВводаУчетныеЗаписиМессенджеров(Знач УчетныеЗаписиМессенджеров, Форма) Экспорт
	
	Если УчетныеЗаписиМессенджеров <> Неопределено Тогда
			
		Форма.БыстрыйВвод_ЧатУчетныеЗаписи.Очистить();
		Форма.БыстрыйВвод_ЧатПредставлениеУчетнойЗаписи = "";
		ЧатУчетныеЗаписиСписокВыбора = Форма.Элементы.БыстрыйВвод_ЧатПредставлениеУчетнойЗаписи.СписокВыбора;
		ЧатУчетныеЗаписиСписокВыбора.Очистить();
		
		Для Каждого ДанныеУчетнойЗаписи Из УчетныеЗаписиМессенджеров Цикл
			НоваяСтрока = Форма.БыстрыйВвод_ЧатУчетныеЗаписи.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеУчетнойЗаписи);
			ЧатУчетныеЗаписиСписокВыбора.Добавить(ДанныеУчетнойЗаписи.УчетнаяЗапись,
				 ДанныеУчетнойЗаписи.Представление, ,
				 ДанныеУчетнойЗаписи.Картинка);
		КонецЦикла;
			
	КонецЕсли;
	
КонецПроцедуры

// Процедура выполняет настройку области ввода "ЧатСодержание".
//
// Параметры:
//  Форма						 - ФормаКлиентскогоПриложения	 - Форма.
//
Процедура НастроитьОбластьВводаЧатСодержание(Форма) Экспорт
	
	СтруктураДиалога = Новый Структура;
	СтруктураДиалога.Вставить("ID_Пользователя", Форма.БыстрыйВвод_ЧатАдрес);
	СтруктураДиалога.Вставить("Контакт", ?(ЗначениеЗаполнено(Форма.БыстрыйВвод_ЧатПолучатель),
		 Форма.БыстрыйВвод_ЧатПолучатель,
		 Форма.БыстрыйВвод_ЧатПредставлениеПолучателя));
	СтруктураДиалога.Вставить("КонтактПредставление", Форма.БыстрыйВвод_ЧатПредставлениеПолучателя);
	СтруктураДиалога.Вставить("Группа", Форма.БыстрыйВвод_ЧатГруппа); 
	СтруктураДиалога.Вставить("ГруппаПредставление", Форма.БыстрыйВвод_ЧатГруппа);
	СтруктураДиалога.Вставить("УчетнаяЗапись", Форма.БыстрыйВвод_ЧатУчетнаяЗапись);
	СтруктураДиалога.Вставить("ЭтоНомерТелефона", Форма.БыстрыйВвод_ЧатЭтоНомерТелефона);
	
	АктивныйДиалог = CRM_РаботаСМессенджерамиСервер.ПолучитьАктивныйДиалог(СтруктураДиалога);
	ЗаблокироватьПолеСообщения = Ложь;
	
	Если ЗначениеЗаполнено(АктивныйДиалог) Тогда
		// Сообщение можно написать, если у активного диалога нет ответственного. либо если диалога нет.
		Ответственный = CRM_ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(АктивныйДиалог, "Ответственный");
		ЗаблокироватьПолеСообщения = ?(ЗначениеЗаполнено(Ответственный)
			 И Ответственный <> ПользователиКлиентСервер.ТекущийПользователь(), Истина, Ложь);
	КонецЕсли;
	
	// Блокировка поля сообщения
	Форма.Элементы.БыстрыйВвод_ЧатСодержание.Доступность = Не ЗаблокироватьПолеСообщения;	
	Форма.Элементы.БыстрыйВвод_СоздатьЧат.Доступность = Не ЗаблокироватьПолеСообщения;	
	Форма.БыстрыйВвод_Содержание = ?(ЗаблокироватьПолеСообщения,
		 СтрШаблон(НСтр("ru = 'Диалог с клиентом ведёт %1. Отправка сообщения недоступна!'"),
		 Ответственный),
		 "");
	
КонецПроцедуры

// Процедура выполняет настройку видимости команд быстрого ввода после формирования ленты.
//
// Параметры:
//  Форма	 - ФормаКлиентскогоПриложения	 - Форма.
//
Процедура ОбластьВводаНастритьВидимостьКомандПослеФормированияЛенты(Форма) Экспорт
	
	Элементы = Форма.Элементы;
	
	ВидимостьКомандыПримечание = Форма.Лента_ЗначенияНастроек.ДоступныПримечания;
	ВидимостьКомандыВзаимодействие = Форма.Лента_ЗначенияНастроек.ДоступныВзаимодействия;
	ВидимостьКомандыЗадача = Форма.Лента_ЗначенияНастроек.ДоступныЗадачи;
	ВидимостьКомандыФайл = Форма.Лента_ЗначенияНастроек.ДоступныПрисоединенныефайлы;
	ВидимостьКомандыЧат = Форма.Лента_ЗначенияНастроек.ИспользоватьЧаты;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "БыстрыйВвод_Примечание",
		 "Видимость",
		 ВидимостьКомандыПримечание);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
		 "БыстрыйВвод_Взаимодействие", "Видимость",
		 ВидимостьКомандыВзаимодействие);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
		 "БыстрыйВвод_ОтменитьПримечание", "Видимость",
		 ВидимостьКомандыВзаимодействие);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "БыстрыйВвод_Задача",
		 "Видимость",
		 ВидимостьКомандыЗадача);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "БыстрыйВвод_Файл",
		 "Видимость",
		 ВидимостьКомандыФайл);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "БыстрыйВвод_Чат",
		 "Видимость",
		 ВидимостьКомандыЧат);
	
КонецПроцедуры

#КонецОбласти
