//@strict-types

#Область СлужебныйПрограммныйИнтерфейс

#Область ДополнительныеПоля

// Возвращает поддерживаемые типы разделов дополнительных полей документов.
//
// Возвращаемое значение:
//  Структура:
//   * Шапка   - Строка
//   * Таблица - Строка
//
Функция ТипыРазделовДополнительныхПолей() Экспорт

	ТипыРазделов = Новый Структура;
	ТипыРазделов.Вставить("Шапка", "Шапка");
	ТипыРазделов.Вставить("Таблица", "Таблица");
	
	Возврат ТипыРазделов;
	
КонецФункции

#КонецОбласти

#Область ОбработкаДействийПоЭДО

// Возвращаемое значение:
//  Соответствие из КлючИЗначение:
//  * Ключ - ПеречислениеСсылка.ДействияПоЭДО
//  * Значение - Булево
Функция НовыйНаборДействийПоЭДО() Экспорт
	Возврат Новый Соответствие;
КонецФункции

// Параметры:
//  НаборДействий - См. НовыйНаборДействийПоЭДО
//  Действие      - ПеречислениеСсылка.ДействияПоЭДО
Процедура ДобавитьДействие(НаборДействий, Действие) Экспорт
	НаборДействий.Вставить(Действие, Истина);
КонецПроцедуры

// Возвращаемое значение:
//  Структура:
//  * Комментарий - Строка
//  * Ответственный - Неопределено,ОпределяемыйТип.Пользователь
Функция НовыеДополнительныеПараметрыДействия() Экспорт
	Параметры = Новый Структура;
	Параметры.Вставить("Комментарий", "");
	Параметры.Вставить("Ответственный", Неопределено);
	Возврат Параметры;
КонецФункции

// Возвращаемое значение:
//  Структура:
//   * ОбработаноПоДействиям - Соответствие из КлючИЗначение:
//     ** Ключ     - ПеречислениеСсылка.ДействияПоЭДО
//     ** Значение - Число
//   * ОбработанныеДокументы - Соответствие из КлючИЗначение:
//     ** Ключ     - ДокументСсылка.ЭлектронныйДокументВходящийЭДО,
//                   ДокументСсылка.ЭлектронныйДокументИсходящийЭДО
//     ** Значение - Булево
//   * ОбработанныеУчетныеЗаписи - Соответствие из КлючИЗначение:
//     ** Ключ     - Строка
//     ** Значение - см. ДиагностикаЭДОКлиентСервер.НовоеОписаниеОбработаннойУчетнойЗаписи
//   * РезультатыОтправкиПолучения - см. НовыеРезультатыОтправкиПолучения
//   * ПолученоКонтейнеров - Число
//   * ОбработаноКонтейнеров - Число
Функция НовыйИтогВыполненияДействийПоЭДО() Экспорт
	Итог = Новый Структура;
	Итог.Вставить("ОбработаноПоДействиям", Новый Соответствие);
	Итог.Вставить("ОбработанныеДокументы", Новый Соответствие);
	Итог.Вставить("ОбработанныеУчетныеЗаписи", Новый Соответствие);
	Итог.Вставить("РезультатыОтправкиПолучения", НовыеРезультатыОтправкиПолучения());
	Итог.Вставить("ПолученоКонтейнеров", 0);
	Итог.Вставить("ОбработаноКонтейнеров", 0);
	Возврат Итог;
КонецФункции

// Параметры:
//  Приемник - см. НовыйИтогВыполненияДействийПоЭДО
//  Источник - см. НовыйИтогВыполненияДействийПоЭДО
Процедура ДополнитьИтогВыполненияДействийПоЭДО(Приемник, Источник) Экспорт
	
	ОбщегоНазначенияКлиентСервер.ДополнитьСоответствие(Приемник.ОбработанныеДокументы,
		Источник.ОбработанныеДокументы, Истина);
	
	ОбработаноПоДействиямПриемника = Приемник.ОбработаноПоДействиям;
	
	Для Каждого ОбработаноПоДействиюИсточника Из Источник.ОбработаноПоДействиям Цикл
		Обработано = ОбработаноПоДействиюИсточника.Значение;
		Действие = ОбработаноПоДействиюИсточника.Ключ;
		
		ОбработаноПриемник = ОбработаноПоДействиямПриемника[Действие];
		Если ЗначениеЗаполнено(ОбработаноПриемник) Тогда
			Обработано = Обработано + ОбработаноПриемник;
		КонецЕсли;
		
		ОбработаноПоДействиямПриемника.Вставить(Действие, Обработано);
	КонецЦикла;
	
	ДополнитьРезультатыОтправкиПолучения(Приемник.РезультатыОтправкиПолучения, Источник.РезультатыОтправкиПолучения);
	
	ОбщегоНазначенияКлиентСервер.ДополнитьСоответствие(Приемник.ОбработанныеУчетныеЗаписи, Источник.ОбработанныеУчетныеЗаписи, Истина);
	
	Приемник.ПолученоКонтейнеров = Приемник.ПолученоКонтейнеров + Источник.ПолученоКонтейнеров;
	Приемник.ОбработаноКонтейнеров = Приемник.ОбработаноКонтейнеров + Источник.ОбработаноКонтейнеров;
КонецПроцедуры

// Параметры:
//  Приемник - см. НовыеРезультатыОтправкиПолучения
//  Источник - см. НовыеРезультатыОтправкиПолучения
Процедура ДополнитьРезультатыОтправкиПолучения(Приемник, Источник) Экспорт
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Приемник.Успешные, Источник.Успешные);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Приемник.Неудачные, Источник.Неудачные);
КонецПроцедуры

// Возвращаемое значение:
//  Структура:
//  * ОписанияДокументовПоФайлам - Массив из см. НовоеОписаниеДокументаДляФормированияПоФайлам
//  * ОбъектыУчета               - Массив из ОпределяемыйТип.ОснованияЭлектронныхДокументовЭДО
//  * ЭлектронныеДокументы       - Массив из ДокументСсылка.ЭлектронныйДокументВходящийЭДО,
//                                           ДокументСсылка.ЭлектронныйДокументИсходящийЭДО
//  * Сообщения                  - Массив из ДокументСсылка.СообщениеЭДО
//  * ПакетыДокументов           - Массив из УникальныйИдентификатор
//  * ИдентификаторыОрганизаций  - Массив из Строка
//  * ТранспортныеКонтейнеры     - Массив из ДокументСсылка.ТранспортныйКонтейнерЭДО
Функция НовыеОбъектыДействийПоЭДО() Экспорт
	ОбъектыДействий = Новый Структура;
	ОбъектыДействий.Вставить("ОписанияДокументовПоФайлам", Новый Массив);
	ОбъектыДействий.Вставить("ОбъектыУчета", Новый Массив);
	ОбъектыДействий.Вставить("ЭлектронныеДокументы", Новый Массив);
	ОбъектыДействий.Вставить("Сообщения", Новый Массив);
	ОбъектыДействий.Вставить("ПакетыДокументов", Новый Массив);
	ОбъектыДействий.Вставить("ИдентификаторыОрганизаций", Новый Массив);
	ОбъектыДействий.Вставить("ТранспортныеКонтейнеры", Новый Массив);
	Возврат ОбъектыДействий;
КонецФункции

// Возвращаемое значение:
//  Структура - Описание:
//  * НаборДействий - См. НовыйНаборДействийПоЭДО
//  * ОбъектыДействий - См. НовыеОбъектыДействийПоЭДО
//  * ДополнительныеПараметрыДействий - Соответствие из КлючИЗначение:
//    ** Ключ - ОпределяемыйТип.ОснованияЭлектронныхДокументовЭДО
//    ** Значение - См. НовыеДополнительныеПараметрыДействия
//  * КлючиНастроекОбъектов - Соответствие из КлючИЗначение:
//    ** Ключ - ОпределяемыйТип.ОснованияЭлектронныхДокументовЭДО
//    ** Значение - См. НастройкиВнутреннегоЭДО.КлючОбъектаНастроекВнутреннегоЭДО
//  * НастройкиОбъектов - Соответствие из КлючИЗначение:
//    ** Ключ - ОпределяемыйТип.ОснованияЭлектронныхДокументовЭДО
//    ** Значение - См. НастройкиЭДО.НастройкиОтправки
//  * МаршрутыПодписанияОбъектов - Соответствие из КлючИЗначение:
//    ** Ключ - ОпределяемыйТип.ОснованияЭлектронныхДокументовЭДО
//    ** Значение - СправочникСсылка.МаршрутыПодписания
//  * ДополнительныеДанныеОбъектов - Соответствие из КлючИЗначение:
//    ** Ключ - ОпределяемыйТип.ОснованияЭлектронныхДокументовЭДО
//    ** Значение - Произвольный
//  * ПодписантыОбъектов - Соответствие из КлючИЗначение:
//    ** Ключ - ОпределяемыйТип.ОснованияЭлектронныхДокументовЭДО
//    ** Значение - Массив из ОпределяемыйТип.Пользователь
//  * ОтпечаткиСертификатов - Неопределено - если получение отпечатков не выполнялось.
//                          - См. КриптографияБЭДКлиентСервер.НовыеРезультатыПолученияОтпечатков
//  * ВыбранныеСертификаты - Массив из СправочникСсылка.СертификатыКлючейЭлектроннойПодписиИШифрования
//  * ИдентификаторыПечатныхФормОбъектов - Соответствие из КлючИЗначение:
//    ** Ключ - ОпределяемыйТип.ОснованияЭлектронныхДокументовЭДО
//    ** Значение - Строка
//  * РасшифрованныеМаркеры - Неопределено - при отсутствии маркеров.
//                          - см. КриптографияБЭДКлиентСервер.НовыйНаборРасшифрованныхДанных
//  * ДополнительныеФайлы - Соответствие из КлючИЗначение:
//    ** Ключ - ОпределяемыйТип.ОснованияЭлектронныхДокументовЭДО
//    ** Значение - См. РаботаСФайламиБЭДКлиентСервер.НовоеОписаниеФайла
//  * ДанныеРучногоФормированияТитула - Неопределено - заполняется в формах ручного формирования титулов
//                                    - См. ИнтерфейсДокументовЭДОКлиентСервер.ДанныеРучногоФормированияТитула
//  * ОбработатьТолькоИзвещения - Булево
Функция НовыеПараметрыВыполненияДействийПоЭДО() Экспорт
	ПараметрыВыполнения = Новый Структура;
	ПараметрыВыполнения.Вставить("НаборДействий", НовыйНаборДействийПоЭДО());
	ПараметрыВыполнения.Вставить("ОбъектыДействий", НовыеОбъектыДействийПоЭДО());
	ПараметрыВыполнения.Вставить("ДополнительныеПараметрыДействий", Новый Соответствие);
	ПараметрыВыполнения.Вставить("КлючиНастроекОбъектов", Новый Соответствие);
	ПараметрыВыполнения.Вставить("НастройкиОбъектов", Новый Соответствие);
	ПараметрыВыполнения.Вставить("МаршрутыПодписанияОбъектов", Новый Соответствие);
	ПараметрыВыполнения.Вставить("ПодписантыОбъектов", Новый Соответствие);
	ПараметрыВыполнения.Вставить("ДополнительныеДанныеОбъектов", Новый Соответствие);
	ПараметрыВыполнения.Вставить("ОтпечаткиСертификатов", Неопределено);
	ПараметрыВыполнения.Вставить("ВыбранныеСертификаты", Новый Массив);
	ПараметрыВыполнения.Вставить("ИдентификаторыПечатныхФормОбъектов", Новый Соответствие);
	ПараметрыВыполнения.Вставить("РасшифрованныеМаркеры", Неопределено);
	ПараметрыВыполнения.Вставить("ДополнительныеФайлы", Новый Соответствие);
	ПараметрыВыполнения.Вставить("ДанныеРучногоФормированияТитула", Неопределено);
	ПараметрыВыполнения.Вставить("ОбработатьТолькоИзвещения", Ложь);
	Возврат ПараметрыВыполнения;
КонецФункции

// Возвращаемое значение:
//  Структура:
//  * СвойстваПодписи - Неопределено 
//                    - См. ЭлектронныеДокументыЭДОСлужебный.НовыеДанныеПодписи
//  * ЭтоПодписьПоДоверенности - Булево
//  * СвойстваДоверенности - Неопределено
//                         - см. МашиночитаемыеДоверенности.ОбщиеСвойстваДоверенности
//  * РезультатПроверкиПоМЧД - Неопределено 
//                            - см. МашиночитаемыеДоверенности.НовыйРезультатПроверкиПодписи
//  * ПодписанныйОбъект - СправочникСсылка.СообщениеЭДОПрисоединенныеФайлы
Функция НовыеДанныеПодписиСУчетомДоверенности() Экспорт
	
	ДанныеПодписи = Новый Структура;
	ДанныеПодписи.Вставить("СвойстваПодписи", Неопределено);
	ДанныеПодписи.Вставить("ЭтоПодписьПоДоверенности", Ложь);
	ДанныеПодписи.Вставить("СвойстваДоверенности", Неопределено);
	ДанныеПодписи.Вставить("РезультатПроверкиПоМЧД", Неопределено);
	ДанныеПодписи.Вставить("ПодписанныйОбъект", ПредопределенноеЗначение("Справочник.СообщениеЭДОПрисоединенныеФайлы.ПустаяСсылка"));

	Возврат ДанныеПодписи;
	
КонецФункции

// Возвращаемое значение:
//  Структура:
//  * Успешные  - Массив из ДокументСсылка.ЭлектронныйДокументВходящийЭДО - содержит ссылки на успешно
//                                               отправленные/полученные электронные документы документы или
//                                               транспортные контейнеры.
//              - Массив из ДокументСсылка.ЭлектронныйДокументИсходящийЭДО
//              - Массив из ДокументСсылка.ТранспортныйКонтейнерЭДО
//  * Неудачные - Массив из ДокументСсылка.ЭлектронныйДокументВходящийЭДО - одержит ссылки на
//                                                неудачно отправленные/полученные документы или
//                                                транспортные контейнеры.
//              - Массив из ДокументСсылка.ЭлектронныйДокументИсходящийЭДО
//              - Массив из ДокументСсылка.ТранспортныйКонтейнерЭДО
Функция НовыеРезультатыОтправкиПолучения() Экспорт
	Возврат Новый Структура("Успешные, Неудачные", Новый Массив, Новый Массив);
КонецФункции

// Параметры:
//  ОбъектыДействий - см. ИнтерфейсДокументовЭДОКлиентСервер.НовыеОбъектыДействийПоЭДО
// 
// Возвращаемое значение:
//  Булево
Функция ОтсутствуютОбъектыДействий(ОбъектыДействий) Экспорт
	Для Каждого Элемент Из ОбъектыДействий Цикл
		Если ЗначениеЗаполнено(Элемент.Значение) Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	Возврат Истина;
КонецФункции

// Параметры:
//  НаборДействий - см. НовыйНаборДействийПоЭДО
// 
// Возвращаемое значение:
//  Булево
Функция ТребуютсяОтпечаткиСертификатовДляНабораДействий(НаборДействий) Экспорт
	
	ТребуютсяОтпечатки =
			ЕстьДействие(НаборДействий, ПредопределенноеЗначение("Перечисление.ДействияПоЭДО.Подписать"))
			ИЛИ ЕстьДействие(НаборДействий, ПредопределенноеЗначение("Перечисление.ДействияПоЭДО.Отправить"))
			ИЛИ ЕстьДействие(НаборДействий, ПредопределенноеЗначение("Перечисление.ДействияПоЭДО.Загрузить"));
	
	Возврат ТребуютсяОтпечатки;
	
КонецФункции

// Возвращает признак наличия действия в наборе.
// 
// Параметры:
//  НаборДействий - См. НовыйНаборДействийПоЭДО
//  Действие      - ПеречислениеСсылка.ДействияПоЭДО
// Возвращаемое значение:
//  Булево - признак наличия действия в наборе.
//
Функция ЕстьДействие(НаборДействий, Действие) Экспорт
	Возврат НаборДействий[Действие] = Истина;
КонецФункции

// Возвращаемое значение:
//  Структура - Новое описание документа для формирования по файлам:
//  * Идентификатор - Строка
//  * Организация - Неопределено,ОпределяемыйТип.Организация
//  * Контрагент - Неопределено,ОпределяемыйТип.УчастникЭДО
//  * Договор - Неопределено,ОпределяемыйТип.ДоговорСКонтрагентомЭДО
//  * ВидДокумента - Неопределено,СправочникСсылка.ВидыДокументовЭДО
//  * Дата - Дата
//  * Номер - Строка
//  * Сумма - Число
//  * ФайлыТитулов - Массив Из См. НовыеФайлыТитулаДокументаДляФормирования
//  * ОбъектыУчета - Массив Из ОпределяемыйТип.ОснованияЭлектронныхДокументовЭДО
//  * СопроводительнаяЗаписка - Строка
//  * ЭтоВходящийЭДО - Булево
//  * Подписанты - Массив из ОпределяемыйТип.Пользователь
//  * МаршрутПодписания - СправочникСсылка.МаршрутыПодписания
Функция НовоеОписаниеДокументаДляФормированияПоФайлам() Экспорт
	Описание = Новый Структура;
	Описание.Вставить("Идентификатор", "");
	Описание.Вставить("Организация", Неопределено);
	Описание.Вставить("Контрагент", Неопределено);
	Описание.Вставить("Договор", Неопределено);
	Описание.Вставить("ВидДокумента", Неопределено);
	Описание.Вставить("Дата", Дата(1, 1, 1));
	Описание.Вставить("Номер", "");
	Описание.Вставить("Сумма", 0);
	Описание.Вставить("ФайлыТитулов", Новый Массив);
	Описание.Вставить("ОбъектыУчета", Новый Массив);
	Описание.Вставить("СопроводительнаяЗаписка", "");
	Описание.Вставить("ЭтоВходящийЭДО", Ложь);
	Описание.Вставить("Подписанты", Новый Массив);
	Описание.Вставить("МаршрутПодписания", ПредопределенноеЗначение("Справочник.МаршрутыПодписания.ПустаяСсылка"));
	Возврат Описание;
КонецФункции

// Возвращаемое значение:
//  Структура:
//  * Основной - Неопределено
//             - См. РаботаСФайламиБЭДКлиентСервер.НовоеОписаниеФайла
//  * Дополнительный - Неопределено - если дополнительный файл отсутствует.
//                   - См. РаботаСФайламиБЭДКлиентСервер.НовоеОписаниеФайла
Функция НовыеФайлыТитулаДокументаДляФормирования() Экспорт
	
	ФайлыТипаРегламента = Новый Структура;
	ФайлыТипаРегламента.Вставить("Основной", Неопределено);
	ФайлыТипаРегламента.Вставить("Дополнительный", Неопределено);
	Возврат ФайлыТипаРегламента;
	
КонецФункции

// Возвращаемое значение:
//  Строка
Функция НовыйИдентификаторДокумента() Экспорт
	Возврат Строка(Новый УникальныйИдентификатор);
КонецФункции

#КонецОбласти

#Область ДанныеОтветныхТитулов

// Возвращаемое значение:
//  Структура:
//  * Формат - Строка
//  * Данные - Неопределено,Произвольный
Функция НовыеДанныеРучногоФормированияТитула() Экспорт
	ДанныеТитула = Новый Структура;
	ДанныеТитула.Вставить("Формат", "");
	ДанныеТитула.Вставить("Данные", Неопределено);
	Возврат ДанныеТитула;
КонецФункции

// Возвращаемое значение:
//  Структура:
//  * СоставительДокументаНаименование - Строка
//  * СодержаниеФХЖ - Структура:
//    ** СведенияОПринятииТоваров - Структура:
//       *** КодИтога - Строка
//       *** ДатаПолученияТоваров - Дата
//       *** СодержаниеОперации - Строка 
//       *** ДокументОРасхождениях - Структура:
//           **** НаименованиеДокумента - Строка
//           **** ДатаДокумента - Дата
//           **** НомерДокумента - Строка
//  * ЗакупкаДляГосударственныхНужд - Неопределено,Структура:
//    ** КодЗакупки - Строка
//    ** НомерЛицевогоСчетаПокупателя - Строка
//    ** НаименованиеФинансовогоОрганаПокупателя - Строка
//    ** НомерРеестровойЗаписиПокупателя - Строка
//    ** НомерБюджетногоОбязательстваПокупателя - Строка
//    ** КазначействоПокупателяКод - Строка
//    ** КазначействоПокупателяНаименование - Строка
//    ** ОКТМОМестаПоставки - Строка
//    ** НомерДенежногоОбязательства - Строка
//    ** ПредельнаяДатаОплаты - Дата
//    ** ОКТМОПокупателя - Строка
//  * ДенежныеОбязательства - Неопределено,Массив Из Структура:
//    ** ВидСредств - Строка
//    ** КодБюджетнойКлассификации - Строка
//    ** КодОбъектаФАИП - Строка
//    ** КодЦели - Строка
//    ** НомерСтрокиИнформацииПродавца - Число
//    ** СуммаАванса - Число
Функция НовыеДанныеРучногоФормированияОтветногоТитулаУПД_5_02() Экспорт
	Данные = Новый Структура;
	Данные.Вставить("СоставительДокументаНаименование", "");
	Данные.Вставить("СодержаниеФХЖ", Новый Структура);
	Данные.Вставить("ЗакупкаДляГосударственныхНужд", Неопределено);
	Данные.Вставить("ДенежныеОбязательства", Новый Массив);
	Возврат Данные;
КонецФункции

// Возвращаемое значение:
//  Структура:
//  * СоставительДокументаНаименование - Строка
//  * СоставительДокументаДоверенность - Строка
//  * СведенияОПринятииТоваров - Неопределено,Структура:
//    ** КодИтога - Строка
//    ** ДатаПолученияТоваров - Дата
//    ** СодержаниеОперации - Строка
//  * ДокументОРасхождениях - Неопределено,Структура:
//    ** Вид - Строка
//    ** Наименование - Строка
//    ** Дата - Дата
//    ** Номер - Строка
//  * ЗакупкаДляГосударственныхНужд - Неопределено,Структура:
//    ** КодЗакупки - Строка
//    ** НомерЛицевогоСчетаПокупателя - Строка
//    ** НаименованиеФинансовогоОрганаПокупателя - Строка
//    ** НомерРеестровойЗаписиПокупателя - Строка
//    ** НомерБюджетногоОбязательстваПокупателя - Строка
//    ** КазначействоПокупателяКод - Строка
//    ** КазначействоПокупателяНаименование - Строка
//    ** ОКТМОМестаПоставки - Строка
//    ** НомерДенежногоОбязательства - Строка
//    ** ПредельнаяДатаОплаты - Дата
//    ** ОКТМОПокупателя - Строка
//  * ДенежныеОбязательства - Массив Из Структура:
//    ** ВидСредств - Строка
//    ** КодБюджетнойКлассификации - Строка
//    ** КодОбъектаФАИП - Строка
//    ** КодЦели - Строка
//    ** НомерСтрокиИнформацииПродавца - Число
//    ** СуммаАванса - Число
Функция НовыеДанныеРучногоФормированияОтветногоТитулаУПД_2019() Экспорт
	Данные = Новый Структура;
	Данные.Вставить("СоставительДокументаНаименование", "");
	Данные.Вставить("СоставительДокументаДоверенность", "");
	Данные.Вставить("СведенияОПринятииТоваров", Неопределено);
	Данные.Вставить("ДокументОРасхождениях", Неопределено);
	Данные.Вставить("ЗакупкаДляГосударственныхНужд", Неопределено);
	Данные.Вставить("ДенежныеОбязательства", Новый Массив);
	Возврат Данные;
КонецФункции

// Возвращаемое значение:
//  Структура:
//  * СоставительДокументаНаименование - Строка
//  * СоставительДокументаДоверенность - Строка
//  * ДатаСогласования - Дата
//  * СодержаниеОперации - Строка
Функция НовыеДанныеРучногоФормированияОтветногоТитулаУКД_2020() Экспорт
	Данные = Новый Структура;
	Данные.Вставить("СоставительДокументаНаименование", "");
	Данные.Вставить("СоставительДокументаДоверенность", "");
	Данные.Вставить("ДатаСогласования", '00010101');
	Данные.Вставить("СодержаниеОперации", "");
	Возврат Данные;
КонецФункции

// Возвращаемое значение:
//  Структура:
// * СодержаниеДополнительныхСведений - Строка
// * СоставительДокументаНаименование - Строка
// * СоставительДокументаДоверенность - Строка
Функция НовыеДанныеРучногоФормированияДополнительныхСведений() Экспорт
	Данные = Новый Структура;
	Данные.Вставить("СодержаниеДополнительныхСведений", "");
	Данные.Вставить("СоставительДокументаНаименование", "");
	Данные.Вставить("СоставительДокументаДоверенность", "");
	Возврат Данные;
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область КонтрактМенеджераДействийЭДО

// Возвращаемое значение:
//  Строка -  Идентификатор обработчика действий по ЭДО
Функция ИдентификаторМенеджераДействийЭДО() Экспорт
	Возврат "ЭлектронныеДокументыЭДО";
КонецФункции

#КонецОбласти

#КонецОбласти
