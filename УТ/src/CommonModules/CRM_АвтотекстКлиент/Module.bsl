
////////////////////////////////////////////////////////////////////////////////
// CRM автотекст переопределяемый
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Формирует строку кода к исполнению.
//
// Параметры:
//  Реквизиты - Структура:
//     * Реквизиты - Массив
//     * Представление - Строка
//     * ИдентификаторМетаданных - СправочникСсылка.ИдентификаторыОбъектовМетаданных
//  ДобавитьРезультат - Булево
//
// Возвращаемое значение:
//  Булево - Истина, если хотя бы одна из переданных ролей доступна текущему пользователю, 
//			 либо у него есть административные права.
//
Функция СформироватьАвтотекстИзРеквизитов(Реквизиты, ДобавитьРезультат = Истина) Экспорт
	
	СтрокаКода = "Объект";
	
	Для каждого Реквизит Из Реквизиты Цикл
		Если ТипЗнч(Реквизит) = Тип("Строка") Тогда
			СтрокаКода = СтрокаКода + "." + Реквизит;
		ИначеЕсли ТипЗнч(Реквизит) = Тип("СправочникСсылка.ВидыКонтактнойИнформации") Тогда 
			СтрокаКода = "CRM_АвтотекстПереопределяемый.КИОбъекта(" + СтрокаКода + ", """ 
				+ Строка(Реквизит.УникальныйИдентификатор()) 
				+ """)";
		ИначеЕсли ТипЗнч(Реквизит) = Тип("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения") Тогда 
			СтрокаКода = "CRM_АвтотекстПереопределяемый.ДопРеквизитОбъекта(" + СтрокаКода + ", """ 
				+ Строка(Реквизит.УникальныйИдентификатор()) 
				+ """)";
		КонецЕсли;
	КонецЦикла;
	
	Если ДобавитьРезультат Тогда
		СтрокаКода = "Результат = " + СтрокаКода;
	КонецЕсли;
	
	Возврат СтрокаКода;
	
КонецФункции

// Выделяет тег из строки.
//
// Параметры:
//  Строка - Строка - Исходная строка.
//
// Возвращаемое значение:
//  Строка - Обработанная строка тега.
//
Функция ТегАвтотекстаИзСтроки(Строка) Экспорт
	
	СтрокаРезультат = Строка;
	
	СтрокаРезультат = СтрЗаменить(СтрокаРезультат, "\", "");
	СтрокаРезультат = СтрЗаменить(СтрокаРезультат, "/", "");
	СтрокаРезультат = СтрЗаменить(СтрокаРезультат, ":", "");
   	СтрокаРезультат = СтрЗаменить(СтрокаРезультат, "*", "");	
	СтрокаРезультат = СтрЗаменить(СтрокаРезультат, ",", "");
	СтрокаРезультат = СтрЗаменить(СтрокаРезультат, "#", "");
	СтрокаРезультат = СтрЗаменить(СтрокаРезультат, "?", "");
	СтрокаРезультат = СтрЗаменить(СтрокаРезультат, """", "");
	СтрокаРезультат = СтрЗаменить(СтрокаРезультат, ">", "");
	СтрокаРезультат = СтрЗаменить(СтрокаРезультат, "<", "");
	СтрокаРезультат = СтрЗаменить(СтрокаРезультат, "|", "");
	СтрокаРезультат = СтрЗаменить(СтрокаРезультат, "%", "");
	СтрокаРезультат = СтрЗаменить(СтрокаРезультат, "$", "");
	СтрокаРезультат = СтрЗаменить(СтрокаРезультат, ";", "");
	СтрокаРезультат = СтрЗаменить(СтрокаРезультат, "(", "");
	СтрокаРезультат = СтрЗаменить(СтрокаРезультат, ")", "");
	СтрокаРезультат = СтрЗаменить(СтрокаРезультат, Символы.Таб, "");
	СтрокаРезультат = СтрЗаменить(СтрокаРезультат, Символы.ВТаб, "");
	СтрокаРезультат = СтрЗаменить(СтрокаРезультат, " ", "_");
	СтрокаРезультат = ВРег(СтрокаРезультат);
	
	Возврат СтрокаРезультат;
	
КонецФункции

// Создает тег.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, из которой создается тег.
//  Команда - КомандаФормы - запущенная команда формы.
//  ОбъектыАвтотекста - СписокЗначений - список из СправочникСсылка.ИдентификаторыОбъектовМетаданных.
//  ИмяТабличнойЧасти - Строка - Имя ТЧ для выбора реквизитов.
//  ОписаниеОповещения - ОписаниеОповещения - процедура, в которую необходимо передать управление после закрытия
//                                                  формы выбора реквизита.
//
Процедура СоздатьТегАвтотекста(Форма, Команда, ОбъектыАвтотекста, ИмяТабличнойЧасти = "", ОписаниеОповещения) Экспорт
	
	ПараметрыФормы = Новый Структура("ВключатьДопРеквизиты, ВключатьКИ",
		Истина, Истина);
	Если ТипЗнч(ОбъектыАвтотекста) = Тип("СправочникСсылка.ИдентификаторыОбъектовМетаданных") Тогда
		ПараметрыФормы.Вставить("ИдентификаторМетаданных", ОбъектыАвтотекста);
	ИначеЕсли ТипЗнч(ОбъектыАвтотекста) = Тип("СписокЗначений") Тогда
		ПараметрыФормы.Вставить("ИдентификаторыМетаданных", ОбъектыАвтотекста.ВыгрузитьЗначения());
	КонецЕсли;
	Если ЗначениеЗаполнено(ИмяТабличнойЧасти) Тогда
		ПараметрыФормы.Вставить("ИмяТЧ", ИмяТабличнойЧасти);
	КонецЕсли;
	
	ДопПараметры = Новый Структура("Форма", Форма);
	ДопПараметры.Вставить("ОписаниеОповещения", ОписаниеОповещения);
	ДопПараметры.Вставить("ИмяТабличнойЧасти", ИмяТабличнойЧасти);
	ОписаниеОповещения = Новый ОписаниеОповещения("СоздатьТегАвтотекстаЗавершение", ЭтотОбъект, ДопПараметры);
	
	ОткрытьФорму("ОбщаяФорма.CRM_ФормаВыбораРеквизита", ПараметрыФормы, Форма, , , ,
		 ОписаниеОповещения,
		 РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

// Процедура- обработчик заверщения создания тега.
//
// Параметры:
//	Результат		- СправочникСсылка	- Значение, переданное при вызове метода Закрыть.
//	ДопПараметры	- Структура			- Структура дополнительных параметров.
//
Процедура СоздатьТегАвтотекстаЗавершение(Результат, ДопПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураТега = Новый Структура;
	СтруктураТега.Вставить("Наименование", Результат.Представление);
	СтруктураТега.Вставить("ТегАвтотекста", ТегАвтотекстаИзСтроки(Результат.Представление));
	СтруктураТега.Вставить("Идентификатор", Результат.ИдентификаторМетаданных);
	СтруктураТега.Вставить("Действие", СформироватьАвтотекстИзРеквизитов(Результат.Реквизиты));
	СтруктураТега.Вставить("ИмяТабличнойЧасти", ДопПараметры.ИмяТабличнойЧасти);
	
	Элемент = CRM_АвтотекстПереопределяемый.СоздатьЭлементАвтотекста(СтруктураТега);
	
	Если Элемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДопПараметры.Свойство("ОписаниеОповещения") Тогда
		ВыполнитьОбработкуОповещения(ДопПараметры.ОписаниеОповещения, Элемент);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
