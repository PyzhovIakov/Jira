
////////////////////////////////////////////////////////////////////////////////
// Оповещения клиент (CRM)
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Процедура пересчитывает даты оповещений.
//
// Параметры:
//  Форма	 - ФормаКлиентскогоПриложения	 - Форма объекта
//
Процедура ПересчитатьДатыОповещений(Форма) Экспорт
	Ид = 0;
	Для Каждого СтрокаТаблицы Из Форма._ТаблицаОповещений Цикл
		Ид = Ид + 1;
		СтруктураОповещения = Новый Структура;
		Если ТипЗнч(Форма.Объект.Ссылка) = Тип("ДокументСсылка.CRM_Взаимодействие") Тогда
			СтруктураОповещения.Вставить("Предмет",				Новый Структура("Дата",
				 CRM_ОбщегоНазначенияКлиентСервер.СформироватьДатуИзДатыИВремени(Форма.ДатаНачала,
				 Форма.ВремяНачала)));
			СрокОповещения = СтрокаТаблицы.СрокОповещения;
			СтруктураОповещения.Вставить("ВпередПоКалендарю",	Ложь);
		ИначеЕсли ТипЗнч(Форма.Объект.Ссылка) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
			Если ЗначениеЗаполнено(Форма.ДатаОкончание) Тогда
				ДатаОповещения = Форма.ДатаОкончание;
				ВремяОповещения = Форма.ВремяОкончание;
				СрокОповещения = - СтрокаТаблицы.СрокОповещения;
			Иначе
				ДатаОповещения = Форма.ДатаНачало;
				ВремяОповещения = Форма.ВремяНачало;
				СрокОповещения = СтрокаТаблицы.СрокОповещения;
			КонецЕсли;
			СтруктураОповещения.Вставить("Предмет",				Новый Структура("Дата",
				 CRM_ОбщегоНазначенияКлиентСервер.СформироватьДатуИзДатыИВремени(ДатаОповещения,
				 ВремяОповещения)));
			СтруктураОповещения.Вставить("ВпередПоКалендарю",	Истина);
		КонецЕсли;
		СтруктураОповещения.Вставить("ВидОповещения",
					ПредопределенноеЗначение("Справочник.CRM_ВидыОповещений.ЗапланированныеСобытия"));
		СтруктураОповещения.Вставить("СрокОповещения",		СрокОповещения);
		СтруктураОповещения.Вставить("Периодичность",		СтрокаТаблицы.Периодичность);
		СтруктураОповещения.Вставить("Получатель",			ПользователиКлиентСервер.ТекущийПользователь());
		СтрокаТаблицы.ДатаОповещения			= CRM_ОповещенияСервер.ПолучитьДатуОповещения(СтруктураОповещения);
		Форма["_ДатаОповещения" + Строка(Ид)]	= СтрокаТаблицы.ДатаОповещения;
		ПолеДатыОповещения	= Форма.Элементы["ПолеДатыОповещения_" + Строка(Ид)];
		Если СтрокаТаблицы.ДатаОповещения < CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса() Тогда
			ПолеДатыОповещения.Подсказка			= НСтр("ru='Планируемая дата оповещения меньше текущего времени';
				|en='Schedulable date of the notification is less than the current time'");
			ПолеДатыОповещения.ОтображениеПодсказки	= ОтображениеПодсказки.Кнопка;
			ПолеДатыОповещения.ЦветТекста			= Новый Цвет(255, 0, 0);
		Иначе	
			ПолеДатыОповещения.Подсказка			= НСтр("ru='Планируемая дата оповещения';en='Schedulable date of the notification'");
			ПолеДатыОповещения.ОтображениеПодсказки	= ОтображениеПодсказки.Всплывающая;
			ПолеДатыОповещения.ЦветТекста			= Новый Цвет(0, 0, 0);
		КонецЕсли;	
	КонецЦикла;
	Форма.ПризнакИзмененыОповещения = Истина;
КонецПроцедуры 

// Процедура добавляет оповещение.
//
// Параметры:
//  Форма	 - ФормаКлиентскогоПриложения - Форма объекта
//
Процедура ДобавитьОповещение(Форма) Экспорт
	Для Ид = 1 По 5 Цикл
		ГруппаФормы = Форма.Элементы.Найти("ГруппаКанала_" + Строка(Ид));
		Если НЕ ГруппаФормы.Видимость Тогда
			ГруппаФормы.Видимость = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	КоличествоОповещений = Форма._ТаблицаОповещений.Количество() + 1;
	НоваяСтрока	= Форма._ТаблицаОповещений.Добавить();
	НоваяСтрока.Канал			= ПредопределенноеЗначение("Перечисление.CRM_КаналыОповещений.Напоминание");
	НоваяСтрока.СрокОповещения	= 10;
	НоваяСтрока.Периодичность	= ПредопределенноеЗначение("Перечисление.CRM_ПериодичностьОповещений.Минута");
	СтруктураОповещения = Новый Структура;
	Если ТипЗнч(Форма.Объект.Ссылка) = Тип("ДокументСсылка.CRM_Взаимодействие") Тогда
		СтруктураОповещения.Вставить("Предмет",				Новый Структура("Дата",
			 CRM_ОбщегоНазначенияКлиентСервер.СформироватьДатуИзДатыИВремени(Форма.ДатаНачала,
			 Форма.ВремяНачала)));
	ИначеЕсли ТипЗнч(Форма.Объект.Ссылка) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
		Если ЗначениеЗаполнено(Форма.ДатаОкончание) Тогда
			ДатаОповещения = Форма.ДатаОкончание;
			ВремяОповещения = Форма.ВремяОкончание;
		Иначе
			ДатаОповещения = Форма.ДатаНачало;
			ВремяОповещения = Форма.ВремяНачало;
		КонецЕсли;
		СтруктураОповещения.Вставить("Предмет",				Новый Структура("Дата",
			 CRM_ОбщегоНазначенияКлиентСервер.СформироватьДатуИзДатыИВремени(ДатаОповещения,
			 ВремяОповещения)));
	КонецЕсли;
	СтруктураОповещения.Вставить("ВидОповещения",
				ПредопределенноеЗначение("Справочник.CRM_ВидыОповещений.ЗапланированныеСобытия"));
	СтруктураОповещения.Вставить("СрокОповещения",		НоваяСтрока.СрокОповещения);
	СтруктураОповещения.Вставить("Периодичность",		НоваяСтрока.Периодичность);
	СтруктураОповещения.Вставить("ВпередПоКалендарю",	Ложь);
	СтруктураОповещения.Вставить("Получатель",			ПользователиКлиентСервер.ТекущийПользователь());
	НоваяСтрока.ДатаОповещения	= CRM_ОповещенияСервер.ПолучитьДатуОповещения(СтруктураОповещения);
	Форма["_КаналОповещения" + Строка(Ид)]	= НоваяСтрока.Канал;
	Форма["_СрокОповещения" + Строка(Ид)]	= НоваяСтрока.СрокОповещения;
	Форма["_ПериодОповещения" + Строка(Ид)]	= НоваяСтрока.Периодичность;
	Форма["_ДатаОповещения" + Строка(Ид)]	= НоваяСтрока.ДатаОповещения;
	ПолеДатыОповещения	= Форма.Элементы["ПолеДатыОповещения_" + Строка(Ид)];
	Если Форма["_ДатаОповещения" + Строка(Ид)] < CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса() Тогда
		ПолеДатыОповещения.Подсказка			= НСтр("ru='Планируемая дата оповещения меньше текущего времени';
			|en='Schedulable date of the notification is less than the current time'");
		ПолеДатыОповещения.ОтображениеПодсказки	= ОтображениеПодсказки.Кнопка;
		ПолеДатыОповещения.ЦветТекста			= Новый Цвет(255, 0, 0);
	Иначе	
		ПолеДатыОповещения.Подсказка			= НСтр("ru='Планируемая дата оповещения';en='Schedulable date of the notification'");
		ПолеДатыОповещения.ОтображениеПодсказки	= ОтображениеПодсказки.Всплывающая;
		ПолеДатыОповещения.ЦветТекста			= Новый Цвет(0, 0, 0);
	КонецЕсли;
	Форма.Элементы.ДобавитьНовоеОповещение.Видимость = (КоличествоОповещений < 5);
	Форма.ПризнакИзмененыОповещения	= Истина;
	Форма.Модифицированность = Истина;
КонецПроцедуры // ДобавитьОповещение()

// Процедура удаляет оповещение.
//
// Параметры:
//  Форма		 - ФормаКлиентскогоПриложения - Форма объекта
//  ИмяКоманды	 - Строка	 - Имя команды.
//
Процедура УдалитьОповещение(Форма, ИмяКоманды) Экспорт
	ИдПолей = СтрЗаменить(ИмяКоманды, "УдалитьОповещение_", "");
	Ид	= Число(ИдПолей) - 1;
	СтрокаТаблицы = Форма._ТаблицаОповещений[Ид];
	Форма._ТаблицаОповещений.Удалить(СтрокаТаблицы);
	КоличествоОповещений = Форма._ТаблицаОповещений.Количество();
	ГруппаФормы = Форма.Элементы.Найти("ГруппаКанала_" + Строка(КоличествоОповещений + 1));
	ГруппаФормы.Видимость = Ложь;
	Ид = 0;
	Для Каждого СтрокаТаблицы Из Форма._ТаблицаОповещений Цикл
		Ид = Ид + 1;
		Форма["_КаналОповещения" + Строка(Ид)]	= СтрокаТаблицы.Канал;
		Форма["_СрокОповещения" + Строка(Ид)]	= СтрокаТаблицы.СрокОповещения;
		Форма["_ПериодОповещения" + Строка(Ид)]	= СтрокаТаблицы.Периодичность;
		Форма["_ДатаОповещения" + Строка(Ид)]	= СтрокаТаблицы.ДатаОповещения;
		ПолеДатыОповещения	= Форма.Элементы["ПолеДатыОповещения_" + Строка(Ид)];
		Если Форма["_ДатаОповещения" + Строка(Ид)] < CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса() Тогда
			ПолеДатыОповещения.Подсказка			= НСтр("ru='Планируемая дата оповещения меньше текущего времени';
				|en='Schedulable date of the notification is less than the current time'");
			ПолеДатыОповещения.ОтображениеПодсказки	= ОтображениеПодсказки.Кнопка;
			ПолеДатыОповещения.ЦветТекста			= Новый Цвет(255, 0, 0);
		Иначе	
			ПолеДатыОповещения.Подсказка			= НСтр("ru='Планируемая дата оповещения';en='Schedulable date of the notification'");
			ПолеДатыОповещения.ОтображениеПодсказки	= ОтображениеПодсказки.Всплывающая;
			ПолеДатыОповещения.ЦветТекста			= Новый Цвет(0, 0, 0);
		КонецЕсли;
	КонецЦикла;
	Форма.Элементы.ДобавитьНовоеОповещение.Видимость = (КоличествоОповещений < 5);
	Форма.ПризнакИзмененыОповещения	= Истина;
	Форма.Модифицированность = Истина;
КонецПроцедуры // УдалитьОповещение()

// Процедура изменяет оповещение.
//
// Параметры:
//  Форма	 - ФормаКлиентскогоПриложения - Форма объекта
//  Элемент	 - ЭлементФормы		 -   Элемент формы
//
Процедура ИзменитьОповещение(Форма, Элемент) Экспорт
	Если СтрНайти(Элемент.Имя, "ПолеКанала_") > 0 Тогда
		ИдПолей = СтрЗаменить(Элемент.Имя, "ПолеКанала_", "");
	ИначеЕсли СтрНайти(Элемент.Имя, "ПолеСрокаОповещения_") > 0 Тогда
		ИдПолей = СтрЗаменить(Элемент.Имя, "ПолеСрокаОповещения_", "");
	ИначеЕсли СтрНайти(Элемент.Имя, "ПолеПериодаОповещения_") > 0 Тогда
		ИдПолей = СтрЗаменить(Элемент.Имя, "ПолеПериодаОповещения_", "");
	КонецЕсли;
	Если (СтрНайти(Элемент.Имя, "ПолеСрокаОповещения_") > 0)
		ИЛИ (СтрНайти(Элемент.Имя, "ПолеПериодаОповещения_") > 0) Тогда
		СтруктураОповещения = Новый Структура;
		Если ТипЗнч(Форма.Объект.Ссылка) = Тип("ДокументСсылка.CRM_Взаимодействие") Тогда
			СтруктураОповещения.Вставить("Предмет",				Новый Структура("Дата",
				 CRM_ОбщегоНазначенияКлиентСервер.СформироватьДатуИзДатыИВремени(Форма.ДатаНачала,
				 Форма.ВремяНачала)));
			СрокОповещения = Форма["_СрокОповещения" + ИдПолей];
			СтруктураОповещения.Вставить("ВпередПоКалендарю",	Ложь);
		ИначеЕсли ТипЗнч(Форма.Объект.Ссылка) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
			Если ЗначениеЗаполнено(Форма.ДатаОкончание) Тогда
				ДатаОповещения = Форма.ДатаОкончание;
				ВремяОповещения = Форма.ВремяОкончание;
				СрокОповещения = - Форма["_СрокОповещения" + ИдПолей];
			Иначе
				ДатаОповещения = Форма.ДатаНачало;
				ВремяОповещения = Форма.ВремяНачало;
				СрокОповещения = Форма["_СрокОповещения" + ИдПолей];
			КонецЕсли;
			СтруктураОповещения.Вставить("Предмет",				Новый Структура("Дата",
				 CRM_ОбщегоНазначенияКлиентСервер.СформироватьДатуИзДатыИВремени(ДатаОповещения,
				 ВремяОповещения)));
			СтруктураОповещения.Вставить("ВпередПоКалендарю",	Истина);
		КонецЕсли;
		СтруктураОповещения.Вставить("ВидОповещения",
					ПредопределенноеЗначение("Справочник.CRM_ВидыОповещений.ЗапланированныеСобытия"));
		СтруктураОповещения.Вставить("СрокОповещения",		СрокОповещения);
		СтруктураОповещения.Вставить("Периодичность",		Форма["_ПериодОповещения" + ИдПолей]);
		СтруктураОповещения.Вставить("Получатель",			ПользователиКлиентСервер.ТекущийПользователь());
		Форма["_ДатаОповещения" + ИдПолей]	= CRM_ОповещенияСервер.ПолучитьДатуОповещения(СтруктураОповещения);
		ПолеДатыОповещения	= Форма.Элементы["ПолеДатыОповещения_" + ИдПолей];
		Если Форма["_ДатаОповещения" + ИдПолей] < CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса() Тогда
			ПолеДатыОповещения.Подсказка			= НСтр("ru='Планируемая дата оповещения меньше текущего времени';
				|en='Schedulable date of the notification is less than the current time'");
			ПолеДатыОповещения.ОтображениеПодсказки	= ОтображениеПодсказки.Кнопка;
			ПолеДатыОповещения.ЦветТекста			= Новый Цвет(255, 0, 0);
		Иначе	
			ПолеДатыОповещения.Подсказка			= НСтр("ru='Планируемая дата оповещения';en='Schedulable date of the notification'");
			ПолеДатыОповещения.ОтображениеПодсказки	= ОтображениеПодсказки.Всплывающая;
			ПолеДатыОповещения.ЦветТекста			= Новый Цвет(0, 0, 0);
		КонецЕсли;	
	КонецЕсли;
	Ид = Число(ИдПолей) - 1;
	СтрокаТаблицы = Форма._ТаблицаОповещений[Ид];
	СтрокаТаблицы.Канал				= Форма["_КаналОповещения" + ИдПолей];
	СтрокаТаблицы.СрокОповещения	= Форма["_СрокОповещения" + ИдПолей];
	СтрокаТаблицы.Периодичность		= Форма["_ПериодОповещения" + ИдПолей];
	СтрокаТаблицы.ДатаОповещения	= Форма["_ДатаОповещения" + Строка(ИдПолей)];
	Форма.ПризнакИзмененыОповещения = Истина;
	Форма.Модифицированность = Истина;
КонецПроцедуры // УдалитьОповещение()

#КонецОбласти
