// @strict-types

#Область СлужебныйПрограммныйИнтерфейс

// Параметры:
//  ДокументыПакета - Массив из ДокументСсылка.ЭлектронныйДокументВходящийЭДО,ДокументСсылка.ЭлектронныйДокументИсходящийЭДО
//  КонтекстДиагностики - Неопределено - если контекст не инициализирован.
//                      - см. ОбработкаНеисправностейБЭД.НовыйКонтекстДиагностики
// 
// Возвращаемое значение:
//  См. ДлительныеОперации.ВыполнитьФункцию
Функция СоздатьПакетДокументов(Знач ДокументыПакета, КонтекстДиагностики = Неопределено) Экспорт
	
	Если КонтекстДиагностики = Неопределено Тогда
		КонтекстДиагностики = ОбработкаНеисправностейБЭД.НовыйКонтекстДиагностики();
	КонецЕсли;
	
	ПараметрыВыполненияВФоне = ДлительныеОперации.ПараметрыВыполненияФункции(Новый УникальныйИдентификатор);
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполненияВФоне,
		"ПакетыДокументовЭДО.СоздатьПакетДокументов", // См. ПакетыДокументовЭДО.СоздатьПакетДокументов
		ДокументыПакета, КонтекстДиагностики);
	
КонецФункции

// Параметры:
//  ИдентификаторПакета - УникальныйИдентификатор
//  ЭлектронныеДокументы - Массив Из ДокументСсылка.ЭлектронныйДокументВходящийЭДО,ДокументСсылка.ЭлектронныйДокументИсходящийЭДО
//  КонтекстДиагностики - Неопределено - если контекст не инициализирован.
//                      - см. ОбработкаНеисправностейБЭД.НовыйКонтекстДиагностики
// 
// Возвращаемое значение:
//  См. ДлительныеОперации.ВыполнитьФункцию
Функция ДобавитьДокументыВПакет(Знач ИдентификаторПакета, Знач ЭлектронныеДокументы, КонтекстДиагностики = Неопределено) Экспорт
	
	Если КонтекстДиагностики = Неопределено Тогда
		КонтекстДиагностики = ОбработкаНеисправностейБЭД.НовыйКонтекстДиагностики();
	КонецЕсли;
	
	ПараметрыВыполненияВФоне = ДлительныеОперации.ПараметрыВыполненияФункции(Новый УникальныйИдентификатор);
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполненияВФоне,
		"ПакетыДокументовЭДО.ДобавитьДокументыВПакет", // См. ПакетыДокументовЭДО.ДобавитьДокументыВПакет
		ИдентификаторПакета, ЭлектронныеДокументы, КонтекстДиагностики);
	
КонецФункции

// Параметры:
//  ИдентификаторПакета - УникальныйИдентификатор
//  ЭлектронныйДокумент - ДокументСсылка.ЭлектронныйДокументВходящийЭДО,ДокументСсылка.ЭлектронныйДокументИсходящийЭДО
//  КонтекстДиагностики - Неопределено - если контекст не инициализирован.
//                      - см. ОбработкаНеисправностейБЭД.НовыйКонтекстДиагностики
// Возвращаемое значение:
//  См. ДлительныеОперации.ВыполнитьФункцию
Функция УдалитьДокументИзПакета(Знач ИдентификаторПакета, Знач ЭлектронныйДокумент, КонтекстДиагностики = Неопределено) Экспорт
	
	Если КонтекстДиагностики = Неопределено Тогда
		КонтекстДиагностики = ОбработкаНеисправностейБЭД.НовыйКонтекстДиагностики();
	КонецЕсли;
	
	ПараметрыВыполненияВФоне = ДлительныеОперации.ПараметрыВыполненияФункции(Новый УникальныйИдентификатор);
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполненияВФоне,
		"ПакетыДокументовЭДО.УдалитьДокументИзПакета", // См. ПакетыДокументовЭДО.УдалитьДокументИзПакета
		ИдентификаторПакета, ЭлектронныйДокумент, КонтекстДиагностики);
	
КонецФункции

// Параметры:
//  ИдентификаторПакета - УникальныйИдентификатор
// 
// Возвращаемое значение:
//  См. ПакетыДокументовЭДО.ДокументыПакета
Функция ДокументыПакета(Знач ИдентификаторПакета) Экспорт
	
	Возврат ПакетыДокументовЭДО.ДокументыПакета(ИдентификаторПакета);
	
КонецФункции

// Параметры:
//  ПараметрыПакета - Структура:
//						* ИдентификаторПакета - УникальныйИдентификатор
//						* ЭлектронныйДокумент - ДокументСсылка.ЭлектронныйДокументИсходящийЭДО
//
//Возвращаемое значение:
//  Структура:
//	* ОграниченияОбъемаПакетаДокументов - см. РегистрыСведений.ОператорыЭДО.НовыйОграниченияОбъемаПакетаДокументов
//	* ОбъемПакетаДокументов - см. ПакетыДокументовЭДО.НовыйОбъемПакетаДокументов
Функция ОграниченияИОбъемПакета(ПараметрыПакета) Экспорт
	
	Возврат ПакетыДокументовЭДО.ОграниченияИОбъемПакета(ПараметрыПакета);
	
КонецФункции

#КонецОбласти
