
#Область ПрограммныйИнтерфейс

// Возвращает параметры сервера телефонии
// 
// Возвращаемое значение:
//  Структура - Параметры сервера
//
Функция сфпПараметрыСервера() Экспорт 
	Структура = Новый Структура;
	Структура.Вставить("ПрефиксВыходаВМежгород",				Константы.сфпПрефиксВыходаВМежгород.Получить());
	Структура.Вставить("ПрефиксВыходаНаМеждународную",			Константы.сфпПрефиксВыходаНаМеждународную.Получить());
	Структура.Вставить("МаксимальнаяДлинаВнутреннихНомеров",	Константы.сфпМаксимальнаяДлинаВнутреннихНомеров.Получить());
	Структура.Вставить("ПоследниеЦифрыТелефонногоНомера",		Константы.сфпПоследниеЦифрыТелефонногоНомера.Получить());
	Структура.Вставить("КодСтраны",								Константы.сфпКодСтраны.Получить());
	Структура.Вставить("КодГорода",								Константы.сфпКодГорода.Получить());
	Структура.Вставить("ПрефиксВыходаВГород",					Константы.сфпПрефиксВыходаВГород.Получить());
	Структура.Вставить("ИспользоватьИсториюЗвонков",			Константы.сфпИспользоватьИсториюЗвонков.Получить());
	Структура.Вставить("СтрокаПодключенияИстории",				Константы.сфпСтрокаПодключенияИстории.Получить());
	Структура.Вставить("ИспользоватьМаршрутизацию",				Константы.сфпИспользоватьМаршрутизацию.Получить());
	Возврат Структура;
КонецФункции // сфпПараметрыСервера()

// Функция - Идентификатор текущего пользователя системы взаимодействия
// 
// Возвращаемое значение:
//  ИдентификаторПользователяСистемыВзаимодействия  - Идентифицирует пользователя системы взаимодействия.
// 
Функция ИдентификаторТекущегоПользователяСистемыВзаимодействия() Экспорт
	
	Возврат СистемаВзаимодействия.ИдентификаторТекущегоПользователя();
	
КонецФункции

// функция возвращает подчиненные по иерерахии подразделения.
//
// Параметры:
//  ПодраздениеРодитель	 - СправочникСсылка	 - Подразделение
//  МассивПодразделений	 - Массив			 - формируемый рекурсивно массив.
// 
// Возвращаемое значение:
//  МассивПодразделений - Массив подразделений.
//
Функция ПолучитьПодчиненныеПодразделенияПользователя(ПодраздениеРодитель, МассивПодразделений) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтруктураПредприятия.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
	|ГДЕ СтруктураПредприятия.Родитель = &Родитель");
	Запрос.УстановитьПараметр("Родитель", ПодраздениеРодитель);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		МассивПодразделений.Добавить(Выборка.Ссылка);
		ПолучитьПодчиненныеПодразделенияПользователя(Выборка.Ссылка, МассивПодразделений);
	КонецЦикла;
	
	Возврат МассивПодразделений; 
		
КонецФункции // ПолучитьПодчиненныеПодразделенияПользователя()

// функция возвращает массив подразделений, в которых пользователь - руководитель.
// 
// Параметры:
//	Пользователь	- СправочникСсылка	- Пользователь
//  ПодчиненныеПодразделения  - Булево - включаем подчиненные  по иерархии подразделения или нет.
//
// Возвращаемое значение:
//	МассивПодразделений	- Массив подразделений.
//
Функция ПолучитьПодразделенияВКоторыхРуководитель(Пользователь, ПодчиненныеПодразделения = Ложь) Экспорт
	
	МассивПодразделений = Новый Массив();
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтруктураПредприятия.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
	|ГДЕ СтруктураПредприятия.ТекущийРуководитель = &ТекущийРуководитель");
	Запрос.УстановитьПараметр("ТекущийРуководитель", Пользователь);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		МассивПодразделений.Добавить(Выборка.Ссылка);
		Если ПодчиненныеПодразделения Тогда
			ПолучитьПодчиненныеПодразделенияПользователя(Выборка.Ссылка, МассивПодразделений);
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивПодразделений;
		
КонецФункции // ПолучитьПодразделенияВКоторыхРуководитель()

// Возвращает текущего пользователя системы взаимодействия.
//
// Возвращаемое значение:
//	СправочникСсылка.Пользователи - текущий пользователь системы взаимодействия.
//
Функция ТекущийПользовательСистемыВзаимодействия() Экспорт
	
	Возврат сфпЛицензированиеЭкспортныеМетоды.ТекущийПользовательСистемыВзаимодействия();

КонецФункции

// Функция возвращает идентификатор того пользователя системы взаимодействия,
// который соответствует пользователю информационной базы.
// 
// Параметры:
//	Пользователь	- СправочникСсылка	- Пользователь
//
// Возвращаемое значение:
//	ИдентификаторПользователяСистемыВзаимодействия	- Идентификатор пользователя системы взаимодействия.
//
Функция ИдентификаторПользователяСистемыВзаимодействия(Пользователь) Экспорт
	
	Попытка
		ИдентификаторПользователя =
		СистемаВзаимодействия.ПолучитьИдентификаторПользователя(Пользователь.ИдентификаторПользователяИБ);
	
	Исключение ИдентификаторПользователя = Неопределено;
	КонецПопытки;
	
	Возврат ИдентификаторПользователя;
	
КонецФункции	//	ИдентификаторПользователяСистемыВзаимодействия()

// Возвращает идентификатор журнала телефонных звонков
//
// Возвращаемое значение:
//	ИдентификаторОбсужденияСистемыВзаимодействия - идентификатор журнала звонков системы взаимодействия.
//
Функция ИдентификаторОбсужденияЖурналЗвонков() Экспорт
	
	ОбсуждениеЖурналИдентификатор = Неопределено;
	
	СистемнаяИнформация = Новый СистемнаяИнформация();
	Если сфпОбщегоНазначенияКлиентСервер.СравнитьВерсии(СистемнаяИнформация.ВерсияПриложения, "8.3.11.0") < 0 Тогда
		Возврат ОбсуждениеЖурналИдентификатор;
	КонецЕсли;
	
	#Если НЕ ВнешнееСоединение Тогда
	Ключ = сфпСофтФонПроСервер.КлючСлужебногоОбсужденияСистемыВзаимодействия();
	
	Если НЕ СистемаВзаимодействия.ИнформационнаяБазаЗарегистрирована() Тогда
		Возврат ОбсуждениеЖурналИдентификатор;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ИдентификаторСтрокой = Константы.сфпИдентификаторЖурналаЗвонковСистемыВзаимодействия.Получить();
	Если ЗначениеЗаполнено(ИдентификаторСтрокой) Тогда
		ОбсуждениеЖурналИдентификатор = Новый ИдентификаторОбсужденияСистемыВзаимодействия(ИдентификаторСтрокой);
		
	Иначе
		Попытка
			Обсуждение = СистемаВзаимодействия.ПолучитьОбсуждение(Ключ);
			Если Обсуждение = Неопределено Тогда
				  ОбсуждениеЖурналИдентификатор = сфпСофтФонПроСервер.СоздатьОбсуждениеЖурналЗвонков();
			Иначе ОбсуждениеЖурналИдентификатор = Обсуждение.Идентификатор;
			КонецЕсли;
			Константы.сфпИдентификаторЖурналаЗвонковСистемыВзаимодействия.Установить(ОбсуждениеЖурналИдентификатор);
		Исключение
			ЗаписьЖурналаРегистрации(НСтр("en='Search discuss System interaction key';
				|ru='Поиск обсуждения Системы взаимодействия по ключу'"), УровеньЖурналаРегистрации.Ошибка, , Ключ,
				 ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
	КонецЕсли;	
	#КонецЕсли
		
	Возврат ОбсуждениеЖурналИдентификатор;
	
КонецФункции	//	ИдентификаторОбсужденияЖурналЗвонков()

// Возвращает признак:текущая конфигурация является CRM или нет
// 
// Возвращаемое значение:
//  Булево - признак что тек. конфигурация - не CRM
//
Функция ЭтоНеCRM() Экспорт
	Возврат Метаданные.Справочники.Найти("Контрагенты") <> Неопределено;
КонецФункции

#КонецОбласти
