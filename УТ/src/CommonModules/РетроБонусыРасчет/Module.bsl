//@strict-types

#Область СлужебныйПрограммныйИнтерфейс

// Параметры:
//  ЗначенияРеквизитов - Структура:
//   * Проведен - Булево
//   * БезРасчета - Булево
//   * Статус - ПеречислениеСсылка.СтатусыДокументовРетроБонусов
//  Отказ - Булево
//  ВызыватьИсключение - Булево
//
Процедура ПроверитьРеквизитыУсловий(ЗначенияРеквизитов, Отказ, ВызыватьИсключение = Ложь) Экспорт
	
	ТекстСообщения = "";
	
	Если ЗначенияРеквизитов.Проведен <> Истина Тогда
		ТекстСообщения = НСтр("ru = 'Документ условий ретро-бонусов не проведен. Формирование отчета выполнено не будет'");
	КонецЕсли;
	
	Если ЗначенияРеквизитов.БезРасчета = Истина Тогда
		ТекстСообщения = НСтр("ru = 'Формирование отчета не предусмотрено для ретро-бонусов с флагом ""Сумма бонуса рассчитывается вне системы""'");
	КонецЕсли;
	
	Если ЗначенияРеквизитов.Статус <> Перечисления.СтатусыДокументовРетроБонусов.Согласован Тогда
		ТекстСообщения = НСтр("ru = 'Документ условий ретро-бонусов не согласован. Формирование отчета выполнено не будет'");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстСообщения) Тогда
		
		Если ВызыватьИсключение Тогда
			ВызватьИсключение ТекстСообщения;
		Иначе
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Параметры:
//  ПредыдущиеПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
// 
// Возвращаемое значение:
//  Булево
//
Функция ИзменилисьПараметрыУсловийРетроБонусов(ПредыдущиеПараметрыУсловийРетроБонусов, ПараметрыУсловийРетроБонусов) Экспорт
	
	Для Каждого ПолеПараметров Из ПараметрыУсловийРетроБонусов Цикл
		
		ЗначениеНовое = ПараметрыУсловийРетроБонусов[ПолеПараметров.Ключ]; // Произвольный
		ЕстьСвойствоСтарое = ПредыдущиеПараметрыУсловийРетроБонусов.Свойство(ПолеПараметров.Ключ);
		Если НЕ ЕстьСвойствоСтарое Тогда
			Возврат Истина;
		КонецЕсли;
		ЗначениеСтарое = ПредыдущиеПараметрыУсловийРетроБонусов[ПолеПараметров.Ключ]; // Произвольный
		Если ЗначениеНовое <> ЗначениеСтарое Тогда
			Возврат Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ДополнительныеСвойства - Структура
//
Процедура СохранитьПараметрыУсловийРетроБонусов(ПараметрыУсловийРетроБонусов, ДополнительныеСвойства) Экспорт
	
	ДополнительныеСвойства.Вставить("ПараметрыУсловийРетроБонусов", ПараметрыУсловийРетроБонусов);
	
КонецПроцедуры

// Параметры:
//  НастройкиПриемник - НастройкиКомпоновкиДанных
//  НастройкиИсточник - НастройкиКомпоновкиДанных
//
Процедура ПеренестиИспользуемыеОтборы(НастройкиПриемник, НастройкиИсточник) Экспорт
	
	Для Каждого ЭлементИсточника Из НастройкиИсточник.Отбор.Элементы Цикл
		
		Если НЕ ЭлементИсточника.Использование Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТипЗнч(ЭлементИсточника) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			
			ЭлементПриемника = Неопределено;
			
			Для каждого Элемент Из НастройкиПриемник.Отбор.Элементы Цикл
				
				Если ТипЗнч(Элемент) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда
					Продолжить;
				КонецЕсли;
				
				Если Элемент.ЛевоеЗначение = ЭлементИсточника.ЛевоеЗначение Тогда
					ЭлементПриемника = Элемент;
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			
			Если ЭлементПриемника = Неопределено Тогда
				
				ЭлементПриемника = НастройкиПриемник.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				ЭлементПриемника.ЛевоеЗначение = ЭлементИсточника.ЛевоеЗначение;
				
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ЭлементПриемника, ЭлементИсточника, "ВидСравнения, ПравоеЗначение, Использование");
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Параметры:
//  НастройкиПриемник - НастройкиКомпоновкиДанных
//  НастройкиИсточник - НастройкиКомпоновкиДанных
//
Процедура ПеренестиСтруктуруНастроекКомпоновки(НастройкиПриемник, НастройкиИсточник) Экспорт
	
	НастройкиПриемник.Структура.Очистить();
	
	Для Каждого ГруппировкаИсточник Из НастройкиИсточник.Структура Цикл
		
		ГруппировкаПриемник = КомпоновкаДанныхКлиентСервер.ДобавитьГруппировку(НастройкиПриемник);
		КомпоновкаДанныхКлиентСервер.СкопироватьНастройкиКомпоновкиДанных(ГруппировкаПриемник, ГруппировкаИсточник);
		
	КонецЦикла;
	
КонецПроцедуры

// Параметры:
//  ПериодОтчета - СтандартныйПериод
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//
Процедура ПроверитьИсправитьПериодОтчета(ПериодОтчета, ПараметрыУсловийРетроБонусов) Экспорт
	
	ПустаяДата = '00010101';
	
	// проверка границ периода действия по условиям
	
	Если ПериодОтчета.ДатаНачала = ПустаяДата
	 ИЛИ ПериодОтчета.ДатаНачала < ПараметрыУсловийРетроБонусов.НачалоДействия
	 ИЛИ ПериодОтчета.ДатаНачала > ПараметрыУсловийРетроБонусов.ОкончаниеДействия Тогда
		
		Если ПериодОтчета.ДатаНачала <> ПустаяДата Тогда
			
			ТекстСообщения = НСтр("ru = 'Выбранная дата начала не соответствует периоду действия по условиям ретро-бонуса.
				|Дата начала будет приведена к дате начала по условиям ретро-бонуса.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			
		КонецЕсли;
		
		ПериодОтчета.ДатаНачала = ПараметрыУсловийРетроБонусов.НачалоДействия;
		
	КонецЕсли;
	
	Если ПериодОтчета.ДатаОкончания = ПустаяДата
	 ИЛИ ПериодОтчета.ДатаОкончания < ПараметрыУсловийРетроБонусов.НачалоДействия
	 ИЛИ ПериодОтчета.ДатаОкончания > КонецДня(ПараметрыУсловийРетроБонусов.ОкончаниеДействия) Тогда
		
		Если ПериодОтчета.ДатаОкончания <> ПустаяДата Тогда
			
			ТекстСообщения = НСтр("ru = 'Выбранная дата окончания не соответствует периоду действия по условиям ретро-бонуса.
				|Дата окончания будет приведена к дате окончания по условиям ретро-бонуса.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			
		КонецЕсли;
		
		ПериодОтчета.ДатаОкончания = ПараметрыУсловийРетроБонусов.ОкончаниеДействия;
		
	КонецЕсли;
	
	// проверка кратности периодичности начисления по условиям
	
	РезультатПроверкиПериодичность = РетроБонусыСервер.ПроверитьПериодыПоПериодичности(
		ПараметрыУсловийРетроБонусов.ПериодичностьУсловий,
		ПериодОтчета.ДатаНачала,
		ПериодОтчета.ДатаОкончания,
		Истина);
	
	Если РезультатПроверкиПериодичность.ЕстьНарушениеНачала Тогда
		
		ВызватьИсключение РезультатПроверкиПериодичность.ТекстОшибкиНачала;
		
	КонецЕсли;
		
	Если РезультатПроверкиПериодичность.ЕстьНарушениеОкончания Тогда
		
		ВызватьИсключение РезультатПроверкиПериодичность.ТекстОшибкиОкончания;
		
	КонецЕсли;
	
КонецПроцедуры

// Параметры:
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ПолеКомпоновки - ПолеКомпоновкиДанных
// 
// Возвращаемое значение:
//  Булево
//
Функция ЭтоПолеРасшифровки(ПараметрыВарианта, ПолеКомпоновки) Экспорт
	
	Для Каждого ПолеРасшифровки Из ПараметрыВарианта.ПоляРасшифровки Цикл
		
		Если ПолеРасшифровки = ПолеКомпоновки Тогда
			Возврат Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

// Параметры:
//  СтруктураПодчиненная - ГруппировкаКомпоновкиДанных
//  ПолеКомпоновки - ПолеКомпоновкиДанных
//
Процедура ОтключитьИспользованиеПоля(СтруктураПодчиненная, ПолеКомпоновки) Экспорт
	
	ОтключитьИспользованиеВыбранногоПоля(СтруктураПодчиненная.Выбор.Элементы, ПолеКомпоновки);
	
	Для Каждого ПолеГруппировки Из СтруктураПодчиненная.ПоляГруппировки.Элементы Цикл
		Если ПолеГруппировки.Поле = ПолеКомпоновки Тогда
			ПолеГруппировки.Использование = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтруктураПодчиненная Из СтруктураПодчиненная.Структура Цикл
		ОтключитьИспользованиеПоля(СтруктураПодчиненная, ПолеКомпоновки);
	КонецЦикла;
	
КонецПроцедуры

// Параметры:
//  Элементы - КоллекцияВыбранныхПолейКомпоновкиДанных
//  ПолеКомпоновки - ПолеКомпоновкиДанных
//
Процедура ОтключитьИспользованиеВыбранногоПоля(Элементы, ПолеКомпоновки) Экспорт
	
	Для Каждого ПолеВыбора Из Элементы Цикл
		
		Если ТипЗнч(ПолеВыбора) = Тип("АвтоВыбранноеПолеКомпоновкиДанных") Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТипЗнч(ПолеВыбора) = Тип("ГруппаВыбранныхПолейКомпоновкиДанных") Тогда
			ОтключитьИспользованиеВыбранногоПоля(ПолеВыбора.Элементы, ПолеКомпоновки);
		Иначе
			
			Если ПолеВыбора.Поле = ПолеКомпоновки Тогда
				ПолеВыбора.Использование = Ложь;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Параметры:
//  ИсходныйДокумент - ДокументСсылка.УсловияРетроБонусовПоставщика
// 
// Возвращаемое значение:
//  См. НовыеПараметрыУсловийРетроБонусов
//
Функция ПараметрыУсловийРетроБонусовПоставщиков(ИсходныйДокумент) Экспорт
	
	АктуальныеДанные = Документы.УсловияРетроБонусовПоставщика.АктуальныеДанные(ИсходныйДокумент);
	Результат = НовыеПараметрыУсловийРетроБонусов();
	ЗаполнитьЗначенияСвойств(Результат, АктуальныеДанные);
	
	Результат.РасчетБонусовПоставщиков = Истина;
	
	Если АктуальныеДанные.ТипБонуса = Перечисления.ТипыРетроБонусовПоставщиков.Продажи Тогда
		
		Результат.ПропорциональноеРаспределение = Истина;
		
	Иначе
		
		Если АктуальныеДанные.ПорядокРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов.ПропорциональноВыручке
		 ИЛИ АктуальныеДанные.ПорядокРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов.ПропорциональноСуммеЗакупки Тогда
			Результат.ПропорциональноеРаспределение = Истина;
		Иначе
			Результат.ПропорциональноеРаспределение = Ложь;
		КонецЕсли;
		
		Если АктуальныеДанные.ПорядокРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов.ПустаяСсылка() Тогда
			Результат.ПропорциональноеРаспределение = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Результат.РаспределениеПоFIFO = (АктуальныеДанные.ПорядокРаспределения
		= Перечисления.ПорядкиРаспределенияРетроБонусов.FIFO);
	
	Возврат Результат;
	
КонецФункции

// Параметры:
//  ИсходныйДокумент - ДокументСсылка.УсловияРетроБонусовКлиентов
// 
// Возвращаемое значение:
//  См. НовыеПараметрыУсловийРетроБонусов
//
Функция ПараметрыУсловийРетроБонусовКлиентов(ИсходныйДокумент) Экспорт
	
	АктуальныеДанные = Документы.УсловияРетроБонусовКлиентов.АктуальныеДанные(ИсходныйДокумент);
	Результат = НовыеПараметрыУсловийРетроБонусов();
	ЗаполнитьЗначенияСвойств(Результат, АктуальныеДанные);
	
	Результат.БазаРасчета = АктуальныеДанные.БазаРасчетаПродаж;
	Результат.РасчетБонусовКлиентов = Истина;
	Результат.ПропорциональноеРаспределение = (АктуальныеДанные.ПорядокРаспределения
		= Перечисления.ПорядкиРаспределенияРетроБонусов.ПропорциональноВыручке);
	Результат.РаспределениеПоFIFO = (АктуальныеДанные.ПорядокРаспределения
		= Перечисления.ПорядкиРаспределенияРетроБонусов.FIFO);
	
	Возврат Результат;
	
КонецФункции

// Возвращаемое значение:
//  Структура - Актуальные параметры условий ретро-бонусов:
//  * РасчетБонусовКлиентов - Булево -
//  * РасчетБонусовПоставщиков - Булево -
//	* БезРасчета - Булево -
//	* НачалоДействия - Дата -
//	* ОкончаниеДействия - Дата -
//	* ДатаОстатков - Дата -
//	* Организация - СправочникСсылка.Организации -
//	* Валюта - СправочникСсылка.Валюты -
//	* ДетализацияРасчетаУчастников - ПеречислениеСсылка.ДетализацияРасчетаУчастниковРетроБонусов -
//	* ДетализацияРасчетаУчастниковПредставление - Строка -
//	* ПериодичностьНачислений - ПеречислениеСсылка.ПериодичностиРетроБонусов -
//	* ПериодичностьУсловий - ПеречислениеСсылка.ПериодичностиРетроБонусов -
//	* ПериодичностьУсловийПредставление - Строка -
//	* СегментыЗафиксированы - Булево -
//	* СоставТоваров - ПеречислениеСсылка.СоставыТоваровРетроБонусов -
//	* СоставУчастников - ПеречислениеСсылка.СоставыУчастниковРетроБонусов -
//	* Участники - ПеречислениеСсылка.СоставыСписковРетроБонусов -
//	* Товары - ПеречислениеСсылка.СоставыСписковРетроБонусов -
//	* Склады - ПеречислениеСсылка.СоставыСписковРетроБонусов -
//	* ЗапретНачисленияСверхПлана - Булево -
//	* ПоказательТоваров - ПеречислениеСсылка.ЦелевыеПоказателиРетроБонусовПоТоварам -
//	* ПоказательТоваровПредставление - Строка -
//	* БазаРасчета - ПеречислениеСсылка.БазыРасчетаРетроБонусов -
//	* УчитыватьНДС - Булево -
//	* ПорядокРаспределения - ПеречислениеСсылка.ПорядкиРаспределенияРетроБонусов -
//	* ПропорциональноеРаспределение - Булево -
//	* РаспределениеПоFIFO - Булево -
//	* ДокументУсловийРетроБонусовПредставление - Строка -
//	* Контрагент - СправочникСсылка.Контрагенты -
//	* Партнер - СправочникСсылка.Партнеры -
//	* ТипБонуса - ПеречислениеСсылка.ТипыРетроБонусовПоставщиков -
//
Функция НовыеПараметрыУсловийРетроБонусов() Экспорт
	
	Результат = Новый Структура;
	
	ПустаяДата = '00010101';
	
	Результат.Вставить("РасчетБонусовКлиентов", Ложь);
	Результат.Вставить("РасчетБонусовПоставщиков", Ложь);
	Результат.Вставить("БезРасчета", Ложь);
	Результат.Вставить("НачалоДействия", ПустаяДата);
	Результат.Вставить("ОкончаниеДействия", ПустаяДата);
	Результат.Вставить("ДатаОстатков", ПустаяДата);
	Результат.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
	Результат.Вставить("Валюта", Справочники.Валюты.ПустаяСсылка());
	Результат.Вставить("ДетализацияРасчетаУчастников", Перечисления.ДетализацияРасчетаУчастниковРетроБонусов.ПустаяСсылка());
	Результат.Вставить("ДетализацияРасчетаУчастниковПредставление", "");
	Результат.Вставить("ПериодичностьНачислений", Перечисления.ПериодичностиРетроБонусов.ПустаяСсылка());
	Результат.Вставить("ПериодичностьУсловий", Перечисления.ПериодичностиРетроБонусов.ПустаяСсылка());
	Результат.Вставить("ПериодичностьУсловийПредставление", "");
	Результат.Вставить("СегментыЗафиксированы", Ложь);
	Результат.Вставить("СоставТоваров", Перечисления.СоставыТоваровРетроБонусов.ПустаяСсылка());
	Результат.Вставить("СоставУчастников", Перечисления.СоставыУчастниковРетроБонусов.ПустаяСсылка());
	Результат.Вставить("Участники", Перечисления.СоставыСписковРетроБонусов.ПустаяСсылка());
	Результат.Вставить("Товары", Перечисления.СоставыСписковРетроБонусов.ПустаяСсылка());
	Результат.Вставить("Склады", Перечисления.СоставыСписковРетроБонусов.ПустаяСсылка());
	Результат.Вставить("ЗапретНачисленияСверхПлана", Ложь);
	Результат.Вставить("ПоказательТоваров", Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам.ПустаяСсылка());
	Результат.Вставить("ПоказательТоваровПредставление", "");
	Результат.Вставить("БазаРасчета", Перечисления.БазыРасчетаРетроБонусов.ПустаяСсылка());
	Результат.Вставить("УчитыватьНДС", Ложь);
	Результат.Вставить("ПорядокРаспределения", Перечисления.ПорядкиРаспределенияРетроБонусов.ПустаяСсылка());
	Результат.Вставить("ПропорциональноеРаспределение", Ложь);
	Результат.Вставить("РаспределениеПоFIFO", Ложь);
	Результат.Вставить("ДокументУсловийРетроБонусовПредставление", "");
	Результат.Вставить("Контрагент", Справочники.Контрагенты.ПустаяСсылка());
	Результат.Вставить("Партнер", Справочники.Партнеры.ПустаяСсылка());
	Результат.Вставить("ТипБонуса", Перечисления.ТипыРетроБонусовПоставщиков.ПустаяСсылка());
	
	Возврат Результат;
	
КонецФункции

// Возвращаемое значение:
//  Структура - Параметры варианта отчета:
// * КлючВарианта - Строка - Имя варианта в СКД
// * ЭтоРасшифровкаПоДокументам - Булево 
// * ЭтоРасшифровкаПоНоменклатуре - Булево
// * ЭтоРасшифровка - Булево
// * РежимРасшифровки - Булево - Значение флага ДополнительныеСвойства.РежимРасшифровки в настройках компоновщика
// * ПоляРасшифровки - Массив Из ПолеКомпоновкиДанных
// * ВариантМодифицированПользователем - Булево
// * ДетализацияДоНоменклатуры - Булево
// 
Функция НовыеПараметрыВарианта() Экспорт
	
	ПараметрыВарианта = Новый Структура;
	ПараметрыВарианта.Вставить("КлючВарианта", "");
	ПараметрыВарианта.Вставить("ЭтоРасшифровкаПоДокументам", Ложь);
	ПараметрыВарианта.Вставить("ЭтоРасшифровкаПоНоменклатуре", Ложь);
	ПараметрыВарианта.Вставить("ЭтоРасшифровка", Ложь);
	ПараметрыВарианта.Вставить("РежимРасшифровки", Ложь);
	ПараметрыВарианта.Вставить("ПоляРасшифровки", Новый Массив);
	ПараметрыВарианта.Вставить("ВариантМодифицированПользователем", Ложь);
	ПараметрыВарианта.Вставить("ДетализацияДоНоменклатуры", Ложь);
	
	Возврат ПараметрыВарианта;
	
КонецФункции

#Область ТекстЗапроса

// Возвращаемое значение:
//  Строка - Выражение "ОБЪЕДИНИТЬ ВСЕ"
//
Функция РазделительПодзапросов() Экспорт
	
	РазделительПодзапросов = Символы.ПС + Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС + Символы.ПС;
	Возврат РазделительПодзапросов;
	
КонецФункции

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПоРегиструЗакупки - Булево -
// 
// Возвращаемое значение:
//  Строка - Выражение для поля ПериодРасчета
//
Функция ВыражениеПериодРасчета(ПараметрыУсловийРетроБонусов, ПоРегиструЗакупки = Ложь) Экспорт
	
	ПериодичностьУсловий = ПараметрыУсловийРетроБонусов.ПериодичностьУсловий;
	Периодичности = Перечисления.ПериодичностиРетроБонусов;
	ВыражениеПериод = "";
	
	Если ПоРегиструЗакупки Тогда
		ТаблицаИсточник = "Закупки";
	Иначе
		ТаблицаИсточник = "ВыручкаИСебестоимостьПродаж";
	КонецЕсли;
	
	Если ПериодичностьУсловий = Периодичности.День Тогда
		
		ВыражениеПериод = "НАЧАЛОПЕРИОДА(&ТаблицаИсточник.Период, ДЕНЬ)";
		
	ИначеЕсли ПериодичностьУсловий = Периодичности.Неделя Тогда
		
		ВыражениеПериод = "НАЧАЛОПЕРИОДА(&ТаблицаИсточник.Период, НЕДЕЛЯ)";
		
	ИначеЕсли ПериодичностьУсловий = Периодичности.Месяц Тогда
		
		ВыражениеПериод = "НАЧАЛОПЕРИОДА(&ТаблицаИсточник.Период, МЕСЯЦ)";
		
	ИначеЕсли ПериодичностьУсловий = Периодичности.Квартал Тогда
		
		ВыражениеПериод = "НАЧАЛОПЕРИОДА(&ТаблицаИсточник.Период, КВАРТАЛ)";
		
	ИначеЕсли ПериодичностьУсловий = Периодичности.ВесьПериод
		  ИЛИ ПериодичностьУсловий = Перечисления.ПериодичностиРетроБонусов.ПустаяСсылка() Тогда
		
		ВыражениеПериод = "&ДатаНачала";
		
	Иначе
		
		ШаблонОшибки = НСтр("ru = 'Не удалось определить периодичность условий (""%1"") для документа ""%2""'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонОшибки,
			ПараметрыУсловийРетроБонусов.ПериодичностьУсловийПредставление,
			ПараметрыУсловийРетроБонусов.ДокументУсловийРетроБонусовПредставление);
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	ВыражениеПериод = СтрЗаменить(ВыражениеПериод, "&ТаблицаИсточник", ТаблицаИсточник);
	
	Возврат ВыражениеПериод;
	
КонецФункции

// Возвращаемое значение:
//  Строка - Размер порции расчета нарастающего итога
//
Функция ПорцияНарастающегоИтога() Экспорт
	
	Возврат "100";
	
КонецФункции

// Возвращаемое значение:
//  Строка - Размер субпорции расчета нарастающего итога
//
Функция СубпорцияНарастающегоИтога() Экспорт
	
	Возврат "10";
	
КонецФункции

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	Если ПараметрыУсловийРетроБонусов.Товары = Перечисления.СоставыСписковРетроБонусов.Все Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаИсточник.ДокументУсловий КАК УсловияРетроБонусов,
	|	ТаблицаИсточник.НачалоДействия КАК ДатаНачала,
	|	КОНЕЦПЕРИОДА(ТаблицаИсточник.ОкончаниеДействия, ДЕНЬ) КАК ДатаОкончания,
	|	ТаблицаИсточник.Номенклатура КАК Номенклатура,
	|	ТаблицаИсточник.Характеристика КАК Характеристика,
	|	ТаблицаИсточник.БазоваяЦена КАК БазоваяЦена,
	|	ТаблицаИсточник.БонусПроцент КАК БонусПроцент,
	|	ТаблицаИсточник.КоличествоПлан КАК КоличествоПлан,
	|	&ВыражениеБонусЗаЕдиницу КАК БонусЗаЕдиницу
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	&ТаблицаИсточник КАК ТаблицаИсточник
	|ГДЕ
	|	&УсловиеПоДокументу
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика";
	
	Если ПараметрыУсловийРетроБонусов.СоставТоваров = Перечисления.СоставыТоваровРетроБонусов.СегментыНоменклатуры
	   И НЕ ПараметрыУсловийРетроБонусов.СегментыЗафиксированы Тогда
		
		// Таблица ВТ_СоставСегментовТоваров будет передана в ПроцессорКомпоновкиДанных через МенеджерВременныхТаблиц
		ТаблицаИсточник = "ВТ_СоставСегментовТоваров";
		УсловиеПоДокументу = "ИСТИНА";
		ВыражениеБонусЗаЕдиницу = "0";
		
	Иначе
		
		Если ПараметрыУсловийРетроБонусов.РасчетБонусовКлиентов Тогда
			
			ТаблицаИсточник = "РегистрСведений.РетроБонусыКлиентовТовары";
			ВыражениеБонусЗаЕдиницу = "0";
			
		ИначеЕсли ПараметрыУсловийРетроБонусов.РасчетБонусовПоставщиков Тогда
			
			ТаблицаИсточник = "РегистрСведений.РетроБонусыПоставщиковТовары";
			ВыражениеБонусЗаЕдиницу = "ТаблицаИсточник.БонусЗаЕдиницу";
			
		Иначе
			ВызватьИсключение НСтр("ru = 'Неизвестный тип ретро-бонуса'");
		КонецЕсли;
		
		УсловиеПоДокументу =
		"ТаблицаИсточник.ДокументУсловий В
		|			(ВЫБРАТЬ
		|				ВТ_ПараметрыРБ.УсловиеРетроБонуса
		|			ИЗ
		|				ВТ_ПараметрыРБ КАК ВТ_ПараметрыРБ)";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТаблицаИсточник", ТаблицаИсточник);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоДокументу", УсловиеПоДокументу);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеБонусЗаЕдиницу", ВыражениеБонусЗаЕдиницу);
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаТоварыМинимальныйПланПоУпаковкам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_Товары.УсловияРетроБонусов КАК УсловияРетроБонусов,
	|	ВТ_Товары.ДатаНачала КАК ДатаНачала,
	|	ВТ_Товары.ДатаОкончания КАК ДатаОкончания,
	|	ВТ_Товары.Номенклатура КАК Номенклатура,
	|	ВТ_Товары.Характеристика КАК Характеристика,
	|	МИНИМУМ(ВТ_Товары.КоличествоПлан) КАК КоличествоПлан
	|ПОМЕСТИТЬ ВТ_ТоварыМинимальныйПланПоУпаковкам
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Товары.УсловияРетроБонусов,
	|	ВТ_Товары.ДатаНачала,
	|	ВТ_Товары.ДатаОкончания,
	|	ВТ_Товары.Номенклатура,
	|	ВТ_Товары.Характеристика";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаМинимальныеПараметрыПоПозиции(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ТоварыМинимальныйПланПоУпаковкам.УсловияРетроБонусов КАК УсловияРетроБонусов,
	|	ВТ_ТоварыМинимальныйПланПоУпаковкам.ДатаНачала КАК ДатаНачала,
	|	ВТ_ТоварыМинимальныйПланПоУпаковкам.ДатаОкончания КАК ДатаОкончания,
	|	ВТ_ТоварыМинимальныйПланПоУпаковкам.Номенклатура КАК Номенклатура,
	|	ВТ_ТоварыМинимальныйПланПоУпаковкам.Характеристика КАК Характеристика,
	|	ВТ_ТоварыМинимальныйПланПоУпаковкам.КоличествоПлан КАК КоличествоПлан,
	|	ВТ_Товары.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_Товары.БонусПроцент КАК БонусПроцент
	|ПОМЕСТИТЬ ВТ_ТоварыМинимальныйПараметрыПоПозиции
	|ИЗ
	|	ВТ_ТоварыМинимальныйПланПоУпаковкам КАК ВТ_ТоварыМинимальныйПланПоУпаковкам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Товары КАК ВТ_Товары
	|		ПО ВТ_ТоварыМинимальныйПланПоУпаковкам.УсловияРетроБонусов = ВТ_Товары.УсловияРетроБонусов
	|			И ВТ_ТоварыМинимальныйПланПоУпаковкам.ДатаНачала = ВТ_Товары.ДатаНачала
	|			И ВТ_ТоварыМинимальныйПланПоУпаковкам.ДатаОкончания = ВТ_Товары.ДатаОкончания
	|			И ВТ_ТоварыМинимальныйПланПоУпаковкам.Номенклатура = ВТ_Товары.Номенклатура
	|			И ВТ_ТоварыМинимальныйПланПоУпаковкам.Характеристика = ВТ_Товары.Характеристика
	|			И ВТ_ТоварыМинимальныйПланПоУпаковкам.КоличествоПлан = ВТ_Товары.КоличествоПлан";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаУчастникиПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	СоставыУчастников = Перечисления.СоставыУчастниковРетроБонусов;
	СоставыСписков = Перечисления.СоставыСписковРетроБонусов;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИННКлиентов.ДокументУсловий КАК УсловияРетроБонусов,
	|	Контрагенты.Ссылка КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка) КАК Партнер,
	|	ИННКлиентов.НачалоДействия КАК ДатаНачала,
	|	ИННКлиентов.ОкончаниеДействия КАК ДатаОкончания,
	|	&ВыражениеСуммаПланИНН КАК СуммаПлан
	|ПОМЕСТИТЬ ВТ_УчастникиПредварительно
	|ИЗ
	|	&ТаблицаИсточникИНН КАК ИННКлиентов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО ИННКлиентов.ИНН = Контрагенты.ИНН
	|ГДЕ
	|	ИННКлиентов.ДокументУсловий В
	|			(ВЫБРАТЬ
	|				ВТ_ПараметрыРБ.УсловиеРетроБонуса
	|			ИЗ
	|				ВТ_ПараметрыРБ КАК ВТ_ПараметрыРБ
	|			ГДЕ
	|				ВТ_ПараметрыРБ.ОтборПоИНН)
	|	И &УсловиеОтбораПоКонтрагентуНаСправочник
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КонтрагентыКлиентов.ДокументУсловий,
	|	КонтрагентыКлиентов.Контрагент,
	|	&ВыражениеКонтрагентыПартнер,
	|	КонтрагентыКлиентов.НачалоДействия,
	|	КонтрагентыКлиентов.ОкончаниеДействия,
	|	&ВыражениеСуммаПланКонтрагенты КАК СуммаПлан
	|ИЗ
	|	&ТаблицаИсточникКонтрагенты КАК КонтрагентыКлиентов
	|ГДЕ
	|	КонтрагентыКлиентов.ДокументУсловий В
	|			(ВЫБРАТЬ
	|				ВТ_ПараметрыРБ.УсловиеРетроБонуса
	|			ИЗ
	|				ВТ_ПараметрыРБ КАК ВТ_ПараметрыРБ
	|			ГДЕ
	|				ВТ_ПараметрыРБ.ОтборПоКонтрагентамПартнерам)";
	
	Если ПараметрыУсловийРетроБонусов.СоставУчастников = Перечисления.СоставыУчастниковРетроБонусов.СегментыПартнеров
	   И НЕ ПараметрыУсловийРетроБонусов.СегментыЗафиксированы Тогда
		
		// Таблица ВТ_СоставСегментовКлиентов будет передана в ПроцессорКомпоновкиДанных через МенеджерВременныхТаблиц
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВТ_СоставСегментовКлиентов.ДокументУсловий КАК УсловияРетроБонусов,
		|	ВТ_СоставСегментовКлиентов.Контрагент КАК Контрагент,
		|	ВТ_СоставСегментовКлиентов.Партнер КАК Партнер,
		|	ВТ_СоставСегментовКлиентов.НачалоДействия КАК ДатаНачала,
		|	ВТ_СоставСегментовКлиентов.ОкончаниеДействия КАК ДатаОкончания,
		|	ВТ_СоставСегментовКлиентов.СуммаПлан КАК СуммаПлан
		|ПОМЕСТИТЬ ВТ_УчастникиПредварительно
		|ИЗ
		|	ВТ_СоставСегментовКлиентов КАК ВТ_СоставСегментовКлиентов
		|ГДЕ
		|	&УсловиеОтбораПоПартнеруНаСоставСегментов";
		
	ИначеЕсли ПараметрыУсловийРетроБонусов.СоставУчастников = СоставыУчастников.ИНН
	   И ПараметрыУсловийРетроБонусов.Участники = СоставыСписков.КромеВыбранных Тогда
		
		ТекстПодзапросаПустыеИНН =
		"ВЫБРАТЬ
		|	&ИсходныйДокумент КАК УсловияРетроБонусов,
		|	Контрагенты.Ссылка КАК Контрагент,
		|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка) КАК Партнер,
		|	&ДатаНачала КАК ДатаНачала,
		|	&ДатаОкончания КАК ДатаОкончания,
		|	0 КАК СуммаПлан
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	СОКРЛ(Контрагенты.ИНН) = """"";
		
		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении() + ТекстПодзапросаПустыеИНН;
		
	КонецЕсли;
	
	Если ПараметрыВарианта.ЭтоРасшифровка Тогда
		
		УсловиеОтбораПоКонтрагентуНаСправочник =
		"ВЫБОР
		|	КОГДА &Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|		ИЛИ &Контрагент = НЕОПРЕДЕЛЕНО
		|	ТОГДА ИСТИНА
		|	ИНАЧЕ Контрагенты.Ссылка = &Контрагент
		|КОНЕЦ";
		
		УсловиеОтбораПоПартнеруНаСоставСегментов =
		"ВЫБОР
		|	КОГДА &Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|		ИЛИ &Партнер = НЕОПРЕДЕЛЕНО
		|	ТОГДА ИСТИНА
		|	ИНАЧЕ ВТ_СоставСегментовКлиентов.Партнер = &Партнер
		|КОНЕЦ";
		
	Иначе
		
		УсловиеОтбораПоКонтрагентуНаСправочник = "ИСТИНА";
		УсловиеОтбораПоПартнеруНаСоставСегментов = "ИСТИНА";
		
	КонецЕсли;
	
	Если ПараметрыУсловийРетроБонусов.РасчетБонусовКлиентов Тогда
		
		ТаблицаИсточникИНН = "РегистрСведений.РетроБонусыКлиентовИНН";
		ТаблицаИсточникКонтрагенты = "РегистрСведений.РетроБонусыКлиентовКонтрагенты";
		ВыражениеСуммаПланИНН = "ИННКлиентов.СуммаПлан";
		ВыражениеСуммаПланКонтрагенты = "КонтрагентыКлиентов.СуммаПлан";
		ВыражениеКонтрагентыПартнер = "КонтрагентыКлиентов.Партнер";
		
	ИначеЕсли ПараметрыУсловийРетроБонусов.РасчетБонусовПоставщиков Тогда
		
		ТаблицаИсточникИНН = "РегистрСведений.РетроБонусыПоставщиковИНН";
		ТаблицаИсточникКонтрагенты = "РегистрСведений.РетроБонусыПоставщиковКонтрагенты";
		ВыражениеСуммаПланИНН = "0";
		ВыражениеСуммаПланКонтрагенты = "0";
		ВыражениеКонтрагентыПартнер = "ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)";
		
	Иначе
		ВызватьИсключение НСтр("ru = 'Неизвестный тип ретро-бонуса'");
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеСуммаПланИНН", ВыражениеСуммаПланИНН);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеСуммаПланКонтрагенты", ВыражениеСуммаПланКонтрагенты);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеКонтрагентыПартнер", ВыражениеКонтрагентыПартнер);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТаблицаИсточникИНН", ТаблицаИсточникИНН);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТаблицаИсточникКонтрагенты", ТаблицаИсточникКонтрагенты);
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса, "&УсловиеОтбораПоКонтрагентуНаСправочник", УсловиеОтбораПоКонтрагентуНаСправочник);
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса, "&УсловиеОтбораПоПартнеруНаСоставСегментов", УсловиеОтбораПоПартнеруНаСоставСегментов);
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаКонтрагенты(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_УчастникиПредварительно.УсловияРетроБонусов КАК УсловияРетроБонусов,
	|	ВТ_УчастникиПредварительно.Контрагент КАК Контрагент,
	|	ВТ_УчастникиПредварительно.Партнер КАК Партнер,
	|	ВТ_УчастникиПредварительно.ДатаНачала КАК ДатаНачала,
	|	ВТ_УчастникиПредварительно.ДатаОкончания КАК ДатаОкончания,
	|	ВТ_УчастникиПредварительно.СуммаПлан КАК СуммаПлан
	|ПОМЕСТИТЬ ВТ_Контрагенты
	|ИЗ
	|	ВТ_УчастникиПредварительно КАК ВТ_УчастникиПредварительно
	|ГДЕ
	|	ВТ_УчастникиПредварительно.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|	И &УсловиеОтбораПоКонтрагенту";
	
	Если ПараметрыВарианта.ЭтоРасшифровка Тогда
		
		УсловиеОтбораПоКонтрагенту =
		"ВЫБОР
		|	КОГДА &Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|		ИЛИ &Контрагент = НЕОПРЕДЕЛЕНО
		|	ТОГДА ИСТИНА
		|	ИНАЧЕ ВТ_УчастникиПредварительно.Контрагент = &Контрагент
		|КОНЕЦ";
		
	Иначе
		
		УсловиеОтбораПоКонтрагенту = "ИСТИНА";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоКонтрагенту", УсловиеОтбораПоКонтрагенту);
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаПартнеры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_УчастникиПредварительно.УсловияРетроБонусов КАК УсловияРетроБонусов,
	|	ВТ_УчастникиПредварительно.Контрагент КАК Контрагент,
	|	ВТ_УчастникиПредварительно.Партнер КАК Партнер,
	|	ВТ_УчастникиПредварительно.ДатаНачала КАК ДатаНачала,
	|	ВТ_УчастникиПредварительно.ДатаОкончания КАК ДатаОкончания,
	|	ВТ_УчастникиПредварительно.СуммаПлан КАК СуммаПлан
	|ПОМЕСТИТЬ ВТ_Партнеры
	|ИЗ
	|	ВТ_УчастникиПредварительно КАК ВТ_УчастникиПредварительно
	|ГДЕ
	|	ВТ_УчастникиПредварительно.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|	И ВТ_УчастникиПредварительно.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	И &УсловиеОтбораПоПартнеру";
	
	Если ПараметрыВарианта.ЭтоРасшифровка Тогда
		
		УсловиеОтбораПоПартнеру =
		"ВЫБОР
		|	КОГДА &Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|		ИЛИ &Партнер = НЕОПРЕДЕЛЕНО
		|	ТОГДА ИСТИНА
		|	ИНАЧЕ ВТ_УчастникиПредварительно.Партнер = &Партнер
		|КОНЕЦ";
		
	Иначе
		
		УсловиеОтбораПоПартнеру = "ИСТИНА";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоПартнеру", УсловиеОтбораПоПартнеру);
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаПартнерыКонтрагенты(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_УчастникиПредварительно.УсловияРетроБонусов КАК УсловияРетроБонусов,
	|	ВТ_УчастникиПредварительно.Контрагент КАК Контрагент,
	|	ВТ_УчастникиПредварительно.Партнер КАК Партнер,
	|	ВТ_УчастникиПредварительно.ДатаНачала КАК ДатаНачала,
	|	ВТ_УчастникиПредварительно.ДатаОкончания КАК ДатаОкончания,
	|	ВТ_УчастникиПредварительно.СуммаПлан КАК СуммаПлан
	|ПОМЕСТИТЬ ВТ_ПартнерыКонтрагенты
	|ИЗ
	|	ВТ_УчастникиПредварительно КАК ВТ_УчастникиПредварительно
	|ГДЕ
	|	ВТ_УчастникиПредварительно.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|	И ВТ_УчастникиПредварительно.Контрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	И &УсловиеОтбораПоКонтрагенту
	|	И &УсловиеОтбораПоПартнеру";
	
	Если ПараметрыВарианта.ЭтоРасшифровка Тогда
		
		УсловиеОтбораПоКонтрагенту =
		"ВЫБОР
		|	КОГДА &Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|		ИЛИ &Контрагент = НЕОПРЕДЕЛЕНО
		|	ТОГДА ИСТИНА
		|	ИНАЧЕ ВТ_УчастникиПредварительно.Контрагент = &Контрагент
		|КОНЕЦ";
		УсловиеОтбораПоПартнеру =
		"ВЫБОР
		|	КОГДА &Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|		ИЛИ &Партнер = НЕОПРЕДЕЛЕНО
		|	ТОГДА ИСТИНА
		|	ИНАЧЕ ВТ_УчастникиПредварительно.Партнер = &Партнер
		|КОНЕЦ";
		
	Иначе
		
		УсловиеОтбораПоКонтрагенту = "ИСТИНА";
		УсловиеОтбораПоПартнеру = "ИСТИНА";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоКонтрагенту", УсловиеОтбораПоКонтрагенту);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоПартнеру", УсловиеОтбораПоПартнеру);
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаАналитикаПоПартнерам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ТекстыПодзапросов = Новый Массив; // Массив Из Строка
	
	ТекстПодзапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АналитикаУчетаПоПартнерам.КлючАналитики КАК КлючАналитики,
	|	АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаНачала,
	|	ДАТАВРЕМЯ(2999, 12, 31) КАК ДатаОкончания,
	|	0 КАК СуммаПлан
	|ПОМЕСТИТЬ ВТ_АналитикаПоПартнерам
	|ИЗ
	|	РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПараметрыРБ КАК ВТ_ПараметрыРБ
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ВТ_ПараметрыРБ.ОтборУчастниковБезОграничений
	|	И АналитикаУчетаПоПартнерам.Организация В(&Организация)
	|	И &УсловиеОтбораПоКонтрагенту
	|	И &УсловиеОтбораПоПартнеру";
	ТекстыПодзапросов.Добавить(ТекстПодзапроса);
	
	ТекстПодзапроса =
	"ВЫБРАТЬ
	|	АналитикаУчетаПоПартнерам.КлючАналитики КАК КлючАналитики,
	|	АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
	|	ВТ_Контрагенты.ДатаНачала КАК ДатаНачала,
	|	КОНЕЦПЕРИОДА(ВТ_Контрагенты.ДатаОкончания, ДЕНЬ) КАК ДатаОкончания,
	|	0 КАК СуммаПлан
	|ИЗ
	|	РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Контрагенты КАК ВТ_Контрагенты
	|		ПО АналитикаУчетаПоПартнерам.Контрагент = ВТ_Контрагенты.Контрагент
	|ГДЕ
	|	АналитикаУчетаПоПартнерам.Организация В (&Организация)
	|	И НЕ (АналитикаУчетаПоПартнерам.Контрагент, АналитикаУчетаПоПартнерам.Партнер) В
	|		(ВЫБРАТЬ
	|			ВТ_ПартнерыКонтрагенты.Контрагент КАК Контрагент,
	|			ВТ_ПартнерыКонтрагенты.Партнер КАК Партнер
	|		ИЗ
	|			ВТ_ПартнерыКонтрагенты КАК ВТ_ПартнерыКонтрагенты)";
	ТекстыПодзапросов.Добавить(ТекстПодзапроса);
	
	ТекстПодзапроса =
	"ВЫБРАТЬ
	|	АналитикаУчетаПоПартнерам.КлючАналитики КАК КлючАналитики,
	|	АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
	|	ВТ_Партнеры.ДатаНачала КАК ДатаНачала,
	|	КОНЕЦПЕРИОДА(ВТ_Партнеры.ДатаОкончания, ДЕНЬ) КАК ДатаОкончания,
	|	0 КАК СуммаПлан
	|ИЗ
	|	РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Партнеры КАК ВТ_Партнеры
	|		ПО АналитикаУчетаПоПартнерам.Партнер = ВТ_Партнеры.Партнер
	|ГДЕ
	|	АналитикаУчетаПоПартнерам.Организация В (&Организация)
	|	И НЕ (АналитикаУчетаПоПартнерам.Контрагент, АналитикаУчетаПоПартнерам.Партнер) В
	|		(ВЫБРАТЬ
	|			ВТ_ПартнерыКонтрагенты.Контрагент КАК Контрагент,
	|			ВТ_ПартнерыКонтрагенты.Партнер КАК Партнер
	|		ИЗ
	|			ВТ_ПартнерыКонтрагенты КАК ВТ_ПартнерыКонтрагенты)";
	ТекстыПодзапросов.Добавить(ТекстПодзапроса);
	
	ТекстПодзапроса =
	"ВЫБРАТЬ
	|	АналитикаУчетаПоПартнерам.КлючАналитики КАК КлючАналитики,
	|	АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
	|	ВТ_ПартнерыКонтрагенты.ДатаНачала КАК ДатаНачала,
	|	КОНЕЦПЕРИОДА(ВТ_ПартнерыКонтрагенты.ДатаОкончания, ДЕНЬ) КАК ДатаОкончания,
	|	0 КАК СуммаПлан
	|ИЗ
	|	РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПартнерыКонтрагенты КАК ВТ_ПартнерыКонтрагенты
	|		ПО АналитикаУчетаПоПартнерам.Партнер = ВТ_ПартнерыКонтрагенты.Партнер
	|		И АналитикаУчетаПоПартнерам.Контрагент = ВТ_ПартнерыКонтрагенты.Контрагент
	|ГДЕ
	|	АналитикаУчетаПоПартнерам.Организация В (&Организация)";
	ТекстыПодзапросов.Добавить(ТекстПодзапроса);
	
	Если ПараметрыУсловийРетроБонусов.СоставУчастников = Перечисления.СоставыУчастниковРетроБонусов.Договоры Тогда
		
		ТекстПодзапроса =
		"ВЫБРАТЬ
		|	АналитикаУчетаПоПартнерам.КлючАналитики КАК КлючАналитики,
		|	АналитикаУчетаПоПартнерам.Организация КАК Организация,
		|	АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
		|	АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
		|	РетроБонусыКлиентовДоговорыСоглашения.НачалоДействия КАК ДатаНачала,
		|	КОНЕЦПЕРИОДА(РетроБонусыКлиентовДоговорыСоглашения.ОкончаниеДействия, ДЕНЬ) КАК ДатаОкончания,
		|	РетроБонусыКлиентовДоговорыСоглашения.СуммаПлан КАК СуммаПлан
		|ИЗ
		|	РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РетроБонусыКлиентовДоговорыСоглашения КАК РетроБонусыКлиентовДоговорыСоглашения
		|		ПО АналитикаУчетаПоПартнерам.Договор = РетроБонусыКлиентовДоговорыСоглашения.Договор
		|ГДЕ
		|	АналитикаУчетаПоПартнерам.Организация В (&Организация)
		|	И РетроБонусыКлиентовДоговорыСоглашения.ДокументУсловий = &ИсходныйДокумент
		|	И РетроБонусыКлиентовДоговорыСоглашения.Договор <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
		|	И &УсловиеОтбораПоКонтрагенту
		|	И &УсловиеОтбораПоПартнеру";
		ТекстыПодзапросов.Добавить(ТекстПодзапроса);
		
	КонецЕсли;
	
	Если ПараметрыУсловийРетроБонусов.СоставУчастников = Перечисления.СоставыУчастниковРетроБонусов.Соглашения Тогда
		
		ТекстПодзапроса =
		"ВЫБРАТЬ
		|	АналитикаУчетаПоПартнерам.КлючАналитики КАК КлючАналитики,
		|	АналитикаУчетаПоПартнерам.Организация КАК Организация,
		|	АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
		|	АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
		|	ВТ_Соглашения.НачалоДействия КАК ДатаНачала,
		|	КОНЕЦПЕРИОДА(ВТ_Соглашения.ОкончаниеДействия, ДЕНЬ) КАК ДатаОкончания,
		|	ВТ_Соглашения.СуммаПлан КАК СуммаПлан
		|ИЗ
		|	РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Соглашения КАК ВТ_Соглашения
		|		ПО АналитикаУчетаПоПартнерам.Партнер = ВТ_Соглашения.Партнер
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АналитикаПоПартнерамПоТиповымСоглашениям КАК ВТ_АналитикаПоПартнерамПоТиповымСоглашениям
		|		ПО АналитикаУчетаПоПартнерам.КлючАналитики = ВТ_АналитикаПоПартнерамПоТиповымСоглашениям.КлючАналитики
		|ГДЕ
		|	ВТ_Соглашения.ТиповоеСоглашение = ЛОЖЬ
		|	И ВТ_АналитикаПоПартнерамПоТиповымСоглашениям.КлючАналитики ЕСТЬ NULL
		|	И АналитикаУчетаПоПартнерам.Организация В (&Организация)
		|	И &УсловиеОтбораПоКонтрагенту
		|	И &УсловиеОтбораПоПартнеру";
		ТекстыПодзапросов.Добавить(ТекстПодзапроса);
		
		ТекстПодзапроса =
		"ВЫБРАТЬ
		|	ВТ_АналитикаПоПартнерамПоТиповымСоглашениям.КлючАналитики КАК КлючАналитики,
		|	ВТ_АналитикаПоПартнерамПоТиповымСоглашениям.Организация КАК Организация,
		|	ВТ_АналитикаПоПартнерамПоТиповымСоглашениям.Контрагент КАК Контрагент,
		|	ВТ_АналитикаПоПартнерамПоТиповымСоглашениям.Партнер КАК Партнер,
		|	ВТ_Соглашения.НачалоДействия КАК ДатаНачала,
		|	КОНЕЦПЕРИОДА(ВТ_Соглашения.ОкончаниеДействия, ДЕНЬ) КАК ДатаОкончания,
		|	ВТ_Соглашения.СуммаПлан КАК СуммаПлан
		|ИЗ
		|	ВТ_АналитикаПоПартнерамПоТиповымСоглашениям КАК ВТ_АналитикаПоПартнерамПоТиповымСоглашениям
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Соглашения КАК ВТ_Соглашения
		|		ПО ВТ_АналитикаПоПартнерамПоТиповымСоглашениям.Соглашение = ВТ_Соглашения.Соглашение";
		ТекстыПодзапросов.Добавить(ТекстПодзапроса);
		
	КонецЕсли;
	
	РазделительПодзапросов = РазделительПодзапросов();
	ТекстЗапроса = СтрСоединить(ТекстыПодзапросов, РазделительПодзапросов);
	
	Если ПараметрыВарианта.ЭтоРасшифровка Тогда
		
		УсловиеОтбораПоКонтрагенту =
		"ВЫБОР
		|	КОГДА &Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|		ИЛИ &Контрагент = НЕОПРЕДЕЛЕНО
		|	ТОГДА ИСТИНА
		|	ИНАЧЕ АналитикаУчетаПоПартнерам.Контрагент = &Контрагент
		|КОНЕЦ";
		УсловиеОтбораПоПартнеру =
		"ВЫБОР
		|	КОГДА &Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|		ИЛИ &Партнер = НЕОПРЕДЕЛЕНО
		|	ТОГДА ИСТИНА
		|	ИНАЧЕ АналитикаУчетаПоПартнерам.Партнер = &Партнер
		|КОНЕЦ";
		
	Иначе
		
		УсловиеОтбораПоКонтрагенту = "ИСТИНА";
		УсловиеОтбораПоПартнеру = "ИСТИНА";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоКонтрагенту", УсловиеОтбораПоКонтрагенту);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоПартнеру", УсловиеОтбораПоПартнеру);
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаАналитикаУчетаНоменклатуры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	Если ПараметрыУсловийРетроБонусов.Товары = Перечисления.СоставыСписковРетроБонусов.Все Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	АналитикаУчетаНоменклатуры.КлючАналитики КАК КлючАналитики
	|ПОМЕСТИТЬ ВТ_АналитикаУчетаНоменклатуры
	|ИЗ
	|	РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Товары КАК ВТ_Товары
	|		ПО АналитикаУчетаНоменклатуры.Номенклатура = ВТ_Товары.Номенклатура
	|			И АналитикаУчетаНоменклатуры.Характеристика = ВТ_Товары.Характеристика";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаПродажи(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ШаблонЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВыручкаИСебестоимостьПродаж.Период КАК Период,
	|	&ВыражениеПериод КАК ПериодРасчета,
	|	ВыручкаИСебестоимостьПродаж.НомерСтроки КАК НомерСтроки,
	|	&ВыражениеДокументРегистратор КАК ДокументРегистратор,
	|	РС_АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	РС_АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	РС_АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
	|	ВыручкаИСебестоимостьПродаж.Договор КАК Договор,
	|	ВыручкаИСебестоимостьПродаж.Соглашение КАК Соглашение,
	|	ВыручкаИСебестоимостьПродаж.Склад КАК Склад,
	|	РС_АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	РС_АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	СУММА(ВыручкаИСебестоимостьПродаж.Количество) КАК Количество,
	|	СУММА(ВыручкаИСебестоимостьПродаж.СуммаВыручки) КАК СуммаОборотУпрСНДС,
	|	СУММА(ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл) КАК СуммаОборотРеглСНДС,
	|	СУММА(ВыручкаИСебестоимостьПродаж.СуммаВВалютеВзаиморасчетов) КАК СуммаОборотВВалютеВзаиморасчетовСНДС,
	|	СУММА(ВыручкаИСебестоимостьПродаж.СуммаВыручкиБезНДС) КАК СуммаОборотУпрБезНДС,
	|	СУММА(ВыручкаИСебестоимостьПродаж.СуммаВыручкиРегл) КАК СуммаОборотРеглБезНДС,
	|	СУММА(ВыручкаИСебестоимостьПродаж.СуммаБезНДСВВалютеВзаиморасчетов) КАК СуммаОборотВВалютеВзаиморасчетовБезНДС,
	|	СУММА(ВЫБОР
	|		КОГДА ВТ_ПараметрыРБ.УчитыватьНДС
	|			ТОГДА ВыручкаИСебестоимостьПродаж.СуммаВыручки
	|		ИНАЧЕ ВыручкаИСебестоимостьПродаж.СуммаВыручкиБезНДС
	|	КОНЕЦ) КАК Сумма,
	|	СУММА(ВЫБОР
	|		КОГДА ВТ_ПараметрыРБ.УчитыватьНДС
	|			ТОГДА ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл
	|		ИНАЧЕ ВыручкаИСебестоимостьПродаж.СуммаВыручкиРегл
	|	КОНЕЦ) КАК СуммаРегл,
	|	СУММА(ВЫБОР
	|		КОГДА ВТ_ПараметрыРБ.УчитыватьНДС
	|			ТОГДА ВыручкаИСебестоимостьПродаж.СуммаВВалютеВзаиморасчетов
	|		ИНАЧЕ ВыручкаИСебестоимостьПродаж.СуммаБезНДСВВалютеВзаиморасчетов
	|	КОНЕЦ) КАК СуммаВВалютеВзаиморасчетов,
	|	ВТ_ПараметрыРБ.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПараметрыРБ.БонусПроцент КАК БонусПроцент,
	|	ВТ_ПараметрыРБ.ПоказательТоваров КАК ПоказательТоваров,
	|	ВТ_ПараметрыРБ.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПараметрыРБ.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ПараметрыРБ.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ПараметрыРБ.УчитыватьНДС КАК УчитыватьНДС,
	|	ВТ_ПараметрыРБ.Валюта КАК ВалютаУсловий,
	|	ВыручкаИСебестоимостьПродаж.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ВТ_ПараметрыРБ.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ПараметрыРБ.РаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	ВТ_ПараметрыРБ.СуммаПлан КАК СуммаПлан,
	|	ВТ_ПараметрыРБ.БазаРасчета КАК БазаРасчета,
	|	ВТ_ПараметрыРБ.ОтборТоваровВыбранные КАК ОтборТоваровВыбранные,
	|	ВТ_ПараметрыРБ.ОтборТоваровКромеВыбранных КАК ОтборТоваровКромеВыбранных,
	|	ВТ_ПараметрыРБ.ОтборТоваровБезОграничений КАК ОтборТоваровБезОграничений,
	|	ВТ_ПараметрыРБ.ОтборУчастниковВыбранные КАК ОтборУчастниковВыбранные,
	|	ВТ_ПараметрыРБ.ОтборУчастниковКромеВыбранных КАК ОтборУчастниковКромеВыбранных
	|ПОМЕСТИТЬ ВТ_ПродажиЗакупки
	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимостьПродаж
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК РС_АналитикаУчетаНоменклатуры
	|		ПО ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры = РС_АналитикаУчетаНоменклатуры.КлючАналитики
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АналитикаПоПартнерам КАК ВТ_АналитикаПоПартнерам
	|		ПО ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам = ВТ_АналитикаПоПартнерам.КлючАналитики
	|			И (ВыручкаИСебестоимостьПродаж.Период МЕЖДУ ВТ_АналитикаПоПартнерам.ДатаНачала И ВТ_АналитикаПоПартнерам.ДатаОкончания)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РС_АналитикаУчетаПоПартнерам
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПараметрыРБ КАК ВТ_ПараметрыРБ
	|			ПО ИСТИНА
	|		ПО ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам = РС_АналитикаУчетаПоПартнерам.КлючАналитики
	|ГДЕ
	|	&УсловиеОтбораПоТипуДокумента
	|	И ВыручкаИСебестоимостьПродаж.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ВЫБОР
	|		КОГДА ВТ_ПараметрыРБ.ОтборУчастниковВыбранные
	|			ТОГДА НЕ ВТ_АналитикаПоПартнерам.КлючАналитики ЕСТЬ NULL
	|		КОГДА ВТ_ПараметрыРБ.ОтборУчастниковКромеВыбранных
	|			ТОГДА ВТ_АналитикаПоПартнерам.КлючАналитики ЕСТЬ NULL
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|	И &УсловиеОтбораТоваров
	|	И РС_АналитикаУчетаПоПартнерам.Организация В (&Организация)
	|	И &УсловиеОтбораПоКонтрагенту
	|	И &УсловиеОтбораПоПартнеру
	|	И НЕ ВТ_ПараметрыРБ.УсловиеРетроБонуса ЕСТЬ NULL
	|	И ВыручкаИСебестоимостьПродаж.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|	И ВыручкаИСебестоимостьПродаж.ХозяйственнаяОперация НЕ В (&ИсключаемыеХозяйственныеОперации)
	|	И ВыручкаИСебестоимостьПродаж.НастройкаХозяйственнойОперации НЕ В (&ИсключаемыеНастройкиХозяйственныхОпераций)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыручкаИСебестоимостьПродаж.Период,
	|	&ВыражениеПериод,
	|	ВыручкаИСебестоимостьПродаж.НомерСтроки,
	|	&ВыражениеДокументРегистратор,
	|	РС_АналитикаУчетаПоПартнерам.Организация,
	|	РС_АналитикаУчетаПоПартнерам.Контрагент,
	|	РС_АналитикаУчетаПоПартнерам.Партнер,
	|	ВыручкаИСебестоимостьПродаж.Договор,
	|	ВыручкаИСебестоимостьПродаж.Соглашение,
	|	ВыручкаИСебестоимостьПродаж.Склад,
	|	РС_АналитикаУчетаНоменклатуры.Номенклатура,
	|	РС_АналитикаУчетаНоменклатуры.Характеристика,
	|	ВТ_ПараметрыРБ.УсловиеРетроБонуса,
	|	ВТ_ПараметрыРБ.БонусПроцент,
	|	ВТ_ПараметрыРБ.ПоказательТоваров,
	|	ВТ_ПараметрыРБ.ДетализацияРасчетаУчастников,
	|	ВТ_ПараметрыРБ.ПериодичностьУсловий,
	|	ВТ_ПараметрыРБ.ПериодичностьНачислений,
	|	ВТ_ПараметрыРБ.УчитыватьНДС,
	|	ВТ_ПараметрыРБ.Валюта,
	|	ВыручкаИСебестоимостьПродаж.ВалютаВзаиморасчетов,
	|	ВТ_ПараметрыРБ.ЗапретНачисленияСверхПлана,
	|	ВТ_ПараметрыРБ.РаспределениеПоФИФО,
	|	ВТ_ПараметрыРБ.СуммаПлан,
	|	ВТ_ПараметрыРБ.БазаРасчета,
	|	ВТ_ПараметрыРБ.ОтборТоваровВыбранные,
	|	ВТ_ПараметрыРБ.ОтборТоваровКромеВыбранных,
	|	ВТ_ПараметрыРБ.ОтборТоваровБезОграничений,
	|	ВТ_ПараметрыРБ.ОтборУчастниковВыбранные,
	|	ВТ_ПараметрыРБ.ОтборУчастниковКромеВыбранных";
	
	ВыраженияДокументРегистратор = Новый Массив; // Массив Из Строка
	ВыраженияДокументРегистратор.Добавить("ВЫРАЗИТЬ(ВыручкаИСебестоимостьПродаж.Регистратор КАК Документ.РеализацияТоваровУслуг)");
	ВыраженияДокументРегистратор.Добавить("ВЫРАЗИТЬ(ВыручкаИСебестоимостьПродаж.Регистратор КАК Документ.КорректировкаРеализации)");
	ВыраженияДокументРегистратор.Добавить("ВЫРАЗИТЬ(ВыручкаИСебестоимостьПродаж.Регистратор КАК Документ.АктВыполненныхРабот)");
	ВыраженияДокументРегистратор.Добавить("ВЫРАЗИТЬ(ВыручкаИСебестоимостьПродаж.Регистратор КАК Документ.ВозвратТоваровОтКлиента)");
	
	ОтборыПоТипамДокументов = Новый Массив; // Массив Из Строка
	ОтборыПоТипамДокументов.Добавить("ВыручкаИСебестоимостьПродаж.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг");
	ОтборыПоТипамДокументов.Добавить("ВыручкаИСебестоимостьПродаж.Регистратор ССЫЛКА Документ.КорректировкаРеализации");
	ОтборыПоТипамДокументов.Добавить("ВыручкаИСебестоимостьПродаж.Регистратор ССЫЛКА Документ.АктВыполненныхРабот");
	ОтборыПоТипамДокументов.Добавить("ВыручкаИСебестоимостьПродаж.Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента");
	
	Если ПараметрыУсловийРетроБонусов.Товары = Перечисления.СоставыСписковРетроБонусов.Выбранные Тогда
		
		УсловиеОтбораТоваров =
		"ВТ_ПараметрыРБ.ОтборТоваровВыбранные
		|	И ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры В
		|			(ВЫБРАТЬ
		|				ВТ_АналитикаУчетаНоменклатуры.КлючАналитики
		|			ИЗ
		|				ВТ_АналитикаУчетаНоменклатуры КАК ВТ_АналитикаУчетаНоменклатуры)";
		
	ИначеЕсли ПараметрыУсловийРетроБонусов.Товары = Перечисления.СоставыСписковРетроБонусов.КромеВыбранных Тогда
		
		УсловиеОтбораТоваров =
		"ВТ_ПараметрыРБ.ОтборТоваровКромеВыбранных
		|	И НЕ ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры В
		|			(ВЫБРАТЬ
		|				ВТ_АналитикаУчетаНоменклатуры.КлючАналитики
		|			ИЗ
		|				ВТ_АналитикаУчетаНоменклатуры КАК ВТ_АналитикаУчетаНоменклатуры)";
		
	Иначе
		
		УсловиеОтбораТоваров = "ВТ_ПараметрыРБ.ОтборТоваровБезОграничений";
		
	КонецЕсли;
	
	ВыражениеПериод = ВыражениеПериодРасчета(ПараметрыУсловийРетроБонусов);
	
	Если ПараметрыВарианта.ЭтоРасшифровка Тогда
		
		УсловиеОтбораПоКонтрагенту =
		"ВЫБОР
		|	КОГДА &Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|		ИЛИ &Контрагент = НЕОПРЕДЕЛЕНО
		|	ТОГДА ИСТИНА
		|	ИНАЧЕ РС_АналитикаУчетаПоПартнерам.Контрагент = &Контрагент
		|КОНЕЦ";
		УсловиеОтбораПоПартнеру =
		"ВЫБОР
		|	КОГДА &Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|		ИЛИ &Партнер = НЕОПРЕДЕЛЕНО
		|	ТОГДА ИСТИНА
		|	ИНАЧЕ РС_АналитикаУчетаПоПартнерам.Партнер = &Партнер
		|КОНЕЦ";
		
	Иначе
		
		УсловиеОтбораПоКонтрагенту = "ИСТИНА";
		УсловиеОтбораПоПартнеру = "ИСТИНА";
		
	КонецЕсли;
	
	ТекстыПодзапросов = Новый Массив; // Массив Из Строка
	НомерПодзапроса = 1;
	Для ИндексТипаДокумента = 0 По ОтборыПоТипамДокументов.ВГраница() Цикл
		
		ВыражениеДокументРегистратор = ВыраженияДокументРегистратор[ИндексТипаДокумента];
		УсловиеОтбораПоТипуДокумента = ОтборыПоТипамДокументов[ИндексТипаДокумента];
		
		ТекстЗапроса = ШаблонЗапроса;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеПериод", ВыражениеПериод);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеДокументРегистратор", ВыражениеДокументРегистратор);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоТипуДокумента", УсловиеОтбораПоТипуДокумента);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораТоваров", УсловиеОтбораТоваров);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоКонтрагенту", УсловиеОтбораПоКонтрагенту);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоПартнеру", УсловиеОтбораПоПартнеру);
		
		Если НомерПодзапроса > 1 Тогда
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ВТ_ПродажиЗакупки", "");
			
		КонецЕсли;
		
		ТекстыПодзапросов.Добавить(ТекстЗапроса);
		НомерПодзапроса = НомерПодзапроса + 1;
		
	КонецЦикла;
	
	РазделительПодзапросов = РазделительПодзапросов();
	ТекстЗапроса = СтрСоединить(ТекстыПодзапросов, РазделительПодзапросов);
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаПродажиБезОтбораПоКонтрагентам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ШаблонЗапроса =
	"ВЫБРАТЬ
	|	ВыручкаИСебестоимостьПродаж.Период КАК Период,
	|	ВыручкаИСебестоимостьПродаж.НомерСтроки КАК НомерСтроки,
	|	&ВыражениеПериод КАК ПериодРасчета,
	|	&ВыражениеДокументРегистратор КАК ДокументРегистратор,
	|	РС_АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	РС_АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	РС_АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
	|	ВыручкаИСебестоимостьПродаж.Договор КАК Договор,
	|	ВыручкаИСебестоимостьПродаж.Соглашение КАК Соглашение,
	|	ВыручкаИСебестоимостьПродаж.Склад КАК Склад,
	|	РС_АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	РС_АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ВыручкаИСебестоимостьПродаж.Количество КАК Количество,
	|	ВыручкаИСебестоимостьПродаж.СуммаВыручки КАК СуммаОборотУпрСНДС,
	|	ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл КАК СуммаОборотРеглСНДС,
	|	ВыручкаИСебестоимостьПродаж.СуммаВВалютеВзаиморасчетов КАК СуммаОборотВВалютеВзаиморасчетовСНДС,
	|	ВыручкаИСебестоимостьПродаж.СуммаВыручкиБезНДС КАК СуммаОборотУпрБезНДС,
	|	ВыручкаИСебестоимостьПродаж.СуммаВыручкиРегл КАК СуммаОборотРеглБезНДС,
	|	ВыручкаИСебестоимостьПродаж.СуммаБезНДСВВалютеВзаиморасчетов КАК СуммаОборотВВалютеВзаиморасчетовБезНДС,
	|	ВТ_ПараметрыРБ.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПараметрыРБ.БонусПроцент КАК БонусПроцент,
	|	ВТ_ПараметрыРБ.ПоказательТоваров КАК ПоказательТоваров,
	|	ВТ_ПараметрыРБ.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПараметрыРБ.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ПараметрыРБ.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ПараметрыРБ.УчитыватьНДС КАК УчитыватьНДС,
	|	ВТ_ПараметрыРБ.Валюта КАК ВалютаУсловий,
	|	ВТ_ПараметрыРБ.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ПараметрыРБ.РаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	ВТ_ПараметрыРБ.СуммаПлан КАК СуммаПланОбщая,
	|	ВТ_АналитикаПоПартнерам.СуммаПлан КАК СуммаПланПоСоглашению,
	|	ВыручкаИСебестоимостьПродаж.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ВТ_ПараметрыРБ.БазаРасчета КАК БазаРасчета,
	|	ВТ_ПараметрыРБ.ОтборТоваровВыбранные КАК ОтборТоваровВыбранные,
	|	ВТ_ПараметрыРБ.ОтборТоваровКромеВыбранных КАК ОтборТоваровКромеВыбранных,
	|	ВТ_ПараметрыРБ.ОтборТоваровБезОграничений КАК ОтборТоваровБезОграничений,
	|	ВТ_ПараметрыРБ.ОтборУчастниковВыбранные КАК ОтборУчастниковВыбранные,
	|	ВТ_ПараметрыРБ.ОтборУчастниковКромеВыбранных КАК ОтборУчастниковКромеВыбранных
	|ПОМЕСТИТЬ ВТ_ПродажиЗакупкиБезОтбораПоКонтрагентам
	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимостьПродаж
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК РС_АналитикаУчетаНоменклатуры
	|		ПО ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры = РС_АналитикаУчетаНоменклатуры.КлючАналитики
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АналитикаПоПартнерам КАК ВТ_АналитикаПоПартнерам
	|		ПО ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам = ВТ_АналитикаПоПартнерам.КлючАналитики
	|			И (ВыручкаИСебестоимостьПродаж.Период МЕЖДУ ВТ_АналитикаПоПартнерам.ДатаНачала И ВТ_АналитикаПоПартнерам.ДатаОкончания)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РС_АналитикаУчетаПоПартнерам
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПараметрыРБ КАК ВТ_ПараметрыРБ
	|			ПО ИСТИНА
	|		ПО ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам = РС_АналитикаУчетаПоПартнерам.КлючАналитики
	|ГДЕ
	|	&УсловиеОтбораПоТипуДокумента
	|	И ВыручкаИСебестоимостьПродаж.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ВЫБОР
	|			КОГДА ВТ_ПараметрыРБ.ОтборУчастниковВыбранные
	|				ТОГДА НЕ ВТ_АналитикаПоПартнерам.КлючАналитики ЕСТЬ NULL
	|			КОГДА ВТ_ПараметрыРБ.ОтборУчастниковКромеВыбранных
	|				ТОГДА ВТ_АналитикаПоПартнерам.КлючАналитики ЕСТЬ NULL
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И &УсловиеОтбораТоваров
	|	И РС_АналитикаУчетаПоПартнерам.Организация В(&Организация)
	|	И &УсловиеОтбораПоКонтрагенту
	|	И &УсловиеОтбораПоПартнеру
	|	И НЕ ВТ_ПараметрыРБ.УсловиеРетроБонуса ЕСТЬ NULL
	|	И ВыручкаИСебестоимостьПродаж.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|	И ВыручкаИСебестоимостьПродаж.НастройкаХозяйственнойОперации НЕ В (&ИсключаемыеНастройкиХозяйственныхОпераций)
	|	И ВыручкаИСебестоимостьПродаж.ХозяйственнаяОперация НЕ В (&ИсключаемыеХозяйственныеОперации)";
	
	ВыраженияДокументРегистратор = Новый Массив; // Массив Из Строка
	ВыраженияДокументРегистратор.Добавить("ВЫРАЗИТЬ(ВыручкаИСебестоимостьПродаж.Регистратор КАК Документ.РеализацияТоваровУслуг)");
	ВыраженияДокументРегистратор.Добавить("ВЫРАЗИТЬ(ВыручкаИСебестоимостьПродаж.Регистратор КАК Документ.КорректировкаРеализации)");
	ВыраженияДокументРегистратор.Добавить("ВЫРАЗИТЬ(ВыручкаИСебестоимостьПродаж.Регистратор КАК Документ.АктВыполненныхРабот)");
	ВыраженияДокументРегистратор.Добавить("ВЫРАЗИТЬ(ВыручкаИСебестоимостьПродаж.Регистратор КАК Документ.ВозвратТоваровОтКлиента)");
	
	ОтборыПоТипамДокументов = Новый Массив; // Массив Из Строка
	ОтборыПоТипамДокументов.Добавить("ВыручкаИСебестоимостьПродаж.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг");
	ОтборыПоТипамДокументов.Добавить("ВыручкаИСебестоимостьПродаж.Регистратор ССЫЛКА Документ.КорректировкаРеализации");
	ОтборыПоТипамДокументов.Добавить("ВыручкаИСебестоимостьПродаж.Регистратор ССЫЛКА Документ.АктВыполненныхРабот");
	ОтборыПоТипамДокументов.Добавить("ВыручкаИСебестоимостьПродаж.Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента");
	
	Если ПараметрыУсловийРетроБонусов.Товары = Перечисления.СоставыСписковРетроБонусов.Выбранные Тогда
		
		УсловиеОтбораТоваров =
		"ВТ_ПараметрыРБ.ОтборТоваровВыбранные
		|	И ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры В
		|			(ВЫБРАТЬ
		|				ВТ_АналитикаУчетаНоменклатуры.КлючАналитики
		|			ИЗ
		|				ВТ_АналитикаУчетаНоменклатуры КАК ВТ_АналитикаУчетаНоменклатуры)";
		
	ИначеЕсли ПараметрыУсловийРетроБонусов.Товары = Перечисления.СоставыСписковРетроБонусов.КромеВыбранных Тогда
		
		УсловиеОтбораТоваров =
		"ВТ_ПараметрыРБ.ОтборТоваровКромеВыбранных
		|	И НЕ ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры В
		|			(ВЫБРАТЬ
		|				ВТ_АналитикаУчетаНоменклатуры.КлючАналитики
		|			ИЗ
		|				ВТ_АналитикаУчетаНоменклатуры КАК ВТ_АналитикаУчетаНоменклатуры)";
		
	Иначе
		
		УсловиеОтбораТоваров = "ВТ_ПараметрыРБ.ОтборТоваровБезОграничений";
		
	КонецЕсли;
	
	ВыражениеПериод = ВыражениеПериодРасчета(ПараметрыУсловийРетроБонусов);
	
	Если ПараметрыВарианта.ЭтоРасшифровка Тогда
		
		УсловиеОтбораПоКонтрагенту =
		"ВЫБОР
		|	КОГДА &Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|		ИЛИ &Контрагент = НЕОПРЕДЕЛЕНО
		|	ТОГДА ИСТИНА
		|	ИНАЧЕ РС_АналитикаУчетаПоПартнерам.Контрагент = &Контрагент
		|КОНЕЦ";
		УсловиеОтбораПоПартнеру =
		"ВЫБОР
		|	КОГДА &Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|		ИЛИ &Партнер = НЕОПРЕДЕЛЕНО
		|	ТОГДА ИСТИНА
		|	ИНАЧЕ РС_АналитикаУчетаПоПартнерам.Партнер = &Партнер
		|КОНЕЦ";
		
	Иначе
		
		УсловиеОтбораПоКонтрагенту = "ИСТИНА";
		УсловиеОтбораПоПартнеру = "ИСТИНА";
		
	КонецЕсли;
	
	ТекстыПодзапросов = Новый Массив; // Массив Из Строка
	НомерПодзапроса = 1;
	Для ИндексТипаДокумента = 0 По ОтборыПоТипамДокументов.ВГраница() Цикл
		
		ВыражениеДокументРегистратор = ВыраженияДокументРегистратор[ИндексТипаДокумента];
		УсловиеОтбораПоТипуДокумента = ОтборыПоТипамДокументов[ИндексТипаДокумента];
		
		ТекстЗапроса = ШаблонЗапроса;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеПериод", ВыражениеПериод);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеДокументРегистратор", ВыражениеДокументРегистратор);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоТипуДокумента", УсловиеОтбораПоТипуДокумента);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораТоваров", УсловиеОтбораТоваров);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоКонтрагенту", УсловиеОтбораПоКонтрагенту);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоПартнеру", УсловиеОтбораПоПартнеру);
		
		Если НомерПодзапроса > 1 Тогда
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ВТ_ПродажиЗакупкиБезОтбораПоКонтрагентам", "");
			
		КонецЕсли;
		
		ТекстыПодзапросов.Добавить(ТекстЗапроса);
		НомерПодзапроса = НомерПодзапроса + 1;
		
	КонецЦикла;
	
	РазделительПодзапросов = РазделительПодзапросов();
	ТекстЗапроса = СтрСоединить(ТекстыПодзапросов, РазделительПодзапросов);
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаПродажиСОтборомПоКонтрагентам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИсходныеДанные.Период КАК Период,
	|	ИсходныеДанные.НомерСтроки КАК НомерСтроки,
	|	ИсходныеДанные.ПериодРасчета КАК ПериодРасчета,
	|	ИсходныеДанные.ДокументРегистратор КАК ДокументРегистратор,
	|	ИсходныеДанные.Организация КАК Организация,
	|	ИсходныеДанные.Контрагент КАК Контрагент,
	|	ИсходныеДанные.Партнер КАК Партнер,
	|	ИсходныеДанные.Договор КАК Договор,
	|	ИсходныеДанные.Соглашение КАК Соглашение,
	|	ИсходныеДанные.Склад КАК Склад,
	|	ИсходныеДанные.Номенклатура КАК Номенклатура,
	|	ИсходныеДанные.Характеристика КАК Характеристика,
	|	СУММА(ИсходныеДанные.Количество) КАК Количество,
	|	СУММА(ИсходныеДанные.СуммаОборотУпрСНДС) КАК СуммаОборотУпрСНДС,
	|	СУММА(ИсходныеДанные.СуммаОборотРеглСНДС) КАК СуммаОборотРеглСНДС,
	|	СУММА(ИсходныеДанные.СуммаОборотВВалютеВзаиморасчетовСНДС) КАК СуммаОборотВВалютеВзаиморасчетовСНДС,
	|	СУММА(ИсходныеДанные.СуммаОборотУпрБезНДС) КАК СуммаОборотУпрБезНДС,
	|	СУММА(ИсходныеДанные.СуммаОборотРеглБезНДС) КАК СуммаОборотРеглБезНДС,
	|	СУММА(ИсходныеДанные.СуммаОборотВВалютеВзаиморасчетовБезНДС) КАК СуммаОборотВВалютеВзаиморасчетовБезНДС,
	|	СУММА(ВЫБОР
	|		КОГДА ИсходныеДанные.УчитыватьНДС
	|			ТОГДА ИсходныеДанные.СуммаОборотУпрСНДС
	|		ИНАЧЕ ИсходныеДанные.СуммаОборотУпрБезНДС
	|	КОНЕЦ) КАК Сумма,
	|	СУММА(ВЫБОР
	|		КОГДА ИсходныеДанные.УчитыватьНДС
	|			ТОГДА ИсходныеДанные.СуммаОборотРеглСНДС
	|		ИНАЧЕ ИсходныеДанные.СуммаОборотРеглБезНДС
	|	КОНЕЦ) КАК СуммаРегл,
	|	СУММА(ВЫБОР
	|		КОГДА ИсходныеДанные.УчитыватьНДС
	|			ТОГДА ИсходныеДанные.СуммаОборотВВалютеВзаиморасчетовСНДС
	|		ИНАЧЕ ИсходныеДанные.СуммаОборотВВалютеВзаиморасчетовБезНДС
	|	КОНЕЦ) КАК СуммаВВалютеВзаиморасчетов,
	|	ИсходныеДанные.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ИсходныеДанные.БонусПроцент КАК БонусПроцент,
	|	ИсходныеДанные.ПоказательТоваров КАК ПоказательТоваров,
	|	ИсходныеДанные.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ИсходныеДанные.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ИсходныеДанные.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ИсходныеДанные.УчитыватьНДС КАК УчитыватьНДС,
	|	ИсходныеДанные.ВалютаУсловий КАК ВалютаУсловий,
	|	ИсходныеДанные.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ИсходныеДанные.БазаРасчета КАК БазаРасчета,
	|	ИсходныеДанные.ОтборТоваровВыбранные КАК ОтборТоваровВыбранные,
	|	ИсходныеДанные.ОтборТоваровКромеВыбранных КАК ОтборТоваровКромеВыбранных,
	|	ИсходныеДанные.ОтборТоваровБезОграничений КАК ОтборТоваровБезОграничений,
	|	ИсходныеДанные.ОтборУчастниковВыбранные КАК ОтборУчастниковВыбранные,
	|	ИсходныеДанные.ОтборУчастниковКромеВыбранных КАК ОтборУчастниковКромеВыбранных,
	|	ИсходныеДанные.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ИсходныеДанные.РаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_ПартнерыКонтрагенты.СуммаПлан, 0) <> 0
	|			ТОГДА ЕСТЬNULL(ВТ_ПартнерыКонтрагенты.СуммаПлан, 0)
	|		КОГДА ЕСТЬNULL(ВТ_Партнеры.СуммаПлан, 0) <> 0
	|			ТОГДА ЕСТЬNULL(ВТ_Партнеры.СуммаПлан, 0)
	|		КОГДА ЕСТЬNULL(ВТ_Контрагенты.СуммаПлан, 0) <> 0
	|			ТОГДА ЕСТЬNULL(ВТ_Контрагенты.СуммаПлан, 0)
	|		КОГДА ЕСТЬNULL(ИсходныеДанные.СуммаПланПоСоглашению, 0) <> 0
	|			ТОГДА ИсходныеДанные.СуммаПланПоСоглашению
	|		ИНАЧЕ ЕСТЬNULL(ИсходныеДанные.СуммаПланОбщая, 0)
	|	КОНЕЦ КАК СуммаПлан
	|ПОМЕСТИТЬ ВТ_ПродажиЗакупки
	|ИЗ
	|	ВТ_ПродажиЗакупкиБезОтбораПоКонтрагентам КАК ИсходныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Контрагенты КАК ВТ_Контрагенты
	|		ПО ИсходныеДанные.УсловиеРетроБонуса = ВТ_Контрагенты.УсловияРетроБонусов
	|			И ИсходныеДанные.Контрагент = ВТ_Контрагенты.Контрагент
	|			И (ИсходныеДанные.Период МЕЖДУ ВТ_Контрагенты.ДатаНачала И ВТ_Контрагенты.ДатаОкончания)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Партнеры КАК ВТ_Партнеры
	|		ПО ИсходныеДанные.УсловиеРетроБонуса = ВТ_Партнеры.УсловияРетроБонусов
	|			И ИсходныеДанные.Партнер = ВТ_Партнеры.Партнер
	|			И (ИсходныеДанные.Период МЕЖДУ ВТ_Партнеры.ДатаНачала И ВТ_Партнеры.ДатаОкончания)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПартнерыКонтрагенты КАК ВТ_ПартнерыКонтрагенты
	|		ПО ИсходныеДанные.УсловиеРетроБонуса = ВТ_ПартнерыКонтрагенты.УсловияРетроБонусов
	|			И ИсходныеДанные.Контрагент = ВТ_ПартнерыКонтрагенты.Контрагент
	|			И ИсходныеДанные.Партнер = ВТ_ПартнерыКонтрагенты.Партнер
	|			И (ИсходныеДанные.Период МЕЖДУ ВТ_ПартнерыКонтрагенты.ДатаНачала И ВТ_ПартнерыКонтрагенты.ДатаОкончания)
	|СГРУППИРОВАТЬ ПО
	|	ИсходныеДанные.Период,
	|	ИсходныеДанные.НомерСтроки,
	|	ИсходныеДанные.ПериодРасчета,
	|	ИсходныеДанные.ДокументРегистратор,
	|	ИсходныеДанные.Организация,
	|	ИсходныеДанные.Контрагент,
	|	ИсходныеДанные.Партнер,
	|	ИсходныеДанные.Договор,
	|	ИсходныеДанные.Соглашение,
	|	ИсходныеДанные.Склад,
	|	ИсходныеДанные.Номенклатура,
	|	ИсходныеДанные.Характеристика,
	|	ИсходныеДанные.ЗапретНачисленияСверхПлана,
	|	ИсходныеДанные.РаспределениеПоФИФО,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_ПартнерыКонтрагенты.СуммаПлан, 0) <> 0
	|			ТОГДА ЕСТЬNULL(ВТ_ПартнерыКонтрагенты.СуммаПлан, 0)
	|		КОГДА ЕСТЬNULL(ВТ_Партнеры.СуммаПлан, 0) <> 0
	|			ТОГДА ЕСТЬNULL(ВТ_Партнеры.СуммаПлан, 0)
	|		КОГДА ЕСТЬNULL(ВТ_Контрагенты.СуммаПлан, 0) <> 0
	|			ТОГДА ЕСТЬNULL(ВТ_Контрагенты.СуммаПлан, 0)
	|		КОГДА ЕСТЬNULL(ИсходныеДанные.СуммаПланПоСоглашению, 0) <> 0
	|			ТОГДА ИсходныеДанные.СуммаПланПоСоглашению
	|		ИНАЧЕ ЕСТЬNULL(ИсходныеДанные.СуммаПланОбщая, 0)
	|	КОНЕЦ,
	|	ИсходныеДанные.УсловиеРетроБонуса,
	|	ИсходныеДанные.БонусПроцент,
	|	ИсходныеДанные.ПоказательТоваров,
	|	ИсходныеДанные.ДетализацияРасчетаУчастников,
	|	ИсходныеДанные.ПериодичностьУсловий,
	|	ИсходныеДанные.ПериодичностьНачислений,
	|	ИсходныеДанные.УчитыватьНДС,
	|	ИсходныеДанные.ВалютаУсловий,
	|	ИсходныеДанные.ВалютаВзаиморасчетов,
	|	ИсходныеДанные.БазаРасчета,
	|	ИсходныеДанные.ОтборТоваровВыбранные,
	|	ИсходныеДанные.ОтборТоваровКромеВыбранных,
	|	ИсходныеДанные.ОтборТоваровБезОграничений,
	|	ИсходныеДанные.ОтборУчастниковВыбранные,
	|	ИсходныеДанные.ОтборУчастниковКромеВыбранных";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаПроцентСкидкиБезГруппировок(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ПоказательТоваров = ПараметрыУсловийРетроБонусов.ПоказательТоваров;
	ВидыПоказателей = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ПродажиЗакупки.Период КАК Период,
	|	ВТ_ПродажиЗакупки.НомерСтроки КАК НомерСтроки,
	|	ВТ_ПродажиЗакупки.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПродажиЗакупки.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПродажиЗакупки.ПоказательТоваров КАК ПоказательТоваров,
	|	ВТ_ПродажиЗакупки.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПродажиЗакупки.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	&ВыражениеПериодичностьУсловий КАК ПериодичностьУсловий,
	|	&ВыражениеЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	&ВыражениеРаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	&ВыражениеСуммаПлан КАК СуммаПлан,
	|	&ВыражениеКоличествоПлан КАК КоличествоПлан,
	|	ВТ_ПродажиЗакупки.ДокументРегистратор КАК ДокументРегистратор,
	|	ВТ_ПродажиЗакупки.Организация КАК Организация,
	|	ВТ_ПродажиЗакупки.Контрагент КАК Контрагент,
	|	ВТ_ПродажиЗакупки.Партнер КАК Партнер,
	|	ВТ_ПродажиЗакупки.Договор КАК Договор,
	|	ВТ_ПродажиЗакупки.Соглашение КАК Соглашение,
	|	ВТ_ПродажиЗакупки.Номенклатура КАК Номенклатура,
	|	ВЫРАЗИТЬ(ВТ_ПродажиЗакупки.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ПродажиЗакупки.Характеристика КАК Характеристика,
	|	ВТ_ПродажиЗакупки.Количество КАК Количество,
	|	ВТ_ПродажиЗакупки.БазаРасчета КАК БазаРасчета,
	|	ВТ_ПродажиЗакупки.ВалютаУсловий КАК ВалютаУсловий,
	|	ВТ_ПродажиЗакупки.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА ВТ_ПродажиЗакупки.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.ВыручкаВзаиморасчеты)
	|			ИЛИ ВТ_ПродажиЗакупки.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.СуммаЗакупкиВзаиморасчеты)
	|			ТОГДА ВТ_ПродажиЗакупки.ВалютаВзаиморасчетов
	|		ИНАЧЕ ВТ_ПродажиЗакупки.ВалютаУсловий
	|	КОНЕЦ КАК Валюта,
	|	ВТ_ПродажиЗакупки.Сумма КАК Сумма,
	|	ВТ_ПродажиЗакупки.СуммаРегл КАК СуммаРегл,
	|	ВТ_ПродажиЗакупки.СуммаВВалютеВзаиморасчетов КАК СуммаВВалютеВзаиморасчетов,
	|	ВТ_ПродажиЗакупки.СуммаОборотУпрСНДС КАК СуммаОборотУпрСНДС,
	|	ВТ_ПродажиЗакупки.СуммаОборотРеглСНДС КАК СуммаОборотРеглСНДС,
	|	ВТ_ПродажиЗакупки.СуммаОборотВВалютеВзаиморасчетовСНДС КАК СуммаОборотВВалютеВзаиморасчетовСНДС,
	|	ВТ_ПродажиЗакупки.СуммаОборотУпрБезНДС КАК СуммаОборотУпрБезНДС,
	|	ВТ_ПродажиЗакупки.СуммаОборотРеглБезНДС КАК СуммаОборотРеглБезНДС,
	|	ВТ_ПродажиЗакупки.СуммаОборотВВалютеВзаиморасчетовБезНДС КАК СуммаОборотВВалютеВзаиморасчетовБезНДС,
	|	&ВыражениеБазоваяЦена КАК БазоваяЦена,
	|	&ВыражениеБонусПроцент КАК БонусПроцент,
	|	&ВыражениеДатаНачала КАК ДатаНачала,
	|	&ВыражениеДатаОкончания КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТ_ПроцентСкидки
	|ИЗ
	|	&ТаблицыИсточники КАК ВТ_ПродажиЗакупки
	|ГДЕ
	|	&УсловиеОтбораТоваров
	|	И &УсловиеОтбораПоСоглашениям
	|
	|ИНДЕКСИРОВАТЬ ПО 1";
	
	Если ПараметрыУсловийРетроБонусов.Товары = Перечисления.СоставыСписковРетроБонусов.Выбранные Тогда
		
		ТаблицыИсточники =
		"ВТ_ПродажиЗакупки КАК ВТ_ПродажиЗакупки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Товары КАК ВТ_Товары
		|		ПО ВТ_ПродажиЗакупки.УсловиеРетроБонуса = ВТ_Товары.УсловияРетроБонусов
		|			И ВТ_ПродажиЗакупки.Номенклатура = ВТ_Товары.Номенклатура
		|			И ВТ_ПродажиЗакупки.Характеристика = ВТ_Товары.Характеристика
		|			И (ВТ_ПродажиЗакупки.Период МЕЖДУ ВТ_Товары.ДатаНачала И ВТ_Товары.ДатаОкончания)";
		
		УсловиеОтбораТоваров =
		"ВТ_ПродажиЗакупки.ОтборТоваровВыбранные
		|	И НЕ ВТ_Товары.Номенклатура ЕСТЬ NULL";
		
		Если ПоказательТоваров = ВидыПоказателей.Количество Тогда
			
			// Для ЦПП Количество процент бонуса по товарам определяется далее в ВТ_ПодготовленныеДанныеОпределениеПлана
			ВыражениеБазоваяЦена = "0";
			ВыражениеБонусПроцент = "0";
			ВыражениеКоличествоПлан = "0";
			
		Иначе
			
			ВыражениеБазоваяЦена = "ВТ_Товары.БазоваяЦена";
			ВыражениеБонусПроцент =
			"ВЫБОР
			|	КОГДА ЕСТЬNULL(ВТ_Товары.БонусПроцент, 0) <> 0
			|		ТОГДА ВТ_Товары.БонусПроцент
			|	ИНАЧЕ ВТ_ПродажиЗакупки.БонусПроцент
			|КОНЕЦ";
			ВыражениеКоличествоПлан = "ЕСТЬNULL(ВТ_Товары.КоличествоПлан, 0)";
			
		КонецЕсли;
		
		ВыражениеДатаНачала = "ВТ_Товары.ДатаНачала";
		ВыражениеДатаОкончания = "ВТ_Товары.ДатаОкончания";
		
	ИначеЕсли ПараметрыУсловийРетроБонусов.Товары = Перечисления.СоставыСписковРетроБонусов.КромеВыбранных Тогда
		
		ТаблицыИсточники =
		"ВТ_ПродажиЗакупки КАК ВТ_ПродажиЗакупки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Товары КАК ВТ_Товары
		|		ПО ВТ_ПродажиЗакупки.УсловиеРетроБонуса = ВТ_Товары.УсловияРетроБонусов
		|			И ВТ_ПродажиЗакупки.Номенклатура = ВТ_Товары.Номенклатура
		|			И ВТ_ПродажиЗакупки.Характеристика = ВТ_Товары.Характеристика
		|			И (ВТ_ПродажиЗакупки.Период МЕЖДУ ВТ_Товары.ДатаНачала И ВТ_Товары.ДатаОкончания)";
		
		УсловиеОтбораТоваров =
		"ВТ_ПродажиЗакупки.ОтборТоваровКромеВыбранных
		|	И ВТ_Товары.Номенклатура ЕСТЬ NULL";
		
		ВыражениеБазоваяЦена = "0";
		ВыражениеБонусПроцент = "ВТ_ПродажиЗакупки.БонусПроцент";
		ВыражениеДатаНачала = "ВТ_ПродажиЗакупки.Период";
		ВыражениеДатаОкончания = "ВТ_ПродажиЗакупки.Период";
		ВыражениеКоличествоПлан = "0";
		
	Иначе
		
		ТаблицыИсточники = "ВТ_ПродажиЗакупки КАК ВТ_ПродажиЗакупки";
		УсловиеОтбораТоваров = "ВТ_ПродажиЗакупки.ОтборТоваровБезОграничений";
		ВыражениеБазоваяЦена = "0";
		ВыражениеБонусПроцент = "ВТ_ПродажиЗакупки.БонусПроцент";
		ВыражениеДатаНачала = "ВТ_ПродажиЗакупки.Период";
		ВыражениеДатаОкончания = "ВТ_ПродажиЗакупки.Период";
		ВыражениеКоличествоПлан = "0";
		
	КонецЕсли;
	
	Если ПоказательТоваров = ВидыПоказателей.НеИспользуется Тогда
		
		ВыражениеПериодичностьУсловий = "ЗНАЧЕНИЕ(Перечисление.ПериодичностиРетроБонусов.ПустаяСсылка)";
		ВыражениеЗапретНачисленияСверхПлана = "ЛОЖЬ";
		ВыражениеСуммаПлан = "0";
		ВыражениеРаспределениеПоФИФО = "ИСТИНА";
		
	Иначе
		
		ВыражениеПериодичностьУсловий = "ВТ_ПродажиЗакупки.ПериодичностьУсловий";
		ВыражениеЗапретНачисленияСверхПлана = "ВТ_ПродажиЗакупки.ЗапретНачисленияСверхПлана";
		ВыражениеСуммаПлан = "ВТ_ПродажиЗакупки.СуммаПлан";
		ВыражениеРаспределениеПоФИФО = "ВТ_ПродажиЗакупки.РаспределениеПоФИФО";
		
	КонецЕсли;
	
	Если ПоказательТоваров = ВидыПоказателей.Количество Тогда
		
		// Для ЦПП Количество может быть несколько строк товара с разным планом и процентом (прогрессивная шкала)
		//@skip-check bsl-ql-hub - не является запросом
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВЫБРАТЬ", "ВЫБРАТЬ РАЗЛИЧНЫЕ");
		
	КонецЕсли;
	
	Если ПараметрыУсловийРетроБонусов.СоставУчастников = Перечисления.СоставыУчастниковРетроБонусов.Соглашения Тогда
		
		УсловиеОтбораПоСоглашениям =
		"ВТ_ПродажиЗакупки.Соглашение В
		|	(ВЫБРАТЬ
		|		ВТ_Соглашения.Соглашение
		|	ИЗ
		|		ВТ_Соглашения КАК ВТ_Соглашения)";
		
	Иначе
		
		УсловиеОтбораПоСоглашениям = "ИСТИНА";
		
	КонецЕсли;
	
	Если ПоказательТоваров = ВидыПоказателей.НеИспользуется
	 ИЛИ (ПоказательТоваров = ВидыПоказателей.Сумма
	   И НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана) Тогда
		
		ПоляИндексирования = "";
	
	Иначе
		
		ПоляИндексирования =
			"ИНДЕКСИРОВАТЬ ПО
			|	ДокументРегистратор,
			|	НомерСтроки";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТаблицыИсточники КАК ВТ_ПродажиЗакупки", ТаблицыИсточники);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораТоваров", УсловиеОтбораТоваров);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеБазоваяЦена", ВыражениеБазоваяЦена);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеБонусПроцент", ВыражениеБонусПроцент);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеДатаНачала", ВыражениеДатаНачала);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеДатаОкончания", ВыражениеДатаОкончания);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеПериодичностьУсловий", ВыражениеПериодичностьУсловий);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеЗапретНачисленияСверхПлана", ВыражениеЗапретНачисленияСверхПлана);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеСуммаПлан", ВыражениеСуммаПлан);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеРаспределениеПоФИФО", ВыражениеРаспределениеПоФИФО);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеКоличествоПлан", ВыражениеКоличествоПлан);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоСоглашениям", УсловиеОтбораПоСоглашениям);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИНДЕКСИРОВАТЬ ПО 1", ПоляИндексирования);
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаУчастникиПериодыДокументы(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ПроцентСкидки.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПроцентСкидки.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПроцентСкидки.ПоказательТоваров КАК ПоказательТоваров,
	|	ВТ_ПроцентСкидки.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПроцентСкидки.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ПроцентСкидки.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ПроцентСкидки.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ПроцентСкидки.РаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	ВТ_ПроцентСкидки.СуммаПлан КАК СуммаПлан,
	|	ВТ_ПроцентСкидки.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ПроцентСкидки.Договор КАК Договор,
	|	ВТ_ПроцентСкидки.Соглашение КАК Соглашение,
	|	ВТ_ПроцентСкидки.БазаРасчета КАК БазаРасчета,
	|	ВТ_ПроцентСкидки.Валюта КАК Валюта
	|ПОМЕСТИТЬ ВТ_УчастникиПериодыДокументы
	|ИЗ
	|	ВТ_ПроцентСкидки КАК ВТ_ПроцентСкидки";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПроцентСкидки");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаУчастникиПериодыДокументыВсеТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_УчастникиПериодыДокументы.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_УчастникиПериодыДокументы.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_УчастникиПериодыДокументы.ПоказательТоваров КАК ПоказательТоваров,
	|	ВТ_УчастникиПериодыДокументы.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_УчастникиПериодыДокументы.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_УчастникиПериодыДокументы.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_УчастникиПериодыДокументы.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_УчастникиПериодыДокументы.РаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	ВТ_УчастникиПериодыДокументы.СуммаПлан КАК СуммаПлан,
	|	ВТ_УчастникиПериодыДокументы.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_УчастникиПериодыДокументы.БазаРасчета КАК БазаРасчета,
	|	ВТ_УчастникиПериодыДокументы.Валюта КАК Валюта,
	|	ЕСТЬNULL(ВТ_Товары.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Номенклатура,
	|	ЕСТЬNULL(ВТ_Товары.Характеристика, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК Характеристика,
	|	ЕСТЬNULL(ВТ_Товары.БазоваяЦена, 0) КАК БазоваяЦена,
	|	ЕСТЬNULL(ВТ_Товары.БонусПроцент, 0) КАК БонусПроцент,
	|	ЕСТЬNULL(ВТ_Товары.КоличествоПлан, 0) КАК КоличествоПлан
	|ПОМЕСТИТЬ ВТ_УчастникиПериодыДокументыВсеТовары
	|ИЗ
	|	ВТ_УчастникиПериодыДокументы КАК ВТ_УчастникиПериодыДокументы
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Товары КАК ВТ_Товары
	|		ПО ИСТИНА";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_УчастникиПериодыДокументы");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаУчастникиПериодыДокументыПроданныеТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ПроцентСкидки.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПроцентСкидки.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПроцентСкидки.ПоказательТоваров КАК ПоказательТоваров,
	|	ВТ_ПроцентСкидки.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПроцентСкидки.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ПроцентСкидки.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ПроцентСкидки.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ПроцентСкидки.РаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	ВТ_ПроцентСкидки.СуммаПлан КАК СуммаПлан,
	|	ВТ_ПроцентСкидки.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ПроцентСкидки.БазаРасчета КАК БазаРасчета,
	|	ВТ_ПроцентСкидки.Валюта КАК Валюта,
	|	ВТ_ПроцентСкидки.Номенклатура КАК Номенклатура,
	|	ВТ_ПроцентСкидки.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ВТ_УчастникиПериодыДокументыПроданныеТовары
	|ИЗ
	|	ВТ_ПроцентСкидки КАК ВТ_ПроцентСкидки";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПроцентСкидки");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаНедостающийСоставПакета(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_УчастникиПериодыДокументыВсеТовары.ПериодРасчета КАК ПериодРасчета,
	|	&ПустаяСсылкаРегистратора КАК ДокументРегистратор,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.ПоказательТоваров КАК ПоказательТоваров,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.РаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.СуммаПлан КАК СуммаПлан,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	ЗНАЧЕНИЕ(Справочник.СоглашенияСКлиентами.ПустаяСсылка) КАК Соглашение,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.БазаРасчета КАК БазаРасчета,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.Валюта КАК Валюта,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.Номенклатура КАК Номенклатура,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.Характеристика КАК Характеристика,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.БонусПроцент КАК БонусПроцент,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.КоличествоПлан КАК КоличествоПлан
	|ПОМЕСТИТЬ ВТ_НедостающийСоставПакета
	|ИЗ
	|	ВТ_УчастникиПериодыДокументыВсеТовары КАК ВТ_УчастникиПериодыДокументыВсеТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчастникиПериодыДокументыПроданныеТовары КАК ВТ_УчастникиПериодыДокументыПроданныеТовары
	|	ПО ВТ_УчастникиПериодыДокументыВсеТовары.УсловиеРетроБонуса = ВТ_УчастникиПериодыДокументыПроданныеТовары.УсловиеРетроБонуса
	|		И ВТ_УчастникиПериодыДокументыВсеТовары.Организация = ВТ_УчастникиПериодыДокументыПроданныеТовары.Организация
	|		И ВТ_УчастникиПериодыДокументыВсеТовары.Валюта = ВТ_УчастникиПериодыДокументыПроданныеТовары.Валюта
	|		И &ПоляСоединенияПоУчастникам
	|		И ВТ_УчастникиПериодыДокументыВсеТовары.Номенклатура = ВТ_УчастникиПериодыДокументыПроданныеТовары.Номенклатура
	|		И ВТ_УчастникиПериодыДокументыВсеТовары.Характеристика = ВТ_УчастникиПериодыДокументыПроданныеТовары.Характеристика
	|		И ВТ_УчастникиПериодыДокументыВсеТовары.ПериодРасчета = ВТ_УчастникиПериодыДокументыПроданныеТовары.ПериодРасчета
	|ГДЕ
	|	ВТ_УчастникиПериодыДокументыПроданныеТовары.Номенклатура ЕСТЬ NULL";
	
	ПустаяСсылкаРегистратора = ЗначениеПустойСсылкиРегистратора(ПараметрыУсловийРетроБонусов);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПустаяСсылкаРегистратора", ПустаяСсылкаРегистратора);
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов,
		ТекстЗапроса,
		"ВТ_УчастникиПериодыДокументыВсеТовары",
		"ВТ_УчастникиПериодыДокументыПроданныеТовары");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаПроцентСкидкиСДаннымиПоПакету(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ТекстыПодзапросов = Новый Массив; // Массив Из Строка
	
	ТекстПодзапроса =
	"ВЫБРАТЬ
	|	ВТ_ПроцентСкидки.Период КАК Период,
	|	ВТ_ПроцентСкидки.НомерСтроки КАК НомерСтроки,
	|	ВТ_ПроцентСкидки.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПроцентСкидки.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПроцентСкидки.ПоказательТоваров КАК ПоказательТоваров,
	|	ВТ_ПроцентСкидки.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПроцентСкидки.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ПроцентСкидки.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ПроцентСкидки.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ПроцентСкидки.РаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	ВТ_ПроцентСкидки.СуммаПлан КАК СуммаПлан,
	|	ВТ_ПроцентСкидки.ДокументРегистратор КАК ДокументРегистратор,
	|	ВТ_ПроцентСкидки.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ПроцентСкидки.Договор КАК Договор,
	|	ВТ_ПроцентСкидки.Соглашение КАК Соглашение,
	|	ВТ_ПроцентСкидки.Номенклатура КАК Номенклатура,
	|	ВТ_ПроцентСкидки.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ПроцентСкидки.Характеристика КАК Характеристика,
	|	ВТ_ПроцентСкидки.Количество КАК Количество,
	|	ВТ_ПроцентСкидки.БазаРасчета КАК БазаРасчета,
	|	ВТ_ПроцентСкидки.Валюта КАК Валюта,
	|	ВТ_ПроцентСкидки.Сумма КАК Сумма,
	|	ВТ_ПроцентСкидки.СуммаРегл КАК СуммаРегл,
	|	ВТ_ПроцентСкидки.СуммаВВалютеВзаиморасчетов КАК СуммаВВалютеВзаиморасчетов,
	|	ВТ_ПроцентСкидки.СуммаОборотУпрСНДС КАК СуммаОборотУпрСНДС,
	|	ВТ_ПроцентСкидки.СуммаОборотРеглСНДС КАК СуммаОборотРеглСНДС,
	|	ВТ_ПроцентСкидки.СуммаОборотВВалютеВзаиморасчетовСНДС КАК СуммаОборотВВалютеВзаиморасчетовСНДС,
	|	ВТ_ПроцентСкидки.СуммаОборотУпрБезНДС КАК СуммаОборотУпрБезНДС,
	|	ВТ_ПроцентСкидки.СуммаОборотРеглБезНДС КАК СуммаОборотРеглБезНДС,
	|	ВТ_ПроцентСкидки.СуммаОборотВВалютеВзаиморасчетовБезНДС КАК СуммаОборотВВалютеВзаиморасчетовБезНДС,
	|	ВТ_ПроцентСкидки.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ПроцентСкидки.БонусПроцент КАК БонусПроцент,
	|	ВТ_ПроцентСкидки.ДатаНачала КАК ДатаНачала,
	|	ВТ_ПроцентСкидки.ДатаОкончания КАК ДатаОкончания,
	|	ВТ_ПроцентСкидки.КоличествоПлан КАК КоличествоПлан
	|ПОМЕСТИТЬ ВТ_ПроцентСкидкиСДаннымиПоПакету
	|ИЗ
	|	ВТ_ПроцентСкидки КАК ВТ_ПроцентСкидки";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстПодзапроса, "ВТ_ПроцентСкидки");
	ТекстыПодзапросов.Добавить(ТекстПодзапроса);
	
	ТекстПодзапроса =
	"ВЫБРАТЬ
	|	ВТ_НедостающийСоставПакета.ПериодРасчета КАК Период,
	|	0 КАК НомерСтроки,
	|	ВТ_НедостающийСоставПакета.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_НедостающийСоставПакета.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_НедостающийСоставПакета.ПоказательТоваров КАК ПоказательТоваров,
	|	ВТ_НедостающийСоставПакета.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_НедостающийСоставПакета.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_НедостающийСоставПакета.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_НедостающийСоставПакета.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_НедостающийСоставПакета.РаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	ВТ_НедостающийСоставПакета.СуммаПлан КАК СуммаПлан,
	|	ВТ_НедостающийСоставПакета.ДокументРегистратор КАК ДокументРегистратор,
	|	ВТ_НедостающийСоставПакета.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_НедостающийСоставПакета.Договор КАК Договор,
	|	ВТ_НедостающийСоставПакета.Соглашение КАК Соглашение,
	|	ВТ_НедостающийСоставПакета.Номенклатура КАК Номенклатура,
	|	ВЫРАЗИТЬ(ВТ_НедостающийСоставПакета.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_НедостающийСоставПакета.Характеристика КАК Характеристика,
	|	0 КАК Количество,
	|	ВТ_НедостающийСоставПакета.БазаРасчета КАК БазаРасчета,
	|	ВТ_НедостающийСоставПакета.Валюта КАК Валюта,
	|	0 КАК Сумма,
	|	0 КАК СуммаРегл,
	|	0 КАК СуммаВВалютеВзаиморасчетов,
	|	0 КАК СуммаОборотУпрСНДС,
	|	0 КАК СуммаОборотРеглСНДС,
	|	0 КАК СуммаОборотВВалютеВзаиморасчетовСНДС,
	|	0 КАК СуммаОборотУпрБезНДС,
	|	0 КАК СуммаОборотРеглБезНДС,
	|	0 КАК СуммаОборотВВалютеВзаиморасчетовБезНДС,
	|	ВТ_НедостающийСоставПакета.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_НедостающийСоставПакета.БонусПроцент КАК БонусПроцент,
	|	ВТ_НедостающийСоставПакета.ПериодРасчета КАК ДатаНачала,
	|	ВТ_НедостающийСоставПакета.ПериодРасчета КАК ДатаОкончания,
	|	ВТ_НедостающийСоставПакета.КоличествоПлан КАК КоличествоПлан
	|ИЗ
	|	ВТ_НедостающийСоставПакета КАК ВТ_НедостающийСоставПакета";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстПодзапроса, "ВТ_НедостающийСоставПакета");
	ТекстыПодзапросов.Добавить(ТекстПодзапроса);
	
	РазделительПодзапросов = РазделительПодзапросов();
	ТекстЗапроса = СтрСоединить(ТекстыПодзапросов, РазделительПодзапросов);
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаКратностьПакетаТоваров(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Организация КАК Организация,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Номенклатура КАК Номенклатура,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Характеристика КАК Характеристика,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.КоличествоПлан КАК КоличествоПлан,
	|	СУММА(ВТ_ПроцентСкидкиСДаннымиПоПакету.Количество) КАК Количество
	|ПОМЕСТИТЬ ВТ_КратностьПакетаТоваров
	|ИЗ
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету КАК ВТ_ПроцентСкидкиСДаннымиПоПакету
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ПериодРасчета,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.УсловиеРетроБонуса,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Организация,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Номенклатура,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Характеристика,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.КоличествоПлан";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПроцентСкидкиСДаннымиПоПакету");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаКоличествоПакетовТоваров(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	// Условия на поля Номенклатура и Характеристика необходимы для предотвращения их удаления оптимизатором СКД из предыдущей ВТ
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_КратностьПакетаТоваров.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_КратностьПакетаТоваров.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_КратностьПакетаТоваров.Организация КАК Организация,
	|	ВТ_КратностьПакетаТоваров.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	МИНИМУМ(ВЫБОР
	|		КОГДА ВТ_КратностьПакетаТоваров.Количество = 0
	|			ТОГДА 0
	|		КОГДА ВТ_КратностьПакетаТоваров.КоличествоПлан = 0
	|			ТОГДА ВТ_КратностьПакетаТоваров.Количество
	|		ИНАЧЕ ВЫРАЗИТЬ(ВТ_КратностьПакетаТоваров.Количество / ВТ_КратностьПакетаТоваров.КоличествоПлан
	|			- 0.5 КАК ЧИСЛО(15, 0))
	|	КОНЕЦ) КАК КоличествоПакетов
	|ПОМЕСТИТЬ ВТ_КоличествоПакетовТоваров
	|ИЗ
	|	ВТ_КратностьПакетаТоваров КАК ВТ_КратностьПакетаТоваров
	|ГДЕ
	|	ВТ_КратностьПакетаТоваров.Номенклатура ЕСТЬ НЕ NULL
	|	И ВТ_КратностьПакетаТоваров.Характеристика ЕСТЬ НЕ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_КратностьПакетаТоваров.УсловиеРетроБонуса,
	|	ВТ_КратностьПакетаТоваров.ПериодРасчета,
	|	ВТ_КратностьПакетаТоваров.Организация,
	|	ВТ_КратностьПакетаТоваров.Валюта,
	|	&ПоляГруппировкиПоУчастникам";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_КратностьПакетаТоваров");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаКоличествоСтрокПоДокументам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	Если НЕ ПараметрыУсловийРетроБонусов.РаспределениеПоFIFO Тогда
		Возврат;
	КонецЕсли;
	
	//@skip-check bsl-ql-hub - поля индексирования уточняются путем замены текста запроса
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ПроцентСкидки.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	ВТ_ПроцентСкидки.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПроцентСкидки.Период КАК Период,
	|	ВТ_ПроцентСкидки.ДокументРегистратор КАК ДокументРегистратор,
	|	&ПоляТоваров,
	|	МАКСИМУМ(ВТ_ПроцентСкидки.НомерСтроки) КАК КоличествоСтрок
	|ПОМЕСТИТЬ ВТ_КоличествоСтрокПоДокументам
	|ИЗ
	|	ВТ_ПроцентСкидки КАК ВТ_ПроцентСкидки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПроцентСкидки.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	ВТ_ПроцентСкидки.ПериодРасчета,
	|	&ПоляГруппировкиПоПолямТоваров,
	|	ВТ_ПроцентСкидки.Период,
	|	ВТ_ПроцентСкидки.ДокументРегистратор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта,
	|	&ПоляИндексированияПоУчастникам,
	|	ПериодРасчета,
	|	ДокументРегистратор,
	|	&ПоляИндексированияПоТоварам,
	|	Период";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПроцентСкидки");
	ПодставитьПоляПоТоварам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПроцентСкидки");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаКоличествоСтрокПоПериодам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	Если НЕ ПараметрыУсловийРетроБонусов.РаспределениеПоFIFO Тогда
		Возврат;
	КонецЕсли;
	
	//@skip-check bsl-ql-hub - поля индексирования уточняются путем замены текста запроса
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_КоличествоСтрокПоДокументам.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	ВТ_КоличествоСтрокПоДокументам.ПериодРасчета КАК ПериодРасчета,
	|	&ПоляТоваров,
	|	ВТ_КоличествоСтрокПоДокументам.Период КАК Период,
	|	СУММА(ВТ_КоличествоСтрокПоДокументам.КоличествоСтрок) КАК КоличествоСтрокЗаПериод
	|ПОМЕСТИТЬ ВТ_КоличествоСтрокПоПериодам
	|ИЗ
	|	ВТ_КоличествоСтрокПоДокументам КАК ВТ_КоличествоСтрокПоДокументам
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_КоличествоСтрокПоДокументам.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	ВТ_КоличествоСтрокПоДокументам.ПериодРасчета,
	|	&ПоляГруппировкиПоПолямТоваров,
	|	ВТ_КоличествоСтрокПоДокументам.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта,
	|	&ПоляИндексированияПоУчастникам,
	|	ПериодРасчета,
	|	Период,
	|	&ПоляИндексированияПоТоварам";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_КоличествоСтрокПоДокументам");
	ПодставитьПоляПоТоварам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_КоличествоСтрокПоДокументам");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаКоличествоСтрокПоПериодамНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	Если НЕ ПараметрыУсловийРетроБонусов.РаспределениеПоFIFO Тогда
		Возврат;
	КонецЕсли;
	
	//@skip-check bsl-ql-hub - поля группировки и индексирования уточняются путем замены текста запроса
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_КоличествоСтрокПоПериодам.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	&ПоляТоваров,
	|	ВТ_КоличествоСтрокПоПериодам.Период КАК Период,
	|	ВТ_КоличествоСтрокПоПериодам.КоличествоСтрокЗаПериод КАК КоличествоСтрокЗаПериод,
	|	СУММА(ВТ_КоличествоСтрокПоПериодамЗеркало.КоличествоСтрокЗаПериод) КАК КоличествоСтрокДоПериода
	|ПОМЕСТИТЬ ВТ_КоличествоСтрокПоПериодамНарастающийИтог
	|ИЗ
	|	ВТ_КоличествоСтрокПоПериодам КАК ВТ_КоличествоСтрокПоПериодам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоличествоСтрокПоПериодам КАК ВТ_КоличествоСтрокПоПериодамЗеркало
	|		ПО ВТ_КоличествоСтрокПоПериодам.Период > ВТ_КоличествоСтрокПоПериодамЗеркало.Период
	|			И ВТ_КоличествоСтрокПоПериодам.Валюта = ВТ_КоличествоСтрокПоПериодамЗеркало.Валюта
	|			И &ПоляСоединенияПоУчастникам
	|			И ВТ_КоличествоСтрокПоПериодам.ПериодРасчета = ВТ_КоличествоСтрокПоПериодамЗеркало.ПериодРасчета
	|			И &ПоляСоединенияПоТоварам
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_КоличествоСтрокПоПериодам.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	ВТ_КоличествоСтрокПоПериодам.ПериодРасчета,
	|	&ПоляГруппировкиПоПолямТоваров,
	|	ВТ_КоличествоСтрокПоПериодам.Период,
	|	ВТ_КоличествоСтрокПоПериодам.КоличествоСтрокЗаПериод
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта,
	|	&ПоляИндексированияПоУчастникам,
	|	Период,
	|	&ПоляИндексированияПоТоварам";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_КоличествоСтрокПоПериодам", "ВТ_КоличествоСтрокПоПериодамЗеркало");
	ПодставитьПоляПоТоварам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_КоличествоСтрокПоПериодам", "ВТ_КоличествоСтрокПоПериодамЗеркало");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаКоличествоСтрокПоДокументамНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	Если НЕ ПараметрыУсловийРетроБонусов.РаспределениеПоFIFO Тогда
		Возврат;
	КонецЕсли;
	
	//@skip-check bsl-ql-hub - поля группировки и индексирования уточняются путем замены текста запроса
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_КоличествоСтрокПоДокументам.Валюта КАК Валюта,
	|	ВТ_КоличествоСтрокПоДокументам.Период КАК Период,
	|	&ПоляУчастники,
	|	&ПоляТоваров,
	|	ВТ_КоличествоСтрокПоДокументам.ДокументРегистратор КАК ДокументРегистратор,
	|	ЕСТЬNULL(СУММА(ВТ_КоличествоСтрокПоДокументамЗеркало.КоличествоСтрок), 0) КАК КоличествоСтрокДоДокумента
	|ПОМЕСТИТЬ ВТ_КоличествоСтрокПоДокументамНарастающийИтог
	|ИЗ
	|	ВТ_КоличествоСтрокПоДокументам КАК ВТ_КоличествоСтрокПоДокументам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоличествоСтрокПоДокументам КАК ВТ_КоличествоСтрокПоДокументамЗеркало
	|		ПО ВТ_КоличествоСтрокПоДокументам.Период = ВТ_КоличествоСтрокПоДокументамЗеркало.Период
	|			И ВТ_КоличествоСтрокПоДокументам.ДокументРегистратор > ВТ_КоличествоСтрокПоДокументамЗеркало.ДокументРегистратор
	|			И ВТ_КоличествоСтрокПоДокументам.Валюта = ВТ_КоличествоСтрокПоДокументамЗеркало.Валюта
	|			И &ПоляСоединенияПоУчастникам
	|			И &ПоляСоединенияПоТоварам
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_КоличествоСтрокПоДокументам.Валюта,
	|	ВТ_КоличествоСтрокПоДокументам.Период,
	|	&ПоляГруппировкиПоУчастникам,
	|	ВТ_КоличествоСтрокПоДокументам.ДокументРегистратор,
	|	&ПоляГруппировкиПоПолямТоваров
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРегистратор,
	|	&ПоляИндексированияПоТоварам";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_КоличествоСтрокПоДокументам", "ВТ_КоличествоСтрокПоДокументамЗеркало");
	ПодставитьПоляПоТоварам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_КоличествоСтрокПоДокументам", "ВТ_КоличествоСтрокПоДокументамЗеркало");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаКоличествоСтрокПоПериодамДокументамНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	Если НЕ ПараметрыУсловийРетроБонусов.РаспределениеПоFIFO Тогда
		Возврат;
	КонецЕсли;
	
	//@skip-check bsl-ql-hub - поля индексирования уточняются путем замены текста запроса
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_КоличествоСтрокПоДокументамНарастающийИтог.ДокументРегистратор КАК ДокументРегистратор,
	|	&ПоляТоваров,
	|	ЕСТЬNULL(ВТ_КоличествоСтрокПоПериодамНарастающийИтог.КоличествоСтрокДоПериода, 0) + ВТ_КоличествоСтрокПоДокументамНарастающийИтог.КоличествоСтрокДоДокумента КАК КоличествоСтрокДоДокумента
	|ПОМЕСТИТЬ ВТ_КоличествоСтрокПоПериодамДокументамНарастающийИтог
	|ИЗ
	|	ВТ_КоличествоСтрокПоДокументамНарастающийИтог КАК ВТ_КоличествоСтрокПоДокументамНарастающийИтог
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоличествоСтрокПоПериодамНарастающийИтог КАК ВТ_КоличествоСтрокПоПериодамНарастающийИтог
	|		ПО ВТ_КоличествоСтрокПоДокументамНарастающийИтог.Период = ВТ_КоличествоСтрокПоПериодамНарастающийИтог.Период
	|			И ВТ_КоличествоСтрокПоДокументамНарастающийИтог.Валюта = ВТ_КоличествоСтрокПоПериодамНарастающийИтог.Валюта
	|			И &ПоляСоединенияПоУчастникам
	|			И &ПоляСоединенияПоТоварам
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРегистратор,
	|	&ПоляИндексированияПоТоварам";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов,
		ТекстЗапроса,
		"ВТ_КоличествоСтрокПоДокументамНарастающийИтог",
		"ВТ_КоличествоСтрокПоПериодамНарастающийИтог");
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов,
		ТекстЗапроса,
		"ВТ_КоличествоСтрокПоДокументамНарастающийИтог",
		"ВТ_КоличествоСтрокПоПериодамНарастающийИтог");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаПревышениеЛимитаОбщая(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ЦелевыеПоказатели = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательТоваров <> ЦелевыеПоказатели.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	//@skip-check bsl-ql-hub - поля группировки и индексирования уточняются путем замены текста запроса
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ПроцентСкидки.Период КАК Период,
	|	ВТ_ПроцентСкидки.НомерСтроки КАК НомерСтроки,
	|	ВТ_ПроцентСкидки.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПроцентСкидки.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПроцентСкидки.Организация КАК Организация,
	|	ВТ_ПроцентСкидки.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	ВТ_ПроцентСкидки.Договор КАК Договор,
	|	ВТ_ПроцентСкидки.Соглашение КАК Соглашение,
	|	ВТ_ПроцентСкидки.ДокументРегистратор КАК ДокументРегистратор,
	|	ВТ_ПроцентСкидки.Номенклатура КАК Номенклатура,
	|	ВТ_ПроцентСкидки.Характеристика КАК Характеристика,
	|	ВТ_ПроцентСкидки.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ПроцентСкидки.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПроцентСкидки.СуммаПлан КАК СуммаПлан,
	|	&ВыражениеПриоритет КАК Приоритет,
	|	СУММА(ВТ_ПроцентСкидки.Количество) КАК Количество,
	|	СУММА(&ВыражениеСуммаБезУточнения) КАК Сумма
	|ПОМЕСТИТЬ ВТ_ПревышениеЛимитаОбщая
	|ИЗ
	|	&ТаблицыИсточники КАК ВТ_ПроцентСкидки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПроцентСкидки.Период,
	|	ВТ_ПроцентСкидки.НомерСтроки,
	|	ВТ_ПроцентСкидки.ПериодРасчета,
	|	ВТ_ПроцентСкидки.УсловиеРетроБонуса,
	|	ВТ_ПроцентСкидки.Организация,
	|	ВТ_ПроцентСкидки.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	ВТ_ПроцентСкидки.Договор,
	|	ВТ_ПроцентСкидки.Соглашение,
	|	ВТ_ПроцентСкидки.ДокументРегистратор,
	|	ВТ_ПроцентСкидки.Номенклатура,
	|	ВТ_ПроцентСкидки.Характеристика,
	|	ВТ_ПроцентСкидки.ПериодичностьУсловий,
	|	ВТ_ПроцентСкидки.ДетализацияРасчетаУчастников,
	|	ВТ_ПроцентСкидки.СуммаПлан,
	|	&ПоляГруппировкиПоПриоритету
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРасчета,
	|	УсловиеРетроБонуса,
	|	Организация,
	|	&ПоляИндексированияПоУчастникам,
	|	НомерСтроки,
	|	Номенклатура,
	|	Характеристика,
	|	Валюта";
	
	Если ПараметрыУсловийРетроБонусов.РаспределениеПоFIFO Тогда
		
		ВыражениеПриоритет = "ВТ_КоличествоСтрокПоПериодамДокументамНарастающийИтог.КоличествоСтрокДоДокумента + ВТ_ПроцентСкидки.НомерСтроки";
		
		ТаблицыИсточники =
		"ВТ_ПроцентСкидки КАК ВТ_ПроцентСкидки
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоличествоСтрокПоПериодамДокументамНарастающийИтог КАК ВТ_КоличествоСтрокПоПериодамДокументамНарастающийИтог
		|	ПО ВТ_ПроцентСкидки.ДокументРегистратор = ВТ_КоличествоСтрокПоПериодамДокументамНарастающийИтог.ДокументРегистратор
		|		И &ПоляСоединенияПоТоварам";
		
		ПодставитьПоляПоТоварам(ПараметрыУсловийРетроБонусов, ТаблицыИсточники, "ВТ_ПроцентСкидки", "ВТ_КоличествоСтрокПоПериодамДокументамНарастающийИтог");
		
		ПоляГруппировкиПоПриоритету =
		"ВТ_КоличествоСтрокПоПериодамДокументамНарастающийИтог.КоличествоСтрокДоДокумента";
		
	Иначе
		
		ВыражениеПриоритет = "АВТОНОМЕРЗАПИСИ()";
		ТаблицыИсточники = "ВТ_ПроцентСкидки КАК ВТ_ПроцентСкидки";
		ПоляГруппировкиПоПриоритету = "NULL";
		
	КонецЕсли;
	
	Если ПараметрыУсловийРетроБонусов.ПропорциональноеРаспределение Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВЫБРАТЬ", "ВЫБРАТЬ ПЕРВЫЕ 1000000000"); // @Query-part-1 @Query-part-2
		ТекстЗапроса = СтрЗаменить(
			ТекстЗапроса,
			"ИНДЕКСИРОВАТЬ ПО",
			"УПОРЯДОЧИТЬ ПО
			|	ВТ_ПроцентСкидки.Период,
			|	ВТ_ПроцентСкидки.ДокументРегистратор,
			|	ВТ_ПроцентСкидки.НомерСтроки
			|
			|ИНДЕКСИРОВАТЬ ПО");
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеПриоритет", ВыражениеПриоритет);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТаблицыИсточники КАК ВТ_ПроцентСкидки", ТаблицыИсточники);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляГруппировкиПоПриоритету", ПоляГруппировкиПоПриоритету);
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПроцентСкидки");
	ПодставитьПолеВыбораСуммаБезУточнения(ТекстЗапроса, "ВТ_ПроцентСкидки");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаОборотыПоПорциям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательТоваров <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПараметрыУсловийРетроБонусов.РаспределениеПоFIFO Тогда
		Возврат;
	КонецЕсли;
	
	//@skip-check bsl-ql-hub - поля группировки и индексирования уточняются путем замены текста запроса
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаИсточник.ПериодРасчета КАК ПериодРасчета,
	|	ВЫРАЗИТЬ(ТаблицаИсточник.Приоритет / &ПорцияНарастающегоИтога - 0.5 КАК ЧИСЛО(15, 0))
	|		* &ПорцияНарастающегоИтога КАК ПриоритетПорция,
	|	ТаблицаИсточник.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ТаблицаИсточник.Организация КАК Организация,
	|	ТаблицаИсточник.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	&ПоляТоваров,
	|	ТаблицаИсточник.СуммаПлан КАК СуммаПлан,
	|	&ВыражениеКоличествоПлан КАК КоличествоПлан,
	|	0 КАК КоличествоДоПорции,
	|	0 КАК СуммаДоПорции,
	|	СУММА(ТаблицаИсточник.Количество) КАК Количество,
	|	СУММА(ТаблицаИсточник.Сумма) КАК Сумма,
	|	СУММА(
	|		ВЫБОР
	|			КОГДА ТаблицаИсточник.Сумма > 0
	|				ТОГДА ТаблицаИсточник.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаПриход,
	|	СУММА(
	|		ВЫБОР
	|			КОГДА ТаблицаИсточник.Количество > 0
	|				ТОГДА ТаблицаИсточник.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоПриход
	|ПОМЕСТИТЬ ВТ_ОборотыПоПорциям
	|ИЗ
	|	ВТ_ПодготовленныеДанныеПоДокументам КАК ТаблицаИсточник
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаИсточник.ПериодРасчета,
	|	ВЫРАЗИТЬ(ТаблицаИсточник.Приоритет / &ПорцияНарастающегоИтога - 0.5 КАК ЧИСЛО(15, 0)) * &ПорцияНарастающегоИтога,
	|	ТаблицаИсточник.УсловиеРетроБонуса,
	|	ТаблицаИсточник.Организация,
	|	ТаблицаИсточник.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	&ПоляГруппировкиПоПолямТоваров,
	|	ТаблицаИсточник.СуммаПлан,
	|	&ВыражениеКоличествоПлан
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРасчета,
	|	УсловиеРетроБонуса,
	|	Организация,
	|	Валюта,
	|	&ПоляИндексированияПоУчастникам,
	|	&ПоляИндексированияПоТоварам,
	|	ПриоритетПорция";
	
	Если ПараметрыУсловийРетроБонусов.ПоказательТоваров = ПоказателиПродаж.ПакетноеПредложение Тогда
		ВыражениеКоличествоПлан = "ТаблицаИсточник.КоличествоПакетов * ТаблицаИсточник.КоличествоПлан";
	Иначе
		ВыражениеКоличествоПлан = "ТаблицаИсточник.КоличествоПлан";
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеКоличествоПлан", ВыражениеКоличествоПлан);
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ТаблицаИсточник");
	ПодставитьПоляПоТоварам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ТаблицаИсточник");
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПорцияНарастающегоИтога", ПорцияНарастающегоИтога());
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//  ТаблицаИсточник - Строка
//  ТаблицаНазначение - Строка
//
Процедура ДобавитьТекстЗапросаОборотыПоПорциямНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов, ТаблицаИсточник, ТаблицаНазначение) Экспорт
	
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательТоваров <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПараметрыУсловийРетроБонусов.РаспределениеПоFIFO Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаИсточник.ПериодРасчета КАК ПериодРасчета,
	|	ТаблицаИсточник.ПриоритетПорция КАК ПриоритетПорция,
	|	ТаблицаИсточник.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ТаблицаИсточник.Организация КАК Организация,
	|	ТаблицаИсточник.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	&ПоляТоваров,
	|	ТаблицаИсточник.СуммаПлан КАК СуммаПлан,
	|	ТаблицаИсточник.КоличествоПлан КАК КоличествоПлан,
	|	ТаблицаИсточник.КоличествоДоПорции КАК КоличествоДоПорции,
	|	ТаблицаИсточник.СуммаДоПорции КАК СуммаДоПорции,
	|	ТаблицаИсточник.СуммаПриход КАК СуммаПриход,
	|	ТаблицаИсточник.Сумма КАК СуммаПорции,
	|	ТаблицаИсточник.КоличествоПриход КАК КоличествоПриход,
	|	ТаблицаИсточник.Количество КАК КоличествоПорции,
	|	СУММА(ТаблицаИсточникЗеркало.Количество) КАК Количество,
	|	СУММА(ТаблицаИсточникЗеркало.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТ_ТаблицаНазначение
	|ИЗ
	|	&ТаблицаИсточник КАК ТаблицаИсточник
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ &ТаблицаИсточник КАК ТаблицаИсточникЗеркало
	|		ПО ТаблицаИсточник.ПриоритетПорция >= ТаблицаИсточникЗеркало.ПриоритетПорция
	|			И ТаблицаИсточник.ПериодРасчета = ТаблицаИсточникЗеркало.ПериодРасчета
	|			И ТаблицаИсточник.УсловиеРетроБонуса = ТаблицаИсточникЗеркало.УсловиеРетроБонуса
	|			И ТаблицаИсточник.Организация = ТаблицаИсточникЗеркало.Организация
	|			И ТаблицаИсточник.Валюта = ТаблицаИсточникЗеркало.Валюта
	|			И &ПоляСоединенияПоУчастникам
	|			И &ПоляСоединенияПоТоварам
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаИсточник.ПериодРасчета,
	|	ТаблицаИсточник.ПриоритетПорция,
	|	ТаблицаИсточник.УсловиеРетроБонуса,
	|	ТаблицаИсточник.Организация,
	|	ТаблицаИсточник.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	&ПоляГруппировкиПоПолямТоваров,
	|	ТаблицаИсточник.СуммаПлан,
	|	ТаблицаИсточник.КоличествоПлан,
	|	ТаблицаИсточник.КоличествоДоПорции,
	|	ТаблицаИсточник.Сумма,
	|	ТаблицаИсточник.СуммаПриход,
	|	ТаблицаИсточник.СуммаДоПорции,
	|	ТаблицаИсточник.КоличествоПриход,
	|	ТаблицаИсточник.Количество";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТаблицаИсточник", ТаблицаИсточник);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТ_ТаблицаНазначение", ТаблицаНазначение);
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ТаблицаИсточник", "ТаблицаИсточникЗеркало");
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ТаблицаИсточник", "ТаблицаИсточникЗеркало");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//  ТаблицаИсточник - Строка
//  ТаблицаНазначение - Строка
//
Процедура ДобавитьТекстЗапросаПорцияПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов, ТаблицаИсточник, ТаблицаНазначение) Экспорт
	
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательТоваров <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПараметрыУсловийРетроБонусов.РаспределениеПоFIFO Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаИсточник.ПериодРасчета КАК ПериодРасчета,
	|	МИНИМУМ(ТаблицаИсточник.ПриоритетПорция) КАК ПриоритетПорция,
	|	ТаблицаИсточник.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ТаблицаИсточник.Организация КАК Организация,
	|	ТаблицаИсточник.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	&ПоляТоваров,
	|	ТаблицаИсточник.СуммаПлан КАК СуммаПлан,
	|	ТаблицаИсточник.КоличествоПлан КАК КоличествоПлан
	|ПОМЕСТИТЬ ВТ_ТаблицаНазначение
	|ИЗ
	|	&ТаблицаИсточник КАК ТаблицаИсточник
	|ГДЕ
	|	&УсловиеПревышениеПлана
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаИсточник.ПериодРасчета,
	|	ТаблицаИсточник.УсловиеРетроБонуса,
	|	ТаблицаИсточник.Организация,
	|	ТаблицаИсточник.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	&ПоляГруппировкиПоПолямТоваров,
	|	ТаблицаИсточник.СуммаПлан,
	|	ТаблицаИсточник.КоличествоПлан
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаИсточник.ПериодРасчета КАК ПериодРасчета,
	|	ТаблицаИсточник.ПриоритетПорция КАК ПриоритетПорция,
	|	ТаблицаИсточник.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ТаблицаИсточник.Организация КАК Организация,
	|	ТаблицаИсточник.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	&ПоляТоваров,
	|	ТаблицаИсточник.СуммаПлан КАК СуммаПлан,
	|	ТаблицаИсточник.КоличествоПлан КАК КоличествоПлан
	|ИЗ
	|	&ТаблицаИсточник КАК ТаблицаИсточник
	|ГДЕ
	|	&УсловиеПорцииСКорректировками";
	
	Если ПараметрыУсловийРетроБонусов.ПоказательТоваров = ПоказателиПродаж.Сумма Тогда
		
		УсловиеПревышениеПлана = "ТаблицаИсточник.Сумма + ТаблицаИсточник.СуммаДоПорции >= ТаблицаИсточник.СуммаПлан";
		УсловиеПорцииСКорректировками = "ТаблицаИсточник.Сумма + ТаблицаИсточник.СуммаДоПорции < ТаблицаИсточник.СуммаПлан
		|	И ТаблицаИсточник.СуммаДоПорции + ТаблицаИсточник.Сумма - ТаблицаИсточник.СуммаПорции + ТаблицаИсточник.СуммаПриход > ТаблицаИсточник.СуммаПлан";
		
	Иначе
		
		УсловиеПревышениеПлана = "ТаблицаИсточник.Количество + ТаблицаИсточник.КоличествоДоПорции >= ТаблицаИсточник.КоличествоПлан";
		УсловиеПорцииСКорректировками = "ТаблицаИсточник.Количество + ТаблицаИсточник.КоличествоДоПорции < ТаблицаИсточник.КоличествоПлан
		|	И ТаблицаИсточник.КоличествоДоПорции + ТаблицаИсточник.Количество - ТаблицаИсточник.КоличествоПорции + ТаблицаИсточник.КоличествоПриход > ТаблицаИсточник.КоличествоПлан";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПревышениеПлана", УсловиеПревышениеПлана);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПорцииСКорректировками", УсловиеПорцииСКорректировками);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТаблицаИсточник", ТаблицаИсточник);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТ_ТаблицаНазначение", ТаблицаНазначение);
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ТаблицаИсточник");
	ПодставитьПоляПоТоварам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ТаблицаИсточник");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаПредыдущаяПорцияДоПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательТоваров <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПараметрыУсловийРетроБонусов.РаспределениеПоFIFO Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ПорцияПревышенияЛимита.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПорцияПревышенияЛимита.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПорцияПревышенияЛимита.Организация КАК Организация,
	|	ВТ_ПорцияПревышенияЛимита.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	&ПоляТоваров,
	|	ВТ_ПорцияПревышенияЛимита.ПриоритетПорция КАК ПриоритетПорция,
	|	ВТ_ПорцияПревышенияЛимита.СуммаПлан КАК СуммаПлан,
	|	ВТ_ПорцияПревышенияЛимита.КоличествоПлан КАК КоличествоПлан,
	|	ЕСТЬNULL(МАКСИМУМ(ВТ_ОборотыПоПорциямНарастающийИтог.ПриоритетПорция), -1) КАК ПриоритетПредыдущаяПорция
	|ПОМЕСТИТЬ ВТ_ПредыдущаяПорцияДоПревышенияЛимита
	|ИЗ
	|	ВТ_ПорцияПревышенияЛимита КАК ВТ_ПорцияПревышенияЛимита
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОборотыПоПорциямНарастающийИтог КАК ВТ_ОборотыПоПорциямНарастающийИтог
	|		ПО ВТ_ПорцияПревышенияЛимита.ПериодРасчета = ВТ_ОборотыПоПорциямНарастающийИтог.ПериодРасчета
	|			И ВТ_ПорцияПревышенияЛимита.УсловиеРетроБонуса = ВТ_ОборотыПоПорциямНарастающийИтог.УсловиеРетроБонуса
	|			И ВТ_ПорцияПревышенияЛимита.Организация = ВТ_ОборотыПоПорциямНарастающийИтог.Организация
	|			И ВТ_ПорцияПревышенияЛимита.Валюта = ВТ_ОборотыПоПорциямНарастающийИтог.Валюта
	|			И &ПоляСоединенияПоУчастникам
	|			И &ПоляСоединенияПоТоварам
	|			И ВТ_ПорцияПревышенияЛимита.ПриоритетПорция > ВТ_ОборотыПоПорциямНарастающийИтог.ПриоритетПорция
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПорцияПревышенияЛимита.ПериодРасчета,
	|	ВТ_ПорцияПревышенияЛимита.УсловиеРетроБонуса,
	|	ВТ_ПорцияПревышенияЛимита.Организация,
	|	ВТ_ПорцияПревышенияЛимита.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	&ПоляГруппировкиПоПолямТоваров,
	|	ВТ_ПорцияПревышенияЛимита.ПриоритетПорция,
	|	ВТ_ПорцияПревышенияЛимита.СуммаПлан,
	|	ВТ_ПорцияПревышенияЛимита.КоличествоПлан";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПорцияПревышенияЛимита", "ВТ_ОборотыПоПорциямНарастающийИтог");
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПорцияПревышенияЛимита", "ВТ_ОборотыПоПорциямНарастающийИтог");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаОборотыДоПорцииПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательТоваров <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПараметрыУсловийРетроБонусов.РаспределениеПоFIFO Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ПредыдущаяПорцияДоПревышенияЛимита.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПредыдущаяПорцияДоПревышенияЛимита.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПредыдущаяПорцияДоПревышенияЛимита.Организация КАК Организация,
	|	ВТ_ПредыдущаяПорцияДоПревышенияЛимита.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	&ПоляТоваров,
	|	ВТ_ПредыдущаяПорцияДоПревышенияЛимита.ПриоритетПорция КАК ПриоритетПорция,
	|	ВТ_ПредыдущаяПорцияДоПревышенияЛимита.СуммаПлан КАК СуммаПлан,
	|	ВТ_ПредыдущаяПорцияДоПревышенияЛимита.КоличествоПлан КАК КоличествоПлан,
	|	0 КАК КоличествоДоСубпорции,
	|	0 КАК СуммаДоСубпорции,
	|	ЕСТЬNULL(ВТ_ОборотыПоПорциямНарастающийИтог.Сумма, 0) КАК СуммаДоПорции,
	|	ЕСТЬNULL(ВТ_ОборотыПоПорциямНарастающийИтог.Количество, 0) КАК КоличествоДоПорции
	|ПОМЕСТИТЬ ВТ_ОборотыДоПорцииПревышенияЛимита
	|ИЗ
	|	ВТ_ПредыдущаяПорцияДоПревышенияЛимита КАК ВТ_ПредыдущаяПорцияДоПревышенияЛимита
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОборотыПоПорциямНарастающийИтог КАК ВТ_ОборотыПоПорциямНарастающийИтог
	|		ПО ВТ_ПредыдущаяПорцияДоПревышенияЛимита.ПериодРасчета = ВТ_ОборотыПоПорциямНарастающийИтог.ПериодРасчета
	|			И ВТ_ПредыдущаяПорцияДоПревышенияЛимита.УсловиеРетроБонуса = ВТ_ОборотыПоПорциямНарастающийИтог.УсловиеРетроБонуса
	|			И ВТ_ПредыдущаяПорцияДоПревышенияЛимита.Организация = ВТ_ОборотыПоПорциямНарастающийИтог.Организация
	|			И ВТ_ПредыдущаяПорцияДоПревышенияЛимита.Валюта = ВТ_ОборотыПоПорциямНарастающийИтог.Валюта
	|			И &ПоляСоединенияПоУчастникам
	|			И &ПоляСоединенияПоТоварам
	|			И ВТ_ПредыдущаяПорцияДоПревышенияЛимита.ПриоритетПредыдущаяПорция = ВТ_ОборотыПоПорциямНарастающийИтог.ПриоритетПорция";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПредыдущаяПорцияДоПревышенияЛимита", "ВТ_ОборотыПоПорциямНарастающийИтог");
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПредыдущаяПорцияДоПревышенияЛимита", "ВТ_ОборотыПоПорциямНарастающийИтог");
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПорцияНарастающегоИтога", ПорцияНарастающегоИтога());
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаСубпорцияПревышенияЛимитаОборотыДоПорции(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательТоваров <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПараметрыУсловийРетроБонусов.РаспределениеПоFIFO Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_СубпорцияПревышенияЛимита.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_СубпорцияПревышенияЛимита.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_СубпорцияПревышенияЛимита.Организация КАК Организация,
	|	ВТ_СубпорцияПревышенияЛимита.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	&ПоляТоваров,
	|	ВТ_СубпорцияПревышенияЛимита.ПриоритетПорция КАК ПриоритетПорция,
	|	ВТ_СубпорцияПревышенияЛимита.СуммаПлан КАК СуммаПлан,
	|	ВТ_СубпорцияПревышенияЛимита.КоличествоПлан КАК КоличествоПлан,
	|	ЕСТЬNULL(ВТ_ОборотыПоСубпорциямНарастающийИтог.СуммаДоПорции, 0) КАК СуммаДоПорции,
	|	ЕСТЬNULL(ВТ_ОборотыПоСубпорциямНарастающийИтог.КоличествоДоПорции, 0) КАК КоличествоДоПорции
	|ПОМЕСТИТЬ ВТ_СубпорцияПревышенияЛимитаОборотыДоПорции
	|ИЗ
	|	ВТ_СубпорцияПревышенияЛимита КАК ВТ_СубпорцияПревышенияЛимита
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОборотыПоСубпорциямНарастающийИтог КАК ВТ_ОборотыПоСубпорциямНарастающийИтог
	|		ПО ВТ_СубпорцияПревышенияЛимита.ПериодРасчета = ВТ_ОборотыПоСубпорциямНарастающийИтог.ПериодРасчета
	|			И ВТ_СубпорцияПревышенияЛимита.УсловиеРетроБонуса = ВТ_ОборотыПоСубпорциямНарастающийИтог.УсловиеРетроБонуса
	|			И ВТ_СубпорцияПревышенияЛимита.Организация = ВТ_ОборотыПоСубпорциямНарастающийИтог.Организация
	|			И ВТ_СубпорцияПревышенияЛимита.Валюта = ВТ_ОборотыПоСубпорциямНарастающийИтог.Валюта
	|			И &ПоляСоединенияПоУчастникам
	|			И &ПоляСоединенияПоТоварам
	|			И ВТ_СубпорцияПревышенияЛимита.ПриоритетПорция = ВТ_ОборотыПоСубпорциямНарастающийИтог.ПриоритетПорция";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_СубпорцияПревышенияЛимита", "ВТ_ОборотыПоСубпорциямНарастающийИтог");
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_СубпорцияПревышенияЛимита", "ВТ_ОборотыПоСубпорциямНарастающийИтог");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаПредыдущаяСубпорцияДоПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательТоваров <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПараметрыУсловийРетроБонусов.РаспределениеПоFIFO Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_СубпорцияПревышенияЛимитаОборотыДоПорции.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_СубпорцияПревышенияЛимитаОборотыДоПорции.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_СубпорцияПревышенияЛимитаОборотыДоПорции.Организация КАК Организация,
	|	ВТ_СубпорцияПревышенияЛимитаОборотыДоПорции.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	&ПоляТоваров,
	|	ВТ_СубпорцияПревышенияЛимитаОборотыДоПорции.ПриоритетПорция КАК ПриоритетПорция,
	|	ВТ_СубпорцияПревышенияЛимитаОборотыДоПорции.СуммаПлан КАК СуммаПлан,
	|	ВТ_СубпорцияПревышенияЛимитаОборотыДоПорции.КоличествоПлан КАК КоличествоПлан,
	|	ВТ_СубпорцияПревышенияЛимитаОборотыДоПорции.СуммаДоПорции КАК СуммаДоПорции,
	|	ВТ_СубпорцияПревышенияЛимитаОборотыДоПорции.КоличествоДоПорции КАК КоличествоДоПорции,
	|	ЕСТЬNULL(МАКСИМУМ(ВТ_ОборотыПоСубпорциямНарастающийИтог.ПриоритетПорция), -1) КАК ПриоритетПредыдущаяСубпорция
	|ПОМЕСТИТЬ ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита
	|ИЗ
	|	ВТ_СубпорцияПревышенияЛимитаОборотыДоПорции КАК ВТ_СубпорцияПревышенияЛимитаОборотыДоПорции
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОборотыПоСубпорциямНарастающийИтог КАК ВТ_ОборотыПоСубпорциямНарастающийИтог
	|		ПО ВТ_СубпорцияПревышенияЛимитаОборотыДоПорции.ПериодРасчета = ВТ_ОборотыПоСубпорциямНарастающийИтог.ПериодРасчета
	|			И ВТ_СубпорцияПревышенияЛимитаОборотыДоПорции.УсловиеРетроБонуса = ВТ_ОборотыПоСубпорциямНарастающийИтог.УсловиеРетроБонуса
	|			И ВТ_СубпорцияПревышенияЛимитаОборотыДоПорции.Организация = ВТ_ОборотыПоСубпорциямНарастающийИтог.Организация
	|			И ВТ_СубпорцияПревышенияЛимитаОборотыДоПорции.Валюта = ВТ_ОборотыПоСубпорциямНарастающийИтог.Валюта
	|			И &ПоляСоединенияПоУчастникам
	|			И &ПоляСоединенияПоТоварам
	|			И ВТ_СубпорцияПревышенияЛимитаОборотыДоПорции.ПриоритетПорция > ВТ_ОборотыПоСубпорциямНарастающийИтог.ПриоритетПорция
	|СГРУППИРОВАТЬ ПО
	|	ВТ_СубпорцияПревышенияЛимитаОборотыДоПорции.ПериодРасчета,
	|	ВТ_СубпорцияПревышенияЛимитаОборотыДоПорции.УсловиеРетроБонуса,
	|	ВТ_СубпорцияПревышенияЛимитаОборотыДоПорции.Организация,
	|	ВТ_СубпорцияПревышенияЛимитаОборотыДоПорции.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	&ПоляГруппировкиПоПолямТоваров,
	|	ВТ_СубпорцияПревышенияЛимитаОборотыДоПорции.ПриоритетПорция,
	|	ВТ_СубпорцияПревышенияЛимитаОборотыДоПорции.СуммаПлан,
	|	ВТ_СубпорцияПревышенияЛимитаОборотыДоПорции.КоличествоПлан,
	|	ВТ_СубпорцияПревышенияЛимитаОборотыДоПорции.СуммаДоПорции,
	|	ВТ_СубпорцияПревышенияЛимитаОборотыДоПорции.КоличествоДоПорции";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_СубпорцияПревышенияЛимитаОборотыДоПорции", "ВТ_ОборотыПоСубпорциямНарастающийИтог");
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_СубпорцияПревышенияЛимитаОборотыДоПорции", "ВТ_ОборотыПоСубпорциямНарастающийИтог");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаСубпорцияПревышенияЛимитаОборотыДоСубпорции(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательТоваров <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПараметрыУсловийРетроБонусов.РаспределениеПоFIFO Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита.Организация КАК Организация,
	|	ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	&ПоляТоваров,
	|	ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита.ПриоритетПорция КАК ПриоритетПорция,
	|	ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита.СуммаПлан КАК СуммаПлан,
	|	ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита.КоличествоПлан КАК КоличествоПлан,
	|	ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита.СуммаДоПорции КАК СуммаДоПорции,
	|	ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита.КоличествоДоПорции КАК КоличествоДоПорции,
	|	ЕСТЬNULL(ВТ_ОборотыПоСубпорциямНарастающийИтог.Сумма, 0) КАК СуммаДоСубпорции,
	|	ЕСТЬNULL(ВТ_ОборотыПоСубпорциямНарастающийИтог.Количество, 0) КАК КоличествоДоСубпорции
	|ПОМЕСТИТЬ ВТ_СубпорцияПревышенияЛимитаОборотыДоСубпорции
	|ИЗ
	|	ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита КАК ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОборотыПоСубпорциямНарастающийИтог КАК ВТ_ОборотыПоСубпорциямНарастающийИтог
	|		ПО ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита.ПериодРасчета = ВТ_ОборотыПоСубпорциямНарастающийИтог.ПериодРасчета
	|			И ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита.УсловиеРетроБонуса = ВТ_ОборотыПоСубпорциямНарастающийИтог.УсловиеРетроБонуса
	|			И ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита.Организация = ВТ_ОборотыПоСубпорциямНарастающийИтог.Организация
	|			И ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита.Валюта = ВТ_ОборотыПоСубпорциямНарастающийИтог.Валюта
	|			И &ПоляСоединенияПоУчастникам
	|			И &ПоляСоединенияПоТоварам
	|			И ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита.ПриоритетПредыдущаяСубпорция = ВТ_ОборотыПоСубпорциямНарастающийИтог.ПриоритетПорция";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита", "ВТ_ОборотыПоСубпорциямНарастающийИтог");
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПредыдущаяСубпорцияДоПревышенияЛимита", "ВТ_ОборотыПоСубпорциямНарастающийИтог");
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СубпорцияНарастающегоИтога", СубпорцияНарастающегоИтога());
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//  ТаблицаИсточник - Строка
//  ТаблицаНазначение - Строка
//  Порция - Строка
//
Процедура ДобавитьТекстЗапросаОборотыЗаПорциюПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов, ТаблицаИсточник, ТаблицаНазначение, Порция) Экспорт
	
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательТоваров <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПараметрыУсловийРетроБонусов.РаспределениеПоFIFO Тогда
		Возврат;
	КонецЕсли;
	
	//@skip-check bsl-ql-hub - выбранные поля сочетаются с группировкой путем замены текста запроса
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ПодготовленныеДанныеПоДокументам.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПодготовленныеДанныеПоДокументам.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПодготовленныеДанныеПоДокументам.Организация КАК Организация,
	|	ВТ_ПодготовленныеДанныеПоДокументам.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	ВТ_ПодготовленныеДанныеПоДокументам.ДокументРегистратор КАК ДокументРегистратор,
	|	&ПоляТоваров,
	|	ВТ_ПодготовленныеДанныеПоДокументам.БонусПроцент КАК БонусПроцент,
	|	ВТ_ПодготовленныеДанныеПоДокументам.Приоритет КАК Приоритет,
	|	ТаблицаИсточник.ПриоритетПорция КАК ПриоритетПорция,
	|	ВТ_ПодготовленныеДанныеПоДокументам.СуммаПлан КАК СуммаПлан,
	|	ВТ_ПодготовленныеДанныеПоДокументам.КоличествоПакетов КАК КоличествоПакетов,
	|	ВТ_ПодготовленныеДанныеПоДокументам.КоличествоПланСУчетомКратностиПродаж КАК КоличествоПланСУчетомКратностиПродаж,
	|	ТаблицаИсточник.КоличествоПлан КАК КоличествоПлан,
	|	ТаблицаИсточник.КоличествоДоПорции КАК КоличествоДоПорции,
	|	ТаблицаИсточник.КоличествоДоСубпорции КАК КоличествоДоСубпорции,
	|	ВТ_ПодготовленныеДанныеПоДокументам.Количество КАК Количество,
	|	ТаблицаИсточник.СуммаДоПорции КАК СуммаДоПорции,
	|	ТаблицаИсточник.СуммаДоСубпорции КАК СуммаДоСубпорции,
	|	ВТ_ПодготовленныеДанныеПоДокументам.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТ_ТаблицаНазначение
	|ИЗ
	|	&ТаблицаИсточник КАК ТаблицаИсточник
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПодготовленныеДанныеПоДокументам КАК ВТ_ПодготовленныеДанныеПоДокументам
	|		ПО ТаблицаИсточник.ПериодРасчета = ВТ_ПодготовленныеДанныеПоДокументам.ПериодРасчета
	|			И ТаблицаИсточник.УсловиеРетроБонуса = ВТ_ПодготовленныеДанныеПоДокументам.УсловиеРетроБонуса
	|			И ТаблицаИсточник.Организация = ВТ_ПодготовленныеДанныеПоДокументам.Организация
	|			И ТаблицаИсточник.Валюта = ВТ_ПодготовленныеДанныеПоДокументам.Валюта
	|			И &ПоляСоединенияПоУчастникам
	|			И &ПоляСоединенияПоТоварам
	|			И ТаблицаИсточник.ПриоритетПорция <= ВТ_ПодготовленныеДанныеПоДокументам.Приоритет
	|			И ТаблицаИсточник.ПриоритетПорция + &ПорцияНарастающегоИтога > ВТ_ПодготовленныеДанныеПоДокументам.Приоритет
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Приоритет,
	|	ПериодРасчета,
	|	УсловиеРетроБонуса,
	|	Организация,
	|	Валюта,
	|	&ПоляИндексированияПоУчастникам,
	|	&ПоляИндексированияПоТоварам";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ТаблицаИсточник", "ВТ_ПодготовленныеДанныеПоДокументам");
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ТаблицаИсточник", "ВТ_ПодготовленныеДанныеПоДокументам");
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТаблицаИсточник", ТаблицаИсточник);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТ_ТаблицаНазначение", ТаблицаНазначение);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПорцияНарастающегоИтога", Порция);
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаОборотыПоСубпорциям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательТоваров <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПараметрыУсловийРетроБонусов.РаспределениеПоFIFO Тогда
		Возврат;
	КонецЕсли;
	
	//@skip-check bsl-ql-hub - поля группировки и индексирования уточняются путем замены текста запроса
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ОборотыЗаПорциюПревышенияЛимита.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ОборотыЗаПорциюПревышенияЛимита.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ОборотыЗаПорциюПревышенияЛимита.Организация КАК Организация,
	|	ВТ_ОборотыЗаПорциюПревышенияЛимита.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	&ПоляТоваров,
	|	ВЫРАЗИТЬ(ВТ_ОборотыЗаПорциюПревышенияЛимита.Приоритет / &СубпорцияНарастающегоИтога - 0.5 КАК ЧИСЛО(15, 0))
	|		* &СубпорцияНарастающегоИтога КАК ПриоритетПорция,
	|	ВТ_ОборотыЗаПорциюПревышенияЛимита.СуммаПлан КАК СуммаПлан,
	|	ВТ_ОборотыЗаПорциюПревышенияЛимита.КоличествоПлан КАК КоличествоПлан,
	|	ВТ_ОборотыЗаПорциюПревышенияЛимита.КоличествоДоПорции КАК КоличествоДоПорции,
	|	ВТ_ОборотыЗаПорциюПревышенияЛимита.СуммаДоПорции КАК СуммаДоПорции,
	|	СУММА(ВТ_ОборотыЗаПорциюПревышенияЛимита.Количество) КАК Количество,
	|	СУММА(ВТ_ОборотыЗаПорциюПревышенияЛимита.Сумма) КАК Сумма,
	|	СУММА(
	|		ВЫБОР
	|			КОГДА ВТ_ОборотыЗаПорциюПревышенияЛимита.Сумма > 0
	|				ТОГДА ВТ_ОборотыЗаПорциюПревышенияЛимита.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаПриход,
	|	СУММА(
	|		ВЫБОР
	|			КОГДА ВТ_ОборотыЗаПорциюПревышенияЛимита.Количество > 0
	|				ТОГДА ВТ_ОборотыЗаПорциюПревышенияЛимита.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоПриход
	|ПОМЕСТИТЬ ВТ_ОборотыПоСубпорциям
	|ИЗ
	|	ВТ_ОборотыЗаПорциюПревышенияЛимита КАК ВТ_ОборотыЗаПорциюПревышенияЛимита
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ОборотыЗаПорциюПревышенияЛимита.ПериодРасчета,
	|	ВТ_ОборотыЗаПорциюПревышенияЛимита.УсловиеРетроБонуса,
	|	ВТ_ОборотыЗаПорциюПревышенияЛимита.Организация,
	|	ВТ_ОборотыЗаПорциюПревышенияЛимита.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	&ПоляГруппировкиПоПолямТоваров,
	|	ВЫРАЗИТЬ(ВТ_ОборотыЗаПорциюПревышенияЛимита.Приоритет / &СубпорцияНарастающегоИтога - 0.5 КАК ЧИСЛО(15, 0)) * &СубпорцияНарастающегоИтога,
	|	ВТ_ОборотыЗаПорциюПревышенияЛимита.СуммаПлан,
	|	ВТ_ОборотыЗаПорциюПревышенияЛимита.КоличествоПлан,
	|	ВТ_ОборотыЗаПорциюПревышенияЛимита.КоличествоДоПорции,
	|	ВТ_ОборотыЗаПорциюПревышенияЛимита.СуммаДоПорции
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРасчета,
	|	УсловиеРетроБонуса,
	|	Организация,
	|	Валюта,
	|	&ПоляИндексированияПоУчастникам,
	|	&ПоляИндексированияПоТоварам,
	|	ПриоритетПорция";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ОборотыЗаПорциюПревышенияЛимита");
	ПодставитьПоляПоТоварам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ОборотыЗаПорциюПревышенияЛимита");
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СубпорцияНарастающегоИтога", СубпорцияНарастающегоИтога());
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаПревышениеЛимитаНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательТоваров <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПараметрыУсловийРетроБонусов.РаспределениеПоFIFO Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ОборотыЗаСубпорциюПревышенияЛимита.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ОборотыЗаСубпорциюПревышенияЛимита.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ОборотыЗаСубпорциюПревышенияЛимита.Организация КАК Организация,
	|	ВТ_ОборотыЗаСубпорциюПревышенияЛимита.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	ВТ_ОборотыЗаСубпорциюПревышенияЛимита.ДокументРегистратор КАК ДокументРегистратор,
	|	&ПоляТоваров,
	|	ВТ_ОборотыЗаСубпорциюПревышенияЛимита.БонусПроцент КАК БонусПроцент,
	|	ВТ_ОборотыЗаСубпорциюПревышенияЛимита.Приоритет КАК Приоритет,
	|	ВТ_ОборотыЗаСубпорциюПревышенияЛимита.СуммаПлан КАК СуммаПлан,
	|	ВТ_ОборотыЗаСубпорциюПревышенияЛимита.КоличествоПлан КАК КоличествоПлан,
	|	ВТ_ОборотыЗаСубпорциюПревышенияЛимита.КоличествоПакетов КАК КоличествоПакетов,
	|	ВТ_ОборотыЗаСубпорциюПревышенияЛимита.КоличествоПланСУчетомКратностиПродаж КАК КоличествоПланСУчетомКратностиПродаж,
	|	ВТ_ОборотыЗаСубпорциюПревышенияЛимита.Сумма КАК СуммаДокумента,
	|	ВТ_ОборотыЗаСубпорциюПревышенияЛимита.Количество КАК КоличествоДокумента,
	|	ВТ_ОборотыЗаСубпорциюПревышенияЛимита.КоличествоДоПорции + ВТ_ОборотыЗаСубпорциюПревышенияЛимита.КоличествоДоСубпорции
	|		+ СУММА(ВТ_ОборотыЗаСубпорциюПревышенияЛимитаЗеркало.Количество) КАК Количество,
	|	ВТ_ОборотыЗаСубпорциюПревышенияЛимита.СуммаДоПорции + ВТ_ОборотыЗаСубпорциюПревышенияЛимита.СуммаДоСубпорции
	|		+ СУММА(ВТ_ОборотыЗаСубпорциюПревышенияЛимитаЗеркало.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТ_ПревышениеЛимитаНарастающийИтог
	|ИЗ
	|	ВТ_ОборотыЗаСубпорциюПревышенияЛимита КАК ВТ_ОборотыЗаСубпорциюПревышенияЛимита
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОборотыЗаСубпорциюПревышенияЛимита КАК ВТ_ОборотыЗаСубпорциюПревышенияЛимитаЗеркало
	|		ПО ВТ_ОборотыЗаСубпорциюПревышенияЛимита.ПериодРасчета = ВТ_ОборотыЗаСубпорциюПревышенияЛимитаЗеркало.ПериодРасчета
	|			И ВТ_ОборотыЗаСубпорциюПревышенияЛимита.УсловиеРетроБонуса = ВТ_ОборотыЗаСубпорциюПревышенияЛимитаЗеркало.УсловиеРетроБонуса
	|			И ВТ_ОборотыЗаСубпорциюПревышенияЛимита.Организация = ВТ_ОборотыЗаСубпорциюПревышенияЛимитаЗеркало.Организация
	|			И ВТ_ОборотыЗаСубпорциюПревышенияЛимита.Валюта = ВТ_ОборотыЗаСубпорциюПревышенияЛимитаЗеркало.Валюта
	|			И &ПоляСоединенияПоУчастникам
	|			И &ПоляСоединенияПоТоварам
	|			И ВТ_ОборотыЗаСубпорциюПревышенияЛимита.Приоритет >= ВТ_ОборотыЗаСубпорциюПревышенияЛимитаЗеркало.Приоритет
	|			И ВТ_ОборотыЗаСубпорциюПревышенияЛимита.ПриоритетПорция <= ВТ_ОборотыЗаСубпорциюПревышенияЛимитаЗеркало.Приоритет
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ОборотыЗаСубпорциюПревышенияЛимита.ПериодРасчета,
	|	ВТ_ОборотыЗаСубпорциюПревышенияЛимита.УсловиеРетроБонуса,
	|	ВТ_ОборотыЗаСубпорциюПревышенияЛимита.Организация,
	|	ВТ_ОборотыЗаСубпорциюПревышенияЛимита.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	ВТ_ОборотыЗаСубпорциюПревышенияЛимита.ДокументРегистратор,
	|	&ПоляГруппировкиПоПолямТоваров,
	|	ВТ_ОборотыЗаСубпорциюПревышенияЛимита.СуммаПлан,
	|	ВТ_ОборотыЗаСубпорциюПревышенияЛимита.КоличествоПлан,
	|	ВТ_ОборотыЗаСубпорциюПревышенияЛимита.КоличествоПакетов,
	|	ВТ_ОборотыЗаСубпорциюПревышенияЛимита.КоличествоПланСУчетомКратностиПродаж,
	|	ВТ_ОборотыЗаСубпорциюПревышенияЛимита.Сумма,
	|	ВТ_ОборотыЗаСубпорциюПревышенияЛимита.Количество,
	|	ВТ_ОборотыЗаСубпорциюПревышенияЛимита.БонусПроцент,
	|	ВТ_ОборотыЗаСубпорциюПревышенияЛимита.Приоритет,
	|	ВТ_ОборотыЗаСубпорциюПревышенияЛимита.СуммаДоПорции,
	|	ВТ_ОборотыЗаСубпорциюПревышенияЛимита.СуммаДоСубпорции,
	|	ВТ_ОборотыЗаСубпорциюПревышенияЛимита.КоличествоДоПорции,
	|	ВТ_ОборотыЗаСубпорциюПревышенияЛимита.КоличествоДоСубпорции";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ОборотыЗаСубпорциюПревышенияЛимита", "ВТ_ОборотыЗаСубпорциюПревышенияЛимитаЗеркало");
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ОборотыЗаСубпорциюПревышенияЛимита", "ВТ_ОборотыЗаСубпорциюПревышенияЛимитаЗеркало");
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СубпорцияНарастающегоИтога", СубпорцияНарастающегоИтога());
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаОборотыПоПериодам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ПроцентСкидки.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПроцентСкидки.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПроцентСкидки.Организация КАК Организация,
	|	ВТ_ПроцентСкидки.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	&ПоляТоваров,
	|	&ПоляПериодыТоваров,
	|	СУММА(ВТ_ПроцентСкидки.Количество) КАК Количество,
	|	СУММА(&ВыражениеСуммаБезУточнения) КАК Сумма
	|ПОМЕСТИТЬ ВТ_ОборотыПоПериодам
	|ИЗ
	|	ВТ_ПроцентСкидки КАК ВТ_ПроцентСкидки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПроцентСкидки.УсловиеРетроБонуса,
	|	ВТ_ПроцентСкидки.ПериодРасчета,
	|	ВТ_ПроцентСкидки.Организация,
	|	ВТ_ПроцентСкидки.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	&ПоляГруппировкиПоПолямТоваров,
	|	&ПоляГруппировкиПоПериодамТоваров";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПроцентСкидки");
	ПодставитьПоляПоТоварам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПроцентСкидки");
	ПодставитьПолеВыбораСуммаБезУточнения(ТекстЗапроса, "ВТ_ПроцентСкидки");
	
	ПоказательТоваров = ПараметрыУсловийРетроБонусов.ПоказательТоваров;
	ВидыПоказателей = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	ИмяТаблицы = "ВТ_ПроцентСкидки";
	
	Если ПоказательТоваров = ВидыПоказателей.Количество Тогда
		
		ПоляПериодыТоваров = СтрШаблон(
			"%1.ДатаНачала КАК ДатаНачала,
			|%1.ДатаОкончания КАК ДатаОкончания",
			ИмяТаблицы);
		
		ПоляГруппировкиПоПериодамТоваров = СтрШаблон(
			"%1.ДатаНачала,
			|%1.ДатаОкончания",
			ИмяТаблицы);
		
	Иначе
		
		ПоляПериодыТоваров = "NULL КАК ДатаНачала";
		ПоляГруппировкиПоПериодамТоваров = "NULL";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляПериодыТоваров", ПоляПериодыТоваров);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляГруппировкиПоПериодамТоваров", ПоляГруппировкиПоПериодамТоваров);
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаОборотыПоПериодамУсловияПакетаНеВыполнены(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_УчастникиПериодыДокументыВсеТовары.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.Организация КАК Организация,
	|	ВТ_УчастникиПериодыДокументыВсеТовары.Валюта КАК Валюта,
	|	&ПоляУчастники
	|ПОМЕСТИТЬ ВТ_ОборотыПоПериодамУсловияПакетаНеВыполнены
	|ИЗ
	|	ВТ_УчастникиПериодыДокументыВсеТовары КАК ВТ_УчастникиПериодыДокументыВсеТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОборотыПоПериодам КАК ВТ_ОборотыПоПериодам
	|		ПО ВТ_УчастникиПериодыДокументыВсеТовары.УсловиеРетроБонуса = ВТ_ОборотыПоПериодам.УсловиеРетроБонуса
	|			И ВТ_УчастникиПериодыДокументыВсеТовары.ПериодРасчета = ВТ_ОборотыПоПериодам.ПериодРасчета
	|			И ВТ_УчастникиПериодыДокументыВсеТовары.Организация = ВТ_ОборотыПоПериодам.Организация
	|			И ВТ_УчастникиПериодыДокументыВсеТовары.Валюта = ВТ_ОборотыПоПериодам.Валюта
	|			И &ПоляСоединенияПоУчастникам
	|			И ВТ_УчастникиПериодыДокументыВсеТовары.Номенклатура = ВТ_ОборотыПоПериодам.Номенклатура
	|			И ВТ_УчастникиПериодыДокументыВсеТовары.Характеристика = ВТ_ОборотыПоПериодам.Характеристика
	|ГДЕ
	|	ВТ_УчастникиПериодыДокументыВсеТовары.КоличествоПлан > ЕСТЬNULL(ВТ_ОборотыПоПериодам.Количество, 0)";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_УчастникиПериодыДокументыВсеТовары", "ВТ_ОборотыПоПериодам");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаОборотыПоПериодамУсловияПакетаВыполнены(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ОборотыПоПериодам.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ОборотыПоПериодам.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ОборотыПоПериодам.Организация КАК Организация,
	|	ВТ_ОборотыПоПериодам.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	СУММА(ВТ_ОборотыПоПериодам.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТ_ОборотыПоПериодамУсловияПакетаВыполнены
	|ИЗ
	|	ВТ_ОборотыПоПериодам КАК ВТ_ОборотыПоПериодам
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОборотыПоПериодамУсловияПакетаНеВыполнены
	|	ПО ВТ_ОборотыПоПериодам.УсловиеРетроБонуса = ВТ_ОборотыПоПериодамУсловияПакетаНеВыполнены.УсловиеРетроБонуса
	|		И ВТ_ОборотыПоПериодам.ПериодРасчета = ВТ_ОборотыПоПериодамУсловияПакетаНеВыполнены.ПериодРасчета
	|		И ВТ_ОборотыПоПериодам.Организация = ВТ_ОборотыПоПериодамУсловияПакетаНеВыполнены.Организация
	|		И ВТ_ОборотыПоПериодам.Валюта = ВТ_ОборотыПоПериодамУсловияПакетаНеВыполнены.Валюта
	|		И &ПоляСоединенияПоУчастникам
	|ГДЕ
	|	ВТ_ОборотыПоПериодамУсловияПакетаНеВыполнены.УсловиеРетроБонуса ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ОборотыПоПериодам.УсловиеРетроБонуса,
	|	ВТ_ОборотыПоПериодам.ПериодРасчета,
	|	ВТ_ОборотыПоПериодам.Организация,
	|	ВТ_ОборотыПоПериодам.Валюта,
	|	&ПоляГруппировкиПоУчастникам";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ОборотыПоПериодам", "ВТ_ОборотыПоПериодамУсловияПакетаНеВыполнены");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаПодготовленныеДанныеПоСумме(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ПроцентСкидки.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПроцентСкидки.ПоказательТоваров КАК ПоказательТоваров,
	|	ВТ_ПроцентСкидки.Период КАК Период,
	|	ВТ_ПроцентСкидки.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПроцентСкидки.ДокументРегистратор КАК ДокументРегистратор,
	|	ВТ_ПроцентСкидки.НомерСтроки КАК НомерСтроки,
	|	ВТ_ПроцентСкидки.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ПроцентСкидки.Договор КАК Договор,
	|	ВТ_ПроцентСкидки.Соглашение КАК Соглашение,
	|	ВТ_ПроцентСкидки.Номенклатура КАК Номенклатура,
	|	ВТ_ПроцентСкидки.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ПроцентСкидки.Характеристика КАК Характеристика,
	|	ВТ_ПроцентСкидки.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПроцентСкидки.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ПроцентСкидки.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ПроцентСкидки.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ПроцентСкидки.РаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	ВТ_ПроцентСкидки.БазаРасчета КАК БазаРасчета,
	|	&ВыражениеПриоритет КАК Приоритет,
	|	ВЫБОР
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.ВыручкаВзаиморасчеты)
	|			ИЛИ ВТ_ПроцентСкидки.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.СуммаЗакупкиВзаиморасчеты)
	|			ТОГДА ВТ_ПроцентСкидки.ВалютаВзаиморасчетов
	|		ИНАЧЕ ВТ_ПроцентСкидки.ВалютаУсловий
	|	КОНЕЦ КАК Валюта,
	|	ВТ_ПроцентСкидки.Количество КАК Количество,
	|	0 КАК КоличествоПакетов,
	|	&ВыражениеСуммаБезУточнения КАК СуммаПродажи,
	|	&ВыражениеСуммаСНДС КАК СуммаОборотСНДС,
	|	&ВыражениеСуммаБезНДС КАК СуммаОборотБезНДС,
	|	ВТ_ПроцентСкидки.БонусПроцент КАК БонусПроцент,
	|	&ВыражениеСуммаБезУточнения КАК РасчетнаяБаза,
	|	ВТ_ПроцентСкидки.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ПроцентСкидки.СуммаПлан КАК СуммаПлан,
	|	0 КАК КоличествоПлан,
	|	ЕСТЬNULL(ВТ_ОборотыПоПериодам.Сумма, 0) КАК СуммаПроверки,
	|	0 КАК КоличествоПроверки
	|ПОМЕСТИТЬ ВТ_ПодготовленныеДанные
	|ИЗ
	|	ВТ_ПроцентСкидки КАК ВТ_ПроцентСкидки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОборотыПоПериодам КАК ВТ_ОборотыПоПериодам
	|		ПО ВТ_ПроцентСкидки.УсловиеРетроБонуса = ВТ_ОборотыПоПериодам.УсловиеРетроБонуса
	|			И ВТ_ПроцентСкидки.Организация = ВТ_ОборотыПоПериодам.Организация
	|			И ВТ_ПроцентСкидки.ПериодРасчета = ВТ_ОборотыПоПериодам.ПериодРасчета
	|			И &ПоляСоединенияПоУчастникам
	|	И &ТаблицаПревышениеЛимита";
	
	Если ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	 ИЛИ ПараметрыУсловийРетроБонусов.ПоказательТоваров = ПоказателиПродаж.ПакетноеПредложение Тогда
		
		ТаблицаПревышениеЛимита =
		"ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПревышениеЛимитаОбщая КАК ВТ_ПревышениеЛимитаОбщая
		|		ПО ВТ_ПроцентСкидки.ДокументРегистратор = ВТ_ПревышениеЛимитаОбщая.ДокументРегистратор
		|			И ВТ_ПроцентСкидки.НомерСтроки = ВТ_ПревышениеЛимитаОбщая.НомерСтроки";
		
		ВыражениеПриоритет = "ВТ_ПревышениеЛимитаОбщая.Приоритет";
		
	Иначе
		
		ТаблицаПревышениеЛимита = "";
		ВыражениеПриоритет = "0";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И &ТаблицаПревышениеЛимита", ТаблицаПревышениеЛимита);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеПриоритет", ВыражениеПриоритет);
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПроцентСкидки", "ВТ_ОборотыПоПериодам");
	ПодставитьПолеВыбораСуммаБезУточнения(ТекстЗапроса, "ВТ_ПроцентСкидки");
	ПодставитьПолеВыбораСуммаСНДС(ТекстЗапроса, "ВТ_ПроцентСкидки");
	ПодставитьПолеВыбораСуммаБезНДС(ТекстЗапроса, "ВТ_ПроцентСкидки");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаПодготовленныеДанныеОпределениеПлана(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ПроцентСкидки.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПроцентСкидки.ПоказательТоваров КАК ПоказательТоваров,
	|	ВТ_ПроцентСкидки.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПроцентСкидки.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ПроцентСкидки.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ПроцентСкидки.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ПроцентСкидки.РаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	ВТ_ПроцентСкидки.Период КАК Период,
	|	ВТ_ПроцентСкидки.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПроцентСкидки.ДокументРегистратор КАК ДокументРегистратор,
	|	ВТ_ПроцентСкидки.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ПроцентСкидки.Договор КАК Договор,
	|	ВТ_ПроцентСкидки.Соглашение КАК Соглашение,
	|	ВТ_ПроцентСкидки.Номенклатура КАК Номенклатура,
	|	ВТ_ПроцентСкидки.Характеристика КАК Характеристика,
	|	ВТ_ПроцентСкидки.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ПроцентСкидки.НомерСтроки КАК НомерСтроки,
	|	ВТ_ПроцентСкидки.Количество КАК Количество,
	|	ВТ_ПроцентСкидки.БазаРасчета КАК БазаРасчета,
	|	ВТ_ПроцентСкидки.Валюта КАК Валюта,
	|	ВТ_ПроцентСкидки.Сумма КАК Сумма,
	|	ВТ_ПроцентСкидки.СуммаРегл КАК СуммаРегл,
	|	ВТ_ПроцентСкидки.СуммаВВалютеВзаиморасчетов КАК СуммаВВалютеВзаиморасчетов,
	|	ВТ_ПроцентСкидки.СуммаОборотУпрСНДС КАК СуммаОборотУпрСНДС,
	|	ВТ_ПроцентСкидки.СуммаОборотРеглСНДС КАК СуммаОборотРеглСНДС,
	|	ВТ_ПроцентСкидки.СуммаОборотВВалютеВзаиморасчетовСНДС КАК СуммаОборотВВалютеВзаиморасчетовСНДС,
	|	ВТ_ПроцентСкидки.СуммаОборотУпрБезНДС КАК СуммаОборотУпрБезНДС,
	|	ВТ_ПроцентСкидки.СуммаОборотРеглБезНДС КАК СуммаОборотРеглБезНДС,
	|	ВТ_ПроцентСкидки.СуммаОборотВВалютеВзаиморасчетовБезНДС КАК СуммаОборотВВалютеВзаиморасчетовБезНДС,
	|	ВТ_ПроцентСкидки.ДатаНачала КАК ДатаНачала,
	|	ВТ_ПроцентСкидки.ДатаОкончания КАК ДатаОкончания,
	|	ЕСТЬNULL(ВТ_ОборотыПоПериодам.Количество, 0) КАК КоличествоПроверки,
	|	ЕСТЬNULL(ВТ_ОборотыПоПериодам.Сумма, 0) КАК СуммаПродажиВсего,
	|	ЕСТЬNULL(МАКСИМУМ(ВТ_Товары.КоличествоПлан), 0) КАК КоличествоПлан
	|ПОМЕСТИТЬ ВТ_ПодготовленныеДанныеОпределениеПлана
	|ИЗ
	|	ВТ_ПроцентСкидки КАК ВТ_ПроцентСкидки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОборотыПоПериодам КАК ВТ_ОборотыПоПериодам
	|		ПО ВТ_ПроцентСкидки.УсловиеРетроБонуса = ВТ_ОборотыПоПериодам.УсловиеРетроБонуса
	|			И ВТ_ПроцентСкидки.ПериодРасчета = ВТ_ОборотыПоПериодам.ПериодРасчета
	|			И ВТ_ПроцентСкидки.Организация = ВТ_ОборотыПоПериодам.Организация
	|			И ВТ_ПроцентСкидки.Валюта = ВТ_ОборотыПоПериодам.Валюта
	|			И &ПоляСоединенияПоУчастникам
	|			И ВТ_ПроцентСкидки.Номенклатура = ВТ_ОборотыПоПериодам.Номенклатура
	|			И ВТ_ПроцентСкидки.Характеристика = ВТ_ОборотыПоПериодам.Характеристика
	|			И ВТ_ПроцентСкидки.ДатаНачала = ВТ_ОборотыПоПериодам.ДатаНачала
	|			И ВТ_ПроцентСкидки.ДатаОкончания = ВТ_ОборотыПоПериодам.ДатаОкончания
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Товары КАК ВТ_Товары
	|		ПО ВТ_ПроцентСкидки.УсловиеРетроБонуса = ВТ_Товары.УсловияРетроБонусов
	|			И ВТ_ПроцентСкидки.Номенклатура = ВТ_Товары.Номенклатура
	|			И ВТ_ПроцентСкидки.Характеристика = ВТ_Товары.Характеристика
	|			И ВТ_ПроцентСкидки.ДатаНачала = ВТ_Товары.ДатаНачала
	|			И ВТ_ПроцентСкидки.ДатаОкончания = ВТ_Товары.ДатаОкончания
	|			И ЕСТЬNULL(ВТ_ОборотыПоПериодам.Количество, 0) >= ВТ_Товары.КоличествоПлан
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПроцентСкидки.УсловиеРетроБонуса,
	|	ВТ_ПроцентСкидки.РаспределениеПоФИФО,
	|	ВТ_ПроцентСкидки.Период,
	|	ВТ_ПроцентСкидки.ДокументРегистратор,
	|	ВТ_ПроцентСкидки.Организация,
	|	&ПоляГруппировкиПоУчастникам,
	|	ВТ_ПроцентСкидки.Договор,
	|	ВТ_ПроцентСкидки.Соглашение,
	|	ВТ_ПроцентСкидки.Номенклатура,
	|	ВТ_ПроцентСкидки.Характеристика,
	|	ВТ_ПроцентСкидки.НомерСтроки,
	|	ВТ_ПроцентСкидки.ЗапретНачисленияСверхПлана,
	|	ВТ_ПроцентСкидки.Количество,
	|	ВТ_ПроцентСкидки.Сумма,
	|	ВТ_ПроцентСкидки.СуммаОборотУпрСНДС,
	|	ВТ_ПроцентСкидки.СуммаОборотУпрБезНДС,
	|	ВТ_ПроцентСкидки.СуммаПлан,
	|	ВТ_ПроцентСкидки.ДатаНачала,
	|	ВТ_ПроцентСкидки.ДатаОкончания,
	|	ВТ_ОборотыПоПериодам.Количество,
	|	ВТ_ОборотыПоПериодам.Сумма,
	|	ВТ_ПроцентСкидки.ПоказательТоваров,
	|	ВТ_ПроцентСкидки.ДетализацияРасчетаУчастников,
	|	ВТ_ПроцентСкидки.ПериодичностьНачислений,
	|	ВТ_ПроцентСкидки.ПериодичностьУсловий,
	|	ВТ_ПроцентСкидки.ПериодРасчета,
	|	ВТ_ПроцентСкидки.ЕдиницаИзмерения,
	|	ВТ_ПроцентСкидки.БазаРасчета,
	|	ВТ_ПроцентСкидки.Валюта,
	|	ВТ_ПроцентСкидки.СуммаРегл,
	|	ВТ_ПроцентСкидки.СуммаВВалютеВзаиморасчетов,
	|	ВТ_ПроцентСкидки.СуммаОборотРеглСНДС,
	|	ВТ_ПроцентСкидки.СуммаОборотВВалютеВзаиморасчетовСНДС,
	|	ВТ_ПроцентСкидки.СуммаОборотРеглБезНДС,
	|	ВТ_ПроцентСкидки.СуммаОборотВВалютеВзаиморасчетовБезНДС";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПроцентСкидки", "ВТ_ОборотыПоПериодам");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаПодготовленныеДанныеПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.ПоказательТоваров КАК ПоказательТоваров,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.Период КАК Период,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.ДокументРегистратор КАК ДокументРегистратор,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.НомерСтроки КАК НомерСтроки,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.Договор КАК Договор,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.Соглашение КАК Соглашение,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.Номенклатура КАК Номенклатура,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.Характеристика КАК Характеристика,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.РаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.БазаРасчета КАК БазаРасчета,
	|	&ВыражениеПриоритет КАК Приоритет,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.Валюта КАК Валюта,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.Количество КАК Количество,
	|	0 КАК КоличествоПакетов,
	|	&ВыражениеСуммаБезУточнения КАК СуммаПродажи,
	|	&ВыражениеСуммаСНДС КАК СуммаОборотСНДС,
	|	&ВыражениеСуммаБезНДС КАК СуммаОборотБезНДС,
	|	&ВыражениеСуммаБезУточнения КАК РасчетнаяБаза,
	|	ЕСТЬNULL(ВТ_Товары.БонусПроцент, ВТ_ТоварыМинимальныйПараметрыПоПозиции.БонусПроцент) КАК БонусПроцент,
	|	ЕСТЬNULL(ВТ_Товары.БазоваяЦена, ВТ_ТоварыМинимальныйПараметрыПоПозиции.БазоваяЦена) КАК БазоваяЦена,
	|	0 КАК СуммаПлан,
	|	ЕСТЬNULL(ВТ_Товары.КоличествоПлан, ВТ_ТоварыМинимальныйПараметрыПоПозиции.КоличествоПлан) КАК КоличествоПлан,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.СуммаПродажиВсего КАК СуммаПроверки,
	|	ВТ_ПодготовленныеДанныеОпределениеПлана.КоличествоПроверки КАК КоличествоПроверки
	|ПОМЕСТИТЬ ВТ_ПодготовленныеДанные
	|ИЗ
	|	ВТ_ПодготовленныеДанныеОпределениеПлана КАК ВТ_ПодготовленныеДанныеОпределениеПлана
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Товары КАК ВТ_Товары
	|		ПО ВТ_ПодготовленныеДанныеОпределениеПлана.УсловиеРетроБонуса = ВТ_Товары.УсловияРетроБонусов
	|			И ВТ_ПодготовленныеДанныеОпределениеПлана.Номенклатура = ВТ_Товары.Номенклатура
	|			И ВТ_ПодготовленныеДанныеОпределениеПлана.Характеристика = ВТ_Товары.Характеристика
	|			И ВТ_ПодготовленныеДанныеОпределениеПлана.ДатаНачала = ВТ_Товары.ДатаНачала
	|			И ВТ_ПодготовленныеДанныеОпределениеПлана.ДатаОкончания = ВТ_Товары.ДатаОкончания
	|			И ВТ_ПодготовленныеДанныеОпределениеПлана.КоличествоПлан = ВТ_Товары.КоличествоПлан
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТоварыМинимальныйПараметрыПоПозиции КАК ВТ_ТоварыМинимальныйПараметрыПоПозиции
	|			ПО ВТ_ПодготовленныеДанныеОпределениеПлана.УсловиеРетроБонуса = ВТ_ТоварыМинимальныйПараметрыПоПозиции.УсловияРетроБонусов
	|			И ВТ_ПодготовленныеДанныеОпределениеПлана.Номенклатура = ВТ_ТоварыМинимальныйПараметрыПоПозиции.Номенклатура
	|			И ВТ_ПодготовленныеДанныеОпределениеПлана.Характеристика = ВТ_ТоварыМинимальныйПараметрыПоПозиции.Характеристика
	|			И ВТ_ПодготовленныеДанныеОпределениеПлана.ДатаНачала = ВТ_ТоварыМинимальныйПараметрыПоПозиции.ДатаНачала
	|			И ВТ_ПодготовленныеДанныеОпределениеПлана.ДатаОкончания = ВТ_ТоварыМинимальныйПараметрыПоПозиции.ДатаОкончания
	|			И &ТаблицаПревышениеЛимита";
	
	Если ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	 ИЛИ ПараметрыУсловийРетроБонусов.ПоказательТоваров = ПоказателиПродаж.ПакетноеПредложение Тогда
		
		ТаблицаПревышениеЛимита =
		"ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПревышениеЛимитаОбщая КАК ВТ_ПревышениеЛимитаОбщая
		|		ПО ВТ_ПодготовленныеДанныеОпределениеПлана.ДокументРегистратор = ВТ_ПревышениеЛимитаОбщая.ДокументРегистратор
		|			И ВТ_ПодготовленныеДанныеОпределениеПлана.НомерСтроки = ВТ_ПревышениеЛимитаОбщая.НомерСтроки";
		
		ВыражениеПриоритет = "ВТ_ПревышениеЛимитаОбщая.Приоритет";
		
	Иначе
		
		ТаблицаПревышениеЛимита = "";
		ВыражениеПриоритет = "0";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И &ТаблицаПревышениеЛимита", ТаблицаПревышениеЛимита);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеПриоритет", ВыражениеПриоритет);
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПодготовленныеДанныеОпределениеПлана");
	ПодставитьПолеВыбораСуммаБезУточнения(ТекстЗапроса, "ВТ_ПодготовленныеДанныеОпределениеПлана", "ВТ_Товары");
	ПодставитьПолеВыбораСуммаСНДС(ТекстЗапроса, "ВТ_ПодготовленныеДанныеОпределениеПлана", "ВТ_Товары");
	ПодставитьПолеВыбораСуммаБезНДС(ТекстЗапроса, "ВТ_ПодготовленныеДанныеОпределениеПлана", "ВТ_Товары");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаПодготовленныеДанныеПоКоличествуСовокупно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Период КАК Период,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.НомерСтроки КАК НомерСтроки,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ПоказательТоваров КАК ПоказательТоваров,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.РаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.СуммаПлан КАК СуммаПлан,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ДокументРегистратор КАК ДокументРегистратор,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Договор КАК Договор,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Соглашение КАК Соглашение,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Номенклатура КАК Номенклатура,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Характеристика КАК Характеристика,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Количество КАК Количество,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчета КАК БазаРасчета,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.БонусПроцент КАК БонусПроцент,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ДатаНачала КАК ДатаНачала,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ДатаОкончания КАК ДатаОкончания,
	|	ЕСТЬNULL(ВТ_ОборотыПоПериодамУсловияПакетаВыполнены.Сумма, 0) КАК СуммаПроверки,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.КоличествоПлан КАК КоличествоПлан,
	|	0 КАК КоличествоПроверки,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Валюта КАК Валюта,
	|	&ВыражениеСуммаБезУточнения КАК СуммаПродажи,
	|	&ВыражениеСуммаСНДС КАК СуммаОборотСНДС,
	|	&ВыражениеСуммаБезНДС КАК СуммаОборотБезНДС,
	|	&ВыражениеСуммаБезУточнения КАК РасчетнаяБаза
	|ПОМЕСТИТЬ ВТ_ПодготовленныеДанные
	|ИЗ
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету КАК ВТ_ПроцентСкидкиСДаннымиПоПакету
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОборотыПоПериодамУсловияПакетаВыполнены КАК ВТ_ОборотыПоПериодамУсловияПакетаВыполнены
	|	ПО  ВТ_ПроцентСкидкиСДаннымиПоПакету.УсловиеРетроБонуса = ВТ_ОборотыПоПериодамУсловияПакетаВыполнены.УсловиеРетроБонуса
	|		И ВТ_ПроцентСкидкиСДаннымиПоПакету.ПериодРасчета = ВТ_ОборотыПоПериодамУсловияПакетаВыполнены.ПериодРасчета
	|		И ВТ_ПроцентСкидкиСДаннымиПоПакету.Организация = ВТ_ОборотыПоПериодамУсловияПакетаВыполнены.Организация
	|		И ВТ_ПроцентСкидкиСДаннымиПоПакету.Валюта = ВТ_ОборотыПоПериодамУсловияПакетаВыполнены.Валюта
	|		И &ПоляСоединенияПоУчастникам
	|ГДЕ
	|	&УсловиеОтбораПустогоДокумента";
	
	Если ПараметрыВарианта.ДетализацияДоНоменклатуры Тогда
		УсловиеОтбораПустогоДокумента = "ИСТИНА";
	Иначе
		УсловиеОтбораПустогоДокумента = "ДокументРегистратор <> " + ЗначениеПустойСсылкиРегистратора(ПараметрыУсловийРетроБонусов);
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПустогоДокумента", УсловиеОтбораПустогоДокумента);
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов,
		ТекстЗапроса,
		"ВТ_ПроцентСкидкиСДаннымиПоПакету",
		"ВТ_ОборотыПоПериодамУсловияПакетаВыполнены");
	
	ПодставитьПолеВыбораСуммаБезУточнения(ТекстЗапроса, "ВТ_ПроцентСкидкиСДаннымиПоПакету");
	ПодставитьПолеВыбораСуммаСНДС(ТекстЗапроса, "ВТ_ПроцентСкидкиСДаннымиПоПакету");
	ПодставитьПолеВыбораСуммаБезНДС(ТекстЗапроса, "ВТ_ПроцентСкидкиСДаннымиПоПакету");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаПодготовленныеДанныеПоПакетномуПредложению(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Период КАК Период,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.НомерСтроки КАК НомерСтроки,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ПоказательТоваров КАК ПоказательТоваров,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.РаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.СуммаПлан КАК СуммаПлан,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ДокументРегистратор КАК ДокументРегистратор,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Договор КАК Договор,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Соглашение КАК Соглашение,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Номенклатура КАК Номенклатура,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Характеристика КАК Характеристика,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Количество КАК Количество,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.БазаРасчета КАК БазаРасчета,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.Валюта КАК Валюта,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.БонусПроцент КАК БонусПроцент,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ДатаНачала КАК ДатаНачала,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.ДатаОкончания КАК ДатаОкончания,
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету.КоличествоПлан КАК КоличествоПлан,
	|	ЕСТЬNULL(ВТ_КоличествоПакетовТоваров.КоличествоПакетов, 0) КАК КоличествоПакетов,
	|	0 КАК СуммаПроверки,
	|	ЕСТЬNULL(ВТ_ПроцентСкидкиСДаннымиПоПакету.Количество, 0) КАК КоличествоПроверки,
	|	&ВыражениеСуммаБезУточнения КАК СуммаПродажи,
	|	&ВыражениеСуммаСНДС КАК СуммаОборотСНДС,
	|	&ВыражениеСуммаБезНДС КАК СуммаОборотБезНДС,
	|	&ВыражениеСуммаБезУточнения КАК РасчетнаяБаза
	|ПОМЕСТИТЬ ВТ_ПодготовленныеДанные
	|ИЗ
	|	ВТ_ПроцентСкидкиСДаннымиПоПакету КАК ВТ_ПроцентСкидкиСДаннымиПоПакету
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоличествоПакетовТоваров КАК ВТ_КоличествоПакетовТоваров
	|	ПО ВТ_ПроцентСкидкиСДаннымиПоПакету.УсловиеРетроБонуса = ВТ_КоличествоПакетовТоваров.УсловиеРетроБонуса
	|		И ВТ_ПроцентСкидкиСДаннымиПоПакету.ПериодРасчета = ВТ_КоличествоПакетовТоваров.ПериодРасчета
	|		И ВТ_ПроцентСкидкиСДаннымиПоПакету.Организация = ВТ_КоличествоПакетовТоваров.Организация
	|		И ВТ_ПроцентСкидкиСДаннымиПоПакету.Валюта = ВТ_КоличествоПакетовТоваров.Валюта
	|		И &ПоляСоединенияПоУчастникам
	|ГДЕ
	|	&УсловиеОтбораПустогоДокумента";
	
	Если ПараметрыВарианта.ДетализацияДоНоменклатуры Тогда
		УсловиеОтбораПустогоДокумента = "ИСТИНА";
	Иначе
		УсловиеОтбораПустогоДокумента = "ДокументРегистратор <> " + ЗначениеПустойСсылкиРегистратора(ПараметрыУсловийРетроБонусов);
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПустогоДокумента", УсловиеОтбораПустогоДокумента);
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПроцентСкидкиСДаннымиПоПакету", "ВТ_КоличествоПакетовТоваров");
	
	ПодставитьПолеВыбораСуммаБезУточнения(ТекстЗапроса, "ВТ_ПроцентСкидкиСДаннымиПоПакету");
	ПодставитьПолеВыбораСуммаСНДС(ТекстЗапроса, "ВТ_ПроцентСкидкиСДаннымиПоПакету");
	ПодставитьПолеВыбораСуммаБезНДС(ТекстЗапроса, "ВТ_ПроцентСкидкиСДаннымиПоПакету");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. ПараметрыУсловийРетроБонусовКлиентов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаПодготовленныеДанныеПоДокументам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ПоказательТоваров = ПараметрыУсловийРетроБонусов.ПоказательТоваров;
	ВидыПоказателей = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ПодготовленныеДанные.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПодготовленныеДанные.Организация КАК Организация,
	|	ВТ_ПодготовленныеДанные.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПодготовленныеДанные.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	&ПоляТоваров,
	|	ВТ_ПодготовленныеДанные.ДокументРегистратор КАК ДокументРегистратор,
	|	ВТ_ПодготовленныеДанные.СуммаПлан КАК СуммаПлан,
	|	ВТ_ПодготовленныеДанные.КоличествоПлан КАК КоличествоПлан,
	|	0 КАК КоличествоПакетов,
	|	ВТ_ПодготовленныеДанные.КоличествоПлан КАК КоличествоПланСУчетомКратностиПродаж,
	|	ВТ_ПодготовленныеДанные.БонусПроцент КАК БонусПроцент,
	|	МИНИМУМ(ВТ_ПодготовленныеДанные.Приоритет) КАК Приоритет,
	|	СУММА(ВТ_ПодготовленныеДанные.Количество) КАК Количество,
	|	СУММА(ВТ_ПодготовленныеДанные.РасчетнаяБаза) КАК Сумма
	|ПОМЕСТИТЬ ВТ_ПодготовленныеДанныеПоДокументам
	|ИЗ
	|	ВТ_ПодготовленныеДанные КАК ВТ_ПодготовленныеДанные
	|ГДЕ
	|	&ВыражениеУсловие
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПодготовленныеДанные.УсловиеРетроБонуса,
	|	ВТ_ПодготовленныеДанные.Организация,
	|	ВТ_ПодготовленныеДанные.ПериодРасчета,
	|	ВТ_ПодготовленныеДанные.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	&ПоляГруппировкиПоПолямТоваров,
	|	ВТ_ПодготовленныеДанные.ДокументРегистратор,
	|	ВТ_ПодготовленныеДанные.БонусПроцент,
	|	ВТ_ПодготовленныеДанные.СуммаПлан,
	|	ВТ_ПодготовленныеДанные.КоличествоПлан";
	
	Если ПоказательТоваров = ВидыПоказателей.Сумма Тогда
		ВыражениеУсловие = "(ВТ_ПодготовленныеДанные.СуммаПроверки >= ВТ_ПодготовленныеДанные.СуммаПлан)";
	Иначе
		ВыражениеУсловие = "(ВТ_ПодготовленныеДанные.КоличествоПроверки >= ВТ_ПодготовленныеДанные.КоличествоПлан)";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеУсловие", ВыражениеУсловие);
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПодготовленныеДанные");
	ПодставитьПоляПоТоварам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПодготовленныеДанные");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. ПараметрыУсловийРетроБонусовКлиентов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаПодготовленныеДанныеПоДокументамПакетноеПредложение(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ПодготовленныеДанные.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПодготовленныеДанные.Организация КАК Организация,
	|	ВТ_ПодготовленныеДанные.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПодготовленныеДанные.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	ВТ_ПодготовленныеДанные.Номенклатура КАК Номенклатура,
	|	ВТ_ПодготовленныеДанные.Характеристика КАК Характеристика,
	|	ВТ_ПодготовленныеДанные.ДокументРегистратор КАК ДокументРегистратор,
	|	ВТ_ПодготовленныеДанные.СуммаПлан КАК СуммаПлан,
	|	ВТ_ПодготовленныеДанные.КоличествоПлан КАК КоличествоПлан,
	|	ВТ_ПодготовленныеДанные.КоличествоПакетов КАК КоличествоПакетов,
	|	ВТ_ПодготовленныеДанные.КоличествоПакетов * ВТ_ПодготовленныеДанные.КоличествоПлан КАК КоличествоПланСУчетомКратностиПродаж,
	|	ВТ_ПодготовленныеДанные.БонусПроцент КАК БонусПроцент,
	|	ЕСТЬNULL(МИНИМУМ(ВТ_ПревышениеЛимитаОбщая.Приоритет), -1) КАК Приоритет,
	|	СУММА(ВТ_ПодготовленныеДанные.Количество) КАК Количество,
	|	СУММА(ВТ_ПодготовленныеДанные.РасчетнаяБаза) КАК Сумма
	|ПОМЕСТИТЬ ВТ_ПодготовленныеДанныеПоДокументам
	|ИЗ
	|	ВТ_ПодготовленныеДанные КАК ВТ_ПодготовленныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПревышениеЛимитаОбщая КАК ВТ_ПревышениеЛимитаОбщая
	|		ПО ВТ_ПодготовленныеДанные.ДокументРегистратор = ВТ_ПревышениеЛимитаОбщая.ДокументРегистратор
	|			И ВТ_ПодготовленныеДанные.НомерСтроки = ВТ_ПревышениеЛимитаОбщая.НомерСтроки
	|ГДЕ
	|	ВТ_ПодготовленныеДанные.КоличествоПакетов > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПодготовленныеДанные.УсловиеРетроБонуса,
	|	ВТ_ПодготовленныеДанные.Организация,
	|	ВТ_ПодготовленныеДанные.ПериодРасчета,
	|	ВТ_ПодготовленныеДанные.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	ВТ_ПодготовленныеДанные.Номенклатура,
	|	ВТ_ПодготовленныеДанные.Характеристика,
	|	ВТ_ПодготовленныеДанные.ДокументРегистратор,
	|	ВТ_ПодготовленныеДанные.БонусПроцент,
	|	ВТ_ПодготовленныеДанные.СуммаПлан,
	|	ВТ_ПодготовленныеДанные.КоличествоПлан,
	|	ВТ_ПодготовленныеДанные.КоличествоПакетов";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПодготовленныеДанные");
	ПодставитьПоляПоТоварам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПодготовленныеДанные");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаДанныеСУчетомПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ПоказательТоваров = ПараметрыУсловийРетроБонусов.ПоказательТоваров;
	ВидыПоказателей = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ПодготовленныеДанные.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПодготовленныеДанные.ПоказательТоваров КАК ПоказательТоваров,
	|	ВТ_ПодготовленныеДанные.Период КАК Период,
	|	ВТ_ПодготовленныеДанные.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПодготовленныеДанные.ДокументРегистратор КАК ДокументРегистратор,
	|	ВТ_ПодготовленныеДанные.НомерСтроки КАК НомерСтроки,
	|	ВТ_ПодготовленныеДанные.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ПодготовленныеДанные.Договор КАК Договор,
	|	ВТ_ПодготовленныеДанные.Соглашение КАК Соглашение,
	|	ВТ_ПодготовленныеДанные.Номенклатура КАК Номенклатура,
	|	ВТ_ПодготовленныеДанные.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ПодготовленныеДанные.Характеристика КАК Характеристика,
	|	ВТ_ПодготовленныеДанные.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПодготовленныеДанные.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ПодготовленныеДанные.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ПодготовленныеДанные.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ПодготовленныеДанные.РаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	ВТ_ПодготовленныеДанные.БазаРасчета КАК БазаРасчета,
	|	ВТ_ПодготовленныеДанные.Валюта КАК Валюта,
	|	ВТ_ПодготовленныеДанные.Количество КАК Количество,
	|	ВТ_ПодготовленныеДанные.СуммаПродажи КАК СуммаПродажи,
	|	ВТ_ПодготовленныеДанные.СуммаОборотСНДС КАК СуммаОборотСНДС,
	|	ВТ_ПодготовленныеДанные.СуммаОборотБезНДС КАК СуммаОборотБезНДС,
	|	ВТ_ПодготовленныеДанные.РасчетнаяБаза КАК РасчетнаяБаза,
	|	ВТ_ПодготовленныеДанные.СуммаПроверки КАК РасчетнаяБазаВсего,
	|	ВТ_ПодготовленныеДанные.КоличествоПроверки КАК КоличествоВсего,
	|	ВТ_ПодготовленныеДанные.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ПодготовленныеДанные.БонусПроцент КАК БонусПроцент,
	|	ВТ_ПодготовленныеДанные.СуммаПлан КАК СуммаПлан,
	|	ВТ_ПодготовленныеДанные.КоличествоПлан КАК КоличествоПлан,
	|	&ВыражениеПриоритет КАК Приоритет,
	|	&ВыражениеСуммаНарастающимИтогом КАК СуммаНарастающимИтогом,
	|	&ВыражениеКоличествоНарастающимИтогом КАК КоличествоНарастающимИтогом,
	|	&ВыражениеПланВыполнен КАК ПланВыполнен,
	|	&ВыражениеПроданоПакетов КАК КоличествоПакетов,
	|	&ВыражениеКоличествоПланСУчетомКратностиПродаж КАК КоличествоПланСУчетомКратностиПродаж
	|ПОМЕСТИТЬ ВТ_ДанныеСУчетомПревышенияЛимита
	|ИЗ
	|	&ТаблицыИсточники КАК ВТ_ПодготовленныеДанные
	|ГДЕ
	|	&УсловиеПоляИндекса";
	
	Если ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	 ИЛИ ПоказательТоваров = ВидыПоказателей.ПакетноеПредложение Тогда
		
		ТаблицыИсточники =
		"ВТ_ПодготовленныеДанные КАК ВТ_ПодготовленныеДанные
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПревышениеЛимитаОбщая КАК ВТ_ПревышениеЛимитаОбщая
		|		ПО ВТ_ПодготовленныеДанные.УсловиеРетроБонуса = ВТ_ПревышениеЛимитаОбщая.УсловиеРетроБонуса
		|			И ВТ_ПодготовленныеДанные.Организация = ВТ_ПревышениеЛимитаОбщая.Организация
		|			И ВТ_ПодготовленныеДанные.Валюта = ВТ_ПревышениеЛимитаОбщая.Валюта
		|			И ВТ_ПодготовленныеДанные.ПериодРасчета = ВТ_ПревышениеЛимитаОбщая.ПериодРасчета
		|			И ВТ_ПодготовленныеДанные.ДокументРегистратор = ВТ_ПревышениеЛимитаОбщая.ДокументРегистратор
		|			И ВТ_ПодготовленныеДанные.НомерСтроки = ВТ_ПревышениеЛимитаОбщая.НомерСтроки
		|			И &ПоляСоединенияПоТоварам
		|			И &ПоляСоединенияПоУчастникам";
		
		ПраваяТаблица = "ВТ_ПревышениеЛимитаОбщая";
		
		ВыражениеПриоритет = "ЕСТЬNULL(" + ПраваяТаблица + ".Приоритет, -1)";
		ВыражениеСуммаНарастающимИтогом = "ЕСТЬNULL(" + ПраваяТаблица + ".Сумма, 0)";
		ВыражениеКоличествоНарастающимИтогом = "ЕСТЬNULL(" + ПраваяТаблица + ".Количество, 0)";
		
		// для предотвращения удаления полей оптимизатором СКД из предыдущей ВТ
		УсловиеПоляИндекса =
		"(ВТ_ПревышениеЛимитаОбщая.Период ЕСТЬ НЕ NULL
		|	И ВТ_ПревышениеЛимитаОбщая.НомерСтроки ЕСТЬ НЕ NULL)
		|	ИЛИ ВТ_ПревышениеЛимитаОбщая.ДокументРегистратор ЕСТЬ NULL";
		
		Если ПоказательТоваров = ВидыПоказателей.Сумма Тогда
			ВыражениеПланВыполнен = "(ВТ_ПодготовленныеДанные.СуммаПроверки >= ВТ_ПодготовленныеДанные.СуммаПлан)";
		ИначеЕсли ПоказательТоваров = ВидыПоказателей.Количество Тогда
			ВыражениеПланВыполнен = "(ВТ_ПодготовленныеДанные.КоличествоПроверки >= ВТ_ПодготовленныеДанные.КоличествоПлан)";
		ИначеЕсли ПоказательТоваров = ВидыПоказателей.КоличествоСовокупно Тогда
			ВыражениеПланВыполнен = "(ВТ_ПодготовленныеДанные.СуммаПроверки > 0)";
		ИначеЕсли ПоказательТоваров = ВидыПоказателей.ПакетноеПредложение Тогда
			ВыражениеПланВыполнен = "(ВТ_ПодготовленныеДанные.КоличествоПакетов > 0)";
		Иначе
			ВыражениеПланВыполнен = "ИСТИНА";
		КонецЕсли;
		
	Иначе
		
		ТаблицыИсточники = "ВТ_ПодготовленныеДанные КАК ВТ_ПодготовленныеДанные";
		ПраваяТаблица = "";
		УсловиеПоляИндекса = "ИСТИНА";
		ВыражениеПриоритет = "0";
		ВыражениеСуммаНарастающимИтогом = "0";
		ВыражениеКоличествоНарастающимИтогом = "0";
		
		Если ПоказательТоваров = ВидыПоказателей.Сумма Тогда
			ВыражениеПланВыполнен = "(ВТ_ПодготовленныеДанные.СуммаПроверки >= ВТ_ПодготовленныеДанные.СуммаПлан)";
		ИначеЕсли ПоказательТоваров = ВидыПоказателей.Количество Тогда
			ВыражениеПланВыполнен = "(ВТ_ПодготовленныеДанные.КоличествоПроверки >= ВТ_ПодготовленныеДанные.КоличествоПлан)";
		ИначеЕсли ПоказательТоваров = ВидыПоказателей.КоличествоСовокупно Тогда
			ВыражениеПланВыполнен = "(ВТ_ПодготовленныеДанные.СуммаПроверки > 0)";
		ИначеЕсли ПоказательТоваров = ВидыПоказателей.ПакетноеПредложение Тогда
			ВыражениеПланВыполнен = "(ВТ_ПодготовленныеДанные.КоличествоПакетов > 0)";
		Иначе
			ВыражениеПланВыполнен = "ИСТИНА";
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПоказательТоваров = ВидыПоказателей.ПакетноеПредложение Тогда
		
		ВыражениеПроданоПакетов = "ВТ_ПодготовленныеДанные.КоличествоПакетов";
		ВыражениеКоличествоПланСУчетомКратностиПродаж =
			"ВТ_ПодготовленныеДанные.КоличествоПакетов * ВТ_ПодготовленныеДанные.КоличествоПлан";
		
	Иначе
		
		ВыражениеПроданоПакетов = "0";
		ВыражениеКоличествоПланСУчетомКратностиПродаж = "0";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ТаблицыИсточники КАК ВТ_ПодготовленныеДанные",
		ТаблицыИсточники);
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ВыражениеПриоритет",
		ВыражениеПриоритет);
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ВыражениеСуммаНарастающимИтогом",
		ВыражениеСуммаНарастающимИтогом);
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ВыражениеКоличествоНарастающимИтогом",
		ВыражениеКоличествоНарастающимИтогом);
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ВыражениеПланВыполнен",
		ВыражениеПланВыполнен);
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ВыражениеПроданоПакетов",
		ВыражениеПроданоПакетов);
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ВыражениеКоличествоПланСУчетомКратностиПродаж",
		ВыражениеКоличествоПланСУчетомКратностиПродаж);
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&УсловиеПоляИндекса",
		УсловиеПоляИндекса);
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПодготовленныеДанные", ПраваяТаблица);
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПодготовленныеДанные", ПраваяТаблица);
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаДанныеБезЗапретаПревышения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	Если ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ДанныеСУчетомПревышенияЛимита.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПоказательТоваров КАК ПоказательТоваров,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Период КАК Период,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ДокументРегистратор КАК ДокументРегистратор,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.НомерСтроки КАК НомерСтроки,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Договор КАК Договор,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Соглашение КАК Соглашение,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Номенклатура КАК Номенклатура,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Характеристика КАК Характеристика,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.БазаРасчета КАК БазаРасчета,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Валюта КАК Валюта,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПродажи КАК СуммаПродажи,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаОборотСНДС КАК СуммаОборотСНДС,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаОборотБезНДС КАК СуммаОборотБезНДС,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Количество КАК Количество,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.БонусПроцент КАК БонусПроцент,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПлан КАК СуммаПлан,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.КоличествоПлан КАК КоличествоПлан,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПланВыполнен КАК ПланВыполнен,
	|	ВЫБОР
	|		КОГДА ВТ_ДанныеСУчетомПревышенияЛимита.ПланВыполнен
	|			ТОГДА ВТ_ДанныеСУчетомПревышенияЛимита.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоДляРасчетаБонуса,
	|	ВЫБОР
	|		КОГДА ВТ_ДанныеСУчетомПревышенияЛимита.ПланВыполнен
	|			ТОГДА 
	|				ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПродажи
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РасчетнаяБаза,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ВТ_ДанныеСУчетомПревышенияЛимита.ПланВыполнен
	|			ТОГДА 
	|				ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПродажи
	|		ИНАЧЕ 0
	|	КОНЕЦ * ВТ_ДанныеСУчетомПревышенияЛимита.БонусПроцент / 100 КАК ЧИСЛО(31, 2)) КАК СуммаБонус
	|ПОМЕСТИТЬ ВТ_ДанныеБезЗапретаПревышения
	|ИЗ
	|	ВТ_ДанныеСУчетомПревышенияЛимита КАК ВТ_ДанныеСУчетомПревышенияЛимита";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ДанныеСУчетомПревышенияЛимита");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаПриоритетОкругления(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ЦелевыеПоказатели = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательТоваров <> ЦелевыеПоказатели.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаИсточник.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ТаблицаИсточник.ПериодРасчета КАК ПериодРасчета,
	|	ТаблицаИсточник.Организация КАК Организация,
	|	ТаблицаИсточник.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	&ПоляТоваров,
	|	МАКСИМУМ(ТаблицаИсточник.Приоритет) КАК МаксимальныйПриоритет
	|ПОМЕСТИТЬ ВТ_ПриоритетОкругления
	|ИЗ
	|	&ТаблицаИсточник КАК ТаблицаИсточник
	|ГДЕ
	|	ТаблицаИсточник.ПланВыполнен
	|	И ТаблицаИсточник.РасчетнаяБаза > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаИсточник.ПериодРасчета,
	|	ТаблицаИсточник.УсловиеРетроБонуса,
	|	ТаблицаИсточник.Организация,
	|	ТаблицаИсточник.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	&ПоляГруппировкиПоПолямТоваров";
	
	Если ПараметрыУсловийРетроБонусов.РаспределениеПоFIFO Тогда
		
		Если (ПараметрыУсловийРетроБонусов.ПоказательТоваров = ЦелевыеПоказатели.Количество
		 ИЛИ ПараметрыУсловийРетроБонусов.ПоказательТоваров = ЦелевыеПоказатели.ПакетноеПредложение) Тогда
			ТаблицаИсточник = "ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса";
		Иначе
			ТаблицаИсточник = "ВТ_ДанныеДляРаспределенияПоФИФО";
		КонецЕсли;
		
	Иначе
		ТаблицаИсточник = "ВТ_ДанныеДляПропорциональногоРаспределения";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТаблицаИсточник", ТаблицаИсточник);
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ТаблицаИсточник");
	ПодставитьПоляПоТоварам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ТаблицаИсточник");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаМинимальныйПриоритетВыполненияПланаПоСумме(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	 ИЛИ НЕ ПараметрыУсловийРетроБонусов.РаспределениеПоFIFO Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаИсточник.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ТаблицаИсточник.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ТаблицаИсточник.Валюта КАК Валюта,
	|	ТаблицаИсточник.ПериодРасчета КАК ПериодРасчета,
	|	МИНИМУМ(ТаблицаИсточник.Приоритет) КАК Приоритет
	|ПОМЕСТИТЬ ВТ_МинимальныйПриоритетВыполненияПлана
	|ИЗ
	|	ВТ_ПревышениеЛимитаНарастающийИтог КАК ТаблицаИсточник
	|ГДЕ
	|	ТаблицаИсточник.Сумма >= ТаблицаИсточник.СуммаПлан
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаИсточник.УсловиеРетроБонуса,
	|	ТаблицаИсточник.Организация,
	|	&ПоляГруппировкиПоУчастникам,
	|	ТаблицаИсточник.Валюта,
	|	ТаблицаИсточник.ПериодРасчета";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ТаблицаИсточник");
	ПодставитьПоляПоТоварам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ТаблицаИсточник");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. ПараметрыУсловийРетроБонусовКлиентов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаДокументВыполненияПлана(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_МинимальныйПриоритетВыполненияПлана.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_МинимальныйПриоритетВыполненияПлана.Организация КАК Организация,
	|	&ПоляУчастники,
	|	&ПоляТоваров,
	|	ВТ_МинимальныйПриоритетВыполненияПлана.Валюта КАК Валюта,
	|	ВТ_МинимальныйПриоритетВыполненияПлана.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_МинимальныйПриоритетВыполненияПлана.Приоритет КАК Приоритет,
	|	ВТ_ПревышениеЛимитаНарастающийИтог.ДокументРегистратор КАК ДокументРегистратор,
	|	ВТ_ПревышениеЛимитаНарастающийИтог.Сумма КАК СуммаНарастающимИтогом,
	|	ВТ_ПревышениеЛимитаНарастающийИтог.Количество КАК КоличествоНарастающимИтогом,
	|	ВТ_ПревышениеЛимитаНарастающийИтог.КоличествоПланСУчетомКратностиПродаж КАК КоличествоПланСУчетомКратностиПродаж,
	|	ВТ_ПревышениеЛимитаНарастающийИтог.СуммаДокумента КАК СуммаДокумента,
	|	ВТ_ПревышениеЛимитаНарастающийИтог.КоличествоДокумента КАК КоличествоДокумента,
	|	ВТ_ПревышениеЛимитаНарастающийИтог.СуммаПлан КАК СуммаПлан,
	|	ВТ_ПревышениеЛимитаНарастающийИтог.КоличествоПлан КАК КоличествоПлан,
	|	ВТ_ПревышениеЛимитаНарастающийИтог.БонусПроцент КАК БонусПроцент
	|ПОМЕСТИТЬ ВТ_ДокументВыполненияПлана
	|ИЗ
	|	ВТ_МинимальныйПриоритетВыполненияПлана КАК ВТ_МинимальныйПриоритетВыполненияПлана
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПревышениеЛимитаНарастающийИтог КАК ВТ_ПревышениеЛимитаНарастающийИтог
	|		ПО ВТ_МинимальныйПриоритетВыполненияПлана.Валюта = ВТ_ПревышениеЛимитаНарастающийИтог.Валюта
	|			И ВТ_МинимальныйПриоритетВыполненияПлана.ПериодРасчета = ВТ_ПревышениеЛимитаНарастающийИтог.ПериодРасчета
	|			И &ПоляСоединенияПоУчастникам
	|			И &ПоляСоединенияПоТоварам
	|			И ВТ_МинимальныйПриоритетВыполненияПлана.Приоритет = ВТ_ПревышениеЛимитаНарастающийИтог.Приоритет";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_МинимальныйПриоритетВыполненияПлана", "ВТ_ПревышениеЛимитаНарастающийИтог");
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_МинимальныйПриоритетВыполненияПлана", "ВТ_ПревышениеЛимитаНарастающийИтог");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. ПараметрыУсловийРетроБонусовКлиентов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаДокументВыполненияПланаСуммаПредыдущих(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ЦелевыеПоказатели = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ДокументВыполненияПлана.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ДокументВыполненияПлана.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	&ПоляТоваров,
	|	ВТ_ДокументВыполненияПлана.ДокументРегистратор КАК ДокументРегистратор,
	|	ВТ_ДокументВыполненияПлана.СуммаДокумента КАК СуммаДокумента,
	|	ВТ_ДокументВыполненияПлана.КоличествоДокумента КАК КоличествоДокумента,
	|	&ВыражениеСуммаПланОстаток КАК СуммаПланОстаток,
	|	&ВыражениеКоличествоПланОстаток КАК КоличествоПланОстаток,
	|	ВТ_ДокументВыполненияПлана.КоличествоПланСУчетомКратностиПродаж КАК КоличествоПланСУчетомКратностиПродаж,
	|	&ВыражениеСуммаБонусПредыдущихДокументов КАК СуммаБонусПредыдущихДокументов,
	|	&ВыражениеСуммаБонусВсего КАК СуммаБонусВсего
	|ПОМЕСТИТЬ ВТ_ДокументВыполненияПланаСуммаПредыдущих
	|ИЗ
	|	ВТ_ДокументВыполненияПлана КАК ВТ_ДокументВыполненияПлана
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПодготовленныеДанные КАК ВТ_ПодготовленныеДанные
	|		ПО ВТ_ДокументВыполненияПлана.Валюта = ВТ_ПодготовленныеДанные.Валюта
	|			И ВТ_ДокументВыполненияПлана.ПериодРасчета = ВТ_ПодготовленныеДанные.ПериодРасчета
	|			И &ПоляСоединенияПоУчастникам
	|			И &ПоляСоединенияПоТоварам
	|			И ВТ_ДокументВыполненияПлана.ДокументРегистратор <> ВТ_ПодготовленныеДанные.ДокументРегистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ДокументВыполненияПлана.ПериодРасчета,
	|	ВТ_ДокументВыполненияПлана.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	&ПоляГруппировкиПоПолямТоваров,
	|	ВТ_ДокументВыполненияПлана.ДокументРегистратор,
	|	ВТ_ДокументВыполненияПлана.СуммаНарастающимИтогом,
	|	ВТ_ДокументВыполненияПлана.КоличествоНарастающимИтогом,
	|	ВТ_ДокументВыполненияПлана.СуммаДокумента,
	|	ВТ_ДокументВыполненияПлана.КоличествоДокумента,
	|	ВТ_ДокументВыполненияПлана.КоличествоПлан,
	|	ВТ_ДокументВыполненияПлана.КоличествоПланСУчетомКратностиПродаж,
	|	ВТ_ДокументВыполненияПлана.БонусПроцент,
	|	ВТ_ДокументВыполненияПлана.СуммаПлан";
	
	Если ПараметрыУсловийРетроБонусов.ПоказательТоваров = ЦелевыеПоказатели.Сумма Тогда
		
		ВыражениеСуммаБонусВсего = "ВЫРАЗИТЬ(ВТ_ДокументВыполненияПлана.СуммаПлан * ВТ_ДокументВыполненияПлана.БонусПроцент / 100 КАК ЧИСЛО(31, 2))";
		
		ВыражениеСуммаБонусПредыдущихДокументов =
		"ЕСТЬNULL(СУММА(ВЫБОР
		|			КОГДА ВТ_ПодготовленныеДанные.Приоритет < ВТ_ДокументВыполненияПлана.Приоритет
		|				ТОГДА ВЫРАЗИТЬ(ВТ_ПодготовленныеДанные.РасчетнаяБаза * ВТ_ПодготовленныеДанные.БонусПроцент / 100 КАК ЧИСЛО(31, 2))
		|			ИНАЧЕ 0
		|		КОНЕЦ), 0)";
		
		ВыражениеСуммаПланОстаток = "ВТ_ДокументВыполненияПлана.СуммаПлан - ВТ_ДокументВыполненияПлана.СуммаНарастающимИтогом + ВТ_ДокументВыполненияПлана.СуммаДокумента";
		ВыражениеКоличествоПланОстаток = "0";
		
	Иначе
		
		ВыражениеСуммаБонусВсего = "0";
		ВыражениеСуммаПланОстаток = "0";
		ВыражениеСуммаБонусПредыдущихДокументов = "0";
		ВыражениеКоличествоПланОстаток = "ВТ_ДокументВыполненияПлана.КоличествоПлан - ВТ_ДокументВыполненияПлана.КоличествоНарастающимИтогом + ВТ_ДокументВыполненияПлана.КоличествоДокумента";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеСуммаБонусВсего", ВыражениеСуммаБонусВсего);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеСуммаПланОстаток", ВыражениеСуммаПланОстаток);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеСуммаБонусПредыдущихДокументов", ВыражениеСуммаБонусПредыдущихДокументов);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеКоличествоПланОстаток", ВыражениеКоличествоПланОстаток);
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ДокументВыполненияПлана", "ВТ_ПодготовленныеДанные");
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ДокументВыполненияПлана", "ВТ_ПодготовленныеДанные");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. ПараметрыУсловийРетроБонусовКлиентов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаРаспределениеСтрокДокументаПревышенияПлана(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ЦелевыеПоказатели = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ПодготовленныеДанные.ПериодРасчета КАК ПериодРасчета,
	|	&ПоляУчастники,
	|	ВТ_ПодготовленныеДанные.Валюта КАК Валюта,
	|	ВТ_ПодготовленныеДанные.ДокументРегистратор КАК ДокументРегистратор,
	|	ВТ_ПодготовленныеДанные.НомерСтроки КАК НомерСтроки,
	|	ВТ_ПодготовленныеДанные.Номенклатура КАК Номенклатура,
	|	ВТ_ПодготовленныеДанные.Характеристика КАК Характеристика,
	|	&ВыражениеПриоритет КАК Приоритет,
	|	ВТ_ПодготовленныеДанные.Количество КАК Количество,
	|	ВТ_ДокументВыполненияПланаСуммаПредыдущих.КоличествоПланОстаток КАК КоличествоПланОстаток,
	|	ВТ_ДокументВыполненияПланаСуммаПредыдущих.КоличествоПланСУчетомКратностиПродаж КАК КоличествоПланСУчетомКратностиПродаж,
	|	ВТ_ПодготовленныеДанные.СуммаПродажи КАК СуммаПродажи,
	|	ВТ_ПодготовленныеДанные.СуммаОборотСНДС КАК СуммаОборотСНДС,
	|	ВТ_ПодготовленныеДанные.СуммаОборотБезНДС КАК СуммаОборотБезНДС,
	|	ВТ_ПодготовленныеДанные.РасчетнаяБаза КАК РасчетнаяБазаИсходная,
	|	&ВыражениеКоэффициент КАК Коэффициент,
	|	&ВыражениеРасчетнаяБаза КАК РасчетнаяБаза,
	|	&ВыражениеСуммаБонусВсего КАК СуммаБонусВсего,
	|	&ВыражениеСуммаБонусОстаток КАК СуммаБонусОстаток,
	|	&ВыражениеСуммаБонус_ КАК СуммаБонус
	|ПОМЕСТИТЬ ВТ_РаспределениеСтрокДокументаПревышенияПлана
	|ИЗ
	|	ВТ_ПодготовленныеДанные КАК ВТ_ПодготовленныеДанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДокументВыполненияПланаСуммаПредыдущих КАК ВТ_ДокументВыполненияПланаСуммаПредыдущих
	|		ПО ВТ_ПодготовленныеДанные.Валюта = ВТ_ДокументВыполненияПланаСуммаПредыдущих.Валюта
	|			И ВТ_ПодготовленныеДанные.ПериодРасчета = ВТ_ДокументВыполненияПланаСуммаПредыдущих.ПериодРасчета
	|			И ВТ_ПодготовленныеДанные.ДокументРегистратор = ВТ_ДокументВыполненияПланаСуммаПредыдущих.ДокументРегистратор
	|			И &ПоляСоединенияПоУчастникам
	|			И &ПоляСоединенияПоТоварам
	|			И &ТаблицаПревышениеЛимита";
	
	Если ПараметрыУсловийРетроБонусов.ПоказательТоваров = ЦелевыеПоказатели.Сумма Тогда
		
		ВыражениеКоэффициент =
		"ВЫБОР
		|		КОГДА ВТ_ДокументВыполненияПланаСуммаПредыдущих.СуммаДокумента = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ(ВТ_ПодготовленныеДанные.РасчетнаяБаза / ВТ_ДокументВыполненияПланаСуммаПредыдущих.СуммаДокумента КАК ЧИСЛО(15, 6))
		|	КОНЕЦ";
		
		ВыражениеРасчетнаяБаза = "ВЫБОР
		|		КОГДА ВТ_ДокументВыполненияПланаСуммаПредыдущих.СуммаДокумента = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ(ВТ_ДокументВыполненияПланаСуммаПредыдущих.СуммаПланОстаток * ВТ_ПодготовленныеДанные.РасчетнаяБаза / ВТ_ДокументВыполненияПланаСуммаПредыдущих.СуммаДокумента КАК ЧИСЛО(31, 2))
		|	КОНЕЦ";
		
		ВыражениеСуммаБонусВсего = "ВТ_ДокументВыполненияПланаСуммаПредыдущих.СуммаБонусВсего";
		ВыражениеСуммаБонусОстаток = "ВТ_ДокументВыполненияПланаСуммаПредыдущих.СуммаБонусВсего - ВТ_ДокументВыполненияПланаСуммаПредыдущих.СуммаБонусПредыдущихДокументов";
		
		ВыражениеСуммаБонус = "ВЫБОР
		|		КОГДА ВТ_ДокументВыполненияПланаСуммаПредыдущих.СуммаДокумента = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ((ВТ_ДокументВыполненияПланаСуммаПредыдущих.СуммаБонусВсего - ВТ_ДокументВыполненияПланаСуммаПредыдущих.СуммаБонусПредыдущихДокументов) * ВТ_ПодготовленныеДанные.РасчетнаяБаза / ВТ_ДокументВыполненияПланаСуммаПредыдущих.СуммаДокумента КАК ЧИСЛО(31, 2))
		|	КОНЕЦ";
		
	Иначе
		
		ВыражениеКоэффициент =
		"ВЫБОР
		|		КОГДА ВТ_ДокументВыполненияПланаСуммаПредыдущих.КоличествоДокумента = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ(ВТ_ДокументВыполненияПланаСуммаПредыдущих.КоличествоПланОстаток / ВТ_ДокументВыполненияПланаСуммаПредыдущих.КоличествоДокумента КАК ЧИСЛО(15, 6))
		|	КОНЕЦ";
		
		ВыражениеРасчетнаяБаза = "ВЫБОР
		|		КОГДА ВТ_ДокументВыполненияПланаСуммаПредыдущих.КоличествоДокумента = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ(ВТ_ПодготовленныеДанные.РасчетнаяБаза * ВТ_ДокументВыполненияПланаСуммаПредыдущих.КоличествоПланОстаток / ВТ_ДокументВыполненияПланаСуммаПредыдущих.КоличествоДокумента КАК ЧИСЛО(31, 2))
		|	КОНЕЦ";
		
		ВыражениеСуммаБонусВсего = "0";
		ВыражениеСуммаБонусОстаток = "0";
		
		ВыражениеСуммаБонус = "ВЫБОР
		|	КОГДА ВТ_ДокументВыполненияПланаСуммаПредыдущих.КоличествоДокумента = 0
		|		ТОГДА 0
		|	ИНАЧЕ ВЫРАЗИТЬ(ВТ_ПодготовленныеДанные.БонусПроцент * ВТ_ПодготовленныеДанные.РасчетнаяБаза * ВТ_ДокументВыполненияПланаСуммаПредыдущих.КоличествоПланОстаток / ВТ_ДокументВыполненияПланаСуммаПредыдущих.КоличествоДокумента / 100 КАК ЧИСЛО(31, 2))
		|	КОНЕЦ";
		
	КонецЕсли;
	
	Если ПараметрыУсловийРетроБонусов.ПоказательТоваров = ЦелевыеПоказатели.ПакетноеПредложение Тогда
		
		ВыражениеПриоритет = "ВТ_ПревышениеЛимитаОбщая.Приоритет";
		
		ТаблицаПревышениеЛимита = "ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПревышениеЛимитаОбщая КАК ВТ_ПревышениеЛимитаОбщая
		|	ПО ВТ_ПодготовленныеДанные.ДокументРегистратор = ВТ_ПревышениеЛимитаОбщая.ДокументРегистратор
		|		И ВТ_ПодготовленныеДанные.НомерСтроки = ВТ_ПревышениеЛимитаОбщая.НомерСтроки";
		
	Иначе
		
		ВыражениеПриоритет = "ВТ_ПодготовленныеДанные.Приоритет";
		ТаблицаПревышениеЛимита = "";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И &ТаблицаПревышениеЛимита", ТаблицаПревышениеЛимита);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеПриоритет", ВыражениеПриоритет);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеКоэффициент", ВыражениеКоэффициент);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеРасчетнаяБаза", ВыражениеРасчетнаяБаза);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеСуммаБонусВсего", ВыражениеСуммаБонусВсего);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеСуммаБонусОстаток", ВыражениеСуммаБонусОстаток);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеСуммаБонус_", ВыражениеСуммаБонус);
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПодготовленныеДанные", "ВТ_ДокументВыполненияПланаСуммаПредыдущих");
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ПодготовленныеДанные", "ВТ_ДокументВыполненияПланаСуммаПредыдущих");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. ПараметрыУсловийРетроБонусовКлиентов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаДанныеДляРаспределенияПоФИФО(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ЦелевыеПоказатели = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	
	ТекстыВыборок = Новый Массив; // Массив Из Строка
	
	ТекстВыборкиСтрокиДокументаВыполненияПлана =
	"ВЫБРАТЬ
	|	ВТ_ПодготовленныеДанные.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПодготовленныеДанные.ПоказательТоваров КАК ПоказательТоваров,
	|	ВТ_ПодготовленныеДанные.Период КАК Период,
	|	ВТ_ПодготовленныеДанные.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПодготовленныеДанные.ДокументРегистратор КАК ДокументРегистратор,
	|	ВТ_ПодготовленныеДанные.НомерСтроки КАК НомерСтроки,
	|	ВТ_РаспределениеСтрокДокументаПревышенияПлана.Приоритет КАК Приоритет,
	|	ВТ_ПодготовленныеДанные.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ПодготовленныеДанные.Договор КАК Договор,
	|	ВТ_ПодготовленныеДанные.Соглашение КАК Соглашение,
	|	ВТ_ПодготовленныеДанные.Номенклатура КАК Номенклатура,
	|	ВТ_ПодготовленныеДанные.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ПодготовленныеДанные.Характеристика КАК Характеристика,
	|	ВТ_ПодготовленныеДанные.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПодготовленныеДанные.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ПодготовленныеДанные.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ПодготовленныеДанные.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ПодготовленныеДанные.БазаРасчета КАК БазаРасчета,
	|	ВТ_ПодготовленныеДанные.Количество КАК Количество,
	|	ВТ_ПодготовленныеДанные.Валюта КАК Валюта,
	|	ВТ_ПодготовленныеДанные.СуммаПродажи КАК СуммаПродажи,
	|	ВТ_ПодготовленныеДанные.СуммаОборотСНДС КАК СуммаОборотСНДС,
	|	ВТ_ПодготовленныеДанные.СуммаОборотБезНДС КАК СуммаОборотБезНДС,
	|	ВТ_ПодготовленныеДанные.БонусПроцент КАК БонусПроцент,
	|	ВТ_ПодготовленныеДанные.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ПодготовленныеДанные.СуммаПлан КАК СуммаПлан,
	|	ИСТИНА КАК ПланВыполнен,
	|	ВТ_РаспределениеСтрокДокументаПревышенияПлана.РасчетнаяБаза КАК РасчетнаяБаза,
	|	&ВыражениеКоличествоПлан КАК КоличествоПлан,
	|	&ВыражениеКоличествоДляРасчетаБонуса КАК КоличествоДляРасчетаБонуса,
	|	ВТ_РаспределениеСтрокДокументаПревышенияПлана.КоличествоПланСУчетомКратностиПродаж КАК КоличествоПланСУчетомКратностиПродаж,
	|	ВТ_РаспределениеСтрокДокументаПревышенияПлана.СуммаБонус КАК СуммаБонус,
	|	ВТ_РаспределениеСтрокДокументаПревышенияПлана.СуммаБонусВсего КАК СуммаБонусВсего,
	|	ВТ_ПодготовленныеДанные.КоличествоПакетов КАК КоличествоПакетов
	|ПОМЕСТИТЬ ВТ_ДанныеДляРаспределенияПоФИФО
	|ИЗ
	|	ВТ_ПодготовленныеДанные КАК ВТ_ПодготовленныеДанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_РаспределениеСтрокДокументаПревышенияПлана КАК ВТ_РаспределениеСтрокДокументаПревышенияПлана
	|		ПО ВТ_ПодготовленныеДанные.ДокументРегистратор = ВТ_РаспределениеСтрокДокументаПревышенияПлана.ДокументРегистратор
	|			И ВТ_ПодготовленныеДанные.НомерСтроки = ВТ_РаспределениеСтрокДокументаПревышенияПлана.НомерСтроки";
	
	Если ПараметрыУсловийРетроБонусов.ПоказательТоваров = ЦелевыеПоказатели.Сумма Тогда
		
		ВыражениеКоличествоПлан = "0";
		ВыражениеКоличествоДляРасчетаБонуса = "0";
		
	Иначе
		
		ВыражениеКоличествоПлан = "ВТ_ПодготовленныеДанные.КоличествоПлан";
		ВыражениеКоличествоДляРасчетаБонуса = "ВЫРАЗИТЬ(ВТ_ПодготовленныеДанные.Количество * ЕСТЬNULL(ВТ_РаспределениеСтрокДокументаПревышенияПлана.Коэффициент, 0) КАК ЧИСЛО(15, 6))";
		
	КонецЕсли;
	ТекстВыборкиСтрокиДокументаВыполненияПлана = СтрЗаменить(
		ТекстВыборкиСтрокиДокументаВыполненияПлана, "&ВыражениеКоличествоПлан", ВыражениеКоличествоПлан);
	ТекстВыборкиСтрокиДокументаВыполненияПлана = СтрЗаменить(
		ТекстВыборкиСтрокиДокументаВыполненияПлана, "&ВыражениеКоличествоДляРасчетаБонуса", ВыражениеКоличествоДляРасчетаБонуса);
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов,
		ТекстВыборкиСтрокиДокументаВыполненияПлана,
		"ВТ_ПодготовленныеДанные",
		"ВТ_РаспределениеСтрокДокументаПревышенияПлана");
	
	ТекстыВыборок.Добавить(ТекстВыборкиСтрокиДокументаВыполненияПлана);
	
	ТекстВыборкиСтрокиПериодовВыполненияПлана =
	"ВЫБРАТЬ
	|	ВТ_ПодготовленныеДанные.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПодготовленныеДанные.ПоказательТоваров КАК ПоказательТоваров,
	|	ВТ_ПодготовленныеДанные.Период КАК Период,
	|	ВТ_ПодготовленныеДанные.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПодготовленныеДанные.ДокументРегистратор КАК ДокументРегистратор,
	|	ВТ_ПодготовленныеДанные.НомерСтроки КАК НомерСтроки,
	|	&ВыражениеПриоритет КАК Приоритет,
	|	ВТ_ПодготовленныеДанные.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ПодготовленныеДанные.Договор КАК Договор,
	|	ВТ_ПодготовленныеДанные.Соглашение КАК Соглашение,
	|	ВТ_ПодготовленныеДанные.Номенклатура КАК Номенклатура,
	|	ВТ_ПодготовленныеДанные.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ПодготовленныеДанные.Характеристика КАК Характеристика,
	|	ВТ_ПодготовленныеДанные.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПодготовленныеДанные.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ПодготовленныеДанные.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ПодготовленныеДанные.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ПодготовленныеДанные.БазаРасчета КАК БазаРасчета,
	|	ВТ_ПодготовленныеДанные.Количество КАК Количество,
	|	ВТ_ПодготовленныеДанные.Валюта КАК Валюта,
	|	ВТ_ПодготовленныеДанные.СуммаПродажи КАК СуммаПродажи,
	|	ВТ_ПодготовленныеДанные.СуммаОборотСНДС КАК СуммаОборотСНДС,
	|	ВТ_ПодготовленныеДанные.СуммаОборотБезНДС КАК СуммаОборотБезНДС,
	|	ВТ_ПодготовленныеДанные.БонусПроцент КАК БонусПроцент,
	|	ВТ_ПодготовленныеДанные.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ПодготовленныеДанные.СуммаПлан КАК СуммаПлан,
	|	ИСТИНА КАК ПланВыполнен,
	|	ВЫБОР
	|		КОГДА &ВыражениеПриоритет < ВТ_ДокументВыполненияПлана.Приоритет
	|			ТОГДА ВТ_ПодготовленныеДанные.РасчетнаяБаза
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РасчетнаяБаза,
	|	ВТ_ПодготовленныеДанные.КоличествоПлан КАК КоличествоПлан,
	|	ВЫБОР
	|		КОГДА &ВыражениеПриоритет < ВТ_ДокументВыполненияПлана.Приоритет
	|			ТОГДА ВТ_ПодготовленныеДанные.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоДляРасчетаБонуса,
	|	ВТ_ДокументВыполненияПлана.КоличествоПланСУчетомКратностиПродаж КАК КоличествоПланСУчетомКратностиПродаж,
	|	ВЫБОР
	|		КОГДА &ВыражениеПриоритет < ВТ_ДокументВыполненияПлана.Приоритет
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ПодготовленныеДанные.РасчетнаяБаза * ВТ_ПодготовленныеДанные.БонусПроцент / 100 КАК ЧИСЛО(31, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаБонус,
	|	ВЫРАЗИТЬ(ВТ_ПодготовленныеДанные.СуммаПлан * ВТ_ПодготовленныеДанные.БонусПроцент / 100 КАК ЧИСЛО(31, 2)) КАК СуммаБонусВсего,
	|	ВТ_ПодготовленныеДанные.КоличествоПакетов КАК КоличествоПакетов
	|ИЗ
	|	ВТ_ПодготовленныеДанные КАК ВТ_ПодготовленныеДанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДокументВыполненияПлана КАК ВТ_ДокументВыполненияПлана
	|		ПО ВТ_ПодготовленныеДанные.УсловиеРетроБонуса = ВТ_ДокументВыполненияПлана.УсловиеРетроБонуса
	|			И ВТ_ПодготовленныеДанные.Организация = ВТ_ДокументВыполненияПлана.Организация
	|			И ВТ_ПодготовленныеДанные.Валюта = ВТ_ДокументВыполненияПлана.Валюта
	|			И ВТ_ПодготовленныеДанные.ПериодРасчета = ВТ_ДокументВыполненияПлана.ПериодРасчета
	|			И &ПоляСоединенияПоУчастникам
	|			И &ПоляСоединенияПоТоварам
	|			И ВТ_ПодготовленныеДанные.ДокументРегистратор <> ВТ_ДокументВыполненияПлана.ДокументРегистратор
	|			И &ТаблицаПревышениеЛимита";
	
	Если ПараметрыУсловийРетроБонусов.ПоказательТоваров = ЦелевыеПоказатели.ПакетноеПредложение Тогда
		
		ВыражениеПриоритет = "ВТ_ПревышениеЛимитаОбщая.Приоритет";
		
		ТаблицаПревышениеЛимита = "ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПревышениеЛимитаОбщая КАК ВТ_ПревышениеЛимитаОбщая
		|	ПО ВТ_ПодготовленныеДанные.ДокументРегистратор = ВТ_ПревышениеЛимитаОбщая.ДокументРегистратор
		|		И ВТ_ПодготовленныеДанные.НомерСтроки = ВТ_ПревышениеЛимитаОбщая.НомерСтроки";
		
	Иначе
		
		ВыражениеПриоритет = "ВТ_ПодготовленныеДанные.Приоритет";
		ТаблицаПревышениеЛимита = "";
		
	КонецЕсли;
	
	ТекстВыборкиСтрокиПериодовВыполненияПлана = СтрЗаменить(
		ТекстВыборкиСтрокиПериодовВыполненияПлана, "И &ТаблицаПревышениеЛимита", ТаблицаПревышениеЛимита);
	ТекстВыборкиСтрокиПериодовВыполненияПлана = СтрЗаменить(
		ТекстВыборкиСтрокиПериодовВыполненияПлана, "&ВыражениеПриоритет", ВыражениеПриоритет);
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов,
		ТекстВыборкиСтрокиПериодовВыполненияПлана,
		"ВТ_ПодготовленныеДанные",
		"ВТ_ДокументВыполненияПлана");
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов,
		ТекстВыборкиСтрокиПериодовВыполненияПлана,
		"ВТ_ПодготовленныеДанные",
		"ВТ_ДокументВыполненияПлана");
	
	ТекстыВыборок.Добавить(ТекстВыборкиСтрокиПериодовВыполненияПлана);
	
	ТекстВыборкиСтрокиПериодовНевыполненияПлана =
	"ВЫБРАТЬ
	|	ВТ_ПодготовленныеДанные.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПодготовленныеДанные.ПоказательТоваров КАК ПоказательТоваров,
	|	ВТ_ПодготовленныеДанные.Период КАК Период,
	|	ВТ_ПодготовленныеДанные.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПодготовленныеДанные.ДокументРегистратор КАК ДокументРегистратор,
	|	ВТ_ПодготовленныеДанные.НомерСтроки КАК НомерСтроки,
	|	0 КАК Приоритет,
	|	ВТ_ПодготовленныеДанные.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ПодготовленныеДанные.Договор КАК Договор,
	|	ВТ_ПодготовленныеДанные.Соглашение КАК Соглашение,
	|	ВТ_ПодготовленныеДанные.Номенклатура КАК Номенклатура,
	|	ВТ_ПодготовленныеДанные.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ПодготовленныеДанные.Характеристика КАК Характеристика,
	|	ВТ_ПодготовленныеДанные.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПодготовленныеДанные.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ПодготовленныеДанные.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ПодготовленныеДанные.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ПодготовленныеДанные.БазаРасчета КАК БазаРасчета,
	|	ВТ_ПодготовленныеДанные.Количество КАК Количество,
	|	ВТ_ПодготовленныеДанные.Валюта КАК Валюта,
	|	ВТ_ПодготовленныеДанные.СуммаПродажи КАК СуммаПродажи,
	|	ВТ_ПодготовленныеДанные.СуммаОборотСНДС КАК СуммаОборотСНДС,
	|	ВТ_ПодготовленныеДанные.СуммаОборотБезНДС КАК СуммаОборотБезНДС,
	|	ВТ_ПодготовленныеДанные.БонусПроцент КАК БонусПроцент,
	|	ВТ_ПодготовленныеДанные.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ПодготовленныеДанные.СуммаПлан КАК СуммаПлан,
	|	ЛОЖЬ КАК ПланВыполнен,
	|	0 КАК РасчетнаяБаза,
	|	ВТ_ПодготовленныеДанные.КоличествоПлан КАК КоличествоПлан,
	|	0 КАК КоличествоДляРасчетаБонуса,
	|	0 КАК КоличествоПланСУчетомКратностиПродаж,
	|	0 КАК СуммаБонус,
	|	0 КАК СуммаБонусВсего,
	|	0 КАК КоличествоПакетов
	|ИЗ
	|	ВТ_ПодготовленныеДанные КАК ВТ_ПодготовленныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДокументВыполненияПлана КАК ВТ_ДокументВыполненияПлана
	|		ПО ВТ_ПодготовленныеДанные.УсловиеРетроБонуса = ВТ_ДокументВыполненияПлана.УсловиеРетроБонуса
	|			И ВТ_ПодготовленныеДанные.Организация = ВТ_ДокументВыполненияПлана.Организация
	|			И ВТ_ПодготовленныеДанные.Валюта = ВТ_ДокументВыполненияПлана.Валюта
	|			И ВТ_ПодготовленныеДанные.ПериодРасчета = ВТ_ДокументВыполненияПлана.ПериодРасчета
	|			И &ПоляСоединенияПоУчастникам
	|			И &ПоляСоединенияПоТоварам
	|ГДЕ
	|	ВТ_ДокументВыполненияПлана.Приоритет ЕСТЬ NULL";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов,
		ТекстВыборкиСтрокиПериодовНевыполненияПлана,
		"ВТ_ПодготовленныеДанные",
		"ВТ_ДокументВыполненияПлана");
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов,
		ТекстВыборкиСтрокиПериодовНевыполненияПлана,
		"ВТ_ПодготовленныеДанные",
		"ВТ_ДокументВыполненияПлана");
	ТекстыВыборок.Добавить(ТекстВыборкиСтрокиПериодовНевыполненияПлана);
		
	РазделительПодзапросов = РазделительПодзапросов();
	ТекстЗапроса = СтрСоединить(ТекстыВыборок, РазделительПодзапросов);
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаОкруглениеРаспределенияПоФИФО(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ЦелевыеПоказатели = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательТоваров <> ЦелевыеПоказатели.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПараметрыУсловийРетроБонусов.РаспределениеПоFIFO Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаИсточник.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ТаблицаИсточник.ПериодРасчета КАК ПериодРасчета,
	|	ТаблицаИсточник.Организация КАК Организация,
	|	&ПоляУчастники,
	|	&ПоляТоваров,
	|	ЕСТЬNULL(ВТ_ПриоритетОкругления.МаксимальныйПриоритет, -1) КАК МаксимальныйПриоритет,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаИсточник.Приоритет = ЕСТЬNULL(ВТ_ПриоритетОкругления.МаксимальныйПриоритет, -1)
	|				ТОГДА 0
	|			ИНАЧЕ ТаблицаИсточник.РасчетнаяБаза
	|		КОНЕЦ) КАК РасчетнаяБазаКромеМаксимальногоПриоритета,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаИсточник.Приоритет = ЕСТЬNULL(ВТ_ПриоритетОкругления.МаксимальныйПриоритет, -1)
	|				ТОГДА 0
	|			ИНАЧЕ ТаблицаИсточник.СуммаБонус
	|		КОНЕЦ) КАК СуммаБонусКромеМаксимальногоПриоритета
	|ПОМЕСТИТЬ ВТ_ОкруглениеРаспределенияПоФИФО
	|ИЗ
	|	&ТаблицаИсточник КАК ТаблицаИсточник
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПриоритетОкругления КАК ВТ_ПриоритетОкругления
	|	ПО ТаблицаИсточник.ПериодРасчета = ВТ_ПриоритетОкругления.ПериодРасчета
	|		И ТаблицаИсточник.УсловиеРетроБонуса = ВТ_ПриоритетОкругления.УсловиеРетроБонуса
	|		И ТаблицаИсточник.Организация = ВТ_ПриоритетОкругления.Организация
	|		И &ПоляСоединенияПоУчастникам
	|		И &ПоляСоединенияПоТоварам
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаИсточник.ПериодРасчета,
	|	ТаблицаИсточник.УсловиеРетроБонуса,
	|	ТаблицаИсточник.Организация,
	|	&ПоляГруппировкиПоУчастникам,
	|	&ПоляГруппировкиПоПолямТоваров,
	|	ВТ_ПриоритетОкругления.МаксимальныйПриоритет";
	
	Если (ПараметрыУсловийРетроБонусов.ПоказательТоваров = ЦелевыеПоказатели.Количество
	 ИЛИ ПараметрыУсловийРетроБонусов.ПоказательТоваров = ЦелевыеПоказатели.ПакетноеПредложение) Тогда
		ТаблицаИсточник = "ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса";
	Иначе
		ТаблицаИсточник = "ВТ_ДанныеДляРаспределенияПоФИФО";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТаблицаИсточник", ТаблицаИсточник);
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ТаблицаИсточник", "ВТ_ПриоритетОкругления");
	
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ТаблицаИсточник", "ВТ_ПриоритетОкругления");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаИтоговоеРаспределениеПоФИФОПоСумме(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	 ИЛИ НЕ ПараметрыУсловийРетроБонусов.РаспределениеПоFIFO Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ДанныеДляРаспределенияПоФИФО.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ПоказательТоваров КАК ПоказательТоваров,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Период КАК Период,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ДокументРегистратор КАК ДокументРегистратор,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.НомерСтроки КАК НомерСтроки,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Договор КАК Договор,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Соглашение КАК Соглашение,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Номенклатура КАК Номенклатура,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Характеристика КАК Характеристика,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Валюта КАК Валюта,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Количество КАК Количество,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.СуммаПродажи КАК СуммаПродажи,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.СуммаОборотСНДС КАК СуммаОборотСНДС,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.СуммаОборотБезНДС КАК СуммаОборотБезНДС,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.БонусПроцент КАК БонусПроцент,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.СуммаПлан КАК СуммаПлан,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ПланВыполнен КАК ПланВыполнен,
	|	ВЫБОР
	|		КОГДА ВТ_ДанныеДляРаспределенияПоФИФО.Приоритет = ЕСТЬNULL(ВТ_ОкруглениеРаспределенияПоФИФО.МаксимальныйПриоритет, -1)
	|			ТОГДА ВТ_ДанныеДляРаспределенияПоФИФО.СуммаПлан - ЕСТЬNULL(ВТ_ОкруглениеРаспределенияПоФИФО.РасчетнаяБазаКромеМаксимальногоПриоритета, 0)
	|		ИНАЧЕ ВТ_ДанныеДляРаспределенияПоФИФО.РасчетнаяБаза
	|	КОНЕЦ КАК РасчетнаяБаза,
	|	0 КАК КоличествоПлан,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Количество КАК КоличествоДляРасчетаБонуса,
	|	ВЫБОР
	|		КОГДА ВТ_ДанныеДляРаспределенияПоФИФО.Приоритет = ЕСТЬNULL(ВТ_ОкруглениеРаспределенияПоФИФО.МаксимальныйПриоритет, -1)
	|			ТОГДА ВТ_ДанныеДляРаспределенияПоФИФО.СуммаБонусВсего - ЕСТЬNULL(ВТ_ОкруглениеРаспределенияПоФИФО.СуммаБонусКромеМаксимальногоПриоритета, 0)
	|		ИНАЧЕ ВТ_ДанныеДляРаспределенияПоФИФО.СуммаБонус
	|	КОНЕЦ КАК СуммаБонус,
	|	0 КАК КоличествоПакетов
	|ПОМЕСТИТЬ ВТ_ИтоговоеРаспределениеПоФИФО
	|ИЗ
	|	ВТ_ДанныеДляРаспределенияПоФИФО КАК ВТ_ДанныеДляРаспределенияПоФИФО
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОкруглениеРаспределенияПоФИФО КАК ВТ_ОкруглениеРаспределенияПоФИФО
	|	ПО ВТ_ДанныеДляРаспределенияПоФИФО.ПериодРасчета = ВТ_ОкруглениеРаспределенияПоФИФО.ПериодРасчета
	|		И ВТ_ДанныеДляРаспределенияПоФИФО.УсловиеРетроБонуса = ВТ_ОкруглениеРаспределенияПоФИФО.УсловиеРетроБонуса
	|		И ВТ_ДанныеДляРаспределенияПоФИФО.Организация = ВТ_ОкруглениеРаспределенияПоФИФО.Организация
	|		И &ПоляСоединенияПоУчастникам";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов,
		ТекстЗапроса,
		"ВТ_ДанныеДляРаспределенияПоФИФО",
		"ВТ_ОкруглениеРаспределенияПоФИФО");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаМинимальныйПриоритетВыполненияПланаПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ВидыПоказателей = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаИсточник.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ТаблицаИсточник.ПериодРасчета КАК ПериодРасчета,
	|	ТаблицаИсточник.Организация КАК Организация,
	|	ТаблицаИсточник.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	ТаблицаИсточник.Номенклатура КАК Номенклатура,
	|	ТаблицаИсточник.Характеристика КАК Характеристика,
	|	МИНИМУМ(ТаблицаИсточник.Приоритет) КАК Приоритет
	|ПОМЕСТИТЬ ВТ_МинимальныйПриоритетВыполненияПлана
	|ИЗ
	|	ВТ_ПревышениеЛимитаНарастающийИтог КАК ТаблицаИсточник
	|ГДЕ
	|	&ВыражениеУсловие
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаИсточник.УсловиеРетроБонуса,
	|	ТаблицаИсточник.ПериодРасчета,
	|	ТаблицаИсточник.Организация,
	|	ТаблицаИсточник.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	ТаблицаИсточник.Номенклатура,
	|	ТаблицаИсточник.Характеристика";
	
	Если ПараметрыУсловийРетроБонусов.ПоказательТоваров = ВидыПоказателей.ПакетноеПредложение Тогда
		ВыражениеУсловие = "ТаблицаИсточник.Количество >= ТаблицаИсточник.КоличествоПланСУчетомКратностиПродаж";
	Иначе
		ВыражениеУсловие = "ТаблицаИсточник.Количество >= ТаблицаИсточник.КоличествоПлан";
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеУсловие", ВыражениеУсловие);
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ТаблицаИсточник");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаДанныеДляРаспределенияПоФИФОСуммаБонусаПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательТоваров <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПараметрыУсловийРетроБонусов.РаспределениеПоFIFO Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ДанныеДляРаспределенияПоФИФО.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ПоказательТоваров КАК ПоказательТоваров,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Период КАК Период,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ДокументРегистратор КАК ДокументРегистратор,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.НомерСтроки КАК НомерСтроки,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Договор КАК Договор,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Соглашение КАК Соглашение,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Номенклатура КАК Номенклатура,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Характеристика КАК Характеристика,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.БазаРасчета КАК БазаРасчета,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Валюта КАК Валюта,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Количество КАК Количество,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.СуммаПродажи КАК СуммаПродажи,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.СуммаОборотСНДС КАК СуммаОборотСНДС,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.СуммаОборотБезНДС КАК СуммаОборотБезНДС,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.БонусПроцент КАК БонусПроцент,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.СуммаПлан КАК СуммаПлан,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.ПланВыполнен КАК ПланВыполнен,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.Приоритет КАК Приоритет,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.КоличествоПлан КАК КоличествоПлан,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.КоличествоДляРасчетаБонуса КАК КоличествоДляРасчетаБонуса,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.КоличествоПакетов КАК КоличествоПакетов,
	|	ВЫБОР
	|		КОГДА ВТ_ДанныеДляРаспределенияПоФИФО.КоличествоДляРасчетаБонуса = 0
	|			ТОГДА ВЫБОР
	|				КОГДА ВТ_ДанныеДляРаспределенияПоФИФО.ПланВыполнен
	|					И ВТ_ДанныеДляРаспределенияПоФИФО.Количество = 0
	|					И ВТ_ДанныеДляРаспределенияПоФИФО.БазаРасчета <> ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.ВыручкаБазовыеЦены)
	|					И ВТ_ДанныеДляРаспределенияПоФИФО.БазаРасчета <> ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.СуммаЗакупкиБазовыеЦены)
	|					ТОГДА ВТ_ДанныеДляРаспределенияПоФИФО.РасчетнаяБаза
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|			КОГДА ВТ_ДанныеДляРаспределенияПоФИФО.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.ВыручкаБазовыеЦены)
	|				ИЛИ ВТ_ДанныеДляРаспределенияПоФИФО.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.СуммаЗакупкиБазовыеЦены)
	|				ТОГДА ВЫРАЗИТЬ(ВТ_ДанныеДляРаспределенияПоФИФО.КоличествоДляРасчетаБонуса * ВТ_ДанныеДляРаспределенияПоФИФО.БазоваяЦена КАК ЧИСЛО(31, 2))
	|			КОГДА ВТ_ДанныеДляРаспределенияПоФИФО.КоличествоДляРасчетаБонуса = ВТ_ДанныеДляРаспределенияПоФИФО.Количество
	|				ТОГДА ВТ_ДанныеДляРаспределенияПоФИФО.СуммаПродажи
	|			ИНАЧЕ ВТ_ДанныеДляРаспределенияПоФИФО.РасчетнаяБаза
	|		КОНЕЦ
	|	КОНЕЦ КАК РасчетнаяБаза,
	|	ВЫБОР
	|		КОГДА ВТ_ДанныеДляРаспределенияПоФИФО.КоличествоДляРасчетаБонуса = 0
	|			ТОГДА ВЫБОР
	|				КОГДА ВТ_ДанныеДляРаспределенияПоФИФО.ПланВыполнен
	|					И ВТ_ДанныеДляРаспределенияПоФИФО.Количество = 0
	|					И ВТ_ДанныеДляРаспределенияПоФИФО.БазаРасчета <> ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.ВыручкаБазовыеЦены)
	|					И ВТ_ДанныеДляРаспределенияПоФИФО.БазаРасчета <> ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.СуммаЗакупкиБазовыеЦены)
	|					ТОГДА ВЫРАЗИТЬ(ВТ_ДанныеДляРаспределенияПоФИФО.РасчетнаяБаза * ВТ_ДанныеДляРаспределенияПоФИФО.БонусПроцент / 100 КАК ЧИСЛО(31, 2))
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|			КОГДА ВТ_ДанныеДляРаспределенияПоФИФО.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.ВыручкаБазовыеЦены)
	|				ИЛИ ВТ_ДанныеДляРаспределенияПоФИФО.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.СуммаЗакупкиБазовыеЦены)
	|				ТОГДА ВЫРАЗИТЬ(ВТ_ДанныеДляРаспределенияПоФИФО.КоличествоДляРасчетаБонуса * ВТ_ДанныеДляРаспределенияПоФИФО.БазоваяЦена * ВТ_ДанныеДляРаспределенияПоФИФО.БонусПроцент / 100 КАК ЧИСЛО(31, 2))
	|			КОГДА ВТ_ДанныеДляРаспределенияПоФИФО.КоличествоДляРасчетаБонуса = ВТ_ДанныеДляРаспределенияПоФИФО.Количество
	|				ТОГДА ВЫРАЗИТЬ(ВТ_ДанныеДляРаспределенияПоФИФО.СуммаПродажи * ВТ_ДанныеДляРаспределенияПоФИФО.БонусПроцент / 100 КАК ЧИСЛО(31, 2))
	|			ИНАЧЕ ВТ_ДанныеДляРаспределенияПоФИФО.СуммаБонус
	|		КОНЕЦ
	|	КОНЕЦ КАК СуммаБонус,
	|	ВТ_ДанныеДляРаспределенияПоФИФО.КоличествоПланСУчетомКратностиПродаж КАК КоличествоДляРасчетаБонусаВсего,
	|	ВЫРАЗИТЬ(ВТ_ДанныеДляРаспределенияПоФИФО.КоличествоПланСУчетомКратностиПродаж * ВТ_ДанныеДляРаспределенияПоФИФО.БазоваяЦена * ВТ_ДанныеДляРаспределенияПоФИФО.БонусПроцент / 100 КАК ЧИСЛО(31, 2)) КАК СуммаБонусВсего
	|ПОМЕСТИТЬ ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса
	|ИЗ
	|	ВТ_ДанныеДляРаспределенияПоФИФО КАК ВТ_ДанныеДляРаспределенияПоФИФО";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов,
		ТекстЗапроса,
		"ВТ_ДанныеДляРаспределенияПоФИФО");
	
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов,
		ТекстЗапроса,
		"ВТ_ДанныеДляРаспределенияПоФИФО");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаИтоговоеРаспределениеПоФИФОПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательТоваров <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПараметрыУсловийРетроБонусов.РаспределениеПоFIFO Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.ПоказательТоваров КАК ПоказательТоваров,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.Период КАК Период,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.ДокументРегистратор КАК ДокументРегистратор,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.НомерСтроки КАК НомерСтроки,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.Договор КАК Договор,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.Соглашение КАК Соглашение,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.Номенклатура КАК Номенклатура,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.Характеристика КАК Характеристика,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.БазаРасчета КАК БазаРасчета,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.Валюта КАК Валюта,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.Количество КАК Количество,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.СуммаПродажи КАК СуммаПродажи,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.СуммаОборотСНДС КАК СуммаОборотСНДС,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.СуммаОборотБезНДС КАК СуммаОборотБезНДС,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.БонусПроцент КАК БонусПроцент,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.СуммаПлан КАК СуммаПлан,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.ПланВыполнен КАК ПланВыполнен,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.КоличествоПлан КАК КоличествоПлан,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.КоличествоДляРасчетаБонуса КАК КоличествоДляРасчетаБонуса,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.КоличествоПакетов КАК КоличествоПакетов,
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.РасчетнаяБаза КАК РасчетнаяБаза,
	|	ВЫБОР
	|		КОГДА ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.Приоритет = ЕСТЬNULL(ВТ_ОкруглениеРаспределенияПоФИФО.МаксимальныйПриоритет, -1)
	|			И (ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.ВыручкаБазовыеЦены)
	|				ИЛИ ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.СуммаЗакупкиБазовыеЦены)
	|			)
	|			ТОГДА ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.СуммаБонусВсего - ЕСТЬNULL(ВТ_ОкруглениеРаспределенияПоФИФО.СуммаБонусКромеМаксимальногоПриоритета, 0)
	|		ИНАЧЕ ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.СуммаБонус
	|	КОНЕЦ КАК СуммаБонус
	|ПОМЕСТИТЬ ВТ_ИтоговоеРаспределениеПоФИФО
	|ИЗ
	|	ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса КАК ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОкруглениеРаспределенияПоФИФО КАК ВТ_ОкруглениеРаспределенияПоФИФО
	|	ПО ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.ПериодРасчета = ВТ_ОкруглениеРаспределенияПоФИФО.ПериодРасчета
	|		И ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.УсловиеРетроБонуса = ВТ_ОкруглениеРаспределенияПоФИФО.УсловиеРетроБонуса
	|		И ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса.Организация = ВТ_ОкруглениеРаспределенияПоФИФО.Организация
	|		И &ПоляСоединенияПоУчастникам
	|		И &ПоляСоединенияПоТоварам";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов,
		ТекстЗапроса,
		"ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса",
		"ВТ_ОкруглениеРаспределенияПоФИФО");
	
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов,
		ТекстЗапроса,
		"ВТ_ДанныеДляРаспределенияПоФИФОСуммаБонуса",
		"ВТ_ОкруглениеРаспределенияПоФИФО");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаДанныеДляПропорциональногоРаспределенияПоСумме(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ДанныеСУчетомПревышенияЛимита.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Период КАК Период,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ДокументРегистратор КАК ДокументРегистратор,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.НомерСтроки КАК НомерСтроки,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Договор КАК Договор,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Соглашение КАК Соглашение,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Номенклатура КАК Номенклатура,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Характеристика КАК Характеристика,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПлан КАК СуммаПлан,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПоказательТоваров КАК ПоказательТоваров,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Количество КАК Количество,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Количество КАК КоличествоДляРасчетаБонуса,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Валюта КАК Валюта,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПродажи КАК СуммаПродажи,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаОборотСНДС КАК СуммаОборотСНДС,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаОборотБезНДС КАК СуммаОборотБезНДС,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.БонусПроцент КАК БонусПроцент,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.КоличествоПлан КАК КоличествоПлан,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПланВыполнен КАК ПланВыполнен,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Приоритет КАК Приоритет,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.РасчетнаяБаза КАК РасчетнаяБазаИсходная,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.РасчетнаяБазаВсего КАК РасчетнаяБазаБезОграничений,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПлан КАК РасчетнаяБазаВсего,
	|	ВЫРАЗИТЬ(ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПродажи * ВТ_ДанныеСУчетомПревышенияЛимита.БонусПроцент / 100 КАК ЧИСЛО(31, 2)) КАК СуммаБонусБезОграничения,
	|	ВЫБОР
	|		КОГДА ВТ_ДанныеСУчетомПревышенияЛимита.РасчетнаяБазаВсего = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПлан / ВТ_ДанныеСУчетомПревышенияЛимита.РасчетнаяБазаВсего КАК ЧИСЛО(31, 14))
	|	КОНЕЦ КАК Коэффициент,
	|	ВЫРАЗИТЬ(ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПлан * ВТ_ДанныеСУчетомПревышенияЛимита.БонусПроцент / 100 КАК ЧИСЛО(31, 2)) КАК СуммаБонусВсего,
	|	ВЫБОР
	|		КОГДА ВТ_ДанныеСУчетомПревышенияЛимита.РасчетнаяБазаВсего = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ВТ_ДанныеСУчетомПревышенияЛимита.РасчетнаяБаза * ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПлан / ВТ_ДанныеСУчетомПревышенияЛимита.РасчетнаяБазаВсего КАК ЧИСЛО(31, 2))
	|	КОНЕЦ КАК РасчетнаяБаза,
	|	ВЫБОР
	|		КОГДА ВТ_ДанныеСУчетомПревышенияЛимита.РасчетнаяБазаВсего = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПродажи * ВТ_ДанныеСУчетомПревышенияЛимита.БонусПроцент * ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПлан / ВТ_ДанныеСУчетомПревышенияЛимита.РасчетнаяБазаВсего / 100 КАК ЧИСЛО(31, 2))
	|	КОНЕЦ КАК СуммаБонус
	|ПОМЕСТИТЬ ВТ_ДанныеДляПропорциональногоРаспределения
	|ИЗ
	|	ВТ_ДанныеСУчетомПревышенияЛимита КАК ВТ_ДанныеСУчетомПревышенияЛимита
	|ГДЕ
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПланВыполнен";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ДанныеСУчетомПревышенияЛимита");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаДанныеДляПропорциональногоРаспределенияПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ДанныеСУчетомПревышенияЛимита.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Период КАК Период,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ДокументРегистратор КАК ДокументРегистратор,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.НомерСтроки КАК НомерСтроки,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Договор КАК Договор,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Соглашение КАК Соглашение,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Номенклатура КАК Номенклатура,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Характеристика КАК Характеристика,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПлан КАК СуммаПлан,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПоказательТоваров КАК ПоказательТоваров,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Количество КАК Количество,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Валюта КАК Валюта,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПродажи КАК СуммаПродажи,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаОборотСНДС КАК СуммаОборотСНДС,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаОборотБезНДС КАК СуммаОборотБезНДС,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.БонусПроцент КАК БонусПроцент,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.КоличествоПлан КАК КоличествоПлан,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПланВыполнен КАК ПланВыполнен,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.Приоритет КАК Приоритет,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.РасчетнаяБаза КАК РасчетнаяБаза,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.РасчетнаяБазаВсего КАК РасчетнаяБазаВсего,
	|	ВЫРАЗИТЬ(ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПродажи * ВТ_ДанныеСУчетомПревышенияЛимита.БонусПроцент / 100 КАК ЧИСЛО(31, 2)) КАК СуммаБонусБезОграничения,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.КоличествоПакетов КАК КоличествоПакетов,
	|	ВТ_ДанныеСУчетомПревышенияЛимита.КоличествоПланСУчетомКратностиПродаж КАК КоличествоПланСУчетомКратностиПродаж
	|ПОМЕСТИТЬ ВТ_ДанныеДляПропорциональногоРаспределения
	|ИЗ
	|	ВТ_ДанныеСУчетомПревышенияЛимита КАК ВТ_ДанныеСУчетомПревышенияЛимита
	|ГДЕ
	|	ВТ_ДанныеСУчетомПревышенияЛимита.ПланВыполнен";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ДанныеСУчетомПревышенияЛимита");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаБазаПропорциональногоРаспределенияПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательТоваров <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ДанныеДляПропорциональногоРаспределения.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Номенклатура КАК Номенклатура,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Характеристика КАК Характеристика,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Организация КАК Организация,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	&ВыражениеКоличествоПлан КАК КоличествоПлан,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.БонусПроцент КАК БонусПроцент,
	|	СУММА(ВТ_ДанныеДляПропорциональногоРаспределения.Количество) КАК КоличествоВсего,
	|	СУММА(ВТ_ДанныеДляПропорциональногоРаспределения.РасчетнаяБаза) КАК РасчетнаяБаза
	|ПОМЕСТИТЬ ВТ_БазаПропорциональногоРаспределения
	|ИЗ
	|	ВТ_ДанныеДляПропорциональногоРаспределения КАК ВТ_ДанныеДляПропорциональногоРаспределения
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ДанныеДляПропорциональногоРаспределения.ПериодРасчета,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.УсловиеРетроБонуса,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Номенклатура,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Характеристика,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Организация,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	&ВыражениеКоличествоПлан,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.КоличествоПлан,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.БонусПроцент";
	
	Если ПараметрыУсловийРетроБонусов.ПоказательТоваров = ПоказателиПродаж.ПакетноеПредложение Тогда
		ВыражениеКоличествоПлан = "ВТ_ДанныеДляПропорциональногоРаспределения.КоличествоПланСУчетомКратностиПродаж";
	Иначе
		ВыражениеКоличествоПлан = "ВТ_ДанныеДляПропорциональногоРаспределения.КоличествоПлан";
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеКоличествоПлан", ВыражениеКоличествоПлан);
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ДанныеДляПропорциональногоРаспределения");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаРасчетПропорциональногоРаспределенияПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательТоваров <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_БазаПропорциональногоРаспределения.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_БазаПропорциональногоРаспределения.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_БазаПропорциональногоРаспределения.Номенклатура КАК Номенклатура,
	|	ВТ_БазаПропорциональногоРаспределения.Характеристика КАК Характеристика,
	|	ВТ_БазаПропорциональногоРаспределения.Организация КАК Организация,
	|	ВТ_БазаПропорциональногоРаспределения.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	ВТ_БазаПропорциональногоРаспределения.КоличествоПлан КАК КоличествоПлан,
	|	ВТ_БазаПропорциональногоРаспределения.КоличествоВсего КАК КоличествоВсего,
	|	ВЫБОР
	|		КОГДА ВТ_БазаПропорциональногоРаспределения.КоличествоВсего = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ВТ_БазаПропорциональногоРаспределения.РасчетнаяБаза * ВТ_БазаПропорциональногоРаспределения.КоличествоПлан / ВТ_БазаПропорциональногоРаспределения.КоличествоВсего КАК ЧИСЛО(31, 2))
	|	КОНЕЦ КАК РасчетнаяБазаВсего,
	|	ВЫБОР
	|		КОГДА ВТ_БазаПропорциональногоРаспределения.КоличествоВсего = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ВЫРАЗИТЬ(ВТ_БазаПропорциональногоРаспределения.РасчетнаяБаза * ВТ_БазаПропорциональногоРаспределения.КоличествоПлан / ВТ_БазаПропорциональногоРаспределения.КоличествоВсего КАК ЧИСЛО(31, 2)) * ВТ_БазаПропорциональногоРаспределения.БонусПроцент / 100 КАК ЧИСЛО(31, 2))
	|	КОНЕЦ КАК СуммаБонусВсего
	|ПОМЕСТИТЬ ВТ_РасчетПропорциональногоРаспределения
	|ИЗ
	|	ВТ_БазаПропорциональногоРаспределения КАК ВТ_БазаПропорциональногоРаспределения";
	
	ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_БазаПропорциональногоРаспределения");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаПропорциональноеРаспределениеПоПозициям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательТоваров <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ПропорциональноеРаспределение Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ДанныеДляПропорциональногоРаспределения.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Период КАК Период,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.ДокументРегистратор КАК ДокументРегистратор,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.НомерСтроки КАК НомерСтроки,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Договор КАК Договор,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Соглашение КАК Соглашение,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Номенклатура КАК Номенклатура,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Характеристика КАК Характеристика,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.СуммаПлан КАК СуммаПлан,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.ПоказательТоваров КАК ПоказательТоваров,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Количество КАК Количество,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Валюта КАК Валюта,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.СуммаПродажи КАК СуммаПродажи,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.СуммаОборотСНДС КАК СуммаОборотСНДС,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.СуммаОборотБезНДС КАК СуммаОборотБезНДС,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.БонусПроцент КАК БонусПроцент,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.ПланВыполнен КАК ПланВыполнен,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.КоличествоПлан КАК КоличествоПлан,
	|	ВТ_РасчетПропорциональногоРаспределения.КоличествоВсего КАК КоличествоВсего,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_РасчетПропорциональногоРаспределения.КоличествоВсего, 0) <> 0
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ДанныеДляПропорциональногоРаспределения.Количество * ВТ_РасчетПропорциональногоРаспределения.КоличествоПлан / ВТ_РасчетПропорциональногоРаспределения.КоличествоВсего КАК ЧИСЛО(15, 3))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоДляРасчетаБонуса,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.Приоритет КАК Приоритет,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.РасчетнаяБаза КАК РасчетнаяБазаИсходная,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.СуммаБонусБезОграничения КАК СуммаБонусБезОграничения,
	|	ЕСТЬNULL(ВТ_РасчетПропорциональногоРаспределения.РасчетнаяБазаВсего, 0) КАК РасчетнаяБазаВсего,
	|	ЕСТЬNULL(ВТ_РасчетПропорциональногоРаспределения.СуммаБонусВсего, 0) КАК СуммаБонусВсего,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_РасчетПропорциональногоРаспределения.КоличествоВсего, 0) <> 0
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ДанныеДляПропорциональногоРаспределения.РасчетнаяБаза * ВТ_РасчетПропорциональногоРаспределения.КоличествоПлан / ВТ_РасчетПропорциональногоРаспределения.КоличествоВсего КАК ЧИСЛО(31, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РасчетнаяБаза,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_РасчетПропорциональногоРаспределения.КоличествоВсего, 0) <> 0
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ДанныеДляПропорциональногоРаспределения.СуммаПродажи * ВТ_ДанныеДляПропорциональногоРаспределения.БонусПроцент * ВТ_РасчетПропорциональногоРаспределения.КоличествоПлан / ВТ_РасчетПропорциональногоРаспределения.КоличествоВсего / 100 КАК ЧИСЛО(31, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаБонус,
	|	ВТ_ДанныеДляПропорциональногоРаспределения.КоличествоПакетов КАК КоличествоПакетов
	|ПОМЕСТИТЬ ВТ_ПропорциональноеРаспределениеПоПозициям
	|ИЗ
	|	ВТ_ДанныеДляПропорциональногоРаспределения КАК ВТ_ДанныеДляПропорциональногоРаспределения
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетПропорциональногоРаспределения КАК ВТ_РасчетПропорциональногоРаспределения
	|	ПО ВТ_ДанныеДляПропорциональногоРаспределения.ПериодРасчета = ВТ_РасчетПропорциональногоРаспределения.ПериодРасчета
	|		И ВТ_ДанныеДляПропорциональногоРаспределения.УсловиеРетроБонуса = ВТ_РасчетПропорциональногоРаспределения.УсловиеРетроБонуса
	|		И ВТ_ДанныеДляПропорциональногоРаспределения.Номенклатура = ВТ_РасчетПропорциональногоРаспределения.Номенклатура
	|		И ВТ_ДанныеДляПропорциональногоРаспределения.Характеристика = ВТ_РасчетПропорциональногоРаспределения.Характеристика
	|		И ВТ_ДанныеДляПропорциональногоРаспределения.Организация = ВТ_РасчетПропорциональногоРаспределения.Организация
	|		И ВТ_ДанныеДляПропорциональногоРаспределения.Валюта = ВТ_РасчетПропорциональногоРаспределения.Валюта
	|		И &ПоляСоединенияПоУчастникам";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов,
		ТекстЗапроса,
		"ВТ_ДанныеДляПропорциональногоРаспределения",
		"ВТ_РасчетПропорциональногоРаспределения");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаОкруглениеПропорциональногоРаспределения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ВидыПоказателей = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	ПоказателиПродаж = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательТоваров <> ПоказателиПродаж.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ПропорциональноеРаспределение Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ТаблицаИсточник.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ТаблицаИсточник.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ТаблицаИсточник.Организация КАК Организация,
	|	ВТ_ТаблицаИсточник.Валюта КАК Валюта,
	|	&ПоляУчастники,
	|	&ПоляТоваров,
	|	ЕСТЬNULL(ВТ_ПриоритетОкругления.МаксимальныйПриоритет, -1) КАК МаксимальныйПриоритет,
	|	СУММА(ВЫБОР
	|			КОГДА ВТ_ТаблицаИсточник.Приоритет = ЕСТЬNULL(ВТ_ПриоритетОкругления.МаксимальныйПриоритет, -1)
	|				ТОГДА 0
	|			ИНАЧЕ ВТ_ТаблицаИсточник.РасчетнаяБаза
	|		КОНЕЦ) КАК РасчетнаяБазаКромеМаксимальногоПриоритета,
	|	СУММА(ВЫБОР
	|			КОГДА ВТ_ТаблицаИсточник.Приоритет = ЕСТЬNULL(ВТ_ПриоритетОкругления.МаксимальныйПриоритет, -1)
	|				ТОГДА 0
	|			ИНАЧЕ ВТ_ТаблицаИсточник.СуммаБонус
	|		КОНЕЦ) КАК СуммаБонусКромеМаксимальногоПриоритета
	|ПОМЕСТИТЬ ВТ_ОкруглениеПропорциональногоРаспределения
	|ИЗ
	|	&ТаблицаИсточник КАК ВТ_ТаблицаИсточник
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПриоритетОкругления КАК ВТ_ПриоритетОкругления
	|	ПО ВТ_ТаблицаИсточник.ПериодРасчета = ВТ_ПриоритетОкругления.ПериодРасчета
	|		И ВТ_ТаблицаИсточник.УсловиеРетроБонуса = ВТ_ПриоритетОкругления.УсловиеРетроБонуса
	|		И ВТ_ТаблицаИсточник.Организация = ВТ_ПриоритетОкругления.Организация
	|		И ВТ_ТаблицаИсточник.Валюта = ВТ_ПриоритетОкругления.Валюта
	|		И &ПоляСоединенияПоУчастникам
	|		И &ПоляСоединенияПоТоварам
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицаИсточник.ПериодРасчета,
	|	ВТ_ТаблицаИсточник.УсловиеРетроБонуса,
	|	ВТ_ТаблицаИсточник.Организация,
	|	ВТ_ТаблицаИсточник.Валюта,
	|	&ПоляГруппировкиПоУчастникам,
	|	&ПоляГруппировкиПоПолямТоваров,
	|	ВТ_ПриоритетОкругления.МаксимальныйПриоритет";
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ТаблицаИсточник", "ВТ_ПриоритетОкругления");
	
	ПодставитьПоляПоТоварам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, "ВТ_ТаблицаИсточник", "ВТ_ПриоритетОкругления");
	
	Если ПараметрыУсловийРетроБонусов.ПоказательТоваров = ВидыПоказателей.Количество
	 ИЛИ ПараметрыУсловийРетроБонусов.ПоказательТоваров = ВидыПоказателей.ПакетноеПредложение Тогда
		
		ТаблицаИсточник = "ВТ_ПропорциональноеРаспределениеПоПозициям";
		
	ИначеЕсли ПараметрыУсловийРетроБонусов.ПоказательТоваров = ВидыПоказателей.Сумма Тогда
		
		ТаблицаИсточник = "ВТ_ДанныеДляПропорциональногоРаспределения";
	
	Иначе
		
		ШаблонОшибки = НСтр("ru = 'Не удалось определить показатель продаж (""%1"") для документа ""%2""'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонОшибки,
			ПараметрыУсловийРетроБонусов.ПоказательТоваровПредставление,
			ПараметрыУсловийРетроБонусов.ДокументУсловийРетроБонусовПредставление);
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТаблицаИсточник", ТаблицаИсточник);
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаИтоговоеПропорциональноеРаспределение(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ВидыПоказателей = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательТоваров <> ВидыПоказателей.ПакетноеПредложение Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ПропорциональноеРаспределение Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ТаблицаИсточник.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ТаблицаИсточник.Период КАК Период,
	|	ВТ_ТаблицаИсточник.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ТаблицаИсточник.ДокументРегистратор КАК ДокументРегистратор,
	|	ВТ_ТаблицаИсточник.НомерСтроки КАК НомерСтроки,
	|	ВТ_ТаблицаИсточник.Организация КАК Организация,
	|	&ПоляУчастники,
	|	ВТ_ТаблицаИсточник.Договор КАК Договор,
	|	ВТ_ТаблицаИсточник.Соглашение КАК Соглашение,
	|	ВТ_ТаблицаИсточник.Номенклатура КАК Номенклатура,
	|	ВТ_ТаблицаИсточник.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ТаблицаИсточник.Характеристика КАК Характеристика,
	|	ВТ_ТаблицаИсточник.СуммаПлан КАК СуммаПлан,
	|	ВТ_ТаблицаИсточник.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ТаблицаИсточник.ПоказательТоваров КАК ПоказательТоваров,
	|	ВТ_ТаблицаИсточник.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ТаблицаИсточник.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ТаблицаИсточник.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ТаблицаИсточник.Количество КАК Количество,
	|	ВТ_ТаблицаИсточник.Валюта КАК Валюта,
	|	ВТ_ТаблицаИсточник.СуммаПродажи КАК СуммаПродажи,
	|	ВТ_ТаблицаИсточник.СуммаОборотСНДС КАК СуммаОборотСНДС,
	|	ВТ_ТаблицаИсточник.СуммаОборотБезНДС КАК СуммаОборотБезНДС,
	|	ВТ_ТаблицаИсточник.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ТаблицаИсточник.БонусПроцент КАК БонусПроцент,
	|	ВТ_ТаблицаИсточник.ПланВыполнен КАК ПланВыполнен,
	|	ВТ_ТаблицаИсточник.КоличествоПлан КАК КоличествоПлан,
	|	ВТ_ТаблицаИсточник.КоличествоДляРасчетаБонуса КАК КоличествоДляРасчетаБонуса,
	|	ВТ_ТаблицаИсточник.Приоритет КАК Приоритет,
	|	ВТ_ТаблицаИсточник.РасчетнаяБазаВсего КАК РасчетнаяБазаВсего,
	|	ВТ_ТаблицаИсточник.СуммаБонусВсего КАК СуммаБонусВсего,
	|	ЕСТЬNULL(ВТ_ОкруглениеПропорциональногоРаспределения.МаксимальныйПриоритет, -1) КАК МаксимальныйПриоритет,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаИсточник.Приоритет = ЕСТЬNULL(ВТ_ОкруглениеПропорциональногоРаспределения.МаксимальныйПриоритет, -1)
	|			ТОГДА ВТ_ТаблицаИсточник.РасчетнаяБазаВсего -
	|				ЕСТЬNULL(ВТ_ОкруглениеПропорциональногоРаспределения.РасчетнаяБазаКромеМаксимальногоПриоритета, 0)
	|		ИНАЧЕ ВТ_ТаблицаИсточник.РасчетнаяБаза
	|	КОНЕЦ КАК РасчетнаяБаза,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаИсточник.Приоритет = ЕСТЬNULL(ВТ_ОкруглениеПропорциональногоРаспределения.МаксимальныйПриоритет, -1)
	|			ТОГДА ВТ_ТаблицаИсточник.СуммаБонусВсего -
	|				ЕСТЬNULL(ВТ_ОкруглениеПропорциональногоРаспределения.СуммаБонусКромеМаксимальногоПриоритета, 0)
	|		ИНАЧЕ ВТ_ТаблицаИсточник.СуммаБонус
	|	КОНЕЦ КАК СуммаБонус,
	|	&ВыражениеПроданоПакетов КАК КоличествоПакетов
	|ПОМЕСТИТЬ ВТ_ИтоговоеПропорциональноеРаспределение
	|ИЗ
	|	&ТаблицаИсточник КАК ВТ_ТаблицаИсточник
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОкруглениеПропорциональногоРаспределения КАК ВТ_ОкруглениеПропорциональногоРаспределения
	|	ПО ВТ_ТаблицаИсточник.ПериодРасчета = ВТ_ОкруглениеПропорциональногоРаспределения.ПериодРасчета
	|		И ВТ_ТаблицаИсточник.УсловиеРетроБонуса = ВТ_ОкруглениеПропорциональногоРаспределения.УсловиеРетроБонуса
	|		И ВТ_ТаблицаИсточник.Организация = ВТ_ОкруглениеПропорциональногоРаспределения.Организация
	|		И ВТ_ТаблицаИсточник.Валюта = ВТ_ОкруглениеПропорциональногоРаспределения.Валюта
	|		И &ПоляСоединенияПоУчастникам
	|		И &ПоляСоединенияПоТоварам";
	
	Если ПараметрыУсловийРетроБонусов.ПоказательТоваров = ВидыПоказателей.Количество
	 ИЛИ ПараметрыУсловийРетроБонусов.ПоказательТоваров = ВидыПоказателей.ПакетноеПредложение Тогда
		
		ТаблицаИсточник = "ВТ_ПропорциональноеРаспределениеПоПозициям";
		ВыражениеПроданоПакетов = "ВТ_ТаблицаИсточник.КоличествоПакетов";
		
	ИначеЕсли ПараметрыУсловийРетроБонусов.ПоказательТоваров = ВидыПоказателей.Сумма Тогда
		
		ТаблицаИсточник = "ВТ_ДанныеДляПропорциональногоРаспределения";
		ВыражениеПроданоПакетов = "0";
		
	Иначе
		
		ШаблонОшибки = НСтр("ru = 'Не удалось определить показатель продаж (""%1"") для документа ""%2""'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонОшибки,
			ПараметрыУсловийРетроБонусов.ПоказательТоваровПредставление,
			ПараметрыУсловийРетроБонусов.ДокументУсловийРетроБонусовПредставление);
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТаблицаИсточник", ТаблицаИсточник);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеПроданоПакетов", ВыражениеПроданоПакетов);
	
	ПодставитьПоляПоУчастникам(
		ПараметрыУсловийРетроБонусов,
		ТекстЗапроса,
		"ВТ_ТаблицаИсточник",
		"ВТ_ОкруглениеПропорциональногоРаспределения");
	
	ПодставитьПоляПоТоварам(
		ПараметрыУсловийРетроБонусов,
		ТекстЗапроса,
		"ВТ_ТаблицаИсточник",
		"ВТ_ОкруглениеПропорциональногоРаспределения");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаИтоговыеДанныеБезЦелевогоПоказателя(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ПроцентСкидки.Период КАК Период,
	|	ВТ_ПроцентСкидки.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ПроцентСкидки.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПроцентСкидки.ПоказательТоваров КАК ПоказательТоваров,
	|	ВТ_ПроцентСкидки.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПроцентСкидки.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ЗНАЧЕНИЕ(Перечисление.ПериодичностиРетроБонусов.ПустаяСсылка) КАК ПериодичностьУсловий,
	|	ЛОЖЬ КАК ЗапретНачисленияСверхПлана,
	|	ИСТИНА КАК ПланВыполнен,
	|	ВТ_ПроцентСкидки.ДокументРегистратор КАК ДокументРегистратор,
	|	ВТ_ПроцентСкидки.НомерСтроки КАК НомерСтроки,
	|	ВТ_ПроцентСкидки.Организация КАК Организация,
	|	ВТ_ПроцентСкидки.Контрагент КАК Контрагент,
	|	ВТ_ПроцентСкидки.Партнер КАК Партнер,
	|	ВТ_ПроцентСкидки.Договор КАК Договор,
	|	ВТ_ПроцентСкидки.Соглашение КАК Соглашение,
	|	ВТ_ПроцентСкидки.Номенклатура КАК Номенклатура,
	|	ВТ_ПроцентСкидки.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ПроцентСкидки.Характеристика КАК Характеристика,
	|	ВТ_ПроцентСкидки.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.ВыручкаВзаиморасчеты)
	|			ИЛИ ВТ_ПроцентСкидки.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.СуммаЗакупкиВзаиморасчеты)
	|			ТОГДА ВТ_ПроцентСкидки.ВалютаВзаиморасчетов
	|		ИНАЧЕ ВТ_ПроцентСкидки.ВалютаУсловий
	|	КОНЕЦ КАК Валюта,
	|	&ВыражениеСуммаБезУточнения КАК СуммаПродажи,
	|	&ВыражениеСуммаСНДС КАК СуммаОборотСНДС,
	|	&ВыражениеСуммаБезНДС КАК СуммаОборотБезНДС,
	|	ВТ_ПроцентСкидки.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_ПроцентСкидки.БонусПроцент КАК БонусПроцент,
	|	0 КАК СуммаПлан,
	|	0 КАК КоличествоПлан,
	|	ВТ_ПроцентСкидки.Количество КАК КоличествоДляРасчетаБонуса,
	|	&ВыражениеСуммаБезУточнения КАК РасчетнаяБаза,
	|	ВЫБОР
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.ВыручкаУпрУчет)
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ПроцентСкидки.Сумма * ВТ_ПроцентСкидки.БонусПроцент / 100 КАК ЧИСЛО(31, 2))
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.ВыручкаРеглУчет)
	|			ИЛИ ВТ_ПроцентСкидки.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.СуммаЗакупкиРегУчет)
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ПроцентСкидки.СуммаРегл * ВТ_ПроцентСкидки.БонусПроцент / 100 КАК ЧИСЛО(31, 2))
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.ВыручкаВзаиморасчеты)
	|			ИЛИ ВТ_ПроцентСкидки.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.СуммаЗакупкиВзаиморасчеты)
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ПроцентСкидки.СуммаВВалютеВзаиморасчетов * ВТ_ПроцентСкидки.БонусПроцент / 100 КАК ЧИСЛО(31, 2))
	|		КОГДА ВТ_ПроцентСкидки.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.ВыручкаБазовыеЦены)
	|			ИЛИ ВТ_ПроцентСкидки.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.СуммаЗакупкиБазовыеЦены)
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ПроцентСкидки.Количество * ВТ_ПроцентСкидки.БазоваяЦена * ВТ_ПроцентСкидки.БонусПроцент / 100 КАК ЧИСЛО(31, 2))
	|	КОНЕЦ КАК СуммаБонус,
	|	0 КАК КоличествоПакетов
	|ПОМЕСТИТЬ ВТ_ИтоговыеДанные
	|ИЗ
	|	ВТ_ПроцентСкидки КАК ВТ_ПроцентСкидки";
	
	ПодставитьПолеВыбораСуммаБезУточнения(ТекстЗапроса, "ВТ_ПроцентСкидки");
	ПодставитьПолеВыбораСуммаСНДС(ТекстЗапроса, "ВТ_ПроцентСкидки");
	ПодставитьПолеВыбораСуммаБезНДС(ТекстЗапроса, "ВТ_ПроцентСкидки");
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. НовыеПараметрыУсловийРетроБонусов
//  ПараметрыВарианта - См. НовыеПараметрыВарианта
//  ТекстыЗапросов - Массив Из Строка
//
Процедура ДобавитьТекстЗапросаИтоговыеДанные(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов) Экспорт
	
	ВидыПоказателей = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПоказательТоваров <> ВидыПоказателей.ПакетноеПредложение Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВТ_ДанныеБезЗапретаПревышения.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
		|	ВТ_ДанныеБезЗапретаПревышения.ПоказательТоваров КАК ПоказательТоваров,
		|	ВТ_ДанныеБезЗапретаПревышения.Период КАК Период,
		|	ВТ_ДанныеБезЗапретаПревышения.ПериодРасчета КАК ПериодРасчета,
		|	ВТ_ДанныеБезЗапретаПревышения.ДокументРегистратор КАК ДокументРегистратор,
		|	ВТ_ДанныеБезЗапретаПревышения.НомерСтроки КАК НомерСтроки,
		|	ВТ_ДанныеБезЗапретаПревышения.Организация КАК Организация,
		|	&ПоляУчастники,
		|	ВТ_ДанныеБезЗапретаПревышения.Договор КАК Договор,
		|	ВТ_ДанныеБезЗапретаПревышения.Соглашение КАК Соглашение,
		|	ВТ_ДанныеБезЗапретаПревышения.Номенклатура КАК Номенклатура,
		|	ВТ_ДанныеБезЗапретаПревышения.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ВТ_ДанныеБезЗапретаПревышения.Характеристика КАК Характеристика,
		|	ВТ_ДанныеБезЗапретаПревышения.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
		|	ВТ_ДанныеБезЗапретаПревышения.ПериодичностьНачислений КАК ПериодичностьНачислений,
		|	ВТ_ДанныеБезЗапретаПревышения.ПериодичностьУсловий КАК ПериодичностьУсловий,
		|	ВТ_ДанныеБезЗапретаПревышения.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
		|	ВТ_ДанныеБезЗапретаПревышения.Количество КАК Количество,
		|	ВТ_ДанныеБезЗапретаПревышения.Валюта КАК Валюта,
		|	ВТ_ДанныеБезЗапретаПревышения.СуммаПродажи КАК СуммаПродажи,
		|	ВТ_ДанныеБезЗапретаПревышения.СуммаОборотСНДС КАК СуммаОборотСНДС,
		|	ВТ_ДанныеБезЗапретаПревышения.СуммаОборотБезНДС КАК СуммаОборотБезНДС,
		|	ВТ_ДанныеБезЗапретаПревышения.БонусПроцент КАК БонусПроцент,
		|	ВТ_ДанныеБезЗапретаПревышения.БазоваяЦена КАК БазоваяЦена,
		|	ВТ_ДанныеБезЗапретаПревышения.СуммаПлан КАК СуммаПлан,
		|	ВТ_ДанныеБезЗапретаПревышения.ПланВыполнен КАК ПланВыполнен,
		|	ВТ_ДанныеБезЗапретаПревышения.РасчетнаяБаза КАК РасчетнаяБаза,
		|	ВТ_ДанныеБезЗапретаПревышения.КоличествоПлан КАК КоличествоПлан,
		|	ВТ_ДанныеБезЗапретаПревышения.Количество КАК КоличествоДляРасчетаБонуса,
		|	ВТ_ДанныеБезЗапретаПревышения.СуммаБонус КАК СуммаБонус,
		|	0 КАК КоличествоПакетов
		|ПОМЕСТИТЬ ВТ_ИтоговыеДанные
		|ИЗ
		|	ВТ_ДанныеБезЗапретаПревышения КАК ВТ_ДанныеБезЗапретаПревышения";
		
		ПодставитьПоляПоУчастникам(
			ПараметрыУсловийРетроБонусов,
			ТекстЗапроса,
			"ВТ_ДанныеБезЗапретаПревышения",
			"",
			Истина);
		
	ИначеЕсли ПараметрыУсловийРетроБонусов.РаспределениеПоFIFO Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВТ_ИтоговоеРаспределениеПоФИФО.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.ПоказательТоваров КАК ПоказательТоваров,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.Период КАК Период,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.ПериодРасчета КАК ПериодРасчета,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.ДокументРегистратор КАК ДокументРегистратор,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.НомерСтроки КАК НомерСтроки,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.Организация КАК Организация,
		|	&ПоляУчастники,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.Договор КАК Договор,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.Соглашение КАК Соглашение,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.Номенклатура КАК Номенклатура,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.Характеристика КАК Характеристика,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.ПериодичностьНачислений КАК ПериодичностьНачислений,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.ПериодичностьУсловий КАК ПериодичностьУсловий,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.Количество КАК Количество,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.Валюта КАК Валюта,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.СуммаПродажи КАК СуммаПродажи,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.СуммаОборотСНДС КАК СуммаОборотСНДС,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.СуммаОборотБезНДС КАК СуммаОборотБезНДС,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.БонусПроцент КАК БонусПроцент,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.БазоваяЦена КАК БазоваяЦена,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.СуммаПлан КАК СуммаПлан,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.ПланВыполнен КАК ПланВыполнен,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.РасчетнаяБаза КАК РасчетнаяБаза,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.КоличествоПлан КАК КоличествоПлан,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.КоличествоДляРасчетаБонуса КАК КоличествоДляРасчетаБонуса,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.СуммаБонус КАК СуммаБонус,
		|	ВТ_ИтоговоеРаспределениеПоФИФО.КоличествоПакетов КАК КоличествоПакетов
		|ПОМЕСТИТЬ ВТ_ИтоговыеДанные
		|ИЗ
		|	ВТ_ИтоговоеРаспределениеПоФИФО КАК ВТ_ИтоговоеРаспределениеПоФИФО";
		
		ПодставитьПоляПоУчастникам(
			ПараметрыУсловийРетроБонусов,
			ТекстЗапроса,
			"ВТ_ИтоговоеРаспределениеПоФИФО",
			"",
			Истина);
		
	Иначе
		
		ТекстПодзапросаПланВыполнен =
		"ВЫБРАТЬ
		|	ВТ_ИтоговоеПропорциональноеРаспределение.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.ПоказательТоваров КАК ПоказательТоваров,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.ПериодичностьНачислений КАК ПериодичностьНачислений,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.ПериодичностьУсловий КАК ПериодичностьУсловий,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.Период КАК Период,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.ПериодРасчета КАК ПериодРасчета,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.ДокументРегистратор КАК ДокументРегистратор,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.НомерСтроки КАК НомерСтроки,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.Организация КАК Организация,
		|	&ПоляУчастники,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.Договор КАК Договор,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.Соглашение КАК Соглашение,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.Номенклатура КАК Номенклатура,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.Характеристика КАК Характеристика,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.СуммаПлан КАК СуммаПлан,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.Количество КАК Количество,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.Валюта КАК Валюта,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.СуммаПродажи КАК СуммаПродажи,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.СуммаОборотСНДС КАК СуммаОборотСНДС,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.СуммаОборотБезНДС КАК СуммаОборотБезНДС,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.БазоваяЦена КАК БазоваяЦена,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.БонусПроцент КАК БонусПроцент,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.ПланВыполнен КАК ПланВыполнен,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.РасчетнаяБаза КАК РасчетнаяБаза,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.КоличествоПлан КАК КоличествоПлан,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.КоличествоДляРасчетаБонуса КАК КоличествоДляРасчетаБонуса,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.СуммаБонус КАК СуммаБонус,
		|	ВТ_ИтоговоеПропорциональноеРаспределение.КоличествоПакетов КАК КоличествоПакетов
		|ПОМЕСТИТЬ ВТ_ИтоговыеДанные
		|ИЗ
		|	ВТ_ИтоговоеПропорциональноеРаспределение КАК ВТ_ИтоговоеПропорциональноеРаспределение";
		
		ПодставитьПоляПоУчастникам(
			ПараметрыУсловийРетроБонусов,
			ТекстПодзапросаПланВыполнен,
			"ВТ_ИтоговоеПропорциональноеРаспределение",
			"",
			Истина);
		
		ТекстПодзапросаПланНеВыполнен =
		"ВЫБРАТЬ
		|	ВТ_ДанныеСУчетомПревышенияЛимита.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.ПоказательТоваров КАК ПоказательТоваров,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодичностьНачислений КАК ПериодичностьНачислений,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодичностьУсловий КАК ПериодичностьУсловий,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.Период КАК Период,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.ПериодРасчета КАК ПериодРасчета,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.ДокументРегистратор КАК ДокументРегистратор,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.НомерСтроки КАК НомерСтроки,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.Организация КАК Организация,
		|	&ПоляУчастники,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.Договор КАК Договор,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.Соглашение КАК Соглашение,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.Номенклатура КАК Номенклатура,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.Характеристика КАК Характеристика,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПлан КАК СуммаПлан,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.Количество КАК Количество,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.Валюта КАК Валюта,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаПродажи КАК СуммаПродажи,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаОборотСНДС КАК СуммаОборотСНДС,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.СуммаОборотБезНДС КАК СуммаОборотБезНДС,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.БазоваяЦена КАК БазоваяЦена,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.БонусПроцент КАК БонусПроцент,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.ПланВыполнен КАК ПланВыполнен,
		|	0 КАК РасчетнаяБаза,
		|	ВТ_ДанныеСУчетомПревышенияЛимита.КоличествоПлан КАК КоличествоПлан,
		|	0 КАК КоличествоДляРасчетаБонуса,
		|	0 КАК СуммаБонус,
		|	0 КАК КоличествоПакетов
		|ИЗ
		|	ВТ_ДанныеСУчетомПревышенияЛимита КАК ВТ_ДанныеСУчетомПревышенияЛимита
		|ГДЕ
		|	&УсловиеЗапретНачисленияСверхПлана
		|	И НЕ ВТ_ДанныеСУчетомПревышенияЛимита.ПланВыполнен
		|	И НЕ ВТ_ДанныеСУчетомПревышенияЛимита.РаспределениеПоФИФО";
		
		Если ПараметрыУсловийРетроБонусов.ПоказательТоваров = ВидыПоказателей.ПакетноеПредложение Тогда
			УсловиеЗапретНачисленияСверхПлана = "ИСТИНА";
		Иначе
			УсловиеЗапретНачисленияСверхПлана = "ВТ_ДанныеСУчетомПревышенияЛимита.ЗапретНачисленияСверхПлана";
		КонецЕсли;
		ТекстПодзапросаПланНеВыполнен = СтрЗаменить(
			ТекстПодзапросаПланНеВыполнен, "&УсловиеЗапретНачисленияСверхПлана", УсловиеЗапретНачисленияСверхПлана);
		
		ПодставитьПоляПоУчастникам(
			ПараметрыУсловийРетроБонусов,
			ТекстПодзапросаПланНеВыполнен,
			"ВТ_ДанныеСУчетомПревышенияЛимита",
			"",
			Истина);
		
		ТекстЗапроса = ТекстПодзапросаПланВыполнен
			+ ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении()
			+ ТекстПодзапросаПланНеВыполнен;
		
	КонецЕсли;
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПодставитьПоляПоУчастникам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, ИмяТаблицы, ИмяТаблицыСвязи = "", ПустыеЗначения = Ложь)
	
	ДетализацияРасчетаУчастников = ПараметрыУсловийРетроБонусов.ДетализацияРасчетаУчастников;
	ДетализацииУчастников = Перечисления.ДетализацияРасчетаУчастниковРетроБонусов;
	
	Если ДетализацияРасчетаУчастников = ДетализацииУчастников.ПоКлиенту Тогда
		
		ПоляУчастники = ИмяТаблицы + ".Партнер КАК Партнер";
		Если ПустыеЗначения Тогда
			
			ПоляУчастники = ПоляУчастники + ",
			|ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент";
			
		КонецЕсли;
		
		ПоляСоединенияПоУчастникам = СтрШаблон("%1.Партнер = %2.Партнер", ИмяТаблицы, ИмяТаблицыСвязи);
		ПоляГруппировкиПоУчастникам = ИмяТаблицы + ".Партнер";
		ПоляИндексированияПоУчастникам = "Партнер";
		
	ИначеЕсли ДетализацияРасчетаУчастников = ДетализацииУчастников.ПоКонтрагенту Тогда
		
		ПоляУчастники = ИмяТаблицы + ".Контрагент КАК Контрагент";
		Если ПустыеЗначения Тогда
			
			ПоляУчастники = ПоляУчастники + ",
			|ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка) КАК Партнер";
			
		КонецЕсли;
		
		ПоляСоединенияПоУчастникам = СтрШаблон("%1.Контрагент = %2.Контрагент", ИмяТаблицы, ИмяТаблицыСвязи);
		ПоляГруппировкиПоУчастникам = ИмяТаблицы + ".Контрагент";
		ПоляИндексированияПоУчастникам = "Контрагент";
		
	ИначеЕсли ДетализацияРасчетаУчастников = ДетализацииУчастников.ПоКонтрагентуКлиенту Тогда
		
		ПоляУчастники = СтрШаблон(
			"%1.Контрагент КАК Контрагент,
			|%1.Партнер КАК Партнер",
			ИмяТаблицы);
			
		ПоляСоединенияПоУчастникам = СтрШаблон(
			"%1.Контрагент = %2.Контрагент
			|И %1.Партнер = %2.Партнер",
			ИмяТаблицы,
			ИмяТаблицыСвязи);
		
		ПоляГруппировкиПоУчастникам = СтрШаблон(
			"%1.Контрагент,
			|%1.Партнер",
			ИмяТаблицы);
		
		ПоляИндексированияПоУчастникам =
		"Контрагент,
		|Партнер";
		
	ИначеЕсли ДетализацияРасчетаУчастников = ДетализацииУчастников.ПустаяСсылка() Тогда
		
		ПоляУчастники = "NULL КАК Контрагент";
		ПоляСоединенияПоУчастникам = "ИСТИНА";
		ПоляГруппировкиПоУчастникам = "NULL";
		ПоляИндексированияПоУчастникам = "1";
		
	Иначе
		
		ШаблонОшибки = НСтр("ru = 'Не удалось определить детализацию участников (""%1"") для документа ""%2""'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонОшибки,
			ПараметрыУсловийРетроБонусов.ДетализацияРасчетаУчастниковПредставление,
			ПараметрыУсловийРетроБонусов.ДокументУсловийРетроБонусовПредставление);
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляУчастники", ПоляУчастники);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляСоединенияПоУчастникам", ПоляСоединенияПоУчастникам);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляГруппировкиПоУчастникам", ПоляГруппировкиПоУчастникам);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляИндексированияПоУчастникам", ПоляИндексированияПоУчастникам);
	
КонецПроцедуры

Процедура ПодставитьПоляПоТоварам(ПараметрыУсловийРетроБонусов, ТекстЗапроса, ИмяТаблицы, ИмяТаблицыСвязи = "")
	
	ПоказательТоваров = ПараметрыУсловийРетроБонусов.ПоказательТоваров;
	ВидыПоказателей = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	
	Если ПоказательТоваров = ВидыПоказателей.Количество
	 ИЛИ ПоказательТоваров = ВидыПоказателей.КоличествоСовокупно
	 ИЛИ ПоказательТоваров = ВидыПоказателей.ПакетноеПредложение Тогда
		
		ПоляТоваров = СтрШаблон(
			"%1.Номенклатура КАК Номенклатура,
			|%1.Характеристика КАК Характеристика",
			ИмяТаблицы);
		
		ПоляСоединенияПоТоварам = СтрШаблон(
			"%1.Номенклатура = %2.Номенклатура
			|И %1.Характеристика = %2.Характеристика",
			ИмяТаблицы,
			ИмяТаблицыСвязи);
		
		ПоляГруппировкиПоТоварам = СтрШаблон(
			"%1.Номенклатура,
			|%1.Характеристика",
			ИмяТаблицы);
			
		ПоляИндексированияПоТоварам =
		"Номенклатура,
		|Характеристика";
		
	Иначе
		
		ПоляТоваров = "NULL КАК Номенклатура";
		ПоляСоединенияПоТоварам = "ИСТИНА";
		ПоляГруппировкиПоТоварам = "NULL";
		ПоляИндексированияПоТоварам = "1";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляТоваров", ПоляТоваров);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляСоединенияПоТоварам", ПоляСоединенияПоТоварам);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляГруппировкиПоПолямТоваров", ПоляГруппировкиПоТоварам);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляИндексированияПоТоварам", ПоляИндексированияПоТоварам);
	
КонецПроцедуры

Процедура ПодставитьПолеВыбораСуммаБезУточнения(ТекстЗапроса, ИмяТаблицы, ИмяТаблицыБазоваяЦена = "")
	
	ТекстПоля =
	"ВЫБОР
	|	КОГДА &ИмяТаблицы.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.ВыручкаУпрУчет)
	|		ТОГДА &ИмяТаблицы.Сумма
	|	КОГДА &ИмяТаблицы.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.ВыручкаРеглУчет)
	|		ИЛИ &ИмяТаблицы.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.СуммаЗакупкиРегУчет)
	|		ТОГДА &ИмяТаблицы.СуммаРегл
	|	КОГДА &ИмяТаблицы.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.ВыручкаВзаиморасчеты)
	|		ИЛИ &ИмяТаблицы.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.СуммаЗакупкиВзаиморасчеты)
	|		ТОГДА &ИмяТаблицы.СуммаВВалютеВзаиморасчетов
	|	КОГДА &ИмяТаблицы.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.ВыручкаБазовыеЦены)
	|		ИЛИ &ИмяТаблицы.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.СуммаЗакупкиБазовыеЦены)
	|		ТОГДА ЕСТЬNULL(&ТаблицаБазоваяЦена.БазоваяЦена, 0) * &ИмяТаблицы.Количество
	|КОНЕЦ";
	
	Если ИмяТаблицыБазоваяЦена = "" Тогда
		ИмяТаблицыБазоваяЦена = ИмяТаблицы;
	КонецЕсли;
	ТекстПоля = СтрЗаменить(ТекстПоля, "&ИмяТаблицы", ИмяТаблицы);
	ТекстПоля = СтрЗаменить(ТекстПоля, "&ТаблицаБазоваяЦена", ИмяТаблицыБазоваяЦена);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеСуммаБезУточнения", ТекстПоля);
	
КонецПроцедуры

Процедура ПодставитьПолеВыбораСуммаСНДС(ТекстЗапроса, ИмяТаблицы, ИмяТаблицыБазоваяЦена = "")
	
	ТекстПоля =
	"ВЫБОР
	|	КОГДА &ИмяТаблицы.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.ВыручкаУпрУчет)
	|		ТОГДА &ИмяТаблицы.СуммаОборотУпрСНДС
	|	КОГДА &ИмяТаблицы.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.ВыручкаРеглУчет)
	|		ИЛИ &ИмяТаблицы.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.СуммаЗакупкиРегУчет)
	|		ТОГДА &ИмяТаблицы.СуммаОборотРеглСНДС
	|	КОГДА &ИмяТаблицы.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.ВыручкаВзаиморасчеты)
	|		ИЛИ &ИмяТаблицы.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.СуммаЗакупкиВзаиморасчеты)
	|		ТОГДА &ИмяТаблицы.СуммаВВалютеВзаиморасчетов
	|	КОГДА &ИмяТаблицы.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.ВыручкаБазовыеЦены)
	|		ИЛИ &ИмяТаблицы.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.СуммаЗакупкиБазовыеЦены)
	|		ТОГДА ЕСТЬNULL(&ТаблицаБазоваяЦена.БазоваяЦена, 0) * &ИмяТаблицы.Количество
	|КОНЕЦ";
	
	Если ИмяТаблицыБазоваяЦена = "" Тогда
		ИмяТаблицыБазоваяЦена = ИмяТаблицы;
	КонецЕсли;
	ТекстПоля = СтрЗаменить(ТекстПоля, "&ИмяТаблицы", ИмяТаблицы);
	ТекстПоля = СтрЗаменить(ТекстПоля, "&ТаблицаБазоваяЦена", ИмяТаблицыБазоваяЦена);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеСуммаСНДС", ТекстПоля);
	
КонецПроцедуры

Процедура ПодставитьПолеВыбораСуммаБезНДС(ТекстЗапроса, ИмяТаблицы, ИмяТаблицыБазоваяЦена = "")
	
	ТекстПоля =
	"ВЫБОР
	|	КОГДА &ИмяТаблицы.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.ВыручкаУпрУчет)
	|		ТОГДА &ИмяТаблицы.СуммаОборотУпрБезНДС
	|	КОГДА &ИмяТаблицы.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.ВыручкаРеглУчет)
	|		ИЛИ &ИмяТаблицы.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.СуммаЗакупкиРегУчет)
	|		ТОГДА &ИмяТаблицы.СуммаОборотРеглБезНДС
	|	КОГДА &ИмяТаблицы.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.ВыручкаВзаиморасчеты)
	|		ИЛИ &ИмяТаблицы.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.СуммаЗакупкиВзаиморасчеты)
	|		ТОГДА &ИмяТаблицы.СуммаОборотВВалютеВзаиморасчетовБезНДС
	|	КОГДА &ИмяТаблицы.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.ВыручкаБазовыеЦены)
	|		ИЛИ &ИмяТаблицы.БазаРасчета = ЗНАЧЕНИЕ(Перечисление.БазыРасчетаРетроБонусов.СуммаЗакупкиБазовыеЦены)
	|		ТОГДА ЕСТЬNULL(&ТаблицаБазоваяЦена.БазоваяЦена, 0) * &ИмяТаблицы.Количество
	|КОНЕЦ";
	
	Если ИмяТаблицыБазоваяЦена = "" Тогда
		ИмяТаблицыБазоваяЦена = ИмяТаблицы;
	КонецЕсли;
	ТекстПоля = СтрЗаменить(ТекстПоля, "&ИмяТаблицы", ИмяТаблицы);
	ТекстПоля = СтрЗаменить(ТекстПоля, "&ТаблицаБазоваяЦена", ИмяТаблицыБазоваяЦена);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеСуммаБезНДС", ТекстПоля);
	
КонецПроцедуры

Функция ЗначениеПустойСсылкиРегистратора(ПараметрыУсловийРетроБонусов)
	
	Если ПараметрыУсловийРетроБонусов.РасчетБонусовПоставщиков
	   И ПараметрыУсловийРетроБонусов.ТипБонуса = Перечисления.ТипыРетроБонусовПоставщиков.Закупки Тогда
		
		Результат = "ЗНАЧЕНИЕ(Документ.РеализацияТоваровУслуг.ПустаяСсылка)";
		
	Иначе
		
		Результат = "ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка)";
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
