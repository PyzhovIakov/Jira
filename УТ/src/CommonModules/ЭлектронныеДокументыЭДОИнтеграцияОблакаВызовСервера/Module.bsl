// @strict-types

#Область СлужебныеПроцедурыИФункции

#Область ОбработкаРезультатаВыполненияДействийЭДО

#Область ОжиданиеВыполненияДействийЭДО

// Параметры:
//  АдресаРезультатов - см. ИнтеграцияОблачногоЭДОКлиент.АдресаРезультатовАсинхронныхОпераций
// 
// Возвращаемое значение:
//  См. ЭлектронныеДокументыЭДОИнтеграцияОблака.НовыеРезультатыДействийПоУчетнымЗаписямОблачногоЭДО
Функция РезультатыДействийЭДОАсинхронно(Знач АдресаРезультатов) Экспорт
	
	РезультатыДействийЭДО = ЭлектронныеДокументыЭДОИнтеграцияОблака.НовыеРезультатыДействийПоУчетнымЗаписямОблачногоЭДО();
	
	КонтекстДиагностики = ОбработкаНеисправностейБЭД.НовыйКонтекстДиагностики();
	
	Для Каждого АдресРезультата Из АдресаРезультатов Цикл
		УчетнаяЗаписьОблачногоЭДО = АдресРезультата.Ключ;
		АдресВоВременномХранилище = АдресРезультата.Значение;
		
		РезультатыМетодовОперации = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище); // См. ЭлектронныеДокументыЭДОИнтеграцияОблака.ОбработатьРезультатыПакетаМетодовПоДействиямЭДО.РезультатыМетодовОперации
		УдалитьИзВременногоХранилища(АдресВоВременномХранилище);
		
		РезультатДействийПоУчетнойЗаписи = ЭлектронныеДокументыЭДОИнтеграцияОблака.НовыйРезультатДействийЭДО();
		
		ПакетМетодовПовторно = ИнтеграцияОблачногоЭДО.НовыйПакетМетодовСервиса();
		ЭлектронныеДокументыЭДОИнтеграцияОблака.ОбработатьРезультатыПакетаМетодовПоДействиямЭДО(
			РезультатыМетодовОперации, РезультатДействийПоУчетнойЗаписи, КонтекстДиагностики, ПакетМетодовПовторно);
		
		РезультатыДействийЭДО.Вставить(УчетнаяЗаписьОблачногоЭДО, РезультатДействийПоУчетнойЗаписи);
	КонецЦикла;
	
	Возврат РезультатыДействийЭДО;
		
КонецФункции

#КонецОбласти

#Область ЗаполнениеДанныхДляПодписанияПоВыбраннымСертификатам

// Параметры:
//  ДанныеДляЗаполненияПоУчетнымЗаписям - см. ЭлектронныеДокументыЭДОИнтеграцияОблака.ЗаполнитьДанныеДляПодписанияПоВыбраннымСертификатам.ДанныеДляЗаполненияПоУчетнымЗаписям
//  
// Возвращаемое значение:
//  См. ДлительныеОперации.ВыполнитьФункцию
//
Функция ЗаполнитьДанныеДляПодписанияПоВыбраннымСертификатамВФоне(Знач ДанныеДляЗаполненияПоУчетнымЗаписям) Экспорт
	
	ПараметрыВыполненияВФоне = ДлительныеОперации.ПараметрыВыполненияФункции(Новый УникальныйИдентификатор);
	
	// См. ЭлектронныеДокументыЭДОИнтеграцияОблака.ЗаполнитьДанныеДляПодписанияПоВыбраннымСертификатам
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполненияВФоне,
		"ЭлектронныеДокументыЭДОИнтеграцияОблака.ЗаполнитьДанныеДляПодписанияПоВыбраннымСертификатам",
		ДанныеДляЗаполненияПоУчетнымЗаписям);
	
	Возврат ДлительнаяОперация;
	
КонецФункции

// Параметры:
//  АдресРезультата - Строка
// 
// Возвращаемое значение:
//  См. ЭлектронныеДокументыЭДОИнтеграцияОблака.ЗаполнитьДанныеДляПодписанияПоВыбраннымСертификатам
Функция РезультатЗаполненияДанныхДляПодписанияПоВыбраннымСертификатамВФоне(Знач АдресРезультата) Экспорт
	РезультатЗаполнения = ПолучитьИзВременногоХранилища(АдресРезультата); // См. РезультатЗаполненияДанныхДляПодписанияПоВыбраннымСертификатамВФоне
	УдалитьИзВременногоХранилища(АдресРезультата);
	Возврат РезультатЗаполнения;
КонецФункции

// Параметры:
//  АдресаРезультатов - см. ИнтеграцияОблачногоЭДОКлиент.АдресаРезультатовАсинхронныхОпераций
// 
// Возвращаемое значение:
//  Структура:
//  * ЗаполненныеДанныеПоУчетнымЗаписям - Соответствие из КлючИЗначение:
//  ** Ключ - Строка - идентификатор учетной записи облачного ЭДО.
//  ** Значение - см. ОбработатьРезультатЗаполненияДанныхДляПодписанияПоВыбраннымСертификатам
//  * КонтекстДиагностики - см. ОбработкаНеисправностейБЭД.НовыйКонтекстДиагностики
Функция РезультатЗаполненияДанныхДляПодписанияПоВыбраннымСертификатамАсинхронно(Знач АдресаРезультатов) Экспорт
	
	ЗаполненныеДанныеПоУчетнымЗаписям = Новый Соответствие;
	КонтекстДиагностики = ОбработкаНеисправностейБЭД.НовыйКонтекстДиагностики();
	
	РезультатЗаполнения = Новый Структура;
	РезультатЗаполнения.Вставить("ЗаполненныеДанныеПоУчетнымЗаписям", ЗаполненныеДанныеПоУчетнымЗаписям);
	РезультатЗаполнения.Вставить("КонтекстДиагностики", КонтекстДиагностики);
	
	Для Каждого АдресРезультата Из АдресаРезультатов Цикл
		ИдентификаторУчетныйЗаписи = АдресРезультата.Ключ;
		АдресВоВременномХранилище = АдресРезультата.Значение;
		
		РезультатЗаполненияДанных = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище); // См. ЭлектронныеДокументыЭДОИнтеграцияОблака.ОбработатьРезультатЗаполненияДанныхДляПодписанияПоВыбраннымСертификатам.РезультатЗаполненияДанных
		УдалитьИзВременногоХранилища(АдресВоВременномХранилище);
		
		ЗаполненныеДанные = ЭлектронныеДокументыЭДОИнтеграцияОблака.ОбработатьРезультатЗаполненияДанныхДляПодписанияПоВыбраннымСертификатам(
			РезультатЗаполненияДанных, КонтекстДиагностики);
		
		ЗаполненныеДанныеПоУчетнымЗаписям.Вставить(ИдентификаторУчетныйЗаписи, ЗаполненныеДанные);
		
	КонецЦикла;
	
	Возврат РезультатЗаполнения;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецОбласти
