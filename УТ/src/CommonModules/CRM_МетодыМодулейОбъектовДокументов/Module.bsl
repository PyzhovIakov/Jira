
////////////////////////////////////////////////////////////////////////////////
// В данный модуль вынесены методы подсистемы CRM, вызываемые из модулей типовых объектов. 
// Выносить можно только те методы, которые не вызывают стандартные методы типового модуля или обработчики форм. 
// Т.е. вызывают только те методы, что тоже вынесены из типового или не содержат таких вызовов.
// Для каждого объекта необходимо задать свою #Область с именем объекта и модуля, как он называется в метаданных.  
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

Процедура ОбработкаПроведенияДокументов(Источник, Отказ, РежимПроведения) Экспорт
	
	#Область Документ_КоммерческоеПредложениеКлиенту
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.КоммерческоеПредложениеКлиенту") Тогда
		// Инициализация дополнительных свойств для проведения документа.
		CRM_ОбщегоНазначенияСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Источник.Ссылка,
			 Источник.ДополнительныеСвойства);
		
		// Инициализация данных документа.
		CRM_МетодыМодулейМенеджеровДокументов.КПИнициализироватьДанныеДокумента(Источник.Ссылка,
			 Источник.ДополнительныеСвойства);
		
		// Подготовка наборов записей.
		CRM_ОбщегоНазначенияСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(Источник);
		
		CRM_ОбщегоНазначенияСервер.ОтразитьПредложения(Источник.ДополнительныеСвойства, Источник.Движения, Отказ);
		
		// Запись наборов записей.
		CRM_ОбщегоНазначенияСервер.ЗаписатьНаборыЗаписей(Источник);
		
		Источник.ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	#КонецОбласти
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаУдаленияПроведенияДокументов(Источник, Отказ) Экспорт
	#Область Документ_КоммерческоеПредложениеКлиенту
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.КоммерческоеПредложениеКлиенту") Тогда
		// Инициализация дополнительных свойств для проведения документа.
		CRM_ОбщегоНазначенияСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Источник.Ссылка,
			 Источник.ДополнительныеСвойства);
		
		// Подготовка наборов записей
		CRM_ОбщегоНазначенияСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(Источник);
		
		// Запись наборов записей
		CRM_ОбщегоНазначенияСервер.ЗаписатьНаборыЗаписей(Источник);
		#КонецОбласти
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполненияДокументов(Источник, Отказ, ПроверяемыеРеквизиты) Экспорт
	#Область Документ_КоммерческоеПредложениеКлиенту
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.КоммерческоеПредложениеКлиенту") Тогда
		// Инициализация дополнительных свойств для проведения документа.
		Если CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
			Если Источник.Статус = ПредопределенноеЗначение("Перечисление.СтатусыКоммерческихПредложенийКлиентам.Отменено") Тогда
				ПроверяемыеРеквизиты.Добавить("CRM_ПричинаОтказа");
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	#КонецОбласти
	
	#Область Документ_Анкета	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.Анкета") Тогда
		Если ЗначениеЗаполнено(Источник.CRM_ШаблонАнкеты) Тогда
			// Не надо проверять Опрос
			ИндексОпроса = ПроверяемыеРеквизиты.Найти("Опрос");
			Если НЕ (ИндексОпроса = Неопределено) Тогда
				ПроверяемыеРеквизиты.Удалить(ИндексОпроса);			
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	#КонецОбласти
КонецПроцедуры

#Область Документ_ЭлектронноеПисьмоИсходящее_МодульОбъекта

Функция ПолучитьОсновногоОтветственного() Экспорт
	
	Результат = "";
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	НастройкиПользователей.Значение КАК Значение
	|ИЗ
	|	РегистрСведений.CRM_НастройкиПользователей КАК НастройкиПользователей
	|ГДЕ
	|	НастройкиПользователей.Пользователь = &Пользователь
	|	И НастройкиПользователей.Настройка = &Настройка";
	
	Запрос.УстановитьПараметр("Пользователь", Пользователи.ТекущийПользователь());
	Запрос.УстановитьПараметр("Настройка", ПланыВидовХарактеристик.CRM_НастройкиПользователей.ОсновнойОтветственный);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Результат = Выборка.Значение;
		Прервать;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьТемуПисьма(ИсходнаяСтрока, ДобавлятьКТеме) Экспорт
	
	НоваяТема = ИсходнаяСтрока;
	
	ПрефиксТемыПисьма = СокрЛП(ДобавлятьКТеме);
	ПрефиксОтвета    = "Re:";
	ПрефиксПересылки = "Fw:";
	
	ПрефиксОтветаКороткий = "";  // "Re"
	ПрефиксПересылкиКороткий = "";  // "Fw"
	ПрефиксТемыПисьмаКороткий = "";
	
	Если Прав(ПрефиксОтвета, 1) = ":" Тогда
		ПрефиксОтветаКороткий = Лев(ПрефиксОтвета, СтрДлина(ПрефиксОтвета) - 1);
	КонецЕсли;	
	
	Если Прав(ПрефиксПересылки, 1) = ":" Тогда
		ПрефиксПересылкиКороткий = Лев(ПрефиксПересылки, СтрДлина(ПрефиксПересылки) - 1);
	КонецЕсли;	
	
	Если Прав(ПрефиксТемыПисьма, 1) = ":" Тогда
		ПрефиксТемыПисьмаКороткий = Лев(ПрефиксТемыПисьма, СтрДлина(ПрефиксТемыПисьма) - 1);
	КонецЕсли;	
	
	Тема = СокрЛП(ИсходнаяСтрока);
	ТемаНРег = НРег(Тема);
	
	// Префиксы корректны (в них есть ":") и начало письма начинается с префикса - тогда свернем префиксы.
	// - иначе просто добавим префикс.
	Если ЗначениеЗаполнено(ПрефиксОтветаКороткий) И ЗначениеЗаполнено(ПрефиксПересылкиКороткий)
		 И ЗначениеЗаполнено(ПрефиксТемыПисьмаКороткий) 
		 И (СтрНайти(ТемаНРег, НРег(ПрефиксОтветаКороткий)) = 1 
		 Или СтрНайти(ТемаНРег, НРег(ПрефиксПересылкиКороткий)) = 1) Тогда
		 
		Если СтрНайти(Тема, ПрефиксОтветаКороткий + "[") = 1
			Или СтрНайти(Тема, ПрефиксПересылкиКороткий + "[") = 1 Тогда // новое письмо - начинается на "Re["
			
			Если ПрефиксТемыПисьма = ПрефиксОтвета И СтрНайти(Тема, ПрефиксОтветаКороткий + "[") = 1 Тогда
				
				НачалоСкобки = НайтиПосле(Тема, "[", СтрДлина(ПрефиксОтветаКороткий));
				КонецСкобки = НайтиПосле(Тема, "]", СтрДлина(ПрефиксОтветаКороткий));
				Если НачалоСкобки <> 0 И КонецСкобки <> 0 Тогда
					
					ТекстВСкобках = Сред(Тема, НачалоСкобки + 1, КонецСкобки - НачалоСкобки - 1);
					ЧислоВСкобках = 0;
					
					Попытка
						ЧислоВСкобках = Число(ТекстВСкобках);
						ЧислоВСкобках = ЧислоВСкобках + 1; 
						ОкончаниеТемы = Сред(Тема, КонецСкобки + 2);
						
						НоваяТема = 
							СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								"%1[%2]: %3", 
								ПрефиксОтветаКороткий, 
								Строка(ЧислоВСкобках), 
								СокрЛ(ОкончаниеТемы));
						
					Исключение   // внутри ТекстВСкобках могло быть и не число
						НоваяТема = ПрефиксТемыПисьма + " " + СокрЛП(ИсходнаяСтрока);			
					КонецПопытки;	
					
				Иначе // нет закрывающей скобки ]	
					НоваяТема = ПрефиксТемыПисьма + " " + СокрЛП(ИсходнаяСтрока);			
				КонецЕсли;				
				
			ИначеЕсли ПрефиксТемыПисьма = ПрефиксПересылки 
				И СтрНайти(Тема, ПрефиксПересылкиКороткий + "[") = 1 Тогда
				
				НачалоСкобки = НайтиПосле(Тема, "[", СтрДлина(ПрефиксПересылкиКороткий));
				КонецСкобки = НайтиПосле(Тема, "]", СтрДлина(ПрефиксПересылкиКороткий));
				Если НачалоСкобки <> 0 И КонецСкобки <> 0 Тогда
					
					ТекстВСкобках = Сред(Тема, НачалоСкобки + 1, КонецСкобки - НачалоСкобки - 1);
					
					Попытка
						ЧислоВСкобках = Число(ТекстВСкобках);
						ЧислоВСкобках = ЧислоВСкобках + 1; 
						ОкончаниеТемы = Сред(Тема, КонецСкобки + 2);
						
						НоваяТема = 
							СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								"%1[%2]: %3", 
								ПрефиксПересылкиКороткий, 
								Строка(ЧислоВСкобках), 
								Сред(Тема, КонецСкобки + 2));
							
					Исключение   // внутри ТекстВСкобках могло быть и не число
						НоваяТема = ПрефиксТемыПисьма + " " + СокрЛП(ИсходнаяСтрока);			
					КонецПопытки;	
					
				Иначе // нет закрывающей скобки ]	
					НоваяТема = ПрефиксТемыПисьма + " " + СокрЛП(ИсходнаяСтрока);			
				КонецЕсли;				
				
			Иначе // не совпадает префикс и начало темы	 - просто добавим префикс в начало
				НоваяТема = ПрефиксТемыПисьма + " " + СокрЛП(ИсходнаяСтрока);
			КонецЕсли;	
			
		Иначе // старое письмо - без "Re[5]"
			
			НоваяТема = ПрефиксТемыПисьма + " " + СокрЛП(ИсходнаяСтрока);
			НоваяТема = СвернутьПрефиксыВТеме(
				НоваяТема, 
				ПрефиксТемыПисьма, ПрефиксТемыПисьмаКороткий, 
				ПрефиксОтвета, ПрефиксПересылки,
				ПрефиксОтветаКороткий, ПрефиксПересылкиКороткий);
			
		КонецЕсли;	 
		
	Иначе	
		
		НоваяТема = ПрефиксТемыПисьма + " " + СокрЛП(ИсходнаяСтрока);
		
	КонецЕсли;	
	
	Возврат НоваяТема;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СвернутьПрефиксыВТеме(Тема, ПрефиксТемыПисьма, ПрефиксТемыПисьмаКороткий, 
				ПрефиксОтвета, ПрефиксПересылки,
				ПрефиксОтветаКороткий, ПрефиксПересылкиКороткий)
				
	НоваяТема = "";
	Позиция = 0;
	
	ТемаНРег = НРег(Тема);
	ПрефиксОтветаНРег = НРег(ПрефиксОтвета);
	ПрефиксОтветаКороткийНРег = НРег(ПрефиксОтветаКороткий);
	ПрефиксПересылкиНРег = НРег(ПрефиксПересылки);
	
	СчетчикОтветов = 0;
	СчетчикПересылок = 0;
	
	СчетчикЦикла = 0;
	
	Пока Истина Цикл
		
		СчетчикЦикла = СчетчикЦикла + 1;
		Если СчетчикЦикла > 100 Тогда // произошло зацикливание
			НоваяТема = Тема; 
			Возврат НоваяТема;
		КонецЕсли;	
		
		Если СчетчикОтветов = 0 И СчетчикПересылок = 0 Тогда // начало темы
			
			НайденоОтвет = НайтиПосле(ТемаНРег, ПрефиксОтветаНРег, Позиция);
			НайденоПересылка = НайтиПосле(ТемаНРег, ПрефиксПересылкиНРег, Позиция);
			
			НачатьСОтветов = Неопределено;
			Если НайденоОтвет <> 0 
				И (НайденоОтвет = Позиция Или НайденоОтвет = Позиция + 1 Или НайденоОтвет = Позиция + 2) И 
				НайденоПересылка <> 0 
				И (НайденоПересылка = Позиция Или НайденоПересылка = Позиция + 1 Или НайденоПересылка = Позиция + 2) Тогда
				
				Если НайденоОтвет < НайденоПересылка Тогда
					НачатьСОтветов = Истина;
				Иначе	
					НачатьСОтветов = Ложь;
				КонецЕсли;		
				
			КонецЕсли;	
			
			Если НайденоОтвет <> 0 
				И (НайденоОтвет = Позиция Или НайденоОтвет = Позиция + 1 Или НайденоОтвет = Позиция + 2) 
				И (НачатьСОтветов = Неопределено Или НачатьСОтветов = Истина) Тогда
				
				СчетчикОтветов = СчетчикОтветов + 1;
				Позиция = НайденоОтвет + СтрДлина(ПрефиксОтветаНРег) - 1;
				
			ИначеЕсли НайденоПересылка <> 0 И (НайденоПересылка = Позиция 
				Или НайденоПересылка = Позиция + 1 Или НайденоПересылка = Позиция + 2)
				И (НачатьСОтветов = Неопределено Или НачатьСОтветов = Ложь) Тогда
				
				СчетчикПересылок = СчетчикПересылок + 1;
				Позиция = НайденоПересылка + СтрДлина(ПрефиксПересылкиНРег) - 1;
				
			Иначе
				
				ОкончаниеТемы = Сред(Тема, Позиция);
				Если Лев(ОкончаниеТемы, 1) = ":" Тогда
					ОкончаниеТемы = Сред(ОкончаниеТемы, 2);
				КонецЕсли;
				
				НоваяТема = НоваяТема + СокрЛ(ОкончаниеТемы);
				Прервать;
				
			КонецЕсли;	
			
		КонецЕсли;		
		
		Если СчетчикОтветов <> 0 Тогда // ищем ответы  
			
			Найдено = НайтиПосле(ТемаНРег, ПрефиксОтветаНРег, Позиция);
			
			// нашли - сразу за этим блоком идет такой же
			Если Найдено = Позиция Или Найдено = Позиция + 1 Или Найдено = Позиция + 2 Тогда
				СчетчикОтветов = СчетчикОтветов + 1;
				Позиция = Найдено + СтрДлина(ПрефиксОтветаНРег) - 1;
			Иначе
				Найдено = НайтиПосле(ТемаНРег, ПрефиксОтветаКороткийНРег + "[", Позиция);
				Если Найдено = Позиция Или Найдено = Позиция + 1 Или Найдено = Позиция + 2 Тогда
					Попытка
						Позиция = НайтиПосле(ТемаНРег, "]:", Найдено);
						СчетчикОтветов = СчетчикОтветов + Число(Сред(ТемаНРег, Найдено + 3, Позиция - Найдено - 3));
						Позиция = Позиция + 2;
					Исключение
						Если СчетчикОтветов > 1 Тогда
							НоваяТема = 
								СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									"%1%2[%3]: ", 
									НоваяТема, 
									ПрефиксОтветаКороткий, 
									Строка(СчетчикОтветов));
						Иначе
							НоваяТема = НоваяТема + ПрефиксОтвета + " ";
						КонецЕсли;	
						
						СчетчикОтветов = 0;
					КонецПопытки;
				Иначе // прекратилась последовательность блоков ответа
				
					Если СчетчикОтветов > 1 Тогда
						НоваяТема = 
							СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								"%1%2[%3]: ", 
								НоваяТема, 
								ПрефиксОтветаКороткий, 
								Строка(СчетчикОтветов));
					Иначе
						НоваяТема = НоваяТема + ПрефиксОтвета + " ";
					КонецЕсли;	
					
					СчетчикОтветов = 0;
				
				КонецЕсли;		
			КонецЕсли;		
			
		ИначеЕсли СчетчикПересылок <> 0 Тогда // ищем пересылки
			
			Найдено = НайтиПосле(ТемаНРег, ПрефиксПересылкиНРег, Позиция);
			
			// нашли - сразу за этим блоком идет такой же
			Если Найдено = Позиция Или Найдено = Позиция + 1 Или Найдено = Позиция + 2 Тогда
				
				СчетчикПересылок = СчетчикПересылок + 1;
				Позиция = Найдено + СтрДлина(ПрефиксПересылкиНРег) - 1;
				
			Иначе // прекратилась последовательность блоков пересылки
				
				Если СчетчикПересылок > 1 Тогда
					НоваяТема = 
						СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							"%1%2[%3]: ", 
							НоваяТема, 
							ПрефиксПересылкиКороткий, 
							Строка(СчетчикПересылок));
				Иначе
					НоваяТема = НоваяТема + ПрефиксПересылки + " ";
				КонецЕсли;	
				
				СчетчикПересылок = 0;
				
			КонецЕсли;		
			
		КонецЕсли;	
		
	КонецЦикла;
	
	Возврат НоваяТема;
	
КонецФункции	

// Ищет подстроку в строке, после указанной позиции
//
Функция НайтиПосле(Строка, Подстрока, НачальнаяПозиция = 0)
	
	Если СтрДлина(Строка) <= НачальнаяПозиция Тогда
		Возврат 0;
	КонецЕсли;
	
	Позиция = СтрНайти(Строка, Подстрока, НаправлениеПоиска.СНачала, НачальнаяПозиция + 1);
	Возврат Позиция;
	
КонецФункции

#КонецОбласти