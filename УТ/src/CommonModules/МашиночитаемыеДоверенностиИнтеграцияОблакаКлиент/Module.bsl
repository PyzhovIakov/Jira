// @strict-types


#Область СлужебныйПрограммныйИнтерфейс

// Параметры:
//  Доверенности - Массив из ОпределяемыйТип.МашиночитаемаяДоверенность
//  ФормаВладелец - Неопределено,ФормаКлиентскогоПриложения
Процедура ВыгрузитьВОблачныйЭДО(Доверенности, ФормаВладелец = Неопределено) Экспорт
	
	КонтекстВыгрузки = НовыйКонтекстВыгрузкиДоверенностей();
	КонтекстВыгрузки.Доверенности = Доверенности;
	
	Если ТипЗнч(ФормаВладелец) = Тип("ФормаКлиентскогоПриложения") Тогда
		КонтекстВыгрузки.ФормаВладелец = ФормаВладелец;
		КонтекстВыгрузки.ИдентификаторФормы = ФормаВладелец.УникальныйИдентификатор;
	КонецЕсли;
	
	ДлительнаяОперация =
		МашиночитаемыеДоверенностиИнтеграцияОблакаВызовСервера.ВыгрузитьВФонеДляЕдинственнойУчетнойЗаписиОблачногоЭДО(
			КонтекстВыгрузки.Доверенности, КонтекстВыгрузки.ИдентификаторФормы);
	
	Если ДлительнаяОперация = Неопределено Тогда
		Оповещение = Новый ОписаниеОповещения("ВыгрузитьПослеВыбораУчетныхЗаписейОблачногоЭДО",
			ЭтотОбъект, КонтекстВыгрузки);
		ЗаголовокФормы = НСтр("ru = 'Выбор учетных записей для выгрузки доверенности.'");
		ИнтеграцияОблачногоЭДОКлиент.ОткрытьВыборУчетныхЗаписейОблачногоЭДО(Оповещение,
			КонтекстВыгрузки.ФормаВладелец, ЗаголовокФормы);
	Иначе
		Оповещение = Новый ОписаниеОповещения("ВыгрузитьВОблачныйЭДОЗавершение", ЭтотОбъект, КонтекстВыгрузки);
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(КонтекстВыгрузки.ФормаВладелец);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ВыгрузитьВОблачныйЭДО

// Возвращаемое значение:
//  Структура:
//  * Доверенности - Массив из ОпределяемыйТип.МашиночитаемаяДоверенность
//  * ФормаВладелец - Неопределено,ФормаКлиентскогоПриложения
//  * ИдентификаторФормы - Неопределено,УникальныйИдентификатор
Функция НовыйКонтекстВыгрузкиДоверенностей()
	Контекст = Новый Структура;
	Контекст.Вставить("Доверенности", Новый Массив);
	Контекст.Вставить("ФормаВладелец", Неопределено);
	Контекст.Вставить("ИдентификаторФормы", Неопределено);
	Возврат Контекст;
КонецФункции

// Параметры:
//  УчетныеЗаписиОблачногоЭДО - Неопределено,Массив из СправочникСсылка.УчетныеЗаписиОблачногоЭДО
//  КонтекстВыгрузки - см. НовыйКонтекстВыгрузкиДоверенностей
Процедура ВыгрузитьПослеВыбораУчетныхЗаписейОблачногоЭДО(УчетныеЗаписиОблачногоЭДО, КонтекстВыгрузки) Экспорт
	
	Если Не ЗначениеЗаполнено(УчетныеЗаписиОблачногоЭДО) Тогда
		Возврат;
	КонецЕсли;
	
	ДлительнаяОперация = МашиночитаемыеДоверенностиИнтеграцияОблакаВызовСервера.ВыгрузитьВФоне(
		УчетныеЗаписиОблачногоЭДО, КонтекстВыгрузки.Доверенности, КонтекстВыгрузки.ИдентификаторФормы);
	
	Оповещение = Новый ОписаниеОповещения("ВыгрузитьВОблачныйЭДОЗавершение", ЭтотОбъект, КонтекстВыгрузки);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(КонтекстВыгрузки.ФормаВладелец);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);
	
КонецПроцедуры

// Параметры:
//  ДлительнаяОперация - см. ДлительныеОперации.ВыполнитьФункцию
//  КонтекстВыгрузки - см. НовыйКонтекстВыгрузкиДоверенностей
Процедура ВыгрузитьВОблачныйЭДОЗавершение(ДлительнаяОперация, КонтекстВыгрузки) Экспорт
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		РезультатВыгрузки = ПолучитьИзВременногоХранилища(ДлительнаяОперация.АдресРезультата); // См. МашиночитаемыеДоверенностиИнтеграцияОблака.ВыгрузитьВОблачныйЭДО
		ЕстьОшибки = РезультатВыгрузки.ЕстьОшибки;
		КонтекстДиагностики = РезультатВыгрузки.КонтекстДиагностики;
	Иначе
		ЕстьОшибки = Истина;
		КонтекстДиагностики = ОбработкаНеисправностейБЭДКлиент.НовыйКонтекстДиагностики();
		ТекстОшибки = НСтр("ru = 'Не удалось выгрузить машиночитаемые доверенности в облачный ЭДО.'");
		ПодробныйТекстОшибки = ТекстОшибки;
		Если ЗначениеЗаполнено(ДлительнаяОперация.ПодробноеПредставлениеОшибки) Тогда
			ПодробныйТекстОшибки = ПодробныйТекстОшибки + Символы.ПС + ДлительнаяОперация.ПодробноеПредставлениеОшибки;
		КонецЕсли;
		Если ЗначениеЗаполнено(ДлительнаяОперация.КраткоеПредставлениеОшибки) Тогда
			ТекстОшибки = ТекстОшибки + Символы.ПС + ДлительнаяОперация.КраткоеПредставлениеОшибки;
		КонецЕсли;
		Ошибка = ОбработкаНеисправностейБЭДКлиент.НоваяОшибка(НСтр("ru = 'Выгрузка МЧД в облачный ЭДО.'"),
			ОбработкаНеисправностейБЭДКлиентСервер.ВидОшибкиНеизвестнаяОшибка(), ПодробныйТекстОшибки, ТекстОшибки);
		ПодсистемыБЭД = ОбщегоНазначенияБЭДКлиентСервер.ПодсистемыБЭД();
		ОбработкаНеисправностейБЭДКлиент.ДобавитьОшибку(КонтекстДиагностики, Ошибка,
			ПодсистемыБЭД.ИнтеграцияОблачногоЭДО);
	КонецЕсли;
	
	ТекстОповещения = НСтр("ru = 'Выгрузка МЧД в облачный ЭДО.'");
	Если ЕстьОшибки Тогда
		ТекстПояснения  = НСтр("ru = 'При выгрузке возникли ошибки.'");
		КартинкаОповещения = БиблиотекаКартинок.КрасныйКрестБЭД;
	Иначе
		ТекстПояснения  = НСтр("ru = 'Выгрузка завершена успешно.'");
		КартинкаОповещения = БиблиотекаКартинок.Успешно32;
	КонецЕсли;
	
	ПоказатьОповещениеПользователя(ТекстОповещения,, ТекстПояснения, КартинкаОповещения);
	
	ОбработкаНеисправностейБЭДКлиент.ОбработатьОшибки(КонтекстДиагностики);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
