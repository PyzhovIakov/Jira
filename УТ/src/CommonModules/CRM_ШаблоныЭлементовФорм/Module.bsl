////////////////////////////////////////////////////////////////////////////////
// Механизм создания элементов форм по шаблону
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Создает элементы формы по шаблону
//
// Параметры:
//  Форма						 - ФормаКлиентскогоПриложения	 - Форма, для которой требуется создать элементы
//  АдресОписанияФормыШаблона	 - 	Строка - Адрес во временном хранилище 
//  ИмяГруппыРазмещения			 - 	Строка - Имя группы, в которой требуется разместить новые элементы
//  ИдентификаторШаблона		 - 	Строка - Идентификатор шаблона
//  ОбновлениеГруппы			 - 	ГруппаФормы - Группа формы
//
Процедура СоздатьЭлементыФормыПоШаблону(Форма, АдресОписанияФормыШаблона, ИмяГруппыРазмещения,
	 ИдентификаторШаблона,
	 ОбновлениеГруппы = Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(ИмяГруппыРазмещения) Тогда
		ГруппаРазмещения = Форма.Элементы.Найти(ИмяГруппыРазмещения);
		Если ГруппаРазмещения = Неопределено Тогда
			ОбщегоНазначения.СообщитьПользователю(СтрЗаменить(НСтр("ru = 'Не найдена группа размещения &1. Сообщите администратору.'"),
				 "&1",
				 ИмяГруппыРазмещения));
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ОписаниеФормы = ПолучитьИзВременногоХранилища(АдресОписанияФормыШаблона);
	
	ДобавляемыеРеквизиты = Новый Массив;
	
	Если НЕ ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ШаблоныЭлементов_АдресОписанияФормы" 
		+ ИдентификаторШаблона) Тогда
		Реквизит = Новый РеквизитФормы("ШаблоныЭлементов_АдресОписанияФормы" + ИдентификаторШаблона,
			 Новый ОписаниеТипов("Строка"));
		ДобавляемыеРеквизиты.Добавить(Реквизит);
		
		ИмяТаблицы = "ШаблоныЭлементов_ОписаниеЭлементов" + ИдентификаторШаблона;
		Реквизит = Новый РеквизитФормы(ИмяТаблицы, Новый ОписаниеТипов("ТаблицаЗначений"));
		ДобавляемыеРеквизиты.Добавить(Реквизит);
		Реквизит = Новый РеквизитФормы("ИмяЭлемента", Новый ОписаниеТипов("Строка"), ИмяТаблицы);
		ДобавляемыеРеквизиты.Добавить(Реквизит);
		Реквизит = Новый РеквизитФормы("Действия", Новый ОписаниеТипов("СписокЗначений"), ИмяТаблицы);
		ДобавляемыеРеквизиты.Добавить(Реквизит);
		Реквизит = Новый РеквизитФормы("ПутьКДанным", Новый ОписаниеТипов("Строка"), ИмяТаблицы);
		ДобавляемыеРеквизиты.Добавить(Реквизит);
	КонецЕсли;
	
	Для каждого ОписаниеРеквизита Из ОписаниеФормы.ОписаниеРеквизитов Цикл
		ИмяРеквизита = ОписаниеРеквизита.Имя + ?(ОписаниеРеквизита.Путь = "", ИдентификаторШаблона, "");
		Если НЕ ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма,
			 ?(ОписаниеРеквизита.Путь = "", ИмяРеквизита, ОписаниеРеквизита.Путь 
			+ ИдентификаторШаблона)) Тогда
			Реквизит = Новый РеквизитФормы(ИмяРеквизита, ОписаниеРеквизита.ТипЗначения,
				?(ОписаниеРеквизита.Путь = "", "", ОписаниеРеквизита.Путь + ИдентификаторШаблона), ОписаниеРеквизита.Заголовок);
			ДобавляемыеРеквизиты.Добавить(Реквизит);
		КонецЕсли;
	КонецЦикла;
	
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	Для каждого ОписаниеРеквизита Из ОписаниеФормы.ОписаниеРеквизитов Цикл
		Если ОписаниеРеквизита.Свойство("Значение") Тогда
			Если СтрНачинаетсяС(Строка(ТипЗнч(ОписаниеРеквизита.Значение)), "ДанныеФормы") Тогда
				ЗначениеРеквизита = ДанныеФормыВЗначение(ОписаниеРеквизита.Значение, ОписаниеРеквизита.ТипЗначения.Типы()[0]);
				ЗначениеВДанныеФормы(ЗначениеРеквизита, Форма[ОписаниеРеквизита.Имя + ИдентификаторШаблона]);
			Иначе
				Форма[ОписаниеРеквизита.Имя + ИдентификаторШаблона] = ОписаниеРеквизита.Значение;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Форма["ШаблоныЭлементов_АдресОписанияФормы" + ИдентификаторШаблона] = АдресОписанияФормыШаблона;
	
	Для каждого ОписаниеКоманды Из ОписаниеФормы.ОписаниеКоманд Цикл
		Если Форма.Команды.Найти(ОписаниеКоманды.Имя + ИдентификаторШаблона) = Неопределено Тогда
			Команда = Форма.Команды.Добавить(ОписаниеКоманды.Имя + ИдентификаторШаблона);
			ЗаполнитьЗначенияСвойств(Команда, ОписаниеКоманды, , "Имя, Действие");
			Команда.Действие = "Подключаемый_ШаблоныЭлементов_ВыполнитьКоманду";
		КонецЕсли;
	КонецЦикла;
	
	Если ОбновлениеГруппы = Неопределено Тогда
		СоздатьЭлементыФормы(Форма, ОписаниеФормы.ОписаниеЭлементов, ГруппаРазмещения, ИдентификаторШаблона);
	Иначе
		СоздатьЭлементыФормы(Форма, ОписаниеФормы.ОписаниеЭлементовГруппы, ОбновлениеГруппы, ИдентификаторШаблона);
	КонецЕсли;
	
КонецПроцедуры

// Удаляет элементы формы
//
// Параметры:
//  Форма				 - ФормаКлиентскогоПриложения	 - Форма, для которой требуется создать элементы
//  ИдентификаторШаблона - Строка						 - Идентификатор шаблона
//
Процедура УдалитьЭлементыФормы(Форма, ИдентификаторШаблона) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ИдентификаторШаблона) Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеФормы = ПолучитьИзВременногоХранилища(Форма["ШаблоныЭлементов_АдресОписанияФормы" + ИдентификаторШаблона]);
	Для каждого ОписаниеЭлемента Из ОписаниеФормы.ОписаниеЭлементов Цикл
		Элемент = Форма.Элементы.Найти(ОписаниеЭлемента.Имя + ИдентификаторШаблона);
		Если Элемент <> Неопределено Тогда
			Форма.Элементы.Удалить(Элемент);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого КомандаФормы Из Форма.Команды Цикл
		Если СтрНайти(КомандаФормы.Имя, ИдентификаторШаблона) > 0 Тогда
			Форма.Команды.Удалить(КомандаФормы);
		КонецЕсли;
	КонецЦикла;
	
	УдаляемыеРеквизиты = Новый Массив;
	РеквизитыФормы = Форма.ПолучитьРеквизиты();
	Для каждого РеквизитФормы Из РеквизитыФормы Цикл
		Если СтрНайти(РеквизитФормы.Имя, ИдентификаторШаблона) > 0 Тогда
			УдаляемыеРеквизиты.Добавить(РеквизитФормы.Имя);
		КонецЕсли;
	КонецЦикла;
	Форма.ИзменитьРеквизиты(, УдаляемыеРеквизиты);
	
КонецПроцедуры

// Создает описание формы
//
// Параметры:
//  Форма	 - ФормаКлиентскогоПриложения	 - Форма, для которой требуется создать элементы
//  Группа	 - ГруппаФормы					 - Группа формы
// 
// Возвращаемое значение:
//  Строка - Адрес временного хранилища
//
Функция ОписаниеФормы(Форма, Группа = Неопределено) Экспорт
	
	ОписаниеФормы = Новый Структура;
	
	ОписаниеРеквизитов = Новый Массив;
	ДобавитьОписаниеРеквизитовФормы(ОписаниеРеквизитов, Форма, "");
	ОписаниеФормы.Вставить("ОписаниеРеквизитов", ОписаниеРеквизитов);
	
	ОписаниеКоманд = Новый Массив;
	Для каждого КомандаШаблона Из Форма.Команды Цикл
		
		ОписаниеКоманды = Новый Структура("Действие, Заголовок, ИзменяетСохраняемыеДанные, Имя, ИспользованиеТекущейСтроки,
			|ИспользуемаяТаблица, Картинка, Отображение, Подсказка, СочетаниеКлавиш");
		ЗаполнитьЗначенияСвойств(ОписаниеКоманды, КомандаШаблона);
		ОписаниеКоманд.Добавить(ОписаниеКоманды);
	КонецЦикла;
	ОписаниеФормы.Вставить("ОписаниеКоманд", ОписаниеКоманд);
	
	ОписаниеГруппы = Неопределено;
	ОписаниеФормы.Вставить("ОписаниеЭлементов", ОписаниеЭлементовФормы(Форма.ПодчиненныеЭлементы, Группа, ОписаниеГруппы));
	
	Если ОписаниеГруппы <> Неопределено Тогда
		ОписаниеФормы.Вставить("ОписаниеЭлементовГруппы", ОписаниеГруппы);
	КонецЕсли;
	
	Адрес = ПоместитьВоВременноеХранилище(ОписаниеФормы, Форма.УникальныйИдентификатор);
	Возврат Адрес;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьОписаниеРеквизитовФормы(ОписаниеРеквизитов, Форма, Реквизит)
	РеквизитыШаблона = Форма.ПолучитьРеквизиты(Реквизит);
	Для каждого РеквизитШаблона Из РеквизитыШаблона Цикл
		
		ОписаниеРеквизита = Новый Структура("Заголовок, Имя, Путь, СохраняемыеДанные, ТипЗначения");
		ЗаполнитьЗначенияСвойств(ОписаниеРеквизита, РеквизитШаблона);
		
		Если Реквизит = "" Тогда
			ОписаниеРеквизита.Вставить("Значение", Форма[РеквизитШаблона.Имя]);
		КонецЕсли;
		
		ОписаниеРеквизитов.Добавить(ОписаниеРеквизита);
		
		Путь = ?(Реквизит = "", РеквизитШаблона.Имя, Реквизит + "." + РеквизитШаблона.Имя);
		Если РеквизитШаблона.ТипЗначения = Новый ОписаниеТипов("ТаблицаЗначений")
			 Или РеквизитШаблона.ТипЗначения = Новый ОписаниеТипов("ДеревоЗначений") Тогда
			ДобавитьОписаниеРеквизитовФормы(ОписаниеРеквизитов, Форма, Путь);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция ОписаниеЭлементовФормы(Элементы, Группа = Неопределено, ОписаниеГруппы = Неопределено)
	
	ОписаниеЭлементов = Новый Массив;
		
	Для каждого Элемент Из Элементы Цикл
		
		ОписаниеЭлемента = ОписаниеЭлементаФормы(Элемент);
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Элемент, "ПодчиненныеЭлементы") Тогда
			ОписаниеПодчиненныхЭлементов = ОписаниеЭлементовФормы(Элемент.ПодчиненныеЭлементы, Группа, ОписаниеГруппы);
			ОписаниеЭлемента.Вставить("ОписаниеПодчиненныхЭлементов", ОписаниеПодчиненныхЭлементов);
			Если Группа = Элемент Тогда
				ОписаниеГруппы = ОписаниеПодчиненныхЭлементов;
			КонецЕсли;
		КонецЕсли;
		
		ОписаниеЭлементов.Добавить(ОписаниеЭлемента);
		
	КонецЦикла;
	
	Возврат ОписаниеЭлементов;
	
КонецФункции

Функция ОписаниеЭлементаФормы(Элемент)
	
	ОписаниеЭлемента = Новый Структура;
	
	// Чтобы отличать корневые элементы от остальных для корневых в качестве родителя передаем "Неопределено"
	Если ТипЗнч(Элемент.Родитель) = Тип("ФормаКлиентскогоПриложения") Тогда
		ОписаниеЭлемента.Вставить("Родитель", Неопределено);
	Иначе
		ОписаниеЭлемента.Вставить("Родитель", Элемент.Родитель.Имя);
	КонецЕсли;
	
	// Основные свойства элемента
	ОписаниеЭлемента.Вставить("Имя", Элемент.Имя);
	ОписаниеЭлемента.Вставить("ТипЭлемента", ТипЗнч(Элемент));
	
	// Остальные свойства в зависимости от типа элемента
	Если ТипЗнч(Элемент) = Тип("ГруппаФормы") Тогда
		ДобавитьОписаниеГруппыФормы(ОписаниеЭлемента, Элемент);
		
	ИначеЕсли ТипЗнч(Элемент) = Тип("ТаблицаФормы") Тогда
		ДобавитьОписаниеТаблицыФормы(ОписаниеЭлемента, Элемент);
		
	ИначеЕсли ТипЗнч(Элемент) = Тип("ПолеФормы") Тогда
		ДобавитьОписаниеПоляФормы(ОписаниеЭлемента, Элемент);
		
	ИначеЕсли ТипЗнч(Элемент) = Тип("КнопкаФормы") Тогда
		ДобавитьОписаниеКнопкиФормы(ОписаниеЭлемента, Элемент);
		
	ИначеЕсли ТипЗнч(Элемент) = Тип("ДекорацияФормы") Тогда
		ДобавитьОписаниеДекорацииФормы(ОписаниеЭлемента, Элемент);
		
	КонецЕсли;
	
	Возврат ОписаниеЭлемента;
	
КонецФункции

Процедура ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, ИмяСвойства)
	
	Значение = Элемент[ИмяСвойства];
	ОписаниеЭлемента.Вставить(ИмяСвойства, Значение);
	
КонецПроцедуры

Процедура ДобавитьДействия(ОписаниеЭлемента, Элемент, СписокДействийПоля)
	
	ОписаниеДействий = Новый Массив;
	Для каждого ДействиеПоля Из СписокДействийПоля Цикл
		ТекДействие = Элемент.ПолучитьДействие(ДействиеПоля);
		Если ТекДействие <> "" Тогда
			ОписаниеДействий.Добавить(Новый Структура("Действие, Метод", ДействиеПоля, ТекДействие));
		КонецЕсли;
	КонецЦикла;
	ОписаниеЭлемента.Вставить("ОписаниеДействий", ОписаниеДействий);
	
КонецПроцедуры

#Область ОписаниеГруппыФормы

// Добавляет свойства элемента с типом ГруппаФормы
Процедура ДобавитьОписаниеГруппыФормы(ОписаниеЭлемента, Элемент)
	
	// Основные свойства
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВертикальноеПоложениеВГруппе");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Вид");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Видимость");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Высота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ГоризонтальноеПоложениеВГруппе");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Доступность");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Заголовок");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ОтображениеПодсказки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Подсказка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РазрешитьИзменениеСостава");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоВертикали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоГоризонтали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "СочетаниеКлавиш");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ТолькоПросмотр");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветТекстаЗаголовка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Ширина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ШрифтЗаголовка");
	
	// Добавление особых свойств, существующих в зависимости от вида группы
	Если Элемент.Вид = ВидГруппыФормы.КоманднаяПанель Тогда
		ДобавитьРасширениеКоманднойПанели(ОписаниеЭлемента, Элемент);
		
	ИначеЕсли Элемент.Вид = ВидГруппыФормы.Подменю Тогда
		ДобавитьРасширениеПодменю(ОписаниеЭлемента, Элемент);
		
	ИначеЕсли Элемент.Вид = ВидГруппыФормы.ГруппаКолонок Тогда
		ДобавитьРасширениеГруппыКолонок(ОписаниеЭлемента, Элемент);
		
	ИначеЕсли Элемент.Вид = ВидГруппыФормы.Страницы Тогда
		ДобавитьРасширениеСтраниц(ОписаниеЭлемента, Элемент);
		
	ИначеЕсли Элемент.Вид = ВидГруппыФормы.Страница Тогда
		ДобавитьРасширениеСтраницы(ОписаниеЭлемента, Элемент);
		
	ИначеЕсли Элемент.Вид = ВидГруппыФормы.ОбычнаяГруппа Тогда
		ДобавитьРасширениеОбычнойГруппы(ОписаниеЭлемента, Элемент);
		
	ИначеЕсли Элемент.Вид = ВидГруппыФормы.ГруппаКнопок Тогда
		ДобавитьРасширениеГруппыКнопок(ОписаниеЭлемента, Элемент);
		
	КонецЕсли;
	
КонецПроцедуры

// Добавляет свойства элемента, которые есть только у командной панели
Процедура ДобавитьРасширениеКоманднойПанели(ОписаниеЭлемента, Элемент)
	
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВажностьПриОтображении");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ГоризонтальноеПоложение");
	
КонецПроцедуры

// Добавляет свойства элемента, которые есть только у подменю
Процедура ДобавитьРасширениеПодменю(ОписаниеЭлемента, Элемент)
	
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Картинка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Отображение");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ОтображениеФигуры");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Фигура");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветРамки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветФона");
	
КонецПроцедуры

// Добавляет свойства элемента, которые есть только у командной панели
Процедура ДобавитьРасширениеГруппыКолонок(ОписаниеЭлемента, Элемент)
	
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ГоризонтальноеПоложениеВШапке");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Группировка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "КартинкаШапки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ОтображатьВШапке");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ОтображатьЗаголовок");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ПутьКДаннымШапки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ФиксацияВТаблице");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ФорматШапки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветФонаЗаголовка");
	
КонецПроцедуры

// Добавляет свойства элемента, которые есть только у страниц
Процедура ДобавитьРасширениеСтраниц(ОписаниеЭлемента, Элемент)
	
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ИспользованиеТекущейСтроки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ИспользуемаяТаблица");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ОтображениеСтраниц");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ТекущееСостояниеСтраниц");
	
	ОписаниеЭлемента.Вставить("ТекущаяСтраница", Элемент.ТекущаяСтраница.Имя);
	
КонецПроцедуры

// Добавляет свойства элемента, которые есть только у страницы
Процедура ДобавитьРасширениеСтраницы(ОписаниеЭлемента, Элемент)
	
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВажностьПриОтображении");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВертикальнаяПрокруткаПриСжатии");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВертикальноеПоложениеПодчиненных");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВертикальныйИнтервал");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВыравниваниеЭлементовИЗаголовков");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ГоризонтальноеПоложениеПодчиненных");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ГоризонтальныйИнтервал");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Группировка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Картинка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ОтображатьЗаголовок");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ПутьКДаннымЗаголовка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Формат");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветФона");
	
КонецПроцедуры

// Добавляет свойства элемента, которые есть только у обычной группы
Процедура ДобавитьРасширениеОбычнойГруппы(ОписаниеЭлемента, Элемент)
	
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВажностьПриОтображении");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВертикальноеПоложениеПодчиненных");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВертикальныйИнтервал");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВыравниваниеЭлементовИЗаголовков");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ГоризонтальноеПоложениеПодчиненных");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ГоризонтальныйИнтервал");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Группировка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЗаголовокСвернутогоОтображения");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ИспользованиеТекущейСтроки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ИспользуемаяТаблица");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Объединенная");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ОтображатьЗаголовок");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ОтображатьОтступСлева");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Отображение");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ОтображениеУправления");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Поведение");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ПутьКДаннымЗаголовка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "СквозноеВыравнивание");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Формат");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветФона");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветФонаЗаголовкаСкрытогоОтображения");
	
КонецПроцедуры

// Добавляет свойства элемента, которые есть только у группы кнопок
Процедура ДобавитьРасширениеГруппыКнопок(ОписаниеЭлемента, Элемент)
	
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Отображение");
	
КонецПроцедуры

#КонецОбласти

#Область ОписаниеТаблицыФормы

// Добавляет свойства элемента с типом ТаблицаФормы
Процедура ДобавитьОписаниеТаблицыФормы(ОписаниеЭлемента, Элемент)
	
	// Основные свойства
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоВводНезаполненного");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоВводНовойСтроки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяВысотаВСтрокахТаблицы");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоОтметкаНезаполненного");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АктивизироватьПоУмолчанию");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВажностьПриОтображении");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВариантУправленияВысотой");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВертикальнаяПолосаПрокрутки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВертикальноеПоложениеВГруппе");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВертикальныеЛинии");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Видимость");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Вывод");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Высота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВысотаВСтрокахТаблицы");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВысотаЗаголовка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВысотаПодвала");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВысотаШапки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ГоризонтальнаяПолосаПрокрутки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ГоризонтальноеПоложениеВГруппе");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ГоризонтальныеЛинии");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Доступность");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Заголовок");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ИзменятьПорядокСтрок");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ИзменятьСоставСтрок");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ИспользованиеТекущейСтроки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "КартинкаСтрок");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяВысотаВСтрокахТаблицы");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МножественныйВыбор");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "НачальноеОтображениеДерева");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "НачальноеОтображениеСписка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ОтметкаНезаполненного");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Отображение");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ОтображениеПодсказки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ПоведениеПриСжатииПоГоризонтали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Подвал");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Подсказка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ПоискПриВводе");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ПоложениеЗаголовка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ПоложениеКоманднойПанели");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ПоложениеСостоянияПросмотра");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ПоложениеСтрокиПоиска");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ПоложениеУправленияПоиском");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ПропускатьПриВводе");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ПутьКДанным");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ПутьКДаннымКартинкиСтроки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РазрешитьНачалоПеретаскивания");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РазрешитьПеретаскивание");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоВертикали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоГоризонтали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РежимВводаСтрок");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РежимВыбора");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РежимВыделения");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РежимВыделенияСтроки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "СочетаниеКлавиш");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ТекущаяСтрока");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ТекущийРодитель");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ТекущийЭлемент");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ТолькоПросмотр");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветРамки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветТекста");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветТекстаЗаголовка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветФона");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЧередованиеЦветовСтрок");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Шапка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Ширина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Шрифт");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ШрифтЗаголовка");
	
	// Добавление подчиненных элементов
	ОписаниеЭлемента.Вставить("КоманднаяПанель", ОписаниеЭлементаФормы(Элемент.КоманднаяПанель));
	ОписаниеЭлемента.Вставить("КонтекстноеМеню", ОписаниеЭлементаФормы(Элемент.КонтекстноеМеню));
	
	ДобавитьДействия(ОписаниеЭлемента, Элемент, СписокДействийТаблицы());

КонецПроцедуры

Функция СписокДействийТаблицы()
	
	СписокДействий = Новый Массив;
	СписокДействий.Добавить("ПриИзменении");
	СписокДействий.Добавить("Выбор");
	СписокДействий.Добавить("ПриАктивизацииСтроки");
	СписокДействий.Добавить("ВыборЗначения");
	СписокДействий.Добавить("ПриАктивизацииПоля");
	СписокДействий.Добавить("ПриАктивизацииЯчейки");
	СписокДействий.Добавить("ПередНачаломДобавления");
	СписокДействий.Добавить("ПередНачаломИзменения");
	СписокДействий.Добавить("ПередУдалением");
	СписокДействий.Добавить("ПриНачалеРедактирования");
	СписокДействий.Добавить("ПередОкончаниемРедактирования");
	СписокДействий.Добавить("ПриОкончанииРедактирования");
	СписокДействий.Добавить("ОбработкаВыбора");
	СписокДействий.Добавить("ПередРазворачиванием");
	СписокДействий.Добавить("ПередСворачиванием");
	СписокДействий.Добавить("ПослеУдаления");
	СписокДействий.Добавить("ПриСменеТекущегоРодителя");
	СписокДействий.Добавить("ОбработкаЗаписиНового");
	СписокДействий.Добавить("ОбработкаЗапросаОбновления");
	СписокДействий.Добавить("НачалоПеретаскивания");
	СписокДействий.Добавить("ПроверкаПеретаскивания");
	СписокДействий.Добавить("ОкончаниеПеретаскивания");
	СписокДействий.Добавить("Перетаскивание");
	Возврат СписокДействий;
	
КонецФункции

#КонецОбласти

#Область ОписаниеПоляФормы

// Добавляет свойства элемента с типом ПолеФормы
Процедура ДобавитьОписаниеПоляФормы(ОписаниеЭлемента, Элемент)
	
	// Основные свойства
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоВысотаЯчейки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АктивизироватьПоУмолчанию");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВажностьПриОтображении");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВертикальноеПоложение");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВертикальноеПоложениеВГруппе");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Вид");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Видимость");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВысотаЗаголовка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ГиперссылкаЯчейки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ГоризонтальноеПоложение");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ГоризонтальноеПоложениеВГруппе");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ГоризонтальноеПоложениеВПодвале");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ГоризонтальноеПоложениеВШапке");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Доступность");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Заголовок");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "КартинкаПодвала");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "КартинкаШапки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ОграничениеТипа");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ОтображатьВПодвале");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ОтображатьВШапке");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ОтображениеПодсказки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ОтображениеПредупрежденияПриРедактировании");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Подсказка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ПоложениеЗаголовка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ПредупреждениеПриРедактировании");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ПропускатьПриВводе");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ПутьКДанным");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ПутьКДаннымПодвала");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РежимРедактирования");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "СочетаниеКлавиш");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ТекстПодвала");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ТолькоПросмотр");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ФиксацияВТаблице");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветТекстаЗаголовка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветТекстаПодвала");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветФонаЗаголовка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветФонаПодвала");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ШрифтЗаголовка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ШрифтПодвала");
	
	// Добавляем подчиненные элементы
	ОписаниеЭлемента.Вставить("КонтекстноеМеню", ОписаниеЭлементаФормы(Элемент.КонтекстноеМеню));
	
	// Добавление особых свойств, существующих в зависимости от вида поля
	Если Элемент.Вид = ВидПоляФормы.ПолеВвода Тогда
		ДобавитьРасширениеПоляВвода(ОписаниеЭлемента, Элемент);
		
	ИначеЕсли Элемент.Вид = ВидПоляФормы.ПолеНадписи Тогда
		ДобавитьРасширениеНадписи(ОписаниеЭлемента, Элемент);
		
	ИначеЕсли Элемент.Вид = ВидПоляФормы.ПолеФлажка Тогда
		ДобавитьРасширениеФлажка(ОписаниеЭлемента, Элемент);
		
	ИначеЕсли Элемент.Вид = ВидПоляФормы.ПолеКартинки Тогда
		ДобавитьРасширениеКартинки(ОписаниеЭлемента, Элемент);
		
	ИначеЕсли Элемент.Вид = ВидПоляФормы.ПолеПереключателя Тогда
		ДобавитьРасширениеПереключателя(ОписаниеЭлемента, Элемент);
		
	ИначеЕсли Элемент.Вид = ВидПоляФормы.ПолеКалендаря Тогда
		ДобавитьРасширениеКалендаря(ОписаниеЭлемента, Элемент);
		
	ИначеЕсли Элемент.Вид = ВидПоляФормы.ПолеИндикатора Тогда
		ДобавитьРасширениеИндикатора(ОписаниеЭлемента, Элемент);
		
	ИначеЕсли Элемент.Вид = ВидПоляФормы.ПолеПолосыРегулирования Тогда
		ДобавитьРасширениеПолосыРегулирования(ОписаниеЭлемента, Элемент);
		
	ИначеЕсли Элемент.Вид = ВидПоляФормы.ПолеДиаграммы Тогда
		ДобавитьРасширениеДиаграммы(ОписаниеЭлемента, Элемент);
		
	ИначеЕсли Элемент.Вид = ВидПоляФормы.ПолеДиаграммыГанта Тогда
		ДобавитьРасширениеДиаграммыГанта(ОписаниеЭлемента, Элемент);
		
	ИначеЕсли Элемент.Вид = ВидПоляФормы.ПолеДендрограммы Тогда
		ДобавитьРасширениеДендрограммы(ОписаниеЭлемента, Элемент);
		
	ИначеЕсли Элемент.Вид = ВидПоляФормы.ПолеТекстовогоДокумента Тогда
		ДобавитьРасширениеТекстовогоДокумента(ОписаниеЭлемента, Элемент);
		
	ИначеЕсли Элемент.Вид = ВидПоляФормы.ПолеТабличногоДокумента Тогда
		ДобавитьРасширениеТабличногоДокумента(ОписаниеЭлемента, Элемент);
		
	ИначеЕсли Элемент.Вид = ВидПоляФормы.ПолеФорматированногоДокумента Тогда
		ДобавитьРасширениеФорматированногоДокумента(ОписаниеЭлемента, Элемент);
		
	ИначеЕсли Элемент.Вид = ВидПоляФормы.ПолеHTMLДокумента Тогда
		ДобавитьРасширениеHTMLДокумента(ОписаниеЭлемента, Элемент);
		
	ИначеЕсли Элемент.Вид = ВидПоляФормы.ПолеГрафическойСхемы Тогда
		ДобавитьРасширениеГрафическойСхемы(ОписаниеЭлемента, Элемент);
		
	ИначеЕсли Элемент.Вид = ВидПоляФормы.ПолеГеографическойСхемы Тогда
		ДобавитьРасширениеГеографическойСхемы(ОписаниеЭлемента, Элемент);
		
	ИначеЕсли Элемент.Вид = ВидПоляФормы.ПолеПланировщика Тогда
		ДобавитьРасширениеПланировщика(ОписаниеЭлемента, Элемент);
		
	ИначеЕсли Элемент.Вид = ВидПоляФормы.ПолеПериода Тогда
		ДобавитьРасширениеПериода(ОписаниеЭлемента, Элемент);
		
	КонецЕсли;
	
	ДобавитьДействия(ОписаниеЭлемента, Элемент, СписокДействийПоля());
	
КонецПроцедуры

Функция СписокДействийПоля()
	
	СписокДействий = Новый Массив;
	СписокДействий.Добавить("ПриИзменении");
	СписокДействий.Добавить("НачалоВыбора");
	СписокДействий.Добавить("НачалоВыбораИзСписка");
	СписокДействий.Добавить("Очистка");
	СписокДействий.Добавить("Регулирование");
	СписокДействий.Добавить("Открытие");
	СписокДействий.Добавить("Создание");
	СписокДействий.Добавить("ОбработкаВыбора");
	СписокДействий.Добавить("ИзменениеТекстаРедактирования");
	СписокДействий.Добавить("АвтоПодбор");
	СписокДействий.Добавить("ОкончаниеВводаТекста");
	Возврат СписокДействий;
	
КонецФункции

// Добавляет свойства элемента, которые есть только у поля ввода
Процедура ДобавитьРасширениеПоляВвода(ОписаниеЭлемента, Элемент)
	
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоВыборНезаполненного");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоОтметкаНезаполненного");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоПереносСтрок");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "БыстрыйВыбор");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВыбиратьТип");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВыборГруппИЭлементов");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВыделятьОтрицательные");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Высота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВысотаСпискаВыбора");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ДоступныеТипы");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ИсторияВыбораПриВводе");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "КартинкаКнопкиВыбора");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "КнопкаВыбора");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "КнопкаВыпадающегоСписка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "КнопкаОткрытия");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "КнопкаОчистки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "КнопкаРегулирования");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "КнопкаСоздания");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальноеЗначение");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Маска");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МинимальноеЗначение");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МногострочныйРежим");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ОбновлениеТекстаРедактирования");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ОтметкаНезаполненного");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ОтображениеКнопкиВыбора");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ПараметрыВыбора");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ПодсказкаВвода");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РазрешитьСоставнойТип");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоВертикали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоГоризонтали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РасширенноеРедактирование");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РедактированиеТекста");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РежимВыбораИзСписка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РежимВыбораНезаполненного");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РежимПароля");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "СвязьПоТипу");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "СписокВыбора");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ФормаВыбора");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Формат");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ФорматРедактирования");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветРамки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветТекста");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветФона");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Ширина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ШиринаВыпадающегоСписка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Шрифт");

КонецПроцедуры

// Добавляет свойства элемента, которые есть только у надписи
Процедура ДобавитьРасширениеНадписи(ОписаниеЭлемента, Элемент)
	
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВыделятьОтрицательные");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Высота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Гиперссылка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Рамка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоВертикали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоГоризонтали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РежимПароля");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Формат");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветРамки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветТекста");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветФона");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Ширина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Шрифт");
	
КонецПроцедуры

// Добавляет свойства элемента, которые есть только у флажка
Процедура ДобавитьРасширениеФлажка(ОписаниеЭлемента, Элемент)
	
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВидФлажка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВысотаЗаголовкаЭлемента");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВысотаЭлемента");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ОдинаковаяШиринаЭлементов");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ТриСостояния");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ФорматРедактирования");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветРамки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветТекста");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветФона");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ШиринаЭлемента");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Шрифт");
	
КонецПроцедуры

// Добавляет свойства элемента, которые есть только у картинки
Процедура ДобавитьРасширениеКартинки(ОписаниеЭлемента, Элемент)
	
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Высота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Гиперссылка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "КартинкаЗначений");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Масштабировать");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РазмерКартинки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РазрешитьНачалоПеретаскивания");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РазрешитьПеретаскивание");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Рамка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоВертикали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоГоризонтали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ТекстНевыбраннойКартинки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветРамки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветТекста");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Ширина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Шрифт");
	
КонецПроцедуры

// Добавляет свойства элемента, которые есть только у переключателя
Процедура ДобавитьРасширениеПереключателя(ОписаниеЭлемента, Элемент)
	
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВидПереключателя");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВысотаЗаголовкаЭлемента");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВысотаЭлемента");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "КоличествоКолонок");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ОдинаковаяШиринаКолонок");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "СписокВыбора");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветРамки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветТекста");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветФона");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ШиринаЭлемента");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Шрифт");
	
КонецПроцедуры

// Добавляет свойства элемента, которые есть только у календаря
Процедура ДобавитьРасширениеКалендаря(ОписаниеЭлемента, Элемент)
	
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВыделенныеДаты");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Высота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВысотаВМесяцах");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "КонецПериодаОтображения");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "НачалоПериодаОтображения");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ОтображатьПанельМесяцев");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ОтображатьТекущуюДату");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ПеремещениеПоКалендарю");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РазрешитьНачалоПеретаскивания");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РазрешитьПеретаскивание");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Рамка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоВертикали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоГоризонтали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РежимВыделения");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветРамки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Ширина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ШиринаВМесяцах");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Шрифт");
	
КонецПроцедуры

// Добавляет свойства элемента, которые есть только у индикатора
Процедура ДобавитьРасширениеИндикатора(ОписаниеЭлемента, Элемент)
	
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Высота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальноеЗначение");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МинимальноеЗначение");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Ориентация");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ОтображатьПроценты");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Отображение");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоВертикали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоГоризонтали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветРамки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Ширина");
	
КонецПроцедуры

// Добавляет свойства элемента, которые есть только у полосы регулирования
Процедура ДобавитьРасширениеПолосыРегулирования(ОписаниеЭлемента, Элемент)
	
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "БольшойШаг");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Высота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальноеЗначение");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МинимальноеЗначение");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Ориентация");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ОтображениеРазметки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоВертикали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоГоризонтали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Шаг");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ШагРазметки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Ширина");
	
КонецПроцедуры

// Добавляет свойства элемента, которые есть только у диаграммы
Процедура ДобавитьРасширениеДиаграммы(ОписаниеЭлемента, Элемент)
	
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Высота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоВертикали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоГоризонтали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Ширина");
	
КонецПроцедуры

// Добавляет свойства элемента, которые есть только у диаграммы ганта
Процедура ДобавитьРасширениеДиаграммыГанта(ОписаниеЭлемента, Элемент)
	
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Высота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоВертикали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоГоризонтали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Ширина");
	
КонецПроцедуры

// Добавляет свойства элемента, которые есть только у дендрограммы
Процедура ДобавитьРасширениеДендрограммы(ОписаниеЭлемента, Элемент)
	
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Высота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоВертикали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоГоризонтали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Ширина");
	
КонецПроцедуры

// Добавляет свойства элемента, которые есть только у текстового документа
Процедура ДобавитьРасширениеТекстовогоДокумента(ОписаниеЭлемента, Элемент)
	
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Вывод");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВыделенныйТекст");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Высота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоВертикали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоГоризонтали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветРамки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветТекста");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветФона");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Ширина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Шрифт");
	
КонецПроцедуры

// Добавляет свойства элемента, которые есть только у табличного документа
Процедура ДобавитьРасширениеТабличногоДокумента(ОписаниеЭлемента, Элемент)
	
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВертикальнаяПолосаПрокрутки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Вывод");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Высота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ГоризонтальнаяПолосаПрокрутки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Защита");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ИспользуемоеИмяФайла");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ОтображатьГруппировки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ОтображатьЗаголовки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ОтображатьИменаСтрокИКолонок");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ОтображатьИменаЯчеек");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ОтображатьСетку");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ОтображениеСостояния");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РазрешитьНачалоПеретаскивания");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РазрешитьПеретаскивание");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоВертикали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоГоризонтали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Редактирование");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РежимМасштабированияПросмотра");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РежимОтображенияВыделения");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ТекущаяОбласть");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ТипКурсоров");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветРамки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЧерноБелыйПросмотр");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Ширина");
	
КонецПроцедуры

// Добавляет свойства элемента, которые есть только у форматированного документа
Процедура ДобавитьРасширениеФорматированногоДокумента(ОписаниеЭлемента, Элемент)
	
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Вывод");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВыделенныйТекст");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Высота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоВертикали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоГоризонтали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветРамки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветТекста");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветФона");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Ширина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Шрифт");
	
КонецПроцедуры

// Добавляет свойства элемента, которые есть только у HTML документа
Процедура ДобавитьРасширениеHTMLДокумента(ОписаниеЭлемента, Элемент)
	
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Вывод");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Высота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Документ");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ИнформацияПрограммыПросмотра");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоВертикали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоГоризонтали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветРамки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Ширина");
	
КонецПроцедуры

// Добавляет свойства элемента, которые есть только у графической схемы
Процедура ДобавитьРасширениеГрафическойСхемы(ОписаниеЭлемента, Элемент)
	
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Вывод");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Высота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоВертикали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоГоризонтали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Редактирование");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ТекущийЭлемент");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветРамки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Ширина");
	
КонецПроцедуры

// Добавляет свойства элемента, которые есть только у географической схемы
Процедура ДобавитьРасширениеГеографическойСхемы(ОписаниеЭлемента, Элемент)
	
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Вывод");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Высота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоВертикали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоГоризонтали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветРамки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Ширина");
	
КонецПроцедуры

// Добавляет свойства элемента, которые есть только у планировщика
Процедура ДобавитьРасширениеПланировщика(ОписаниеЭлемента, Элемент)
	
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВыделенныеЭлементы");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Высота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РазрешитьНачалоПеретаскивания");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РазрешитьПеретаскивание");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоВертикали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоГоризонтали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Ширина");
	
КонецПроцедуры

// Добавляет свойства элемента, которые есть только у периода
Процедура ДобавитьРасширениеПериода(ОписаниеЭлемента, Элемент)
	
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Высота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Рамка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоВертикали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоГоризонтали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветРамки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Ширина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Шрифт");
	
КонецПроцедуры

#КонецОбласти

#Область ОписаниеКнопкиФормы

// Добавляет свойства элемента с типом КнопкаФормы
Процедура ДобавитьОписаниеКнопкиФормы(ОписаниеЭлемента, Элемент)
	
	// Основные свойства
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АктивизироватьПоУмолчанию");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВажностьПриОтображении");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВертикальноеПоложениеВГруппе");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Вид");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Видимость");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Высота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВысотаЗаголовка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ГоризонтальноеПоложениеВГруппе");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Доступность");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Заголовок");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ИмяКоманды");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Картинка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "КнопкаПоУмолчанию");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Отображение");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ОтображениеПодсказки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ОтображениеФигуры");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ПоложениеКартинки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Пометка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ПропускатьПриВводе");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоВертикали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоГоризонтали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "СочетаниеКлавиш");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ТолькоВоВсехДействиях");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Фигура");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветРамки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветТекста");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветФона");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Ширина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Шрифт");
	
КонецПроцедуры

#Область ОписаниеДекорацииФормы

// Добавляет свойства элемента с типом КнопкаФормы
Процедура ДобавитьОписаниеДекорацииФормы(ОписаниеЭлемента, Элемент)
	
	// Основные свойства
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "АвтоМаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВажностьПриОтображении");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВертикальноеПоложениеВГруппе");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Вид");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Видимость");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Высота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ВысотаЗаголовка");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ГоризонтальноеПоложениеВГруппе");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Доступность");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Заголовок");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяВысота");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "МаксимальнаяШирина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ПропускатьПриВводе");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоВертикали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "РастягиватьПоГоризонтали");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветРамки");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветТекста");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "ЦветФона");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Ширина");
	ДобавитьЗначениеСвойства(ОписаниеЭлемента, Элемент, "Шрифт");
	
	ДобавитьДействия(ОписаниеЭлемента, Элемент, СписокДействийДекорации());
	
КонецПроцедуры

Функция СписокДействийДекорации()
	
	СписокДействий = Новый Массив;
	СписокДействий.Добавить("Нажатие");
	Возврат СписокДействий;
	
КонецФункции

#КонецОбласти

#КонецОбласти

Процедура СоздатьЭлементыФормы(Форма, ОписаниеЭлементов, ГруппаРазмещения, ИдентификаторШаблона)
	
	Пока ГруппаРазмещения.ПодчиненныеЭлементы.Количество() > 0 Цикл
		Форма.Элементы.Удалить(ГруппаРазмещения.ПодчиненныеЭлементы[0]);
	КонецЦикла;
	
	ИсключаемыеСвойства = ИсключаемыеСвойстваЭлемента();
	Для каждого ОписаниеЭлемента Из ОписаниеЭлементов Цикл
		Элемент = Форма.Элементы.Добавить(ОписаниеЭлемента.Имя + ИдентификаторШаблона,
			 ОписаниеЭлемента.ТипЭлемента, ГруппаРазмещения);
		
		СтрОписанияЭлемента = Форма["ШаблоныЭлементов_ОписаниеЭлементов" + ИдентификаторШаблона].Добавить();
		СтрОписанияЭлемента.ИмяЭлемента = Элемент.Имя;
		Если ОписаниеЭлемента.Свойство("Вид") Тогда
			Элемент.Вид = ОписаниеЭлемента.Вид;
		КонецЕсли;
		Для каждого КлючИЗначение Из ОписаниеЭлемента Цикл
			Если ИсключаемыеСвойства.Найти(КлючИЗначение.Ключ) = Неопределено Тогда
				Элемент[КлючИЗначение.Ключ] = КлючИЗначение.Значение;
			КонецЕсли;
		КонецЦикла;
		Если ОписаниеЭлемента.Свойство("ПутьКДанным") И ЗначениеЗаполнено(ОписаниеЭлемента.ПутьКДанным) Тогда
			ПозицияТочки = СтрНайти(ОписаниеЭлемента.ПутьКДанным, ".");
			Если ПозицияТочки = 0 Тогда
				ПутьКДанным = ОписаниеЭлемента.ПутьКДанным + ИдентификаторШаблона;
			Иначе
				ПутьКДанным = Лев(ОписаниеЭлемента.ПутьКДанным, ПозицияТочки - 1) + ИдентификаторШаблона 
					+ Сред(ОписаниеЭлемента.ПутьКДанным,
					 ПозицияТочки);
			КонецЕсли;
			Элемент.ПутьКДанным = ПутьКДанным;
			СтрОписанияЭлемента.ПутьКДанным = ОписаниеЭлемента.ПутьКДанным;
		КонецЕсли;
		Если ОписаниеЭлемента.Свойство("ПутьКДаннымЗаголовка")
			 И ЗначениеЗаполнено(ОписаниеЭлемента.ПутьКДаннымЗаголовка) Тогда
			ПозицияТочки = СтрНайти(ОписаниеЭлемента.ПутьКДаннымЗаголовка, ".");
			Если ПозицияТочки = 0 Тогда
				ПутьКДанным = ОписаниеЭлемента.ПутьКДаннымЗаголовка + ИдентификаторШаблона;
			Иначе
				ПутьКДанным = Лев(ОписаниеЭлемента.ПутьКДаннымЗаголовка, ПозицияТочки - 1) + ИдентификаторШаблона 
					+ Сред(ОписаниеЭлемента.ПутьКДаннымЗаголовка,
					 ПозицияТочки);
			КонецЕсли;
			Элемент.ПутьКДаннымЗаголовка = ПутьКДанным;
		КонецЕсли;
		Если ОписаниеЭлемента.Свойство("СвязьПоТипу") И ЗначениеЗаполнено(ОписаниеЭлемента.СвязьПоТипу.ПутьКДанным) Тогда
			ПозицияТочки = СтрНайти(ОписаниеЭлемента.СвязьПоТипу.ПутьКДанным, ".");
			Если ПозицияТочки = 0 Тогда
				ПутьКДанным = ОписаниеЭлемента.СвязьПоТипу.ПутьКДанным + ИдентификаторШаблона;
			Иначе
				ПутьКДанным = Лев(ОписаниеЭлемента.СвязьПоТипу.ПутьКДанным, ПозицияТочки - 1) + ИдентификаторШаблона 
					+ Сред(ОписаниеЭлемента.СвязьПоТипу.ПутьКДанным,
					 ПозицияТочки);
			КонецЕсли;
			Элемент.СвязьПоТипу = Новый СвязьПоТипу(ПутьКДанным);
		КонецЕсли;
		Если ОписаниеЭлемента.Свойство("ИмяКоманды") Тогда
			Элемент.ИмяКоманды = ОписаниеЭлемента.ИмяКоманды + ИдентификаторШаблона;
		КонецЕсли;
		Если ОписаниеЭлемента.Свойство("СписокВыбора") И ОписаниеЭлемента.СписокВыбора.Количество() > 0 Тогда
			Элемент.СписокВыбора.ЗагрузитьЗначения(ОписаниеЭлемента.СписокВыбора.ВыгрузитьЗначения());
		КонецЕсли;
		Если ОписаниеЭлемента.Свойство("ОписаниеДействий") И ОписаниеЭлемента.ОписаниеДействий.Количество() > 0 Тогда
			Для каждого ДействиеЭлемента Из ОписаниеЭлемента.ОписаниеДействий Цикл
				Элемент.УстановитьДействие(ДействиеЭлемента.Действие, "Подключаемый_ШаблоныЭлементов_" + ДействиеЭлемента.Действие);
				СтрОписанияЭлемента.Действия.Добавить(ДействиеЭлемента.Действие, ДействиеЭлемента.Метод);
			КонецЦикла;
		КонецЕсли;
		Если ОписаниеЭлемента.ТипЭлемента = Тип("ПолеФормы") Или ОписаниеЭлемента.ТипЭлемента = Тип("ТаблицаФормы") Тогда
			Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_ШаблоныЭлементов_ПриИзменении");
		КонецЕсли;
		
		Если ОписаниеЭлемента.Свойство("ОписаниеПодчиненныхЭлементов") Тогда
			СоздатьЭлементыФормы(Форма, ОписаниеЭлемента.ОписаниеПодчиненныхЭлементов, Элемент, ИдентификаторШаблона);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ИсключаемыеСвойстваЭлемента()
	
	ИсключаемыеСвойстваЭлемента = Новый Массив();
	ИсключаемыеСвойстваЭлемента.Добавить("Имя");
	ИсключаемыеСвойстваЭлемента.Добавить("Вид");
	ИсключаемыеСвойстваЭлемента.Добавить("ТипЭлемента");
	ИсключаемыеСвойстваЭлемента.Добавить("Родитель");
	ИсключаемыеСвойстваЭлемента.Добавить("ПутьКДанным");
	ИсключаемыеСвойстваЭлемента.Добавить("ПутьКДаннымЗаголовка");
	ИсключаемыеСвойстваЭлемента.Добавить("КонтекстноеМеню");
	ИсключаемыеСвойстваЭлемента.Добавить("ИмяКоманды");
	ИсключаемыеСвойстваЭлемента.Добавить("СписокВыбора");
	ИсключаемыеСвойстваЭлемента.Добавить("ПутьКДаннымКартинкиСтроки");
	ИсключаемыеСвойстваЭлемента.Добавить("КоманднаяПанель");
	ИсключаемыеСвойстваЭлемента.Добавить("СвязьПоТипу");
	ИсключаемыеСвойстваЭлемента.Добавить("ОписаниеПодчиненныхЭлементов");
	ИсключаемыеСвойстваЭлемента.Добавить("ОписаниеДействий");
	Возврат ИсключаемыеСвойстваЭлемента;
	
КонецФункции

#КонецОбласти
