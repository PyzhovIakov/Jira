////////////////////////////////////////////////////////////////////////////////
// Подсистема "Печать".
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьМакетИДанныеОбъектов(ИмяМакета, ОбъектыНазначения, НомерВарианта = Неопределено) Экспорт
	
	Перем ДвоичныеДанныеМакета;
	
	Если СтрНайти(ИмяМакета, "ПФ_DOC") > 0 Тогда
		ТипМакета = "DOC";
	КонецЕсли;
	
	Если СтрНайти(ИмяМакета, "ПФ_ODT") > 0 Тогда
		ТипМакета = "ODT";
	КонецЕсли;
	
	МетаОбъект = Метаданные.НайтиПоТипу(ТипЗнч(ОбъектыНазначения[0]));
	
	ДвоичныеДанныеМакета = УправлениеПечатью.МакетПечатнойФормы("Документ." + МетаОбъект.Имя + "." + ИмяМакета);
	
	ДанныеПоВсемОбъектам = Новый Соответствие;
	
	МассивИменТабличныхЧастей = Неопределено;
	
	Для Каждого ОбъектСсылка Из ОбъектыНазначения Цикл
		ДанныеОбъектаПоМакетам = Новый Соответствие;
		ПолученныеДанные = CRM_ОбщегоНазначенияСервер.CRM_ПолучитьДанныеОбъекта(ОбъектСсылка, НомерВарианта);
		ДанныеОбъектаПоМакетам.Вставить(ИмяМакета, ПолученныеДанные);
		
		ДанныеПоВсемОбъектам.Вставить(ОбъектСсылка, ДанныеОбъектаПоМакетам);
		
		Если МассивИменТабличныхЧастей = Неопределено Тогда
			Если ЗначениеЗаполнено(ПолученныеДанные["ТабличныеЧасти"]) Тогда
				МассивИменТабличныхЧастей = ПолученныеДанные.ТабличныеЧасти;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ОписаниеОбластей = Новый Соответствие;
	ДвоичныеДанныеМакетов = Новый Соответствие;
	ТипыМакетов = Новый Соответствие;
	
	ДвоичныеДанныеМакетов.Вставить(ИмяМакета, ДвоичныеДанныеМакета);
	ТипыМакетов.Вставить(ИмяМакета, ТипМакета);
	
	ОписаниеОбластей.Вставить(ИмяМакета,
		 CRM_ОбщегоНазначенияСервер.CRM_ПолучитьОписаниеОбластейМакетаОфисногоДокумента(МассивИменТабличныхЧастей));
	
	МакетыИДанные = Новый Структура("Данные, Макеты",
							ДанныеПоВсемОбъектам,
							Новый Структура("ОписаниеОбластей, ТипыМакетов, ДвоичныеДанныеМакетов",
											ОписаниеОбластей,
											ТипыМакетов,
											ДвоичныеДанныеМакетов));
	МакетыИДанные.Вставить("ЛокальныйКаталогФайловПечати", "");
	
	Возврат МакетыИДанные;
	
КонецФункции

Процедура ПоместитьВариантНаПечатьВХранилище(ВариантНаПечать) Экспорт
	CRM_ХранилищеНастроек.Сохранить("_ВариантНаПечать", , ВариантНаПечать);
КонецПроцедуры	

Функция  ПолучитьВариантНаПечатьИзХранилища() Экспорт
	ВариантНаПечать = CRM_ХранилищеНастроек.Загрузить("_ВариантНаПечать");
	Если ВариантНаПечать = Неопределено Тогда
		ВариантНаПечать	= 0;
		ПоместитьВариантНаПечатьВХранилище(ВариантНаПечать);
	КонецЕсли;
	Возврат ВариантНаПечать;
КонецФункции

Функция ПолучитьПараметрыОткрытияДляМессенджера(ОбъектСсылка) Экспорт
	Возврат CRM_УправлениеПечатью.ПолучитьПараметрыОткрытияДляМессенджера(ОбъектСсылка);
КонецФункции

Функция РазрешитьПечатьИнтереса(Массивссылок) Экспорт
	
	Если Не CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
		Возврат Истина;
	КонецЕсли;
	
	ИмяКонстанты = "CRM_ЗапретитьПечатьНоменклатурыБезУказанияХарактеристик";
	Если Константы[ИмяКонстанты].Получить() Тогда
		РазрешитьПечать = Истина;
		Для Каждого Ссылка Из Массивссылок Цикл
			Для Каждого Строка Из Ссылка.Товары Цикл
				Если Строка.Номенклатура.ИспользоватьХарактеристики И НЕ ЗначениеЗаполнено(Строка.Характеристика) Тогда
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = НСтр("ru='В документе '") + Строка(Ссылка) 
						+ НСтр("ru='. Для номенклатуры '") + Строка.Номенклатура.Наименование 
						+ НСтр("ru=' не указана характеристика. Проведение документа запрещено!'");
					Сообщение.Сообщить();
					РазрешитьПечать = Ложь;
				КонецЕсли;
			КонецЦикла;	
		КонецЦикла;	
		Возврат РазрешитьПечать;
	Иначе
		Возврат Истина;
	КонецЕсли;
КонецФункции

Функция ПолучитьСписокВариантовКоммерческогоПредложения(ОбрабатываемыйДокумент) Экспорт
	
	Если ТипЗнч(ОбрабатываемыйДокумент) = Тип("ДокументСсылка.КоммерческоеПредложениеКлиенту") Тогда
		СписокВыбораВарианта = CRM_МетодыМодулейМенеджеровДокументов.КППолучитьВарианты(ОбрабатываемыйДокумент);
		
		Если СписокВыбораВарианта.Количество() > 1 Тогда
			СписокВыбораВарианта.Вставить(0, -1, "Все варианты");
		КонецЕсли;
		
		Возврат СписокВыбораВарианта;
	КонецЕсли;
	
	СписокВариантов = Новый СписокЗначений;
	СписокВариантов.Вставить(0, 1, "Все варианты");
	
	Возврат СписокВариантов;
	
КонецФункции // ПолучитьСписокВариантовКоммерческогоПредложения()

#КонецОбласти
