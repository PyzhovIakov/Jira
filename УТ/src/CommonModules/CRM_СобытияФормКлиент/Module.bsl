////////////////////////////////////////////////////////////////////////////////
// Содержит события форм, вызываемые на клиенте
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Функция выполняет переопределяемую команду
//
// Параметры:
//  Форма	- ФормаКлиентскогоПриложения - форма, в которой расположена команда
//  Команда	- КомандаФормы - команда формы
//  ДополнительныеПараметры	- Структура - дополнительные параметры
//
// Возвращаемое значение:
//	Булево - результат выполнения.
//
Функция ВыполнитьПереопределяемуюКоманду(Форма, Команда, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Не ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Команда, "Имя") Тогда
		CRM_БизнесПроцессыИЗадачиКлиент.ПроверитьДействиеФормы(Форма, Команда);
		Возврат Истина;
	КонецЕсли;

	ИмяКоманды = Команда.Имя;
	
	// +Рабочий стол
	СписокДоступныхФормРабочегоСтола = CRM_РабочийСтолСервер.ПолучитьСписокДоступныхФорм();
	Если СписокДоступныхФормРабочегоСтола.НайтиПоЗначению(Форма.ИмяФормы) <> Неопределено Тогда
		Если СтрНайти(Команда.Имя, "crm_СкрытаяКнопкаТумблера_") Тогда
			CRM_РабочийСтолКлиент.ВыборИзСпискаСкрытыхФорм(Форма, Команда);
		КонецЕсли;
		Если СтрНайти(Команда.Имя, "crm_КнопкаТумблера_") Тогда
			CRM_РабочийСтолКлиент.ТумблерРабочегоСтолаПриИзменении(Форма, Команда);
		КонецЕсли;	
		Если Команда.Имя = "crm_НастройкиРабочегоСтола" Тогда
			CRM_РабочийСтолКлиент.ОткрытьФормуНастроек(Форма, Команда);
		КонецЕсли;
		Если Команда.Имя = "crm_Поддержка" Тогда
			CRM_РабочийСтолКлиент.ОткрытьФормуПоддержки(Форма, Команда);
		КонецЕсли;
		Если Команда.Имя = "CRM_ОткрытьЗаметки" Или Команда.Имя = "скСоздатьПоручение" 
			Или Команда.Имя = "скЗакрытьЗаметки" Тогда
			
			Если Команда.Имя = "CRM_ОткрытьЗаметки" Тогда
				Попытка
					// BSLLS:UnusedLocalVariable-off
					ПоддерживаетРабочийСтол = Форма.ПоддерживаетРабочийСтол;
					// BSLLS:UnusedLocalVariable-on
				Исключение
					CRM_РабочийСтолКлиент.КомандаЗаметкиВсе(Форма, Команда);
					Возврат Ложь;
				КонецПопытки;	
			КонецЕсли;
			CRM_РабочийСтолКлиент.ОбработкаГипперссылкиДействийНажатие(Форма, Команда);
		КонецЕсли;
		Если Команда.Имя = "скЗаметкиСкрыть" Тогда
			CRM_РабочийСтолКлиент.СкрытьЗаметки(Форма);
		КонецЕсли;
		Если Команда.Имя = "скЗаметкиОткрытьВсе" Тогда
			CRM_РабочийСтолКлиент.КомандаЗаметкиВсе(Форма, Команда);
		КонецЕсли;
		Если Команда.Имя = "скЗаметкиДобавить" Тогда
			CRM_РабочийСтолКлиент.КомандаЗаметкиДобавить(Форма, Команда);
		КонецЕсли;
		Если Команда.Имя = "CRM_ОткрытьПомощь" Тогда
			ПерейтиПоНавигационнойСсылке(CRM_ОбщегоНазначенияСервер.ПолучитьСсылкуНаРазделСправки("УниверсальныйРабочийСтол"));
		КонецЕсли;
		Если Команда.Имя = "CRM_ОткрытьПринятиеОбращения" Тогда
			ИмяВыбраннойФормы = Форма.ЭтаФорма.ИмяФормы;
			Если ИмяВыбраннойФормы = "Обработка.CRM_АРМ_МоиПродажи.Форма.Форма"
				 Или ИмяВыбраннойФормы = "Обработка.CRM_АРМ_МоиДела.Форма.Форма" 
					Или ИмяВыбраннойФормы = "Обработка.CRM_АРМ_Поддержка.Форма.Форма" Тогда
				ИмяАктивнойТаблицы = Форма.ЭтотОбъект.АктивнаяТаблица;
				Если ИмяВыбраннойФормы = "Обработка.CRM_АРМ_Поддержка.Форма.Форма" И Форма.ЭтотОбъект.ТекущийРежим = "Список" Тогда
					ИмяАктивнойТаблицы = "ОбращенияСписок";
				КонецЕсли;
				ТекТаблица = Форма.Элементы.Найти(ИмяАктивнойТаблицы);
				ДанныеПартнер = ТекТаблица.ТекущиеДанные;
				ДанныеСтрока = ТекТаблица.ТекущаяСтрока;
				Если ДанныеПартнер = Неопределено Тогда
					ДанныеПартнер = Форма.Элементы.ТаблицаСписок.ТекущиеДанные;
					ДанныеСтрока = Форма.Элементы.ТаблицаСписок.ТекущаяСтрока;
				КонецЕсли;
				Если ТипЗнч(ДанныеСтрока) = Тип("РегистрСведенийКлючЗаписи.CRM_ОбъектыАРМ") Тогда
					ДанныеСтрока = CRM_ОбщегоНазначенияСервер.ПолучитьРеквизитОбъектПоКлючуЗаписи(ДанныеСтрока);
				КонецЕсли;
				Если ТипЗнч(ДанныеСтрока) = Тип("ДокументСсылка.ТелефонныйЗвонок") Тогда 
					ДанныеДляОбработки = Новый Структура;
					ДанныеДляОбработки.Вставить("Ссылка", ДанныеСтрока);
					ДанныеДляОбработки.Вставить("сфпИдентификаторЗвонка",
						 CRM_ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ДанныеСтрока,
						 "сфпИдентификаторЗвонка"));
					ДанныеДляОбработки.Вставить("АбонентКонтакт",
						 CRM_ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ДанныеСтрока,
						 "АбонентКонтакт"));
					ДанныеДляОбработки.Вставить("АбонентКакСвязаться",
						 CRM_ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ДанныеСтрока,
						 "АбонентКакСвязаться"));
					CRM_ОбщегоНазначенияКлиент.ОткрытьФормуОбращения(ДанныеДляОбработки, "Телефония");
				ИначеЕсли ТипЗнч(ДанныеСтрока) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Или
						ТипЗнч(ДанныеСтрока) = Тип("ДокументСсылка.ЭлектронноеПисьмоИсходящее") Тогда
					ДанныеДляОбработки = Новый Структура;
					ДанныеДляОбработки.Вставить("Ссылка", ДанныеСтрока);
					ТемаПисьма = ?(ДанныеПартнер.Свойство("Тема"), ДанныеПартнер.Тема, ДанныеПартнер.Заголовок);
					ДанныеДляОбработки.Вставить("Тема", ТемаПисьма);
					CRM_ОбщегоНазначенияКлиент.ОткрытьФормуОбращения(ДанныеДляОбработки, "Почта");
				ИначеЕсли ТипЗнч(ДанныеСтрока) = Тип("ДокументСсылка.CRM_Заявка") Тогда
					CRM_ОбщегоНазначенияКлиент.ОткрытьФормуОбращения(ДанныеСтрока, "Заявка");
				ИначеЕсли ТипЗнч(ДанныеСтрока) = Тип("ДокументСсылка.CRM_СообщениеМессенджера") Тогда
					СсылкаДиалог = CRM_ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ДанныеСтрока, "Диалог");
					CRM_ОбщегоНазначенияКлиент.ОткрытьФормуОбращения(СсылкаДиалог, "Сообщение");
				ИначеЕсли ТипЗнч(ДанныеСтрока) = Тип("СправочникСсылка.CRM_Диалоги") Тогда
					CRM_ОбщегоНазначенияКлиент.ОткрытьФормуОбращения(ДанныеСтрока, "Сообщение");
				ИначеЕсли ТипЗнч(ДанныеСтрока) = Тип("ДокументСсылка.CRM_ЭтапКалендарногоПлана") Тогда
					СсылкаПроект = CRM_ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ДанныеСтрока, "Проект");
					Партнер = CRM_ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(СсылкаПроект, "CRM_Партнер");
					CRM_ОбщегоНазначенияКлиент.ОткрытьФормуОбращения(Партнер, "Партнер");
				ИначеЕсли ТипЗнч(ДанныеСтрока) = Тип("ДокументСсылка.CRM_Интерес")
					 Или ТипЗнч(ДанныеСтрока) = Тип("ДокументСсылка.CRM_Взаимодействие") Тогда
					Партнер = CRM_ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ДанныеСтрока, "Партнер");
					ПотенциальныйКлиент = CRM_ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ДанныеСтрока, "ПотенциальныйКлиент");
					ПартнерВФорму = ?(ЗначениеЗаполнено(Партнер), Партнер, ПотенциальныйКлиент);
					CRM_ОбщегоНазначенияКлиент.ОткрытьФормуОбращения(ПартнерВФорму, "Партнер");
				ИначеЕсли ТипЗнч(ДанныеСтрока) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
					Партнер = CRM_ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ДанныеСтрока, "CRM_Партнер");
					ПотенциальныйКлиент = CRM_ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ДанныеСтрока, "CRM_ПотенциальныйКлиент");
					ПартнерВФорму = ?(ЗначениеЗаполнено(Партнер), Партнер, ПотенциальныйКлиент);
					CRM_ОбщегоНазначенияКлиент.ОткрытьФормуОбращения(ПартнерВФорму, "Партнер");
				Иначе
					ОткрытьФорму("Обработка.CRM_МастерРегистрацииОбращения.Форма.ФормаНовая");
				КонецЕсли;
			ИначеЕсли ИмяВыбраннойФормы = "Задача.ЗадачаИсполнителя.Форма.CRM_ФормаМоиЗадачи" Тогда
				ДанныеПартнер = Форма.Элементы.Список.ТекущиеДанные;
				ДанныеСтрока = Форма.Элементы.Список.ТекущаяСтрока;
				Партнер = CRM_ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ДанныеСтрока, "CRM_Партнер");
				ПотенциальныйКлиент = CRM_ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ДанныеСтрока, "CRM_ПотенциальныйКлиент");
				ПартнерВФорму = ?(ЗначениеЗаполнено(Партнер), Партнер, ПотенциальныйКлиент);
				CRM_ОбщегоНазначенияКлиент.ОткрытьФормуОбращения(ПартнерВФорму, "Партнер");
			ИначеЕсли ИмяВыбраннойФормы = "Обработка.CRM_Мессенджер.Форма.ФормаМессенджера" Тогда
				ДанныеСтрока = Форма.ЭтотОбъект.ТекущийДиалог;
				CRM_ОбщегоНазначенияКлиент.ОткрытьФормуОбращения(ДанныеСтрока, "Сообщение");
			ИначеЕсли ИмяВыбраннойФормы = "Справочник.Партнеры.Форма.CRM_ФормаСписка" Тогда
				ДанныеПартнер = Форма.Элементы.Список.ТекущиеДанные;
				Если Не ДанныеПартнер = Неопределено И Не ДанныеПартнер.ЭтоГруппа Тогда
					CRM_ОбщегоНазначенияКлиент.ОткрытьФормуОбращения(ДанныеПартнер.Ссылка, "Партнер");
				Иначе
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Для группы клиентов ввод обращения недоступен!';
						|en='For the group of customers,
						| the input of Lead is not available!'"));
				КонецЕсли;
			ИначеЕсли ИмяВыбраннойФормы = "Документ.CRM_СчетНаОплатуПокупателю.Форма.ФормаСписка" Тогда
				ДанныеПартнер = Форма.Элементы.Список.ТекущиеДанные;
				CRM_ОбщегоНазначенияКлиент.ОткрытьФормуОбращения(ДанныеПартнер, "Счет");
			ИначеЕсли ИмяВыбраннойФормы = "Документ.CRM_Заявка.Форма.ФормаСписка" Тогда
				ДанныеПартнер = Форма.Элементы.Список.ТекущиеДанные.Ссылка;
				CRM_ОбщегоНазначенияКлиент.ОткрытьФормуОбращения(ДанныеПартнер, "Заявка");
			ИначеЕсли ИмяВыбраннойФормы = "Документ.КоммерческоеПредложениеКлиенту.Форма.CRM_ФормаСписка" Тогда
				ДанныеПартнер = Форма.Элементы.Список.ТекущиеДанные;
				CRM_ОбщегоНазначенияКлиент.ОткрытьФормуОбращения(ДанныеПартнер, "КоммерческоеПредложение");
			ИначеЕсли ИмяВыбраннойФормы = "Обработка.CRM_МенеджерПочты.Форма.Форма" Тогда
				ДанныеПартнер = Форма.Элементы.СписокПисем.ТекущиеДанные;
				CRM_ОбщегоНазначенияКлиент.ОткрытьФормуОбращения(ДанныеПартнер, "Почта");
			ИначеЕсли ИмяВыбраннойФормы = "Обработка.сфпАРМ_Телефония.Форма.Форма" Тогда
				ДанныеПартнер = Форма.Элементы.ТелефонныеЗвонки.ТекущиеДанные;
				CRM_ОбщегоНазначенияКлиент.ОткрытьФормуОбращения(ДанныеПартнер, "Телефония");
			ИначеЕсли ИмяВыбраннойФормы = "Справочник.CRM_ПотенциальныеКлиенты.Форма.ФормаСписка" Тогда
				ДанныеПартнер = Форма.Элементы.Список.ТекущиеДанные.Ссылка;
				CRM_ОбщегоНазначенияКлиент.ОткрытьФормуОбращения(ДанныеПартнер, "Партнер");
			Иначе
				ОткрытьФорму("Обработка.CRM_МастерРегистрацииОбращения.Форма.ФормаНовая");
			КонецЕсли;
		КонецЕсли;
		
		// +СофтФон
		Если Команда.Имя = "сфпИндикаторАктивногоЗвонка" Тогда
			сфпСофтФонПроКлиент.ОткрытьПанельЗвонка(Форма, Команда);
		КонецЕсли;
		// -СофтФон
	КонецЕсли;
	// -Рабочий стол
	
	// +Классификаторы
	CRM_КлассификаторыКлиент.ВыполнитьКоманду(Форма, Команда, ДополнительныеПараметры);
	// -Классификаторы
	
	CRM_ТриггерыКлиент.ВыполнитьПереопределяемуюКоманду(Форма, Команда, ДополнительныеПараметры);
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "CRM_ТаблицаИнтересов") Тогда
		МодульРаботаСФормамиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("CRM_МетодыФормДокументовКлиент");
		МодульРаботаСФормамиКлиент.ВыполнитьПереопределяемуюКоманду(Форма, Команда, ДополнительныеПараметры);
	КонецЕсли;
	
	CRM_БизнесПроцессыИЗадачиКлиент.ВыполнитьПереопределяемуюКоманду(Форма, Команда, ДополнительныеПараметры);
	
	Если СтрНайти(ИмяКоманды, "КомандаПереключить_") > 0 Тогда
		ИмяЭлемента = СтрЗаменить(ИмяКоманды, "КомандаПереключить_", "");
		Элемент = Форма.Элементы.Найти(ИмяЭлемента);
		Если Элемент <> Неопределено Тогда
			Элемент.Видимость = Не Элемент.Видимость;
			Если Элемент.Видимость Тогда
				Форма.Элементы[ИмяКоманды].Картинка = БиблиотекаКартинок.СтрелкаВниз;
			Иначе
				Форма.Элементы[ИмяКоманды].Картинка = БиблиотекаКартинок.СтрелкаВправо;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Форма.Команды.Найти(ИмяКоманды) = Неопределено Тогда
		Команда = Новый Структура("Имя", ИмяКоманды);
		Возврат Истина;
	КонецЕсли;
	
	CRM_РаботаСЯзыковымиМоделямиКлиент.ВыполнитьПереопределяемуюКоманду(Форма, Команда, ДополнительныеПараметры);

	CRM_МодификацияКонфигурацииКлиентПереопределяемый.ВыполнитьПереопределяемуюКоманду(Форма, Команда,
		ДополнительныеПараметры);
	
	Возврат Истина;
КонецФункции

// Процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
//  Форма					- ФормаКлиентскогоПриложения - форма, из обработчика события которой происходит вызов процедуры.
//  ИмяСобытия				- Строка - идентификатор сообщения принимающей формой (см. метод Оповестить)
//	Параметр				- Произвольный - параметр сообщения (см. метод Оповестить)
//	Источник				- Произвольный - источник события (см. метод Оповестить)
//  ДополнительныеПараметры	- Структура - дополнительные параметры
//
Процедура ОбработкаОповещения(Форма, ИмяСобытия, Параметр, Источник, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ЗадачаИсполнителя") Тогда
		CRM_БизнесПроцессыИЗадачиКлиент.ОбработкаОповещения(Форма, ИмяСобытия, Параметр, Источник, ДополнительныеПараметры);
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "Объект") Тогда
		CRM_ТриггерыКлиент.ОбработкаОповещения(Форма, ИмяСобытия, Параметр, Источник, ДополнительныеПараметры);
		CRM_ТрудозатратыКлиент.ОбработкаОповещения(Форма, ИмяСобытия, Параметр, Источник, ДополнительныеПараметры);
	КонецЕсли;
	
	CRM_МодификацияКонфигурацииКлиентПереопределяемый.ОбработкаОповещения(Форма, ИмяСобытия, Параметр,
		 Источник,
		 ДополнительныеПараметры);
	
КонецПроцедуры

// Процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
//  Форма					- ФормаКлиентскогоПриложения - форма, из обработчика события которой происходит вызов процедуры.
//	ПараметрыЗаписи			- Структура - параметры записи (см. событие ПослеЗаписи)
//
Процедура ПослеЗаписи(Форма, ПараметрыЗаписи) Экспорт
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "Объект") Тогда
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма.Объект, "Ссылка") Тогда
			
			ТипСсылкиФормы = ТипЗнч(Форма.Объект.Ссылка);
			ТипыОбъектовЖурнала = ПараметрыПриложения["CRM_ТипыОбъектовЖурналаДокументов"];
			Если ТипыОбъектовЖурнала.Найти(ТипСсылкиФормы) <> Неопределено Тогда
				Оповестить("ЛентаСобытий_Обновить");
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	CRM_МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(Форма, ПараметрыЗаписи);
	
КонецПроцедуры

#КонецОбласти
