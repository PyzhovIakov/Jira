
#Область ПрограммныйИнтерфейс

// Возвращает через описание оповещения результат установки штампов в документ.
//
// Параметры:
//  ОписаниеОповещенияОВыполнении  - ОписаниеОповещения - Данные процедуры в которую необходимо вернуть результат
//                                                        выполнения функции.
//  ПараметрыУстановкиШтампов      - см. Интеграция1СШтампКлиентСервер.НовыеПараметрыШтампированияФайлаДокумента.
//  ПользовательскийСценарий       - Строка (250) - Строковое описание без пробелов, информирующее о месте использования 
//     механики 1С:Штамп внутри конфигурации. Рекомендуется указывать условный путь к ключевому интерфейсу или механизму,
//     который использует механики 1С:Штамп с описанием события использования.
//     
//     Примеры:
//      - "БЭД.ИнтерфейсДокументовЭДО.ТекущиеДелаПоЭДО.ПредпросмотрПриАктивизацииСтроки"
//      - "БЭД.ДемоШтампированиеФайлов.ВизуализацияПроштампированногоЭлектронногоДокумента"
//      - "Документ.СчетНаОплату.ПечатьСчетаНаОплатуКонтрагенту"
//      - "РегламентноеЗадание.ВыгрузкаЭлектронныхДокументов"
//     
//  Таймаут - Число, Неопределено  - Максимальное время ожидания получения результата выполнения задания из сервиса.
//                                    По умолчанию - 600 сек.
//  ПараметрыОжидания              - см. ДлительныеОперацииКлиент.ПараметрыОжидания
//  
// Пример:
// 
//  МассивШтампов = Новый Массив;
//	
//	МассивШтампов.Добавить(ДвоичныеДанныеШтампа);
//	ПараметрыШтампов = ПараметрыШтампов(МассивШтампов);
//	
//	ПараметрыУстановкиШтамповВДокумент = Интеграция1СШтампКлиентСервер.НовыеПараметрыШтампированияФайлаДокумента();
//	
//	ПараметрыУстановкиШтамповВДокумент.ПараметрыДокумента.ДвоичныеДанные   = ДвоичныеДанныеДокумента;
//	ПараметрыУстановкиШтамповВДокумент.ПараметрыДокумента.Расширение       = "pdf";
//	ПараметрыУстановкиШтамповВДокумент.ПараметрыШтампов.ПоПозиционированию = ПараметрыШтампов;
//	
//	Сценарий = "БЭД.ИнтерфейсДокументовЭДО.ТекущиеДелаПоЭДО.ПредпросмотрПриАктивизацииСтроки";
//	ОписаниеОповещения = Новый ОписаниеОповещения("РезультатУстановкиШтамповВДокумент", ЭтотОбъект);
//	
//	Интеграция1СШтампКлиент.УстановитьШтампВДокумент(
//		ОписаниеОповещения,
//		ПараметрыУстановкиШтамповВДокумент,
//		Сценарий,
//		600);
//
Процедура УстановитьШтампыВДокумент(Знач ОписаниеОповещенияОВыполнении,
	Знач ПараметрыУстановкиШтампов,
	Знач ПользовательскийСценарий,
	Знач Таймаут = Неопределено,
	Знач ПараметрыОжидания = Неопределено) Экспорт
	
	// Асинхронный режим
	// Получаем результат проштамповки в 3 этапа:
	//  1. Отправляем запрос в сервис на добавление штампа. В сервисе формируется задание в очереди,
	//     которое будет выполнено в течение какого-то времни
	//  2. Отправляем запрос на получение статуса выполнения задания.
	//  3. Получаем результат выполнения задания. Результат отправляем в процедуру описания оповещения о выполнении.
	
	Интеграция1СШтампСлужебныйКлиент.УстановитьШтампыВДокумент(ОписаниеОповещенияОВыполнении,
		ПараметрыУстановкиШтампов,
		ПользовательскийСценарий,
		Таймаут,
		ПараметрыОжидания);
	
КонецПроцедуры

#Область УстаревшиеПроцедурыИФункции

// Устарела. Следует использовать Интеграция1СШтампКлиент.УстановитьШтампыВДокумент.
// Возвращает через описание оповещения результат штампирования документа.
//
// Параметры:
//  ОписаниеОповещенияОВыполнении  - ОписаниеОповещения - Данные процедуры в которую необходимо вернуть результат
//                                      выполнения функции
//  ПараметрыДобавленияШтампов     - см. Интеграция1СШтампКлиентСервер.НовыеПараметрыДобавленияШтамповВДокумент
//  ПользовательскийСценарий       - Строка (250) - Строковое описание без пробелов, информирующее о месте использования 
//     механики 1С:Штамп внутри конфигурации. Рекомендуется указывать условный путь к ключевому интерфейсу или механизму,
//     который использует механики 1С:Штамп с описанием события использования.
//     
//     Примеры:
//      - "БЭД.ИнтерфейсДокументовЭДО.ТекущиеДелаПоЭДО.ПредпросмотрПриАктивизацииСтроки"
//      - "БЭД.ДемоШтампированиеФайлов.ВизуализацияПроштампированногоЭлектронногоДокумента"
//      - "Документ.СчетНаОплату.ПечатьСчетаНаОплатуКонтрагенту"
//      - "РегламентноеЗадание.ВыгрузкаЭлектронныхДокументов"
//     
//  Таймаут - Число, Неопределено  - Максимальное время ожидания получения результата выполнения задания из сервиса.
//                                    По умолчанию - 600 сек.
//  ПараметрыОжидания              - см. ДлительныеОперацииКлиент.ПараметрыОжидания
//  
// Пример:
// 
//  МассивШтампов = Новый Массив;
//	
//	МассивШтампов.Добавить(ДвоичныеДанныеШтампа);
//	ПараметрыШтампов = ПараметрыШтампов(МассивШтампов);
//	
//	ПараметрыДобавленияШтамповВДокумент = Интеграция1СШтампКлиентСервер.НовыеПараметрыШтампированияФайлаДокумента();
//	
//	ПараметрыДобавленияШтамповВДокумент.ПараметрыДокумента.ДвоичныеДанные   = ДвоичныеДанныеДокумента;
//	ПараметрыДобавленияШтамповВДокумент.ПараметрыДокумента.Расширение       = "pdf";
//	ПараметрыДобавленияШтамповВДокумент.ПараметрыШтампов.ПоПозиционированию = ПараметрыШтампов;
//	
//	Сценарий = "БЭД.ИнтерфейсДокументовЭДО.ТекущиеДелаПоЭДО.ПредпросмотрПриАктивизацииСтроки";
//	ОписаниеОповещения = Новый ОписаниеОповещения("РезультатУстановкиШтамповВДокумент", ЭтотОбъект);
//	
//	Интеграция1СШтампКлиент.УстановитьШтампВДокумент(
//		ОписаниеОповещения,
//		ПараметрыДобавленияШтамповВДокумент,
//		Сценарий,
//		600);
//
Процедура УстановитьШтампВДокумент(Знач ОписаниеОповещенияОВыполнении,
	Знач ПараметрыДобавленияШтампов,
	Знач ПользовательскийСценарий,
	Знач Таймаут = Неопределено,
	Знач ПараметрыОжидания = Неопределено) Экспорт
	
	// Асинхронный режим
	// Получаем результат проштамповки в 3 этапа:
	//  1. Отправляем запрос в сервис на добавление штампа. В сервисе формируется задание в очереди,
	//     которое будет выполнено в течение какого-то времни
	//  2. Отправляем запрос на получение статуса выполнения задания.
	//  3. Получаем результат выполнения задания. Результат отправляем в процедуру описания оповещения о выполнении.
	
	ПараметрыУстановкиШтампов = Интеграция1СШтампКлиентСервер.НовыеПараметрыШтампированияФайлаДокумента();
	ЗаполнитьЗначенияСвойств(ПараметрыУстановкиШтампов.ПараметрыДокумента, ПараметрыДобавленияШтампов.ПараметрыДокумента);
	
	МассивШтампов = Новый Массив;
	
	Для Каждого ПараметрыШтампа Из ПараметрыДобавленияШтампов.ПараметрыШтампов Цикл
		
		НовыеПараметрыШтампа = Интеграция1СШтампКлиентСервер.НовыеПараметрыВставкиШтампаПоПозиции();
		ЗаполнитьЗначенияСвойств(НовыеПараметрыШтампа.ПараметрыШтампа    , ПараметрыШтампа.ПараметрыШтампа);
		ЗаполнитьЗначенияСвойств(НовыеПараметрыШтампа.ПараметрыРазмещения, ПараметрыШтампа.ПараметрыРазмещения);
		ЗаполнитьЗначенияСвойств(НовыеПараметрыШтампа.ПравилаРасположения, ПараметрыШтампа.ПравилаРасположения);
		ЗаполнитьЗначенияСвойств(НовыеПараметрыШтампа.Настройки          , ПараметрыШтампа.Настройки);
		
		НовыеПараметрыШтампа.ПараметрыРазмещения.ОтступОтГраниц    = ПараметрыШтампа.ОтступОтГраниц;
		НовыеПараметрыШтампа.Настройки.КоэффициентИзмененияРазмера = ПараметрыШтампа.КоэффициентИзмененияРазмера;
		
		МассивШтампов.Добавить(НовыеПараметрыШтампа);
		
	КонецЦикла;
	
	ПараметрыУстановкиШтампов.ПараметрыШтампов.ПоПозиционированию  = МассивШтампов;
	ПараметрыУстановкиШтампов.ПараметрыРезультата.ФорматРезультата = "pdf";
	
	УстановитьШтампыВДокумент(ОписаниеОповещенияОВыполнении,
		ПараметрыУстановкиШтампов,
		ПользовательскийСценарий,
		Таймаут,
		ПараметрыОжидания);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
