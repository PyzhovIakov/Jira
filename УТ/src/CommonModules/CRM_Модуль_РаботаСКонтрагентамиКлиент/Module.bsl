
#Область СлужебныйПрограммныйИнтерфейс

// Открывает форму партнера со старым или новым интерфейсом
//
// Параметры:
//	Форма - УправляемаяФорма - форма, из которой вызывается обработчик.
//		Если вызывается вне формы, тогда значение Неопределено;
//	СтруктураПараметры - Структура - параметры;
//
Процедура ОткрытьФормуПартнераСоответствующуюИнтерфейсу(Форма, СтруктураПараметры) Экспорт
	
	ВыбраннаяФорма = "CRM_Модуль_ФормаЭлементаРеквизитыКонтрагентаНовая";
	ОткрытьФорму("Справочник.Партнеры.Форма."+ВыбраннаяФорма, СтруктураПараметры, Форма);
	
КонецПроцедуры// ОткрытьФормуПартнераСоответствующуюИнтерфейсу(Форма, Результат) Экспорт

Процедура ЗаполнитьДанныеРуководителя(Форма, РеквизитыРуководителя) Экспорт
	
	Если СтрНайти(Форма.ИмяФормы, "CRM") = 0 Или РеквизитыРуководителя.Фамилия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("НовыеДанныеРуководителя", РеквизитыРуководителя);
	СтруктураПоиска.Вставить("ФамилияКЛ", РеквизитыРуководителя.Фамилия);
	СтруктураПоиска.Вставить("ИмяКЛ", РеквизитыРуководителя.Имя);
	СтруктураПоиска.Вставить("ОтчествоКЛ", РеквизитыРуководителя.Отчество);
	СтруктураПоиска.Вставить("ФамилияКонтактногоЛица", РеквизитыРуководителя.Фамилия);
	СтруктураПоиска.Вставить("ИмяКонтактногоЛица", РеквизитыРуководителя.Имя);
	СтруктураПоиска.Вставить("ОтчествоКонтактногоЛица", РеквизитыРуководителя.Отчество);
	ЗаполнитьЗначенияСвойств(Форма, СтруктураПоиска);
	
	Если Не ЗначениеЗаполнено(Форма.Объект.Ссылка) И Форма.ИмяФормы = "Справочник.Партнеры.Форма.CRM_Модуль_ФормаЭлементаРеквизитыКонтрагентаНовая" Тогда
		Форма.Контакт_Объект.CRM_Фамилия = РеквизитыРуководителя.Фамилия;
		Форма.Контакт_Объект.CRM_Имя = РеквизитыРуководителя.Имя;
		Форма.Контакт_Объект.CRM_Отчество = РеквизитыРуководителя.Отчество;
		Форма.Контакт_Объект.Наименование = РеквизитыРуководителя.Фамилия + " " + РеквизитыРуководителя.Имя 
			+?(ЗначениеЗаполнено(РеквизитыРуководителя.Отчество), " " + РеквизитыРуководителя.Отчество, "");
	КонецЕсли;

КонецПроцедуры

#КонецОбласти // СлужебныйПрограммныйИнтерфейс
