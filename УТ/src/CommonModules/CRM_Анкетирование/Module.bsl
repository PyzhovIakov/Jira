
////////////////////////////////////////////////////////////////////////////////
// Подсистема "Анкетирование"
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Формирование формы заполнения анкеты.

// Выполняет построение формы, согласно раздела шаблона анкеты.
//
//  Форма                       - см. Документ.Анкета.Форма.ФормаДокумента
//                              - см. ОбщаяФорма.МастерАнкетыПоРазделам
//  ТекущиеДанныеДеревоРазделов - ДанныеФормыЭлементДерева - текущий раздел, для которого строится форма заполнения, где:
//   * Ссылка - СправочникСсылка.ВопросыШаблонаАнкеты
//
Процедура ПостроениеФормыЗаполненияПоРазделу(Форма, ТекущиеДанныеДеревоРазделов) Экспорт

	ДобавляемыеРеквизиты = Новый Массив;
	Форма.ТаблицаВопросовРаздела.Очистить();

	ЭлементНадписьВступление = Форма.Элементы.НадписьВступление; //ПолеФормы
	Если ТекущиеДанныеДеревоРазделов.ТипСтроки = "Раздел" Тогда

		ЭлементНадписьВступление.Заголовок  = НСтр("ru = 'Раздел'") + " " + ТекущиеДанныеДеревоРазделов.Формулировка;
		ЭлементНадписьВступление.ЦветТекста =  ЦветаСтиля.ЦветРазделаПанелиФункций;
		ЭлементНадписьВступление.Шрифт = ШрифтыСтиля.КрупныйШрифтТекста;

		Раздел = ТекущиеДанныеДеревоРазделов.Ссылка;
		ПолныйКодРаздела = ТекущиеДанныеДеревоРазделов.ПолныйКод;
		
		// получение вопросов раздела
		Форма.ТаблицаВопросовРаздела.Очистить();
		ПолучитьИнформациюПоВопросамАнкеты(Форма, Форма.ШаблонАнкеты, Раздел, ПолныйКодРаздела);
		СформироватьДобавляемыеРеквизитыДляРаздела(ДобавляемыеРеквизиты, Форма);

	Иначе

		Вступление = ?(ПустаяСтрока(Форма.Вступление), НСтр("ru = 'Нажмите далее для заполнения анкеты.'"),
			Форма.Вступление);
		Заключение = ?(ПустаяСтрока(Форма.Заключение), НСтр("ru = 'Спасибо за то что заполнили анкету.'"),
			Форма.Заключение);

		ЭлементНадписьВступление.Заголовок = ?(ТекущиеДанныеДеревоРазделов.ТипСтроки = "Вступление", Вступление,
			Заключение);
		ЭлементНадписьВступление.ЦветТекста = ЦветаСтиля.ЦветТекстаПоля;
		ЭлементНадписьВступление.Шрифт = ШрифтыСтиля.КрупныйШрифтТекста;

	КонецЕсли;

	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты, Форма.ДобавленныеДинамическиРеквизиты.ВыгрузитьЗначения());
	
	// Удаление ранее динамически сформированных элементов формы.
	УдалитьЭлементыФормыЗаполнения(Форма, Форма.ДобавленныеДинамическиРеквизиты);
	Форма.ДобавленныеДинамическиРеквизиты.Очистить();
	Для Каждого ДобавленныйРеквизит Из ДобавляемыеРеквизиты Цикл
		Если ПустаяСтрока(ДобавленныйРеквизит.Путь) Тогда
			Форма.ДобавленныеДинамическиРеквизиты.Добавить(ДобавленныйРеквизит.Имя);
		КонецЕсли;
	КонецЦикла;

	Если ТекущиеДанныеДеревоРазделов.ТипСтроки = "Раздел" Тогда
		// добавление элементов формы
		СформироватьЭлементыФормыДляРаздела(Форма);
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Создание реквизитов формы заполнения анкеты.

// Формирует массив добавляемых реквизитов.
//
// Параметры:
//  ДобавляемыеРеквизиты - Массив - предназначен для аккумулирования создаваемых реквизитов формы.
//  Форма                - ФормаКлиентскогоПриложения - форма, для которой формируется массив реквизитов.
//
Процедура СформироватьДобавляемыеРеквизитыДляРаздела(ДобавляемыеРеквизиты, Форма)
	
	Для Каждого СтрокаТаблицы Из Форма.ТаблицаВопросовРаздела Цикл
		ДобавитьРеквизитыДляВопроса(СтрокаТаблицы, ДобавляемыеРеквизиты, Форма);
	КонецЦикла;
	
КонецПроцедуры

// Добавляет реквизиты формы для простых вопросов.
//
// Параметры:
//  СтрокаДерева         - СтрокаДереваЗначений - строка дерева шаблона анкеты.
//  ДобавляемыеРеквизиты - Массив - предназначен для аккумулирования добавляемых реквизитов формы.
//
Процедура ДобавитьРеквизитыДляВопроса(СтрокаДерева, ДобавляемыеРеквизиты, Форма)
	
	ИмяВопроса = АнкетированиеКлиентСервер.ИмяВопроса(СтрокаДерева.КлючСтроки);
	
	ОписаниеТипаСтроки = Новый ОписаниеТипов("Строка");
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяВопроса + "_Формулировка", ОписаниеТипаСтроки));
	
	Если СтрокаДерева.ТипВопроса = Перечисления.ТипыВопросовШаблонаАнкеты.Табличный Тогда
		ДобавитьРеквизитыТабличныйВопрос(СтрокаДерева, ДобавляемыеРеквизиты, Форма);
	ИначеЕсли СтрокаДерева.ТипВопроса = Перечисления.ТипыВопросовШаблонаАнкеты.Комплексный Тогда
		ДобавитьРеквизитыКомплексныйВопрос(СтрокаДерева, ДобавляемыеРеквизиты, Форма);
	Иначе
		
		Если СтрокаДерева.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Строка Или СтрокаДерева.ТипОтвета
			= Перечисления.ТипыОтветовНаВопрос.Текст Тогда
			
			ОписаниеТипаСтроки = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(СтрокаДерева.Длина));
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяВопроса, ОписаниеТипаСтроки, ,
				СтрокаДерева.Формулировка));
			
		ИначеЕсли СтрокаДерева.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Булево Тогда
			ОписаниеТипаБулево = Новый ОписаниеТипов("Булево");
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяВопроса, ОписаниеТипаБулево, ,
				СтрокаДерева.Формулировка));
		ИначеЕсли СтрокаДерева.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Дата Тогда
			ОписаниеТипаДата = Новый ОписаниеТипов("Дата", Новый КвалификаторыДаты(ЧастиДаты.Дата));
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяВопроса, ОписаниеТипаДата, ,
				СтрокаДерева.Формулировка));
		ИначеЕсли СтрокаДерева.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Число Тогда
			
			ОписаниеТипаЧисло = Новый ОписаниеТипов("Число", , , Новый КвалификаторыЧисла(СтрокаДерева.Длина,
				СтрокаДерева.Точность));
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяВопроса, ОписаниеТипаЧисло, ,
				СтрокаДерева.Формулировка));
			
			Если СтрокаДерева.ПоказыватьПолосуРегулирования Тогда
				ОписаниеТипаЧисло = Новый ОписаниеТипов("Число", , , Новый КвалификаторыЧисла(15, 2));
				ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяВопроса + "_ПолосаРегулированияРеквизит",
					ОписаниеТипаЧисло, , СтрокаДерева.Формулировка));
			КонецЕсли;
			
		// +CRM
		ИначеЕсли СтрокаДерева.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.CRM_ВидКонтактнойИнформации Тогда
			
			ОписаниеТипаСтроки = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0));
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяВопроса, ОписаниеТипаСтроки, , СтрокаДерева.Формулировка));
		// -CRM
		ИначеЕсли СтрокаДерева.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.ЗначениеИнформационнойБазы Тогда
			
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяВопроса, СтрокаДерева.ТипЗначения, ,
				 СтрокаДерева.Формулировка));
			
		ИначеЕсли СтрокаДерева.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.ОдинВариантИз Тогда
			
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяВопроса,СтрокаДерева.ТипЗначения,,СтрокаДерева.Формулировка));
			
		ИначеЕсли СтрокаДерева.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.НесколькоВариантовИз Тогда
			
			// +CRM
			ВариантыОтветовНаВопрос = Анкетирование.ВариантыОтветовНаВопрос(СтрокаДерева.ЭлементарныйВопрос, Форма);
			// -CRM
			
			ОписаниеТипаСтроки = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(150));
			ОписаниеТипаБулево = Новый ОписаниеТипов("Булево");
			
			Счетчик = 0;
			
			Для Каждого ВариантОтвета Из ВариантыОтветовНаВопрос Цикл
				Счетчик = Счетчик + 1;
				ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяВопроса + "_Реквизит_" + Счетчик,
					 ОписаниеТипаБулево, , ВариантОтвета.Представление));
				Если ВариантОтвета.ТребуетОткрытогоОтвета Тогда
					ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяВопроса + "_Комментарий_" + Счетчик,
						ОписаниеТипаСтроки));
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
		Если (СтрокаДерева.ТипОтвета <> Перечисления.ТипыОтветовНаВопрос.НесколькоВариантовИз)
			 И (СтрокаДерева.ТребуетсяКомментарий) Тогда
			ОписаниеТипаСтроки = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(150));
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяВопроса + "_Комментарий", ОписаниеТипаСтроки, ,
				СтрокаДерева.ПояснениеКомментария));
		КонецЕсли;
		
		Если СтрокаДерева.ИспользоватьОтказОтОтвета Тогда
			ОписаниеТипаБулево = Новый ОписаниеТипов("Булево");
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяВопроса + "_ИспользоватьОтказОтОтвета",
			ОписаниеТипаБулево, , СтрокаДерева.ФормулировкаОтказаОтОтвета));
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Добавляет реквизиты формы для табличных вопросов.
//
// Параметры:
//  СтрокаДерева         - СтрокаДереваЗначений - строка дерева шаблона анкеты.
//  ДобавляемыеРеквизиты - Массив - предназначен для аккумулирования добавляемых реквизитов формы.
//
Процедура ДобавитьРеквизитыТабличныйВопрос(СтрокаДерева, ДобавляемыеРеквизиты, Форма)
	
	ТипТабличногоВопроса = СтрокаДерева.ТипТабличногоВопроса;
	ИмяВопроса           = АнкетированиеКлиентСервер.ИмяВопроса(СтрокаДерева.КлючСтроки);
	ИмяТаблицы           = ИмяВопроса + "_Таблица";
	ИмяКолонкиБезНомера  = ИмяТаблицы + "_Колонка_";
	ОписаниеТиповПВХ     = Метаданные.ПланыВидовХарактеристик.ВопросыДляАнкетирования.Тип;
	
	РеквизитТаблица = Новый РеквизитФормы(ИмяТаблицы , Новый ОписаниеТипов("ТаблицаЗначений"), ,
		 СтрокаДерева.Формулировка);
	ДобавляемыеРеквизиты.Добавить(РеквизитТаблица);
	
	Если ТипТабличногоВопроса = Перечисления.ТипыТабличныхВопросов.Составной
		Или ТипТабличногоВопроса = Перечисления.ТипыТабличныхВопросов.ПредопределенныеОтветыВСтроках Тогда
		
		Для инд = 1 По СтрокаДерева.СоставТабличногоВопроса.Количество() Цикл
			
			НайденныеСтроки = Форма.ВопросыПредставлениеТипы.НайтиСтроки(Новый Структура("Вопрос",
				 СтрокаДерева.СоставТабличногоВопроса[инд - 1].ЭлементарныйВопрос));
			Если НайденныеСтроки.Количество() > 0 Тогда
				ПредставлениеТипВопроса = НайденныеСтроки[0];
			Иначе
				Продолжить;
			КонецЕсли;
			
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяКолонкиБезНомера + XMLСтрока(инд),
				ПредставлениеТипВопроса.Тип, ИмяТаблицы, ПредставлениеТипВопроса.Формулировка));
		
		КонецЦикла;
		
	ИначеЕсли ТипТабличногоВопроса = Перечисления.ТипыТабличныхВопросов.ПредопределенныеОтветыВКолонках Тогда
		
		// Вопрос, ответы на который будут отображаться в колонках.
		ВопросДляКолонок = СтрокаДерева.СоставТабличногоВопроса[0].ЭлементарныйВопрос;
		// Добавим первую колонку в таблицу.
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяКолонкиБезНомера + "1",
			 Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ВопросыДляАнкетирования"), ИмяТаблицы));
		
		// Добавим остальные колонки
		МассивОтветы = СтрокаДерева.ПредопределенныеОтветы.НайтиСтроки(Новый Структура("ЭлементарныйВопрос",
			 ВопросДляКолонок));
		Для инд = 1 По МассивОтветы.Количество() Цикл
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяКолонкиБезНомера + XMLСтрока(инд + 1),
				ОписаниеТиповПВХ, ИмяТаблицы, МассивОтветы[инд - 1].Ответ));
		КонецЦикла;
		
	ИначеЕсли ТипТабличногоВопроса = Перечисления.ТипыТабличныхВопросов.ПредопределенныеОтветыВСтрокахИКолонках Тогда
		
		// Вопрос, ответы на который будут отображаться в колонках.
		ВопросДляКолонок = СтрокаДерева.СоставТабличногоВопроса[1].ЭлементарныйВопрос;
		
		// Вопрос, который задает тип ячеек.
		ВопросДляЯчеек  = СтрокаДерева.СоставТабличногоВопроса[2].ЭлементарныйВопрос;
		НайденныеСтроки = Форма.ВопросыПредставлениеТипы.НайтиСтроки(Новый Структура("Вопрос", ВопросДляЯчеек));
		Если НайденныеСтроки.Количество() > 0 Тогда
			ПредставлениеТипВопросаДляЯчеек = НайденныеСтроки[0];
		Иначе
			Возврат;
		КонецЕсли;
		
		// Вопрос, ответы на который будут отображаться в строках первой колонки.
		ВопросДляСтрок  = СтрокаДерева.СоставТабличногоВопроса[0].ЭлементарныйВопрос;
		НайденныеСтроки = Форма.ВопросыПредставлениеТипы.НайтиСтроки(Новый Структура("Вопрос", ВопросДляСтрок));
		Если НайденныеСтроки.Количество() > 0 Тогда
			ПредставлениеТипВопросаДляСтрок = НайденныеСтроки[0];
		Иначе
			Возврат;
		КонецЕсли;
		// Добавим первую колонку в таблицу.
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяКолонкиБезНомера + "1",
			 ПредставлениеТипВопросаДляСтрок.Тип, ИмяТаблицы, ПредставлениеТипВопросаДляСтрок.Формулировка));
		
		// Добавим остальные колонки
		МассивОтветы = СтрокаДерева.ПредопределенныеОтветы.НайтиСтроки(Новый Структура("ЭлементарныйВопрос",
			 ВопросДляКолонок));
		Для инд = 1 По МассивОтветы.Количество() Цикл
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяКолонкиБезНомера + XMLСтрока(инд + 1),
				ПредставлениеТипВопросаДляЯчеек.Тип, ИмяТаблицы, МассивОтветы[инд - 1].Ответ));
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Добавляет реквизиты формы для комплексных вопросов.
//
// Параметры:
//  СтрокаДерева         - СтрокаДереваЗначений - строка дерева шаблона анкеты.
//  ДобавляемыеРеквизиты - Массив - предназначен для аккумулирования добавляемых реквизитов формы.
//
Процедура ДобавитьРеквизитыКомплексныйВопрос(СтрокаДерева, ДобавляемыеРеквизиты, Форма)
	
	ИмяВопроса = АнкетированиеКлиентСервер.ИмяВопроса(СтрокаДерева.КлючСтроки);
	Для Каждого СтрокаКомплексногоВопроса Из СтрокаДерева.СоставКомплексногоВопроса Цикл // СтрокаТабличнойЧасти: см. СправочникТабличнаяЧасть.ВопросыШаблонаАнкеты.СоставКомплексногоВопроса
		
		НайденныеСтроки = Форма.ВопросыПредставлениеТипы.НайтиСтроки(Новый Структура("Вопрос",
			 СтрокаКомплексногоВопроса.ЭлементарныйВопрос));
		Если НайденныеСтроки.Количество() > 0 Тогда
			ПредставлениеТипВопроса = НайденныеСтроки[0];
		Иначе
			Продолжить;
		КонецЕсли;
		
		Если ПредставлениеТипВопроса.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.НесколькоВариантовИз Тогда
			
			// +CRM
			//ВариантыОтветовНаВопрос = ВариантыОтветовНаВопрос(СтрокаКомплексногоВопроса.ЭлементарныйВопрос,Форма);
			ВариантыОтветовНаВопрос = Анкетирование.ВариантыОтветовНаВопрос(СтрокаКомплексногоВопроса.ЭлементарныйВопрос,
				 Форма);
			// +CRM
			
			ОписаниеТипаСтроки = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(150));
			ОписаниеТипаБулево = Новый ОписаниеТипов("Булево");
			
			Счетчик = 0;
			
			Для Каждого ВариантОтвета Из ВариантыОтветовНаВопрос Цикл

				Счетчик = Счетчик + 1;
				ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяВопроса + "_Ответ_" + Формат(
					СтрокаКомплексногоВопроса.НомерСтроки, "ЧГ=") + "_Реквизит_" + Счетчик, ОписаниеТипаБулево, ,
					ВариантОтвета.Представление));

				Если ВариантОтвета.ТребуетОткрытогоОтвета Тогда
					ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяВопроса + "_Ответ_" + Формат(
						СтрокаКомплексногоВопроса.НомерСтроки, "ЧГ=") + "_Комментарий_" + Счетчик, ОписаниеТипаСтроки));
				КонецЕсли;

			КонецЦикла;

		Иначе

			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяВопроса + "_Ответ_" + Формат(
				СтрокаКомплексногоВопроса.НомерСтроки, "ЧГ="), ПредставлениеТипВопроса.Тип, ,
				ПредставлениеТипВопроса.Формулировка));

		КонецЕсли;

		Если (ПредставлениеТипВопроса.ТипОтвета <> Перечисления.ТипыОтветовНаВопрос.НесколькоВариантовИз)
			И (СтрокаКомплексногоВопроса.ТребуетсяКомментарий) Тогда

			ОписаниеТипаСтроки = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(150));
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяВопроса + "_Комментарий_" + Формат(
				СтрокаКомплексногоВопроса.НомерСтроки, "ЧГ="), ОписаниеТипаСтроки, ,
				СтрокаКомплексногоВопроса.ПояснениеКомментария));

		КонецЕсли;

	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Создание элементов формы заполнения анкеты.

// Формирует элементы формы заполнения анкеты для выбранного раздела.
Процедура СформироватьЭлементыФормыДляРаздела(Форма)

	Для Каждого СтрокаТаблицы Из Форма.ТаблицаВопросовРаздела Цикл
		ДобавитьЭлементыФормыПоСтрокеТаблицы(СтрокаТаблицы, Форма.Элементы.ГруппаТелоАнкеты, Форма);
	КонецЦикла;
	СпозиционироватьсяНаПервомВопросеРаздела(Форма);

КонецПроцедуры

// Устанавливает фокус на первом вопросе открывшегося раздела.
//
// Параметры:
//   Форма - см. Документ.Анкета.Форма.ФормаДокумента
//
Процедура СпозиционироватьсяНаПервомВопросеРаздела(Форма)
	
	Если Форма.ТаблицаВопросовРаздела.Количество() > 0 Тогда
		
		ИмяВопроса = АнкетированиеКлиентСервер.ИмяВопроса(Форма.ТаблицаВопросовРаздела[0].КлючСтроки);
		
		НайденныйЭлемент = Форма.Элементы.Найти(ИмяВопроса);
		Если НайденныйЭлемент = Неопределено Тогда
			НайденныйЭлемент = Форма.Элементы.Найти(ИмяВопроса + "_Реквизит_1");
		КонецЕсли;
		
		Если НайденныйЭлемент = Неопределено Тогда
			НайденныйЭлемент = Форма.Элементы.Найти(ИмяВопроса + "_Таблица");
		КонецЕсли;
		
		Если НайденныйЭлемент <> Неопределено Тогда
			Форма.ТекущийЭлемент = НайденныйЭлемент;
			НайденныйЭлемент.АктивизироватьПоУмолчанию = Истина;
			Форма.ИмяЭлементаДляПозиционирования = НайденныйЭлемент.Имя;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Анализирует тип строки дерева анкеты и вызывает соответствующую функцию для добавления элементов формы.
//
// Параметры:
//  СтрокаДерева    - СтрокаДереваЗначений - строка дерева шаблона анкеты.
//  ЭлементГруппы   - ГруппаФормы          - группа формы, для которой будут подчиняться добавляемые реквизиты.
//  Форма           - ФормаКлиентскогоПриложения - форма, для которой добавляются элементы.
//
Процедура ДобавитьЭлементыФормыПоСтрокеТаблицы(СтрокаТаблицы, ЭлементГруппы, Форма)

	Если СтрокаТаблицы.ТипСтроки = "Раздел" Тогда
		ДобавитьЭлементыРаздел(СтрокаТаблицы, ЭлементГруппы, Форма);
	ИначеЕсли СтрокаТаблицы.ТипСтроки = "Вопрос" Тогда
		ДобавитьЭлементыВопрос(СтрокаТаблицы, ЭлементГруппы, Форма);
	КонецЕсли;

КонецПроцедуры

// Добавляет элементы формы для разделов.
//
// Параметры:
//  СтрокаДерева    - СтрокаДереваЗначений - строка дерева шаблона анкеты.
//  ЭлементГруппы   - ГруппаФормы - группа формы, для которой будут подчиняться добавляемые реквизиты.
//  Форма           - ФормаКлиентскогоПриложения - форма, для которой добавляются элементы.
//
Процедура ДобавитьЭлементыРаздел(СтрокаТаблицы, ЭлементГруппы, Форма)
	
	ИмяРаздела = "Раздел_" + СтрЗаменить(СтрокаТаблицы.КлючСтроки, "-", "_");
	
	ЭлементРаздел = Форма.Элементы.Добавить(ИмяРаздела, Тип("ГруппаФормы"), ЭлементГруппы);
	ЭлементРаздел.Вид           = ВидГруппыФормы.ОбычнаяГруппа;
	ЭлементРаздел.Заголовок     = ПолныйКодНаименование(СтрокаТаблицы);
	ЭлементРаздел.Группировка   = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ЭлементРаздел.РастягиватьПоВертикали = Ложь;
	
КонецПроцедуры

// Добавляет элементы формы для вопросов.
//
// Параметры:
//  СтрокаТаблицы - ДанныеФормыЭлементКоллекции - строка таблицы вопросов раздела.
//  ЭлементГруппы - ГруппаФормы - группа формы, для которой будут подчиняться добавляемые реквизиты.
//  Форма         - ФормаКлиентскогоПриложения - форма для которой добавляются элементы.
//
Процедура ДобавитьЭлементыВопрос(СтрокаТаблицы, ЭлементГруппа, Форма)
	
	ИмяВопроса = АнкетированиеКлиентСервер.ИмяВопроса(СтрокаТаблицы.КлючСтроки);
	
	// Зададим элемент группы для вопроса.
	ЭлементГруппаВопроса = Форма.Элементы.Добавить(ИмяВопроса + "_Группа", Тип("ГруппаФормы"), ЭлементГруппа);
	ЭлементГруппаВопроса.Вид                        = ВидГруппыФормы.ОбычнаяГруппа;
	ЭлементГруппаВопроса.ОтображатьЗаголовок        = Ложь;
	ЭлементГруппаВопроса.Отображение                = ОтображениеОбычнойГруппы.ОбычноеВыделение;
	ЭлементГруппаВопроса.Группировка                = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ЭлементГруппаВопроса.РастягиватьПоГоризонтали   = Истина;
	ЭлементГруппаВопроса.РастягиватьПоВертикали     = Ложь;
	
	Если СтрокаТаблицы.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Булево Тогда
		
		ЭлементГруппаВопросаБулево = Форма.Элементы.Добавить(
			ИмяВопроса + "_Группа_Булево" , Тип("ГруппаФормы"), ЭлементГруппаВопроса);
		ЭлементГруппаВопросаБулево.Вид                        = ВидГруппыФормы.ОбычнаяГруппа;
		ЭлементГруппаВопросаБулево.ОтображатьЗаголовок        = Ложь;
		ЭлементГруппаВопросаБулево.Отображение                = ОтображениеОбычнойГруппы.Нет;
		ЭлементГруппаВопросаБулево.Группировка                = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		ЭлементГруппаВопросаБулево.РастягиватьПоГоризонтали   = Истина;
		ЭлементГруппаВопросаБулево.РастягиватьПоВертикали     = Ложь;
	КонецЕсли;
	
	Форма[ИмяВопроса + "_Формулировка"] = ПолныйКодНаименование(СтрокаТаблицы);
	
	Если СтрокаТаблицы.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Булево Тогда
		Элемент = Форма.Элементы.Добавить(
			ИмяВопроса + "_Формулировка", Тип("ДекорацияФормы"), ЭлементГруппаВопросаБулево);
	Иначе
		Элемент = Форма.Элементы.Добавить(
			ИмяВопроса + "_Формулировка", Тип("ДекорацияФормы"), ЭлементГруппаВопроса); // РасширениеДекорацииФормыДляНадписи
	КонецЕсли;
	Элемент.Вид                      = ВидДекорацииФормы.Надпись;
	Элемент.ВертикальноеПоложение    = ВертикальноеПоложениеЭлемента.Верх;
	Элемент.Заголовок                = Форма[ИмяВопроса + "_Формулировка"];
	Элемент.АвтоМаксимальнаяШирина   = Ложь;
	Элемент.МаксимальнаяШирина       = 100;
	Элемент.РастягиватьПоГоризонтали = Ложь;
	Элемент.РастягиватьПоВертикали   = Ложь;
	Элемент.Подсказка                = СтрокаТаблицы.Подсказка;
	Элемент.Шрифт                    = ШрифтыСтиля.ВажнаяНадписьШрифт;
	
	Если СтрокаТаблицы.СпособОтображенияПодсказки = Перечисления.СпособыОтображенияПодсказок.ЗнакВопросаСправа Тогда
		Элемент.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
	Иначе
		Элемент.ОтображениеПодсказки = ОтображениеПодсказки.ОтображатьСнизу;
	КонецЕсли;
	
	ЭлементГруппаВопросКомментарий = Форма.Элементы.Добавить(ИмяВопроса + "_Группа_Вопрос_Комментарий",
		 Тип("ГруппаФормы"), ЭлементГруппаВопроса);
	ЭлементГруппаВопросКомментарий.Вид                 = ВидГруппыФормы.ОбычнаяГруппа;
	ЭлементГруппаВопросКомментарий.Отображение         = ОтображениеОбычнойГруппы.Нет;
	ЭлементГруппаВопросКомментарий.Группировка         = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ЭлементГруппаВопросКомментарий.ОтображатьЗаголовок = Ложь;
	
	Если СтрокаТаблицы.ТипВопроса = Перечисления.ТипыВопросовШаблонаАнкеты.Табличный Тогда
		
		ДобавитьЭлементыТабличныйВопрос(СтрокаТаблицы, ЭлементГруппаВопроса, Форма);
				
	ИначеЕсли СтрокаТаблицы.ТипВопроса = Перечисления.ТипыВопросовШаблонаАнкеты.Комплексный Тогда
		
		ДобавитьЭлементыКомплексныйВопрос(СтрокаТаблицы, ЭлементГруппаВопроса, Форма);
		
	Иначе
		
		Если СтрокаТаблицы.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Строка
			Или СтрокаТаблицы.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.ЗначениеИнформационнойБазы Тогда
			
			Элемент = Форма.Элементы.Добавить(ИмяВопроса, Тип("ПолеФормы"), ЭлементГруппаВопросКомментарий);
			Элемент.Вид                        = ВидПоляФормы.ПолеВвода;
			Элемент.ПоложениеЗаголовка         = ПоложениеЗаголовкаЭлементаФормы.Нет;
			Элемент.АвтоОтметкаНезаполненного  = СтрокаТаблицы.Обязательный;
			Элемент.ПутьКДанным                = ИмяВопроса;
			Элемент.АвтоМаксимальнаяШирина     = Ложь;
			Элемент.РастягиватьПоГоризонтали   = Ложь;
			
		ИначеЕсли СтрокаТаблицы.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Текст Тогда
			
			Элемент = Форма.Элементы.Добавить(ИмяВопроса, Тип("ПолеФормы"), ЭлементГруппаВопросКомментарий);
			Элемент.Вид                       = ВидПоляФормы.ПолеВвода;
			Элемент.ПоложениеЗаголовка        = ПоложениеЗаголовкаЭлементаФормы.Нет;
			Элемент.АвтоОтметкаНезаполненного = СтрокаТаблицы.Обязательный;
			Элемент.ПутьКДанным               = ИмяВопроса;
			Элемент.РастягиватьПоВертикали    = Ложь;
			Элемент.АвтоМаксимальнаяШирина    = Ложь;
			УстановитьПараметрыЭлементаЯчейкаТекст(Элемент); 
			
		ИначеЕсли СтрокаТаблицы.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Булево Тогда
			
			Элемент = Форма.Элементы.Добавить(ИмяВопроса, Тип("ПолеФормы"), ЭлементГруппаВопросаБулево);
			// +CRM
			//Если СтрокаТаблицы.ВидФлажка = Перечисления.ВидыФлажкаВАнкетах.Флажок Тогда
				Элемент.Вид = ВидПоляФормы.ПолеФлажка;
			// Иначе
			//	Элемент.Вид = ВидПоляФормы.ПолеВвода;
			//КонецЕсли;
			// -CRM
			
			Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
			Элемент.ПутьКДанным        = ИмяВопроса;
			
		ИначеЕсли СтрокаТаблицы.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Дата Тогда
			
			Элемент = Форма.Элементы.Добавить(ИмяВопроса, Тип("ПолеФормы"), ЭлементГруппаВопросКомментарий);
			Элемент.Вид                       = ВидПоляФормы.ПолеВвода;
			Элемент.ПоложениеЗаголовка        = ПоложениеЗаголовкаЭлементаФормы.Нет;
			Элемент.АвтоОтметкаНезаполненного = СтрокаТаблицы.Обязательный;
			Элемент.ПутьКДанным               = ИмяВопроса;
			Элемент.АвтоМаксимальнаяШирина    = Ложь;
			
		ИначеЕсли СтрокаТаблицы.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Число Тогда
			
			Элемент = Форма.Элементы.Добавить(ИмяВопроса, Тип("ПолеФормы"), ЭлементГруппаВопросКомментарий);
			Элемент.Вид                       = ВидПоляФормы.ПолеВвода;
			Элемент.ПоложениеЗаголовка        = ПоложениеЗаголовкаЭлементаФормы.Нет;
			Элемент.АвтоОтметкаНезаполненного = СтрокаТаблицы.Обязательный
				// +CRM
				//И Не РазрешенВводНулевогоЗначенияВЧисловоеПоле(СтрокаТаблицы);
				И Не Анкетирование.РазрешенВводНулевогоЗначенияВЧисловоеПоле(СтрокаТаблицы);
				// -CRM
			Элемент.МинимальноеЗначение       = ?(СтрокаТаблицы.ИспользоватьМинимальноеЗначение,
				СтрокаТаблицы.МинимальноеЗначение, Неопределено);
			Элемент.МаксимальноеЗначение      = ?(СтрокаТаблицы.ИспользоватьМаксимальноеЗначение,
				СтрокаТаблицы.МаксимальноеЗначение, Неопределено);
			Элемент.КнопкаВыбора              = Ложь;
			Элемент.ПутьКДанным               = ИмяВопроса;
			Элемент.АвтоМаксимальнаяШирина    = Ложь;
			Если СтрокаТаблицы.МинимальноеЗначение <> 0 Или СтрокаТаблицы.МаксимальноеЗначение <> 0 Тогда
				Элемент.КнопкаРегулирования = Истина;
				
				ТекстПодсказки = "";
				Если СтрокаТаблицы.ИспользоватьМинимальноеЗначение И СтрокаТаблицы.ИспользоватьМаксимальноеЗначение Тогда
					ТекстПодсказки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
						"ru = 'Допустим ввод значения от %1 до %2';
						|en = 'You can enter value from %1 to %2'"), СтрокаТаблицы.МинимальноеЗначение,
						СтрокаТаблицы.МаксимальноеЗначение);
				ИначеЕсли Не СтрокаТаблицы.ИспользоватьМинимальноеЗначение
					И СтрокаТаблицы.ИспользоватьМаксимальноеЗначение Тогда
					ТекстПодсказки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
						"ru = 'Допустим ввод значения до %1';
						|en = 'You can enter value to %1'"), СтрокаТаблицы.МаксимальноеЗначение);
				Иначе
					ТекстПодсказки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
						"ru = 'Допустим ввод значения от %1';
						|en = 'You can enter value from %1'"), СтрокаТаблицы.МинимальноеЗначение);
				КонецЕсли;
				
				Элемент.Подсказка = ТекстПодсказки;
				
			КонецЕсли;
			
			Если СтрокаТаблицы.ПоказыватьПолосуРегулирования Тогда
				
				ЭлементГруппаПолосаРегулирования = Форма.Элементы.Добавить(ИмяВопроса + "_Группа_Вопрос_Полоса", Тип(
					"ГруппаФормы"), ЭлементГруппаВопроса);
				ЭлементГруппаПолосаРегулирования.Вид                 = ВидГруппыФормы.ОбычнаяГруппа;
				ЭлементГруппаПолосаРегулирования.Отображение         = ОтображениеОбычнойГруппы.Нет;
				ЭлементГруппаПолосаРегулирования.Группировка         = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
				ЭлементГруппаПолосаРегулирования.ОтображатьЗаголовок = Ложь;
				
				ЭлементПолоса = Форма.Элементы.Добавить(ИмяВопроса + "_ПолосаРегулирования", Тип("ПолеФормы"),
					ЭлементГруппаПолосаРегулирования);
				ЭлементПолоса.Вид = ВидПоляФормы.ПолеПолосыРегулирования;
				ЭлементПолоса.ОтображениеРазметки = ОтображениеРазметкиПолосыРегулирования.СОбоихСторон;
				ЭлементПолоса.ПоложениеЗаголовка        = ПоложениеЗаголовкаЭлементаФормы.Нет;
				ДлинаПолосы = СтрокаТаблицы.МаксимальноеЗначение - СтрокаТаблицы.МинимальноеЗначение;
				ЭлементПолоса.МинимальноеЗначение = 0;
				ЭлементПолоса.МаксимальноеЗначение = ДлинаПолосы / СтрокаТаблицы.ШагПолосыРегулирования;
				ЭлементПолоса.ШагРазметки = 1;
				ЭлементПолоса.Шаг = 1;
				ЭлементПолоса.БольшойШаг = 1;
				ЭлементПолоса.ПутьКДанным               = ИмяВопроса + "_ПолосаРегулированияРеквизит";
				ЭлементПолоса.РастягиватьПоГоризонтали = Ложь;
				ЭлементПолоса.ОтображениеРазметки = ОтображениеРазметкиПолосыРегулирования.СОбоихСторон;
				ЭлементПолоса.УстановитьДействие("ПриИзменении", "Подключаемый_ПриИзмененииПолосыРегулирования");
				
				Форма.Элементы.Переместить(Элемент, ЭлементГруппаПолосаРегулирования);
				Форма.Элементы.Переместить(ЭлементГруппаВопросКомментарий, ЭлементГруппаВопроса);
				
				Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_ПриИзмененииПоляЧисло");
				Элемент.УстановитьДействие("Регулирование", "Подключаемый_РегулированиеПоляЧисло");
				
				ЭлементРасшифровка = Форма.Элементы.Добавить(
					ИмяВопроса + "_РасшифровкаПодсказки", Тип("ДекорацияФормы"), ЭлементГруппаПолосаРегулирования);
				ЭлементРасшифровка.ЦветТекста = ЦветаСтиля.ПоясняющийТекст;
				
			Иначе
				
				ЭлементРасшифровка = Форма.Элементы.Добавить(
					ИмяВопроса + "_РасшифровкаПодсказки", Тип("ДекорацияФормы"), ЭлементГруппаВопросКомментарий);
				ЭлементРасшифровка.ЦветТекста = ЦветаСтиля.ПоясняющийТекст;
				ЭлементГруппаВопросКомментарий.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
				
			КонецЕсли;
			
		// +CRM
		ИначеЕсли СтрокаТаблицы.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.CRM_ВидКонтактнойИнформации Тогда
			
			Элемент = Форма.Элементы.Добавить(ИмяВопроса, Тип("ПолеФормы"), ЭлементГруппаВопросКомментарий);
			Элемент.Вид                         = ВидПоляФормы.ПолеВвода;
			Элемент.МногострочныйРежим          = Ложь;
			Элемент.ПоложениеЗаголовка          = ПоложениеЗаголовкаЭлементаФормы.Нет;
			Элемент.АвтоОтметкаНезаполненного   = СтрокаТаблицы.Обязательный;
			Элемент.ПутьКДанным                 = ИмяВопроса;			
		// -CRM
		ИначеЕсли СтрокаТаблицы.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.ОдинВариантИз Тогда
			
			// +CRM
			//ВариантыОтветовНаВопрос = ВариантыОтветовНаВопрос(СтрокаТаблицы.ЭлементарныйВопрос,Форма);
			ВариантыОтветовНаВопрос = Анкетирование.ВариантыОтветовНаВопрос(СтрокаТаблицы.ЭлементарныйВопрос, Форма);
			// -CRM
				
			Элемент = Форма.Элементы.Добавить(ИмяВопроса,Тип("ПолеФормы"),ЭлементГруппаВопросКомментарий);
			Элемент.Вид                     = ВидПоляФормы.ПолеПереключателя;
			Элемент.ПоложениеЗаголовка      = ПоложениеЗаголовкаЭлементаФормы.Нет;
			Элемент.ПутьКДанным             = ИмяВопроса;
			Элемент.ВысотаЭлемента          = 1;
			Элемент.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Лево;
			Если СтрокаТаблицы.ВидПереключателя = Перечисления.ВидыПереключателяВАнкетах.Тумблер Тогда
				Элемент.ВидПереключателя = ВидПереключателя.Тумблер;
				Элемент.КоличествоКолонок = 0;
				Элемент.ОдинаковаяШиринаКолонок = Ложь;
			Иначе
				Элемент.ВидПереключателя = ВидПереключателя.Переключатель;
				Элемент.КоличествоКолонок = 1;
			КонецЕсли;
				
			Для Каждого ВариантОтвета Из ВариантыОтветовНаВопрос Цикл
				СписокВыбораЭлемента = Элемент.СписокВыбора;
				СписокВыбораЭлемента.Добавить(ВариантОтвета.Ответ,ВариантОтвета.Представление);
			КонецЦикла;
				
		ИначеЕсли СтрокаТаблицы.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.НесколькоВариантовИз Тогда
			
			// +CRM
			//ВариантыОтветовНаВопрос = ВариантыОтветовНаВопрос(СтрокаТаблицы.ЭлементарныйВопрос,Форма);
			ВариантыОтветовНаВопрос = Анкетирование.ВариантыОтветовНаВопрос(СтрокаТаблицы.ЭлементарныйВопрос, Форма);
			// -CRM
			Счетчик = 0;
			
			ЭлементГруппаВариантыОтветов = Форма.Элементы.Добавить(ИмяВопроса + "_Группа_Варианты", Тип("ГруппаФормы"),
				ЭлементГруппаВопросКомментарий);
			
			ЭлементГруппаВариантыОтветов.Вид                 = ВидГруппыФормы.ОбычнаяГруппа;
			ЭлементГруппаВариантыОтветов.Отображение         = ОтображениеОбычнойГруппы.Нет;
			ЭлементГруппаВариантыОтветов.Группировка         = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
			ЭлементГруппаВариантыОтветов.ОтображатьЗаголовок = Ложь;
			
			Для Каждого ВариантОтвета Из ВариантыОтветовНаВопрос Цикл
				
				Счетчик = Счетчик + 1;
				
				ЭлементГруппаВариантОтвета = Форма.Элементы.Добавить(ИмяВопроса + "_Группа_ВариантОтвета_" + XMLСтрока(Счетчик),
					Тип("ГруппаФормы"), ЭлементГруппаВариантыОтветов);
				
				ЭлементГруппаВариантОтвета.Вид                        = ВидГруппыФормы.ОбычнаяГруппа;
				ЭлементГруппаВариантОтвета.Отображение                = ОтображениеОбычнойГруппы.Нет;
				ЭлементГруппаВариантОтвета.Группировка                = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
				ЭлементГруппаВариантОтвета.ОтображатьЗаголовок        = Ложь;
				ЭлементГруппаВариантОтвета.РастягиватьПоГоризонтали   = Истина;
				
				ИмяРеквизитаВопроса = ИмяВопроса + "_Реквизит_" + Счетчик;
				Элемент = Форма.Элементы.Добавить(ИмяРеквизитаВопроса, Тип("ПолеФормы"), ЭлементГруппаВариантОтвета);
				
				Элемент.Вид                = ВидПоляФормы.ПолеФлажка;
				Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
				Элемент.ПутьКДанным        = ИмяРеквизитаВопроса;
				Элемент.ВысотаЗаголовка    = 1;
				Элемент.Подсказка          = ВариантОтвета.Подсказка;
				
				Если ВариантОтвета.ТребуетОткрытогоОтвета Тогда
					ИмяРеквизитаКомментария = ИмяВопроса + "_Комментарий_" + Счетчик;
					Элемент = Форма.Элементы.Добавить(ИмяРеквизитаКомментария, Тип("ПолеФормы"),
						ЭлементГруппаВариантОтвета);
					Элемент.Вид 		= ВидПоляФормы.ПолеФлажка;
					Элемент.ПутьКДанным	= ИмяРеквизитаКомментария;
					Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если СтрокаТаблицы.ИспользоватьОтказОтОтвета И СтрокаТаблицы.ТипОтвета
			<> Перечисления.ТипыОтветовНаВопрос.Булево Тогда
			Элемент = Форма.Элементы.Добавить(ИмяВопроса + "_ИспользоватьОтказОтОтвета", Тип("ПолеФормы"),
				ЭлементГруппаВопроса);
			Элемент.Вид = ВидПоляФормы.ПолеФлажка;
			Элемент.ПутьКДанным = ИмяВопроса + "_ИспользоватьОтказОтОтвета";
			Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		КонецЕсли;
		
		Если (СтрокаТаблицы.ТипОтвета <> Перечисления.ТипыОтветовНаВопрос.НесколькоВариантовИз)
			И (СтрокаТаблицы.ТребуетсяКомментарий) Тогда
			
			Элемент                        = Форма.Элементы.Добавить(ИмяВопроса + "_Комментарий", Тип("ПолеФормы"),
				ЭлементГруппаВопросКомментарий);
			Элемент.Вид                    = ВидПоляФормы.ПолеВвода;
			Элемент.ПутьКДанным            = ИмяВопроса + "_Комментарий";
			Элемент.АвтоМаксимальнаяШирина = Ложь;
			Элемент.ПодсказкаВвода = СтрокаТаблицы.ПояснениеКомментария;
			Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
			Элемент.РастягиватьПоГоризонтали = Ложь;
			Элемент.КнопкаВыбора = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Добавляет элементы формы для табличных вопросов.
//
// Параметры:
//  СтрокаТаблицы - ДанныеФормыЭлементКоллекции - строка таблицы вопросов раздела.
//  ЭлементГруппы - ГруппаФормы - группа формы, для которой будут подчиняться добавляемые реквизиты.
//  Форма         - ФормаКлиентскогоПриложения
//
Процедура ДобавитьЭлементыТабличныйВопрос(СтрокаТаблицы, ЭлементГруппа, Форма)
	
	ТипТабличногоВопроса = СтрокаТаблицы.ТипТабличногоВопроса;
	ИмяВопроса = АнкетированиеКлиентСервер.ИмяВопроса(СтрокаТаблицы.КлючСтроки);
	ИмяТаблицы = ИмяВопроса + "_Таблица";
	
	ЭлементТаблица = Форма.Элементы.Добавить(ИмяТаблицы, Тип("ТаблицаФормы"), ЭлементГруппа);
	
	Если ТипТабличногоВопроса = Перечисления.ТипыТабличныхВопросов.Составной Тогда
		ЭлементТаблица.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Верх;
	Иначе
		ЭлементТаблица.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
		ЭлементТаблица.ИзменятьСоставСтрок  = Ложь;
		ЭлементТаблица.ИзменятьПорядокСтрок = Ложь;
	КонецЕсли;
	ЭлементТаблица.ПоложениеЗаголовка       = ПоложениеЗаголовкаЭлементаФормы.Нет;
	ЭлементТаблица.ПутьКДанным              = ИмяТаблицы;
	ЭлементТаблица.РастягиватьПоГоризонтали = Истина;
	ЭлементТаблица.РастягиватьПоВертикали   = Ложь;
	
	ТаблицаВопроса = Форма.РеквизитФормыВЗначение(ИмяТаблицы);
	
	Если СтрокаТаблицы.ТипТабличногоВопроса = Перечисления.ТипыТабличныхВопросов.ПредопределенныеОтветыВСтрокахИКолонках 
		И СтрокаТаблицы.СоставТабличногоВопроса.Количество() = 3 Тогда
		
		НайденныеСтроки = Форма.ВопросыПредставлениеТипы.НайтиСтроки(Новый Структура("Вопрос",
			 СтрокаТаблицы.СоставТабличногоВопроса[2].ЭлементарныйВопрос));
		Если НайденныеСтроки.Количество() > 0 Тогда
			РеквизитыЭлементарногоВопроса = НайденныеСтроки[0];
		Иначе
			Возврат;
		КонецЕсли;
		
	ИначеЕсли СтрокаТаблицы.ТипТабличногоВопроса = Перечисления.ТипыТабличныхВопросов.ПредопределенныеОтветыВСтрокахИКолонках
		И СтрокаТаблицы.СоставТабличногоВопроса.Количество() > 1 Тогда

	КонецЕсли;
	
	Для инд = 1 По ТаблицаВопроса.Колонки.Количество() Цикл
		
		ИмяКолонки = ИмяТаблицы + "_Колонка_" + инд;
		
		Если СтрокаТаблицы.ТипТабличногоВопроса <> Перечисления.ТипыТабличныхВопросов.ПредопределенныеОтветыВСтрокахИКолонках 
			И СтрокаТаблицы.ТипТабличногоВопроса <> Перечисления.ТипыТабличныхВопросов.ПредопределенныеОтветыВКолонках Тогда
			НайденныеСтроки = Форма.ВопросыПредставлениеТипы.НайтиСтроки(Новый Структура("Вопрос",
				 СтрокаТаблицы.СоставТабличногоВопроса[инд - 1].ЭлементарныйВопрос));
			Если НайденныеСтроки.Количество() > 0 Тогда
				РеквизитыЭлементарногоВопроса = НайденныеСтроки[0];
			Иначе
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Элемент = Форма.Элементы.Добавить(ИмяКолонки, Тип("ПолеФормы"), Форма.Элементы[ИмяТаблицы]); // ПолеФормы
		Элемент.РежимРедактирования = РежимРедактированияКолонки.Непосредственно;
		
		Если ТаблицаВопроса.Колонки[ИмяКолонки].ТипЗначения = Новый ОписаниеТипов("Булево") Тогда
			Элемент.Вид = ВидПоляФормы.ПолеФлажка;
		Иначе
			Элемент.Вид = ВидПоляФормы.ПолеВвода;
			
			// Установка списка выборка для тех колонок, тип ответа которых "Варианты ответов анкет" и ограничения для числовых
			// вопросов.
			Если СтрокаТаблицы.ТипТабличногоВопроса = Перечисления.ТипыТабличныхВопросов.Составной 
				Или СтрокаТаблицы.ТипТабличногоВопроса = Перечисления.ТипыТабличныхВопросов.ПредопределенныеОтветыВСтроках Тогда
				
				Если ТаблицаВопроса.Колонки[ИмяКолонки].ТипЗначения 
					= Новый ОписаниеТипов("СправочникСсылка.ВариантыОтветовАнкет") Тогда
					
					Элемент.РежимВыбораИзСписка = Истина;
					// +CRM
					//ВариантыОтветовНаВопрос = ВариантыОтветовНаВопрос(СтрокаТаблицы.СоставТабличногоВопроса[инд
						//- 1].ЭлементарныйВопрос, Форма);
					ВариантыОтветовНаВопрос = Анкетирование.ВариантыОтветовНаВопрос(СтрокаТаблицы.СоставТабличногоВопроса[инд
						- 1].ЭлементарныйВопрос, Форма);
					// -CRM
					Для Каждого ВариантОтветаНаВопрос Из ВариантыОтветовНаВопрос Цикл
						СписокВыбораЭлемента = Элемент.СписокВыбора; // СписокЗначений
						СписокВыбораЭлемента.Добавить(ВариантОтветаНаВопрос.Ответ);
					КонецЦикла;
					Элемент.КнопкаОткрытия = Ложь;
					
				ИначеЕсли РеквизитыЭлементарногоВопроса.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Число Тогда
					УстановитьПараметрыЭлементаЯчейкаЧисло(Элемент, РеквизитыЭлементарногоВопроса);
				ИначеЕсли РеквизитыЭлементарногоВопроса.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Текст Тогда
					УстановитьПараметрыЭлементаЯчейкаТекст(Элемент);
				КонецЕсли;
				
			ИначеЕсли СтрокаТаблицы.ТипТабличногоВопроса 
				= Перечисления.ТипыТабличныхВопросов.ПредопределенныеОтветыВСтрокахИКолонках Тогда	
				
				Если СтрокаТаблицы.СоставТабличногоВопроса.Количество() = 3 И инд <> 1 Тогда
					
					ТипЗначения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТаблицы.СоставТабличногоВопроса[2].ЭлементарныйВопрос, 
						"ТипЗначения");
					Если ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ВариантыОтветовАнкет") Тогда
						
						Элемент.РежимВыбораИзСписка = Истина;
						// +CRM
						//ВариантыОтветовНаВопрос = ВариантыОтветовНаВопрос(
							//СтрокаТаблицы.СоставТабличногоВопроса[2].ЭлементарныйВопрос, Форма);
						ВариантыОтветовНаВопрос = Анкетирование.ВариантыОтветовНаВопрос(
							СтрокаТаблицы.СоставТабличногоВопроса[2].ЭлементарныйВопрос, Форма);
						// -CRM
						Для Каждого ВариантОтветаНаВопрос Из ВариантыОтветовНаВопрос Цикл
							СписокВыбораЭлемента = Элемент.СписокВыбора; // СписокЗначений
							СписокВыбораЭлемента.Добавить(ВариантОтветаНаВопрос.Ответ);
						КонецЦикла;
						Элемент.КнопкаОткрытия = Ложь;
						
					КонецЕсли;
					
					Если РеквизитыЭлементарногоВопроса.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Число Тогда
						УстановитьПараметрыЭлементаЯчейкаЧисло(Элемент, РеквизитыЭлементарногоВопроса);
					ИначеЕсли РеквизитыЭлементарногоВопроса.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Текст Тогда
						УстановитьПараметрыЭлементаЯчейкаТекст(Элемент);
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
		
		Элемент.ПутьКДанным = ИмяТаблицы + "." + ИмяКолонки;
		
		Если (ТипТабличногоВопроса <> Перечисления.ТипыТабличныхВопросов.Составной) И (инд = 1) Тогда
			Элемент.Доступность = Ложь;
		КонецЕсли;
		
		Если (ТипТабличногоВопроса = Перечисления.ТипыТабличныхВопросов.ПредопределенныеОтветыВКолонках) Тогда
			Если инд = 1 Тогда
				Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
			Иначе	
				Элемент.СвязьПоТипу = Новый СвязьПоТипу("Элементы." + ИмяТаблицы + ".ТекущиеДанные." + ИмяТаблицы
					+ "_Колонка_1");
				СвязиПараметровВыбора = Новый Массив;
				СвязиПараметровВыбора.Добавить(Новый СвязьПараметраВыбора("Отбор.Владелец", "Элементы." + ИмяТаблицы
					+ ".ТекущиеДанные." + ИмяТаблицы + "_Колонка_1"));
				Элемент.СвязиПараметровВыбора = Новый ФиксированныйМассив(СвязиПараметровВыбора);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ТипТабличногоВопроса = Перечисления.ТипыТабличныхВопросов.ПредопределенныеОтветыВСтроках
		Или ТипТабличногоВопроса = Перечисления.ТипыТабличныхВопросов.ПредопределенныеОтветыВСтрокахИКолонках Тогда
		
		МассивОтветы = СтрокаТаблицы.ПредопределенныеОтветы.НайтиСтроки(Новый Структура("ЭлементарныйВопрос",
			 СтрокаТаблицы.СоставТабличногоВопроса[0].ЭлементарныйВопрос));
		
		Для Каждого СтрокаОтвет Из МассивОтветы Цикл
			
			НоваяСтрока = ТаблицаВопроса.Добавить();
			НоваяСтрока[ИмяТаблицы + "_Колонка_1"] = СтрокаОтвет.Ответ;
		
		КонецЦикла;
		
	ИначеЕсли ТипТабличногоВопроса = Перечисления.ТипыТабличныхВопросов.ПредопределенныеОтветыВКолонках Тогда
		
		Для инд = 2 По СтрокаТаблицы.СоставТабличногоВопроса.Количество() Цикл
		
			НоваяСтрока = ТаблицаВопроса.Добавить();
			НоваяСтрока[ИмяТаблицы + "_Колонка_1"] = СтрокаТаблицы.СоставТабличногоВопроса[инд - 1].ЭлементарныйВопрос;
		
		КонецЦикла;
		
	КонецЕсли;
	
	Если ТипТабличногоВопроса <> Перечисления.ТипыТабличныхВопросов.Составной Тогда		
		ЭлементТаблица.ВысотаВСтрокахТаблицы = ТаблицаВопроса.Количество() + 1;
	КонецЕсли;
	
	Форма.ЗначениеВРеквизитФормы(ТаблицаВопроса, ИмяТаблицы);
	
КонецПроцедуры

// Параметры:
//   Форма - ФормаКлиентскогоПриложения
//
Процедура ДобавитьЭлементыКомплексныйВопрос(СтрокаТаблицы, ЭлементГруппа, Форма)
	
	ИмяВопроса = АнкетированиеКлиентСервер.ИмяВопроса(СтрокаТаблицы.КлючСтроки);
	Для Каждого СтрокаКомплексногоВопроса Из СтрокаТаблицы.СоставКомплексногоВопроса Цикл // СтрокаТабличнойЧасти из см. СправочникТабличнаяЧасть.ВопросыШаблонаАнкеты.СоставКомплексногоВопроса
		
		НайденныеСтроки = Форма.ВопросыПредставлениеТипы.НайтиСтроки(Новый Структура("Вопрос",
			 СтрокаКомплексногоВопроса.ЭлементарныйВопрос));
		Если НайденныеСтроки.Количество() > 0 Тогда
			РеквизитыЭлементарногоВопроса = НайденныеСтроки[0];
		Иначе
			Продолжить;
		КонецЕсли;
		
		Если РеквизитыЭлементарногоВопроса.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Булево Тогда
			
			ЭлементГруппаВопросаБулево = Форма.Элементы.Добавить(
				ИмяВопроса + "_ЭлементарныйВопрос_" + Формат(СтрокаКомплексногоВопроса.НомерСтроки, "ЧГ=")
				+ "_ГруппаБулево", Тип("ГруппаФормы"), ЭлементГруппа);
			
			ЭлементГруппаВопросаБулево.Вид                        = ВидГруппыФормы.ОбычнаяГруппа;
			ЭлементГруппаВопросаБулево.ОтображатьЗаголовок        = Ложь;
			ЭлементГруппаВопросаБулево.Отображение                = ОтображениеОбычнойГруппы.Нет;
			ЭлементГруппаВопросаБулево.Группировка                = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
			ЭлементГруппаВопросаБулево.РастягиватьПоГоризонтали   = Истина;
			ЭлементГруппаВопросаБулево.РастягиватьПоВертикали     = Ложь;
		КонецЕсли;
		
		Если РеквизитыЭлементарногоВопроса.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Булево Тогда
			Элемент = Форма.Элементы.Добавить(
				ИмяВопроса + "_ЭлементарныйВопрос_" + Формат(СтрокаКомплексногоВопроса.НомерСтроки, "ЧГ="), Тип(
				"ДекорацияФормы"), ЭлементГруппаВопросаБулево);
		Иначе
			Элемент = Форма.Элементы.Добавить(
				ИмяВопроса + "_ЭлементарныйВопрос_" + Формат(СтрокаКомплексногоВопроса.НомерСтроки, "ЧГ="), Тип(
				"ДекорацияФормы"), ЭлементГруппа);
		КонецЕсли;
		Элемент.Вид                        = ВидДекорацииФормы.Надпись;
		Элемент.Заголовок                  = СтрокаКомплексногоВопроса.ЭлементарныйВопрос;
		Элемент.АвтоМаксимальнаяШирина     = Ложь;
		Элемент.РастягиватьПоГоризонтали   = (РеквизитыЭлементарногоВопроса.ТипОтвета
			<> Перечисления.ТипыОтветовНаВопрос.Булево);
		Элемент.Шрифт = ШрифтыСтиля.МелкийШрифтТекста;
		
		Если РеквизитыЭлементарногоВопроса.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Строка
			Или СтрокаТаблицы.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.ЗначениеИнформационнойБазы Тогда
			
			Элемент = Форма.Элементы.Добавить(ИмяВопроса + "_Ответ_" + Формат(СтрокаКомплексногоВопроса.НомерСтроки,
				"ЧГ="), Тип("ПолеФормы"), ЭлементГруппа);
			Элемент.Вид                        = ВидПоляФормы.ПолеВвода;
			Элемент.ПоложениеЗаголовка         = ПоложениеЗаголовкаЭлементаФормы.Нет;
			Элемент.АвтоОтметкаНезаполненного  = СтрокаТаблицы.Обязательный;
			Элемент.ПутьКДанным                = ИмяВопроса + "_Ответ_" + Формат(СтрокаКомплексногоВопроса.НомерСтроки,
				"ЧГ=");
			Элемент.АвтоМаксимальнаяШирина     = Ложь;
			Элемент.РастягиватьПоГоризонтали   = Ложь;
			
		ИначеЕсли РеквизитыЭлементарногоВопроса.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Текст Тогда
			
			Элемент = Форма.Элементы.Добавить(ИмяВопроса + "_Ответ_" + Формат(СтрокаКомплексногоВопроса.НомерСтроки,
				"ЧГ="), Тип("ПолеФормы"), ЭлементГруппа);
			Элемент.Вид                       = ВидПоляФормы.ПолеВвода;
			Элемент.ПоложениеЗаголовка        = ПоложениеЗаголовкаЭлементаФормы.Нет;
			Элемент.АвтоОтметкаНезаполненного = СтрокаТаблицы.Обязательный;
			Элемент.ПутьКДанным               = ИмяВопроса + "_Ответ_" + Формат(СтрокаКомплексногоВопроса.НомерСтроки,
				"ЧГ=");
			Элемент.РастягиватьПоВертикали    = Ложь;
			Элемент.АвтоМаксимальнаяШирина    = Ложь;
			УстановитьПараметрыЭлементаЯчейкаТекст(Элемент); 
			
		ИначеЕсли РеквизитыЭлементарногоВопроса.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Булево Тогда
			
			Элемент = Форма.Элементы.Добавить(ИмяВопроса + "_Ответ_" + Формат(СтрокаКомплексногоВопроса.НомерСтроки,
				"ЧГ="), Тип("ПолеФормы"), ЭлементГруппаВопросаБулево);
			Если РеквизитыЭлементарногоВопроса.ВидФлажка = Перечисления.ВидыФлажкаВАнкетах.Флажок Тогда
				Элемент.Вид = ВидПоляФормы.ПолеФлажка;
			Иначе
				Элемент.Вид = ВидПоляФормы.ПолеВвода;
			КонецЕсли;
			
			Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
			Элемент.ПутьКДанным        = ИмяВопроса + "_Ответ_" + Формат(СтрокаКомплексногоВопроса.НомерСтроки, "ЧГ=");
			
		ИначеЕсли РеквизитыЭлементарногоВопроса.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Дата Тогда
			
			Элемент = Форма.Элементы.Добавить(ИмяВопроса + "_Ответ_" + Формат(СтрокаКомплексногоВопроса.НомерСтроки,
				"ЧГ="), Тип("ПолеФормы"), ЭлементГруппа);
			Элемент.Вид                       = ВидПоляФормы.ПолеВвода;
			Элемент.ПоложениеЗаголовка        = ПоложениеЗаголовкаЭлементаФормы.Нет;
			Элемент.АвтоОтметкаНезаполненного = СтрокаТаблицы.Обязательный;
			Элемент.ПутьКДанным               = ИмяВопроса + "_Ответ_" + Формат(СтрокаКомплексногоВопроса.НомерСтроки,
				"ЧГ=");
			Элемент.АвтоМаксимальнаяШирина    = Ложь;
			
		ИначеЕсли РеквизитыЭлементарногоВопроса.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Число Тогда
			
			Элемент = Форма.Элементы.Добавить(ИмяВопроса + "_Ответ_" + Формат(СтрокаКомплексногоВопроса.НомерСтроки,
				"ЧГ="), Тип("ПолеФормы"), ЭлементГруппа);
			Элемент.Вид                       = ВидПоляФормы.ПолеВвода;
			Элемент.ПоложениеЗаголовка        = ПоложениеЗаголовкаЭлементаФормы.Нет;
			Элемент.АвтоОтметкаНезаполненного = СтрокаТаблицы.Обязательный
				// +CRM
				//И Не РазрешенВводНулевогоЗначенияВЧисловоеПоле(СтрокаТаблицы);
				И Не Анкетирование.РазрешенВводНулевогоЗначенияВЧисловоеПоле(СтрокаТаблицы);
				// -CRM
			Элемент.МинимальноеЗначение       = ?(РеквизитыЭлементарногоВопроса.ИспользоватьМинимальноеЗначение,
				РеквизитыЭлементарногоВопроса.МинимальноеЗначение, Неопределено);
			Элемент.МаксимальноеЗначение      = ?(РеквизитыЭлементарногоВопроса.ИспользоватьМаксимальноеЗначение,
				РеквизитыЭлементарногоВопроса.МаксимальноеЗначение, Неопределено);
			Элемент.КнопкаВыбора              = Ложь;
			Элемент.ПутьКДанным               = ИмяВопроса + "_Ответ_" + Формат(СтрокаКомплексногоВопроса.НомерСтроки,
				"ЧГ=");
			Элемент.АвтоМаксимальнаяШирина    = Ложь;
			Если РеквизитыЭлементарногоВопроса.МинимальноеЗначение <> 0
				Или РеквизитыЭлементарногоВопроса.МаксимальноеЗначение <> 0 Тогда
				Элемент.КнопкаРегулирования = Истина;

				ТекстПодсказки = "";
				Если РеквизитыЭлементарногоВопроса.ИспользоватьМинимальноеЗначение
					И РеквизитыЭлементарногоВопроса.ИспользоватьМаксимальноеЗначение Тогда
					ТекстПодсказки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
						"ru = 'Допустим ввод значения от %1 до %2';
						|en = 'You can enter value from %1 to %2'"),
						РеквизитыЭлементарногоВопроса.ИспользоватьМинимальноеЗначение,
						РеквизитыЭлементарногоВопроса.МаксимальноеЗначение);
				ИначеЕсли Не РеквизитыЭлементарногоВопроса.ИспользоватьМинимальноеЗначение
					И РеквизитыЭлементарногоВопроса.ИспользоватьМаксимальноеЗначение Тогда
					ТекстПодсказки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
						"ru = 'Допустим ввод значения до %1';
						|en = 'You can enter value to %1'"), РеквизитыЭлементарногоВопроса.МаксимальноеЗначение);
				Иначе
					ТекстПодсказки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
						"ru = 'Допустим ввод значения от %1';
						|en = 'You can enter value from %1'"), РеквизитыЭлементарногоВопроса.МинимальноеЗначение);
				КонецЕсли;
				
				Элемент.Подсказка = ТекстПодсказки;
				
			КонецЕсли;
			
		ИначеЕсли РеквизитыЭлементарногоВопроса.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.ОдинВариантИз Тогда
				
			// +CRM
			//ВариантыОтветовНаВопрос = ВариантыОтветовНаВопрос(СтрокаКомплексногоВопроса.ЭлементарныйВопрос,Форма);
			ВариантыОтветовНаВопрос = Анкетирование.ВариантыОтветовНаВопрос(СтрокаКомплексногоВопроса.ЭлементарныйВопрос,
				 Форма);
			// -CRM
			
			Элемент = Форма.Элементы.Добавить(ИмяВопроса + "_Ответ_" + Формат(СтрокаКомплексногоВопроса.НомерСтроки,
				"ЧГ="), Тип("ПолеФормы"), ЭлементГруппа);
			Элемент.Вид                     = ВидПоляФормы.ПолеПереключателя;
			Элемент.ПоложениеЗаголовка      = ПоложениеЗаголовкаЭлементаФормы.Нет;
			Элемент.ПутьКДанным             = ИмяВопроса + "_Ответ_" + Формат(СтрокаКомплексногоВопроса.НомерСтроки,
				"ЧГ=");
			Элемент.ВысотаЭлемента          = 1;
			Элемент.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Лево;
			
			Если РеквизитыЭлементарногоВопроса.ВидПереключателя = Перечисления.ВидыПереключателяВАнкетах.Тумблер Тогда
				Элемент.ВидПереключателя = ВидПереключателя.Тумблер;
				Элемент.КоличествоКолонок = 0;
				Элемент.ОдинаковаяШиринаКолонок = Ложь;
			Иначе
				Элемент.ВидПереключателя = ВидПереключателя.Переключатель;
				Элемент.КоличествоКолонок = 1;
			КонецЕсли;
			
			Для Каждого ВариантОтвета Из ВариантыОтветовНаВопрос Цикл
				Элемент.СписокВыбора.Добавить(ВариантОтвета.Ответ, ВариантОтвета.Представление);
			КонецЦикла;
				
		ИначеЕсли РеквизитыЭлементарногоВопроса.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.НесколькоВариантовИз Тогда
				
			// +CRM
			//ВариантыОтветовНаВопрос = ВариантыОтветовНаВопрос(СтрокаКомплексногоВопроса.ЭлементарныйВопрос,Форма);
			ВариантыОтветовНаВопрос = Анкетирование.ВариантыОтветовНаВопрос(СтрокаКомплексногоВопроса.ЭлементарныйВопрос,
				 Форма);
			// -CRM
			Счетчик = 0;
			
			ЭлементГруппаВариантыОтветов = Форма.Элементы.Добавить(ИмяВопроса + "_Ответ_" + Формат(
				СтрокаКомплексногоВопроса.НомерСтроки, "ЧГ=") + "_Группа_Варианты", Тип("ГруппаФормы"), ЭлементГруппа);
			
			ЭлементГруппаВариантыОтветов.Вид                 = ВидГруппыФормы.ОбычнаяГруппа;
			ЭлементГруппаВариантыОтветов.Отображение         = ОтображениеОбычнойГруппы.Нет;
			ЭлементГруппаВариантыОтветов.Группировка         = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
			ЭлементГруппаВариантыОтветов.ОтображатьЗаголовок = Ложь;
			
			Для Каждого ВариантОтвета Из ВариантыОтветовНаВопрос Цикл
				
				Счетчик = Счетчик + 1;
				
				ЭлементГруппаВариантОтвета = Форма.Элементы.Добавить(ИмяВопроса + "_Ответ_" + Формат(
					СтрокаКомплексногоВопроса.НомерСтроки, "ЧГ=") + "_Группа_ВариантОтвета_" + XMLСтрока(Счетчик), Тип(
					"ГруппаФормы"), ЭлементГруппаВариантыОтветов);
				
				ЭлементГруппаВариантОтвета.Вид                        = ВидГруппыФормы.ОбычнаяГруппа;
				ЭлементГруппаВариантОтвета.Отображение                = ОтображениеОбычнойГруппы.Нет;
				ЭлементГруппаВариантОтвета.Группировка                = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
				ЭлементГруппаВариантОтвета.ОтображатьЗаголовок        = Ложь;
				ЭлементГруппаВариантОтвета.РастягиватьПоГоризонтали   = Истина;
				
				ИмяРеквизитаВопроса = ИмяВопроса + "_Ответ_" + Формат(СтрокаКомплексногоВопроса.НомерСтроки, "ЧГ=")
					+ "_Реквизит_" + Счетчик;
				Элемент = Форма.Элементы.Добавить(ИмяРеквизитаВопроса, Тип("ПолеФормы"), ЭлементГруппаВариантОтвета);
				
				Элемент.Вид                = ВидПоляФормы.ПолеФлажка;
				Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
				Элемент.ПутьКДанным        = ИмяРеквизитаВопроса;
				Элемент.ВысотаЗаголовка    = 1;
				
				Если ВариантОтвета.ТребуетОткрытогоОтвета Тогда
					ИмяРеквизитаКомментария = ИмяВопроса + "_Ответ_" + Формат(СтрокаКомплексногоВопроса.НомерСтроки,
						"ЧГ=") + "_Комментарий_" + Счетчик;
					Элемент = Форма.Элементы.Добавить(ИмяРеквизитаКомментария, Тип("ПолеФормы"),
						ЭлементГруппаВариантОтвета);
					Элемент.Вид 		= ВидПоляФормы.ПолеФлажка;
					Элемент.ПутьКДанным	= ИмяРеквизитаКомментария;
					Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если (РеквизитыЭлементарногоВопроса.ТипОтвета <> Перечисления.ТипыОтветовНаВопрос.НесколькоВариантовИз)
			И (СтрокаКомплексногоВопроса.ТребуетсяКомментарий) Тогда
			
			Элемент = Форма.Элементы.Добавить(ИмяВопроса + "_Комментарий_" + Формат(
				СтрокаКомплексногоВопроса.НомерСтроки, "ЧГ="), Тип("ПолеФормы"), ЭлементГруппа);
			
			Элемент.Вид                    = ВидПоляФормы.ПолеВвода;
			Элемент.ПутьКДанным            = ИмяВопроса + "_Комментарий_" + Формат(
				СтрокаКомплексногоВопроса.НомерСтроки, "ЧГ=");
			Элемент.АвтоМаксимальнаяШирина = Ложь;
			ПояснениеКомментария = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаКомплексногоВопроса.ЭлементарныйВопрос, 
				"ПояснениеКомментария");
			Элемент.ПодсказкаВвода = ПояснениеКомментария;
			Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
			Элемент.РастягиватьПоГоризонтали = Ложь;
			Элемент.КнопкаВыбора = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры формы заполнения анкеты.

// Получает возможные варианты ответа на вопрос.
//
// Параметры:
//  ЭлементарныйВопрос - ПланВидовХарактеристикСсылка.ВопросыДляАнкетирования - вопрос для которого получаются ответы.
//  Форма              - ФормаКлиентскогоПриложения - форма, из которой происходит вызов.
//
// Возвращаемое значение:
//   Массив - строки таблицы значений, в которых содержатся варианты ответов на вопрос.
//
Функция ВариантыОтветовНаВопрос(ЭлементарныйВопрос, Форма) Экспорт
	
	Возврат (Форма.ВариантыОтветовНаВопросы.НайтиСтроки(Новый Структура("Вопрос", ЭлементарныйВопрос)));
	
КонецФункции

// Формирует строки из формулировки и полного кода строки.
//
// Параметры:
//   СтрокаТаблицы - ДанныеФормыЭлементКоллекции - строка таблицы вопросов раздела:
//   * Наименование - Строка
//
// Возвращаемое значение:
//   Строка   - строка содержащая полный код и формулировку.
//
Функция ПолныйКодНаименование(СтрокаТаблицы)
	
	Возврат ?(СтрокаТаблицы.ТипСтроки = "Раздел", "Раздел ", "") + СтрокаТаблицы.ПолныйКод + " " + ?(
		СтрокаТаблицы.ТипСтроки = "Раздел", СтрокаТаблицы.Наименование, СтрокаТаблицы.Формулировка);
	
КонецФункции

// Устанавливает значения параметров  и обработчик события "НачалоВыбора",
// для поля формы, предназначенного для ввода текста.
//
// Параметры:
//  Элемент - ПолеФормы - элемент, для которого устанавливаются параметры.
//
Процедура УстановитьПараметрыЭлементаЯчейкаТекст(Элемент)
	
	Элемент.КнопкаВыбора = Истина;
	Элемент.МногострочныйРежим = Истина;
	Элемент.УстановитьДействие("НачалоВыбора", "Подключаемый_НачалоВыбораТекстовыхЯчеекТабличныхВопросов");
	
КонецПроцедуры

// Устанавливает значения параметров для поля формы, предназначенного для ввода числового значения.
//
// Параметры:
//  Элемент - ПолеФормы - элемент, для которого устанавливаются параметры.
//  РеквизитыЭлементарногоВопроса - ДанныеФормыЭлементКоллекции - содержит значения параметров.
// 
Процедура УстановитьПараметрыЭлементаЯчейкаЧисло(Элемент, РеквизитыЭлементарногоВопроса)
	
	Элемент.МинимальноеЗначение  = ?(РеквизитыЭлементарногоВопроса.ИспользоватьМинимальноеЗначение,
		РеквизитыЭлементарногоВопроса.МинимальноеЗначение, Неопределено);
	Элемент.МаксимальноеЗначение = ?(РеквизитыЭлементарногоВопроса.ИспользоватьМаксимальноеЗначение,
		РеквизитыЭлементарногоВопроса.МаксимальноеЗначение, Неопределено);
	
КонецПроцедуры

// Удаляет ранее динамически сформированные элементы формы заполнения анкеты.
//
// Параметры:
//  Форма              - ФормаКлиентскогоПриложения - форма, у которой удаляются элементы.
//  УдаляемыеРеквизиты - Массив из Строка - имена удаляемых реквизитов формы, на основании которых удаляются
//                       элементы формы.
//
Процедура УдалитьЭлементыФормыЗаполнения(Форма, УдаляемыеРеквизиты)

	КоличествоСимволовДоПостфикса = АнкетированиеКлиентСервер.КоличествоСимволовВИмениВопросаБезПостфикса();
	Для Каждого УдаляемыйРеквизит Из УдаляемыеРеквизиты Цикл

		ИмяВопроса = Лев(УдаляемыйРеквизит.Значение, КоличествоСимволовДоПостфикса);

		НайденныйЭлементФормы = Форма.Элементы.Найти(ИмяВопроса + "_Группа");

		Если НайденныйЭлементФормы <> Неопределено Тогда
			МассивПодчиненныеЭлементы = НайденныйЭлементФормы.ПодчиненныеЭлементы;
			Для Каждого ПодчиненныйЭлемент Из МассивПодчиненныеЭлементы Цикл
				Форма.Элементы.Удалить(ПодчиненныйЭлемент);
			КонецЦикла;
			Форма.Элементы.Удалить(НайденныйЭлементФормы);
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

// Получает необходимую информацию по разделу анкеты: вопросы раздела, 
// необходимые реквизиты вопросов, варианты ответов. Помещает полученную информацию в 
// реквизиты формы.
//
// Параметры:
//  Форма            - ФормаКлиентскогоПриложения - форма, для которой получается информация.
//  ШаблонАнкеты     - СправочникСсылка.ШаблоныАнкет - шаблон анкеты, по которому получается информация.
//  Раздел           - СправочникСсылка.ВопросыШаблонаАнкеты - раздел анкеты, по которому получается информация.
//  ПолныйКодРаздела - Строка - полный код раздела, по которому получается информация.
//
Процедура ПолучитьИнформациюПоВопросамАнкеты(Форма, ШаблонАнкеты, Раздел, ПолныйКодРаздела)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВопросыДляАнкетирования.Ссылка КАК Вопрос,
	|	ВопросыДляАнкетирования.Формулировка КАК Формулировка,
	|	ВопросыДляАнкетирования.ТипЗначения КАК Тип,
	|	ВопросыДляАнкетирования.ТипОтвета КАК ТипОтвета,
	|	ВопросыДляАнкетирования.ВидПереключателя КАК ВидПереключателя,
	|	ВопросыДляАнкетирования.ВидФлажка КАК ВидФлажка,
	|	ВопросыДляАнкетирования.МинимальноеЗначение КАК МинимальноеЗначение,
	|	ВопросыДляАнкетирования.МаксимальноеЗначение КАК МаксимальноеЗначение,
	|	ВопросыДляАнкетирования.ИспользоватьМинимальноеЗначение КАК ИспользоватьМинимальноеЗначение,
	|	ВопросыДляАнкетирования.ИспользоватьМаксимальноеЗначение КАК ИспользоватьМаксимальноеЗначение
	|ИЗ
	|	ПланВидовХарактеристик.ВопросыДляАнкетирования КАК ВопросыДляАнкетирования
	|ГДЕ
	|	ВопросыДляАнкетирования.Ссылка В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ВопросыШаблонаАнкеты.ЭлементарныйВопрос
	|			ИЗ
	|				Справочник.ВопросыШаблонаАнкеты КАК ВопросыШаблонаАнкеты
	|			ГДЕ
	|				ВопросыШаблонаАнкеты.Владелец = &ШаблонАнкеты
	|				И ВопросыШаблонаАнкеты.Родитель = &Раздел
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				ВопросыШаблонаАнкетыСоставТабличногоВопроса.ЭлементарныйВопрос
	|			ИЗ
	|				Справочник.ВопросыШаблонаАнкеты.СоставТабличногоВопроса КАК ВопросыШаблонаАнкетыСоставТабличногоВопроса
	|			ГДЕ
	|				ВопросыШаблонаАнкетыСоставТабличногоВопроса.Ссылка.Владелец = &ШаблонАнкеты
	|				И ВопросыШаблонаАнкетыСоставТабличногоВопроса.Ссылка.Родитель = &Раздел
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				ВопросыШаблонаАнкетыСоставКомплексногоВопроса.ЭлементарныйВопрос
	|			ИЗ
	|				Справочник.ВопросыШаблонаАнкеты.СоставКомплексногоВопроса КАК ВопросыШаблонаАнкетыСоставКомплексногоВопроса
	|			ГДЕ
	|				ВопросыШаблонаАнкетыСоставКомплексногоВопроса.Ссылка.Владелец = &ШаблонАнкеты
	|				И ВопросыШаблонаАнкетыСоставКомплексногоВопроса.Ссылка.Родитель = &Раздел)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВопросыШаблонаАнкеты.Ссылка КАК ВопросШаблона,
	|	ВопросыШаблонаАнкеты.Родитель КАК Родитель,
	|	ВопросыШаблонаАнкеты.Наименование КАК Наименование,
	|	ВопросыШаблонаАнкеты.Обязательный КАК Обязательный,
	|	ВопросыШаблонаАнкеты.ТипВопроса КАК ТипВопроса,
	|	ВопросыШаблонаАнкеты.ТипТабличногоВопроса КАК ТипТабличногоВопроса,
	|	ВопросыШаблонаАнкеты.ЭлементарныйВопрос КАК ЭлементарныйВопрос,
	|	""Вопрос"" КАК ТипСтроки,
	|	ВопросыШаблонаАнкеты.РодительВопрос КАК РодительВопрос,
	|	ВопросыШаблонаАнкеты.Подсказка КАК Подсказка,
	|	ВопросыШаблонаАнкеты.СпособОтображенияПодсказки КАК СпособОтображенияПодсказки,
	|	ВопросыШаблонаАнкеты.СоставТабличногоВопроса.(
	|		НомерСтроки КАК НомерСтроки,
	|		ЭлементарныйВопрос КАК ЭлементарныйВопрос
	|	) КАК СоставТабличногоВопроса,
	|	ВопросыШаблонаАнкеты.ПредопределенныеОтветы.(
	|		НомерСтроки КАК НомерСтроки,
	|		ЭлементарныйВопрос КАК ЭлементарныйВопрос,
	|		Ответ КАК Ответ
	|	) КАК ПредопределенныеОтветы,
	|	ВопросыШаблонаАнкеты.СоставКомплексногоВопроса.(
	|		НомерСтроки КАК НомерСтроки,
	|		ЭлементарныйВопрос КАК ЭлементарныйВопрос,
	|		ЭлементарныйВопрос.ТребуетсяКомментарий КАК ТребуетсяКомментарий,
	|		ЭлементарныйВопрос.ПояснениеКомментария КАК ПояснениеКомментария
	|	) КАК СоставКомплексногоВопроса,
	|	ЕСТЬNULL(ВопросыДляАнкетирования.Длина, 0) КАК Длина,
	|	ВопросыДляАнкетирования.ТипЗначения КАК ТипЗначения,
	|	ЕСТЬNULL(ВопросыДляАнкетирования.ТребуетсяКомментарий, ЛОЖЬ) КАК ТребуетсяКомментарий,
	|	ЕСТЬNULL(ВопросыДляАнкетирования.ПояснениеКомментария, """") КАК ПояснениеКомментария,
	|	ЕСТЬNULL(ВопросыДляАнкетирования.МинимальноеЗначение, 0) КАК МинимальноеЗначение,
	|	ЕСТЬNULL(ВопросыДляАнкетирования.МаксимальноеЗначение, 0) КАК МаксимальноеЗначение,
	|	ЕСТЬNULL(ВопросыДляАнкетирования.ВидПереключателя, ЗНАЧЕНИЕ(Перечисление.ВидыПереключателяВАнкетах.ПустаяСсылка)) КАК ВидПереключателя,
	|	ЕСТЬNULL(ВопросыДляАнкетирования.ВидФлажка, ЗНАЧЕНИЕ(Перечисление.ВидыФлажкаВАнкетах.ПустаяСсылка)) КАК ВидФлажка,
	|	ЕСТЬNULL(ВопросыДляАнкетирования.ТипОтвета, ЗНАЧЕНИЕ(Перечисление.ТипыОтветовНаВопрос.ПустаяСсылка)) КАК ТипОтвета,
	|	ЕСТЬNULL(ВопросыШаблонаАнкеты.Формулировка, """") КАК Формулировка,
	|	ЕСТЬNULL(ВопросыДляАнкетирования.Точность, 0) КАК Точность,
	|	ЕСТЬNULL(ВопросыДляАнкетирования.ИспользоватьМинимальноеЗначение, ЛОЖЬ) КАК ИспользоватьМинимальноеЗначение,
	|	ЕСТЬNULL(ВопросыДляАнкетирования.ИспользоватьМаксимальноеЗначение, ЛОЖЬ) КАК ИспользоватьМаксимальноеЗначение,
	|	ЕСТЬNULL(ВопросыДляАнкетирования.ПоказыватьПолосуРегулирования, ЛОЖЬ) КАК ПоказыватьПолосуРегулирования,
	|	ЕСТЬNULL(ВопросыДляАнкетирования.ШагПолосыРегулирования, 0) КАК ШагПолосыРегулирования,
	|	ВопросыШаблонаАнкеты.ИспользоватьОтказОтОтвета КАК ИспользоватьОтказОтОтвета,
	|	ВопросыШаблонаАнкеты.ФормулировкаОтказаОтОтвета КАК ФормулировкаОтказаОтОтвета,
	|	ВопросыДляАнкетирования.ДиапазонПодсказокЧисловогоВопроса.(
	|		НомерСтроки КАК НомерСтроки,
	|		ЗначениеДо КАК ЗначениеДо,
	|		Подсказка КАК Подсказка
	|	) КАК ДиапазонПодсказокЧисловогоВопроса
	|ИЗ
	|	Справочник.ВопросыШаблонаАнкеты КАК ВопросыШаблонаАнкеты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ВопросыДляАнкетирования КАК ВопросыДляАнкетирования
	|		ПО ВопросыШаблонаАнкеты.ЭлементарныйВопрос = ВопросыДляАнкетирования.Ссылка
	|ГДЕ
	|	НЕ ВопросыШаблонаАнкеты.ПометкаУдаления
	|	И ВопросыШаблонаАнкеты.Владелец = &ШаблонАнкеты
	|	И ВопросыШаблонаАнкеты.Родитель = &Раздел
	|	И НЕ ВопросыШаблонаАнкеты.ЭтоГруппа
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВопросыШаблонаАнкеты.Код
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВариантыОтветовАнкет.Владелец КАК Вопрос,
	|	ВариантыОтветовАнкет.Ссылка КАК Ответ,
	|	ВариантыОтветовАнкет.Представление КАК Представление,
	|	ВариантыОтветовАнкет.ТребуетОткрытогоОтвета КАК ТребуетОткрытогоОтвета,
	|	ВариантыОтветовАнкет.Подсказка КАК Подсказка
	|ИЗ
	|	Справочник.ВариантыОтветовАнкет КАК ВариантыОтветовАнкет
	|ГДЕ
	|	ВариантыОтветовАнкет.Владелец В
	|			(ВЫБРАТЬ
	|				ВопросыШаблонаАнкеты.ЭлементарныйВопрос
	|			ИЗ
	|				Справочник.ВопросыШаблонаАнкеты КАК ВопросыШаблонаАнкеты
	|			ГДЕ
	|				ВопросыШаблонаАнкеты.Владелец = &ШаблонАнкеты
	|				И ВопросыШаблонаАнкеты.Родитель = &Раздел
	|				И НЕ ВопросыШаблонаАнкеты.ЭтоГруппа
	|				И НЕ ВопросыШаблонаАнкеты.ПометкаУдаления
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				ВопросыШаблонаАнкетыСоставТабличногоВопроса.ЭлементарныйВопрос
	|			ИЗ
	|				Справочник.ВопросыШаблонаАнкеты.СоставТабличногоВопроса КАК ВопросыШаблонаАнкетыСоставТабличногоВопроса
	|			ГДЕ
	|				ВопросыШаблонаАнкетыСоставТабличногоВопроса.Ссылка.Владелец = &ШаблонАнкеты
	|				И ВопросыШаблонаАнкетыСоставТабличногоВопроса.Ссылка.Родитель = &Раздел
	|				И НЕ ВопросыШаблонаАнкетыСоставТабличногоВопроса.Ссылка.ЭтоГруппа
	|				И НЕ ВопросыШаблонаАнкетыСоставТабличногоВопроса.Ссылка.ПометкаУдаления
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				ВопросыШаблонаАнкетыСоставКомплексногоВопроса.ЭлементарныйВопрос
	|			ИЗ
	|				Справочник.ВопросыШаблонаАнкеты.СоставКомплексногоВопроса КАК ВопросыШаблонаАнкетыСоставКомплексногоВопроса
	|			ГДЕ
	|				ВопросыШаблонаАнкетыСоставКомплексногоВопроса.Ссылка.Владелец = &ШаблонАнкеты
	|				И ВопросыШаблонаАнкетыСоставКомплексногоВопроса.Ссылка.Родитель = &Раздел
	|				И НЕ ВопросыШаблонаАнкетыСоставКомплексногоВопроса.Ссылка.ЭтоГруппа
	|				И НЕ ВопросыШаблонаАнкетыСоставКомплексногоВопроса.Ссылка.ПометкаУдаления)
	|	И НЕ ВариантыОтветовАнкет.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВариантыОтветовАнкет.РеквизитДопУпорядочивания";
	
	Запрос.УстановитьПараметр("ШаблонАнкеты", ШаблонАнкеты);
	Запрос.УстановитьПараметр("Раздел", Раздел);
	
	МассивРезультатовЗапросов = Запрос.ВыполнитьПакет();
	
	Форма.ВопросыПредставлениеТипы.Загрузить(МассивРезультатовЗапросов[0].Выгрузить());
	
	ВыборкаВопросыПоРазделуАнкеты = МассивРезультатовЗапросов[1].Выбрать();
	СчетчикВопросов = 0;
	
	Пока ВыборкаВопросыПоРазделуАнкеты.Следующий() Цикл
		
		СчетчикВопросов = СчетчикВопросов + 1;
		ТаблицаВопросовФормы = Форма.ТаблицаВопросовРаздела; // ТаблицаЗначений
		НоваяСтрока = ТаблицаВопросовФормы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаВопросыПоРазделуАнкеты, ,
			"СоставТабличногоВопроса,ПредопределенныеОтветы,СоставКомплексногоВопроса,ДиапазонПодсказокЧисловогоВопроса");
		НоваяСтрока.СоставТабличногоВопроса.Загрузить(ВыборкаВопросыПоРазделуАнкеты.СоставТабличногоВопроса.Выгрузить());
		НоваяСтрока.СоставТабличногоВопроса.Сортировать("НомерСтроки Возр");
		НоваяСтрока.ПредопределенныеОтветы.Загрузить(ВыборкаВопросыПоРазделуАнкеты.ПредопределенныеОтветы.Выгрузить());
		НоваяСтрока.ПредопределенныеОтветы.Сортировать("НомерСтроки Возр");
		НоваяСтрока.СоставКомплексногоВопроса.Загрузить(
			ВыборкаВопросыПоРазделуАнкеты.СоставКомплексногоВопроса.Выгрузить());
		НоваяСтрока.СоставКомплексногоВопроса.Сортировать("НомерСтроки Возр");
		НоваяСтрока.ДиапазонПодсказокЧисловогоВопроса.Загрузить(
			ВыборкаВопросыПоРазделуАнкеты.ДиапазонПодсказокЧисловогоВопроса.Выгрузить());
		НоваяСтрока.ДиапазонПодсказокЧисловогоВопроса.Сортировать("НомерСтроки Убыв");
		НоваяСтрока.КлючСтроки = Новый УникальныйИдентификатор;
		НоваяСтрока.ПолныйКод  = ПолныйКодРаздела + "." + XMLСтрока(СчетчикВопросов);
		
	КонецЦикла;
	
	Форма.ВариантыОтветовНаВопросы.Загрузить(МассивРезультатовЗапросов[2].Выгрузить());
	
КонецПроцедуры

#КонецОбласти
