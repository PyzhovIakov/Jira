///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Подсистема "ИнтернетПоддержкаПользователей.СистемаБыстрыхПлатежей.ПереводыСБПb2b".
// ОбщийМодуль.ПереводыСБПb2b.
//
// Серверные процедуры обмена данными выполнения оплат:
//  - полученные служебных данных оплат;
//  - подготовка платежных ссылок к отправке.
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

#Область ИнтеграцияПодсистемИнтернетПоддержкиПользователей

#Область БазоваяФункциональностьСБП

// Возвращает список использованных для создания платежной ссылки настроек подключения по документу,
// включая частичные оплаты.
//
// Параметры:
//  ДокументОперации - ОпределяемыйТип.ДокументОперацииСБП - документ, по данным которого
//    необходимо получить список настроек.
//
// Возвращаемое значение:
//  Массив Из СправочникСсылка.НастройкиПодключенияКСистемеБыстрыхПлатежей - используемые
//   в документах настройки подключения.
//
Функция НастройкиПодключенияПоДокументуОперации(ДокументОперации) Экспорт
	
	Возврат СистемаБыстрыхПлатежейСлужебный.НастройкиПодключенияПоДокументуОперации(
		ДокументОперации,
		Метаданные.РегистрыСведений.ИдентификаторыОперацийСБПb2b.Имя);
	
КонецФункции

// Формирует структуру данных для формы платежной ссылки в Системе быстрых платежей.
//
// Параметры:
//  ДокументОперации - ОпределяемыйТип.ДокументОперацииСБП - документ отражающий операцию
//    в информационной базе;
//
// Возвращаемое значение:
//  Структура, Неопределено - данные для формы платежной ссылки в Системе быстрых платежей
//
Функция ДанныеПлатежнойСсылки(ДокументОперации) Экспорт
	
	Возврат РегистрыСведений.ИдентификаторыОперацийСБПb2b.ДанныеПлатежнойСсылки(
		ДокументОперации);
	
КонецФункции

// Создает новый заказ на оплату и получает идентификатор оплаты для формирования QR-кода.
//
// Параметры:
//  ДокументОперации - ОпределяемыйТип.ДокументОперацииСБП - документ, который отражает
//    оплату в информационной базе;
//  НастройкаПодключения - СправочникСсылка.НастройкиПодключенияКСистемеБыстрыхПлатежей -
//    настройка выполнения операции.
//  ДополнительныеПараметры - Структура, Неопределено - дополнительные настройки формирования
//    заказа на оплату;
//  ДанныеЧастичнойОплаты - Структура - описание данных частичной оплаты;
//
// Возвращаемое значение:
//  Структура - результат создания динамической ссылки в Системе быстрых платежей.
//
Функция СлужебныйДинамическаяСсылка(
		ДокументОперации,
		НастройкаПодключения,
		ДополнительныеПараметры = Неопределено,
		ДанныеЧастичнойОплаты = Неопределено) Экспорт
	
	ПроверитьПраваНаВыполнениеОперации();
	
	РезультатОперации = СистемаБыстрыхПлатежейСлужебный.НовыйРезультатПлатежнаяСсылка();
	
	// Подготовка параметров настройки подключения.
	ПараметрыНастройкиПодключения = СистемаБыстрыхПлатежейСлужебный.ПараметрыНастройкиПодключения(
		НастройкаПодключения);
	
	// Проверка общих параметров подключения.
	СистемаБыстрыхПлатежейСлужебный.ПроверитьОбщиеНастройкиПодключения(
		ДокументОперации,
		НастройкаПодключения,
		ПараметрыНастройкиПодключения,
		РезультатОперации);
	
	Если ЗначениеЗаполнено(РезультатОперации.КодОшибки) Тогда
		Возврат РезультатОперации;
	КонецЕсли;
	
	// Создание нового заказа на оплату.
	Возврат ПереводыСБПb2bСервис.ДинамическаяСсылка(
		ДокументОперации,
		ПараметрыНастройкиПодключения,
		ДополнительныеПараметры,
		ДанныеЧастичнойОплаты);
	
КонецФункции

// Выполняет актуализацию статуса оплаты по ранее
// сформированному идентификатору оплаты (QR-коду).
//
// Параметры:
//  ДокументОплаты - ОпределяемыйТип.ДокументОперацииСБП - документ, который отражает
//    продажу в информационной базе;
//  НастройкаПодключения - СправочникСсылка.НастройкиПодключенияКСистемеБыстрыхПлатежей -
//    настройка выполнения оплаты;
//  ПараметрыОперации - Структура - дополнительные данные по оплате:
//    * ДатаОперации - Дата - фактическая дата оплаты в UTC;
//    * СуммаОперации - Число - фактическая суммы операции по документу;
//    * ИдентификаторОперации - Строка - ключ контроля загрузки;
//  ДанныеЧастичнойОплаты - Структура - параметры частичной оплаты.
//
// Возвращаемое значение:
//  Структура - результат создания заказа на оплату в Системе быстрых платежей.
//
Функция АктуализироватьСтатусОплаты(
		ДокументОплаты,
		НастройкаПодключения,
		ПараметрыОперации,
		ДанныеЧастичнойОплаты) Экспорт
	
	РезультатОперации = ПереводыСБПb2b.СтатусОплаты(
		ДокументОплаты,
		НастройкаПодключения,
		Ложь);
	
	РезультатОперации.Вставить("НеобходимоАктуализировать", Ложь);
	РезультатОперации.Вставить("СуммаОплаты", РезультатОперации.ПараметрыОперации.СуммаОперации);
	
	Если РезультатОперации.СтатусОперации <> СистемаБыстрыхПлатежейКлиентСервер.СтатусОперацииВыполняется()
		И РезультатОперации.СтатусОперации <> СистемаБыстрыхПлатежейКлиентСервер.СтатусОперацииОшибка() Тогда
		
		// Изменился статус операции, необходима обработка, выполним в попытке
		Попытка
			
			СтатусОперации = РезультатОперации.СтатусОперации;
			Если СтатусОперации = СистемаБыстрыхПлатежейКлиентСервер.СтатусОперацииВыполнена() Тогда
				СтатусОперацииСервиса = СистемаБыстрыхПлатежейСлужебный.ИдентификаторСтатусаВыполнена();
			ИначеЕсли СтатусОперации = СистемаБыстрыхПлатежейКлиентСервер.СтатусОперацииОтменена() Тогда
				СтатусОперацииСервиса = СистемаБыстрыхПлатежейСлужебный.ИдентификаторСтатусаОтменена();
			Иначе
				РезультатОперации.КодОшибки = "НеизвестнаяОшибка";
				РезультатОперации.СообщениеОбОшибке = НСтр("ru = 'Неизвестный статус операции сервиса'");
				РезультатОперации.ИнформацияОбОшибке = НСтр("ru = 'Неизвестный статус операции сервиса'");
			КонецЕсли;
			
			ОписаниеПараметровОперации = НовыйОписаниеПараметровОперации();
			ЗаполнитьЗначенияСвойств(
				ОписаниеПараметровОперации,
				РезультатОперации.ПараметрыОперации);
				Если ДанныеЧастичнойОплаты <> Неопределено
					И ЗначениеЗаполнено(ДанныеЧастичнойОплаты) Тогда
				ОписаниеПараметровОперации.ДокументОснование = ДанныеЧастичнойОплаты.ОснованиеПлатежа;
			КонецЕсли;
			
			ПереводыСБПb2bСервис.ПриЗагрузкеСтатусаОперации(
				ДокументОплаты,
				НастройкаПодключения,
				ОписаниеПараметровОперации,
				СтатусОперацииСервиса,
				РезультатОперации.СообщениеОбОшибке,
				Новый Массив);
			
		Исключение
			// Исключение не обрабатываем, ожидаем что документы прикладной логики обработаются методом СтатусыОпераций.
			СистемаБыстрыхПлатежейСлужебный.ЗаписатьИнформациюВЖурналРегистрации(
				ОбработкаОшибок.ПодробноеПредставлениеОшибки(
					ИнформацияОбОшибке()),
				Истина);
		КонецПопытки;
		
		РезультатОперации.Вставить("ПлатежнаяСсылка", ПараметрыОперации.ПлатежнаяСсылка);
		
	ИначеЕсли РезультатОперации.СтатусОперации = СистемаБыстрыхПлатежейКлиентСервер.СтатусОперацииВыполняется() Тогда
		
		// Проверка изменился ли документ оплаты
		ЗаказНаОплату = ПереводыСБПb2bСервис.ЗаказаНаОплату(
			ДокументОплаты,
			НастройкаПодключения,
			Неопределено,
			РезультатОперации,
			ДанныеЧастичнойОплаты,
			Ложь);
			
		Если ЗначениеЗаполнено(РезультатОперации.КодОшибки) Тогда
			Возврат РезультатОперации;
		КонецЕсли;
		
		ПараметрыНастройкиПодключения = СистемаБыстрыхПлатежейСлужебный.ПараметрыНастройкиПодключения(
			НастройкаПодключения);
		ПараметрыОперации.Вставить(
			"ИдентификаторМерчанта",
			ПараметрыНастройкиПодключения.ИдентификаторМерчанта);
		ПараметрыОперации.Вставить(
			"ИдентификаторУчастника",
			ПараметрыНастройкиПодключения.ИдентификаторУчастника);
		
		АнализИсторическихДанных = ПереводыСБПb2bСервис.АнализИсторическихДанныхОплаты(
			ДокументОплаты,
			ЗаказНаОплату,
			ПараметрыНастройкиПодключения);
			
		Если Не АнализИсторическихДанных.ДанныеИдентичны Тогда
			РезультатОперации.Вставить("НеобходимоАктуализировать", Истина);
		КонецЕсли;
		
		РезультатОперации.Вставить("ПлатежнаяСсылка", ПараметрыОперации.ПлатежнаяСсылка);
		РезультатОперации.Вставить("СуммаОплаты", ЗаказНаОплату.СуммаОплаты);
		
	КонецЕсли;
	
	Возврат РезультатОперации;
	
КонецФункции

// Получает данные по документу операции.
//
// Параметры:
//  ДокументОперации - ОпределяемыйТип.ДокументОперацииСБП - документ отражающий оплату
//    в информационной базе;
//
// Возвращаемое значение:
//  Структура, Неопределено - данные операции.
//
Функция ДанныеОперации(ДокументОперации) Экспорт
	
	Возврат РегистрыСведений.ИдентификаторыОперацийСБПb2b.ДанныеОперации(ДокументОперации);
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбщегоНазначения

// Создает описание результат длительной операции в сервисе.
//
// Возвращаемое значение:
//  Структура - результат длительной операции:
//    * СтатусОперации - Строка - текущее состояние операции оплаты;
//    * ПараметрыОперации - Структура - см. НовыйОписаниеПараметровОперации;
//    * КодОшибки - Строка - строковый код возникшей ошибки, который
//      может быть обработан вызывающим методом;
//    * СообщениеОбОшибке  - Строка, ФорматированнаяСтрока - сообщение об ошибке для пользователя;
//    * ИнформацияОбОшибке - Строка, ФорматированнаяСтрока - сообщение об ошибке для администратора.
//
Функция НовыйРезультатДлительнойОперации() Экспорт
	
	РезультатОперации = СистемаБыстрыхПлатежейСлужебный.НовыйРезультатДлительнойОперации();
	РезультатОперации.Вставить("ПараметрыОперации", НовыйОписаниеПараметровОперации());
	
	Возврат РезультатОперации;
	
КонецФункции

// Формирует новое описание параметров операции, используется в длительных операциях и переопределяемых методах.
//
// Возвращаемое значение:
//  Структура - содержит описание параметров операции:
//    * ДатаОперации - Дата - фактическая дата операции в UTC;
//    * СуммаОперации - Число, Неопределено - фактическая суммы возврата по документу;
//    * ИдентификаторОперации - Строка - ключ контроля загрузки;
//    * ИдентификаторОплаты - Строка - идентификатор оплаты;
//    * РасчетныйСчет - Строка - расчетный счет получения денежных средств;
//    * ИдентификаторПлатежа - Строка - уникальный Идентификатор Платежа, назначаемый Получателем;
//    * ДокументОснование - ОпределяемыйТип.ДокументОперацииСБП, Неопределено - документ основание платежа.
//
Функция НовыйОписаниеПараметровОперации() Экспорт
	
	ПараметрыОперации = Новый Структура;
	ПараметрыОперации.Вставить("ДатаОперации", Дата(1, 1, 1));
	ПараметрыОперации.Вставить("СуммаОперации", Неопределено);
	ПараметрыОперации.Вставить("ИдентификаторОперации", "");
	ПараметрыОперации.Вставить("ИдентификаторОплаты", ""); 
	ПараметрыОперации.Вставить("РасчетныйСчет", "");
	ПараметрыОперации.Вставить("ИдентификаторПлатежа", "");
	ПараметрыОперации.Вставить("ДокументОснование", Неопределено);
	
	Возврат ПараметрыОперации;
	
КонецФункции

// Создает описание результат операции данные ссылки.
//
// Возвращаемое значение:
//  Структура - результат операции:
//    * КодОшибки - Строка - строковый код возникшей ошибки, который
//      может быть обработан вызывающим методом;
//    * СообщениеОбОшибке  - Строка, ФорматированнаяСтрока - сообщение об ошибке для пользователя;
//    * ИнформацияОбОшибке - Строка, ФорматированнаяСтрока - сообщение об ошибке для администратора.
//    * ДанныеСсылки - Неопределено - описание данные функциональной ссылки.
//
Функция НовыйРезультатОперацииДанныеСсылки() Экспорт
	
	РезультатОперации = СистемаБыстрыхПлатежейСлужебный.НовыйРезультатОперации();
	РезультатОперации.Вставить("ДанныеСсылки", Неопределено);
	
	Возврат РезультатОперации;
	
КонецФункции

#КонецОбласти

#Область ПодготовкаПлатежнойСсылки

// Формирует настройки подключения для выполнения запросов.
//
// Параметры:
//  ДокументОперации - ОпределяемыйТип.ДокументОперацииСБП - документ, по данным которого
//    необходимо получить список настроек.
//
// Возвращаемое значение:
//  Структура - см. СистемаБыстрыхПлатежейСлужебный.НовыйПараметрыНастройкиПодключения.
//
Функция ПараметрыНастройкиПодключенияПоДокументу(ДокументОперации) Экспорт
	
	// Заполнение настроек проведения оплаты.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИдентификаторыОперацийСБПb2b.ИдентификаторМерчанта КАК ИдентификаторМерчанта,
	|	ВЫБОР
	|		КОГДА ИдентификаторыОперацийСБПb2b.ИдентификаторУчастника <> """"
	|			ТОГДА ИдентификаторыОперацийСБПb2b.ИдентификаторУчастника
	|		ИНАЧЕ ИдентификаторыОперацийСБПb2b.НастройкаПодключения.ИдентификаторУчастника
	|	КОНЕЦ КАК ИдентификаторУчастника,
	|	ИдентификаторыОперацийСБПb2b.НастройкаПодключения.Ссылка КАК НастройкаПодключения,
	|	ИдентификаторыОперацийСБПb2b.НастройкаПодключения.Используется КАК Используется,
	|	ИдентификаторыОперацийСБПb2b.НастройкаПодключения.Ссылка КАК НастройкаПодключенияСсылка,
	|	ЕСТЬNULL(&ИмяПоляТипАутентификации, ""UNKNOW"") КАК ТипАутентификации,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(НастройкиУчастниковСБП.ПеренаправлениеПоСсылке, ЛОЖЬ)
	|			ТОГДА ИдентификаторыОперацийСБПb2b.НастройкаПодключения.СсылкаПеренаправления
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК СсылкаПеренаправления
	|ИЗ
	|	РегистрСведений.ИдентификаторыОперацийСБПb2b КАК ИдентификаторыОперацийСБПb2b
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчастниковСБП КАК НастройкиУчастниковСБП
	|		ПО (ИдентификаторыОперацийСБПb2b.ДокументОперации = &ДокументОперации)
	|			И (ВЫБОР
	|				КОГДА ИдентификаторыОперацийСБПb2b.ИдентификаторУчастника <> """"
	|					ТОГДА ИдентификаторыОперацийСБПb2b.ИдентификаторУчастника
	|				ИНАЧЕ ИдентификаторыОперацийСБПb2b.НастройкаПодключения.ИдентификаторУчастника
	|			КОНЕЦ = НастройкиУчастниковСБП.Идентификатор)
	|ГДЕ
	|	ИдентификаторыОперацийСБПb2b.ДокументОперации = &ДокументОперации";
	
	Запрос.УстановитьПараметр("ДокументОперации", ДокументОперации);
	
	ИмяПоля = "";
	СистемаБыстрыхПлатежейСобытия.ПриОпределенииИмениПоляТипаАутентификации(
		Перечисления.ВариантыНастройкиСБП.b2b,
		ИмяПоля);
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ИмяПоляТипАутентификации",
		"НастройкиУчастниковСБП." + ИмяПоля);
	
	Возврат СистемаБыстрыхПлатежейСлужебный.НовыйПараметрыНастройкиПодключения(
		Запрос,
		"РегистрСведений");
	
КонецФункции

#КонецОбласти

#Область ПрочиеСлужебныеПроцедурыФункцииПрикладныхОпераций

// Проверяет права на вызов прикладных операций Системы быстрых платежей
// в случае отсутствия прав, вызывается исключение.
//
Процедура ПроверитьПраваНаВыполнениеОперации() Экспорт
	
	Если Не ПереводыСБПb2b.ПереводыСБПДоступны() Тогда
		ВызватьИсключение НСтр("ru = 'Нарушение прав доступа. Пользователю запрещено выполнение операций в Системе быстрых платежей.
			|Обратитесь к администратору.'");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
