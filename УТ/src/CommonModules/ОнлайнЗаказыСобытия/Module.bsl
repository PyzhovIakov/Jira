///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Подсистема "ИнтернетПоддержкаПользователей.ОнлайнЗаказы".
// ОбщийМодуль.ОнлайнЗаказыСобытия.
//
// Серверные процедуры обработки событий подсистемы Онлайн-заказы:
//  - заполнение параметров оплаты;
//  - запись данных оплаты;
//  - получение данных оплаты.
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

Процедура ПриИзмененииИспользованияНастройкиОплаты(
		НастройкаОплаты,
		Используется,
		ИдентификаторСпособаОплаты,
		ОбновлятьНастройки,
		РезультатОперации) Экспорт
	
	Если Не ОбщегоНазначения.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.СистемаБыстрыхПлатежей.БазоваяФункциональностьСБП") Тогда
		Возврат;
	КонецЕсли;
	
	СпособОплаты = СпособОплатыПоИдентификатору(ИдентификаторСпособаОплаты);
	
	Результат = ОнлайнЗаказыСлужебный.НовыйРезультатОперации();
	Результат.Вставить("Ошибка", Ложь);
	Результат.Вставить("Токен", Неопределено);
	
	Если Используется Тогда
		ПриПолученииТокенаСпособаОплаты(СпособОплаты, НастройкаОплаты, Результат);
	Иначе
		ПриОтключенииТокенаСпособаОплаты(СпособОплаты, НастройкаОплаты, Результат);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Результат.СообщениеОбОшибке) Тогда
		Результат.Ошибка = Истина;
		ЗаполнитьЗначенияСвойств(РезультатОперации, Результат);
		Возврат;
	КонецЕсли;
	
	РезультатОбработки = Новый Структура;
	РезультатОбработки.Вставить("Токен", Результат.Токен);
	РезультатОбработки.Вставить("НастройкаОплаты", НастройкаОплаты);
	
	Если ОбновлятьНастройки Тогда
		
		НастройкиПодключения = Справочники.НастройкиПодключенияКОнлайнЗаказам.НастройкиПодключенияПоНастройкеОплаты(
			НастройкаОплаты);
			
		Для Каждого НастройкаПодключения Из НастройкиПодключения Цикл
			ОнлайнЗаказыСлужебный.ОбновлениеНастройки(НастройкаПодключения, РезультатОбработки);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработкаСобытий

// Выполняет заполнение параметров оплат заказа в соответствии с допустимыми способами.
//
// Параметры:
//  ДокументЗаказа - ОпределяемыйТип.ДокументОнлайнЗаказаБИП - документ, для которого
//    формируются параметры оплат.
//  ПараметрыОплат - Структура - Содержит описание параметров оплат по способам:
//    *СБП - Структура, Неопределено - Параметры оплат СБП,
//    Неопределено если подсистема СистемаБыстрыхПлатежей не используется.
//  НастройкиОплат - Соответствие - Содержит данные используемых настроек в разрезе способов оплат:
//    * Ключ - ПеречислениеСсылка.СпособыОплатыОнлайнЗаказов - способ оплаты
//    * Значение - Произвольный - Используемая настройка подключения, для данного способа оплаты.
//
Процедура ПриФормированииПараметровОплат(
		ДокументЗаказа,
		ПараметрыОплат,
		НастройкиОплат) Экспорт
	
	Для Каждого НастройкаОплаты Из НастройкиОплат Цикл
		Если НастройкаОплаты.Ключ = Перечисления.СпособыОплатыОнлайнЗаказов.СБПc2b
			И ОбщегоНазначения.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.СистемаБыстрыхПлатежей.БазоваяФункциональностьСБП") Тогда
			
			МодульСистемаБыстрыхПлатежейСлужебный = ОбщегоНазначения.ОбщийМодуль("СистемаБыстрыхПлатежейСлужебный");
			МодульСистемаБыстрыхПлатежейСлужебный.ПараметрыОплаты(
				ДокументЗаказа,
				НастройкаОплаты.Значение,
				ПараметрыОплат.СБП);
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Выполняет заполнение параметров оплат заказа для сервиса.
//
// Параметры:
//  НастройкиОплатПодключения - Соответствие - Содержит данные используемых настроек в разрезе способов оплат:
//    * Ключ - ПеречислениеСсылка.СпособыОплатыОнлайнЗаказов - способ оплаты
//    * Значение - Произвольный - Используемая настройка подключения, для данного способа оплаты.
//  НастройкиОплатСервиса - Структура - Содержит параметры оплат для сервиса:
//    * СБП - Структура, Неопределено - Параметры оплаты СБП,
//        Неопределено в случае если настройка для оплат через СБП не выбрана:
//
Процедура ПриЗаполненииНастроекОплаты(
	НастройкиОплатПодключения,
	НастройкиОплатСервиса) Экспорт
	
	Для Каждого НастройкаОплаты Из НастройкиОплатПодключения Цикл
		Если НастройкаОплаты.Ключ = Перечисления.СпособыОплатыОнлайнЗаказов.СБПc2b
			И ОбщегоНазначения.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.СистемаБыстрыхПлатежей.ПереводыСБПc2b") Тогда
			
			НастройкиОплатыСБПc2b = Новый Структура;
			НастройкиОплатыСБПc2b.Вставить("ВариантСБП",        "C2B");
			НастройкиОплатыСБПc2b.Вставить("НазначениеПлатежа", "");
			НастройкиОплатСервиса.СБП = НастройкиОплатыСБПc2b;
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Выполняет подготовку параметров оплаты заказа для записи в соответствующие подсистемы.
//
// Параметры:
//  ДанныеЗаказа - Структура - Содержит данные заказа
//    * ИдентификаторЗаказа - Строка - Идентификатор онлайн-заказа;
//    * Статус - Строка - Статус онлайн-заказа;
//    * СуммаЗаказа - Число - Сумма онлайн-заказа;
//    * СпособОплаты - Перечисление.СпособыОплатыОнлайнЗаказов - Способ оплаты онлайн-заказа;
//    * ДатаОплаты - дата получения данных об оплате сервисом;
//    * КонтрольнаяСумма - Строка - Значение контрольной суммы заказа;
//    * ВерсияКонтрольнойСуммы - Число - Версия расчета контрольной суммы заказа;
//    * ОплатаСБП - Структура, Неопределено - Содержит данные операции СБП, в том случае когда
//        значение Свойства СпособОплаты = Перечисления.СпособыОплатыОнлайнЗаказов.СБПc2b:
//      ***ИдентификаторОплаты - Строка - идентификатор оплаты в СБП;
//      ***ИдентификаторПлатежнойСистемы - Строка - идентификатор оплаты в Системе быстрых платежей;
//      ***ДатаОперации - Дата - фактическая дата оплаты в UTC;
//      ***ИдентификаторМерчанта - Строка - идентификатор мерчанта в Системе быстрых платежей;
//      ***НазначениеПлатежа - Строка - назначение платежа;
//  ПараметрыОплаты - Соответствие - Содержит параметры оплат в разрезе ее способов
//  ПараметрыНастройкиОплаты - Структура - Содержит параметры настройки вида оплаты
//  НастройкаПодключения - СправочникСсылка.НастройкиПодключенияКОнлайнЗаказам - Настройка подключения,
//    используемая для заказа.
//
Процедура ПриЗаполненииПараметровОплаты(
		ДанныеЗаказа,
		ПараметрыОплаты,
		ПараметрыНастройкиОплаты,
		НастройкаПодключения) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаказа.СпособОплаты) Тогда
		Возврат;
	КонецЕсли;
	
	НастройкаОплаты = Справочники.НастройкиПодключенияКОнлайнЗаказам.НастройкаОплаты(
		НастройкаПодключения,
		ДанныеЗаказа.СпособОплаты);
		
	
	Если ДанныеЗаказа.СпособОплаты = Перечисления.СпособыОплатыОнлайнЗаказов.СБПc2b
		И ОбщегоНазначения.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.СистемаБыстрыхПлатежей.БазоваяФункциональностьСБП") Тогда
		МодульСистемаБыстрыхПлатежейСлужебный = ОбщегоНазначения.ОбщийМодуль("СистемаБыстрыхПлатежейСлужебный");
		МодульСистемаБыстрыхПлатежейСлужебный.ЗаполнитьПараметрыОплаты(
			ДанныеЗаказа,
			НастройкаОплаты,
			ПараметрыОплаты,
			ПараметрыНастройкиОплаты,
			"c2b");
	КонецЕсли;
	
КонецПроцедуры

// Выполняет запись данных оплат заказа в соответствующие подсистемы.
//
// Параметры:
//  ДокументЗаказа - ОпределяемыйТип.ДокументОнлайнЗаказаБИП - документ по которому выполнена оплата.
//  СпособОплаты - Перечисление.СпособыОплатыОнлайнЗаказов - Способ оплаты онлайн-заказа;
//  ПараметрыОплаты - Соответствие - Содержит данные оплат по способам:
//    * Ключ - ПеречислениеСсылка.СпособыОплатыОнлайнЗаказов - способ оплаты
//    * Значение - Структура - Параметры оплат, сформированные в методе ОнлайнЗаказыСобытия.ПриЗаполненииПараметровОплаты.
//  ПараметрыНастройкиОплаты - Структура - Содержит параметры настройки вида оплаты
//
Процедура ПриЗаписиДанныхОплаты(
		ДокументЗаказа,
		СпособОплаты,
		ПараметрыОплаты,
		ПараметрыНастройкиОплаты) Экспорт
	
	Если СпособОплаты = Перечисления.СпособыОплатыОнлайнЗаказов.СБПc2b
		И ОбщегоНазначения.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.СистемаБыстрыхПлатежей.БазоваяФункциональностьСБП") Тогда
		
		ПараметрыОплатыСБПc2b = ПараметрыОплаты.Получить("СБПc2b");
		
		МодульСистемаБыстрыхПлатежейСлужебный = ОбщегоНазначения.ОбщийМодуль("СистемаБыстрыхПлатежейСлужебный");
		МодульСистемаБыстрыхПлатежейСлужебный.ЗаписатьДанныеОплаты(
			ДокументЗаказа,
			ПараметрыОплатыСБПc2b,
			ПараметрыНастройкиОплаты,
			"c2b");
			
		ПараметрыОплатыСБПc2b.РезультатОбработки.ПараметрыОперации.Удалить("ИдентификаторМерчанта");
		ПараметрыОплатыСБПc2b.РезультатОбработки.ПараметрыОперации.Удалить("Идентификатор");
		ПараметрыОплатыСБПc2b.РезультатОбработки.ПараметрыОперации.Удалить("НазначениеПлатежа");
		
	КонецЕсли;
	
КонецПроцедуры

// Выполняет получение данных оплат по переданным документам.
//
// Параметры:
//  ДанныеОпераций  - Соответствие- содержит данные оплат для дальнейшей передачи
//    в прикладную логику для обработки отложенного статуса;
//  СпособОплаты - Перечисление.СпособыОплатыОнлайнЗаказов - Способ оплаты онлайн-заказа;
//  ОплаченныеЗаказы - Массив Из ОпределяемыйТип.ДокументОнлайнЗаказаБИП - перечень документов,
//    по которым необходимо получить данные оплат.
//
Процедура ПриПолученииДанныхОплат(
	ДанныеОпераций,
	СпособОплаты,
	ОплаченныеЗаказы) Экспорт
	
	Если СпособОплаты = Перечисления.СпособыОплатыОнлайнЗаказов.СБПc2b
		И ОбщегоНазначения.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.СистемаБыстрыхПлатежей.БазоваяФункциональностьСБП") Тогда
		МодульСистемаБыстрыхПлатежейСлужебный = ОбщегоНазначения.ОбщийМодуль("СистемаБыстрыхПлатежейСлужебный");
		МодульСистемаБыстрыхПлатежейСлужебный.ДанныеОплаты(
			ОплаченныеЗаказы,
			ДанныеОпераций,
			"c2b");
	КонецЕсли;
	
КонецПроцедуры

// Выполняет создание/получение токена данных оплат по переданному способу и настройке подключения.
//
// Параметры:
//  СпособОплаты - Перечисление.СпособыОплатыОнлайнЗаказов - Способ оплаты для которого получается токен;
//  НастройкаПодключения - Произвольный - настройка подключения перечень документов,
//    по которым необходимо получить данные оплат.
//  РезультатОперации - Структура - результат выполнения операции см. ОнлайнЗаказыСлужебный.НовыйРезультатОперации
//    * Токен - Строка, Неопределено - Значение токена для создания оплаты по выбранному способу,
//      Неопределено в случае когда не удалось выполнить операцию получения токена.
//
Процедура ПриПолученииТокенаСпособаОплаты(СпособОплаты, НастройкаПодключения, РезультатОперации) Экспорт
	
	Если СпособОплаты = Перечисления.СпособыОплатыОнлайнЗаказов.СБПc2b
		И ОбщегоНазначения.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.СистемаБыстрыхПлатежей.БазоваяФункциональностьСБП") Тогда
		
		МодульСистемаБыстрыхПлатежейСлужебный = ОбщегоНазначения.ОбщийМодуль("СистемаБыстрыхПлатежейСлужебный");
		МодульСистемаБыстрыхПлатежейСлужебный.ТокенСпособаОплаты(
			НастройкаПодключения,
			РезультатОперации,
			ИдентификаторСервиса());
		
	КонецЕсли;
	
	Если Не ПустаяСтрока(РезультатОперации.СообщениеОбОшибке) Тогда
		
		ОнлайнЗаказыСлужебный.ЗаписатьИнформациюВЖурналРегистрации(
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось получить токен  по способу оплаты: %1.
					|
					|%2'"),
				СпособОплаты,
				РезультатОперации.СообщениеОбОшибке),
			Истина);
		
	КонецЕсли;
	
КонецПроцедуры

// Выполняет создание/получение токена данных оплат по переданному способу и настройке подключения.
//
// Параметры:
//  СпособОплаты - Перечисление.СпособыОплатыОнлайнЗаказов - Способ оплаты для которого получается токен;
//  НастройкаПодключения - Произвольный - настройка подключения способа оплаты,
//    по которой осуществляется отзыв токена.
//  РезультатОперации - Структура - результат выполнения операции см. ОнлайнЗаказыСлужебный.НовыйРезультатОперации
//
Процедура ПриОтключенииТокенаСпособаОплаты(
		СпособОплаты,
		НастройкаПодключения,
		РезультатОперации) Экспорт
	
	Если СпособОплаты = Перечисления.СпособыОплатыОнлайнЗаказов.СБПc2b
		И ОбщегоНазначения.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.СистемаБыстрыхПлатежей.БазоваяФункциональностьСБП") Тогда
		
		МодульСистемаБыстрыхПлатежейСлужебный = ОбщегоНазначения.ОбщийМодуль("СистемаБыстрыхПлатежейСлужебный");
		МодульСистемаБыстрыхПлатежейСлужебный.ОтозватьТокенСпособаОплаты(
			НастройкаПодключения,
			РезультатОперации,
			ИдентификаторСервиса());
		
	КонецЕсли;
	
	Если Не ПустаяСтрока(РезультатОперации.СообщениеОбОшибке) Тогда
		
		ОнлайнЗаказыСлужебный.ЗаписатьИнформациюВЖурналРегистрации(
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось отозвать токен  по способу оплаты: %1.
					|
					|%2'"),
				СпособОплаты,
				РезультатОперации.СообщениеОбОшибке),
			Истина);
		
	КонецЕсли;
	
КонецПроцедуры

// Выполняет обработку назначения платежа при подготовке онлайн-заказа.
//
// Параметры:
//  НазначениеПлатежа - Строка - Назначение платежа для способа оплаты;
//  СпособОплаты - Перечисление.СпособыОплатыОнлайнЗаказов - Способ оплаты для которого получается токен.
//
Процедура ПриПодготовкеНазначенияПлатежа(НазначениеПлатежа, СпособОплаты) Экспорт
	
	Если СпособОплаты = Перечисления.СпособыОплатыОнлайнЗаказов.СБПc2b
		И ОбщегоНазначения.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.СистемаБыстрыхПлатежей.БазоваяФункциональностьСБП") Тогда
		
		МодульСистемаБыстрыхПлатежейСлужебный = ОбщегоНазначения.ОбщийМодуль("СистемаБыстрыхПлатежейСлужебный");
		МодульСистемаБыстрыхПлатежейСлужебный.ПодготовитьНазначениеПлатежа(
			НазначениеПлатежа,
			"c2b");
		
	КонецЕсли;
	
КонецПроцедуры

// Выполняет проверку параметров оплат перед отправкой онлайн-заказа в сервис.
//
// Параметры:
//  ПараметрыОплат - Структура - Содержит параметры оплат онлайн-заказа;
//  РезультатОперации - Структура - результат выполнения операции см. ОнлайнЗаказыСлужебный.НовыйРезультатОперации
//
Процедура ПриПроверкеПараметровОплат(
		ПараметрыОплат,
		РезультатОперации) Экспорт
	
	Если ПараметрыОплат.СБП <> Неопределено
		И ПараметрыОплат.СБП.c2b <> Неопределено
		И ОбщегоНазначения.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.СистемаБыстрыхПлатежей.БазоваяФункциональностьСБП") Тогда
		
		МодульСистемаБыстрыхПлатежейСлужебный = ОбщегоНазначения.ОбщийМодуль("СистемаБыстрыхПлатежейСлужебный");
		МодульСистемаБыстрыхПлатежейСлужебный.ПроверитьПараметрыОплат(
			ПараметрыОплат.СБП.c2b,
			РезультатОперации,
			"c2b");
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПрочиеСлужебныеПроцедурыФункции

// Возвращает идентификатор сервиса для которого выполняется получение данных.
//
// Возвращаемое значение:
//  Строка - Идентификатор сервиса.
//
Функция ИдентификаторСервиса()
	
	Возврат "orders.1c.ru";
	
КонецФункции

Функция СпособОплатыПоИдентификатору(ИдентификаторСпособаОплаты)
	
	Если ИдентификаторСпособаОплаты = "СБПc2b" Тогда
		Возврат Перечисления.СпособыОплатыОнлайнЗаказов.СБПc2b;
	КонецЕсли;
	
	ВызватьИсключение (НСтр("ru = 'Передан неизвестный идентификатор способа оплаты.'"));
	
КонецФункции

#КонецОбласти

#КонецОбласти

