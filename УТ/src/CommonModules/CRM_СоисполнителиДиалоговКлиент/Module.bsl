
#Область ПрограммныйИнтерфейс

// ДанныеКонтакта: УчетнаяЗапись, Группа, ID_Пользователя
//
// Параметры:
//  Пользователь				 - СправочникСсылка.Пользователи	 - Пользователь.
//  ДанныеКонтакта				 - Структура						 - Данные контакта.
//  РанееВыбранныеПользователи	 - СправочникСсылка.Пользователи	 - Польлзователь, который был выбран ранее.
//  ОповещениеОЗавершении		 - ОписаниеОповещения				 - Оповещение о завершении.
//
Процедура ДобавитьСоисполнителя(Пользователь, ДанныеКонтакта, РанееВыбранныеПользователи, ОповещениеОЗавершении) Экспорт
	
	ПользовательЯвляетсяОтветственным = CRM_СоисполнителиДиалоговСервер.ПользовательЯвляетсяОтветственным(
		Пользователь, ДанныеКонтакта.ТекущийДиалог, ДанныеКонтакта.УчетнаяЗапись);
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("ПользовательЯвляетсяОтветственным", ПользовательЯвляетсяОтветственным);
	ДополнительныеПараметры.Вставить("ДанныеКонтакта", ДанныеКонтакта);
	ДополнительныеПараметры.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДобавитьСоисполнителяПользовательВыбран",
		 ЭтотОбъект,
		 ДополнительныеПараметры);
	
	РанееВыбранныеПользователи.Добавить(Пользователь);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Истина);
	ПараметрыФормы.Вставить("СкрываемыеПользователи", РанееВыбранныеПользователи);
	
	ОткрытьФорму("Справочник.Пользователи.ФормаВыбора", ПараметрыФормы, , , , , ОписаниеОповещения);
	
КонецПроцедуры

// Процедура-обработчик выбора пользователя при добавлении соисполнителя.
//
// Параметры:
//  Результат				 - Массив, СправочникСсылка.Пользователи	 - Выбранные пользователи.
//  ДополнительныеПараметры	 - Структура	 - Дополнительные параметры.
//
Процедура ДобавитьСоисполнителяПользовательВыбран(Результат, ДополнительныеПараметры) Экспорт
	
	ВыбранныеПользователи = Результат;
	
	Если ВыбранныеПользователи = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ВыбранныеПользователи) = Тип("СправочникСсылка.Пользователи") Тогда
		ВыбранныйПользователь = ВыбранныеПользователи;
		ВыбранныеПользователи = Новый Массив;
		ВыбранныеПользователи.Добавить(ВыбранныйПользователь);
	КонецЕсли;
	
	ДанныеКонтакта = ДополнительныеПараметры.ДанныеКонтакта;
	ПользовательЯвляетсяОтветственным = ДополнительныеПараметры.ПользовательЯвляетсяОтветственным;
	ОповещениеОЗавершении = ДополнительныеПараметры.ОповещениеОЗавершении;
	
	ДоступПользователей = CRM_СоисполнителиДиалоговСервер.ДоступПользователей(ВыбранныеПользователи,
		 ДанныеКонтакта.УчетнаяЗапись);
	
	ПользователиСДоступом = ДоступПользователей.ПользователиСДоступом;
	ПользователиБезДоступа = ДоступПользователей.ПользователиБезДоступа;
	
	Если ПользовательЯвляетсяОтветственным И ПользователиБезДоступа.Количество() > 0 Тогда
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ДанныеКонтакта", ДанныеКонтакта);
		ДополнительныеПараметры.Вставить("ВыбранныеПользователи", ВыбранныеПользователи);
		ДополнительныеПараметры.Вставить("ПользователиСДоступом", ПользователиСДоступом);
		ДополнительныеПараметры.Вставить("ПользователиБезДоступа", ПользователиБезДоступа);
		ДополнительныеПараметры.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
		
		Оповещение = Новый ОписаниеОповещения("ДатьДоступКУчетнойЗаписиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Добавить в доступ к учетной записи?'"),
			 РежимДиалогаВопрос.ДаНетОтмена, 60,
			 КодВозвратаДиалога.Отмена);
		Возврат;
		
	КонецЕсли;
	
	CRM_СоисполнителиДиалоговСервер.ДобавитьСоисполнителя(ПользователиСДоступом, ДанныеКонтакта);
	
	ВыполнитьОбработкуОповещения(ОповещениеОЗавершении);
	
КонецПроцедуры

// Процедура-обработчик завершения предоставления доступа к учетной записи.
//
// Параметры:
//  Результат				 - КодВозвратаДиалога	 - Код возврата диалога.
//  ДополнительныеПараметры	 - Структура	 - Дополнительные параметры.
//
Процедура ДатьДоступКУчетнойЗаписиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		CRM_СоисполнителиДиалоговСервер.ДобавитьСоисполнителя(ДополнительныеПараметры.ПользователиСДоступом,
			 ДополнительныеПараметры.ДанныеКонтакта);
	Иначе 
		МассивНачальноеСостояниеДоступа = Новый Массив;
		CRM_СоисполнителиДиалоговСервер.ДобавитьПользователяВУчетнуюЗаписьМессенджера(ДополнительныеПараметры.ПользователиБезДоступа,
																							ДополнительныеПараметры.ДанныеКонтакта.УчетнаяЗапись, МассивНачальноеСостояниеДоступа);
		CRM_СоисполнителиДиалоговСервер.ДобавитьСоисполнителя(ДополнительныеПараметры.ВыбранныеПользователи,
			 ДополнительныеПараметры.ДанныеКонтакта,
			 МассивНачальноеСостояниеДоступа);
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеОЗавершении);
	
КонецПроцедуры

// ДанныеКонтакта: УчетнаяЗапись, Группа, ID_Пользователя
//
// Параметры:
//  ДанныеКонтакта			 - Структура			 - Данные контакта.
//  УдаляемыеСоисполнители	 - Массив				 - Массив удаляемых соисполнителей.
//  ОповещениеОЗавершении	 - ОписаниеОповещения	 - Оповщение о завершении.
//
Процедура УдалитьСоисполнителя(ДанныеКонтакта, УдаляемыеСоисполнители, ОповещениеОЗавершении) Экспорт
	
	CRM_СоисполнителиДиалоговСервер.УдалитьСоисполнителя(УдаляемыеСоисполнители, ДанныеКонтакта);
	
	ВыполнитьОбработкуОповещения(ОповещениеОЗавершении);
	
КонецПроцедуры

// ДанныеКонтакта: УчетнаяЗапись, Группа, ID_Пользователя
//
// Параметры:
//  ДанныеКонтакта			 - Структура			 - Данные контакта.
//  ОповещениеОЗавершении	 - ОписаниеОповещения	 - Оповщение о завершении.
//
Процедура УдалитьВсехСоисполнителей(ДанныеКонтакта, ОповещениеОЗавершении) Экспорт
	
	CRM_СоисполнителиДиалоговСервер.УдалитьВсехСоисполнителей(ДанныеКонтакта);
	
	ВыполнитьОбработкуОповещения(ОповещениеОЗавершении);
	
КонецПроцедуры

// Процедура - обработчик события "Нажатие" для поля значения соисполнителя в форме объекта.
//
// Параметры:
//  Форма				 - ФормаКлиентскогоПриложения	 - Форма объекта
//  Элемент	             - ЭлементыФормы - Декорация с именем исполнителя
//
Процедура СоисполнительНажатиеИмя(Форма, Элемент) Экспорт
	
	СоисполнительИД = СтрЗаменить(Сред(Элемент.Имя, 17), "_", "-");
	
	НайденныеСтроки = Форма.СоисполнителиТЗ.НайтиСтроки(Новый Структура("ИдентификаторЭлемента", СоисполнительИД));
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьЗначение(, НайденныеСтроки[0].Значение);
	
КонецПроцедуры

// Процедура - обработчик события "Нажатие" для поля значения соисполнителя в форме объекта.
//
// Параметры:
//  Форма				 - ФормаКлиентскогоПриложения	 - Форма объекта
//  Элемент	             - ЭлементыФормы - Декорация с именем исполнителя
//  ДанныеТекущегоКонтакта - Структура - Данные текущего контакта
//
Процедура СоисполнительНажатиеКнопка(Форма, Элемент, ДанныеТекущегоКонтакта) Экспорт
	
	СоисполнительИД = СтрЗаменить(Сред(Элемент.Имя, 23), "_", "-");
	
	НайденныеСтроки = Форма.СоисполнителиТЗ.НайтиСтроки(Новый Структура("ИдентификаторЭлемента", СоисполнительИД));
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	УдаляемыеСоисполнители = Новый Массив;
	УдаляемыеСоисполнители.Добавить(НайденныеСтроки[0].Значение);
	
	УдалитьСоисполнителя(ДанныеТекущегоКонтакта,
							УдаляемыеСоисполнители,
							Новый ОписаниеОповещения("ЗаполнитьСписокСоисполнителейОповещение", Форма));
	
КонецПроцедуры

// Определяет, является ли пользователь соисполнителем по контакту.
//
// Параметры:
//  ДанныеКонтакта	 - Структура				 - Данные контакта.
//  Пользователь	 - СправочникСсылка.Пользователи - Пользователь.
// 
// Возвращаемое значение:
//  Булево - Истина, если пользователь является соисполнителем.
//
Функция ПользовательЯвляетсяСоисполнителем(ДанныеКонтакта, Пользователь) Экспорт
	
	Возврат CRM_СоисполнителиДиалоговСервер.ПользовательЯвляетсяСоисполнителем(ДанныеКонтакта, Пользователь);
	
КонецФункции

#КонецОбласти
