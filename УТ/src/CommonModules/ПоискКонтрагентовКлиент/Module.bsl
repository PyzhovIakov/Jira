///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Подсистема "ПоискКонтрагентов".
// ОбщийМодуль.ПоискКонтрагентовКлиент.
//
// Клиентские процедуры и функции по работе с сервисом поиска контрагентов.
// - Программный интерфейс для открытия отчета.
// - Обработчики событий АвтоПодбор и НачалоВыбора для полей ОКВЭД и выбираемых из веб-справочников.
// - Преобразование выбранных значений ОКВЭД в структуру с представлением.
// - Описание поля отбора.
// - Сравнение значения в представлении списка с сохраненным.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Выполняет открытие формы поиска контрагентов по публичным реквизитам.
//
// Параметры:
//  Владелец - Произвольный - владелец открываемой формы - форма, элемент управления другой формы, либо Неопределено.
//  ОписаниеОповещенияОЗакрытии - ОписаниеОповещения - описание процедуры, которая будет вызвана при закрытии формы.
//  ПараметрыПоиска - Структура - параметры поиска, которые можно установить при открытии формы:
//                      * Наименование - Строка - Наименование контрагента. Любое значение.
//                      * ВидКонтрагента - Строка - вид контрагента:
//                          - "ЮрЛицо" - юридическое лицо.
//                          - "ИП" - индивидуальные предприниматели.
//                          - Любые другие значения игнорируются.
//                          Если вид контрагента не задан, то значения будут установлены для всех видов контрагентов.
//                          Если вид контрагента задан корректно, то значение будет установлено только этому виду.
//                          Если вид контрагента задан неправильно, то значение не будет установлено никому.
//                  - Неопределено - открывать форму с настройками по умолчанию.
//
Процедура НайтиКонтрагентов(
		Владелец = Неопределено,
		ОписаниеОповещенияОЗакрытии = Неопределено,
		ПараметрыПоиска = Неопределено) Экспорт
		
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПараметрыПоиска", ПараметрыПоиска);
	
	ОткрытьФорму(
		"Отчет.ПоискКонтрагентов.Форма",
		ПараметрыФормы,
		Владелец,
		,
		,
		,
		ОписаниеОповещенияОЗакрытии);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область АвтоПодбор

// Выполняет обработку события АвтоПодбор для полей ввода значений критериев отбора.
//
// Параметры:
//  ОписаниеПоля - Структура, ДанныеФормыЭлементКоллекции - описание критерия, для которого выполняется изменение
//    значения в произвольном поле, либо текущие данные таблицы формы, в которой происходит изменение значения.
//    см. ПоискКонтрагентовСлужебныйКлиентСервер.НовыйОписаниеБыстрогоОтбора.
//  Текст - Строка - Строка текста, введенная в поле ввода.
//  ДанныеВыбора - СписокЗначений Из Произвольный - В данный параметр будет помещен результат подбора.
//  СтандартнаяОбработка - Булево - Признак выполнения стандартной обработки.
//  ДополнительныеПараметры - Структура, Неопределено - служебные параметры. см.
//    ПоискКонтрагентовКлиент.НовыйДопПараметрыАвтоподбора.
//
// Возвращаемое значение:
//  Булево - Истина, если автоподбор выполнен, Ложь в противном случае.
//
Функция АвтоПодбор(
		ОписаниеПоля,
		Текст,
		ДанныеВыбора,
		СтандартнаяОбработка,
		ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ЭтоТочноеЗначениеОКВЭД(ОписаниеПоля) Тогда
	
		АвтоПодборОКВЭД(
			Текст,
			ДанныеВыбора,
			СтандартнаяОбработка);
		
		Возврат Истина;
		
	ИначеЕсли ЭтоТочноеЗначениеИзСправочника(ОписаниеПоля) Тогда
		
		Если Не ПоискКонтрагентовСлужебныйКлиентСервер.ЭтоСтруктура(ДополнительныеПараметры) Тогда
			Возврат Ложь;
		КонецЕсли;
		
		ТекущееВремя = ТекущаяУниверсальнаяДатаВМиллисекундах();
		
		// Если время задержки еще не истекло, то возвращаем предыдущий результат подбора.
		Если ТекущееВремя < (ДополнительныеПараметры.ПоследнееВремяПодбора + ДополнительныеПараметры.ВремяЗадержки) Тогда
			СтандартнаяОбработка = Ложь;
			ДанныеВыбора = ДополнительныеПараметры.ИсходныеДанныеВыбора;
			Возврат Ложь;
		КонецЕсли;
		
		АвтоПодборИзСправочника(
			ОписаниеПоля.ИдентификаторКритерия,
			Текст,
			ДанныеВыбора,
			СтандартнаяОбработка);
			
		Возврат Истина;
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

// Выполняет подбор значения по введенным данным для поля ОКВЭД.
//
// Параметры:
//  Текст - Строка - Строка текста, введенная в поле ввода.
//  ДанныеВыбора - СписокЗначений Из Произвольный - В данный параметр будет помещен результат подбора.
//  СтандартнаяОбработка - Булево - Признак выполнения стандартной обработки.
//
Процедура АвтоПодборОКВЭД(
		Текст,
		ДанныеВыбора,
		СтандартнаяОбработка) Экспорт

	СтандартнаяОбработка = Ложь;
	ДанныеПодбора = ПоискКонтрагентовСлужебныйВызовСервера.ПодборОКВЭД(
		Текст);
		
	ДанныеВыбора = Новый СписокЗначений;
	
	Для Каждого ЗначениеОКВЭД Из ДанныеПодбора Цикл
		
		ДанныеОКВЭД = ПоискКонтрагентовСлужебныйКлиентСервер.НовыйОписаниеЗначенияВыбораИзСправочника();
		ДанныеОКВЭД.Данные = ЗначениеОКВЭД.Код;
		ДанныеОКВЭД.Представление = ПоискКонтрагентовСлужебныйКлиентСервер.КраткоеПредставлениеОКВЭД(
			ЗначениеОКВЭД.Представление);
		
		ДанныеВыбора.Добавить(
			ДанныеОКВЭД,
			ЗначениеОКВЭД.Представление);
	КонецЦикла;
	
КонецПроцедуры

// Выполняет подбор значения по введенным данным для критериев, которые должны быть
// заполнены значением из справочника веб-сервиса.
//
// Параметры:
//  ИдентификаторКритерия - Строка - Идентификатор критерия, по которому нужно получить доступные для выбора значения.
//  Текст - Строка - Строка текста, введенная в поле ввода.
//  ДанныеВыбора - СписокЗначений  Из Произвольный - В данный параметр будет помещен результат подбора.
//  СтандартнаяОбработка - Булево - Признак выполнения стандартной обработки.
//
Процедура АвтоПодборИзСправочника(
		ИдентификаторКритерия,
		Текст,
		ДанныеВыбора,
		СтандартнаяОбработка) Экспорт
	
	ДанныеВыбора = Новый СписокЗначений;
	
	ДанныеПодбора = ПоискКонтрагентовСлужебныйВызовСервера.ПодборВСправочникеСервиса(
		Текст,
		ИдентификаторКритерия);
	
	Если ДанныеПодбора.Ошибка Тогда
		ДанныеВыбора.Добавить(НСтр("ru = 'Не удалось загрузить список'"));
		СтандартнаяОбработка = Ложь;
		Возврат;
	ИначеЕсли ДанныеПодбора.Данные.Количество() = 0 Тогда
		ДанныеВыбора.Добавить(НСтр("ru = 'Ничего не найдено'"));
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	
	ДанныеВыбора = ДанныеПодбора.Данные;
	Если ДанныеВыбора.Количество() > 0 Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

// Дополнительные параметры для реализации задержки при авто подборе из веб-справочника.
//
// Возвращаемое значение:
//  Структура - Параметры по умолчанию:
//    * ВремяЗадержки - Число - время задержки в миллисекундах. Значение по умолчанию задается в методе
//      ПоискКонтрагентовКлиент.ВремяЗадержкиАвтоПодбораИзСправочника.
//    * ПоследнееВремяПодбора - Число - дата и время последнего выполнения подбора (в миллисекундах), от которого
//      должна быть рассчитана задержка.
//    * ИсходныеДанныеВыбора - Произвольный, Неопределено - значение данных выбора, которые должны быть подставлены,
//      чтобы в промежутках между срабатываниями не возвращался пустой список доступных значений.
//
Функция НовыйДопПараметрыАвтоподбора() Экспорт
	
	Результат = Новый Структура;
	
	Результат.Вставить("ВремяЗадержки",         ВремяЗадержкиАвтоПодбораИзСправочника());
	Результат.Вставить("ПоследнееВремяПодбора", 0);
	Результат.Вставить("ИсходныеДанныеВыбора",  Неопределено);
	
	Возврат Результат;
	
КонецФункции

// Возвращает время задержки авто подбора по умолчанию.
//
// Возвращаемое значение:
//  Число - время задержки в миллисекундах.
//
Функция ВремяЗадержкиАвтоПодбораИзСправочника() Экспорт
	
	Возврат 300;
	
КонецФункции

#КонецОбласти

#Область ТипыДанных

// Проверяет, что в настоящий момент вводится или редактируется точное значение поля ОКВЭД.
// Считается, что вводится точное значение в поле подбора ОКВЭД, если одновременно выполняются следующие условия:
//   1. Значение параметра ЭтоПолеОКВЭД в описании поля или в соответствующей колонке равно Истина.
//   2. ВидСравнения отличается от "В списке" и "Содержит".
//
// Параметры:
//  ОписаниеПоля - Структура, ДанныеФормыЭлементКоллекции - описание критерия, либо текущие данные таблицы формы, для
//    которых необходимо выполнить проверку. см. ПоискКонтрагентовСлужебныйКлиентСервер.НовыйОписаниеБыстрогоОтбора.
//
// Возвращаемое значение:
//  Булево - Истина, если указанные условия выполняются; Ложь в противном случае.
//
Функция ЭтоТочноеЗначениеОКВЭД(ОписаниеПоля) Экспорт
	
	Возврат (ОписаниеПоля.ЭтоПолеОКВЭД
		И ОписаниеПоля.ВидСравнения <> ПоискКонтрагентовСлужебныйКлиентСервер.ВидСравненияВСписке()
		И ОписаниеПоля.ВидСравнения <> ПоискКонтрагентовСлужебныйКлиентСервер.ВидСравненияСодержит());
	
КонецФункции

// Проверяет, что в настоящий момент вводится или редактируется поле, значение которого необходимо выбирать из
// веб-справочника.
// Считается, что вводится точное значение из справочника, если одновременно выполняются следующие условия:
//   1. Значение параметра ВыборИзСправочника в описании поля или в соответствующей колонке равно Истина.
//   2. ВидСравнения отличается от "В списке" и "Содержит".
//
// Параметры:
//  ОписаниеПоля - Структура, ДанныеФормыЭлементКоллекции - описание критерия, либо текущие данные таблицы формы, для
//    которых необходимо выполнить проверку. см. ПоискКонтрагентовСлужебныйКлиентСервер.НовыйОписаниеБыстрогоОтбора.
//
// Возвращаемое значение:
//  Булево - Истина, если указанные условия выполняются; Ложь в противном случае.
//
Функция ЭтоТочноеЗначениеИзСправочника(ОписаниеПоля) Экспорт
	
	Возврат (ОписаниеПоля.ВыборИзСправочника
		И ОписаниеПоля.ВидСравнения <> ПоискКонтрагентовСлужебныйКлиентСервер.ВидСравненияВСписке()
		И ОписаниеПоля.ВидСравнения <> ПоискКонтрагентовСлужебныйКлиентСервер.ВидСравненияСодержит());
	
КонецФункции

#КонецОбласти

#Область ВыборЗначения

// Выполняет обработку события НачалоВыбора для полей ввода значений критериев.
//
// Параметры:
//  ПараметрыВыбора - Структура - параметры, необходимые для дальнейшей обработки. См.
//    ПоискКонтрагентовКлиент.НовыйПараметрыВыбора.
//  СтандартнаяОбработка - Булево - Признак выполнения стандартной обработки.
//
Процедура НачалоВыбора(ПараметрыВыбора, СтандартнаяОбработка) Экспорт
	
	ПравильныеПараметры = НовыйПараметрыВыбора();
	ПравильноеОписание  = ПоискКонтрагентовСлужебныйКлиентСервер.НовыйОписаниеБыстрогоОтбора();
	
	ЗаполнитьЗначенияСвойств(ПравильныеПараметры, ПараметрыВыбора);
	Если Не ПоискКонтрагентовСлужебныйКлиентСервер.ЭтоСтруктура(ПравильныеПараметры.ОписаниеПоля)
		И ТипЗнч(ПравильныеПараметры.ОписаниеПоля) <> Тип("ДанныеФормыЭлементКоллекции") Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ПравильноеОписание, ПравильныеПараметры.ОписаниеПоля);
	
	Если ПравильноеОписание.ВидСравнения = ПоискКонтрагентовСлужебныйКлиентСервер.ВидСравненияВСписке() Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ИсходныйСписок",        ПравильныеПараметры.ТекущееЗначениеСписок);
		ПараметрыФормы.Вставить("ТипЗначения",           ПравильноеОписание.ТипЗначения);
		ПараметрыФормы.Вставить("ЭтоПодборОКВЭД",        ПравильноеОписание.ЭтоПолеОКВЭД);
		ПараметрыФормы.Вставить("ЭтоВыборИзСправочника", ПравильноеОписание.ВыборИзСправочника);
		ПараметрыФормы.Вставить("ИдентификаторКритерия", ПравильноеОписание.ИдентификаторКритерия);
		
		ОткрытьФорму(
			"Отчет.ПоискКонтрагентов.Форма.ЗначениеВСписке",
			ПараметрыФормы,
			ПравильныеПараметры.УникальныйИдентификатор,
			,
			,
			,
			ПравильныеПараметры.НастройкаСпискаЗавершение);
			
	ИначеЕсли ЭтоТочноеЗначениеОКВЭД(ПравильноеОписание) Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ПараметрыВыбора = КлассификаторОКВЭДКлиент.НовыйПараметрыВыбора();
		ПараметрыВыбора.ОписаниеОповещенияОЗакрытии = ПравильныеПараметры.ВыборОКВЭДЗавершение;
		
		ПравильноеЗначение = ПоискКонтрагентовСлужебныйКлиентСервер.ПравильноеЗначениеИзСправочника(
			ПравильныеПараметры.ТекущееЗначениеОКВЭД);
		Если ПравильноеЗначение <> Неопределено Тогда
			ПараметрыВыбора.ТекущийКод = ПравильноеЗначение.Данные;
		КонецЕсли;
		
		КлассификаторОКВЭДКлиент.Выбрать(ПараметрыВыбора);
		
	КонецЕсли;
	
КонецПроцедуры

// Возвращает структуру параметров, которую необходимо использовать
// для метода ПоискКонтрагентовКлиент.НачалоВыбора.
//
// Возвращаемое значение:
//  Структура - Параметры по умолчанию:
//    * ОписаниеПоля - Структура, ДанныеФормыЭлементКоллекции, Неопределено - описание критерия, либо текущие данные
//      таблицы формы, для которой выполняется обработка события НачалоВыбора.
//      см. ПоискКонтрагентовСлужебныйКлиентСервер.НовыйОписаниеБыстрогоОтбора.
//    * НастройкаСпискаЗавершение - ОписаниеОповещения, Неопределено - описание процедуры, которая будет вызвана после
//      закрытия формы настройки списка.
//    * ВыборОКВЭДЗавершение - ОписаниеОповещения, Неопределено - описание процедуры, которая будет вызвана после
//      закрытия формы подбора ОКВЭД.
//    * ТекущееЗначениеСписок - СписокЗначений Из Произвольный - текущее значение критерия отбора, если оно заполнено
//      списком.
//    * ТекущееЗначениеОКВЭД - Строка - текущее значение критерия ОКВЭД.
//    * УникальныйИдентификатор - УникальныйИдентификатор, Неопределено - уникальный идентификатор формы-владельца.
//
Функция НовыйПараметрыВыбора() Экспорт
	
	Результат = Новый Структура;
	
	Результат.Вставить("ОписаниеПоля",              Неопределено);
	Результат.Вставить("НастройкаСпискаЗавершение", Неопределено);
	Результат.Вставить("ВыборОКВЭДЗавершение",      Неопределено);
	Результат.Вставить("ТекущееЗначениеСписок",     Новый СписокЗначений);
	Результат.Вставить("ТекущееЗначениеОКВЭД",      "");
	Результат.Вставить("УникальныйИдентификатор",   Неопределено);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ОКВЭД

// Преобразует значение, выбранное из классификатора ОКВЭД в значение, аналогичное описанию значения из
// веб-справочника.
//
// Параметры:
//  ВыбранноеЗначение - Структура - один элемент из результата выбора значения из классификатора ОКВЭД.
//    См.КлассификаторОКВЭД.ЗначениеПоКоду.
//
// Возвращаемое значение:
//  Структура - результат преобразования.
//    См. ПоискКонтрагентовСлужебныйКлиентСервер.НовыйОписаниеЗначенияВыбораИзСправочника.
//
Функция ВыбранныйОКВЭДВЗначениеСправочника(ВыбранноеЗначение) Экспорт
	
	ДанныеОКВЕД = ПоискКонтрагентовСлужебныйКлиентСервер.НовыйОписаниеЗначенияВыбораИзСправочника();
	ДанныеОКВЕД.Данные = ВыбранноеЗначение.Код;
	ДанныеОКВЕД.Представление = ПоискКонтрагентовСлужебныйКлиентСервер.КраткоеПредставлениеОКВЭД(
		ВыбранноеЗначение.Представление);
	
	Возврат ДанныеОКВЕД;
	
КонецФункции

// Формирует значение, аналогичное описанию значения из веб-справочника, если в поле с ОКВЭД указан код, которого нет в
//   текущей версии классификатора ОКВЭД.
//
// Параметры:
//  Код - Строка - указанный код.
//
// Возвращаемое значение:
//  Структура - результат преобразования.
//    См. ПоискКонтрагентовСлужебныйКлиентСервер.НовыйОписаниеЗначенияВыбораИзСправочника.
//
Функция ЗначениеОКВЭДНетВКлассификаторе(Код) Экспорт
	
	ДанныеОКВЭД = ПоискКонтрагентовСлужебныйКлиентСервер.НовыйОписаниеЗначенияВыбораИзСправочника();
	ДанныеОКВЭД.Данные = Код;
	ДанныеОКВЭД.Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = '%1 (нет в текущей версии классификатора)'"),
		Код);
			
	Возврат ДанныеОКВЭД;
	
КонецФункции

#КонецОбласти

#Область ПрочиеСлужебныеПроцедурыИФункции

// Выполняет сравнение нового значения списка с сохраненным.
// Если в сохраненном списке есть элементы, которые отсутствуют в новом,
// то они удаляются. Если тип нового значения отличается от СписокЗначений или новое
// значение пустое, то сохраненное значение заменяется на пустой список.
// Используется для анализа ситуации, когда элемент списка удален непосредственно в поле,
// а не через открытие отдельной формы списка.
//
// Параметры:
//  СохраненноеЗначение - СписокЗначений Из Произвольный - значение, которое нужно проверить на соответствие элементов.
//  НовоеЗначение - СписокЗначений Из Строка - эталонное значение, с которым нужно сравнить сохраненный список.
//
Процедура СравнитьПредставленияВСпискеИзСправочника(
		СохраненноеЗначение,
		Знач НовоеЗначение) Экспорт
	
	Если ТипЗнч(НовоеЗначение) <> Тип("СписокЗначений") Тогда
		СохраненноеЗначение = Новый СписокЗначений;
		Возврат;
	КонецЕсли;
	
	Если НовоеЗначение.Количество() = 0 Тогда
		СохраненноеЗначение = Новый СписокЗначений;
		Возврат;
	КонецЕсли;
	
	ЭлементыВПредставлении = Новый Соответствие;
	Для Каждого ЭлементСписка Из НовоеЗначение Цикл
		Если ПоискКонтрагентовСлужебныйКлиентСервер.ЭтоСтруктура(ЭлементСписка.Значение) Тогда
			ЭлементыВПредставлении.Вставить(ЭлементСписка.Представление, Истина);
		Иначе
			ЭлементыВПредставлении.Вставить(ЭлементСписка.Значение, Истина);
		КонецЕсли;
	КонецЦикла;
	
	НовоеЗначение = Новый СписокЗначений;
	Для Каждого ЭлементСписка Из СохраненноеЗначение Цикл
		
		ПравильноеОписание = ПоискКонтрагентовСлужебныйКлиентСервер.ПравильноеЗначениеИзСправочника(
			ЭлементСписка.Значение);
		Если ПравильноеОписание = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЭлементыВПредставлении[ПравильноеОписание.Представление] = Истина Тогда
			НовоеЗначение.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
		КонецЕсли;
		
	КонецЦикла;
	
	СохраненноеЗначение = НовоеЗначение;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти