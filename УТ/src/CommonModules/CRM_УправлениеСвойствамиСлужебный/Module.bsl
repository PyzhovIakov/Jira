////////////////////////////////////////////////////////////////////////////////
// Подсистема "Свойства"
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

// См. одноименную процедуру в общем модуле УправлениеСвойствами.
Процедура ПеренестиЗначенияИзРеквизитовФормыВОбъект(Форма, Объект = Неопределено, ПередЗаписью = Ложь) Экспорт
	
	Приемник = Новый Структура;
	Приемник.Вставить("ПараметрыСвойств", Неопределено);
	ЗаполнитьЗначенияСвойств(Приемник, Форма);
	
	Если НЕ Форма.Свойства_ИспользоватьСвойства
		ИЛИ НЕ Форма.Свойства_ИспользоватьДопРеквизиты
		ИЛИ (ТипЗнч(Приемник.ПараметрыСвойств) = Тип("Структура")
			И Приемник.ПараметрыСвойств.Свойство("ВыполненаОтложеннаяИнициализация")
			И Не Приемник.ПараметрыСвойств.ВыполненаОтложеннаяИнициализация) Тогда
		
		Возврат;
	КонецЕсли;
	
	Если Объект = Неопределено Тогда
		ОписаниеОбъекта = Форма.Объект;
	Иначе
		ОписаниеОбъекта = Объект;
	КонецЕсли;
	// +CRM
	Если ТипЗнч(ОписаниеОбъекта) = Тип("ЗадачаОбъект.ЗадачаИсполнителя")
		Или ТипЗнч(ОписаниеОбъекта) = Тип("БизнесПроцессОбъект.CRM_БизнесПроцесс") Тогда
		
		Если ТипЗнч(ОписаниеОбъекта) = Тип("ЗадачаОбъект.ЗадачаИсполнителя") Тогда
			БизнесПроцесс = ОписаниеОбъекта.БизнесПроцесс;
		ИначеЕсли ЗначениеЗаполнено(ОписаниеОбъекта.Ссылка) Тогда
			БизнесПроцесс = ОписаниеОбъекта.Ссылка;
		Иначе
			СсылкаНаОбъект = ОписаниеОбъекта.ПолучитьСсылкуНового();
			Если Не ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
				СсылкаНаОбъект = БизнесПроцессы.CRM_БизнесПроцесс.ПолучитьСсылку();
				ОписаниеОбъекта.УстановитьСсылкуНового(СсылкаНаОбъект);
			КонецЕсли;
			БизнесПроцесс = СсылкаНаОбъект;
		КонецЕсли;
		
		НаборДополнительныхРеквизитов = РегистрыСведений.bpmДополнительныеРеквизиты.СоздатьНаборЗаписей();
		НаборДополнительныхРеквизитов.Отбор.БизнесПроцесс.Установить(БизнесПроцесс);
		НаборДополнительныхРеквизитов.Прочитать();
		
		СтарыеЗначения = НаборДополнительныхРеквизитов.Выгрузить();
		НаборДополнительныхРеквизитов.Очистить();
		
		Для Каждого Описание Из Форма.Свойства_ОписаниеДополнительныхРеквизитов Цикл
			
			Значение = Форма[Описание.ИмяРеквизитаЗначение];
			
			Если ЗначениеЗаполнено(Значение) Тогда
				Если ТипЗнч(Значение) = Тип("Булево") И Значение = Ложь Тогда
					Продолжить;
				КонецЕсли;
				
				Если Описание.Удалено Тогда
					ЗаполнитьЗначенияСвойств(
						НаборДополнительныхРеквизитов.Добавить(),
						СтарыеЗначения.Найти(Описание.Свойство, "Свойство"));
					Продолжить;
				КонецЕсли;
				
				НоваяСтрока = НаборДополнительныхРеквизитов.Добавить();
				НоваяСтрока.БизнесПроцесс	= БизнесПроцесс;
				НоваяСтрока.Свойство		= Описание.Свойство;
				НоваяСтрока.Значение		= Значение;
				
				// Поддержка строк неограниченной длины.
				Свойство = Описание.Свойство.ПолучитьОбъект();
				
				ИспользоватьНеограниченнуюСтроку = УправлениеСвойствамиСлужебный.ИспользоватьНеограниченнуюСтроку(
					Свойство.ТипЗначения, Свойство.МногострочноеПолеВвода);
				
				Если ИспользоватьНеограниченнуюСтроку Тогда
					НоваяСтрока.ТекстоваяСтрока = Значение;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		НаборДополнительныхРеквизитов.Записать();
	Иначе
	// -CRM
	СтарыеЗначения = ОписаниеОбъекта.ДополнительныеРеквизиты.Выгрузить();
	ДополнительныеРеквизиты = УправлениеСвойствами.СвойстваПоВидуДополнительныхРеквизитов(
		ОписаниеОбъекта.ДополнительныеРеквизиты.Выгрузить(),
		Перечисления.ВидыСвойств.ДополнительныеРеквизиты);
	Для каждого ДополнительныйРеквизит Из ДополнительныеРеквизиты Цикл
		Свойства = ОписаниеОбъекта.ДополнительныеРеквизиты.НайтиСтроки(
			Новый Структура("Свойство", ДополнительныйРеквизит));
		Для каждого Свойство Из Свойства Цикл
			ОписаниеОбъекта.ДополнительныеРеквизиты.Удалить(Свойство);
		КонецЦикла;
	КонецЦикла;
	
	// +CRM
	НаборыСвойствОбъекта = УправлениеСвойствамиСлужебный.ПолучитьНаборыСвойствОбъекта(ОписаниеОбъекта);
	// -CRM
		
	Для каждого Описание Из Форма.Свойства_ОписаниеДополнительныхРеквизитов Цикл
		
		// +CRM
		Если НаборыСвойствОбъекта.Найти(Описание.Свойство.НаборСвойств) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		// -CRM

		Значение = Форма[Описание.ИмяРеквизитаЗначение];
		Если Значение = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если Описание.ТипЗначения.Типы().Количество() = 1
		   И (НЕ ЗначениеЗаполнено(Значение) Или Значение = Ложь) Тогда
			
			Продолжить;
		КонецЕсли;
		
		Если Описание.Удалено Тогда
			Если ЗначениеЗаполнено(Значение) И Не (ПередЗаписью И Форма.Свойства_СкрытьУдаленные) Тогда
				НайденнаяСтрока = СтарыеЗначения.Найти(Описание.Свойство, "Свойство");
				Если НайденнаяСтрока <> Неопределено Тогда
					ЗаполнитьЗначенияСвойств(ОписаниеОбъекта.ДополнительныеРеквизиты.Добавить(), НайденнаяСтрока);
				КонецЕсли;
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		
		// Поддержка строк гиперссылок.
		ИспользоватьСтрокуВВидеСсылки = ИспользоватьСтрокуВВидеСсылки(
			Описание.ТипЗначения, Описание.ВыводитьВВидеГиперссылки, Описание.МногострочноеПолеВвода);
		
		НоваяСтрока = ОписаниеОбъекта.ДополнительныеРеквизиты.Добавить();
		НоваяСтрока.Свойство = Описание.Свойство;
		Если ИспользоватьСтрокуВВидеСсылки Тогда
			// +CRM
			//АдресИПредставление = АдресИПредставление(Значение);
			АдресИПредставление = УправлениеСвойствамиСлужебный.АдресИПредставление(Значение);
			// -CRM
			НоваяСтрока.Значение = АдресИПредставление.Представление;
		Иначе
			НоваяСтрока.Значение = Значение;
		КонецЕсли;
		
		// Поддержка строк неограниченной длины.
		// +CRM
		//ИспользоватьНеограниченнуюСтроку = ИспользоватьНеограниченнуюСтроку(
		ИспользоватьНеограниченнуюСтроку = УправлениеСвойствамиСлужебный.ИспользоватьНеограниченнуюСтроку(
		// -CRM
			Описание.ТипЗначения, Описание.МногострочноеПолеВвода);
		
		Если ИспользоватьНеограниченнуюСтроку Или ИспользоватьСтрокуВВидеСсылки Тогда
			НоваяСтрока.ТекстоваяСтрока = Значение;
		КонецЕсли;
	КонецЦикла;
	// +CRM
	КонецЕсли;
	// -CRM
	
	Если ПередЗаписью Тогда
		Форма.Свойства_СкрытьУдаленные = Ложь;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры и функции.

Процедура СоздатьПредопределенныеНаборыСвойств() Экспорт
	
	ПредопределенныеНаборыСвойств = УправлениеСвойствамиПовтИсп.ПредопределенныеНаборыСвойств();
	НаименованияНаборовСвойств    = УправлениеСвойствамиПовтИсп.НаименованияНаборовСвойств();
	
	ВременнаяТаблица = Новый ТаблицаЗначений;
	ВременнаяТаблица.Колонки.Добавить("Имя",          Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(150)));
	ВременнаяТаблица.Колонки.Добавить("Используется", Новый ОписаниеТипов("Булево"));
	ВременнаяТаблица.Колонки.Добавить("ЭтоДочерний",  Новый ОписаниеТипов("Булево"));
	ВременнаяТаблица.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(100)));
	ВременнаяТаблица.Колонки.Добавить("ЭтоГруппа",    Новый ОписаниеТипов("Булево"));
	ВременнаяТаблица.Колонки.Добавить("Ссылка",
		       Новый ОписаниеТипов("СправочникСсылка.НаборыДополнительныхРеквизитовИСведений"));
	Для Каждого ПредопределенныйНабор Из ПредопределенныеНаборыСвойств Цикл
		Если ТипЗнч(ПредопределенныйНабор.Ключ) = Тип("Строка") Тогда
			Продолжить;
		КонецЕсли;
		
		Строка = ВременнаяТаблица.Добавить();
		ЗаполнитьЗначенияСвойств(Строка, ПредопределенныйНабор.Значение);
		Если ЗначениеЗаполнено(ПредопределенныйНабор.Значение.Родитель) Тогда
			// Если изменился дочерний набор - все равно выбираем для обработки набор верхнего уровня.
			Строка.Ссылка      = ПредопределенныйНабор.Значение.Родитель;
			Строка.ЭтоДочерний = Истина;
		КонецЕсли;
		
		Если ПредопределенныйНабор.Значение.Используется = Неопределено Тогда
			Строка.Используется = Истина;
		КонецЕсли;
	КонецЦикла;
	
	НесколькоЯзыков = Ложь;
	Для Каждого Язык Из Метаданные.Языки Цикл
		Если Язык.КодЯзыка <> ТекущийЯзык().КодЯзыка Тогда
			НесколькоЯзыков = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОписаниеНаборов", ВременнаяТаблица);
	Запрос.УстановитьПараметр("НесколькоЯзыков", НесколькоЯзыков);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОписаниеНаборов.Ссылка КАК Ссылка,
	|	ОписаниеНаборов.Имя КАК Имя,
	|	ОписаниеНаборов.Наименование КАК Наименование,
	|	ОписаниеНаборов.ЭтоГруппа КАК ЭтоГруппа,
	|	ОписаниеНаборов.ЭтоДочерний КАК ЭтоДочерний,
	|	ОписаниеНаборов.Используется КАК Используется
	|ПОМЕСТИТЬ ОписаниеНаборов
	|ИЗ
	|	&ОписаниеНаборов КАК ОписаниеНаборов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОписаниеНаборов.Ссылка КАК Ссылка
	|ИЗ
	|	ОписаниеНаборов КАК ОписаниеНаборов
	|ГДЕ
	|	НЕ ИСТИНА В
	|				(ВЫБРАТЬ ПЕРВЫЕ 1
	|					ИСТИНА
	|				ИЗ
	|					Справочник.НаборыДополнительныхРеквизитовИСведений КАК Наборы
	|				ГДЕ
	|					ОписаниеНаборов.Имя = Наборы.ИмяПредопределенногоНабора
	|					И ОписаниеНаборов.Используется = Наборы.Используется
	|					И ОписаниеНаборов.Наименование = Наборы.Наименование
	|					И НЕ Наборы.ПометкаУдаления
	|					И &НесколькоЯзыков = ЛОЖЬ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОписаниеНаборов.Ссылка
	|ИЗ
	|	ОписаниеНаборов КАК ОписаниеНаборов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ДополнительныеРеквизиты
	|		ПО ОписаниеНаборов.Ссылка = ДополнительныеРеквизиты.Ссылка
	|ГДЕ
	|	ДополнительныеРеквизиты.ИмяПредопределенногоНабора <> ОписаниеНаборов.Имя
	|	И НЕ ОписаниеНаборов.ЭтоДочерний
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОписаниеНаборов.Ссылка
	|ИЗ
	|	ОписаниеНаборов КАК ОписаниеНаборов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|		ПО ОписаниеНаборов.Ссылка = ДополнительныеСведения.Ссылка
	|ГДЕ
	|	ДополнительныеСведения.ИмяПредопределенногоНабора <> ОписаниеНаборов.Имя
	|	И НЕ ОписаниеНаборов.ЭтоДочерний";
	ОбрабатываемыеНаборы = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаТаблицы Из ОбрабатываемыеНаборы Цикл
		СвойстваНабора = ПредопределенныеНаборыСвойств.Получить(СтрокаТаблицы.Ссылка); // см. Справочники.НаборыДополнительныхРеквизитовИСведений.СвойстваНабора
		Объект         = СвойстваНабора.Ссылка.ПолучитьОбъект();
		СоздатьНаборСвойств(Объект, СвойстваНабора);
		
		Для Каждого ДочернийНабор Из СвойстваНабора.ДочерниеНаборы Цикл
			СвойстваНабора = ДочернийНабор.Значение; // см. Справочники.НаборыДополнительныхРеквизитовИСведений.СвойстваНабора
			ДочернийОбъект = СвойстваНабора.Ссылка.ПолучитьОбъект();
			СоздатьНаборСвойств(ДочернийОбъект, СвойстваНабора, НаименованияНаборовСвойств, Объект.Ссылка);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

// Параметры:
//  СвойстваНабора см. Справочники.НаборыДополнительныхРеквизитовИСведений.СвойстваНабора
//
Процедура СоздатьНаборСвойств(Объект, СвойстваНабора, НаименованияНаборовСвойств = Неопределено,
	 Родитель = Неопределено)
	
	Записать = Ложь;
	Если Объект = Неопределено Тогда
		Если СвойстваНабора.ЭтоГруппа
			Или (СвойстваНабора.ДочерниеНаборы <> Неопределено
				И СвойстваНабора.ДочерниеНаборы.Количество() <> 0) Тогда
			Объект = Справочники.НаборыДополнительныхРеквизитовИСведений.СоздатьГруппу();
		Иначе
			Объект = Справочники.НаборыДополнительныхРеквизитовИСведений.СоздатьЭлемент();
		КонецЕсли;
		Если Родитель <> Неопределено Тогда
			Объект.Родитель = Родитель;
		КонецЕсли;
		Объект.УстановитьСсылкуНового(СвойстваНабора.Ссылка);
		Объект.ИмяПредопределенногоНабора = СвойстваНабора.Имя;
		Записать = Истина;
	КонецЕсли;
	
	Если СвойстваНабора.Используется <> Неопределено Тогда
		Если Объект.Используется <> СвойстваНабора.Используется Тогда
			Объект.Используется = СвойстваНабора.Используется;
			Записать = Истина;
		КонецЕсли;
	Иначе
		Если Объект.Используется <> Истина Тогда
			Объект.Используется = Истина;
			Записать = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.Наименование <> СвойстваНабора.Наименование Тогда
		Объект.Наименование = СвойстваНабора.Наименование;
		Записать = Истина;
	КонецЕсли;
	
	Если Объект.ИмяПредопределенногоНабора <> СвойстваНабора.Имя Тогда
		Объект.ИмяПредопределенногоНабора = СвойстваНабора.Имя;
		Записать = Истина;
	КонецЕсли;
	
	Если Родитель = Неопределено Тогда
		Для Каждого СтрокаТаблицы Из Объект.ДополнительныеРеквизиты Цикл
			Если СтрокаТаблицы.ИмяПредопределенногоНабора <> СвойстваНабора.Имя Тогда
				СтрокаТаблицы.ИмяПредопределенногоНабора = СвойстваНабора.Имя;
				Записать = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Родитель = Неопределено Тогда
		Для Каждого СтрокаТаблицы Из Объект.ДополнительныеСведения Цикл
			Если СтрокаТаблицы.ИмяПредопределенногоНабора <> СвойстваНабора.Имя Тогда
				СтрокаТаблицы.ИмяПредопределенногоНабора = СвойстваНабора.Имя;
				Записать = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Объект.ПометкаУдаления Тогда
		Объект.ПометкаУдаления = Ложь;
		Записать = Истина;
	КонецЕсли;
	
	Если НаименованияНаборовСвойств <> Неопределено Тогда
		
		Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Мультиязычность") Тогда
			МодульМультиязычностьСервер = ОбщегоНазначения.ОбщийМодуль("МультиязычностьСервер");
			
			Для Каждого Язык Из Метаданные.Языки Цикл
				Если Язык.КодЯзыка = ТекущийЯзык().КодЯзыка Тогда
					Продолжить;
				КонецЕсли;
				
				ЛокализованныеНаименования = НаименованияНаборовСвойств[Язык.КодЯзыка];
				ЛокализованноеНаименование = ЛокализованныеНаименования[СвойстваНабора.Имя];
				СуффиксЯзыка = МодульМультиязычностьСервер.СуффиксЯзыка(Язык.КодЯзыка);
				Если ЗначениеЗаполнено(СуффиксЯзыка) 
					И ЗначениеЗаполнено(ЛокализованноеНаименование)
					И ПустаяСтрока(Объект["Наименование" + СуффиксЯзыка])
					И ЛокализованноеНаименование <> Объект["Наименование" + СуффиксЯзыка] Тогда
						Объект["Наименование" + СуффиксЯзыка] = ЛокализованноеНаименование;
						Записать = Истина;
				КонецЕсли;
				
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Записать Тогда
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Объект, Ложь);
	КонецЕсли;
	
КонецПроцедуры

Функция ИспользоватьСтрокуВВидеСсылки(ТипЗначенияСвойства, ВыводитьВВидеГиперссылки, МногострочноеПолеВвода)
	СписокТипов = ТипЗначенияСвойства.Типы();
	
	// +CRM
	//Если Не ИспользоватьНеограниченнуюСтроку(ТипЗначенияСвойства, МногострочноеПолеВвода)
	Если Не УправлениеСвойствамиСлужебный.ИспользоватьНеограниченнуюСтроку(ТипЗначенияСвойства, МногострочноеПолеВвода)
	// -CRM
		И СписокТипов.Количество() = 1
		И СписокТипов[0] = Тип("Строка")
		И ВыводитьВВидеГиперссылки Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

#КонецОбласти
