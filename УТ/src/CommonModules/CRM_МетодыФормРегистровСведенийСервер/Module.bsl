
////////////////////////////////////////////////////////////////////////////////
// CRM методы форм регистров сведений сервер
//  
// В данный модуль вынесены методы подсистемы CRM, вызываемые из модулей типовых объектов. 
// Выносить можно только те методы, которые не вызывают стандартные методы типового модуля или обработчики форм. 
// Т.е. вызывают только те методы, что тоже вынесены из типового или не содержат таких вызовов.
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Для каждого объекта необходимо задать свою #Область с именем объекта и модуля, как он называется в метаданных.

#Область РегистрСведений_ПользовательскиеМакетыПечати_МакетыПечатныхФорм

// Процедура добавляет записи в регистр сведений "НазначениеДополнительныхОбработок".
//
// Параметры:
//	ВладелецМакета	- Строка	- Владелец макета.
//
Процедура ДобавитьЗаписьНазначениеДополнительныхОбработок(ВладелецМакета) Экспорт
	ОбъектНазначения = Справочники.ИдентификаторыОбъектовМетаданных.НайтиПоРеквизиту("ПолноеИмя", ВладелецМакета);
	
	МенеджерЗаписи = РегистрыСведений.НазначениеДополнительныхОбработок.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ОбъектНазначения				= ОбъектНазначения;
	МенеджерЗаписи.ТипФормы						= "ФормаОбъекта";
	МенеджерЗаписи.Прочитать();
	МенеджерЗаписи.ОбъектНазначения				= ОбъектНазначения;
	МенеджерЗаписи.ТипФормы						= "ФормаОбъекта";
	МенеджерЗаписи.Записать(Истина);
	
	МенеджерЗаписи = РегистрыСведений.НазначениеДополнительныхОбработок.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ОбъектНазначения				= ОбъектНазначения;
	МенеджерЗаписи.ТипФормы						= "ФормаСписка";
	МенеджерЗаписи.Прочитать();
	МенеджерЗаписи.ОбъектНазначения				= ОбъектНазначения;
	МенеджерЗаписи.ТипФормы						= "ФормаСписка";
	МенеджерЗаписи.Записать(Истина);
	
КонецПроцедуры // ДобавитьЗаписьНазначениеДополнительныхОбработок()

// Функция сохраняет пользовательский макет печати в информационной базе.
//
// Параметры:
//  ПараметрыМакета	 - Структура	 - Параметры макета.
// 
// Возвращаемое значение:
//   - Строка
//
Функция ЗаписатьМакет(ПараметрыМакета) Экспорт
	
	ИдентификаторМакета = "";
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Печать") Тогда
		
		СсылкаМакета = Неопределено;
		МодульУправлениеПечатью = ОбщегоНазначения.ОбщийМодуль("CRM_УправлениеПечатью");
		
		ОписаниеМакета = МодульУправлениеПечатью.ОписаниеМакета();
		ОписаниеМакета.ИмяОбъектаМетаданныхМакета = ИдентификаторМакета;
		ОписаниеМакета.АдресМакетаВоВременномХранилище = ПараметрыМакета.АдресМакетаВоВременномХранилище;
		ОписаниеМакета.КодЯзыка = ТекущийЯзык().КодЯзыка;
		ОписаниеМакета.Владелец = ПараметрыМакета.Владелец;
		ОписаниеМакета.Наименование = ПараметрыМакета.Представление;
		ОписаниеМакета.Ссылка = СсылкаМакета;
		ОписаниеМакета.ТипМакета = ПараметрыМакета.ТипМакета;
		ОписаниеМакета.ИсточникиДанных = ПараметрыМакета.ИсточникиДанных;
		ОписаниеМакета.Используется = ПараметрыМакета.Используется;
		ОписаниеМакета.CRM_ИмяМакета = ПараметрыМакета.CRM_ИмяМакета;
		ОписаниеМакета.CRM_ПоставляемыйМакет = ПараметрыМакета.CRM_ПоставляемыйМакет;
		
		ИдентификаторМакета = МодульУправлениеПечатью.ЗаписатьМакет(ОписаниеМакета);
		
	КонецЕсли;
	
	Возврат ИдентификаторМакета;
	
КонецФункции // ЗаписатьМакет()

#КонецОбласти

#КонецОбласти

