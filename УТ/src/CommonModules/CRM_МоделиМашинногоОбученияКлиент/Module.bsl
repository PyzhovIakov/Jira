#Если Не ВебКлиент Тогда

#Область СлужебныйПрограммныйИнтерфейс

Процедура ПроверкаPython(Форма, СтрокаКоманды) Экспорт
	
	ВременныйКаталог = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(КаталогВременныхФайлов());
	
	ИмяСкрипта = "version_check.py";
	ПолноеИмяСкрипта = ВременныйКаталог + ИмяСкрипта;
	
	ИмяРезультата = "check_result.txt";
	ПолноеИмяРезультата = ВременныйКаталог + ИмяРезультата;
	
	ТекстСкрипта =
	"import sys
	|
	|f = open(""check_result.txt"", ""w"", encoding=""utf-8"")
	|f.write(sys.version.split()[0])
	|f.close()";
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.ДобавитьСтроку(ТекстСкрипта);
	ТекстовыйДокумент.Записать(ПолноеИмяСкрипта);
	
	КодВозврата = Неопределено;
	ЗапуститьПриложение(СтрокаКоманды + " " + ИмяСкрипта, ВременныйКаталог, Истина, КодВозврата);
	
	Если КодВозврата = 0 Тогда
		
		ТекстовыйДокумент = Новый ТекстовыйДокумент;
		ТекстовыйДокумент.Прочитать(ПолноеИмяРезультата);
		
		ВерсияPython = ТекстовыйДокумент.ПолучитьТекст();
		
		ВерсияPythonМассив = СтрРазделить(ВерсияPython, ".");
		Если ВерсияPythonМассив[0] = "2" Тогда
			CRM_МоделиМашинногоОбученияКлиентСервер.ОбновитьСостояниеПроверки("УстановкаPythonНеудачно", Форма);
		Иначе
			CRM_МоделиМашинногоОбученияКлиентСервер.ОбновитьСостояниеПроверки("УстановкаPythonУспешно", Форма);
			Форма.УстановкаPythonПояснение = Форма.УстановкаPythonПояснение + ВерсияPython;
		КонецЕсли;
		
	Иначе
		CRM_МоделиМашинногоОбученияКлиентСервер.ОбновитьСостояниеПроверки("УстановкаPythonНеНайден", Форма);
	КонецЕсли;
	
	УдалитьФайлы(ПолноеИмяСкрипта);
	УдалитьФайлы(ПолноеИмяРезультата);
	
КонецПроцедуры

Функция ПроверкаПутиКМоделям(Форма, ПутьКМоделям) Экспорт
	
	Если Не ЗначениеЗаполнено(ПутьКМоделям) Тогда
		CRM_МоделиМашинногоОбученияКлиентСервер.ОбновитьСостояниеПроверки("КаталогНеУказан", Форма);
		Возврат Ложь;
	КонецЕсли;
	
	Файл = Новый Файл(ПутьКМоделям);
	Если Не Файл.Существует() Тогда
		CRM_МоделиМашинногоОбученияКлиентСервер.ОбновитьСостояниеПроверки("КаталогНеСуществует", Форма);
		Возврат Ложь;
	КонецЕсли;
	
	Если Не Файл.ЭтоКаталог() Тогда
		CRM_МоделиМашинногоОбученияКлиентСервер.ОбновитьСостояниеПроверки("УказанНеКаталог", Форма);
		Возврат Ложь;
	КонецЕсли;
	
	CRM_МоделиМашинногоОбученияКлиентСервер.ОбновитьСостояниеПроверки("КаталогУказанВерно", Форма);
	Возврат Истина;
	
КонецФункции

Функция ПроверкаНастроекДоступа(Форма, Сервер, Порт) Экспорт
	
	Если Не ЗначениеЗаполнено(Сервер)
		Или Не ЗначениеЗаполнено(Порт) Тогда
		CRM_МоделиМашинногоОбученияКлиентСервер.ОбновитьСостояниеПроверки("НастройкиДоступаНеудачно", Форма);
		Возврат Ложь;
	КонецЕсли;
	
	CRM_МоделиМашинногоОбученияКлиентСервер.ОбновитьСостояниеПроверки("НастройкиДоступаУспешно", Форма);
	Возврат Истина;
	
КонецФункции

Процедура ПроверкаФайловМоделей(Форма, ПутьКМоделям) Экспорт
	
	Если Не ПроверкаПутиКМоделям(Форма, ПутьКМоделям) Тогда
		Возврат;
	КонецЕсли;
	
	Успех = Истина;
	
	ИменаФайлов = CRM_МоделиМашинногоОбученияКлиентСервер.ИменаФайловМоделей();
	
	КаталогФайлов = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ПутьКМоделям);
	Для Каждого ИмяФайла Из ИменаФайлов Цикл
		Файл = Новый Файл(КаталогФайлов + ИмяФайла);
		Если Не Файл.Существует() Тогда
			Успех = Ложь;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Успех Тогда
		CRM_МоделиМашинногоОбученияКлиентСервер.ОбновитьСостояниеПроверки("УстановкаМоделейУспешно", Форма);
	Иначе
		CRM_МоделиМашинногоОбученияКлиентСервер.ОбновитьСостояниеПроверки("УстановкаМоделейНеудачно", Форма);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьПодключение(Форма, Сервер, Порт) Экспорт
	
	Если Не ПроверкаНастроекДоступа(Форма, Сервер, Порт) Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиМоделей = CRM_МоделиМашинногоОбученияКлиентСервер.НастройкиМоделей();
	ЗаполнитьЗначенияСвойств(НастройкиМоделей, Форма);
	
	РезультатПроверки = CRM_МоделиМашинногоОбучения.ПроверитьДоступность(НастройкиМоделей);
	Если РезультатПроверки.Ошибка Тогда
		CRM_МоделиМашинногоОбученияКлиентСервер.ОбновитьСостояниеПроверки("ПодключениеКВебСерверуНеудачно", Форма);
		Форма.ПодключениеКВебСерверуПояснение = Форма.ПодключениеКВебСерверуПояснение + РезультатПроверки.ТекстОшибки;
	Иначе
		CRM_МоделиМашинногоОбученияКлиентСервер.ОбновитьСостояниеПроверки("ПодключениеКВебСерверуУспешно", Форма);
		Форма.ПодключениеКВебСерверуПояснение = Форма.ПодключениеКВебСерверуПояснение + РезультатПроверки.Значение;
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьФайлыМодели(Форма, ПутьКМоделям) Экспорт
	
	Если Не ПроверкаПутиКМоделям(Форма, ПутьКМоделям) Тогда
		Возврат;
	КонецЕсли;
	
	АдресВХранилище = CRM_МоделиМашинногоОбучения.ДанныеДистрибутива();
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВХранилище);
	УдалитьИзВременногоХранилища(АдресВХранилище);
	#Если НЕ МобильныйКлиент Тогда
	ZipФайл = Новый ЧтениеZipФайла(ДвоичныеДанные.ОткрытьПотокДляЧтения());
	ZipФайл.ИзвлечьВсе(ПутьКМоделям, РежимВосстановленияПутейФайловZIP.Восстанавливать);
	#КонецЕсли
	Попытка
		СтрокаКоманды = "libs_setup.cmd";
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработчикОповещенияБезДействия", CRM_ОбщегоНазначенияКлиент);	
		НачатьЗапускПриложения(ОписаниеОповещения, СтрокаКоманды, ПутьКМоделям, Ложь);
	Исключение
		Возврат;
	КонецПопытки;
	
	ПроверкаФайловМоделей(Форма, ПутьКМоделям);
	
КонецПроцедуры

Функция ВыгрузитьДанныеЗадачи(ПараметрыВыгрузки) Экспорт
	
	ИмяЗадачи = ПараметрыВыгрузки.ИмяЗадачи;
	ПутьКМоделям = ПараметрыВыгрузки.ПутьКМоделям;
	ДатаНачала = ПараметрыВыгрузки.ДатаНачала;
	ДатаОкончания = ПараметрыВыгрузки.ДатаОкончания;
	
	ПроверитьКаталогДанных(ПутьКМоделям);
	
	ПараметрыЗадач = CRM_МоделиМашинногоОбученияКлиентСервер.ПараметрыЗадач();
	ИмяФайла = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ПутьКМоделям) +
		ПараметрыЗадач[ИмяЗадачи].ПутьКДанным;
	
	Если ИмяЗадачи = "ПоискРешений" Тогда
		АдресВХранилище = CRM_МоделиМашинногоОбучения.ДанныеПоискаРешений();
	ИначеЕсли ИмяЗадачи = "КлассификацияОбращений" Тогда
		АдресВХранилище = CRM_МоделиМашинногоОбучения.ДанныеКлассификацииОбращений(ДатаНачала, ДатаОкончания);
	ИначеЕсли ИмяЗадачи = "ИнформированиеОКонверсии" Тогда
		АдресВХранилище = CRM_МоделиМашинногоОбучения.ДанныеИнформированияОКонверсии(ДатаНачала, ДатаОкончания);
	КонецЕсли;
	
	ПолучитьФайл(АдресВХранилище, ИмяФайла, Ложь);
	УдалитьИзВременногоХранилища(АдресВХранилище);
	
	ДатаВыгрузки = ОбщегоНазначенияКлиент.ДатаСеанса();
	
	РезультатВыгрузки = Новый Структура;
	РезультатВыгрузки.Вставить(ИмяЗадачи + "ДатаНачала", ДатаНачала);
	РезультатВыгрузки.Вставить(ИмяЗадачи + "ДатаОкончания", ДатаОкончания);
	РезультатВыгрузки.Вставить(ИмяЗадачи + "ДатаВыгрузки", ДатаВыгрузки);
	
	CRM_МоделиМашинногоОбучения.ОбновитьСведенияМоделей(РезультатВыгрузки);
	
	Возврат РезультатВыгрузки;
	
КонецФункции

Процедура ОткрытьНастройкиМоделей() Экспорт
	
	ИспользованиеВключено = CRM_МоделиМашинногоОбучения.ИспользованиеВключено();
	
	ДополнительныеПараметры = Новый Структура("ИспользованиеВключено", ИспользованиеВключено);
	ОповещениеПродолжения = Новый ОписаниеОповещения("ОткрытьНастройкиМоделейПродолжить", ЭтотОбъект,
		 ДополнительныеПараметры);
	
	Если ИспользованиеВключено Тогда
		ОткрытьНастройкиМоделейПродолжить(Новый Структура("Значение", КодВозвратаДиалога.Да), ДополнительныеПараметры);
	Иначе
		
		ТекстВопроса = НСтр("ru = 'Использование моделей машинного обучения выключено. Включить?'");
		
		ВариантыОтвета = РежимДиалогаВопрос.ДаНет;
		
		ПараметрыВопроса = СтандартныеПодсистемыКлиент.ПараметрыВопросаПользователю();
		ПараметрыВопроса.КнопкаПоУмолчанию = КодВозвратаДиалога.Да;
		ПараметрыВопроса.Заголовок = НСтр("ru = 'Настройка моделей'");
		ПараметрыВопроса.ПредлагатьБольшеНеЗадаватьЭтотВопрос = Ложь;
		ПараметрыВопроса.Картинка = БиблиотекаКартинок.ДиалогВопрос;
		
		СтандартныеПодсистемыКлиент.ПоказатьВопросПользователю(ОповещениеПродолжения, ТекстВопроса,
			 ВариантыОтвета,
			 ПараметрыВопроса);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьНастройкиМоделейПродолжить(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Или Результат.Значение = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ДополнительныеПараметры.ИспользованиеВключено Тогда
		CRM_МоделиМашинногоОбучения.ВключитьИспользование();
	КонецЕсли;
	
	НастройкиМоделей = CRM_МоделиМашинногоОбучения.ПолучитьНастройкиМоделей();
	
	ВариантыОтвета = Новый СписокЗначений;
	ВариантыОтвета.Добавить("ОткрытьПомощник", НСтр("ru = 'Запустить помощник'"));
	ВариантыОтвета.Добавить("ОткрытьНастройки", НСтр("ru = 'Открыть настройки'"));
	ВариантыОтвета.Добавить("Отмена", НСтр("ru = 'Отмена'"));
	
	ОповещениеЗавершения = Новый ОписаниеОповещения("ОткрытьНастройкиМоделейЗавершение", ЭтотОбъект);
	
	Если CRM_МоделиМашинногоОбученияКлиентСервер.НастройкиМоделейЗаполнены(НастройкиМоделей) Тогда
		
		ВыполнитьОбработкуОповещения(ОповещениеЗавершения, ВариантыОтвета[1]);
		
	Иначе
		
		ТекстВопроса = НСтр("ru = 'Рекомендуется выполнить установку моделей с помощью помощника.'");
		ТекстВопроса = ТекстВопроса + " " 
			+ НСтр("ru = 'Запуск помощника следует производить на том компьютере,
				| где предполагается работа сервера моделей машинного обучения.'");
		ТекстВопроса = ТекстВопроса + " " + НСтр("ru = 'Для запуска помощника нажмите ""Запустить помощник"".'");
		ТекстВопроса = ТекстВопроса + Символы.ПС + Символы.ПС;
		ТекстВопроса = ТекстВопроса 
			+ НСтр("ru = 'Если установка моделей уже производилась ранее и нужно только заполнить настройки,
				| нажмите ""Открыть настройки"".'");
		
		ПараметрыВопроса = СтандартныеПодсистемыКлиент.ПараметрыВопросаПользователю();
		ПараметрыВопроса.КнопкаПоУмолчанию = "ОткрытьПомощник";
		ПараметрыВопроса.Заголовок = НСтр("ru = 'Настройки моделей не указаны'");
		ПараметрыВопроса.ПредлагатьБольшеНеЗадаватьЭтотВопрос = Ложь;
		ПараметрыВопроса.Картинка = БиблиотекаКартинок.ДиалогВопрос;
		
		СтандартныеПодсистемыКлиент.ПоказатьВопросПользователю(ОповещениеЗавершения, ТекстВопроса,
			 ВариантыОтвета,
			 ПараметрыВопроса);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьНастройкиМоделейЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Или Результат.Значение = "Отмена" Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Значение = "ОткрытьПомощник" Тогда
		ОткрытьФорму("Обработка.CRM_НастройкаМоделейМашинногоОбучения.Форма.УстановкаМоделей", , ЭтотОбъект);
	ИначеЕсли Результат.Значение = "ОткрытьНастройки" Тогда
		ОткрытьФорму("Обработка.CRM_НастройкаМоделейМашинногоОбучения.Форма.НастройкаМоделей", , ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

Процедура СохранитьКонфигурационныйФайл(НастройкиМоделей) Экспорт
	
	ИмяФайла = "ai_server.ini";
	
	НастройкиФайла = CRM_МоделиМашинногоОбученияКлиентСервер.ДанныеКонфигурационногоФайла(НастройкиМоделей);
	
	ТекстФайла = Новый ТекстовыйДокумент;
	
	ВыведеноСтрок = 0;
	Для Каждого ДанныеСекции Из НастройкиФайла Цикл
		ТекстФайла.ДобавитьСтроку("[" + ДанныеСекции.Ключ + "]");
			ВыведеноСтрок = ВыведеноСтрок + 1;
		Для Каждого ДанныеНастройки Из ДанныеСекции.Значение Цикл
			ТекстФайла.ДобавитьСтроку(ДанныеНастройки.Ключ + " = " + ДанныеНастройки.Значение);
			ВыведеноСтрок = ВыведеноСтрок + 1;
		КонецЦикла;
		ТекстФайла.ДобавитьСтроку("");
		ВыведеноСтрок = ВыведеноСтрок + 1;
	КонецЦикла;
	
	ТекстФайла.УдалитьСтроку(ВыведеноСтрок);
	
	ПутьКФайлу = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(НастройкиМоделей.ПутьКМоделям) + ИмяФайла;
	
	ТекстФайла.Записать(ПутьКФайлу, КодировкаТекста.ANSI);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьКаталогДанных(ПутьКМоделям)
	
	ИмяКаталога = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ПутьКМоделям) + "data";
	
	Файл = Новый Файл(ИмяКаталога);
	
	Если Файл.Существует() Тогда
		Если Не Файл.ЭтоКаталог() Тогда
			ТекстОшибки = НСтр("ru = 'Ошибка проверки каталога данных для обучения моделей.'");
			ВызватьИсключение ТекстОшибки;
		КонецЕсли;
	Иначе
		СоздатьКаталог(ИмяКаталога);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
