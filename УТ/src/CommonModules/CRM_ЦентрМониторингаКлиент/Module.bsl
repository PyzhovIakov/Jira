
#Область ПрограммныйИнтерфейс

// Записывает замер операции бизнес-статистики в клиентский кэш замеров
//  для последующей передачи на сервер и сохранения
//
// Параметры:
//  ИмяОперации	 - Строка	 - Имя операции.
//  Значение	 - Число	 - Значение.
//  ТипЗаписи	 - Число	 - Тип записи.
//  ДатаНачала	 - Строка, Дата	 - Дата начала.
//
Процедура ЗаписатьОперациюБизнесСтатистики(ИмяОперации, Значение = 1, ТипЗаписи = 8, Знач ДатаНачала = '00010101') Экспорт
	
	Если Не РегистрироватьБизнесСтатистику() Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДатаНачала) Тогда
		ДатаНачала = ОбщегоНазначенияКлиент.ДатаУниверсальная();
	КонецЕсли;
	
	ПараметрыЦентраМониторинга = ЦентрМониторингаКлиентСлужебный.ПолучитьПараметрыПриложения();
	
	Если ПараметрыЦентраМониторинга["Замеры"][ТипЗаписи] = Неопределено Тогда
		ПараметрыЦентраМониторинга["Замеры"].Вставить(ТипЗаписи, Новый Соответствие);
	КонецЕсли;
	
	Замеры = ПараметрыЦентраМониторинга["Замеры"][ТипЗаписи];
	
	Замер = Новый Структура("ПериодЗаписи, ТипЗаписи, Ключ, ОперацияСтатистики, Значение, Замещать");
	Замер.ПериодЗаписи = ДатаНачала;
	Замер.ТипЗаписи = ТипЗаписи;
	Замер.ОперацияСтатистики = ИмяОперации;
	Замер.Значение = Значение;
	Замер.Замещать = Истина;
	Замер.Ключ = КлючДанныхЗамера(ИмяОперации, ПараметрыЦентраМониторинга);
	
	УникальныйКлюч = Строка(Новый УникальныйИдентификатор);
	Замеры.Вставить(УникальныйКлюч, Замер);
	
КонецПроцедуры

// Процедур начинает замер операции бизнес статистики.
//
// Параметры:
//  ИмяОперации		 - Строка	 - Имя операции бизнес-статистики.
//  АвтоЗавершение	 - Булево	 - Признак авто-завершения.
//
Процедура НачатьЗамерОперацииБизнесСтатистики(ИмяОперации, АвтоЗавершение = Ложь) Экспорт
	
	Если Не РегистрироватьБизнесСтатистику() Тогда
		Возврат;
	КонецЕсли;
	
	ДатаНачала = ОбщегоНазначенияКлиент.ДатаУниверсальная();
	ВремяНачала = ТекущаяУниверсальнаяДатаВМиллисекундах();
	
	ПараметрыЦентраМониторинга = ЦентрМониторингаКлиентСлужебный.ПолучитьПараметрыПриложения();
	
	ИмяПараметра = "CRM_ЗамерыНачатые";
	Если ПараметрыЦентраМониторинга[ИмяПараметра] = Неопределено Тогда
		ПараметрыЦентраМониторинга.Вставить(ИмяПараметра, Новый Соответствие);
	КонецЕсли;
	
	ДанныеОперации = Новый Структура;
	ДанныеОперации.Вставить("ВремяНачала", ВремяНачала);
	ДанныеОперации.Вставить("ДатаНачала", ДатаНачала);
	ДанныеОперации.Вставить("АвтоЗавершение", АвтоЗавершение);
	
	ПараметрыЦентраМониторинга[ИмяПараметра].Вставить(ИмяОперации, ДанныеОперации);
	
	Если АвтоЗавершение Тогда
		
		ИмяПараметра = "CRM_Естьбработчик";
		Если ПараметрыЦентраМониторинга[ИмяПараметра] = Неопределено Тогда
			ПараметрыЦентраМониторинга.Вставить(ИмяПараметра, Ложь);
		КонецЕсли;
		
		Если Не ПараметрыЦентраМониторинга[ИмяПараметра] Тогда
			ПодключитьОбработчикОжидания("ЗавершитьЗамерОперацииБизнесСтатистикиАвто", 0.1, Истина);
			ПараметрыЦентраМониторинга[ИмяПараметра] = Истина;
			ПараметрыЦентраМониторинга.Вставить("CRM_ВремяПодключенияОбработчика", ВремяНачала);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура автоматически завершает замер операции бизнес-статистики на клиенте.
//
Процедура ЗавершитьЗамерОперацииБизнесСтатистикиНаКлиентеАвто() Экспорт
	
	Если Не РегистрироватьБизнесСтатистику() Тогда
		Возврат;
	КонецЕсли;
	
	ВремяОкончания = ТекущаяУниверсальнаяДатаВМиллисекундах();
	
	ПараметрыЦентраМониторинга = ЦентрМониторингаКлиентСлужебный.ПолучитьПараметрыПриложения();
	
	ИмяПараметра = "CRM_ЗамерыНачатые";
	Если ПараметрыЦентраМониторинга[ИмяПараметра] = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВремяПодключенияОбработчика = ПараметрыЦентраМониторинга["CRM_ВремяПодключенияОбработчика"];
	
	КоличествоНеЗавершенныхАвтоЗамеров = 0;
	
	Для Каждого ДанныеОперации Из ПараметрыЦентраМониторинга[ИмяПараметра] Цикл
		ЗамерЗначение = ДанныеОперации.Значение;
		Если ЗамерЗначение["АвтоЗавершение"] Тогда
			Если ЗамерЗначение["ВремяНачала"] <= ВремяПодключенияОбработчика Тогда
				ЗавершитьЗамерОперацииБизнесСтатистики(ДанныеОперации.Ключ, ВремяОкончания);
			Иначе
				КоличествоНеЗавершенныхАвтоЗамеров = КоличествоНеЗавершенныхАвтоЗамеров + 1;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
		
	Если КоличествоНеЗавершенныхАвтоЗамеров = 0 Тогда
		ПараметрыЦентраМониторинга.Вставить("CRM_Естьбработчик", Ложь);
	Иначе
		ВремяПодключенияОбработчика = ТекущаяУниверсальнаяДатаВМиллисекундах();
		ПодключитьОбработчикОжидания("ЗавершитьЗамерОперацииБизнесСтатистикиАвто", 0.1, Истина);
		ПараметрыЦентраМониторинга.Вставить("CRM_Естьбработчик", Истина);
		ПараметрыЦентраМониторинга.Вставить("CRM_ВремяПодключенияОбработчика", ВремяПодключенияОбработчика);
	КонецЕсли;
	
КонецПроцедуры

// Процедура завершает замер операции бизнес-статистики.
//
// Параметры:
//  ИмяОперации		 - Строка	 - Имя операции.
//  ВремяОкончания	 - Неопределено, Дата	 - Время окончания операции.
//
Процедура ЗавершитьЗамерОперацииБизнесСтатистики(ИмяОперации, Знач ВремяОкончания = Неопределено) Экспорт
	
	Если Не РегистрироватьБизнесСтатистику() Тогда
		Возврат;
	КонецЕсли;
	
	Если ВремяОкончания = Неопределено Тогда
		ВремяОкончания = ТекущаяУниверсальнаяДатаВМиллисекундах();
	КонецЕсли;
	
	ПараметрыЦентраМониторинга = ЦентрМониторингаКлиентСлужебный.ПолучитьПараметрыПриложения();
	
	ИмяПараметра = "CRM_ЗамерыНачатые";
	Если ПараметрыЦентраМониторинга[ИмяПараметра] = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеОперации = ПараметрыЦентраМониторинга[ИмяПараметра].Получить(ИмяОперации);
	Если ДанныеОперации <> Неопределено Тогда
		
		ПараметрыЦентраМониторинга[ИмяПараметра].Удалить(ИмяОперации);
		
		МиллисекундВСекунде = 1000;
		ДлительностьСекунд = Окр((ВремяОкончания - ДанныеОперации.ВремяНачала) / МиллисекундВСекунде);
		
		ТипЗаписи = 9;
		ЗаписатьОперациюБизнесСтатистики(ИмяОперации, ДлительностьСекунд, ТипЗаписи, ДанныеОперации.ДатаНачала);
		
	КонецЕсли;
	
КонецПроцедуры

// См. ОбщегоНазначенияКлиентПереопределяемый.ПриНачалеРаботыСистемы
//  ОбщегоНазначенияКлиентПереопределяемый.
//
// Параметры:
//  Параметры	 - Структура - Параметры.
//
Процедура ПриНачалеРаботыСистемы(Параметры) Экспорт
	
	ПараметрыРаботыКлиента = СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске();
	
	ПараметрыЦентраМониторинга = ЦентрМониторингаКлиентСлужебный.ПолучитьПараметрыПриложения();
	
	ИмяПараметра = "CRM_ИнформацияПользователя";
	ПараметрыЦентраМониторинга.Вставить(ИмяПараметра, Новый Соответствие);
	ИнформацияПользователя = ПараметрыЦентраМониторинга[ИмяПараметра];
	ИнформацияПользователя.Вставить("ИдентификаторПользователя", ПараметрыРаботыКлиента.ИдентификаторПользователя);
	ИнформацияПользователя.Вставить("ХешОбобщеннойРоли", ПараметрыРаботыКлиента.ХешОбобщеннойРоли);
	
КонецПроцедуры

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция КлючДанныхЗамера(ИмяОперации, ПараметрыЦентраМониторинга)
	
	// Макисмальная длина строкового ключа данных - 100 символов,
	// как в измерении "Ключ" регистра сведений "ЗамерыСтатистики".
	// Формат ключа: <ПрефиксВидаКлюча> + <ДанныеКлюча>.
	// Длина ПрефиксВидаКлюча - 1 символ, ДанныеКлюча - до 99 символов.
	
	// ПрефиксВидаКлюча = "0": данные ключа содержат до трех строк фиксированной длины 32 символа -
	// MD5 хешей или уникальных идентификаторов с удаленными дефисами.
	// Каждая из этих строк предваряется односимвольным префиксом, указывающими на тип передаваемых в строке данных.
	// Формат данных ключа: <ПрефиксТипа1> + <Строка1> [ + ПрефиксТипа2> + <Строка2> [ + <ПрефиксТипа3> + <Строка3>]]
	ПрефиксВидаКлюча = "0";
	
	// ПрефиксТипаДанных = "0": передается сокращенный идентификатор пользователя.
	ПрефиксТипаДанных0 = "";
	Идентификатор = "";
	ИменаОпераций = CRM_ЦентрМониторингаКлиентСервер.ИменаОперацийСАналитикойПоРолиИПользователю();
	Если ИменаОпераций.Найти(ИмяОперации) <> Неопределено Тогда
		ПрефиксТипаДанных0 = "0";
		Идентификатор = ПараметрыЦентраМониторинга["CRM_ИнформацияПользователя"]["ИдентификаторПользователя"];
	КонецЕсли;
	
	// ПрефиксТипаДанных = "1": передается хеш обобщенной роли пользователя.
	ПрефиксТипаДанных1 = "1";
	ХешОбобщеннойРоли = ПараметрыЦентраМониторинга["CRM_ИнформацияПользователя"]["ХешОбобщеннойРоли"];
	
	Возврат ПрефиксВидаКлюча + ПрефиксТипаДанных0 + Идентификатор + ПрефиксТипаДанных1 + ХешОбобщеннойРоли;
	
КонецФункции

Функция РегистрироватьБизнесСтатистику()
	
	ИмяПараметра = "СтандартныеПодсистемы.ЦентрМониторинга";
	
	Если ПараметрыПриложения[ИмяПараметра] = Неопределено Тогда
		ПараметрыПриложения.Вставить(ИмяПараметра, ЦентрМониторингаКлиентСлужебный.ПолучитьПараметрыПриложения());
	КонецЕсли;
	
	Возврат ПараметрыПриложения[ИмяПараметра]["РегистрироватьБизнесСтатистику"];
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
