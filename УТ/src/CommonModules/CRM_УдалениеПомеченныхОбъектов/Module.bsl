///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, ООО 1С-Рарус
// Все права защищены.
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Процедура-обработчик события перед удалением объекта.
//
// Параметры:
//  Источник - Произвольный	 - Объект информационной базы.
//  Отказ	 - Булево	 - Флаг отказа.
//
Процедура ПередУдалениемОбъекта(Источник, Отказ) Экспорт

	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ТранзакцияАктивна() Тогда
		УдалитьПодчиненныеОбъекты(Источник);
	КонецЕсли;
	
КонецПроцедуры

// Процедура выполняет удаление из набора записи с очищенной ссылкой.
//
// Параметры:
//  Набор			 - РегистрСведенийНаборЗаписей	 - Набор записей.
//  УдаляемыйСсылка	 - Ссылка	 - Ссылка, которую нужно удалить.
//
Процедура УдалитьИзНабораЗаписиСОчищеннойСсылкой(Набор, УдаляемыйСсылка) Экспорт
	
	Если Набор.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	ТЗНабор = Набор.Выгрузить();
	Если ТЗНабор.Найти(УдаляемыйСсылка) = Неопределено Тогда
		Набор.Очистить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УдалитьПодчиненныеОбъекты(Источник)
	
	ПодчиненныеОбъекты = ПодчиненныеОбъекты(Источник);
	Для каждого ПодчиненныйОбъект Из ПодчиненныеОбъекты Цикл
		Если Метаданные.РегистрыСведений.Содержит(ПодчиненныйОбъект.Метаданные) Тогда
			ОбработатьРегистрСведений(Источник.Ссылка, ПодчиненныйОбъект);
		ИначеЕсли ОбщегоНазначения.ЭтоОбъектСсылочногоТипа(ПодчиненныйОбъект.Метаданные) Тогда
			ОбработатьОбъектСсылочногоТипа(Источник.Ссылка, ПодчиненныйОбъект);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ПодчиненныеОбъекты(Источник)
	
	Подчиненные = Новый Массив;
	ТипИсточника = ТипЗнч(Источник);
	ТипСсылкиИсточника = ТипЗнч(Источник.Ссылка);
	Свойства = "Метаданные, Реквизит, Действие";
	Если ТипИсточника = Тип("ДокументОбъект.CRM_Интерес") Тогда
		Подчиненные.Добавить(Новый Структура(Свойства, Метаданные.РегистрыСведений.CRM_ЖурналДокументов,
			 "CRM_Интерес",
			 "Очистить"));
		Подчиненные.Добавить(Новый Структура(Свойства, Метаданные.РегистрыСведений.CRM_СостоянияЛидов,
			 "СконвертированВОбъект",
			 "Очистить"));
		Подчиненные.Добавить(Новый Структура(Свойства,
			 Метаданные.РегистрыСведений.CRM_РабочееВремяПользователей, "Интерес",
			 "Очистить"));
	ИначеЕсли ТипИсточника = Тип("СправочникОбъект.Партнеры") Тогда
		Подчиненные.Добавить(Новый Структура(Свойства,
			 Метаданные.РегистрыСведений.CRM_ЗадачиПоИсправлениюКлиентскойБазы, "ПартнерРодитель",
			 "Удалить"));
		Подчиненные.Добавить(Новый Структура(Свойства,
			 Метаданные.РегистрыСведений.CRM_ИсторияЗначенийКлассификаторовОбъектов, "ЗначениеРеквизита",
			 "Удалить"));
		Подчиненные.Добавить(Новый Структура(Свойства,
			 Метаданные.РегистрыСведений.CRM_ОбъектыЗначенийКлассификаторов, "ЗначениеРеквизита",
			 "Удалить"));

		Подчиненные.Добавить(Новый Структура(Свойства,
			 Метаданные.РегистрыСведений.CRM_СостоянияВоронкиПродаж, "Партнер",
			 "Очистить"));
		Подчиненные.Добавить(Новый Структура(Свойства, Метаданные.РегистрыСведений.CRM_ОбъектыАРМ, "Клиент", "Очистить"));
		Подчиненные.Добавить(Новый Структура(Свойства,
			 Метаданные.РегистрыСведений.сфпЗаписиТелефонныхПереговоров, "Контакт",
			 "Очистить"));
		Подчиненные.Добавить(Новый Структура(Свойства, Метаданные.РегистрыСведений.сфпТекущиеЗвонки,
			 "АбонентКонтакт",
			 "Очистить"));
	ИначеЕсли ТипИсточника = Тип("СправочникОбъект.КонтактныеЛицаПартнеров") Тогда
		Подчиненные.Добавить(Новый Структура(Свойства,
			 Метаданные.РегистрыСведений.CRM_ИсторияЗначенийКлассификаторовОбъектов, "ЗначениеРеквизита",
			 "Удалить"));
		Подчиненные.Добавить(Новый Структура(Свойства,
			 Метаданные.РегистрыСведений.CRM_ОбъектыЗначенийКлассификаторов, "ЗначениеРеквизита",
			 "Удалить"));

		Подчиненные.Добавить(Новый Структура(Свойства, Метаданные.РегистрыСведений.CRM_ОбъектыАРМ, "Контакт", "Очистить"));
		Подчиненные.Добавить(Новый Структура(Свойства,
			 Метаданные.РегистрыСведений.сфпЗаписиТелефонныхПереговоров, "Контакт",
			 "Очистить"));
		Подчиненные.Добавить(Новый Структура(Свойства, Метаданные.РегистрыСведений.сфпТекущиеЗвонки,
			 "АбонентКонтакт",
			 "Очистить"));
	ИначеЕсли ТипИсточника = Тип("СправочникОбъект.CRM_ПотенциальныеКлиенты") Тогда
		Подчиненные.Добавить(Новый Структура(Свойства,
			 Метаданные.РегистрыСведений.CRM_СостоянияВоронкиПродаж, "Партнер",
			 "Очистить"));
		Подчиненные.Добавить(Новый Структура(Свойства, Метаданные.РегистрыСведений.CRM_ОбъектыАРМ, "Клиент", "Очистить"));
		Подчиненные.Добавить(Новый Структура(Свойства,
			 Метаданные.РегистрыСведений.сфпЗаписиТелефонныхПереговоров, "Контакт",
			 "Очистить"));
		Подчиненные.Добавить(Новый Структура(Свойства, Метаданные.РегистрыСведений.сфпТекущиеЗвонки,
			 "АбонентКонтакт",
			 "Очистить"));
	ИначеЕсли ТипИсточника = Тип("ДокументОбъект.CRM_СообщениеМессенджера") Тогда
		Подчиненные.Добавить(Новый Структура(Свойства,
			 Метаданные.РегистрыСведений.CRM_СобытияМессенджеров, "Значение",
			 "Удалить"));
		Подчиненные.Добавить(Новый Структура(Свойства,
			 Метаданные.РегистрыСведений.CRM_СообщенияДиалоговПоследние, "Сообщение",
			 "Удалить"));
	КонецЕсли;
	
	Если Метаданные.РегистрыСведений.ПредметыПапкиВзаимодействий.Ресурсы.Предмет.Тип.СодержитТип(ТипСсылкиИсточника) Тогда
		Подчиненные.Добавить(Новый Структура(Свойства,
			 Метаданные.РегистрыСведений.ПредметыПапкиВзаимодействий, "Предмет",
			 "Очистить"));
	КонецЕсли;
	
	Возврат Подчиненные;
	
КонецФункции

Процедура ОбработатьРегистрСведений(Ссылка, ПодчиненныйОбъект)
	
	МассивИзмерений = Новый Массив;
	Для каждого Измерение Из ПодчиненныйОбъект.Метаданные.Измерения Цикл
		МассивИзмерений.Добавить(Измерение.Имя);
	КонецЦикла;
	Если ПодчиненныйОбъект.Метаданные.ПериодичностьРегистраСведений <> Метаданные.СвойстваОбъектов.ПериодичностьРегистраСведений.Непериодический Тогда
		МассивИзмерений.Добавить("Период");
	КонецЕсли;
	ИзмеренияСтр = СтрСоединить(МассивИзмерений, ",");
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	*
	               |ИЗ
	               |	РегистрСведений." + ПодчиненныйОбъект.Метаданные.Имя + " КАК ДанныеРегистра
	               |ГДЕ
	               |	ДанныеРегистра." + ПодчиненныйОбъект.Реквизит + " = &Значение";
	
	Запрос.УстановитьПараметр("Значение", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Менеджер = РегистрыСведений[ПодчиненныйОбъект.Метаданные.Имя].СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Менеджер, Выборка, ИзмеренияСтр);
		Менеджер.Прочитать();
		Если Менеджер.Выбран() Тогда
			Если ПодчиненныйОбъект.Метаданные = Метаданные.РегистрыСведений.CRM_ЖурналДокументов Тогда
				Если Менеджер["ГлавнаяЗапись"] Тогда
					Запрос.Текст = "ВЫБРАТЬ
					               |	КОЛИЧЕСТВО(CRM_ЖурналДокументов.ГлавнаяЗапись) КАК ГлавнаяЗапись
					               |ИЗ
					               |	РегистрСведений.CRM_ЖурналДокументов КАК CRM_ЖурналДокументов
					               |ГДЕ
					               |	CRM_ЖурналДокументов.Объект = &Объект";
					Запрос.УстановитьПараметр("Объект", Выборка.Объект);
					ВыборкаГЗ = CRM_ОбщегоНазначенияСервер.ВыполнитьЗапрос(Запрос).Выбрать();
					Если ВыборкаГЗ.Следующий() Тогда
						Если ВыборкаГЗ.ГлавнаяЗапись > 1 Тогда
							ПодчиненныйОбъект.Действие = "Удалить";
						КонецЕсли;
					КонецЕсли;
				Иначе
					ПодчиненныйОбъект.Действие = "Удалить";
				КонецЕсли;
			КонецЕсли;
			Если ПодчиненныйОбъект.Действие = "Удалить" Тогда
				Менеджер.Удалить();
			ИначеЕсли ПодчиненныйОбъект.Действие = "Очистить" Тогда
				Менеджер[ПодчиненныйОбъект.Реквизит] = Неопределено;
				Менеджер.Записать();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработатьОбъектСсылочногоТипа(Ссылка, ПодчиненныйОбъект)
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеОбъекта.Ссылка
	               |ИЗ
	               |	" + ПодчиненныйОбъект.Метаданные.ПолноеИмя() + " КАК ДанныеОбъекта
	               |ГДЕ
	               |	ДанныеОбъекта." + ПодчиненныйОбъект.Реквизит + " = &Значение";
	
	Запрос.УстановитьПараметр("Значение", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		Если ПодчиненныйОбъект.Действие = "Удалить" Тогда
			Объект.Удалить();
		ИначеЕсли ПодчиненныйОбъект.Действие = "Очистить" Тогда
			Объект[ПодчиненныйОбъект.Реквизит] = Неопределено;
			Объект.Записать();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
