
////////////////////////////////////////////////////////////////////////////////
// CRM методы форм справочников сервер
//  
// В данный модуль вынесены методы подсистемы CRM, вызываемые из модулей типовых объектов. 
// Выносить можно только те методы, которые не вызывают стандартные методы типового модуля или обработчики форм. 
// Т.е. вызывают только те методы, что тоже вынесены из типового или не содержат таких вызовов.
// Для каждого объекта необходимо задать свою #Область с именем объекта и модуля, как он называется в метаданных.
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

#Область Справочник_Пользователи_ФормаЭлемента

Функция ПолучитьНавигационнуюСсылкуКартинки(ФайлКартинки, ИдентификаторФормы) Экспорт
	
	Попытка
		УстановитьПривилегированныйРежим(Истина);
		Возврат РаботаСФайлами.ДанныеФайла(ФайлКартинки, ИдентификаторФормы).СсылкаНаДвоичныеДанныеФайла;
	Исключение
		Возврат "";
	КонецПопытки;
	
КонецФункции

#КонецОбласти

#Область Справочник_Партнёры_ФормаЭлемента

// Функция вычисляет дубли в массиве элементов и очищает их.
//
//  Параметры:
//   Массив		- Массив - Массив для проверки.
//   ЭтоТелефон - Булево - Признак того, что проверяется телефон.
//
//  Возвращаемое значение
//   Массив - Массив - Проверенный массив.
//
Функция УдалитьПовторяющиесяЭлементыМассива(Массив, ЭтоТелефон) Экспорт
		
	ТекущийИндекс = 0; 
	ВсегоЭлементов = Массив.Количество(); 
	
	Пока ТекущийИндекс < ВсегоЭлементов Цикл 
		ТекИндекс2 = ТекущийИндекс + 1; 
		Пока ТекИндекс2 < ВсегоЭлементов Цикл 
			Если ЭтоТелефон Тогда
				Если сфпСофтФонПроСервер.сфпУбратьИзНомераТелефонаВсеПрефиксы(Массив[ТекИндекс2]) 
					= сфпСофтФонПроСервер.сфпУбратьИзНомераТелефонаВсеПрефиксы(Массив[ТекущийИндекс]) Тогда 
					Массив.Удалить(ТекИндекс2); 
					ВсегоЭлементов = ВсегоЭлементов - 1; 
				Иначе 
					ТекИндекс2 = ТекИндекс2 + 1; 
				КонецЕсли;
			Иначе
				Если Массив[ТекИндекс2] = (Массив[ТекущийИндекс]) Тогда 
					Массив.Удалить(ТекИндекс2); 
					ВсегоЭлементов = ВсегоЭлементов - 1; 
				Иначе 
					ТекИндекс2 = ТекИндекс2 + 1; 
				КонецЕсли;
			КонецЕсли;
		КонецЦикла; 
		ТекущийИндекс = ТекущийИндекс + 1; 
	КонецЦикла; 
	
	Возврат Массив; 
	
КонецФункции 

#КонецОбласти

#Область Справочник_ФизическиеЛица_ФормаЭлемента

Процедура ФизическиеЛицаФормаЭлементаПриСозданииНаСервере(Форма, Объект) Экспорт
	
	ДобавляемыеРеквизиты = Новый Массив;
	Если Не ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "НеобходимоОповещение") Тогда
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("НеобходимоОповещение", Новый ОписаниеТипов("Булево")));
	КонецЕсли;
	Если Не ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ОбъектОснование") Тогда
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ОбъектОснование", Новый ОписаниеТипов)); // Произвольный
	КонецЕсли;
	
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	Если Форма.Элементы.Найти("CRM_ОтписалсяОтEmailРассылок") = Неопределено Тогда
		
		НовыйЭлемент = Форма.Элементы.Добавить(
			"CRM_ОтписалсяОтEmailРассылок", Тип("ПолеФормы"), Форма.Элементы["ГруппаКонтактнаяИнформация"]);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
		
		Если CRM_ОбщегоНазначенияПовтИсп.ЭтоУТиВСК() Тогда
			НовыйЭлемент.ПутьКДанным = "Объект.CRM_ОтписалсяОтEmailРассылок";
		Иначе
			НовыйЭлемент.ПутьКДанным = "ФизическоеЛицо.CRM_ОтписалсяОтEmailРассылок";
		КонецЕсли;
		
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() И Форма.Параметры.Свойство("ПараметрыНового") Тогда
		Объект.Наименование = Форма.Параметры.ПараметрыНового.Наименование;
		
		МассивДопРеквизитов = Форма.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов.НайтиСтроки(Новый Структура("Тип,
			|Вид", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты,
			 Справочники.ВидыКонтактнойИнформации.EMailФизическиеЛица));
		Если МассивДопРеквизитов.количество() > 0 Тогда
			Форма[МассивДопРеквизитов[0].ИмяРеквизита] = Форма.Параметры.ПараметрыНового.АдресПочты;
		КонецЕсли;
	КонецЕсли;
	
	// Учесть возможность создания из взаимодействия.
	Если Форма.Параметры.Свойство("Основание") Тогда
		Основание = Форма.Параметры.Основание;
		Если ЗначениеЗаполнено(Основание) И ТипЗнч(Основание) = Тип("Структура") Тогда
			Если Основание.Свойство("Объект") И ВзаимодействияКлиентСервер.ЯвляетсяВзаимодействием(Основание.Объект) Тогда
				Форма.НеобходимоОповещение = Истина;
				Форма.ОбъектОснование = Форма.Параметры.Основание.Объект;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Форма.Параметры.Свойство("Основание")
		 И ТипЗнч(Форма.Параметры.Основание) = Тип("ДокументСсылка.ТелефонныйЗвонок")
		 И Объект.Ссылка.Пустая() Тогда
		Форма.НеобходимоОповещение = Истина;
		Форма.ОбъектОснование = Форма.Параметры.Основание;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
