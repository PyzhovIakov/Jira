////////////////////////////////////////////////////////////////////////////////
// Работа с большими языковыми моделями
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

Процедура ПриОткрытии(Форма) Экспорт
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ИИАссистент_ИзменятьИсходныйТекст") Тогда
		Форма.ПодключитьОбработчикОжидания("Подключаемый_ДоступностьМенюАссистент", 0.5, Истина);
	КонецЕсли;
КонецПроцедуры

Процедура ВыполнитьПереопределяемуюКоманду(Форма, Команда, ДополнительныеПараметры) Экспорт
	
	Если СтрНачинаетсяС(Команда.Имя, "ИИАссистент_Сервис_") Тогда
        ИдентификаторСервиса = СтрЗаменить(СтрЗаменить(Команда.Имя, "ИИАссистент_Сервис_", ""), "_", "-");
		Для Каждого Элемент Из Форма.Элементы.ИИАссистент_Сервисы.ПодчиненныеЭлементы Цикл
			Элемент.Пометка = (Элемент.Имя = Команда.Имя);
		КонецЦикла;
		CRM_РаботаСЯзыковымиМоделямиВызовСервера.СохранитьСервисПоУмолчанию(ИдентификаторСервиса);
	ИначеЕсли СтрНачинаетсяС(Команда.Имя, "ИИАссистент_Команда_") Тогда
		Если CRM_РаботаСЯзыковымиМоделямиВызовСервера.ПоказатьПредупреждениеПользователя() Тогда
			ПараметрыОповещения = Новый Структура;
			ПараметрыОповещения.Вставить("Форма", Форма);
			ПараметрыОповещения.Вставить("Команда", Команда);
			ПараметрыОповещения.Вставить("ДополнительныеПараметры", ДополнительныеПараметры);
			ОповещениеПродолжения = Новый ОписаниеОповещения("ПродолжитьПослеВопроса", ЭтотОбъект,
				 ПараметрыОповещения);

			ТекстВопроса = CRM_РаботаСЯзыковымиМоделямиВызовСервера.ТекстПредупреждения("ПредупреждениеПользователя");
			
			Кнопки = Новый СписокЗначений;
			Кнопки.Добавить("Продолжить", "Продолжить", Истина);
			Кнопки.Добавить("Отмена", "Отмена", Ложь);
			
			ПараметрыВопроса = Новый Структура;
			ПараметрыВопроса.Вставить("ТекстHTML", ТекстВопроса);
			ПараметрыВопроса.Вставить("Заголовок",НСтр("ru = 'Использование языковых моделей'"));
			ПараметрыВопроса.Вставить("Кнопки", Кнопки);
			ПараметрыВопроса.Вставить("Размер", Новый Структура("Высота, Ширина", 25, 60));
			
			ОткрытьФорму("ОбщаяФорма.CRM_ВыводHTMLДокумента", ПараметрыВопроса, , , , ,
				ОповещениеПродолжения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			Возврат;
		КонецЕсли;
		ИдентификаторДействия = СтрЗаменить(СтрЗаменить(Команда.Имя, "ИИАссистент_Команда_", ""), "_", "-");
		ПараметрыФормы = Новый Структура("ИдентификаторДействия", ИдентификаторДействия);
		Если ТипЗнч(Форма.ТекущийЭлемент) = Тип("ПолеФормы") Тогда
			ОбрабатываемыйТекст = "";
			ТолькоПросмотр = (Форма.ТолькоПросмотр 
				Или Не Форма.ТекущийЭлемент.Доступность Или Форма.ТекущийЭлемент.ТолькоПросмотр);
			Если Форма.ТекущийЭлемент.Вид = ВидПоляФормы.ПолеВвода Тогда
				Если Форма.ТекущийЭлемент.ВыделенныйТекст <> "" Тогда
					ОбрабатываемыйТекст = Форма.ТекущийЭлемент.ВыделенныйТекст;
				Иначе	
					ОбрабатываемыйТекст = Форма.ТекущийЭлемент.ТекстРедактирования;
				КонецЕсли;
				ПараметрыФормы.Вставить("ОбрабатываемыйТекст", ОбрабатываемыйТекст);
			ИначеЕсли Форма.ТекущийЭлемент.Вид = ВидПоляФормы.ПолеHTMLДокумента Тогда
				ТолькоПросмотр = (ТолькоПросмотр Или Форма.ТекущийЭлемент.Документ.body.contentEditable <> "true");
				Выделение = Форма.ТекущийЭлемент.Документ.defaultView.getSelection().getRangeAt(0);
				ВыделенныйКонтент = Выделение.cloneContents();
				Если ЗначениеЗаполнено(ВыделенныйКонтент.textContent) Тогда
					Если ВыделенныйКонтент.childElementCount = 0 Тогда
						ОбрабатываемыйТекст = ВыделенныйКонтент.textContent;
					ИначеЕсли ВыделенныйКонтент.firstChild.textContent <> ВыделенныйКонтент.children[0].textContent Тогда
						ОбрабатываемыйТекст	= ВыделенныйКонтент.firstChild.textContent;
					КонецЕсли;
					Для Н = 0 По ВыделенныйКонтент.childElementCount -1 Цикл
						ОбрабатываемыйТекст = ОбрабатываемыйТекст + ВыделенныйКонтент.children[Н].outerHTML;
					КонецЦикла;
					Если ВыделенныйКонтент.childElementCount > 0
						И ВыделенныйКонтент.lastChild.textContent <> ВыделенныйКонтент.children[Н-1].textContent Тогда
						ОбрабатываемыйТекст = ОбрабатываемыйТекст + ВыделенныйКонтент.lastChild.textContent;
					КонецЕсли;
					ПараметрыФормы.Вставить("ОбрабатываемыйТекст", ОбрабатываемыйТекст);
				Иначе	
					СтруктураHTML = CRM_РаботаСHTML.РазложитьТелоHTML(Форма.ТекущийЭлемент.Документ.body.innerHTML);
					ПараметрыФормы.Вставить("ОбрабатываемыйТекст", СтруктураHTML.ВведенныйТекст);
					Если ЗначениеЗаполнено(СтруктураHTML.Цитирование) Тогда
						ДокЦитирования = Новый ФорматированныйДокумент;
						ДокЦитирования.УстановитьHTML(СтруктураHTML.ВведенныйТекст, Новый Структура);
						ОбрабатываемыйТекст = ДокЦитирования.ПолучитьТекст();
					Иначе
						ОбрабатываемыйТекст = Форма.ТекущийЭлемент.Документ.body.innerText;
					Конецесли;
				КонецЕсли;
			Иначе
				ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Команда предназначена для работы с полями ввода текста!
																	|Выберите поле ввода и повторите команду.'"));
				Возврат;
			КонецЕсли;
			Если СокрЛП(ОбрабатываемыйТекст) = ""
				И Форма.ИИАссистент_ИдентификаторСвояКоманда <> ИдентификаторДействия Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Исходный текст не заполнен!'"));
				Возврат;
			КонецЕсли;
		Иначе
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Команда предназначена для работы с полями ввода текста!
																	|Выберите поле ввода и повторите команду.'"));
			Возврат;
		КонецЕсли;
		ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ПослеЗакрытияФормыРезультата", ЭтотОбъект, Форма);
		ПараметрыФормы.Вставить("ИзменятьИсходныйТекст", Форма.ИИАссистент_ИзменятьИсходныйТекст
			И Не ТолькоПросмотр);
		ОткрытьФорму("ОбщаяФорма.CRM_ФормаОтветаЯзыковойМодели", ПараметрыФормы, Форма, , , , ОписаниеОповещенияОЗакрытии);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПродолжитьПослеВопроса(Результат, ДопПараметры) Экспорт
	Если Результат <> Неопределено И Результат = "Продолжить" Тогда
		CRM_РаботаСЯзыковымиМоделямиВызовСервера.НеПоказыватьПредупреждениеПользователя();
		ВыполнитьПереопределяемуюКоманду(ДопПараметры.Форма, ДопПараметры.Команда, ДопПараметры.ДополнительныеПараметры);
	КонецЕсли;
КонецПроцедуры

Процедура ДоступностьМенюАссистент(Форма) Экспорт

	ТекущийЭлемент = Форма.ТекущийЭлемент;
	Форма.Элементы.ГруппаАссистент.Доступность = (ТипЗнч(ТекущийЭлемент) = Тип("ПолеФормы")
		И (ТекущийЭлемент.Вид = ВидПоляФормы.ПолеHTMLДокумента Или (
			ТекущийЭлемент.Вид = ВидПоляФормы.ПолеВвода
				И  ТекущийЭлемент.КнопкаВыбора <> Истина
				И  ТекущийЭлемент.КнопкаВыпадающегоСписка <> Истина
				И  ТекущийЭлемент.КнопкаСпискаВыбора <> Истина)));
	Если Форма.ВводДоступен() Тогда	
		Форма.ПодключитьОбработчикОжидания("Подключаемый_ДоступностьМенюАссистент", 0.5, Истина);
	Иначе	
		Форма.ПодключитьОбработчикОжидания("Подключаемый_ДоступностьМенюАссистент", 5, Истина);
	КонецЕсли;
КонецПроцедуры

Процедура ПослеЗакрытияФормыРезультата(Результат, Форма) Экспорт

	Если ТипЗнч(Результат) = Тип("Структура") 
		И Результат.Свойство("Ошибка")
		И ЗначениеЗаполнено(Результат.Ошибка) Тогда
		
		CRM_ОбщегоНазначенияКлиент.ПоказатьНашеПредупреждение(Результат.Ошибка);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
