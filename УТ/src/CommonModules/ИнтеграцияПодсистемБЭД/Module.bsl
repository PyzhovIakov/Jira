// @strict-types

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// Обработка программных событий, возникающих в подсистемах БСП.
// Только для вызовов из библиотеки БСП в БЭД.

// @skip-check property-return-type
// Определяет события, на которые подписана эта библиотека.
// 
// Параметры:
//  Подписки - см. ИнтеграцияПодсистемБСП.СобытияБСП.
//
Процедура ПриОпределенииПодписокНаСобытияБСП(Подписки) Экспорт

	// ВнешниеКомпоненты
	Подписки.ПриОпределенииИспользуемыхВнешнихКомпонент = Истина;
	
	Подписки.ПриПериодическомПолученииДанныхКлиентаНаСервере = Истина;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// См. ИнтеграцияПодсистемБСП.ПриОпределенииИспользуемыхВнешнихКомпонент.
Процедура ПриОпределенииИспользуемыхВнешнихКомпонент(Компоненты) Экспорт 

	Если ОбщегоНазначения.ПодсистемаСуществует("ЭлектронноеВзаимодействие.ОбменСБанками") Тогда
		МодульОбменСБанкамиСлужебный = ОбщегоНазначения.ОбщийМодуль("ОбменСБанкамиСлужебный");
		МодульОбменСБанкамиСлужебный.ПриОпределенииИспользуемыхВнешнихКомпонент(Компоненты);
	КонецЕсли;

КонецПроцедуры

// См. ОбщегоНазначенияПереопределяемый.ПриПериодическомПолученииДанныхКлиентаНаСервере
Процедура ПриПериодическомПолученииДанныхКлиентаНаСервере(Параметры, Результаты) Экспорт
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЭлектронноеВзаимодействие.ОбменСКонтрагентами") Тогда
		МодульПодсистемы = ОбщегоНазначения.ОбщийМодуль("ОбменСКонтрагентамиИнтеграцияСобытия");
		МодульПодсистемы.ПриПериодическомПолученииДанныхКлиентаНаСервере(Параметры, Результаты);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти