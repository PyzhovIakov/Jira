
#Область ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции для стандартной обработки дополнительных реквизитов.

// Создает основные реквизиты и поля формы, необходимые для работы.
// Заполняет дополнительные реквизиты, если используются.
// Вызывается из обработчика ПриСозданииНаСервере формы объекта со свойствами.
// 
// Параметры:
//  Форма							- ФормаКлиентскогоПриложения - в которой будут отображаться дополнительные реквизиты.
//  ИмяЭлементаРазмещенияКоманды	- Строка - имя элемента размещения команды.
//  ДопИмяЭлементаРазмещенияКоманды - Строка - дополнительное имя элемента размещения команды.
//  ПостфиксФормы					- Строка - постфикс формы.
//
Процедура ПриСозданииНаСервере(Форма, ИмяЭлементаРазмещенияКоманды = "",
	 ДопИмяЭлементаРазмещенияКоманды = "",
	 ПостфиксФормы = "") Экспорт
	
	Если Форма.Параметры.Свойство("РасположениеЭлементовПоУмолчанию") Тогда
		Возврат;
	КонецЕсли;
	ОписаниеФормы = Неопределено;
	Если ОписаниеНастраиваемыхФорм().Свойство(СтрЗаменить(Форма.ИмяФормы, ".", "_"), ОписаниеФормы) Тогда
		
		РазместитьЭлементыПоНастройке(Форма, ОписаниеФормы, ПостфиксФормы);
		
		ДоступноРедактированиеРасположенияЭлементовФормы = РольДоступна("ПолныеПрава")
			 ИЛИ РольДоступна("CRM_НастройкаПрограммы");
		Если ДоступноРедактированиеРасположенияЭлементовФормы Тогда
			
			Если ЗначениеЗаполнено(ИмяЭлементаРазмещенияКоманды) Тогда
				ЭлементРазмещенияКоманды = Форма.Элементы.Найти(ИмяЭлементаРазмещенияКоманды);
				Если ЭлементРазмещенияКоманды = Неопределено Тогда
					Возврат;
				КонецЕсли;	
			Иначе 
				ЭлементРазмещенияКоманды = Форма.Элементы.Найти("КоманднаяПанельФормы");
				Если ЭлементРазмещенияКоманды = Неопределено Тогда
					Возврат;
				КонецЕсли;	
			КонецЕсли;
			
			Если Форма.Команды.Найти("НастроитьРасположениеЭлементовФормы") = Неопределено Тогда
				Команда = Форма.Команды.Добавить("НастроитьРасположениеЭлементовФормы");
				Команда.Действие = "Подключаемый_НастройкаРасположенияЭлементовФормы";
				
				КнопкаНастройки = Форма.Элементы.Добавить("НастроитьРасположениеЭлементовФормы",
					 Тип("КнопкаФормы"),
					 ЭлементРазмещенияКоманды);
				КнопкаНастройки.Заголовок = НСтр("ru='Настроить состав и расположение полей';
					|en='Set Up Composition and Field Location'");
				КнопкаНастройки.Картинка = БиблиотекаКартинок.CRM_НастройкиРабочийСтол;
				КнопкаНастройки.ИмяКоманды = "НастроитьРасположениеЭлементовФормы";
				КнопкаНастройки.ТолькоВоВсехДействиях = Истина;
				
				Если ЗначениеЗаполнено(ДопИмяЭлементаРазмещенияКоманды) Тогда
					ЭлементРазмещенияКоманды = Форма.Элементы.Найти(ДопИмяЭлементаРазмещенияКоманды);
					Если ЭлементРазмещенияКоманды <> Неопределено Тогда
						КнопкаНастройки = Форма.Элементы.Добавить("ДопНастроитьРасположениеЭлементовФормы",
							 Тип("КнопкаФормы"),
							 ЭлементРазмещенияКоманды);
						КнопкаНастройки.Заголовок = НСтр("ru='Настроить поля';en='Configure Fields'");
						КнопкаНастройки.ИмяКоманды = "НастроитьРасположениеЭлементовФормы";
						КнопкаНастройки.ЦветТекста = ЦветаСтиля.CRM_ОсновнойГолубой;
						КнопкаНастройки.ОтображениеФигуры = ОтображениеФигурыКнопки.Нет;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
				
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание настраиваемых форм.
//
// Параметры:
//	ЭтоПоддержка - Булево - признак поддержки.
//
// Возвращаемое значение:
//	Структура - описания форм.
Функция ОписаниеНастраиваемыхФорм(ЭтоПоддержка = Ложь) Экспорт
	
	ОписанияФорм = Новый Структура;	
	
	// Новая форма интереса
	#Область НоваяФормаИнтереса
	
	ОписаниеФормы = Новый Структура;
	
	МассивОбластей = Новый Массив;
	МассивОбластей.Добавить("ГруппаОсновное");
	МассивОбластей.Добавить("ГруппаДополнительно");
	ОписаниеФормы.Вставить("МассивОбластей", МассивОбластей);
	
	МассивИсключаемыхЭлементов = Новый Массив;
	МассивИсключаемыхЭлементов.Добавить("Ссылка");
	МассивИсключаемыхЭлементов.Добавить("ДекорацияАвторДата");
	МассивИсключаемыхЭлементов.Добавить("ГруппаДополнительныеРеквизиты");
	МассивИсключаемыхЭлементов.Добавить("Декорация10");
	МассивИсключаемыхЭлементов.Добавить("Декорация13");
	
	Если НЕ ПолучитьФункциональнуюОпцию("ФиксироватьПервичныйИнтерес") Тогда
		МассивИсключаемыхЭлементов.Добавить("ГруппаОбщиеСведенияИсточникСостояние");
	КонецЕсли;
	
	Если НЕ ПолучитьФункциональнуюОпцию("CRM_ИспользоватьТипыУслуг") Тогда
		МассивИсключаемыхЭлементов.Добавить("ТипУслуги");
	КонецЕсли;
	
	МассивИсключаемыхЭлементов.Добавить("ГруппаОбращение");
	Если ЭтоПоддержка Тогда
		МассивИсключаемыхЭлементов.Добавить("ГруппаВыручка");
	КонецЕсли;
	
	Если НЕ CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
		ИмяФО = "ИспользоватьСделкиСКлиентами";
		Если НЕ ПолучитьФункциональнуюОпцию(ИмяФО) Тогда
			МассивИсключаемыхЭлементов.Добавить("СделкаСКлиентом");
		КонецЕсли;
	КонецЕсли;
	
	ОписаниеФормы.Вставить("МассивИсключаемыхЭлементов", МассивИсключаемыхЭлементов);
	
	СписокНаборовДопРеквизитов = Новый СписокЗначений;
	Выборка = Справочники.НаборыДополнительныхРеквизитовИСведений.Выбрать(
			УправлениеСвойствами.НаборСвойствПоИмени("Документ_CRM_Интерес"));
	Пока Выборка.Следующий() Цикл
		СписокНаборовДопРеквизитов.Добавить(Выборка.Ссылка);
	КонецЦикла;
	ОписаниеФормы.Вставить("СписокНаборовДопРеквизитов", СписокНаборовДопРеквизитов);
	ОписаниеФормы.Вставить("ИмяЭлементаПередКоторымВставлять", "ГруппаСвязанныеСписки");
	
	ОписанияФорм.Вставить(СтрЗаменить("Документ.CRM_Интерес.Форма.ФормаДокументаНовая", ".", "_"), ОписаниеФормы);	
	
	#КонецОбласти
	
	#Область ПартнерыФормаЭлементаНовая
	
	Если CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
		
		ОписаниеФормы = Новый Структура;
		
		МассивОбластей = Новый Массив;
		МассивОбластей.Добавить("ГруппаСведения");
		МассивОбластей.Добавить("ГруппаДополнительно");
		ОписаниеФормы.Вставить("МассивОбластей", МассивОбластей);
		
		МассивИсключаемыхЭлементов = Новый Массив;
		МассивИсключаемыхЭлементов.Добавить("Ссылка");
		МассивИсключаемыхЭлементов.Добавить("ДекорацияАвторДата");
		МассивИсключаемыхЭлементов.Добавить("ГруппаДополнительныеРеквизиты");
		МассивИсключаемыхЭлементов.Добавить("Декорация10");
		МассивИсключаемыхЭлементов.Добавить("Декорация13");
		
		Если НЕ ПолучитьФункциональнуюОпцию("ФиксироватьПервичныйИнтерес") Тогда
			МассивИсключаемыхЭлементов.Добавить("ГруппаПервичныйИнтерес");
		КонецЕсли;
		
		ОписаниеФормы.Вставить("МассивИсключаемыхЭлементов", МассивИсключаемыхЭлементов);
		
		СписокНаборовДопРеквизитов = Новый СписокЗначений;
		СписокНаборовДопРеквизитов.Добавить(УправлениеСвойствами.НаборСвойствПоИмени("Справочник_Партнеры_Общие"));
		СписокНаборовДопРеквизитов.Добавить(УправлениеСвойствами.НаборСвойствПоИмени("Справочник_Партнеры_Компании_CRM"));
		СписокНаборовДопРеквизитов.Добавить(УправлениеСвойствами.НаборСвойствПоИмени("Справочник_Партнеры_ЧастныеЛица_CRM"));
		ОписаниеФормы.Вставить("СписокНаборовДопРеквизитов", СписокНаборовДопРеквизитов);
		ОписаниеФормы.Вставить("ИмяЭлементаПередКоторымВставлять", "ГруппаСвязанныеСписки");
		
		ОписанияФорм.Вставить(СтрЗаменить("Справочник.Партнеры.Форма.CRM_ФормаЭлементаНовая", ".", "_"), ОписаниеФормы);
		
	Иначе
		
		ОписаниеФормы = Новый Структура;
		
		МассивОбластей = Новый Массив;
		МассивОбластей.Добавить("ГруппаСведения");
		МассивОбластей.Добавить("ГруппаДополнительно");
		ОписаниеФормы.Вставить("МассивОбластей", МассивОбластей);
		
		МассивИсключаемыхЭлементов = Новый Массив;
		МассивИсключаемыхЭлементов.Добавить("Ссылка");
		МассивИсключаемыхЭлементов.Добавить("ДекорацияАвторДата");
		МассивИсключаемыхЭлементов.Добавить("ГруппаДополнительныеРеквизиты");
		МассивИсключаемыхЭлементов.Добавить("ГруппаОтношения");
		МассивИсключаемыхЭлементов.Добавить("ГруппаОтношенияДополнительно");
		МассивИсключаемыхЭлементов.Добавить("Декорация10");
		МассивИсключаемыхЭлементов.Добавить("Декорация13");
		
		
		Если НЕ ПолучитьФункциональнуюОпцию("ФиксироватьПервичныйИнтерес") Тогда
			МассивИсключаемыхЭлементов.Добавить("ГруппаПервичныйИнтерес");
		КонецЕсли;
		
		ИмяФО = "ИспользоватьГруппыДоступаПартнеров";
		Если НЕ ПолучитьФункциональнуюОпцию(ИмяФО) Тогда
			МассивИсключаемыхЭлементов.Добавить("ГруппаДоступа");
		КонецЕсли;
		
		ОписаниеФормы.Вставить("МассивИсключаемыхЭлементов", МассивИсключаемыхЭлементов);
		
		СписокНаборовДопРеквизитов = Новый СписокЗначений;
		СписокНаборовДопРеквизитов.Добавить(УправлениеСвойствами.НаборСвойствПоИмени("Справочник_Партнеры_Общие"));
		СписокНаборовДопРеквизитов.Добавить(УправлениеСвойствами.НаборСвойствПоИмени("Справочник_Партнеры_Компании_CRM"));
		СписокНаборовДопРеквизитов.Добавить(УправлениеСвойствами.НаборСвойствПоИмени("Справочник_Партнеры_ЧастныеЛица_CRM"));
		ОписаниеФормы.Вставить("СписокНаборовДопРеквизитов", СписокНаборовДопРеквизитов);
		ОписаниеФормы.Вставить("ИмяЭлементаПередКоторымВставлять", "ГруппаСвязанныеСписки");
		
		ОписанияФорм.Вставить(СтрЗаменить("Справочник.Партнеры.Форма.CRM_Модуль_ФормаЭлементаРеквизитыКонтрагентаНовая",
			 ".", "_"),
			 ОписаниеФормы);
		
	КонецЕсли;		
	
	#КонецОбласти
	
	#Область КонтактныеЛицаФормаЭлементаНовая

	ОписаниеФормы = Новый Структура;

	МассивОбластей = Новый Массив;
	МассивОбластей.Добавить("ГруппаСведения");
	МассивОбластей.Добавить("ГруппаДополнительно");
	ОписаниеФормы.Вставить("МассивОбластей", МассивОбластей);
	
	МассивИсключаемыхЭлементов = Новый Массив;
	МассивИсключаемыхЭлементов.Добавить("Ссылка");
	МассивИсключаемыхЭлементов.Добавить("ДекорацияАвторДата");
	МассивИсключаемыхЭлементов.Добавить("ГруппаДополнительныеРеквизиты");
	
	ОписаниеФормы.Вставить("МассивИсключаемыхЭлементов", МассивИсключаемыхЭлементов);
	
	СписокНаборовДопРеквизитов = Новый СписокЗначений;
	СписокНаборовДопРеквизитов.Добавить(УправлениеСвойствами.НаборСвойствПоИмени("Справочник_КонтактныеЛицаПартнеров"));
	ОписаниеФормы.Вставить("СписокНаборовДопРеквизитов", СписокНаборовДопРеквизитов);
	ОписаниеФормы.Вставить("ИмяЭлементаПередКоторымВставлять", "ГруппаСвязанныеСписки");
	
	ОписанияФорм.Вставить(СтрЗаменить("Справочник.КонтактныеЛицаПартнеров.Форма.CRM_ФормаЭлементаНовая",
		 ".", "_"),
		 ОписаниеФормы);
	
	#КонецОбласти
	
	#Область CRM_ПотенциальныеКлиентыФормаЭлемента

	ОписаниеФормы = Новый Структура;

	МассивОбластей = Новый Массив;
	МассивОбластей.Добавить("ГруппаСведения");
	МассивОбластей.Добавить("ГруппаДополнительно");
	ОписаниеФормы.Вставить("МассивОбластей", МассивОбластей);
	
	МассивИсключаемыхЭлементов = Новый Массив;
	МассивИсключаемыхЭлементов.Добавить("Ссылка");
	МассивИсключаемыхЭлементов.Добавить("ДекорацияАвторДата");
	МассивИсключаемыхЭлементов.Добавить("ГруппаДополнительныеРеквизиты");
	
	ОписаниеФормы.Вставить("МассивИсключаемыхЭлементов", МассивИсключаемыхЭлементов);
	
	СписокНаборовДопРеквизитов = Новый СписокЗначений;
	СписокНаборовДопРеквизитов.Добавить(УправлениеСвойствами.НаборСвойствПоИмени("Справочник_CRM_ПотенциальныеКлиенты"));
	ОписаниеФормы.Вставить("СписокНаборовДопРеквизитов", СписокНаборовДопРеквизитов);
	ОписаниеФормы.Вставить("ИмяЭлементаПередКоторымВставлять", "ГруппаНиз");
	
	ОписанияФорм.Вставить(СтрЗаменить("Справочник.CRM_ПотенциальныеКлиенты.Форма.ФормаЭлемента", ".", "_"), ОписаниеФормы);
	
	#КонецОбласти
	
	Для каждого ОписаниеФормы Из ОписанияФорм Цикл
		ОписаниеФормы.Значение.МассивИсключаемыхЭлементов.Добавить("ДопНастроитьРасположениеЭлементовФормы");
	КонецЦикла;
	
	Возврат ОписанияФорм;
	
КонецФункции

// Размещает элементы по настройке.
//
// Параметры:
//  Форма		  - ФормаКлиентскогоПриложения - в которой будут отображаться дополнительные реквизиты.
//	ОписаниеФормы - Структура - описание формы.
//	ПостфиксФормы - Строка - постфикс формы.
//
Процедура РазместитьЭлементыПоНастройке(Форма, ОписаниеФормы = Неопределено, ПостфиксФормы = "") Экспорт
	
	Если ОписаниеФормы = Неопределено Тогда
		ОписаниеНастраиваемыхФорм().Свойство(СтрЗаменить(Форма.ИмяФормы, ".", "_"), ОписаниеФормы);
	КонецЕсли;

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Разделы.ИмяЭлемента КАК ИмяЭлемента,
	|	Разделы.ПорядокРасположения КАК ПорядокРасположения,
	|	Разделы.ЗаголовокЭлемента КАК ЗаголовокЭлемента
	|ИЗ
	|	РегистрСведений.CRM_НастройкиРасположенияЭлементовНаФормах КАК Разделы
	|ГДЕ
	|	Разделы.ИмяФормы = &ИмяФормы
	|	И Разделы.ИмяЭлемента = Разделы.ИмяЭлементаРазмещения
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПорядокРасположения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Элементы.ИмяЭлемента КАК ИмяЭлемента,
	|	Элементы.ИмяЭлементаРазмещения КАК ИмяЭлементаРазмещения,
	|	Элементы.ПорядокРасположения КАК ПорядокРасположения,
	|	Элементы.ЗаголовокЭлемента КАК ЗаголовокЭлемента,
	|	ТИПЗНАЧЕНИЯ(Элементы.ИмяЭлемента) <> ТИПЗНАЧЕНИЯ("""") КАК ЭтоДополнительныйРеквизит
	|ИЗ
	|	РегистрСведений.CRM_НастройкиРасположенияЭлементовНаФормах КАК Элементы
	|ГДЕ
	|	Элементы.ИмяФормы = &ИмяФормы
	|	И Элементы.ИмяЭлемента <> Элементы.ИмяЭлементаРазмещения
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПорядокРасположения");
	
	Запрос.УстановитьПараметр("ИмяФормы", Форма.ИмяФормы + ?(ПостфиксФормы = "", "", "_") + ПостфиксФормы);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	// Добавление разделов.
	ВыборкаРазделов = РезультатЗапроса[0].Выбрать();
	Если ВыборкаРазделов.Количество() > ОписаниеФормы.МассивОбластей.Количество() Тогда
		
		ВставлятьРазделыПередИмя = Неопределено;
		ОписаниеФормы.Свойство("ИмяЭлементаПередКоторымВставлять", ВставлятьРазделыПередИмя);
		ВставлятьРазделыПеред = Форма.Элементы.Найти(ВставлятьРазделыПередИмя);
		
		ГруппаРазделов = Форма.Элементы.Найти("ПользовательскиеРазделыДанных");
		Если ГруппаРазделов = Неопределено Тогда
			Если ВставлятьРазделыПеред = Неопределено Тогда
				ГруппаРазделов = Форма.Элементы.Добавить("ПользовательскиеРазделыДанных", Тип("ГруппаФормы"));
			Иначе
				ГруппаРазделов = Форма.Элементы.Вставить("ПользовательскиеРазделыДанных", Тип("ГруппаФормы"),
					 ВставлятьРазделыПеред.Родитель,
					 ВставлятьРазделыПеред);
			КонецЕсли;
			ГруппаРазделов.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			ГруппаРазделов.Отображение = ОтображениеОбычнойГруппы.Нет;
			ГруппаРазделов.ОтображатьЗаголовок = Ложь;
			ГруппаРазделов.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		КонецЕсли;
		
		Пока ВыборкаРазделов.Следующий() Цикл
			
			ИмяЭлемента = ВыборкаРазделов.ИмяЭлемента;
			ЭлементРазмещения = Форма.Элементы.Найти(ИмяЭлемента);
			
			Если ЭлементРазмещения = Неопределено Тогда
				
				ЭлементРазмещенияКонтейнер = Форма.Элементы.Добавить(
					"Контейнер_" + ИмяЭлемента,
					Тип("ГруппаФормы"),
					ГруппаРазделов);
				ЭлементРазмещенияКонтейнер.Вид = ВидГруппыФормы.ОбычнаяГруппа;
				ЭлементРазмещенияКонтейнер.Отображение = ОтображениеОбычнойГруппы.Нет;
				ЭлементРазмещенияКонтейнер.ОтображатьЗаголовок = Ложь;
				ЭлементРазмещенияКонтейнер.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
				
				ИмяКомандыПереключения = "КомандаПереключить_" + ИмяЭлемента;
				КомандаПереключения = Форма.Команды.Добавить(ИмяКомандыПереключения);
				КомандаПереключения.Заголовок = ВыборкаРазделов.ЗаголовокЭлемента;
				КомандаПереключения.Картинка = БиблиотекаКартинок.СтрелкаВправо;
				КомандаПереключения.Действие = "Подключаемый_ВыполнитьПереопределяемуюКоманду";
				
				КнопкаПереключения = Форма.Элементы.Добавить(
					ИмяКомандыПереключения,
					Тип("КнопкаФормы"),
					ЭлементРазмещенияКонтейнер);
				КнопкаПереключения.Вид = ВидКнопкиФормы.Гиперссылка;
				КнопкаПереключения.ИмяКоманды = ИмяКомандыПереключения;
				КнопкаПереключения.ЦветТекста = ЦветаСтиля.CRM_ОсновнойГолубой;
				
				ЭлементРазмещения = Форма.Элементы.Добавить(
					ИмяЭлемента,
					Тип("ГруппаФормы"),
					ЭлементРазмещенияКонтейнер);
				ЭлементРазмещения.Заголовок = ВыборкаРазделов.ЗаголовокЭлемента;
				ЭлементРазмещения.Вид = ВидГруппыФормы.ОбычнаяГруппа;
				ЭлементРазмещения.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
				//ЭлементРазмещения.ОтображениеУправления = ОтображениеУправленияОбычнойГруппы.Картинка;
				//ЭлементРазмещения.Поведение = ПоведениеОбычнойГруппы.Свертываемая;
				ЭлементРазмещения.Отображение = ОтображениеОбычнойГруппы.Нет;
				ЭлементРазмещения.ОтображатьЗаголовок = Ложь;
				//ЭлементРазмещения.ЦветТекстаЗаголовка = ЦветаСтиля.CRM_ЧерныйЦветТекста;
				//ЭлементРазмещения.Скрыть();
				ЭлементРазмещения.Видимость = Ложь;
				
				Декорация = Форма.Элементы.Добавить(
					"Декорация" + ИмяЭлемента,
					Тип("ДекорацияФормы"),
					ГруппаРазделов);
				Декорация.Вид = ВидДекорацииФормы.Надпись;
				Декорация.Высота = 1;
				Декорация.Шрифт = Новый Шрифт(, 1);
				Декорация.ЦветРамки = Новый Цвет(199, 199, 199);
				Декорация.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.ЧертаСверху, 1);
				Декорация.РастягиватьПоГоризонтали = Истина;
				Декорация.РастягиватьПоВертикали = Ложь;
				Декорация.АвтоМаксимальнаяШирина = Ложь;
				
			Иначе
				ЭлементРазмещения.Заголовок = ВыборкаРазделов.ЗаголовокЭлемента;
				КнопкаПереключения = Форма.Элементы.Найти("КомандаПереключить_" + ИмяЭлемента);
				Если КнопкаПереключения <> Неопределено Тогда
					КнопкаПереключения.Заголовок = ВыборкаРазделов.ЗаголовокЭлемента;
				КонецЕсли;
			КонецЕсли;
			
			Если ОписаниеФормы.МассивОбластей.Найти(ИмяЭлемента) = Неопределено Тогда
				Если ВыборкаРазделов.ПорядокРасположения >= ГруппаРазделов.ПодчиненныеЭлементы.Количество() Тогда
				Иначе
					ПередЭлементом = ГруппаРазделов.ПодчиненныеЭлементы[ВыборкаРазделов.ПорядокРасположения - 1];
					ЭлементРазмещенияКонтейнер = Форма.Элементы.Найти("Контейнер_" + ИмяЭлемента);
					Если ЭлементРазмещенияКонтейнер <> ПередЭлементом Тогда
						Форма.Элементы.Переместить(ЭлементРазмещенияКонтейнер, ГруппаРазделов, ПередЭлементом);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	// Размещение полей в разделы.
	ВыборкаЭлементов = РезультатЗапроса[1].Выбрать();
	Пока ВыборкаЭлементов.Следующий() Цикл
		
		ИмяЭлементаРазмещения = ВыборкаЭлементов.ИмяЭлементаРазмещения;
		
		Если ТипЗнч(ВыборкаЭлементов.ИмяЭлемента) = Тип("Строка") Тогда
			Элемент = Форма.Элементы.Найти(ВыборкаЭлементов.ИмяЭлемента);
		Иначе
			Элемент = Неопределено;
			Если Форма.Свойства_ИспользоватьСвойства И Форма.Свойства_ИспользоватьДопРеквизиты Тогда
				ОписаниеДопРеквизитов = Форма.Свойства_ОписаниеДополнительныхРеквизитов.НайтиСтроки(Новый Структура("Свойство",
					 ВыборкаЭлементов.ИмяЭлемента));
				Если ОписаниеДопРеквизитов.Количество() <> 0 Тогда
					Элемент = CRM_УправлениеСвойствами.ЭлементДопРеквизита(Форма, ОписаниеДопРеквизитов[0]);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		ЭлементРазмещения = Форма.Элементы.Найти(ИмяЭлементаРазмещения);
		
		Если Элемент <> Неопределено И ЭлементРазмещения <> Неопределено 
			И (ТипЗнч(ВыборкаЭлементов.ИмяЭлемента) <> Тип("Строка") 
			ИЛИ ОписаниеФормы.МассивОбластей.Найти(Элемент.Родитель.Имя) <> Неопределено
			ИЛИ СтрНайти(Элемент.Родитель.Имя, "ПользовательскийРаздел")) = 1 Тогда
			Если ВыборкаЭлементов.ПорядокРасположения >= ЭлементРазмещения.ПодчиненныеЭлементы.Количество() Тогда
				Форма.Элементы.Переместить(Элемент, ЭлементРазмещения);
			Иначе
				ПередЭлементом = ЭлементРазмещения.ПодчиненныеЭлементы[ВыборкаЭлементов.ПорядокРасположения - 1];
				Если Элемент <> ПередЭлементом Тогда
					Форма.Элементы.Переместить(Элемент, ЭлементРазмещения, ПередЭлементом);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ВыборкаРазделов.Сбросить();
	Пока ВыборкаРазделов.Следующий() Цикл
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("ИмяЭлементаРазмещения", ВыборкаРазделов.ИмяЭлемента);
		СтруктураПоиска.Вставить("ЭтоДополнительныйРеквизит", Истина);
		ВыборкаЭлементов.Сбросить();
		ВывестиРазделПринудительно = ВыборкаЭлементов.НайтиСледующий(СтруктураПоиска);
		
		ЭлементРазмещения = Форма.Элементы.Найти(ВыборкаРазделов.ИмяЭлемента);
		
		Декорация = Форма.Элементы.Найти("Декорация" + ВыборкаРазделов.ИмяЭлемента);
		Если Декорация <> Неопределено Тогда
			Декорация.Видимость = ВывестиРазделПринудительно Или (ЭлементРазмещения.ПодчиненныеЭлементы.Количество() > 0);
		КонецЕсли;
		
		КнопкаПереключения = Форма.Элементы.Найти("КомандаПереключить_" + ВыборкаРазделов.ИмяЭлемента);
		Если КнопкаПереключения <> Неопределено Тогда
			КнопкаПереключения.Видимость = ВывестиРазделПринудительно Или (ЭлементРазмещения.ПодчиненныеЭлементы.Количество() > 0);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ЕстьДополнительныеСвойстваВОбластиОсновное(ИмяФормы, ПостфиксФормы) Экспорт
	
	ЭтоПоддержка = ПостфиксФормы = "_Поддержка";
	
	ОписаниеФормы = Неопределено;
	
	ОписанияФорм = ОписаниеНастраиваемыхФорм(ЭтоПоддержка);
	КлючФормы = СтрЗаменить(ИмяФормы, ".", "_");
	
	Если Не ОписанияФорм.Свойство(КлючФормы, ОписаниеФормы) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НастройкиРасположения.ИмяЭлемента КАК ИмяЭлемента
	|ИЗ
	|	РегистрСведений.CRM_НастройкиРасположенияЭлементовНаФормах КАК НастройкиРасположения
	|ГДЕ
	|	НастройкиРасположения.ИмяФормы = &ИмяФормы
	|	И НастройкиРасположения.ИмяЭлементаРазмещения = &ИмяОбласти
	|	И ТИПЗНАЧЕНИЯ(НастройкиРасположения.ИмяЭлемента) <> ТИПЗНАЧЕНИЯ("""")");
	
	Запрос.УстановитьПараметр("ИмяОбласти", "ГруппаОсновное");
	Запрос.УстановитьПараметр("ИмяФормы", ИмяФормы + ПостфиксФормы);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой();
	
КонецФункции

#КонецОбласти
