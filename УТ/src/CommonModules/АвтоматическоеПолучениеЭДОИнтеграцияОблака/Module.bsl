// @strict-types

#Область СлужебныйПрограммныйИнтерфейс

// Параметры:
//  ПакетМетодов - См. ИнтеграцияОблачногоЭДО.НовыйПакетМетодовСервиса
//  ПараметрыОперации - См. ЭлектронныеДокументыЭДОИнтеграцияОблака.НовыеПараметрыОперацииПоДействиямЭДО
Процедура ДобавитьОписаниеМетодаПолученияЧерезИнтервал(ПакетМетодов, ПараметрыОперации) Экспорт
	
	// См. ПрограммныйИнтерфейсОблачногоЭДОВерсия1.ПолучитьЭДОЧерезИнтервал
	ОписаниеМетода = ИнтеграцияОблачногоЭДО.ОписаниеМетодаСервиса("ПолучитьЭДОЧерезИнтервал",
		ПараметрыОперации.МаркерыАвторизации);
	ИдентификаторМетода = ИдентификаторМетодаПолученияЧерезИнтервал();
	ИнтеграцияОблачногоЭДО.ДобавитьОписаниеМетодаВПакет(ПакетМетодов, ОписаниеМетода, ИдентификаторМетода);
	
КонецПроцедуры

// Параметры:
//  ИдентификаторыЭДО - Массив из Строка
//  РасшифрованныеМаркеры - См. УчетныеЗаписиЭДОИнтеграцияОблака.МаркерыАвторизацииИзРасшифрованныхМаркеров.РасшифрованныеМаркеры
// 
// Возвращаемое значение:
//  См. АвтоматическоеПолучениеЭДО.НовыйРезультатВключенияИспользованияКлючаДоступаКСервисуЭДО
Функция ВключитьИспользованиеКлючаДоступаКСервисуЭДО(ИдентификаторыЭДО, РасшифрованныеМаркеры) Экспорт
	
	Результат = АвтоматическоеПолучениеЭДО.НовыйРезультатВключенияИспользованияКлючаДоступаКСервисуЭДО();

	МаркерыАвторизации = УчетныеЗаписиЭДОИнтеграцияОблака.МаркерыАвторизацииИзРасшифрованныхМаркеров(РасшифрованныеМаркеры);
	Если Не ЗначениеЗаполнено(МаркерыАвторизации) Тогда
		ДобавитьОшибкуВключенияИспользованияКлючаДоступаКСервисуЭДО(Результат.КонтекстДиагностики, НСтр(
			"ru = 'Не указан маркер для авторизации в сервисе ЭДО'"));
		Возврат Результат;
	КонецЕсли;
	
	ИдентификатрыПоУчетнымЗаписям = РегистрыСведений.НастройкиОблачногоЭДО.СгруппироватьПоУчетнымЗаписям(
		ИдентификаторыЭДО);
		
	ТекущийПользовательДляЗапроса = Пользователи.ТекущийПользователь();
	Для Каждого КлючЗначение Из ИдентификатрыПоУчетнымЗаписям Цикл
		УчетнаяЗаписьОблачногоЭДО = КлючЗначение.Ключ;
		ИдентификаторыЭДОУчетнойЗаписи = КлючЗначение.Значение;

		ПараметрыВыполнения = ИнтеграцияОблачногоЭДОПовтИсп.ПараметрыВыполненияМетодаСервиса(
			УчетнаяЗаписьОблачногоЭДО, 
			ТекущийПользовательДляЗапроса);
		
		МаркерыАвторизацииУчетнойЗаписи = МаркерыАвторизацииУчетныхЗаписейЭДО(
			МаркерыАвторизации,
			 ИдентификаторыЭДОУчетнойЗаписи);
			 
		ОписаниеМетода = ИнтеграцияОблачногоЭДО.ОписаниеМетодаСервиса(
			"ВключитьИспользованиеКлючаДоступаКСервисуЭДО",
			ИдентификаторыЭДОУчетнойЗаписи,
			МаркерыАвторизацииУчетнойЗаписи);
		
		РезультатВключения = ИнтеграцияОблачногоЭДО.ВыполнитьМетодСервиса(ПараметрыВыполнения, 
			ОписаниеМетода,
			Результат.КонтекстДиагностики); // См. АвтоматическоеПолучениеЭДОВОблаке.ВключитьИспользованиеКлючаДоступаКСервисуЭДО
			
		Если РезультатВключения <> Неопределено Тогда
			
			СостоянияВключенияИдентификаторовЭДО = РезультатВключения.СостоянияВключенияИдентификаторовЭДО;
			Для Каждого СостояниеВключения Из СостоянияВключенияИдентификаторовЭДО Цикл
				СостояниеПолучения = РегистрыСведений.СостоянияАвтоматическогоПолученияЭДО.НовоеСостояниеПолучения();
				ЗаполнитьЗначенияСвойств(СостояниеПолучения, СостояниеВключения);
				Результат.СостояниеПоИдентификаторамЭДО.Вставить(СостояниеВключения.ИдентификаторЭДО, СостояниеПолучения);
			КонецЦикла;
			
			Для Каждого ОшибкаВключения Из РезультатВключения.Ошибки Цикл
				ДобавитьОшибкуВключенияИспользованияКлючаДоступаКСервисуЭДО(
					Результат.КонтекстДиагностики, 
					ОшибкаВключения, 
					УчетнаяЗаписьОблачногоЭДО);
			КонецЦикла;
		
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Параметры:
//  МаркерыАвторизации - См. УчетныеЗаписиЭДОИнтеграцияОблака.МаркерыАвторизацииИзРасшифрованныхМаркеров
//  ИдентификаторыЭДОУчетнойЗаписи - Массив Из Строка
// 
// Возвращаемое значение:
//  См. УчетныеЗаписиЭДОИнтеграцияОблака.МаркерыАвторизацииИзРасшифрованныхМаркеров
Функция МаркерыАвторизацииУчетныхЗаписейЭДО(МаркерыАвторизации, ИдентификаторыЭДОУчетнойЗаписи)
	Результат = Новый Массив;// См. УчетныеЗаписиЭДОИнтеграцияОблака.МаркерыАвторизацииИзРасшифрованныхМаркеров

	Для Каждого МаркерАвторизации Из МаркерыАвторизации Цикл
		Если ИдентификаторыЭДОУчетнойЗаписи.Найти(МаркерАвторизации.ИдентификаторУчетнойЗаписиЭДО) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Результат.Добавить(МаркерАвторизации);
	КонецЦикла;
	Возврат Результат;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращаемое значение:
//  Строка
Функция ИдентификаторМетодаПолученияЧерезИнтервал()
	Возврат "ПолучитьЧерезИнтервал";
КонецФункции

// Параметры:
//  КонтекстДиагностики - см. ОбработкаНеисправностейБЭД.НовыйКонтекстДиагностики
//  ТекстОшибки - Строка
//  УчетнаяЗаписьОблачногоЭДО - Неопределено, СправочникСсылка.УчетныеЗаписиОблачногоЭДО
Процедура ДобавитьОшибкуВключенияИспользованияКлючаДоступаКСервисуЭДО(КонтекстДиагностики, ТекстОшибки,
	УчетнаяЗаписьОблачногоЭДО = Неопределено)
	
	ИнтеграцияОблачногоЭДО.ДобавитьНеизвестнуюОшибку(КонтекстДиагностики,
		ВидОперацииВключениеИспользованияКлючаДоступаКСервисуЭДО(), ТекстОшибки);
КонецПроцедуры

#Область ВидыОпераций

// Возвращаемое значение:
//  Строка
Функция ВидОперацииВключениеИспользованияКлючаДоступаКСервисуЭДО() Экспорт
	Возврат НСтр("ru = 'Включение использования ключа доступа к сервису ЭДО'");
КонецФункции

#КонецОбласти

#КонецОбласти
