
#Область СлужебныйПрограммныйИнтерфейс

// Возвращает признак необходимости обработки строк табличной части на сервере.
// 
// Параметры:
//  ТекущаяСтрока - см. ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ.ТекущаяСтрока
//  СтруктураДействий - см. ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьСтрокиТЧ.СтруктураДействий
//  КэшированныеЗначения - см. ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения
//
// Возвращаемое значение:
//  Булево - Необходим вызов сервера
Функция НеобходимВызовСервера(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт

	//++ Локализация
	
	Если СтруктураДействий.Свойство("ЗаполнитьСчетФактуруПолученнуюВОтчетеКомитентуОЗакупках")
		И ЗначениеЗаполнено(ТекущаяСтрока.ДокументПриобретения) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьСчетФактуруПеревыставленнуюВОтчетеКомитентуОЗакупках")
		И ЗначениеЗаполнено(ТекущаяСтрока.ДокументПриобретения) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьДанныеПоДокументуПриобретенияВОтчетеКомитентуОЗакупках") Тогда
		Возврат Истина;
	КонецЕсли;	
	
	Если СтруктураДействий.Свойство("ЗаполнитьВидПродукцииИС")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьАлкогольнуюПродукцию")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПродукциюВЕТИС")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	УпаковкаНоменклатура = Неопределено;
	Если СтруктураДействий.Свойство("ПересчитатьКоличествоЕдиницВЕТИС", УпаковкаНоменклатура)
		Или СтруктураДействий.Свойство("ПересчитатьКоличествоЕдиницПоВЕТИС", УпаковкаНоменклатура) Тогда
		
		ПараметрыПересчета = ПакетнаяОбработкаТабличнойЧастиКлиентСервер.НормализоватьПараметрыПересчетаЕдиниц(ТекущаяСтрока, УпаковкаНоменклатура);
		
		КлючКоэффициента = ПакетнаяОбработкаТабличнойЧастиКлиентСервер.КлючКэшаУпаковки(ПараметрыПересчета.Номенклатура, ПараметрыПересчета.Упаковка);
		
		Если ЗначениеЗаполнено(ПараметрыПересчета.Упаковка)
			И ЗначениеЗаполнено(ПараметрыПересчета.Номенклатура)
			И КэшированныеЗначения.КоэффициентыУпаковок[КлючКоэффициента] = Неопределено Тогда
			
			Возврат Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьКодОКПД2")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	УпаковкаНоменклатура = Неопределено;
	Если СтруктураДействий.Свойство("ПересчитатьКоличествоЕдиницПоЗЕРНО", УпаковкаНоменклатура) Тогда
		
		ПараметрыПересчета = ПакетнаяОбработкаТабличнойЧастиКлиентСервер.НормализоватьПараметрыПересчетаЕдиниц(ТекущаяСтрока, УпаковкаНоменклатура);
		
		Если ЗначениеЗаполнено(ПараметрыПересчета.Упаковка)
			И ЗначениеЗаполнено(ПараметрыПересчета.Номенклатура)
			И КэшированныеЗначения.КоэффициентыУпаковок[ПараметрыПересчета.Номенклатура] = Неопределено Тогда
			
			Возврат Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПродукциюСАТУРН")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если (СтруктураДействий.Свойство("ПересчитатьТипИзмеряемойВеличиныСАТУРН")
			Или СтруктураДействий.Свойство("ПересчитатьКоличествоДляСАТУРН"))
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура)
		И ПакетнаяОбработкаТабличнойЧастиКлиентСерверЛокализация.ДанныеУпаковкиСАТУРНИзКэшированныхЗначений(
			ТекущаяСтрока.Номенклатура, ТекущаяСтрока.Упаковка, КэшированныеЗначения) = Неопределено Тогда
		Возврат Истина;
	КонецЕсли;
	//-- Локализация

	Возврат Ложь;
	
КонецФункции

Процедура ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт

	//++ Локализация
	
	АкцизныеМаркиКлиентСервер.ЗаполнитьИндексАкцизнойМаркиДляСтрокиТабличнойЧасти(ТекущаяСтрока, СтруктураДействий);
	
	ПакетнаяОбработкаТабличнойЧастиКлиентЛокализация.ПересчитатьКоличествоЕдиницВЕТИСВСтрокеТЧ(
		ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентЛокализация.ПересчитатьКоличествоЕдиницПоВЕТИСВСтрокеТЧ(
		ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСерверЛокализация.ПересчитатьКоличествоЕдиницПоЗЕРНОВСтрокеТЧ(
		ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСерверЛокализация.ПересчитатьТипИзмеряемойВеличиныСАТУРН(
		ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСерверЛокализация.ПересчитатьКоличествоДляСАТУРН(
		ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	//-- Локализация
	
КонецПроцедуры

Процедура ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт
	
	//++ Локализация
	
	Если СтруктураДействий.Свойство("ЗаполнитьВидПродукцииИС") Тогда
		ТекущаяСтрока.МаркируемаяПродукция = Ложь;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьВидПродукцииИС") Тогда
		ТекущаяСтрока.ВидПродукцииИС = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.ПустаяСсылка");
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакПодакцизныйТовар") Тогда
		ТекущаяСтрока.ПодакцизныйТовар = Ложь;
	КонецЕсли;
	
	//-- Локализация
	Возврат;
	
КонецПроцедуры

//++ Локализация

// Пересчитывает количество товара ВЕТИС в текущей строке табличной части документа.
//
// Параметры:
//	ТекущаяСтрока - см. ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ.ТекущаяСтрока
//	СтруктураДействий - см. ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьСтрокиТЧ.СтруктураДействий
//	КэшированныеЗначения - см. ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения
//
Процедура ПересчитатьКоличествоЕдиницВЕТИСВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт
	
	Перем ТекстОшибки;
	Перем ПараметрыПересчетаКоличестваВЕТИС;
	
	Если СтруктураДействий.Свойство("ПересчитатьКоличествоЕдиницВЕТИС", ПараметрыПересчетаКоличестваВЕТИС) Тогда
		
		ПараметрыПересчета = ПакетнаяОбработкаТабличнойЧастиКлиентСервер.НормализоватьПараметрыПересчетаЕдиниц(ТекущаяСтрока, ПараметрыПересчетаКоличестваВЕТИС);
		
		КоличествоВЕТИС = ИнтеграцияВЕТИСУТКлиентСервер.ПересчитатьКоличествоЕдиницВЕТИС(
											ТекущаяСтрока["Количество"+ПараметрыПересчетаКоличестваВЕТИС.Суффикс],
											ПараметрыПересчета.Номенклатура,
											ПараметрыПересчета.Упаковка,
											ПараметрыПересчета.НужноОкруглять,
											КэшированныеЗначения,
											ТекстОшибки);
		
		Если КоличествоВЕТИС <> Неопределено Тогда
			ИмяКоличестваВЕТИС = "Количество" + ПараметрыПересчетаКоличестваВЕТИС.Суффикс + "ВЕТИС";
			
			ТекущаяСтрока[ИмяКоличестваВЕТИС] = КоличествоВЕТИС;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТекстОшибки <> Неопределено Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
	КонецЕсли;
	
КонецПроцедуры

// Пересчитывает количество товара (в единицах хранения) в текущей строке табличной части документа.
//
// Параметры:
//	ТекущаяСтрока - см. ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ.ТекущаяСтрока
//	СтруктураДействий - см. ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьСтрокиТЧ.СтруктураДействий
//	КэшированныеЗначения - см. ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения
//
Процедура ПересчитатьКоличествоЕдиницПоВЕТИСВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт
	
	Перем ТекстОшибки;
	
	Перем ПараметрыПересчетаКоличества;
	
	Если СтруктураДействий.Свойство("ПересчитатьКоличествоЕдиницПоВЕТИС", ПараметрыПересчетаКоличества) Тогда
		
		ПараметрыПересчета = ПакетнаяОбработкаТабличнойЧастиКлиентСервер.НормализоватьПараметрыПересчетаЕдиниц(ТекущаяСтрока, ПараметрыПересчетаКоличества);
		ИмяКоличестваВЕТИС = "Количество" + ПараметрыПересчетаКоличества.Суффикс + "ВЕТИС";
		
		Количество = ИнтеграцияВЕТИСУТКлиентСервер.ПересчитатьКоличествоЕдиниц(
											ТекущаяСтрока[ИмяКоличестваВЕТИС],
											ПараметрыПересчета.Номенклатура,
											ПараметрыПересчета.Упаковка,
											ПараметрыПересчета.НужноОкруглять,
											КэшированныеЗначения,
											ТекстОшибки);
											
		Если Количество <> Неопределено Тогда
			ТекущаяСтрока["Количество" + ПараметрыПересчетаКоличества.Суффикс] = Количество;
		КонецЕсли; 
		
	КонецЕсли;
	
	Если ТекстОшибки <> Неопределено Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
	КонецЕсли; 
	
КонецПроцедуры

//-- Локализация

#КонецОбласти
