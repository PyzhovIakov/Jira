///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Подсистема "Маг1С"
// ОбщийМодуль.Маг1СКлиент
//
// Все клиентские процедуры и функции для работы с mag1c
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Обработчик команды запуска процедуры проверки наличия и установки расширения mag1c
// Можно использовать в командах, создаваемых в конфигурации
//
Процедура ОткрытьФормуМастераУстановитьРасширение() Экспорт
	ПараметрыБазы = Маг1СВызовСервера.ПараметрыБазы();
	ПараметрыБазы.Вставить("ПослеУстановки", "RunMag1cWizard"); 
	ПараметрыБазы.Вставить("ПослеУстановкиПараметр", Неопределено); 
	
	Если ПараметрыБазы.УжеУстановлено Тогда
		ОткрытьФормуМастера();
		ОбновитьИнтерфейс();
		Возврат;
	КонецЕсли;
	
	УстановитьРасширениеКлиент(ПараметрыБазы);
КонецПроцедуры

// Обработчик команды подключаемой команды - устанавливает расширение
//
Процедура УстановитьРасширениеПоПодключаемойКоманде(Ссылка, ПараметрыКоманды) Экспорт
	
	ПараметрыБазы = Маг1СВызовСервера.ПараметрыБазы();
	ПараметрыБазы.Вставить("ПослеУстановки", "RunMag1cPrintOrder"); 
	ПараметрыБазы.Вставить("ПослеУстановкиПараметр", Ссылка); 
	
	Если ПараметрыБазы.УжеУстановлено Тогда
		ОтработатьКомандуПечати(Ссылка);
		Возврат;
	КонецЕсли;
	
	УстановитьРасширениеКлиент(ПараметрыБазы);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ПриНачалеРаботыСистемы() Экспорт
	Если СтрНайти(ПараметрЗапуска, "RunMag1cWizard") <> 0 Тогда
		ОткрытьФормуМастера();
	ИначеЕсли СтрНайти(ПараметрЗапуска, "RunMag1cPrintOrder") <> 0 Тогда	
		Начало = СтрНайти(ПараметрЗапуска, "RunMag1cPrintOrder") + 1 + СтрДлина("RunMag1cPrintOrder");
		Окончание = СтрНайти(ПараметрЗапуска, "_",,Начало, 2);
		
		Ид = Сред(ПараметрЗапуска, Начало , Окончание - Начало);
		
		ЗаказСсылка = Маг1СВызовСервера.ЗаказПокупателяСсылка(Ид);
		
		ОтработатьКомандуПечати(ЗаказСсылка);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция МодульМаг1СИнтеграцияСлужебныйКлиент()
	Попытка
		МодульМаг1СИнтеграцияСлужебныйКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("Маг1СИнтеграцияСлужебныйКлиент");
	Исключение
		ПоказатьПредупреждение(,НСтр("ru = 'Расширение mag1c не запущено.'"));
		Возврат Неопределено;
	КонецПопытки;
	
	Возврат МодульМаг1СИнтеграцияСлужебныйКлиент;
КонецФункции

Процедура ОтработатьКомандуПечати(Ссылка)
	МодульМаг1СИнтеграцияСлужебныйКлиент = МодульМаг1СИнтеграцияСлужебныйКлиент();
	Если МодульМаг1СИнтеграцияСлужебныйКлиент <> Неопределено Тогда
		МодульМаг1СИнтеграцияСлужебныйКлиент.ОткрытьФормуВременнойСсылкиОбработкаКоманды(Ссылка, Неопределено);
	КонецЕсли;
КонецПроцедуры

Процедура ОткрытьФормуМастера()
	МодульМаг1СИнтеграцияСлужебныйКлиент = МодульМаг1СИнтеграцияСлужебныйКлиент();
	Если МодульМаг1СИнтеграцияСлужебныйКлиент <> Неопределено Тогда
		МодульМаг1СИнтеграцияСлужебныйКлиент.ОбработкаКомандыОткрытьФормуПолученияИнформацииПоПрофилю();
	КонецЕсли;
КонецПроцедуры

Функция ВерсияПлатформыПоддерживаетОбновлениеРасширений()
	
	Результат = Новый Структура("ВерсияПодходит, РекомендуемаяВерсия", Истина, "");
	
	СистемнаяИнформация = Новый СистемнаяИнформация;
	
	ВерсияПлатформы = СистемнаяИнформация.ВерсияПриложения;
	
	ЧастиВерсии = СтрРазделить(ВерсияПлатформы, ".");
	
	Если Число(ЧастиВерсии[2]) >= 17 Тогда
		Возврат Результат;
	КонецЕсли;
	
	Если Число(ЧастиВерсии[2]) < 15 Тогда
		Результат.ВерсияПодходит      = Ложь;
		Результат.РекомендуемаяВерсия = "8.3.17.1851";
		Возврат Результат;
	КонецЕсли;
	
	Если Число(ЧастиВерсии[2]) = 15 Тогда
		Если Число(ЧастиВерсии[3]) >= 1859 Тогда
			Возврат Результат;
		Иначе
			Результат.ВерсияПодходит      = Ложь;
			Результат.РекомендуемаяВерсия = "8.3.15.2107";
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;
	
	Если Число(ЧастиВерсии[2]) = 16 Тогда
		Если Число(ЧастиВерсии[3]) >= 1167 Тогда
			Возврат Результат;
		Иначе
			Результат.ВерсияПодходит      = Ложь;
			Результат.РекомендуемаяВерсия = "8.3.16.1814";
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура УстановитьРасширениеКлиент(ПараметрыБазы) 
	
	ВерсияПлатформыПодходит = ВерсияПлатформыПоддерживаетОбновлениеРасширений();
	
	Если Не ВерсияПлатформыПодходит.ВерсияПодходит Тогда
		ТекстПредупреждения = НСтр("ru = 'Для работы с сервисом mag1c необходимо обновить версию платформы 1С:Предприятие до версии %РекомендуемаяВерсия% или старше.'");
		ТекстПредупреждения = СтрЗаменить(ТекстПредупреждения,
											"%РекомендуемаяВерсия%",
											ВерсияПлатформыПодходит.РекомендуемаяВерсия);
			
		ПоказатьПредупреждение(,ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	Если ПараметрыБазы.АутентификацияИППВыполнена Тогда
		УстановитьРасширениеКлиентЗавершение(,ПараметрыБазы);	
	Иначе
		ОписаниеОповещения = Новый ОписаниеОповещения("УстановитьРасширениеКлиентЗавершение",
													  ЭтотОбъект,
													  ПараметрыБазы);
		ИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(ОписаниеОповещения);											  
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьРасширениеКлиентЗавершение(Результат = Истина, ПараметрыБазы = Неопределено) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДатаНачалаОперации = ТекущаяДата();
	
	РезультатУстановки = Маг1СВызовСервера.УстановитьРасширение(ПараметрыБазы); 
	
	ДатаОкончанияОперации = ТекущаяДата();
	
	СписокКнопок = Новый СписокЗначений;
	Тексты = Новый Массив;
	
	Если СтрНайти(НРег(ПараметрыБазы.СинонимЗаказа), НСтр("ru = 'счет'")) > 0 Тогда
		ТекстЗаказов  = НСтр("ru = 'счетов'");
		ТекстЗаказа   = НСтр("ru = 'счета'");
		ТекстЗаказы   = НСтр("ru = 'счета'");
	Иначе
		ТекстЗаказов  = НСтр("ru = 'заказов'"); 	
		ТекстЗаказа   = НСтр("ru = 'заказа'");
		ТекстЗаказы   = НСтр("ru = 'заказы'");
	КонецЕсли;

	Если ПараметрыБазы.ПослеУстановки = "RunMag1cWizard" Тогда
		Текст = СтроковыеФункцииКлиент.ФорматированнаяСтрока(НСтр("ru = '<a href=""https://v8.1c.ru/its/services/mag1c/"">Сервис mag1c</a> <b>позволяет быстро создать свою веб-витрину и экономить время на ввод %1</b>'"), ТекстЗаказов);
		Тексты.Добавить(Текст);	
		Тексты.Добавить(Символы.ПС);	
		Тексты.Добавить(Символы.ПС);	
		
		Текст = НСтр("ru = 'Используя веб-витрину, ваши покупатели получат возможность самостоятельно создавать %Заказы. Они будут автоматически загружаться в вашу программу 1С.'");
		Текст = СтрЗаменить(Текст, "%Заказы", ТекстЗаказы);  	
		Тексты.Добавить(Текст);	
		Тексты.Добавить(Символы.ПС);	
		Тексты.Добавить(Символы.ПС);	
		
		Текст = СтроковыеФункцииКлиент.ФорматированнаяСтрока(НСтр("ru = '<a href=""https://demo.mag1c.ru/"">Посмотрите</a>, как может выглядеть ваша веб-витрина mag1c.'"), ТекстЗаказов);
		Тексты.Добавить(Текст);	
		Тексты.Добавить(Символы.ПС);	
		Тексты.Добавить(Символы.ПС);	

	Иначе
		Текст = СтроковыеФункцииКлиент.ФорматированнаяСтрока(НСтр("ru = '<a href=""https://v8.1c.ru/its/services/mag1c/"">Сервис mag1c</a> <b>позволяет получить ссылку на веб-страницу %1</b>'"), ТекстЗаказа);
		Тексты.Добавить(Текст);	
		Тексты.Добавить(Символы.ПС);	
		Тексты.Добавить(Символы.ПС);	
		
		Текст = НСтр("ru = 'Используя веб-страницу %Заказа, покупатели получат возможность посмотреть список товаров, скачать счет на оплату или оплатить через СБП или картой.'");
		Текст = СтрЗаменить(Текст, "%Заказа", ТекстЗаказа);  	
		Тексты.Добавить(Текст);	
		Тексты.Добавить(Символы.ПС);	
		Тексты.Добавить(Символы.ПС);	
		
		Текст = СтроковыеФункцииКлиент.ФорматированнаяСтрока(НСтр("ru = '<a href=""https://demo.mag1c.ru/applications/Store?state=templink-k88tyKNYRzI6ep2J"">Посмотрите</a>, как может выглядеть веб-страница %1.'"), ТекстЗаказа);
		Тексты.Добавить(Текст);	
		Тексты.Добавить(Символы.ПС);	
		Тексты.Добавить(Символы.ПС);	
		
		Текст = СтроковыеФункцииКлиент.ФорматированнаяСтрока(НСтр("ru = 'Так же с помощью mag1c вы можете создать <a href=""https://demo.mag1c.ru/"">свою веб-витрину</a>. Ваши покупатели получат возможность самостоятельно создавать %1. Они будут автоматически загружаться в вашу программу 1С.'"), ТекстЗаказы);
		Тексты.Добавить(Текст);	
		Тексты.Добавить(Символы.ПС);	
		Тексты.Добавить(Символы.ПС);	
	КонецЕсли;

	Отказ  = Ложь;
	
	ПараметрыДиалога = Новый Структура;
	ПараметрыДиалога.Вставить("ПараметрыБазы", ПараметрыБазы);
	ПараметрыДиалога.Вставить("ДатаНачалаОперации", ДатаНачалаОперации);
	ПараметрыДиалога.Вставить("ДатаОкончанияОперации", ДатаОкончанияОперации);
	ПараметрыДиалога.Вставить("СообщениеОбОшибке", РезультатУстановки.СообщениеОбОшибке);
	
	Если РезультатУстановки.КодВозврата <> 200
		И РезультатУстановки.КодВозврата <> 204 Тогда
		
		Отказ = Истина;
				
		Если РезультатУстановки.КодВозврата = 401 Тогда
			
			Текст = НСтр("ru = 'Но что-то пошло не так((('");
			Тексты.Добавить(Текст);	
			Тексты.Добавить(Символы.ПС);	
			Тексты.Добавить(Символы.ПС);	
			
			Текст = СтроковыеФункцииКлиент.ФорматированнаяСтрока(НСтр("ru = 'Не удалось аутентифицироваться в сервисе mag1c. Подробности - в журнале регистрации.'"));
			Тексты.Добавить(Текст);	
			Тексты.Добавить(Символы.ПС);	
			Тексты.Добавить(Символы.ПС);	
			
			СписокКнопок.Добавить("ОткрытьЖурналРегистрации", НСтр("ru = 'Открыть журнал регистрации'"));	
			СписокКнопок.Добавить("СообщитьВТехподдержку", НСтр("ru = 'Сообщить в техподдержку'"));	
			
		ИначеЕсли РезультатУстановки.КодВозврата = 426 Тогда					
				
			Если ПараметрыБазы <> Неопределено
				И ПараметрыБазы.ЭтоБазоваяВерсияКонфигурации Тогда
				
				Если ПараметрыБазы.РазделениеВключено Тогда
					Текст = СтроковыеФункцииКлиент.ФорматированнаяСтрока(НСтр("ru = 'К сожалению, на текущем тарифе есть ограничения.'"));
					Тексты.Добавить(Текст);	
					Тексты.Добавить(Символы.ПС);	
					Тексты.Добавить(Символы.ПС);	
					
					Текст = СтроковыеФункцииКлиент.ФорматированнаяСтрока(НСтр("ru = 'Для использования сервиса mag1c необходимо перейти на другой тариф.'"));
					Тексты.Добавить(Текст);	
					Тексты.Добавить(Символы.ПС);	
					Тексты.Добавить(Символы.ПС);	
					
					СписокКнопок.Добавить("ПерейтиНаДругойТариф", НСтр("ru = 'Перейти на другой тариф'"));	
				Иначе
					Текст = НСтр("ru = 'К сожалению, в используемой вами версии программы 1С есть ограничения, которые не позволяют использовать сервис mag1c.'");
					Тексты.Добавить(Текст);	
					Тексты.Добавить(Символы.ПС);	
					Тексты.Добавить(Символы.ПС);	
					
					СсылкаПереходаСБазовой = Маг1СКлиентСерверПереопределяемый.СсылкаНаСтраницуСОписаниемПереходаНаПрофВерсию(ПараметрыБазы);
					Текст = НСтр("ru = 'Обратитесь к <a href=""https://1c.ru/rus/partners/franch-citylist.jsp"">партнеру фирмы 1С</a>, чтобы обновить конфигурацию до <a href=""%1"">версии ПРОФ</a>'");
					Текст = СтроковыеФункцииКлиент.ФорматированнаяСтрока(Текст, СсылкаПереходаСБазовой);
					Тексты.Добавить(Текст);	
					Тексты.Добавить(Символы.ПС);	
					Тексты.Добавить(Символы.ПС);	
					
					Текст = СтроковыеФункцииКлиент.ФорматированнаяСтрока(НСтр("ru = 'Так же вы можете перейдите на использование полнофункциональной версии программы в облаке <a href=""https://1cfresh.com/solutions"">1cfresh.com</a>'"));
					Тексты.Добавить(Текст);	
					Тексты.Добавить(Символы.ПС);	
					Тексты.Добавить(Символы.ПС);	
				КонецЕсли;	
				
			Иначе
				Текст = НСтр("ru = 'К сожалению, версия конфигурации, которую вы используете, сейчас не поддерживается сервисом mag1c.'");
				Тексты.Добавить(Текст);	
				Тексты.Добавить(Символы.ПС);	
				Тексты.Добавить(Символы.ПС);	
				
				Текст = НСтр("ru = 'Сообщите, пожалуйста, название и версию конфигурации в техподдержку webits-info@1c.ru – возможно, мы сможем быстро помочь.'");
				Тексты.Добавить(Текст);	
				Тексты.Добавить(Символы.ПС);	
				Тексты.Добавить(Символы.ПС);	
				
				СписокКнопок.Добавить("СообщитьВТехподдержку", НСтр("ru = 'Сообщить в техподдержку'"));	
			КонецЕсли;
						
		Иначе
			Текст = СтроковыеФункцииКлиент.ФорматированнаяСтрока(НСтр("ru = 'К сожалению, при начале работы с сервисом mag1c что-то пошло не так((( Подробности - в журнале регистрации.'"));
			Тексты.Добавить(Текст);	
			Тексты.Добавить(Символы.ПС);	
			Тексты.Добавить(Символы.ПС);	
			
			СписокКнопок.Добавить("СообщитьВТехподдержку", НСтр("ru = 'Сообщить в техподдержку'"));	
			СписокКнопок.Добавить("ОткрытьЖурналРегистрации", НСтр("ru = 'Открыть журнал регистрации'"));	
		КонецЕсли;
		
	Иначе
		Если ПараметрыБазы.РазделениеВключено Тогда
			Отказ = Истина;
			
			Текст = СтроковыеФункцииКлиент.ФорматированнаяСтрока(НСтр("ru = 'Для работы с сервисом mag1c необходимо необходимо установить расширение из каталога расширений.'"));
			Тексты.Добавить(Текст);	
			Тексты.Добавить(Символы.ПС);	
			Тексты.Добавить(Символы.ПС);	
			
			СписокКнопок = Новый СписокЗначений();
			СписокКнопок.Добавить("ПерейтиВКаталогРасширений", НСтр("ru = 'Перейти к установке расширения'"));
			
		КонецЕсли;
	КонецЕсли;
	
	Если Не Отказ Тогда
		СписокКнопок = Новый СписокЗначений;
		Тексты = Новый Массив;
		
		Текст = СтроковыеФункцииКлиент.ФорматированнаяСтрока(
			НСтр("ru = 'Для продолжения настройки подключения к <a href=""https://v8.1c.ru/its/services/mag1c/"">сервису mag1c</a> необходимо перезапустить программу.'"));
		Тексты.Добавить(Текст);	
		Тексты.Добавить(Символы.ПС);	
		Тексты.Добавить(Символы.ПС);	
		
		СписокКнопок = Новый СписокЗначений;
		СписокКнопок.Добавить("Перезапустить", НСтр("ru = 'Перезапустить'"));
	КонецЕсли;
	
	ТекстПредупреждения = Новый ФорматированнаяСтрока(Тексты);

	Если СписокКнопок.Количество() = 0 Тогда
		ПоказатьПредупреждение(,ТекстПредупреждения);
	Иначе
		СписокКнопок.Добавить("Отмена", НСтр("ru = 'Отмена'"));
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ОтветНаВопросПриУстановкеРасширения", ЭтотОбъект, ПараметрыДиалога),
						ТекстПредупреждения,
						СписокКнопок);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтветНаВопросПриУстановкеРасширения(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = "ОткрытьЖурналРегистрации" Тогда
		ПоказатьФормуЖурналаРегистрации(ДополнительныеПараметры.ДатаНачалаОперации, ДополнительныеПараметры.ДатаОкончанияОперации);	
	ИначеЕсли Результат = "СообщитьВТехподдержку" Тогда
		ОтправитьСообщениеВТехПоддержку(ДополнительныеПараметры.СообщениеОбОшибке, ДополнительныеПараметры);
	ИначеЕсли Результат = "ПерейтиНаДругойТариф" Тогда
		ОплатаСервисаКлиент.ОткрытьФормуОплатыСервиса();
	ИначеЕсли Результат = "Перезапустить" Тогда
		ПараметрыБазы = ДополнительныеПараметры.ПараметрыБазы;
		
		ПараметрПерезапуска = ПараметрыБазы.ПослеУстановки;
		
		Если ПараметрыБазы.ПослеУстановкиПараметр <> Неопределено Тогда
			Ид = Строка(ПараметрыБазы.ПослеУстановкиПараметр.УникальныйИдентификатор());
			ПараметрПерезапуска = ПараметрПерезапуска + "_" + Ид + "_";
		КонецЕсли;
		
		ЗавершитьРаботуСистемы(Ложь, Истина, "/C " + ПараметрПерезапуска);
	ИначеЕсли Результат = "ПерейтиВКаталогРасширений" Тогда
		КаталогРасширенийКлиент.ОткрытьОбъектРасширения(
			Маг1СКлиентСерверПереопределяемый.ИдентификаторРасширения());
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказатьФормуЖурналаРегистрации(ДатаНачала, ДатаОкончания)
	
	ИмяФормыЖурналаРегистрации = "Обработка.ЖурналРегистрации.Форма";
	
	Отбор = Новый Структура;
	Отбор.Вставить("ДатаНачала", ДатаНачала);
	Отбор.Вставить("ДатаОкончания", ДатаОкончания);
	Отбор.Вставить("Уровень", "Ошибка");
	
	ОткрытьФорму(ИмяФормыЖурналаРегистрации, Отбор, ЭтотОбъект);
	
КонецПроцедуры

Процедура ОтправитьСообщениеВТехПоддержку(СообщениеОбОшибке, ПараметрыОперации)
	
	Тема = НСтр("ru = 'Проблема при установке расширения mag1c'");
	
	Текст = НСтр("ru = 'ИНН организации: <Укажите ИНН вашей организации>'"); 
	
	Текст = Текст + Символы.ПС + НСтр("ru = 'При установке расширения mag1c возникла следующая проблема: '");
	
	Текст = Текст + Символы.ПС +  СообщениеОбОшибке + Символы.ПС  + Символы.ПС;
		
	Если ПараметрыОперации.ПараметрыБазы.ЗначениеРазделителяСеанса <> 0 Тогда
		Текст = Текст + Символы.ПС + НСтр("ru = 'Область данных: %ЗначениеРазделителяСеанса'");
	КонецЕсли;	
	
	Текст = Текст + Символы.ПС + НСтр("ru = 'Идентификатор информационной базы: %ИдентификаторИБ'");
	
	Текст = СтрЗаменить(Текст, "%Версия", ПараметрыОперации.ПараметрыБазы.ВерсияРасширения);
	Текст = СтрЗаменить(Текст, "%ЗначениеРазделителяСеанса", ПараметрыОперации.ПараметрыБазы.ЗначениеРазделителяСеанса);
	Текст = СтрЗаменить(Текст, "%ИдентификаторИБ", ПараметрыОперации.ПараметрыБазы.ИдентификаторИБ);
	
	Попытка
		ОбщегоНазначенияКлиент.ОбщийМодуль("СообщенияВСлужбуТехническойПоддержкиКлиент");
		ЕстьМодульСообщенияВСлужбуТехническойПоддержкиКлиент = Истина;
	Исключение
		ЕстьМодульСообщенияВСлужбуТехническойПоддержкиКлиент = Ложь;
	КонецПопытки;
	
	Если Не ЕстьМодульСообщенияВСлужбуТехническойПоддержкиКлиент Тогда
		ОбщийМодульИнтернетПоддержкаПользователейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ИнтернетПоддержкаПользователейКлиент");
		
		НастройкиСоединенияССерверами = ОбщийМодульИнтернетПоддержкаПользователейКлиент.НастройкиСоединенияССерверами();
		
		ОбщийМодульИнтернетПоддержкаПользователейКлиент.ОтправитьСообщениеВТехПоддержку(
			Тема,
			Текст,
			,
			,
			Новый Структура("Логин, НастройкиСоединенияССерверами",
				ПараметрыОперации.ПараметрыБазы.ЛогинИПП,
				НастройкиСоединенияССерверами));
	Иначе
		
		ОбщийМодульСообщенияВСлужбуТехническойПоддержкиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("СообщенияВСлужбуТехническойПоддержкиКлиент");
		
		ДанныеСообщения = Новый Структура;
		ДанныеСообщения.Вставить("Тема", Тема);
		ДанныеСообщения.Вставить("Сообщение", Текст);
		ДанныеСообщения.Вставить("Получатель", "webIts");
		
		ПараметрыЖурналаРегистрации = Новый Структура;
		ПараметрыЖурналаРегистрации.Вставить("ДатаНачала", ПараметрыОперации.ДатаНачалаОперации);
		ПараметрыЖурналаРегистрации.Вставить("ДатаОкончания", ПараметрыОперации.ДатаОкончанияОперации);
		ПараметрыЖурналаРегистрации.Вставить("Уровень", "Ошибка");
		ПараметрыЖурналаРегистрации.Вставить("События", Неопределено);
		ПараметрыЖурналаРегистрации.Вставить("Метаданные", Неопределено);

		ДанныеСообщения.Вставить("ЖурналРегистрации", ПараметрыЖурналаРегистрации);
		
		Попытка
			ОбщийМодульСообщенияВСлужбуТехническойПоддержкиКлиентСервер = ОбщегоНазначенияКлиент.ОбщийМодуль("СообщенияВСлужбуТехническойПоддержкиКлиентСервер");
			ДанныеСообщенияШаблон = ОбщийМодульСообщенияВСлужбуТехническойПоддержкиКлиентСервер.ДанныеСообщения();
			ЗаполнитьЗначенияСвойств(ДанныеСообщенияШаблон,ДанныеСообщения);
			ДанныеСообщения = ДанныеСообщенияШаблон;
		Исключение
		КонецПопытки;
				
		ОбщийМодульСообщенияВСлужбуТехническойПоддержкиКлиент.ОтправитьСообщение(ДанныеСообщения);
		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти
