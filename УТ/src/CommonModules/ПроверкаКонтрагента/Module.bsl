///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Подсистема "ПроверкаКонтрагента".
// ОбщийМодуль.ПроверкаКонтрагента.
// 
// Серверные процедуры проверки контрагента:
//  - отображение индексов СПАРК Риски;
//  - служебные процедуры.
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

Процедура ПриСозданииНаСервереСПАРК(
		Форма,
		КонтрагентОбъект,
		Контрагент,
		ВидКонтрагента,
		ПараметрыОтображения,
		ИспользованиеРазрешено,
		СтандартнаяОбработкаБиблиотекой) Экспорт
		
	Если Форма.ИмяФормы <> "Обработка.ПроверкаКонтрагента.Форма.Форма" Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработкаБиблиотекой = Ложь;
	
	ОтобразитьИндексыСПАРК(
		Форма.ИндексыСПАРКРиски,
		КонтрагентОбъект,
		Контрагент,
		ВидКонтрагента,
		Форма);
	
	ПоказатьУведомленияСПАРКРиски(Форма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОтобразитьИндексыСПАРК(
		РезультатИндексыКонтрагента,
		КонтрагентОбъект,
		Контрагент,
		ВидКонтрагента,
		Форма) Экспорт
	
	Если Не ОбщегоНазначения.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.СПАРКРиски") Тогда
		Возврат;
	КонецЕсли;
	
	МодульСПАРКРиски = ОбщегоНазначения.ОбщийМодуль("СПАРКРиски");
	
	ИспользованиеРазрешено = Форма.НастройкиСПАРКРиски.ИспользованиеРазрешено;
	
	Если ИспользованиеРазрешено
			И (ТипЗнч(РезультатИндексыКонтрагента) <> Тип("Структура")) Тогда
		РезультатИндексыКонтрагента = МодульСПАРКРиски.ИндексыСПАРККонтрагента(
			Контрагент,
			ВидКонтрагента);
	КонецЕсли;
	
	Форма.ИндексыСПАРКРиски = РезультатИндексыКонтрагента;
	ПроверкаКонтрагентаКлиентСервер.ОтобразитьИндексыСПАРК(
		РезультатИндексыКонтрагента,
		КонтрагентОбъект,
		Контрагент,
		Форма,
		ИспользованиеРазрешено);
	
КонецПроцедуры

Процедура ПоказатьУведомленияСПАРКРиски(Форма)
	
	Если Не ОбщегоНазначения.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.СПАРКРиски") Тогда
		Возврат;
	КонецЕсли;
	
	МодульСПАРКРиски = ОбщегоНазначения.ОбщийМодуль("СПАРКРиски");
	МодульСПАРКРискиКлиентСервер = ОбщегоНазначения.ОбщийМодуль("СПАРКРискиКлиентСервер");
	Форма.УведомленияПользователя.Вставить(
		"СПАРКРиски",
		МодульСПАРКРиски.УведомлениеПользователя(
			МодульСПАРКРискиКлиентСервер.ИдентификаторУслугиИндикаторыРиска()));
	
	Если Форма.УведомленияПользователя.СПАРКРиски = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма.Элементы.ГруппаУведомлениеСервисаСПАРКРиски.Видимость = Истина;
	Форма.Элементы.ДекорацияТекстУведомленияСПАРКРиски.Заголовок =
		Форма.УведомленияПользователя.СПАРКРиски.ТекстУведомления;
	
КонецПроцедуры

Процедура ЗаписатьОшибкуВЖурналРегистрации(Сообщение) Экспорт
	
	ЗаписьЖурналаРегистрации(
		НСтр("ru = 'Проверка контрагента'",ОбщегоНазначения.КодОсновногоЯзыка()),
		УровеньЖурналаРегистрации.Ошибка,
		,
		,
		Сообщение);
	
КонецПроцедуры

Функция ЭтоШиринаЭкранаРасширеннойВерсии(ШиринаЭкрана) Экспорт
	
	Возврат ШиринаЭкрана > 1600;
	
КонецФункции

#КонецОбласти