
#Область ПрограммныйИнтерфейс

//////////////////////////////////////////////////////////////////////////////////////////////////////
// ПОДПИСКИ НА СОБЫТИЯ

// Процедура - обработчик подписки на событие "ПриЗаписи" для объектов, отображаемых в календаре.
//
// Параметры:
//	Источник	- Ссылка	- Источник события.
//	Отказ		- Булево	- Флаг отмены.
//
Процедура ПриЗаписиОбъектаКалендаря(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Создадим запись в региср сведений CRM_СостоянияИнтересов, если требуется
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.CRM_Взаимодействие") Тогда
		
		// Если Источник.ПометкаУдаления Тогда
		//	НаборЗаписей = РегистрыСведений.CRM_СобытияКалендаря.СоздатьНаборЗаписей();
		//	НаборЗаписей.Отбор.Объект.Установить(Источник.Ссылка);
		//	НаборЗаписей.Записать(Истина);
		//	Возврат;
		//КонецЕсли;
		
		// Обработка создания/перезаполнения напоминаний
		
		Если ЗначениеЗаполнено(Источник.ДокументОснование)
			 И ТипЗнч(Источник.ДокументОснование) = Тип("ДокументСсылка.CRM_Интерес") Тогда
			
			// Если взаимодествие новое и по интересу еще нет записей, то просто добавляем
			// новую запись
			Если Источник.ДополнительныеСвойства.Свойство("ЭтоНовый") И Источник.ДополнительныеСвойства.ЭтоНовый Тогда
				
				НаборЗаписей = РегистрыСведений.CRM_СостоянияИнтересов.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Интерес.Установить(Источник.ДокументОснование);
				НаборЗаписей.Прочитать();
				Если НаборЗаписей.Количество() = 0 Тогда
					
					НаборЗаписей.Отбор.Сбросить();
					
					НоваяЗапись = РегистрыСведений.CRM_СостоянияИнтересов.СоздатьМенеджерЗаписи();
					НоваяЗапись.Интерес			= Источник.ДокументОснование;
					НоваяЗапись.Взаимодействие	= Источник.Ссылка;
					НоваяЗапись.Состояние		= Источник.СостояниеИнтереса;
					НоваяЗапись.Записать();
				КонецЕсли;
			КонецЕсли;
			
			Если Источник.ДополнительныеСвойства.Свойство("ИзмененоСостояниеИнтереса")
				 И Источник.ДополнительныеСвойства.ИзмененоСостояниеИнтереса Тогда
				
				НаборЗаписей = РегистрыСведений.CRM_СостоянияИнтересов.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Интерес.Установить(Источник.ДокументОснование);
				НаборЗаписей.Прочитать();
				НаборЗаписей.Очистить();
				
				НоваяЗапись = НаборЗаписей.Добавить();
				НоваяЗапись.Интерес			= Источник.ДокументОснование;
				НоваяЗапись.Взаимодействие	= Источник.Ссылка;
				НоваяЗапись.Состояние		= Источник.СостояниеИнтереса;
				
				НаборЗаписей.Записать();
				
			КонецЕсли;
			
			Если Источник.ДополнительныеСвойства.Свойство("ИнтересЗавершен")
				 И Источник.ДополнительныеСвойства.ИнтересЗавершен Тогда
				
				НаборЗаписей = РегистрыСведений.CRM_СостоянияИнтересов.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Интерес.Установить(Источник.ДокументОснование);
				НаборЗаписей.Прочитать();
				
				Если НаборЗаписей.Количество() > 0 Тогда
					ВзаимодействиеПредыдущегоСостояния	= НаборЗаписей[0].Взаимодействие;
					ПредыдущееСостояние					= НаборЗаписей[0].Состояние;
				Иначе
					ВзаимодействиеПредыдущегоСостояния	= Документы.CRM_Взаимодействие.ПустаяСсылка();
					ПредыдущееСостояние					= Справочники.CRM_СостоянияИнтересов.ПустаяСсылка();
				КонецЕсли;
				
				НаборЗаписей.Очистить();
				
				НоваяЗапись = НаборЗаписей.Добавить();
				НоваяЗапись.Интерес								= Источник.ДокументОснование;
				НоваяЗапись.Взаимодействие						= Источник.Ссылка;
				НоваяЗапись.Состояние							= Источник.СостояниеИнтереса;
				НоваяЗапись.ВзаимодействиеПредыдущегоСостояния	= ВзаимодействиеПредыдущегоСостояния;
				НоваяЗапись.ПредыдущееСостояние					= ПредыдущееСостояние;
				
				НаборЗаписей.Записать();
				
			КонецЕсли;
			
			Если Источник.ДополнительныеСвойства.Свойство("ИнтересОтменаЗавершения")
				 И Источник.ДополнительныеСвойства.ИнтересОтменаЗавершения Тогда
				
				НаборЗаписей = РегистрыСведений.CRM_СостоянияИнтересов.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Интерес.Установить(Источник.ДокументОснование);
				НаборЗаписей.Прочитать();
				НаборЗаписей.Очистить();
				
				НоваяЗапись = НаборЗаписей.Добавить();
				НоваяЗапись.Интерес			= Источник.ДокументОснование;
				НоваяЗапись.Взаимодействие	= Источник.Ссылка;
				НоваяЗапись.Состояние		= Источник.СостояниеИнтереса;
				
				НаборЗаписей.Записать();
				
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.CRM_Взаимодействие") Тогда
		
		Источник.ОтразитьВКалендаре();
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.CRM_ЭтапКалендарногоПлана") Тогда
		НаборЗаписей = РегистрыСведений.CRM_СобытияКалендаря.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Объект.Установить(Источник.Ссылка);
		
		Если Не Источник.ПометкаУдаления Тогда
			Для Каждого Пользователь Из Источник.Участники Цикл
				НоваяСтрока = НаборЗаписей.Добавить();
				
				НоваяСтрока.ПериодНачало			= НачалоДня(Источник.ПлановаяДатаНачала);
				НоваяСтрока.ПериодОкончание			= КонецДня(Источник.ПлановаяДатаОкончания);
				НоваяСтрока.Пользователь			= Пользователь.Пользователь;
				НоваяСтрока.Объект					= Источник.Ссылка;
				
				НоваяСтрока.Тема					= Источник.Тема;
				НоваяСтрока.НаВесьДень				= Истина;
				НоваяСтрока.СтатусКонтрольнойТочки	= Источник.Статус;
				НоваяСтрока.Важность				= Источник.Важность;
				
				НоваяСтрока.Проект					= Источник.Проект;
				НоваяСтрока.Подразделение			= Источник.Проект.CRM_Подразделение;
				
				НоваяСтрока.Завершено				= (Источник.Статус = Перечисления.CRM_СтатусыЭтаповКалендарногоПлана.Проверена);
			КонецЦикла;
		КонецЕсли;
		
		Если НаборЗаписей.Количество() > 0 Или Источник.ПометкаУдаления Тогда
			НаборЗаписей.Записать();
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.CRM_Телемаркетинг") Тогда
		НаборЗаписей = РегистрыСведений.CRM_СобытияКалендаря.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Объект.Установить(Источник.Ссылка);
		
		бОчиститьЗаписи = Ложь;
		Если Не Источник.ПометкаУдаления И ЗначениеЗаполнено(Источник.Ответственный) Тогда
			Если 	ЗначениеЗаполнено(Источник.ДатаНачала)
				И	ЗначениеЗаполнено(Источник.ДатаОкончания) Тогда
				//
				НачалоПериода	= Источник.ДатаНачала;
				КонецПериода	= Источник.ДатаОкончания;
			ИначеЕсли Источник.НаВесьДень И ЗначениеЗаполнено(Источник.Дата) Тогда
				НачалоПериода	= Источник.Дата;
				КонецПериода	= Источник.Дата;
			Иначе
				бОчиститьЗаписи = Истина;
			КонецЕсли;
			
			Если Не бОчиститьЗаписи Тогда
				НоваяСтрока = НаборЗаписей.Добавить();
				
				НоваяСтрока.ПериодНачало		= НачалоПериода;
				НоваяСтрока.ПериодОкончание		= КонецПериода;
				НоваяСтрока.Пользователь		= Источник.Ответственный;
				НоваяСтрока.Объект				= Источник.Ссылка;
				
				НоваяСтрока.Тема				= Источник.Тема;
				НоваяСтрока.НаВесьДень			= Источник.НаВесьДень;
				
				НоваяСтрока.Важность			= Источник.Важность;
				НоваяСтрока.Подразделение		= Источник.Подразделение;
				НоваяСтрока.Проект				= Источник.Проект;
				
				НоваяСтрока.Завершено			= Источник.Завершен;
				
			КонецЕсли;
			
		Иначе
			бОчиститьЗаписи = Истина;
			
		КонецЕсли;
		
		Если НаборЗаписей.Количество() > 0 Или бОчиститьЗаписи Тогда
			НаборЗаписей.Записать();
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Источник) = Тип("СправочникОбъект.МаркетинговыеМероприятия") Тогда
		НаборЗаписей = РегистрыСведений.CRM_СобытияКалендаря.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Объект.Установить(Источник.Ссылка);
		
		Если Не Источник.ПометкаУдаления Тогда
			ТаблицаУчастники = Источник.CRM_СвоиУчастники.Выгрузить();
			МассивОбязательныхУчастников = Новый Массив();
			Если ЗначениеЗаполнено(Источник.CRM_Автор)
				 И МассивОбязательныхУчастников.Найти(Источник.CRM_Автор) = Неопределено Тогда
				МассивОбязательныхУчастников.Добавить(Источник.CRM_Автор);
			КонецЕсли;
			Если ЗначениеЗаполнено(Источник.Ответственный)
				 И МассивОбязательныхУчастников.Найти(Источник.Ответственный) = Неопределено Тогда
				МассивОбязательныхУчастников.Добавить(Источник.Ответственный);
			КонецЕсли;
			Для Каждого ОбязательныйУчастник Из МассивОбязательныхУчастников Цикл
				Если ТаблицаУчастники.Найти(ОбязательныйУчастник, "Участник") = Неопределено Тогда
					НовыйУчастник = ТаблицаУчастники.Добавить();
					НовыйУчастник.Участник = ОбязательныйУчастник;
					НовыйУчастник.ДатаНачала = НачалоДня(Источник.ДатаНачала);
					НовыйУчастник.ДатаОкончания = КонецДня(Источник.ДатаОкончания);
					Если Не ЗначениеЗаполнено(НовыйУчастник.ДатаНачала) Тогда
						НовыйУчастник.ДатаНачала = CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса();
					КонецЕсли;
					Если НовыйУчастник.ДатаОкончания < НовыйУчастник.ДатаНачала Тогда
						НовыйУчастник.ДатаОкончания = НовыйУчастник.ДатаНачала;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			ТаблицаУчастники.Свернуть("Участник,ДатаНачала,ДатаОкончания");
			Для Каждого СтрокаТаблицы Из ТаблицаУчастники Цикл
				Если Не ЗначениеЗаполнено(СтрокаТаблицы.Участник)
					 Или ТипЗнч(СтрокаТаблицы.Участник) <> Тип("СправочникСсылка.Пользователи") Тогда
					Продолжить;
				КонецЕсли;
				Если Не ЗначениеЗаполнено(СтрокаТаблицы.ДатаНачала) Или Не ЗначениеЗаполнено(СтрокаТаблицы.ДатаОкончания) Тогда
					Продолжить;
				КонецЕсли;
				
				НоваяСтрока = НаборЗаписей.Добавить();
				
				НоваяСтрока.ПериодНачало		= СтрокаТаблицы.ДатаНачала;
				НоваяСтрока.ПериодОкончание		= СтрокаТаблицы.ДатаОкончания;
				НоваяСтрока.Пользователь		= СтрокаТаблицы.Участник;
				НоваяСтрока.Объект				= Источник.Ссылка;
				
				НоваяСтрока.Тема				= Источник.Наименование;
				
				НоваяСтрока.Важность			= Источник.CRM_Важность;
				НоваяСтрока.Подразделение		= Источник.CRM_Подразделение;
				НоваяСтрока.Проект				= Источник.CRM_Проект;
				
				НоваяСтрока.Завершено			= Источник.Завершено;
			КонецЦикла;
		КонецЕсли;
		
		НаборЗаписей.Записать();
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ЗадачаОбъект.ЗадачаИсполнителя") Тогда
		
		Если Не Источник.CRM_Личная Тогда
			Возврат;
		КонецЕсли;
		
		НаборЗаписей = РегистрыСведений.CRM_СобытияКалендаря.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Объект.Установить(Источник.Ссылка);
		
		Если Не Источник.ПометкаУдаления Тогда
				НоваяСтрока = НаборЗаписей.Добавить();
				
				Если Источник.CRM_ВариантСрока = "НаПериод" Тогда
					НоваяСтрока.ПериодНачало	= Источник.CRM_ПлановаяДатаПринятияКИсполнению;
					НоваяСтрока.ПериодОкончание	= Источник.СрокИсполнения;
				Иначе
					НоваяСтрока.ПериодНачало 	= Источник.СрокИсполнения;
					НоваяСтрока.ПериодОкончание = Источник.СрокИсполнения;
				КонецЕсли;
				
				НоваяСтрока.Пользователь		= Источник.Исполнитель;
				НоваяСтрока.Объект				= Источник.Ссылка;
				НоваяСтрока.Партнер				= Источник.CRM_Партнер;
				
				НоваяСтрока.Тема				= Источник.Наименование;
				НоваяСтрока.НаВесьДень			= Источник.CRM_НаВесьДень;
				НоваяСтрока.Важность			= Источник.Важность;
				НоваяСтрока.Завершено			= Источник.Выполнена;
				
		КонецЕсли;
		
		НаборЗаписей.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБРАБОТКИ ДОКУМЕНТОВ

// Функция возвращает список документов Взаимодействия по переданному в параметре документу Интерес.
//
// Параметры:
//  Документ - ДокументСсылка - Документ интерес.
//  Статус	 - СправочникСсылка	 - Статус взаимодействия.
// 
// Возвращаемое значение:
//  ТаблицаЗначений -  Список документов Взаимодействия.
//
Функция ПолучитьВзаимодействия(Документ, Статус = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	CRM_Взаимодействие.Ссылка КАК Ссылка,
	|	CRM_Взаимодействие.Дата КАК ДатаСоздания,
	|	CRM_Взаимодействие.Автор КАК Автор,
	|	CRM_Взаимодействие.Партнер КАК Партнер,
	|	CRM_Взаимодействие.КонтактноеЛицо КАК КонтактноеЛицо,
	|	CRM_Взаимодействие.ПотенциальныйКлиент КАК ПотенциальныйКлиент,
	|	CRM_Взаимодействие.ПлановаяДата КАК ПлановаяДата,
	|	CRM_Взаимодействие.ВидВзаимодействия КАК ВидВзаимодействия,
	|	CRM_Взаимодействие.ОжидаемаяВыручка КАК ОжидаемаяВыручка,
	|	CRM_Взаимодействие.СтатусВзаимодействия КАК СтатусВзаимодействия,
	|	CRM_Взаимодействие.Тема КАК Содержание,
	|	CRM_Взаимодействие.Результат КАК Результат,
	|	CRM_Взаимодействие.Баллы КАК Баллы,
	|	CRM_Взаимодействие.ДатаЗавершенияВзаимодействия КАК ДатаЗавершенияВзаимодействия,
	|	CRM_Взаимодействие.ЗавершившийПользователь КАК ЗавершившийПользователь,
	|	CRM_Взаимодействие.СостояниеИнтереса КАК СостояниеИнтереса,
	|	CRM_Взаимодействие.НаВесьДень КАК НаВесьДень,
	|	CRM_Взаимодействие.ВидВзаимодействия.ВидСобытия КАК ВидСобытия,
	|	CRM_Взаимодействие.ВидВзаимодействия.Направление КАК Направление,
	|	ВЫБОР
	|		КОГДА CRM_Взаимодействие.ВидВзаимодействия.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.CRM_ВидыСобытий.ТелефонныйЗвонок)
	|				И CRM_Взаимодействие.ВидВзаимодействия.Направление = ЗНАЧЕНИЕ(Перечисление.CRM_ВходящееИсходящееСобытие.Входящее)
	|			ТОГДА 1
	|		КОГДА CRM_Взаимодействие.ВидВзаимодействия.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.CRM_ВидыСобытий.ТелефонныйЗвонок)
	|				И CRM_Взаимодействие.ВидВзаимодействия.Направление = ЗНАЧЕНИЕ(Перечисление.CRM_ВходящееИсходящееСобытие.Исходящее)
	|			ТОГДА 2
	|		КОГДА CRM_Взаимодействие.ВидВзаимодействия.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.CRM_ВидыСобытий.ЛичнаяВстреча)
	|				И CRM_Взаимодействие.ВидВзаимодействия.Направление = ЗНАЧЕНИЕ(Перечисление.CRM_ВходящееИсходящееСобытие.Входящее)
	|			ТОГДА 3
	|		КОГДА CRM_Взаимодействие.ВидВзаимодействия.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.CRM_ВидыСобытий.ЛичнаяВстреча)
	|				И CRM_Взаимодействие.ВидВзаимодействия.Направление = ЗНАЧЕНИЕ(Перечисление.CRM_ВходящееИсходящееСобытие.Исходящее)
	|			ТОГДА 4
	|		КОГДА CRM_Взаимодействие.ВидВзаимодействия.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.CRM_ВидыСобытий.ЭлектронноеПисьмо)
	|				И CRM_Взаимодействие.ВидВзаимодействия.Направление = ЗНАЧЕНИЕ(Перечисление.CRM_ВходящееИсходящееСобытие.Входящее)
	|			ТОГДА 5
	|		КОГДА CRM_Взаимодействие.ВидВзаимодействия.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.CRM_ВидыСобытий.ЭлектронноеПисьмо)
	|				И CRM_Взаимодействие.ВидВзаимодействия.Направление = ЗНАЧЕНИЕ(Перечисление.CRM_ВходящееИсходящееСобытие.Исходящее)
	|			ТОГДА 6
	|		КОГДА CRM_Взаимодействие.ВидВзаимодействия.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.CRM_ВидыСобытий.ПочтовоеПисьмо)
	|				И CRM_Взаимодействие.ВидВзаимодействия.Направление = ЗНАЧЕНИЕ(Перечисление.CRM_ВходящееИсходящееСобытие.Входящее)
	|			ТОГДА 7
	|		КОГДА CRM_Взаимодействие.ВидВзаимодействия.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.CRM_ВидыСобытий.ПочтовоеПисьмо)
	|				И CRM_Взаимодействие.ВидВзаимодействия.Направление = ЗНАЧЕНИЕ(Перечисление.CRM_ВходящееИсходящееСобытие.Исходящее)
	|			ТОГДА 8
	|		КОГДА CRM_Взаимодействие.ВидВзаимодействия.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.CRM_ВидыСобытий.Прочее)
	|				И CRM_Взаимодействие.ВидВзаимодействия.Направление = ЗНАЧЕНИЕ(Перечисление.CRM_ВходящееИсходящееСобытие.Входящее)
	|			ТОГДА 9
	|		КОГДА CRM_Взаимодействие.ВидВзаимодействия.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.CRM_ВидыСобытий.Прочее)
	|				И CRM_Взаимодействие.ВидВзаимодействия.Направление = ЗНАЧЕНИЕ(Перечисление.CRM_ВходящееИсходящееСобытие.Исходящее)
	|			ТОГДА 10
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВидСобытияКартинка,
	|	CRM_Взаимодействие.Подразделение КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ДокументыВзаимодействия.КоличествоДокументов ЕСТЬ NULL
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЕстьДокументы,
	|	CRM_Взаимодействие.Задача.Выполнена КАК ЗадачаВыполнена,
	|	CRM_Взаимодействие.Задача КАК Задача,
	|	CRM_Взаимодействие.Задача.CRM_ТочкаМаршрута КАК Этап,
	|	CRM_Взаимодействие.ПлановаяДатаЗавершение КАК ПлановаяДатаЗавершение,
	|	ВЫБОР
	|		КОГДА CRM_Взаимодействие.Задача.Выполнена
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА CRM_Взаимодействие.Задача.СрокИсполнения < &ТекущаяДата
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|	КОНЕЦ КАК ЗадачаПросрочена
	|ИЗ
	|	Документ.CRM_Взаимодействие КАК CRM_Взаимодействие
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			CRM_ДокументыВзаимодействия.Взаимодействие КАК Взаимодействие,
	|			СУММА(1) КАК КоличествоДокументов
	|		ИЗ
	|			РегистрСведений.CRM_ДокументыВзаимодействия КАК CRM_ДокументыВзаимодействия
	|		
	|		СГРУППИРОВАТЬ ПО
	|			CRM_ДокументыВзаимодействия.Взаимодействие) КАК ДокументыВзаимодействия
	|		ПО CRM_Взаимодействие.Ссылка = ДокументыВзаимодействия.Взаимодействие
	|ГДЕ
	|	CRM_Взаимодействие.ПометкаУдаления = ЛОЖЬ
	|	И CRM_Взаимодействие.ДокументОснование = &ДокументОснование
	|	И CRM_Взаимодействие.СтатусВзаимодействия = &СтатусВзаимодействия
	|
	|УПОРЯДОЧИТЬ ПО
	|	CRM_Взаимодействие.ПлановаяДата УБЫВ";
	Запрос.УстановитьПараметр("ТекущаяДата", НачалоДня(CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса()));
	Запрос.УстановитьПараметр("Интерес", Документ);
	Запрос.УстановитьПараметр("ДокументОснование", Документ);
	Если Статус = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И CRM_Взаимодействие.СтатусВзаимодействия = &СтатусВзаимодействия", "");
	Иначе
		Если ТипЗнч(Статус) = Тип("Массив") Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст,
				 "И CRM_Взаимодействие.СтатусВзаимодействия = &СтатусВзаимодействия",
				 "И CRM_Взаимодействие.СтатусВзаимодействия В (&СтатусВзаимодействия)");
		КонецЕсли;	
		Запрос.УстановитьПараметр("СтатусВзаимодействия", Статус);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Результат;
	
КонецФункции

//////////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ СПИСКА ДОКУМЕНТОВ ВЗАИМОДЕЙСТВИЯ

// Процедура добавляет документ в регистр документов взаимодействия.
//
// Параметры:
//	Взаимодействие	- ДокументСсылка	- Взаимодействие.
//	Документ		- ДокументСсылка	- Добавляемый документ.
//
Процедура ДобавитьДокументВРегистр(Взаимодействие, Документ) Экспорт
	Если НЕ ЗначениеЗаполнено(Взаимодействие) 
		ИЛИ НЕ ЗначениеЗаполнено(Документ) Тогда
		Возврат;
	КонецЕсли;		
	НаборЗаписей	= РегистрыСведений.CRM_ДокументыВзаимодействия.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Взаимодействие.Установить(Взаимодействие);
	НаборЗаписей.Отбор.Документ.Установить(Документ);
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	НоваяЗапись					= НаборЗаписей.Добавить();
	НоваяЗапись.Взаимодействие	= Взаимодействие;
	НоваяЗапись.Документ	= Документ;
	НаборЗаписей.Записать(Истина);	
КонецПроцедуры // ДобавитьДокументВРегистр()

// Проверяет, является ли переданная ссылка предметом взаимодействий.
//
// Параметры:
//  ОбъектСсылка - Ссылка - ссылка, для которой выполняется проверка,
//                          является ли она ссылкой на предмет взаимодействий.
//
// Возвращаемое значение:
//   Булево   - Истина если является, Ложь в обратном случае.
//
Функция ЯвляетсяПредметом(ОбъектСсылка) Экспорт
	
	Возврат Метаданные.ОпределяемыеТипы.ПредметВзаимодействия.Тип.СодержитТип(ТипЗнч(ОбъектСсылка));
	
КонецФункции 

// Процедура-обработчик записи планируемой активности
//
// Параметры:
//  Источник - Ссылка	 - Источник события.
//  Отказ	 - Булево	 - Признак отказа.
//
Процедура ПриЗаписиПланируемойАктивности(Источник, Отказ) Экспорт
	
	Если Источник.ДополнительныеСвойства.Свойство("ОтключитьПроверкуЗагрузки") Тогда 
	Иначе
		Если Источник.ОбменДанными.Загрузка Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Интерес = Неопределено;
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.CRM_Взаимодействие") Тогда
		
		Интерес = Источник.ДокументОснование;
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ЗадачаОбъект.ЗадачаИсполнителя") Тогда
		
		Если (ЗначениеЗаполнено(Источник.CRM_Личная) И ЗначениеЗаполнено(Источник.Предмет)
			 И ТипЗнч(Источник.Предмет) = Тип("ДокументСсылка.CRM_Интерес")) Тогда
			Интерес = Источник.Предмет;
		ИначеЕсли (ЗначениеЗаполнено(Источник.БизнесПроцесс)
			 И ТипЗнч(Источник.БизнесПроцесс.Предмет) = Тип("ДокументСсылка.CRM_Интерес")) Тогда
			Интерес = Источник.БизнесПроцесс.Предмет;
		ИначеЕсли (ЗначениеЗаполнено(Источник.БизнесПроцесс) И ЗначениеЗаполнено(Источник.БизнесПроцесс.ВедущаяЗадача)
			И ЗначениеЗаполнено(Источник.БизнесПроцесс.ВедущаяЗадача.БизнесПроцесс)
			И ТипЗнч(Источник.БизнесПроцесс.ВедущаяЗадача.БизнесПроцесс.Предмет) = Тип("ДокументСсылка.CRM_Интерес")) Тогда
			Интерес = Источник.БизнесПроцесс.ВедущаяЗадача.БизнесПроцесс.Предмет;
		ИначеЕсли ЗначениеЗаполнено(Источник.БизнесПроцесс) И ЗначениеЗаполнено(Источник.БизнесПроцесс.Предмет) Тогда
			Интерес = CRM_КлиентыСервер.ПолучитьГлавнуюЗаписьПоОбъекту(Источник.БизнесПроцесс.Предмет).CRM_Интерес;
		КонецЕсли;

	ИначеЕсли ТипЗнч(Источник) = Тип("ЗадачаОбъект.ЗадачаИсполнителя") Тогда
		
		ЕстьПредметУБизнесПроцесса = (Не Источник.CRM_Личная)
			 И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Источник.БизнесПроцесс, "Предмет");
		
		Если (ЗначениеЗаполнено(Источник.CRM_Личная) И ЗначениеЗаполнено(Источник.Предмет)
			И ТипЗнч(Источник.Предмет) = Тип("ДокументСсылка.CRM_Интерес")) Тогда
			
			Интерес = Источник.Предмет;
			
		ИначеЕсли (ЗначениеЗаполнено(Источник.БизнесПроцесс) И ЕстьПредметУБизнесПроцесса
				И ТипЗнч(Источник.БизнесПроцесс.Предмет) = Тип("ДокументСсылка.CRM_Интерес")) Тогда
			
			Интерес = Источник.БизнесПроцесс.Предмет;
			
		ИначеЕсли (ЗначениеЗаполнено(Источник.БизнесПроцесс) И ЗначениеЗаполнено(Источник.БизнесПроцесс.ВедущаяЗадача)
				И ЗначениеЗаполнено(Источник.БизнесПроцесс.ВедущаяЗадача.БизнесПроцесс)
				И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Источник.БизнесПроцесс.ВедущаяЗадача.БизнесПроцесс,
					 "Предмет")
				И ТипЗнч(Источник.БизнесПроцесс.ВедущаяЗадача.БизнесПроцесс.Предмет) = Тип("ДокументСсылка.CRM_Интерес")) Тогда
			
			Интерес = Источник.БизнесПроцесс.ВедущаяЗадача.БизнесПроцесс.Предмет;
			
		ИначеЕсли ЗначениеЗаполнено(Источник.БизнесПроцесс) И ЕстьПредметУБизнесПроцесса
				И ЗначениеЗаполнено(Источник.БизнесПроцесс.Предмет) Тогда
			
			Интерес = CRM_КлиентыСервер.ПолучитьГлавнуюЗаписьПоОбъекту(Источник.БизнесПроцесс.Предмет).CRM_Интерес;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Интерес)
		Или ТипЗнч(Интерес) <> Тип("ДокументСсылка.CRM_Интерес") Тогда
		Возврат;
	КонецЕсли;
	
	УдалитьЗапись = Истина;
	
	МенеджерЗаписи = РегистрыСведений.CRM_ЗапланированныеАктивности.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Объект = Интерес;
	МенеджерЗаписи.ПланируемаяАктивность = Источник.Ссылка;
	МенеджерЗаписи.Прочитать();
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.CRM_Взаимодействие") Тогда
		
		Если Источник.СтатусВзаимодействия = Справочники.CRM_СостоянияСобытий.ВРаботе 
				Или Источник.СтатусВзаимодействия = Справочники.CRM_СостоянияСобытий.Запланировано
				И Не Источник.ПометкаУдаления Тогда
			УдалитьЗапись = Ложь;
			Ответственный		= Источник.Ответственный;
			ТипАктивности		= Перечисления.CRM_ТипыАктивности.Взаимодействие;
			ПланируемаяДата		= Источник.ПлановаяДата;
			Тема				= Источник.Тема;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ЗадачаОбъект.ЗадачаИсполнителя") Тогда
		
		Если НЕ Источник.Выполнена И НЕ Источник.ПометкаУдаления Тогда
			УдалитьЗапись = Ложь;
			Ответственный		= Источник.Исполнитель;
			ТипАктивности		= Перечисления.CRM_ТипыАктивности.Задача;
			ПланируемаяДата		= Источник.СрокИсполнения;
			Тема				= Источник.Наименование;
		КонецЕсли;
		
	КонецЕсли;
	
	Если УдалитьЗапись Тогда 
		Если МенеджерЗаписи.Выбран() Тогда
			МенеджерЗаписи.Удалить();
		КонецЕсли;
	Иначе
		МенеджерЗаписи.Объект					= Интерес;
		МенеджерЗаписи.ПланируемаяАктивность	= Источник.Ссылка;
		МенеджерЗаписи.Ответственный			= Ответственный;
		МенеджерЗаписи.ТипАктивности			= ТипАктивности;
		МенеджерЗаписи.ПланируемаяДата			= ПланируемаяДата;
		МенеджерЗаписи.Тема						= Тема;
		МенеджерЗаписи.Записать();
	КонецЕсли;
	
	CRM_РаботаАРМСервер.CRM_ЗаполнениеАРММоиПродажи(Интерес, Отказ);
	CRM_ВоронкиПродажСервер.ПриЗаписиОбъектаВоронкиПродаж(Интерес.ПолучитьОбъект(), Отказ);
	
	ТипОбращения = Общегоназначения.ЗначениеРеквизитаОбъекта(Интерес, "ТипОбращения");
	Если ТипОбращения <> Справочники.CRM_ТипыОбращений.Интерес Тогда
		ДанныеСледующегоДела = РегистрыСведений.CRM_ЗапланированныеАктивности.СледующаяЗапланированнаяАктивность(Интерес);
		РегистрыСведений.CRM_СведенияПоддержки.ЗаписатьСледующееДелоПоОбращению(Интерес, ДанныеСледующегоДела);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
