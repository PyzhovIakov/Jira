#Область ПрограммныйИнтерфейс

// Дополняе структуру действий над строкой табличной части при изменении элемента формы.
// 
// Параметры:
//  Форма - Форма - Форма, в которой происходит обработка табличной части.
//  Элемент - ПолеФормы - Измененный элемент формы.
//  СтруктураДействий - см. ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьСтрокиТЧ.СтруктураДействий.
//
Процедура ДополнитьСтруктуруДействийПриИзмененииЭлемента(Форма, Элемент, СтруктураДействий) Экспорт
	
	//++ Локализация
	Если Форма.ИмяФормы = "Документ.ОтчетОРозничныхПродажах.Форма.ФормаДокумента" Тогда
		СтруктураДействий.Вставить("ЗаполнитьПризнакПодакцизныйТовар", Новый Структура("Номенклатура", "ПодакцизныйТовар"));
	КонецЕсли;
	
	Если Не ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ПараметрыИнтеграцииГосИС") Тогда
		Возврат;
	КонецЕсли;
	
	Если Форма.ИмяФормы = "Документ.ЧекККМ.Форма.ФормаДокументаРМК"
		Или Форма.ИмяФормы = "Документ.ЧекККМВозврат.Форма.ФормаДокументаРМК" Тогда
		
		Если Элемент = "Номенклатура" Тогда
			
			Если Форма.ИмяФормы = "Документ.ЧекККМ.Форма.ФормаДокументаРМК"
				И Форма.ПараметрыИнтеграцииГосИС.Получить("ИСМП") <> Неопределено Тогда
				СтруктураДействий.Вставить("ЗаполнитьПризнакПродажиТовараПоРазрешению", Новый Структура("Номенклатура", "ПродаетсяПоРазрешению"));
			КонецЕсли;
			
			Если Форма.ПараметрыИнтеграцииГосИС.Получить("ЕГАИС") <> Неопределено
				Или Форма.ПараметрыИнтеграцииГосИС.Получить("ИСМП") <> Неопределено Тогда
				СтруктураДействий.Вставить("ЗаполнитьПризнакМаркируемаяПродукция", Новый Структура("Номенклатура", "МаркируемаяПродукция"));
				СтруктураДействий.Вставить("ЗаполнитьВидПродукцииИС", Новый Структура("Номенклатура", "ВидПродукцииИС"));
				СтруктураДействий.Вставить("ПроверитьСериюРассчитатьСтатус",
					Новый Структура("Склад, ПараметрыУказанияСерий", Форма.Объект.Склад, Форма.ПараметрыУказанияСерий));
			КонецЕсли;
			
			Если Форма.ПараметрыИнтеграцииГосИС.Получить("ЕГАИС") <> Неопределено Тогда
				СтруктураДействий.Вставить("ЗаполнитьНоменклатуруЕГАИС", ПараметрыЗаполненияНоменклатурыЕГАИСДляЧека(Форма.Объект));
			КонецЕсли;
			
		ИначеЕсли Элемент = "НоменклатураПризнаки" Тогда
			
			Если Форма.ИмяФормы = "Документ.ЧекККМ.Форма.ФормаДокументаРМК"
				И Форма.ПараметрыИнтеграцииГосИС.Получить("ИСМП") <> Неопределено Тогда
				СтруктураДействий.Вставить("ЗаполнитьПризнакПродажиТовараПоРазрешению", Новый Структура("Номенклатура", "ПродаетсяПоРазрешению"));
			КонецЕсли;
			
			Если Форма.ПараметрыИнтеграцииГосИС.Получить("ЕГАИС") <> Неопределено Тогда
				СтруктураДействий.Вставить("ЗаполнитьПризнакМаркируемаяПродукция", Новый Структура("Номенклатура", "МаркируемаяПродукция"));
				СтруктураДействий.Вставить("ЗаполнитьВидПродукцииИС", Новый Структура("Номенклатура", "ВидПродукцииИС"));
			КонецЕсли;
			Если Форма.ПараметрыИнтеграцииГосИС.Получить("ИСМП") <> Неопределено Тогда
				СтруктураДействий.Вставить("ЗаполнитьПризнакМаркируемаяПродукция", Новый Структура("Номенклатура", "МаркируемаяПродукция"));
				СтруктураДействий.Вставить("ЗаполнитьВидПродукцииИС", Новый Структура("Номенклатура", "ВидПродукцииИС"));
			КонецЕсли;
			
			Если Форма.ИмяФормы = "Документ.ЧекККМ.Форма.ФормаДокументаРМК"
				И Форма.ПараметрыИнтеграцииГосИС["ВедетсяУчетВидовПродукцииСЧастичнымВыбытиемИС"] = Истина Тогда
				СтруктураДействий.Вставить(
					"ЗаполнитьЕстьВскрытыеПотребительскиеУпаковкиИС",
					Новый Структура("Номенклатура", "ЕстьВскрытыеПотребительскиеУпаковкиИС"));
			КонецЕсли;
		
		ИначеЕсли Элемент = "Характеристика" Или Элемент = "Серия" Тогда
			
			Если Форма.ПараметрыИнтеграцииГосИС.Получить("ЕГАИС") <> Неопределено Тогда
				СтруктураДействий.Вставить("ЗаполнитьНоменклатуруЕГАИС", ПараметрыЗаполненияНоменклатурыЕГАИСДляЧека(Форма.Объект));
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли ИнтеграцияИСУТКлиентСервер.ЕстьПострочныйСтатусПроверкиВФорме(Форма) Тогда
		
		Если Форма.ПараметрыИнтеграцииГосИС.Получить("ИСМП") <> Неопределено Тогда
			
			Если Не (Элемент = "Характеристика" Или Элемент = "Серия") Тогда
				СтруктураДействий.Вставить("ЗаполнитьВидПродукцииИС", Новый Структура("Номенклатура", "ВидПродукцииИС"));
				СтруктураДействий.Вставить("ЗаполнитьПризнакМаркируемаяПродукция", Новый Структура("Номенклатура", "МаркируемаяПродукция"));
			КонецЕсли;
			
			СтруктураДействий.Вставить("ЗаполнитьПризнакАвтоматическийОСУИС", Новый Структура);
			
		КонецЕсли;
		
	ИначеЕсли (Форма.ИмяФормы = "Документ.ВозвратТоваровОтПокупателя.Форма.ФормаДокумента"
		Или Форма.ИмяФормы = "Документ.ПриобретениеТоваровУслуг.Форма.ФормаДокумента") Тогда
		
		Если Форма.ПараметрыИнтеграцииГосИС.Получить("ИСМП") <> Неопределено 
			И Форма.ПараметрыИнтеграцииГосИС.Получить("ИСМП").ВидыПродукции.Количество() > 0 
			И Форма.ПараметрыИнтеграцииГосИС.Получить(
				Форма.ПараметрыИнтеграцииГосИС.Получить("ИСМП").ВидыПродукции[0])[0].ИспользоватьКолонкуСтатусаПроверкиПодбора Тогда
			СтруктураДействий.Вставить("ЗаполнитьВидПродукцииИС", Новый Структура("Номенклатура", "ВидПродукцииИС"));
			СтруктураДействий.Вставить("ЗаполнитьПризнакМаркируемаяПродукция", Новый Структура("Номенклатура", "МаркируемаяПродукция"));
			СтруктураДействий.Вставить("СнятьПризнакМаркируемаяПродукцияАлкоголь", Новый Структура);
		КонецЕсли;
			
	КонецЕсли;
	//-- Локализация
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ПоляСтрокиПоДействиям(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения, ДополнительныеПараметрыЗаполнения) Экспорт

	//++ Локализация
	Перем СтруктураПараметровДействия;
	ЧитаемыеПоля = Новый Структура();
	ИзменяемыеПоля = Новый Структура();
	
	Если СтруктураДействий.Свойство("ЗаполнитьИндексАкцизнойМарки", СтруктураПараметровДействия) Тогда
		
		ЧитаемыеПоля = Новый Структура();
		ЧитаемыеПоля.Вставить("МаркируемаяПродукция");
		ЧитаемыеПоля.Вставить("КоличествоАкцизныхМарок");
		ЧитаемыеПоля.Вставить("Количество");
		ЧитаемыеПоля.Вставить("КоличествоПродукцииПоАкцизнымМаркам");
		
		ИзменяемыеПоля = Новый Структура;
		ИзменяемыеПоля.Вставить("ИндексАкцизнойМарки");
		
		Если ТипЗнч(СтруктураПараметровДействия) = Тип("Структура") Тогда
			Если СтруктураПараметровДействия.Свойство("ИмяКолонкиКоличество") Тогда
				ИзменяемыеПоля.Вставить(СтруктураПараметровДействия.ИмяКолонкиКоличество);
			КонецЕсли;
		КонецЕсли;
		ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ДополнитьОписаниеПолей(
			"ЗаполнитьИндексАкцизнойМарки", ЧитаемыеПоля, ИзменяемыеПоля, КэшированныеЗначения);
			
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьНоменклатуруЕГАИС", СтруктураПараметровДействия) Тогда
		
		ЧитаемыеПоля = Новый Структура;
		ЧитаемыеПоля.Вставить("НоменклатураЕГАИС");
		ЧитаемыеПоля.Вставить("Номенклатура");
		ЧитаемыеПоля.Вставить("Характеристика");
		ЧитаемыеПоля.Вставить("Серия");
		
		ИзменяемыеПоля = Новый Структура;
		ИзменяемыеПоля.Вставить("НоменклатураДляВыбора");
		ИзменяемыеПоля.Вставить("СопоставлениеАлкогольнаяПродукция");
		ИзменяемыеПоля.Вставить("НоменклатураЕГАИС");
		
		ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ДополнитьОписаниеПолей(
			"ЗаполнитьНоменклатуруЕГАИС", ЧитаемыеПоля, ИзменяемыеПоля, КэшированныеЗначения);
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьАлкогольнуюПродукцию", СтруктураПараметровДействия) Тогда
		
		ЧитаемыеПоля = Новый Структура();
		ЧитаемыеПоля.Вставить("Номенклатура");
		ЧитаемыеПоля.Вставить("Характеристика");
		ЧитаемыеПоля.Вставить("Серия");
		
		ИзменяемыеПоля = Новый Структура();
		ИзменяемыеПоля.Вставить("АлкогольнаяПродукция");
		ИзменяемыеПоля.Вставить("СопоставлениеАлкогольнаяПродукция");
		ИзменяемыеПоля.Вставить("НоменклатураДляВыбора");
		
		ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ДополнитьОписаниеПолей(
			"ЗаполнитьАлкогольнуюПродукцию", ЧитаемыеПоля, ИзменяемыеПоля, КэшированныеЗначения);
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПродукциюВЕТИС", СтруктураПараметровДействия) Тогда
		
		ЧитаемыеПоля = Новый Структура();
		ЧитаемыеПоля = Новый Структура;
		ЧитаемыеПоля.Вставить("Номенклатура");
		ЧитаемыеПоля.Вставить("Характеристика");
		ЧитаемыеПоля.Вставить("Серия");
		
		ИзменяемыеПоля = Новый Структура();
		ИзменяемыеПоля.Вставить("Продукция");
		ИзменяемыеПоля.Вставить("НоменклатураДляВыбора");
		ИзменяемыеПоля.Вставить("СопоставлениеТекст");
		ИзменяемыеПоля.Вставить("ЕдиницаИзмеренияВЕТИС");
		
		ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ДополнитьОписаниеПолей("ЗаполнитьПродукциюВЕТИС",
			ЧитаемыеПоля, ИзменяемыеПоля, КэшированныеЗначения);
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ПересчитатьКоличествоЕдиницВЕТИС", СтруктураПараметровДействия) Тогда
		
		ЧитаемыеПоля = Новый Структура();
		ЧитаемыеПоля.Вставить("Номенклатура");
		ЧитаемыеПоля.Вставить("ЕдиницаИзмеренияВЕТИС");
		ЧитаемыеПоля.Вставить("Количество" + СтруктураПараметровДействия.Суффикс, 0);
		
		ИзменяемыеПоля = Новый Структура();
		ИзменяемыеПоля.Вставить("Количество" + СтруктураПараметровДействия.Суффикс + "ВЕТИС", 0);
		
		ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ДополнитьОписаниеПолей("ПересчитатьКоличествоЕдиницВЕТИС",
			ЧитаемыеПоля, ИзменяемыеПоля, КэшированныеЗначения);
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ПересчитатьКоличествоЕдиницПоВЕТИС", СтруктураПараметровДействия) Тогда
		
		ЧитаемыеПоля = Новый Структура();
		ЧитаемыеПоля.Вставить("Номенклатура");
		ЧитаемыеПоля.Вставить("ЕдиницаИзмеренияВЕТИС");
		ЧитаемыеПоля.Вставить("Количество" + СтруктураПараметровДействия.Суффикс + "ВЕТИС", 0);
		
		ИзменяемыеПоля = Новый Структура();
		ИзменяемыеПоля.Вставить("Количество" + СтруктураПараметровДействия.Суффикс, 0);
		
		ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ДополнитьОписаниеПолей("ПересчитатьКоличествоЕдиницПоВЕТИС",
			ЧитаемыеПоля, ИзменяемыеПоля, КэшированныеЗначения);
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ПересчитатьКоличествоЕдиницПоЗЕРНО", СтруктураПараметровДействия) Тогда
		
		ЧитаемыеПоля = Новый Структура();
		ЧитаемыеПоля.Вставить("Номенклатура");
		
		ИзменяемыеПоля = Новый Структура();
		ИзменяемыеПоля.Вставить("КоличествоЗЕРНО", 0);
		ИзменяемыеПоля.Вставить("Количество", 0);
		
		ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ДополнитьОписаниеПолей("ПересчитатьКоличествоЕдиницПоЗЕРНО",
			ЧитаемыеПоля, ИзменяемыеПоля, КэшированныеЗначения);
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьКодОКПД2") Тогда
		
		ЧитаемыеПоля = Новый Структура();
		ЧитаемыеПоля.Вставить("Номенклатура");
		
		ИзменяемыеПоля = Новый Структура();
		ИзменяемыеПоля.Вставить("ОКПД2");
		ИзменяемыеПоля.Вставить("ОКПД2Представление");
		
		ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ДополнитьОписаниеПолей("ЗаполнитьКодОКПД2",
			ЧитаемыеПоля, ИзменяемыеПоля, КэшированныеЗначения);
		
	КонецЕсли;
		
	Если СтруктураДействий.Свойство("ЗаполнитьВидПродукцииИС", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		ЧитаемыеПоля = Новый Структура();
		ИзменяемыеПоля = Новый Структура();
		
		Для Каждого Поле Из СтруктураПараметровДействия Цикл
			ЧитаемыеПоля.Вставить(Поле.Ключ);
			ИзменяемыеПоля.Вставить(Поле.Значение);
		КонецЦикла;
		
		ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ДополнитьОписаниеПолей("ЗаполнитьВидПродукцииИС",
			ЧитаемыеПоля, ИзменяемыеПоля, КэшированныеЗначения);
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакТребуетВзвешивания", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		ЧитаемыеПоля = Новый Структура();
		ИзменяемыеПоля = Новый Структура();
		
		Для Каждого Поле Из СтруктураПараметровДействия Цикл
			ЧитаемыеПоля.Вставить(Поле.Ключ);
			ИзменяемыеПоля.Вставить(Поле.Значение);
		КонецЦикла;
		
		ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ДополнитьОписаниеПолей("ЗаполнитьПризнакТребуетВзвешивания",
			ЧитаемыеПоля, ИзменяемыеПоля, КэшированныеЗначения);
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакПроизвольнаяЕдиницаУчета", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		ЧитаемыеПоля = Новый Структура();
		ИзменяемыеПоля = Новый Структура();
		
		Для Каждого Поле Из СтруктураПараметровДействия Цикл
			ЧитаемыеПоля.Вставить(Поле.Ключ);
			ИзменяемыеПоля.Вставить(Поле.Значение);
		КонецЦикла;
		
		ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ДополнитьОписаниеПолей("ЗаполнитьПризнакПроизвольнаяЕдиницаУчета",
			ЧитаемыеПоля, ИзменяемыеПоля, КэшированныеЗначения);
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакСкоропортящаясяПродукция", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		ЧитаемыеПоля = Новый Структура();
		ИзменяемыеПоля = Новый Структура();
		
		Для Каждого Поле Из СтруктураПараметровДействия Цикл
			ЧитаемыеПоля.Вставить(Поле.Ключ);
			ИзменяемыеПоля.Вставить(Поле.Значение);
		КонецЦикла;
		
		ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ДополнитьОписаниеПолей("ЗаполнитьПризнакСкоропортящаясяПродукция",
			ЧитаемыеПоля, ИзменяемыеПоля, КэшированныеЗначения);
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакМаркируемаяПродукция", СтруктураПараметровДействия) 
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		ЧитаемыеПоля = Новый Структура();
		ИзменяемыеПоля = Новый Структура();
		
		Для Каждого Поле Из СтруктураПараметровДействия Цикл
			ЧитаемыеПоля.Вставить(Поле.Ключ);
			ИзменяемыеПоля.Вставить(Поле.Значение);
		КонецЦикла;
		
		ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ДополнитьОписаниеПолей("ЗаполнитьПризнакМаркируемаяПродукция",
			ЧитаемыеПоля, ИзменяемыеПоля, КэшированныеЗначения);
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакПродажиТовараПоРазрешению", СтруктураПараметровДействия) 
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		ЧитаемыеПоля = Новый Структура();
		ИзменяемыеПоля = Новый Структура();
		
		Для Каждого Поле Из СтруктураПараметровДействия Цикл
			ЧитаемыеПоля.Вставить(Поле.Ключ);
			ИзменяемыеПоля.Вставить(Поле.Значение);
		КонецЦикла;
		
		ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ДополнитьОписаниеПолей("ЗаполнитьПризнакПродажиТовараПоРазрешению",
			ЧитаемыеПоля, ИзменяемыеПоля, КэшированныеЗначения);
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("СнятьПризнакМаркируемаяПродукцияАлкоголь",
			СтруктураПараметровДействия) Тогда
		
		ЧитаемыеПоля = Новый Структура();
		ЧитаемыеПоля.Вставить("ВидПродукцииИС");
		
		ИзменяемыеПоля = Новый Структура();
		ИзменяемыеПоля.Вставить("МаркируемаяПродукция");
		
		ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ДополнитьОписаниеПолей(
			"СнятьПризнакМаркируемаяПродукцияАлкоголь",
			ЧитаемыеПоля, ИзменяемыеПоля, КэшированныеЗначения);
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьСчетФактуруПеревыставленнуюВОтчетеКомитентуОЗакупках",
			СтруктураПараметровДействия) Тогда
		
		ЧитаемыеПоля = Новый Структура();
		ЧитаемыеПоля.Вставить("СчетФактураПолученный");
		
		ИзменяемыеПоля = Новый Структура();
		ИзменяемыеПоля.Вставить("СчетФактураВыданныйКомитенту");
		
		ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ДополнитьОписаниеПолей(
			"ЗаполнитьСчетФактуруПеревыставленнуюВОтчетеКомитентуОЗакупках",
			ЧитаемыеПоля, ИзменяемыеПоля, КэшированныеЗначения);
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьСчетФактуруПеревыставленнуюВОтчетеКомитентуОЗакупках") Тогда
		
		ЧитаемыеПоля = Новый Структура();
		ЧитаемыеПоля.Вставить("СчетФактураПолученный");
		ЧитаемыеПоля.Вставить("ДокументПриобретения");
		
		ИзменяемыеПоля = Новый Структура();
		ИзменяемыеПоля.Вставить("СчетФактураВыданныйКомитенту");

		ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ДополнитьОписаниеПолей(
			"ЗаполнитьСчетФактуруПеревыставленнуюВОтчетеКомитентуОЗакупках",
			ЧитаемыеПоля, ИзменяемыеПоля, КэшированныеЗначения);
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьКодОКПД2", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		ЧитаемыеПоля = Новый Структура();
		ИзменяемыеПоля = Новый Структура();
		Для Каждого Поле Из СтруктураПараметровДействия Цикл
			ЧитаемыеПоля.Вставить(Поле.Ключ);
			ИзменяемыеПоля.Вставить(Поле.Значение);
		КонецЦикла;
		
		ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ДополнитьОписаниеПолей("ЗаполнитьКодОКПД2",
			ЧитаемыеПоля, ИзменяемыеПоля, КэшированныеЗначения);
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьКодОКПД2Представление", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		ЧитаемыеПоля = Новый Структура();
		ИзменяемыеПоля = Новый Структура();
		Для Каждого Поле Из СтруктураПараметровДействия Цикл
			ЧитаемыеПоля.Вставить(Поле.Ключ);
			ИзменяемыеПоля.Вставить(Поле.Значение);
		КонецЦикла;
		
		ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ДополнитьОписаниеПолей("ЗаполнитьКодОКПД2Представление",
			ЧитаемыеПоля, ИзменяемыеПоля, КэшированныеЗначения);
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьСчетФактуруПолученнуюВОтчетеКомитентуОЗакупках",
			СтруктураПараметровДействия) Тогда
		
		ЧитаемыеПоля = Новый Структура();
		ЧитаемыеПоля.Вставить("ДокументПриобретения");
		
		ИзменяемыеПоля = Новый Структура();
		ИзменяемыеПоля.Вставить("СчетФактураПолученный");
		
		ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ДополнитьОписаниеПолей(
			"ЗаполнитьСчетФактуруПолученнуюВОтчетеКомитентуОЗакупках",
			ЧитаемыеПоля, ИзменяемыеПоля, КэшированныеЗначения);
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакПодакцизныйТовар", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		ЧитаемыеПоля = Новый Структура();
		ИзменяемыеПоля = Новый Структура();
		Для Каждого Поле Из СтруктураПараметровДействия Цикл
			ЧитаемыеПоля.Вставить(Поле.Ключ);
			ИзменяемыеПоля.Вставить(Поле.Значение);
		КонецЦикла;
		
		ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ДополнитьОписаниеПолей("ЗаполнитьПризнакПодакцизныйТовар",
			ЧитаемыеПоля, ИзменяемыеПоля, КэшированныеЗначения);
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьНоменклатуруЕГАИС") Тогда
		
		ЧитаемыеПоля = Новый Структура;
		ЧитаемыеПоля.Вставить("Номенклатура");
		ЧитаемыеПоля.Вставить("Характеристика");
		ЧитаемыеПоля.Вставить("Серия");
		
		ИзменяемыеПоля = Новый Структура;
		ИзменяемыеПоля.Вставить("НоменклатураЕГАИС");
		ИзменяемыеПоля.Вставить("НоменклатураДляВыбора");
		ИзменяемыеПоля.Вставить("СопоставлениеАлкогольнаяПродукция");
		
		ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ДополнитьОписаниеПолей("ЗаполнитьНоменклатуруЕГАИС",
			ЧитаемыеПоля, ИзменяемыеПоля, КэшированныеЗначения);
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьАлкогольнуюПродукцию") Тогда
		
		ЧитаемыеПоля = Новый Структура;
		ЧитаемыеПоля.Вставить("Номенклатура");
		ЧитаемыеПоля.Вставить("Характеристика");
		ЧитаемыеПоля.Вставить("Серия");
		
		ИзменяемыеПоля = Новый Структура;
		ИзменяемыеПоля.Вставить("АлкогольнаяПродукция");
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "НоменклатураДляВыбора") Тогда
			ИзменяемыеПоля.Вставить("НоменклатураДляВыбора");
			ИзменяемыеПоля.Вставить("СопоставлениеАлкогольнаяПродукция");
		КонецЕсли;
		
		ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ДополнитьОписаниеПолей("ЗаполнитьАлкогольнуюПродукцию",
			ЧитаемыеПоля, ИзменяемыеПоля, КэшированныеЗначения);
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакАвтоматическийОСУИС") Тогда
		
		ЧитаемыеПоля = Новый Структура;
		ЧитаемыеПоля.Вставить("Номенклатура");
		ЧитаемыеПоля.Вставить("Характеристика");
		ЧитаемыеПоля.Вставить("ВидПродукцииИС");
		
		ИзменяемыеПоля = Новый Структура;
		ИзменяемыеПоля.Вставить("АвтоматическийОСУИС");
		
		ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ДополнитьОписаниеПолей("ЗаполнитьПризнакАвтоматическийОСУИС",
			ЧитаемыеПоля, ИзменяемыеПоля, КэшированныеЗначения);
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПродукциюСАТУРН") Тогда
		
		ЧитаемыеПоля = Новый Структура;
		ЧитаемыеПоля.Вставить("Номенклатура");
		ЧитаемыеПоля.Вставить("Характеристика");
		ЧитаемыеПоля.Вставить("Серия");
		
		ИзменяемыеПоля = Новый Структура;
		ИзменяемыеПоля.Вставить("ПАТ");
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "НоменклатураДляВыбора") Тогда
			ИзменяемыеПоля.Вставить("НоменклатураДляВыбора");
			ИзменяемыеПоля.Вставить("СопоставлениеТекст");
		КонецЕсли;
		
		ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ДополнитьОписаниеПолей("ЗаполнитьПродукциюСАТУРН",
			ЧитаемыеПоля, ИзменяемыеПоля, КэшированныеЗначения);
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ПересчитатьКоличествоДляСАТУРН", СтруктураПараметровДействия) Тогда
		
		ЧитаемыеПоля = Новый Структура;
		ЧитаемыеПоля.Вставить("Номенклатура");
		ЧитаемыеПоля.Вставить("Упаковка");
		ЧитаемыеПоля.Вставить("ТипИзмеряемойВеличиныСАТУРН");
		ЧитаемыеПоля.Вставить("КоличествоВУпаковкеСАТУРН");

		ИзменяемыеПоля = Новый Структура;
		ИзменяемыеПоля.Вставить("КоличествоСАТУРН");
		ИзменяемыеПоля.Вставить("Количество");
		ИзменяемыеПоля.Вставить("КоличествоУпаковок");
		
		Если ЗначениеЗаполнено(СтруктураПараметровДействия.КоличествоСуффикс) Тогда
			
			Суффиксы = СтрРазделить(СтруктураПараметровДействия.КоличествоСуффикс, ",", Ложь);
			Для Каждого Суффикс Из Суффиксы Цикл
				
				ИмяПоляКоличествоУпаковок = СтрШаблон("%1%2", "КоличествоУпаковок", Суффикс);
				ИмяПоляКоличество = СтрШаблон("%1%2", "Количество", Суффикс);
				ИмяПоляКоличествоСАТУРН = СтрШаблон("%1%2%3", "Количество", Суффикс, "САТУРН");
				
				ИзменяемыеПоля.Вставить(ИмяПоляКоличествоУпаковок);
				ИзменяемыеПоля.Вставить(ИмяПоляКоличество);
				ИзменяемыеПоля.Вставить(ИмяПоляКоличествоСАТУРН);
				
			КонецЦикла;
			
		КонецЕсли;

		ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ДополнитьОписаниеПолей("ПересчитатьКоличествоДляСАТУРН",
			ЧитаемыеПоля, ИзменяемыеПоля, КэшированныеЗначения);
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ПересчитатьТипИзмеряемойВеличиныСАТУРН", СтруктураПараметровДействия) Тогда
		
		ЧитаемыеПоля = Новый Структура;
		ЧитаемыеПоля.Вставить("Номенклатура");
		ЧитаемыеПоля.Вставить("Упаковка");

		ИзменяемыеПоля = Новый Структура;
		ИзменяемыеПоля.Вставить("ТипИзмеряемойВеличиныСАТУРН");
		ИзменяемыеПоля.Вставить("КоличествоВУпаковкеСАТУРН");
		ИзменяемыеПоля.Вставить("КоличествоСАТУРН");
		ИзменяемыеПоля.Вставить("КоличествоУпаковок");
		
		Если ЗначениеЗаполнено(СтруктураПараметровДействия.ПараметрыЗаполнения.КоличествоСуффикс) Тогда
			
			Суффиксы = СтрРазделить(СтруктураПараметровДействия.ПараметрыЗаполнения.КоличествоСуффикс, ",", Ложь);
			Для Каждого Суффикс Из Суффиксы Цикл
				
				ИмяПоляКоличествоУпаковок = СтрШаблон("%1%2", "КоличествоУпаковок", Суффикс);
				ИмяПоляКоличество = СтрШаблон("%1%2", "Количество", Суффикс);
				ИмяПоляКоличествоСАТУРН = СтрШаблон("%1%2%3", "Количество", Суффикс, "САТУРН");
				
				ИзменяемыеПоля.Вставить(ИмяПоляКоличествоУпаковок);
				ИзменяемыеПоля.Вставить(ИмяПоляКоличество);
				ИзменяемыеПоля.Вставить(ИмяПоляКоличествоСАТУРН);
				
			КонецЦикла;
			
		КонецЕсли;

		ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ДополнитьОписаниеПолей("ПересчитатьТипИзмеряемойВеличиныСАТУРН",
			ЧитаемыеПоля, ИзменяемыеПоля, КэшированныеЗначения);
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#Область Локализация

//++ Локализация

// Возвращает сведения о коэффициенте пересчета единицы измерения ВЕТИС.
//
// Параметры:
//	ЕдиницаИзмеренияВЕТИС	- СправочникСсылка.ЕдиницыИзмеренияВЕТИС	- Единица измерения ВЕТИС, коэффициент которой нужно 
//																		получить.
//	КэшированныеЗначения	- Структура									- Сохраненные значения параметров, используемых при обработке 
//																		строки таблицы.
//	Номенклатура			- СправочникСсылка.Номенклатура				- Номенклатура для единицы хранения, которой осуществляется 
//																		получение коэффициента пересчета.
//
// Возвращаемое значение:
//	Структура - Структура со свойствами:
//		* КодОшибки						- Число				- Код ошибки получения коэффициента.
//																0 - Нет ошибок;
//																1 - Не заполнена единица измерения в справочнике 'ЕдиницыИзмеренияВЕТИС';
//																2 - В справочнике 'Номенклатура' выключена возможность пересчета количества 
//																	в соответствующую мерную единицу измерения;
//																3 - Не удалось сопоставить единицу хранения справочника 'Номенклатура' 
//																	с единицей измерения справочника 'ЕдиницыИзмеренияВЕТИС'.
//		* Коэффициент					- Число				- Коэффициент пересчета единицы измерения ВЕТИС.
//		* ТипИзмеряемойВеличины			- ПеречислениеСсылка.ТипыИзмеряемыхВеличин - Тип измеряемой величины единицы измерения 
//																						справочника 'ЕдиницыИзмеренияВЕТИС'.
//		* НужноОкруглятьКоличество		- Булево - Признак необходимости округления количества при пересчете.
//		* НужноОкруглятьКоличествоВЕТИС	- Булево - Признак необходимости округления количества ВетИС при пересчете.
//
Функция ПолучитьКоэффициентЕдиницыИзмеренияВЕТИС(ЕдиницаИзмеренияВЕТИС, КэшированныеЗначения, Номенклатура = Неопределено) Экспорт
	
	ИменаКлючей = "КодОшибки, Коэффициент, ТипИзмеряемойВеличины, НужноОкруглятьКоличество,"
					+ "НужноОкруглятьКоличествоВЕТИС";
	
	Результат = Новый Структура(ИменаКлючей);
	
	Если ЗначениеЗаполнено(ЕдиницаИзмеренияВЕТИС) Тогда
		
		КлючКоэффициента = ПакетнаяОбработкаТабличнойЧастиКлиентСервер.КлючКэшаУпаковки(Номенклатура, ЕдиницаИзмеренияВЕТИС);
		Кэш              = КэшированныеЗначения.КоэффициентыУпаковок[КлючКоэффициента];
		
		Если Кэш = Неопределено Тогда
			#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
				ЗначенияРеквизитов = ПакетнаяОбработкаТабличнойЧастиСерверЛокализация.ДанныеЕдиницыИзмеренияВЕТИС(
										ЕдиницаИзмеренияВЕТИС, 
										Номенклатура,
										КэшированныеЗначения);
				
				ЗаполнитьЗначенияСвойств(Результат, ЗначенияРеквизитов);
			#Иначе
				ТекстИсключения = НСтр("ru='Попытка получения коэффициента единицы измерения ВетИС на клиенте.'");
				ВызватьИсключение ТекстИсключения;
			#КонецЕсли
		Иначе
			Результат = Кэш;
		КонецЕсли;
	Иначе
		Результат.КодОшибки                     = 0;
		Результат.Коэффициент                   = 1;
		Результат.ТипИзмеряемойВеличины         = Неопределено;
		Результат.НужноОкруглятьКоличество      = Ложь;
		Результат.НужноОкруглятьКоличествоВЕТИС = Ложь;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Пересчитывает количество товара (в единицах хранения ФГИС Зерно) в текущей строке табличной части документа.
//
// Параметры:
//	ТекущаяСтрока			- Структура - Структура со свойствами строки документа.
//	СтруктураДействий		- Структура - Структура с действиями, которые нужно произвести.
//	КэшированныеЗначения	- Структура - Сохраненные значения параметров, используемых при обработке строки таблицы.
//
Процедура ПересчитатьКоличествоЕдиницПоЗЕРНОВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт
	
	Перем ПараметрыПересчетаКоличества;
	
	Если СтруктураДействий.Свойство("ПересчитатьКоличествоЕдиницПоЗЕРНО", ПараметрыПересчетаКоличества) Тогда
		ПараметрыПересчета = ПакетнаяОбработкаТабличнойЧастиКлиентСервер.НормализоватьПараметрыПересчетаЕдиниц(ТекущаяСтрока, ПараметрыПересчетаКоличества);
		Если ТекущаяСтрока.Количество > 0 Тогда
			Если ЗначениеЗаполнено(ПараметрыПересчета.Номенклатура) Тогда
				Коэффициент = КоэффициентУпаковкиЗерно(ПараметрыПересчета, КэшированныеЗначения);
				Если Не ЗначениеЗаполнено(Коэффициент) Тогда
					Коэффициент = 1;
				КонецЕсли;
				ТекущаяСтрока.КоличествоЗЕРНО = ТекущаяСтрока.Количество / Коэффициент;
			Иначе
				ТекущаяСтрока.Количество = 0;
			КонецЕсли;
		ИначеЕсли ЗначениеЗаполнено(ПараметрыПересчета.Номенклатура)
			И ТекущаяСтрока.КоличествоЗЕРНО > 0 Тогда
			Коэффициент = КоэффициентУпаковкиЗерно(ПараметрыПересчета, КэшированныеЗначения);
			ТекущаяСтрока.Количество = ТекущаяСтрока.КоличествоЗЕРНО * Коэффициент;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Устанавливает тип измеряемой величины и рассчитывает зависимые поля.
//
// Параметры:
//	ТекущаяСтрока			- Структура - Структура со свойствами строки документа.
//	СтруктураДействий		- Структура - Структура с действиями, которые нужно произвести.
//	КэшированныеЗначения	- Структура - Сохраненные значения параметров, используемых при обработке строки таблицы.
//
Процедура ПересчитатьТипИзмеряемойВеличиныСАТУРН(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт
	
	ПараметрыВыполнения = Неопределено;
	
	Если СтруктураДействий.Свойство("ПересчитатьТипИзмеряемойВеличиныСАТУРН", ПараметрыВыполнения)
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		
		ПараметрыЗаполнения = ПараметрыВыполнения.ПараметрыЗаполнения;
		
		ДанныеУпаковки = ДанныеУпаковкиСАТУРНИзКэшированныхЗначений(ТекущаяСтрока.Номенклатура, ТекущаяСтрока.Упаковка, КэшированныеЗначения);
		
		// ТипИзмеряемойВеличины
		// 0 - Неизвестен
		// 1 - Объем
		// 2 - Вес
		// 3 - Вес или Объем
		ТипИзмеряемойВеличины = ТипИзмеряемойВеличиныСАТУРНПоДаннымУпаковки(ДанныеУпаковки);
		ТекущийТипИзмеряемойВеличины = ТекущийТипИзмеряемойВеличиныСАТУРНПоДаннымСтроки(ТекущаяСтрока, ТипИзмеряемойВеличины);
		
		Если ТипИзмеряемойВеличины <> 0 Тогда
			
			Если ПараметрыЗаполнения = Неопределено Тогда
				ПараметрыЗаполнения = ИнтеграцияСАТУРНКлиентСервер.ПараметрыЗаполненияТабличнойЧасти();
			КонецЕсли;
			
			Если ПараметрыЗаполнения.ПересчитатьКоличествоВУпаковкеСАТУРН Тогда
				Если ТекущийТипИзмеряемойВеличины = 1 Тогда
					ТекущаяСтрока.КоличествоВУпаковкеСАТУРН = ДанныеУпаковки.Объем;
				ИначеЕсли ТекущийТипИзмеряемойВеличины = 2 Тогда
					ТекущаяСтрока.КоличествоВУпаковкеСАТУРН = ДанныеУпаковки.Вес;
				КонецЕсли;
			КонецЕсли;
			
			Суффиксы = СтрРазделить(ПараметрыЗаполнения.КоличествоСуффикс, ",");
			Если Суффиксы.Количество() = 0 Тогда
				Суффиксы.Добавить("");
			КонецЕсли;
			
			Для Каждого Суффикс Из Суффиксы Цикл
				ИмяПоляКоличествоУпаковок = СтрШаблон("%1%2","КоличествоУпаковок", Суффикс);
				ИмяПоляКоличествоСАТУРН   = СтрШаблон("%1%2%3", "Количество", Суффикс,"САТУРН");
			Если ПараметрыЗаполнения.ПересчитатьКоличествоУпаковокПоОстаткуСАТУРН Тогда
				Если ТекущаяСтрока.КоличествоВУпаковкеСАТУРН = 0 Тогда
					ТекущаяСтрока[ИмяПоляКоличествоУпаковок] = 0;
				Иначе
					ТекущаяСтрока[ИмяПоляКоличествоУпаковок] = ТекущаяСтрока[ИмяПоляКоличествоСАТУРН] / ТекущаяСтрока.КоличествоВУпаковкеСАТУРН;
				КонецЕсли;
			ИначеЕсли ПараметрыЗаполнения.ПересчитатьКоличествоУпаковокПоСАТУРН Тогда
				Если ТекущийТипИзмеряемойВеличины = 1 Тогда
					Если ДанныеУпаковки.Объем = 0 Тогда
						ТекущаяСтрока[ИмяПоляКоличествоУпаковок] = 0;
					Иначе
						ТекущаяСтрока[ИмяПоляКоличествоУпаковок] = ТекущаяСтрока[ИмяПоляКоличествоСАТУРН] * ТекущаяСтрока.КоличествоВУпаковкеСАТУРН / ДанныеУпаковки.Объем;
					КонецЕсли;
				ИначеЕсли ТекущийТипИзмеряемойВеличины = 2 Тогда
					Если ДанныеУпаковки.Вес = 0 Тогда
						ТекущаяСтрока[ИмяПоляКоличествоУпаковок] = 0;
					Иначе
						ТекущаяСтрока[ИмяПоляКоличествоУпаковок] = ТекущаяСтрока[ИмяПоляКоличествоСАТУРН] * ТекущаяСтрока.КоличествоВУпаковкеСАТУРН / ДанныеУпаковки.Вес;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если ПараметрыЗаполнения.ПересчитатьКоличествоСАТУРН
				И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "КоличествоСАТУРН") Тогда
				ТекущаяСтрока[ИмяПоляКоличествоСАТУРН] = ТекущаяСтрока[ИмяПоляКоличествоУпаковок];
			КонецЕсли;
			
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Выполняет действия при изменении подобранного количества (поле КоличествоУпаковок) в строке таблицы формы.
//
// Параметры:
//	ТекущаяСтрока			- Структура - Структура со свойствами строки документа.
//	СтруктураДействий		- Структура - Структура с действиями, которые нужно произвести.
//	КэшированныеЗначения	- Структура - Сохраненные значения параметров, используемых при обработке строки таблицы.
//
Процедура ПересчитатьКоличествоДляСАТУРН(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт
	
	ПараметрыЗаполнения = Неопределено;
	
	Если СтруктураДействий.Свойство("ПересчитатьКоличествоДляСАТУРН", ПараметрыЗаполнения)
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "КоличествоУпаковок") 
			И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "Упаковка") Тогда
			
			ДанныеУпаковки = ДанныеУпаковкиСАТУРНИзКэшированныхЗначений(ТекущаяСтрока.Номенклатура, ТекущаяСтрока.Упаковка, КэшированныеЗначения);
		
			Коэффициент = ДанныеУпаковки.Коэффициент;
			Если Не ЗначениеЗаполнено(Коэффициент) Тогда
				Коэффициент = 1;
			КонецЕсли;
			
			Если ПараметрыЗаполнения = Неопределено Тогда
				Суффиксы = Новый Массив;
				Суффиксы.Добавить("");
			Иначе
				Суффиксы = СтрРазделить(ПараметрыЗаполнения.КоличествоСуффикс, ",");
				Если ЗначениеЗаполнено(ПараметрыЗаполнения.КоличествоСуффикс) Тогда
					// ТипИзмеряемойВеличины
					// 0 - Неизвестен
					// 1 - Объем
					// 2 - Вес
					// 3 - Вес или Объем
					ТипИзмеряемойВеличины = ТипИзмеряемойВеличиныСАТУРНПоДаннымУпаковки(ДанныеУпаковки);
					ТекущийТипИзмеряемойВеличины = ТекущийТипИзмеряемойВеличиныСАТУРНПоДаннымСтроки(ТекущаяСтрока, ТипИзмеряемойВеличины);
				Иначе
					Суффиксы.Добавить("");
					ТипИзмеряемойВеличины = Неопределено;
				КонецЕсли;
			КонецЕсли;
			
			Для Каждого Суффикс Из Суффиксы Цикл
				
				ИмяПоляКоличествоУпаковок = СтрШаблон("%1%2","КоличествоУпаковок", Суффикс);
				ИмяПоляКоличествоСАТУРН   = СтрШаблон("%1%2%3", "Количество", Суффикс,"САТУРН");
				
				ТекущаяСтрока["Количество" + Суффикс] = ТекущаяСтрока[ИмяПоляКоличествоУпаковок] * Коэффициент;
				
				Если ПараметрыЗаполнения <> Неопределено И ПараметрыЗаполнения.ПересчитатьКоличествоСАТУРН
					И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, ИмяПоляКоличествоСАТУРН) Тогда
					Если ЗначениеЗаполнено(Суффикс) И ТипИзмеряемойВеличины <> 0 Тогда
						Если ТекущаяСтрока.КоличествоВУпаковкеСАТУРН = 0 Тогда
							ТекущаяСтрока[ИмяПоляКоличествоСАТУРН] = 0;
						ИначеЕсли ТекущийТипИзмеряемойВеличины = 1 Тогда
							ТекущаяСтрока[ИмяПоляКоличествоСАТУРН] = ТекущаяСтрока[ИмяПоляКоличествоУпаковок] * ДанныеУпаковки.Объем / ТекущаяСтрока.КоличествоВУпаковкеСАТУРН;
						ИначеЕсли ТекущийТипИзмеряемойВеличины = 2 Тогда
							ТекущаяСтрока[ИмяПоляКоличествоСАТУРН] =  ТекущаяСтрока[ИмяПоляКоличествоУпаковок] * ДанныеУпаковки.Вес/ ТекущаяСтрока.КоличествоВУпаковкеСАТУРН;
						КонецЕсли;
					Иначе
						ТекущаяСтрока[ИмяПоляКоличествоСАТУРН] = ТекущаяСтрока[ИмяПоляКоличествоУпаковок];
					КонецЕсли;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

//-- Локализация

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ Локализация

// Возвращает структуру параметров для действия ЗаполнитьНоменклатуруЕГАИС.
//
// Параметры:
//  Объект - ДанныеФормыСтруктураСКоллекцией - объект чека на форме:
//   * Серии - ДанныеФормыКоллекция - ТЧ серий
//
// Возвращаемое значение:
//  Структура:
//   *ИмяКолонки - Строка
//   *Серии - ТабличнаяЧасть, ДанныеФормыКоллекция -
//
Функция ПараметрыЗаполненияНоменклатурыЕГАИСДляЧека(Объект) Экспорт
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("ИмяКолонки", "НоменклатураЕГАИС");
	ПараметрыЗаполнения.Вставить("Серии", Объект.Серии);
	Возврат ПараметрыЗаполнения;
	
КонецФункции

Функция КоэффициентУпаковкиЗерно(ПараметрыПересчета, КэшированныеЗначения)
	
	Коэффициент = КэшированныеЗначения.КоэффициентыУпаковок[ПараметрыПересчета.Номенклатура];
	Если Коэффициент = Неопределено Тогда
		Коэффициент = ИнтеграцияИСВызовСервераУТ.КоэффициентУпаковки(ПараметрыПересчета.Упаковка, ПараметрыПересчета.Номенклатура);
		КэшированныеЗначения.КоэффициентыУпаковок.Вставить(ПараметрыПересчета.Номенклатура, Коэффициент);
	КонецЕсли;
	
	Возврат Коэффициент;
	
КонецФункции

// Данные упаковки САТУРН из кэшированных значений
// 
// Параметры:
//  Номенклатура - СправочникСсылка.Номенклатура
//  Упаковка - СправочникСсылка.УпаковкиЕдиницыИзмерения - Упаковка
//  КэшированныеЗначения - Неопределено, Структура - Кэшированные значения
// 
// Возвращаемое значение:
//  Структура    - данные упаковки:
//  * Коэффициент - Число - коэффициент упаковки,
//  * Вес - Число - вес упаковки,
//  * Объем - Число - объем упаковки,
//  * ТипИзмеряемойВеличиныВес - Булево - допустим вес,
//  * ТипИзмеряемойВеличиныОбъем - Булево - допустим объем;
//  Неопределено - данных нет в кэше.
Функция ДанныеУпаковкиСАТУРНИзКэшированныхЗначений(Номенклатура, Упаковка, КэшированныеЗначения) Экспорт
	
	ДанныеУпаковки = Неопределено;
	
	Если КэшированныеЗначения <> Неопределено Тогда
		
		Если Не КэшированныеЗначения.Свойство("КоэффициентВесОбъемУпаковки") Тогда
			КэшированныеЗначения.Вставить("КоэффициентВесОбъемУпаковки", Новый Соответствие);
		КонецЕсли;
		
		ДанныеНоменклатуры = КэшированныеЗначения.КоэффициентВесОбъемУпаковки[Номенклатура];
		Если ДанныеНоменклатуры = Неопределено Тогда
			КэшированныеЗначения.КоэффициентВесОбъемУпаковки.Вставить(Номенклатура, Новый Соответствие);
			ДанныеНоменклатуры = КэшированныеЗначения.КоэффициентВесОбъемУпаковки[Номенклатура];
		КонецЕсли;
		
		Если Упаковка = Неопределено Тогда
			КлючУпаковки = ИнтеграцияИСКлиентСерверПовтИсп.ПустоеЗначениеУпаковки();
			Если КлючУпаковки = Неопределено Тогда
				КлючУпаковки = "";
			КонецЕсли;
		Иначе
			КлючУпаковки = Упаковка;
		КонецЕсли;
		
		ДанныеУпаковки = ДанныеНоменклатуры[КлючУпаковки];
		
	КонецЕсли;
	
	Возврат ДанныеУпаковки;
	
КонецФункции

// Тип измеряемой величины САТУРН по данным упаковки.
// 
// Параметры:
//  ДанныеУпаковки - Структура - Данные упаковки
// 
// Возвращаемое значение:
//  Число - Тип измеряемой величины по данным упаковки
Функция ТипИзмеряемойВеличиныСАТУРНПоДаннымУпаковки(ДанныеУпаковки)
	
	// ТипИзмеряемойВеличины
	// 0 - Неизвестен
	// 1 - Объем
	// 2 - Вес
	// 3 - Вес или Объем
	Если ДанныеУпаковки.ТипИзмеряемойВеличиныОбъем Тогда
		ТипИзмеряемойВеличины = 1;
	ИначеЕсли ДанныеУпаковки.ТипИзмеряемойВеличиныВес Тогда
		ТипИзмеряемойВеличины = 2;
	ИначеЕсли ДанныеУпаковки.Вес > 0 И ДанныеУпаковки.Объем > 0 Тогда
		ТипИзмеряемойВеличины = 3;
	ИначеЕсли ДанныеУпаковки.Объем > 0 Тогда
		ТипИзмеряемойВеличины = 1;
	ИначеЕсли ДанныеУпаковки.Вес > 0 Тогда
		ТипИзмеряемойВеличины = 2;
	Иначе
		ТипИзмеряемойВеличины = 0;
	КонецЕсли;
	
	Возврат ТипИзмеряемойВеличины;
	
КонецФункции

// Текущий тип измеряемой величины по данным строки.
// 
// Параметры:
//  ТекущаяСтрока - Структура - Текущая строка
//  ТипИзмеряемойВеличины -Число - Тип измеряемой величины
// 
// Возвращаемое значение:
//  Число - Текущий тип измеряемой величины по данным строки
Функция ТекущийТипИзмеряемойВеличиныСАТУРНПоДаннымСтроки(ТекущаяСтрока, ТипИзмеряемойВеличины)
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "ТипИзмеряемойВеличиныСАТУРН") Тогда
		
		ТипИзмеряемойВеличиныОбъем = ПредопределенноеЗначение("Перечисление.ТипыИзмеряемыхВеличинСАТУРН.Объем");
		ТипИзмеряемойВеличиныВес   = ПредопределенноеЗначение("Перечисление.ТипыИзмеряемыхВеличинСАТУРН.Вес");
	
		Если Не ЗначениеЗаполнено(ТекущаяСтрока.ТипИзмеряемойВеличиныСАТУРН) Тогда
			Если ТипИзмеряемойВеличины = 1 Или ТипИзмеряемойВеличины = 3 Тогда
				ТекущаяСтрока.ТипИзмеряемойВеличиныСАТУРН = ТипИзмеряемойВеличиныОбъем;
			ИначеЕсли ТипИзмеряемойВеличины = 2 Или ТипИзмеряемойВеличины = 0 Тогда
				ТекущаяСтрока.ТипИзмеряемойВеличиныСАТУРН = ТипИзмеряемойВеличиныВес;
			КонецЕсли;
		КонецЕсли;
		
		Если ТекущаяСтрока.ТипИзмеряемойВеличиныСАТУРН = ТипИзмеряемойВеличиныОбъем Тогда
			ТекущийТипИзмеряемойВеличины = 1;
		ИначеЕсли ТекущаяСтрока.ТипИзмеряемойВеличиныСАТУРН = ТипИзмеряемойВеличиныВес  Тогда
			ТекущийТипИзмеряемойВеличины = 2;
		Иначе
			ТекущийТипИзмеряемойВеличины = 0;
		КонецЕсли;
	Иначе
		ТекущийТипИзмеряемойВеличины = 0;
	КонецЕсли;
	
	Возврат ТекущийТипИзмеряемойВеличины;
	
КонецФункции

//-- Локализация
#КонецОбласти