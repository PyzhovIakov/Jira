// В данный модуль вынесены методы подсистемы CRM, вызываемые из модулей типовых объектов. 
// Выносить можно только те методы, которые не вызывают стандартные методы типового модуля или обработчики форм. 
// Т.е. вызывают только те методы, что тоже вынесены из типового или не содержат таких вызовов.

// Для каждого объекта необходимо задать свою #Область с именем объекта и модуля, как он называется в метаданных.
#Область ПрограммныйИнтерфейс

#Область ДокументыОбращений

// Выводит предупреждение о невозможности отклонения.
//
// Параметры:
//  ТекущееСостояние - СправочникСсылка.CRM_СостоянияОбращений - состояние обращения.
//
Процедура ПоказатьПредупреждениеОбращениеОбработано(ТекущееСостояние) Экспорт
	
	ШаблонСообщения = НСтр("ru = 'Обращение находится в статусе ""%1"". 
								  |Отклонение невозможно!'");
	ПоказатьПредупреждение(, СтрШаблон(ШаблонСообщения, ТекущееСостояние));
	
КонецПроцедуры

// Меняет состояние обращения на Новый
//
// Параметры:
//  Обращение - РегистрСведений.CRM_СостоянияЛидов.Лид - ссылка на обращение
//  ГруппаФормы - ЭлементФормы - Группа формы, где находится кнопка отклонения.
//  ОтключатьДоступностьГруппы - Булево - Отключать доступность группы.
//
Процедура ОтменитьОтклонение(Обращение, ГруппаФормы, ОтключатьДоступностьГруппы = Истина) Экспорт
	CRM_МетодыФормДокументовСервер.ОтменитьОтклонение(Обращение);
	Если ОтключатьДоступностьГруппы Тогда
		ГруппаФормы.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры

// Изменяет доступность команды в зависимости от состояния обращения
//
// Параметры:
//  СостояниеОбращения - СправочникСсылка.CRM_СостоянияОбращений - Состояние обращения.
//  Форма	 - ФормаКлиентскогоПриложения - Форма.
//
Процедура ИзменитьДоступностьКомандыОтменитьОтклонение(СостояниеОбращения, Форма) Экспорт
	
	ОбращениеОтклонено = СостояниеОбращения = ПредопределенноеЗначение("Справочник.CRM_СостоянияЛидов.Отклонен");
	
	ЭлементФормы = Форма.Элементы.Найти("ФормаОтменитьОтклонение");
	
	Если ЭлементФормы <> Неопределено Тогда
		ЭлементФормы.Доступность = ОбращениеОтклонено;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СвязьСИнтересами

// Вызывается в формах при выборе команды, которая добавлена программно
//
// Параметры:
//  Форма					 - ФормаКлиентскогоПриложения	 - форма в которой расположена команда
//  Команда					 - КомандаФормы					 - выбранная команда
//  ДополнительныеПараметры	 - Структура					 - дополнительные параметры
//
Процедура ВыполнитьПереопределяемуюКоманду(Форма, Команда, ДополнительныеПараметры) Экспорт
	
	ЕстьПредмет = ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "Предмет");
	Если ЕстьПредмет И ТипЗнч(Форма.Предмет) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
		Если Команда.Имя = "CRM_ИнтересСтрокой" Тогда
			CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики("CRM_Статистика.Взаимодействия.ЭлектронноеПисьмоВходящее.Удобство.КоличествоВыбораРеквизитаИнтерес");
		ИначеЕсли Команда.Имя = "ОткрытьИнтерес" Тогда
			CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики("CRM_Статистика.Взаимодействия.ЭлектронноеПисьмоВходящее.Удобство.КоличествоНажатийКнопкаОткрытьИнтерес");
		ИначеЕсли Команда.Имя = "СкрытьПоказатьИнтересы" Тогда
			CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики("CRM_Статистика.Взаимодействия.ЭлектронноеПисьмоВходящее.Удобство.КоличествоНажатийКнопкаСкрытьПоказатьИнтересы");
		КонецЕсли;
	ИначеЕсли ЕстьПредмет И ТипЗнч(Форма.Предмет) = Тип("ДокументСсылка.ЭлектронноеПисьмоИсходящее") Тогда
		Если Команда.Имя = "CRM_ИнтересСтрокой" Тогда
			CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики("CRM_Статистика.Взаимодействия.ЭлектронноеПисьмоОтправленное.Удобство.КоличествоВыбораРеквизитаИнтерес");
		ИначеЕсли Команда.Имя = "ОткрытьИнтерес" Тогда
			CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики("CRM_Статистика.Взаимодействия.ЭлектронноеПисьмоОтправленное.Удобство.КоличествоНажатийКнопкаОткрытьИнтерес");
		ИначеЕсли Команда.Имя = "СкрытьПоказатьИнтересы" Тогда
			CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики("CRM_Статистика.Взаимодействия.ЭлектронноеПисьмоОтправленное.Удобство.КоличествоНажатийКнопкаСкрытьПоказатьИнтересы");
		КонецЕсли;
	Иначе
		Если Команда.Имя = "CRM_ИнтересСтрокой" Тогда
			CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики("CRM_Статистика.Взаимодействия.СозданиеЭлектронногоПисьма.Удобство.КоличествоВыбораРеквизитаИнтерес");
		ИначеЕсли Команда.Имя = "ОткрытьИнтерес" Тогда
			CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики("CRM_Статистика.Взаимодействия.СозданиеЭлектронногоПисьма.Удобство.КоличествоНажатийКнопкаОткрытьИнтерес");
		ИначеЕсли Команда.Имя = "СкрытьПоказатьИнтересы" Тогда
			CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики("CRM_Статистика.Взаимодействия.СозданиеЭлектронногоПисьма.Удобство.КоличествоНажатийКнопкаСкрытьПоказатьИнтересы");
		КонецЕсли;
	КонецЕсли;
	
	Если Команда.Имя = "СкрытьПоказатьИнтересы"	Тогда
		КомандаСкрытьПоказатьИнтересы(Форма);
	КонецЕсли;	
	
	Если Команда.Имя = "CRM_ИнтересСтрокой"	Тогда
		Если ПустаяСтрока(Форма.CRM_ИнтересСтрокой) И Форма.CRM_ТаблицаИнтересов.Количество() > 0 Тогда
			// нажата кнопка очистить
			ОчиститьТекущийИнтерес(Форма);
		Иначе
			// нажата кнопка выбора
			ИнтересНачалоВыбора(Форма, Истина);
		КонецЕсли;	
	КонецЕсли;
	
	Если Команда.Имя = "CRM_Интерес_Основной"	Тогда
		ТекущиеДанные = Форма.Элементы.CRM_ТаблицаИнтересов.ТекущиеДанные;
		
		Если ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		Если ТекущиеДанные.Партнер <> Форма.CRM_Интерес_Клиент Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Клиент выбранного Интереса не совпадает с клиентом документа! Установка отменена.'"));
			Возврат;
		КонецЕсли;
		Форма.CRM_ИнтересСтрокой =
			CRM_МетодыФормДокументовСервер.СформироватьПредставлениеИнтересаСтрокой(ТекущиеДанные.Ссылка);
		МассивСтрок = Форма.CRM_ТаблицаИнтересов.НайтиСтроки(Новый Структура("Ссылка", ТекущиеДанные.Ссылка));
		Форма.CRM_ТаблицаИнтересов.Сдвинуть(Форма.CRM_ТаблицаИнтересов.Индекс(МассивСтрок[0]),
			 -Форма.CRM_ТаблицаИнтересов.Индекс(МассивСтрок[0]));
		Форма.Модифицированность = Истина;
		
	КонецЕсли;	
	
	Если Команда.Имя = "ДобавитьИнтерес" Тогда
		ИнтересНачалоВыбора(Форма, Ложь);
	КонецЕсли;
	
	Если Команда.Имя = "CRM_ТаблицаИнтересов" Тогда
		ТекущиеДанные = Форма.Элементы.CRM_ТаблицаИнтересов.ТекущиеДанные;
		
		Если ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ПоказатьЗначение(, ТекущиеДанные.Ссылка);
	КонецЕсли;
	
	Если Команда.Имя = "ОткрытьИнтерес" Тогда
		Если Форма.CRM_ТаблицаИнтересов.Количество() > 0 Тогда
			ПоказатьЗначение(, Форма.CRM_ТаблицаИнтересов[0].Ссылка);
		КонецЕсли;
	КонецЕсли;
	
	Если Команда.Имя = "УдалитьИнтерес" Тогда
		ТекущиеДанные = Форма.Элементы.CRM_ТаблицаИнтересов.ТекущиеДанные;
		
		Если ТекущиеДанные = Неопределено Или ТекущиеДанные.ВведенНаОсновании Тогда
			Возврат;
		КонецЕсли;

		МассивСтрок = Форма.CRM_ТаблицаИнтересов.НайтиСтроки(Новый Структура("Ссылка", ТекущиеДанные.Ссылка));
		Форма.CRM_ТаблицаИнтересов.Удалить(Форма.CRM_ТаблицаИнтересов.Индекс(МассивСтрок[0]));
		Форма.Модифицированность = Истина;
		Если Форма.CRM_ТаблицаИнтересов.Количество() > 0 Тогда
			Форма.CRM_ИнтересСтрокой =
				CRM_МетодыФормДокументовСервер.СформироватьПредставлениеИнтересаСтрокой(Форма.CRM_ТаблицаИнтересов[0].Ссылка);
		Иначе	
			Форма.CRM_ИнтересСтрокой = "";
		КонецЕсли;
		
		ИзменитьКартинкуСкрытьПоказатьИнтересы(Форма);
	КонецЕсли;
	
КонецПроцедуры

// Процедура - Интерес окончание выбора
//
// Параметры:
//  ВыбранноеЗначение	 - СправочникСсылка	 - Значение, переданное при вызове метода Закрыть
//  ДопПараметры		 - Структура		 - Структура дополнительных параметров.//
Процедура ИнтересОкончаниеВыбора(ВыбранноеЗначение, ДопПараметры) Экспорт
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	Форма = ДопПараметры.Форма;	
	Если ДопПараметры.УстановитьОсновным Тогда
		Форма.CRM_ИнтересСтрокой = CRM_МетодыФормДокументовСервер.СформироватьПредставлениеИнтересаСтрокой(ВыбранноеЗначение);
	КонецЕсли;	
	
	МассивСтрок = Форма.CRM_ТаблицаИнтересов.НайтиСтроки(Новый Структура("Ссылка", ВыбранноеЗначение));
	
	Если МассивСтрок.Количество() = 0 Тогда
		Если ДопПараметры.УстановитьОсновным И Форма.CRM_ТаблицаИнтересов.Количество() > 0 Тогда
			НоваяСтрока = Форма.CRM_ТаблицаИнтересов[0];
		Иначе
			НоваяСтрока = Форма.CRM_ТаблицаИнтересов.Добавить();
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(НоваяСтрока,
			 CRM_МетодыФормДокументовСервер.ПолучитьСтруктуруСтрокиИнтересов(ВыбранноеЗначение));
	ИначеЕсли ДопПараметры.УстановитьОсновным Тогда	
		Форма.CRM_ТаблицаИнтересов.Сдвинуть(Форма.CRM_ТаблицаИнтересов.Индекс(МассивСтрок[0]),
			 -Форма.CRM_ТаблицаИнтересов.Индекс(МассивСтрок[0]));
	КонецЕсли;
	Форма.ИнтересИзменен = Истина;
	Форма.Модифицированность = Истина;
	
	Если Форма.ИмяФормы = "Документ.ЭлектронноеПисьмоВходящее.Форма.CRM_ФормаДокумента" Тогда
		Если CRM_ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(Форма.Папка,
			 "CRM_Вид") <> ПредопределенноеЗначение("Перечисление.CRM_ВидыПапокЭлектроннойПочты.Обработанные")
			И CRM_ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(Форма.Объект.УчетнаяЗапись,
				 "CRM_ПереноситьВОбработанные") Тогда
			Если CRM_ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(Форма.Объект.УчетнаяЗапись,
				 "CRM_ЗадаватьВопросПриПереносеВОбработанные") Тогда
				ОписаниеОповещения = Новый ОписаниеОповещения("CRM_ВопросПриПереносеВОбработанныеЗавершение", ЭтотОбъект, Форма);
				CRM_УправлениеЭлектроннойПочтойКлиент.ВопросПеренестиПисьмоВПапкуОбработанные(Форма.Объект.УчетнаяЗапись,
					 Форма.Папка,
					 ОписаниеОповещения);
			Иначе
				CRM_ВопросПриПереносеВОбработанныеЗавершение(CRM_УправлениеЭлектроннойПочтой.ПапкаУчетнойЗаписи(Форма.Объект.УчетнаяЗапись,
					 "Обработанные"),
					 Форма);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ИзменитьКартинкуСкрытьПоказатьИнтересы(Форма);
	
КонецПроцедуры

// Установить свойства группы интерес в форме документа
//
// Параметры:
//  Форма	 - ФормаКлиентскогоПриложения	 - Форма. 
//
Процедура УстановитьСвойстваГруппыИнтересВФормеДокумента(Форма) Экспорт
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ЕстьИнтересыДляВыбора") Тогда
		Форма.Элементы.ГруппаИнтерес.Видимость = Форма.ЕстьИнтересыДляВыбора;
	КонецЕсли;	
	
КонецПроцедуры

// Процедура - CRM вопрос при переносе в обработанные завершение
//
// Параметры:
//  ПапкаОтработанные	 - СправочникСсылка	 - Значение, переданное при вызове метода Закрыть
//  ФормаПисьма			 - ФормаКлиентскогоПриложения	 - Форма письма
//
Процедура CRM_ВопросПриПереносеВОбработанныеЗавершение(ПапкаОтработанные, ФормаПисьма) Экспорт
	
	Если ПапкаОтработанные = ПредопределенноеЗначение("Справочник.ПапкиЭлектронныхПисем.ПустаяСсылка") Тогда
		Возврат;
	КонецЕсли;
	CRM_ВзаимодействияВызовСервера.УстановитьПапкуЭлектронногоПисьма(ФормаПисьма.Объект.Ссылка, ПапкаОтработанные);
	
	ФормаПисьма.Прочитать();
	ФормаПисьма.Записать();
	
	Оповестить("CRM_УстановленФлагОбработано", , ФормаПисьма);
	Оповестить("ОбновитьАРМ", "НеРазобрано", ФормаПисьма);
	
	Если ФормаПисьма.Открыта() Тогда
		ФормаПисьма.Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИзменитьКартинкуСкрытьПоказатьИнтересы(Форма)
	
	Если Форма.CRM_ТаблицаИнтересов.Количество() > 1 Тогда
		Форма.Элементы.СкрытьПоказатьИнтересы.Картинка = ?(
			Форма.Элементы.ГруппаCRM_ТаблицаИнтересов.Видимость,
			БиблиотекаКартинок.CRM_ВыпадающийСписокГолубойРаскрытая,
			БиблиотекаКартинок.CRM_ВыпадающийСписокГолубой);
	Иначе
		Форма.Элементы.СкрытьПоказатьИнтересы.Картинка = ?(
			Форма.Элементы.ГруппаCRM_ТаблицаИнтересов.Видимость,
			БиблиотекаКартинок.CRM_ВыпадающийСписокРаскрытая,
			БиблиотекаКартинок.CRM_ВыпадающийСписок);
	КонецЕсли;
	
КонецПроцедуры

Процедура КомандаСкрытьПоказатьИнтересы(Форма)
	
	Форма.Элементы.СкрытьПоказатьИнтересы.Пометка = Не Форма.Элементы.СкрытьПоказатьИнтересы.Пометка;
	Форма.Элементы.ГруппаCRM_ТаблицаИнтересов.Видимость = Форма.Элементы.СкрытьПоказатьИнтересы.Пометка;
	
	ИзменитьКартинкуСкрытьПоказатьИнтересы(Форма);
	
КонецПроцедуры

Процедура ИнтересНачалоВыбора(Форма, УстановитьОсновным = Истина)
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("ПометкаУдаления", Ложь);
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "CRM_Интерес_Клиент") Тогда
		СтруктураОтбора.Вставить("Партнер", Форма.CRM_Интерес_Клиент);
	ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "CRM_Интерес_КлиентСписок") Тогда
		СтруктураОтбора.Вставить("Партнер", Форма.CRM_Интерес_КлиентСписок);
	КонецЕсли;
	
	ПараметрыФормыВыбора = Новый Структура;
	ПараметрыФормыВыбора.Вставить("РежимВыбора"			, Истина);
	ПараметрыФормыВыбора.Вставить("МножественныйВыбор"	, Ложь);
	ПараметрыФормыВыбора.Вставить("ЗакрыватьПриВыборе"	, Истина);
	ПараметрыФормыВыбора.Вставить("ЭтоВыборИнтереса"	, Истина);	
	
	ПараметрыФормыВыбора.Вставить("Отбор"				, СтруктураОтбора);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ИнтересОкончаниеВыбора", ЭтотОбъект,
		 Новый Структура("Форма,УстановитьОсновным", Форма,
		 УстановитьОсновным));
	
	ОткрытьФорму("Документ.CRM_Интерес.Форма.ФормаСписка", ПараметрыФормыВыбора, ,
		 Новый УникальныйИдентификатор, ВариантОткрытияОкна.ОтдельноеОкно, ,
		 ОписаниеОповещения);
	
КонецПроцедуры

Процедура ОчиститьТекущийИнтерес(Форма, УстановитьОсновным = Истина)
	
	Форма.CRM_ТаблицаИнтересов.Удалить(0);
	
	Если Форма.CRM_ТаблицаИнтересов.Количество() > 0 Тогда
		
		ТекущаяСтрока = Форма.CRM_ТаблицаИнтересов[0];
		
		Если ТекущаяСтрока.Партнер = Форма.CRM_Интерес_Клиент Тогда
			Форма.CRM_ИнтересСтрокой =
				CRM_МетодыФормДокументовСервер.СформироватьПредставлениеИнтересаСтрокой(ТекущаяСтрока.Ссылка);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
