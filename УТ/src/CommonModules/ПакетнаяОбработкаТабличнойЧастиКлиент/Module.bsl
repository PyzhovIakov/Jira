
#Область ПрограммныйИнтерфейс

// Обработка строки табличной части - вызывается из форм документов.
//
// Параметры:
//  ТекущаяСтрока - см. ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьСтрокиТЧ.
//  СтруктураДействий - см.  ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьСтрокиТЧ.СтруктураДействий
//  КэшированныеЗначения - см. ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения.
//  ДополнительныеПараметрыЗаполнения - Структура, Неопределено - дополнительные параметры заполнения.
//
Процедура ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения, ДополнительныеПараметрыЗаполнения = Неопределено) Экспорт
	
	Если КэшированныеЗначения = Неопределено 
		Или Не КэшированныеЗначения.Количество() Тогда
			КэшированныеЗначения = ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
	КонецЕсли;
	
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НеобходимВызовСервера(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Тогда
		
		ТекущаяСтрокаСтруктура = ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьТекущуюСтрокуСтруктурой(
									ТекущаяСтрока, 
									СтруктураДействий,
									КэшированныеЗначения,
									ДополнительныеПараметрыЗаполнения);
									
		ПриФормированииСтруктурыПоОбрабатываемойСтроке(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
		
		ПакетнаяОбработкаТабличнойЧастиВызовСервера.ОбработатьСтрокуТЧ(ТекущаяСтрокаСтруктура,
			СтруктураДействий,
			КэшированныеЗначения);
		
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока,ТекущаяСтрокаСтруктура);
		
		Возврат;
	КонецЕсли;
	
	ТМЦВЭксплуатацииКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения,
		ДополнительныеПараметрыЗаполнения);
	РетроБонусыКлиент.ОбработатьСтрокуТЧ(
		ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения, ДополнительныеПараметрыЗаполнения);

	ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ПроверитьКорректностьЗаполнитьХарактеристикиИУпаковки(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ЗаполнитьТипНомераГТДПоУмолчанию(ТекущаяСтрока, СтруктураДействий);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ЗаполнитьСтрануПроисхожденияДляНомераГТДПоУмолчанию(ТекущаяСтрока, СтруктураДействий);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьКоличествоНеОтгружатьСтрокеТЧ(ТекущаяСтрока,
		СтруктураДействий);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьКоличествоУпаковокПоФактуВСтрокеТЧ(ТекущаяСтрока,
		СтруктураДействий, КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьКоличествоУпаковокФактПоУпаковкамВСтрокеТЧ(ТекущаяСтрока,
		СтруктураДействий, КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьКоличествоУпаковокСуффиксИзОтклоненияВСтрокеТЧ(ТекущаяСтрока,
		СтруктураДействий);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьКоличествоЕдиницВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий,
		КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьКоличествоЕдиницСуффиксВСтрокеТЧ(ТекущаяСтрока,
		СтруктураДействий, КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьКоличествоПоРНПТВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий,
		КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьКоличествоПоРНПТСуффиксВСтрокеТЧ(ТекущаяСтрока,
		СтруктураДействий, КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьКоличествоУпаковокВСтрокеТЧ(ТекущаяСтрока,
		СтруктураДействий, КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьКоличествоУпаковокСуффиксВСтрокеТЧ(ТекущаяСтрока, 
		СтруктураДействий, КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьКоличествоОтклонение(ТекущаяСтрока, СтруктураДействий,
		КэшированныеЗначения);
	ПересчитатьКоличествоУпаковокПоВесу(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ПересчитатьКоличествоУпаковокПоОбъему(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьВесОбъемВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий,
		КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ЗаполнитьВидЦеныВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий); 
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьЦенуЗаУпаковкуВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий,
		КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьЦенуЗаказаЗаУпаковкуВСтрокеТЧ(ТекущаяСтрока,
		СтруктураДействий, КэшированныеЗначения);
	ЗаполнитьЦенуПродажиРозницаВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ЗаполнитьУсловияПродажВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ЗаполнитьУсловияРозничныхПродажВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);

	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ЗаполнитьТипМестаХраненияПоУмолчанию(ТекущаяСтрока, СтруктураДействий,
		КэшированныеЗначения);
	ЗаполнитьСтавкуНДСВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ЗаполнитьСтавкуНДСВозвратнойТарыВСтрокеТЧ(ТекущаяСтрока,
		СтруктураДействий, КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьПроцентРучнойСкидкиВСтрокеТЧ(ТекущаяСтрока,
		СтруктураДействий, КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьСуммуРучнойСкидкиВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий,
		КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьСуммуАвтоматическойСкидкиВСтрокеТЧ(ТекущаяСтрока,
		СтруктураДействий, КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьСуммуВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий,
		КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьСуммуСуффиксВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий,
		КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьСуммуВСтрокеТЧРасхождения(ТекущаяСтрока, СтруктураДействий,
		КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьЦенуСкидкуПоСуммеВПродажахВСтрокеТЧ(ТекущаяСтрока,
		СтруктураДействий, КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьЦенуСкидкуПоСуммеВЗакупкахВСтрокеТЧ(ТекущаяСтрока,
		СтруктураДействий, КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьЦенуПоСуммеВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий,
		КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьЦенуПродажиПоСуммеПродажиВСтрокеТЧ(ТекущаяСтрока,
		СтруктураДействий);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьСуммуСУчетомАвтоматическойСкидкиВСтрокеТЧ(ТекущаяСтрока,
		СтруктураДействий, КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьСуммуСУчетомРучнойСкидкиВСтрокеТЧ(ТекущаяСтрока,
		СтруктураДействий, КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьСуммуСУчетомСкидкиБонуснымиБалламиВСтрокеТЧ(ТекущаяСтрока,
		СтруктураДействий, КэшированныеЗначения);
	ПересчитатьСуммуНДСВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьСуммуНДССуффиксВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий,
		КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьСуммуСНДСВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий,
		КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьСуммуСНДССуффиксВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий,
		КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьСуммуБезНДСВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьСуммуРеглВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий,
		КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьСуммуБезНДСУпрВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, 
		КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьСуммуБезНДСРеглСуффиксВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий,
		КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьСуммуБезНДСУпрСуффиксВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, 
		КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьСуммуПРВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий,
		КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьСуммуНУВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий,
		КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьСуммуВРВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий,
		КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьНДСРеглВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий,
		КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьСуммуПродажиВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий,
		КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьСуммуПродажиНДСВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий,
		КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.УстановитьАктивностьСтроки(ТекущаяСтрока, СтруктураДействий,
		КэшированныеЗначения);
	ПроверитьПолучитьВариантКомплектации(ТекущаяСтрока, СтруктураДействий);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ЗаполнитьФлагРасхождение(ТекущаяСтрока, СтруктураДействий);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьКоличествоУпаковокОтклонение(ТекущаяСтрока, СтруктураДействий);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ЗаполнитьФлагИзлишекПорча(ТекущаяСтрока, СтруктураДействий);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ОчиститьСуммуВзаиморасчетовВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ОчиститьСуммуВзаиморасчетовСуффиксВСтрокеТЧ(ТекущаяСтрока,
		СтруктураДействий);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ОчиститьСуммуНДСРеглУпрВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ОчиститьАвтоматическуюСкидкуВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ОчиститьСуммуВознагражденияВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ЗаполнитьПартнера(ТекущаяСтрока, СтруктураДействий);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ЗаполнитьПризнакБезВозвратнойТары(ТекущаяСтрока, СтруктураДействий);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ЗаполнитьПризнакОтмененоБезВозвратнойТары(ТекущаяСтрока,
		СтруктураДействий);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ЗаполнитьПризнакАктивностьБезВозвратнойТары(ТекущаяСтрока,
		СтруктураДействий);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ЗаполнитьДубликатыЗависимыхРеквизитов(ТекущаяСтрока, СтруктураДействий);
	ПроверитьСериюРассчитатьСтатус(ТекущаяСтрока, СтруктураДействий);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПересчитатьСуммуСверхЗаказаВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий,
		КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ЗаполнитьВариантОтраженияКорректировкиРеализации(ТекущаяСтрока,
		СтруктураДействий);
	ПакетнаяОбработкаТабличнойЧастиКлиент.НоменклатураПриИзмененииПереопределяемый(ТекущаяСтрока,
		СтруктураДействий, КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиент.ХарактеристикаПриИзмененииПереопределяемый(ТекущаяСтрока,
		СтруктураДействий, КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ЗаполнитьРасхожденияПослеОтгрузки(ТекущаяСтрока, СтруктураДействий);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ЗаполнитьРасхожденияПослеПриемки(ТекущаяСтрока, СтруктураДействий);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ЗаполнитьРасхождения(ТекущаяСтрока, СтруктураДействий);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ЗаполнитьПризнакНаличияКомментарияПриемка(ТекущаяСтрока,
		СтруктураДействий);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ЗаполнитьПризнакНаличияКомментарияОтгрузка(ТекущаяСтрока,
		СтруктураДействий);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ЗаполнитьПризнакНаличияКомментария(ТекущаяСтрока, СтруктураДействий);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ЗаполнитьПризнакТоварногоМестаТребуетсяОбработка(ТекущаяСтрока,
		СтруктураДействий);
	ЗаполнитьПризнакДвиженияПоСкладскимРегистрам(ТекущаяСтрока, СтруктураДействий);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПроверитьЗаполнитьНазначениеВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий,
		КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ЗаполнитьФлагОбособленноПоНазначению(ТекущаяСтрока, СтруктураДействий,
		КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПриИзмененииНазначенияВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий,
		КэшированныеЗначения);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ЗаполнитьСпособОпределенияСебестоимости(ТекущаяСтрока,
		СтруктураДействий);
	ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ЗаполнитьСпособОпределенияСебестоимостиСтрокой(ТекущаяСтрока,
		СтруктураДействий);

	ЗаполнитьНаправлениеДеятельности(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ЗаполнитьПодразделениеВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ЗаполнитьПризнакРасхождениеЗаказ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
	ПакетнаяОбработкаТабличнойЧастиКлиентЛокализация.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий,
		КэшированныеЗначения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПроцедурыПересчетаИЗаполнения

Процедура ПроверитьПолучитьВариантКомплектации(ТекущаяСтрока, СтруктураДействий)

	Если Не СтруктураДействий.Свойство("ПроверитьЗаполнитьВариантКомплектацииПоВладельцу") Тогда
		Возврат;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура)
	 Или Не ЗначениеЗаполнено(ТекущаяСтрока.Характеристика) И ТекущаяСтрока.ХарактеристикиИспользуются Тогда

		ТекущаяСтрока.ВариантКомплектации = Неопределено;

	КонецЕсли;

КонецПроцедуры

Процедура ПроверитьКорректностьЗаполнитьХарактеристикиИУпаковки(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения)

	Если СтруктураДействий.Свойство("ПроверитьХарактеристикуПоВладельцу") Тогда
		ТекущаяСтрока.Характеристика             = Неопределено;
		ТекущаяСтрока.ХарактеристикиИспользуются = Ложь;
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПроверитьЗаполнитьУпаковкуПоВладельцу") Тогда
		ТекущаяСтрока.Упаковка = Неопределено;
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьСтавкуНДСВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) 

	Если СтруктураДействий.Свойство("ЗаполнитьСтавкуНДС") Тогда
		ТекущаяСтрока.СтавкаНДС = Неопределено;
	КонецЕсли;

КонецПроцедуры

Процедура ПересчитатьСуммуНДСВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) 
	
	Перем СтруктураПараметровДействия;
	
	Если СтруктураДействий.Свойство("ПересчитатьСуммуНДС", СтруктураПараметровДействия) Тогда
		
		НалогообложениеНДС = Неопределено;
		СтруктураПараметровДействия.Свойство("НалогообложениеНДС", НалогообложениеНДС);
		
		СтавкаНДС = Неопределено;
		Если Не СтруктураПараметровДействия.Свойство("СтавкаНДС", СтавкаНДС) Тогда
			СтавкаНДС = ТекущаяСтрока.СтавкаНДС;
		КонецЕсли;
		
		Если КэшированныеЗначения.Свойство("ПроцентыСтавокНДС") Тогда
			ТекПроцентНДС = КэшированныеЗначения.ПроцентыСтавокНДС[СтавкаНДС];
		Иначе
			КэшированныеЗначения.Вставить("ПроцентыСтавокНДС", Новый Соответствие);
			ТекПроцентНДС = Неопределено;
		КонецЕсли;
		
		Если ТекПроцентНДС = Неопределено Тогда
			
			ТекПроцентНДС = УчетНДСУПКлиентСервер.ЗначениеСтавкиНДС(СтавкаНДС);
			КэшированныеЗначения.ПроцентыСтавокНДС.Вставить(СтавкаНДС, ТекПроцентНДС);
			
		КонецЕсли;
		
		ТекущаяСтрока.СуммаНДС = УчетНДСУПКлиентСервер.РассчитатьСуммуНДС(
			ТекущаяСтрока.Сумма,
			ТекПроцентНДС,
			СтруктураПараметровДействия.ЦенаВключаетНДС,
			НалогообложениеНДС);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьУсловияПродажВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) 

	Если СтруктураДействий.Свойство("ЗаполнитьУсловияПродаж") Тогда
		
		Если ТекущаяСтрока.Свойство("ВидЦены") Тогда
			ТекущаяСтрока.ВидЦены = ПредопределенноеЗначение("Справочник.ВидыЦен.ПустаяСсылка");
		КонецЕсли;
		ТекущаяСтрока.СтавкаНДС = ПредопределенноеЗначение("Справочник.СтавкиНДС.ПустаяСсылка");
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьУсловияРозничныхПродажВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) 

	Если СтруктураДействий.Свойство("ЗаполнитьУсловияРозничныхПродаж") Тогда		
		ТекущаяСтрока.СтавкаНДС = ПредопределенноеЗначение("Справочник.СтавкиНДС.ПустаяСсылка");
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения)
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакТипНоменклатуры") Тогда
		ТекущаяСтрока[ИмяПоляЗаполнения(СтруктураДействий, "ЗаполнитьПризнакТипНоменклатуры", "ТипНоменклатуры")]
			= ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.ПустаяСсылка");
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакВидНоменклатуры") Тогда
		ТекущаяСтрока[ИмяПоляЗаполнения(СтруктураДействий, "ЗаполнитьПризнакВидНоменклатуры", "ВидНоменклатуры")]
			= ПредопределенноеЗначение("Справочник.ВидыНоменклатуры.ПустаяСсылка");
	КонецЕсли; 
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакЕдиницаИзмерения") Тогда
		ТекущаяСтрока[ИмяПоляЗаполнения(СтруктураДействий, "ЗаполнитьПризнакЕдиницаИзмерения", "ЕдиницаИзмерения")]
			= ПредопределенноеЗначение("Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка");
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакТипИзмеряемойВеличины") Тогда
		ТекущаяСтрока[ИмяПоляЗаполнения(СтруктураДействий, "ЗаполнитьПризнакТипИзмеряемойВеличины", "ТипИзмеряемойВеличины")]
			= ПредопределенноеЗначение("Перечисление.ТипыИзмеряемыхВеличин.ПустаяСсылка");
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьВесУпаковки") Тогда
		ТекущаяСтрока.ВесУпаковки = 0;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьОбъемУпаковки") Тогда
		ТекущаяСтрока.ОбъемУпаковки = 0;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьЕдиницуИзмеренияВеса") Тогда
		ТекущаяСтрока.ЕдиницаИзмеренияВеса = ПредопределенноеЗначение("Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка");
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьЕдиницуИзмеренияОбъема") Тогда
		ТекущаяСтрока.ЕдиницаИзмеренияОбъема = ПредопределенноеЗначение("Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка");
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакХарактеристикиИспользуются") Тогда
		ТекущаяСтрока[ИмяПоляЗаполнения(СтруктураДействий, "ЗаполнитьПризнакХарактеристикиИспользуются", "ХарактеристикиИспользуются")]
			= Ложь;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакВедетсяУчетПоГТД") Тогда
		ТекущаяСтрока[ИмяПоляЗаполнения(СтруктураДействий, "ЗаполнитьПризнакВедетсяУчетПоГТД", "ВедетсяУчетПоГТД")]
			= ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.ПустаяСсылка");
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьСтрануПроисхожденияНоменклатуры") Тогда
		ТекущаяСтрока.СтранаПроисхождения = ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка");
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакВедетсяУчетПоРНПТ") Тогда
		ТекущаяСтрока.ВедетсяУчетПоРНПТ = Ложь;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьЕдиницуИзмеренияТНВЭД") Тогда
		ТекущаяСтрока.ЕдиницаИзмеренияТНВЭД = ПредопределенноеЗначение("Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка");
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакЭтоУслуга") Тогда
		ТекущаяСтрока[ИмяПоляЗаполнения(СтруктураДействий, "ЗаполнитьПризнакЭтоУслуга", "ЭтоУслуга")] = Ложь;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакАртикул") Тогда
		ТекущаяСтрока[ИмяПоляЗаполнения(СтруктураДействий, "ЗаполнитьПризнакАртикул", "Артикул")] = "";
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПризнакКод") Тогда
		ТекущаяСтрока[ИмяПоляЗаполнения(СтруктураДействий, "ЗаполнитьПризнакКод", "Код")] = "";
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПризнакОписание") Тогда
		ТекущаяСтрока[ИмяПоляЗаполнения(СтруктураДействий, "ЗаполнитьПризнакОписание", "Описание")] = "";
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПризнакСерииИспользуются") Тогда
		ТекущаяСтрока.СерииИспользуются = Ложь;
	КонецЕсли;
	
	ПакетнаяОбработкаТабличнойЧастиКлиентЛокализация.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВСтрокеТЧ(
		ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
КонецПроцедуры

Функция ИмяПоляЗаполнения(СтруктураДействий, Действие, ИмяПоляПоУмолчанию)
	
	ПараметрыДействия = Неопределено;
	СтруктураДействий.Свойство(Действие, ПараметрыДействия);
	Если ПараметрыДействия = Неопределено Тогда
		Возврат ИмяПоляПоУмолчанию;
	Иначе
		Для Каждого КлючИЗначение Из ПараметрыДействия Цикл
			Возврат КлючИЗначение.Значение;
		КонецЦикла;
	КонецЕсли;
	
КонецФункции

Процедура ЗаполнитьЦенуПродажиРозницаВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) 
	
	Если СтруктураДействий.Свойство("ЗаполнитьЦенуПродажиРозница") Тогда
		ТекущаяСтрока.Цена = 0;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьСериюРассчитатьСтатус(ТекущаяСтрока, СтруктураДействий)
	
	Перем ПараметрыДействия;
	
	Если СтруктураДействий.Свойство("ПроверитьСериюРассчитатьСтатус",ПараметрыДействия) Тогда
		Если ПараметрыДействия.ПараметрыУказанияСерий.ИменаПолейСтатусУказанияСерий.Количество() = 0 Тогда
			ТекущаяСтрока.Серия = ПредопределенноеЗначение("Справочник.СерииНоменклатуры.ПустаяСсылка");
			ТекущаяСтрока.СтатусУказанияСерий = 0;
		Иначе
			Для Каждого ИмяПоляСтатус Из ПараметрыДействия.ПараметрыУказанияСерий.ИменаПолейСтатусУказанияСерий Цикл
				ИмяПоляСерия = ИменаПолейПоСтатусуУказанияСерий(ИмяПоляСтатус).Серия;
				ТекущаяСтрока[ИмяПоляСтатус] = 0;
				
				Если ТекущаяСтрока.Свойство(ИмяПоляСерия) Тогда
					ТекущаяСтрока[ИмяПоляСерия] = ПредопределенноеЗначение("Справочник.СерииНоменклатуры.ПустаяСсылка");
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ЕстьПризнакУказанияСерий = ПараметрыДействия.ПараметрыУказанияСерий.ПоляСвязи.Найти("УказыватьСерии") <> Неопределено;
		Если ЕстьПризнакУказанияСерий Тогда
			ТекущаяСтрока.УказыватьСерии = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ИменаПолейПоСтатусуУказанияСерий(ИмяПоляСтатус)
	
	СтруктураВозврата = Новый Структура("Серия, Номенклатура, Характеристика");
	
	Если ИмяПоляСтатус = "СтатусУказанияСерий" Тогда
		СтруктураВозврата.Серия = "Серия";
		СтруктураВозврата.Номенклатура = "Номенклатура"; 
		СтруктураВозврата.Характеристика = "Характеристика";
	ИначеЕсли ИмяПоляСтатус = "СтатусУказанияСерийОтправитель" Тогда
		СтруктураВозврата.Серия = "СерияОтправитель";
		СтруктураВозврата.Номенклатура = "НоменклатураОтправитель";
		СтруктураВозврата.Характеристика = "ХарактеристикаОтправитель";
	ИначеЕсли ИмяПоляСтатус = "СтатусУказанияСерийПолучатель" Тогда
		СтруктураВозврата.Серия = "СерияПолучатель";
		СтруктураВозврата.Номенклатура = "НоменклатураПолучатель";
		СтруктураВозврата.Характеристика = "ХарактеристикаПолучатель";
	ИначеЕсли ИмяПоляСтатус = "СтатусУказанияСерийОприходование" Тогда
		СтруктураВозврата.Серия = "СерияОприходование";
		СтруктураВозврата.Номенклатура = "НоменклатураОприходование";
		СтруктураВозврата.Характеристика = "ХарактеристикаОприходование";
	ИначеЕсли ИмяПоляСтатус = "СтатусУказанияСерийНаСкладах" Тогда
		СтруктураВозврата.Серия = "СерияНаСкладах";
		СтруктураВозврата.Номенклатура = "НоменклатураНаСкладах";
		СтруктураВозврата.Характеристика = "ХарактеристикаНаСкладах";
	ИначеЕсли ИмяПоляСтатус = "СтатусУказанияСерийТоварыУПартнеров" Тогда
		СтруктураВозврата.Серия = "СерияТоварыУПартнеров";
		СтруктураВозврата.Номенклатура = "НоменклатураТоварыУПартнеров";
		СтруктураВозврата.Характеристика = "ХарактеристикаТоварыУПартнеров";
	ИначеЕсли ИмяПоляСтатус = "СтатусУказанияСерийПереданныхТоваров" Тогда
		СтруктураВозврата.Серия = "СерияПереданныхТоваров";
		СтруктураВозврата.Номенклатура = "НоменклатураПереданныхТоваров";
		СтруктураВозврата.Характеристика = "ХарактеристикаПереданныхТоваров";
	ИначеЕсли ИмяПоляСтатус = "СтатусУказанияСерийСписываемаяСерия" Тогда
		СтруктураВозврата.Серия = "СерияСписываемаяСерия";
		СтруктураВозврата.Номенклатура = "НоменклатураСписываемаяСерия";
		СтруктураВозврата.Характеристика = "ХарактеристикаСписываемаяСерия";
	КонецЕсли;
	
	Возврат СтруктураВозврата
	
КонецФункции

Процедура ЗаполнитьПризнакДвиженияПоСкладскимРегистрам(ТекущаяСтрока, СтруктураДействий)
	Перем ИмяПоля;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакДвиженияПоСкладскимРегистрам", ИмяПоля) Тогда
		ТекущаяСтрока[ИмяПоля] = Ложь;
	КонецЕсли;
	
КонецПроцедуры



// Заполняет служебный реквизит "РасхождениеЗаказ" в строке
//
// Параметры:
//  ТекущаяСтрока		 - Структура - данные обрабатываемой строки.
//  СтруктураДействий	 - Структура - описывает действия, где Ключ - наименование действия,
//  														   Значение - Структура - параметры действия.
//  КэшированныеЗначения - Структура - сохраненные значения параметров, используемых при обработке.
//
Процедура ЗаполнитьПризнакРасхождениеЗаказ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения)
	
	Перем ПараметрыЗаполнения;
	
	Если НЕ СтруктураДействий.Свойство("ЗаполнитьПризнакРасхождениеЗаказ", ПараметрыЗаполнения) Тогда
		Возврат;
	КонецЕсли;

	ЗаказыКлиент.ЗаполнитьПризнакРасхождениеЗаказ(ТекущаяСтрока, ПараметрыЗаполнения, КэшированныеЗначения);
	
КонецПроцедуры

// Процедура, вызываемая из обработчика реквизита "Номенклатура" табличной части документа.
//
// Параметры:
//	ТекущаяСтрока - Структура - текущая строка табличной части.
//	СтруктураДействий - Структура - допустимые действия для табличной части.
//	КэшированныеЗначения - см. ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения.
//
Процедура НоменклатураПриИзмененииПереопределяемый(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт
	
	Перем ПараметрыДействия;
	
	Если СтруктураДействий.Свойство("НоменклатураПриИзмененииПереопределяемый", ПараметрыДействия) Тогда
		МодификацияКонфигурацииКлиентПереопределяемый.НоменклатураПриИзмененииПереопределяемый(ТекущаяСтрока,
			ПараметрыДействия, КэшированныеЗначения);
	КонецЕсли;
	
КонецПроцедуры

// Процедура, вызываемая из обработчика реквизита "Характеристика" табличной части документа.
//
// Параметры:
//	ТекущаяСтрока - Структура - текущая строка табличной части.
//	СтруктураДействий - Структура - допустимые действия для табличной части.
//	КэшированныеЗначения - см. ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения.
//
Процедура ХарактеристикаПриИзмененииПереопределяемый(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт
	
	Перем ПараметрыДействия;
	
	Если СтруктураДействий.Свойство("ХарактеристикаПриИзмененииПереопределяемый", ПараметрыДействия) Тогда
		МодификацияКонфигурацииКлиентПереопределяемый.ХарактеристикаПриИзмененииПереопределяемый(ТекущаяСтрока,
			ПараметрыДействия, КэшированныеЗначения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПрочиеПроцедуры

Процедура ПриФормированииСтруктурыПоОбрабатываемойСтроке(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения)
	
	ПараметрыДействия = Неопределено;
	Если СтруктураДействий.Свойство("ПроверитьЗаполнитьОбеспечениеВДокументеПродажи", ПараметрыДействия)
			Или СтруктураДействий.Свойство("ЗаполнитьКолонкуДоступно", ПараметрыДействия)
			Или СтруктураДействий.Свойство("ПриИзмененииТипаНоменклатурыИлиВариантаОбеспечения", ПараметрыДействия) Тогда
			
		ДанныеПрограммногоОбъекта = ОбеспечениеВДокументахКлиентСервер.ДанныеПрограммногоОбъекта(
			ПараметрыДействия,
			ТекущаяСтрока);
		
		Если СтруктураДействий.Свойство("ПроверитьЗаполнитьОбеспечениеВДокументеПродажи") Тогда
			СтруктураДействий.ПроверитьЗаполнитьОбеспечениеВДокументеПродажи.Вставить("ДанныеПрограммногоОбъекта",
				ДанныеПрограммногоОбъекта);
			СтруктураДействий.ПроверитьЗаполнитьОбеспечениеВДокументеПродажи.Удалить("Форма");
		КонецЕсли;
		Если СтруктураДействий.Свойство("ЗаполнитьКолонкуДоступно") Тогда
			СтруктураДействий.ЗаполнитьКолонкуДоступно.Вставить("ДанныеПрограммногоОбъекта",
				ДанныеПрограммногоОбъекта);
			СтруктураДействий.ЗаполнитьКолонкуДоступно.Удалить("Форма");
		КонецЕсли;
		Если СтруктураДействий.Свойство("ПриИзмененииТипаНоменклатурыИлиВариантаОбеспечения") Тогда
			СтруктураДействий.ПриИзмененииТипаНоменклатурыИлиВариантаОбеспечения.Вставить("ДанныеПрограммногоОбъекта",
				ДанныеПрограммногоОбъекта);
			СтруктураДействий.ПриИзмененииТипаНоменклатурыИлиВариантаОбеспечения.Удалить("Форма");
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ПроверитьНеобходимостьОбновленияКолонкиДоступно")
			Или СтруктураДействий.Свойство("ЗаполнитьКолонкуДоступно")
			Или СтруктураДействий.Свойство("ОбновитьКэшНоменклатура") Тогда
		
		ИдентификаторСтрокиПолученный = Неопределено;
		Если ТипЗнч(ТекущаяСтрока) = Тип("ДанныеФормыЭлементКоллекции") Тогда
			ИдентификаторСтрокиПолученный = ТекущаяСтрока.ПолучитьИдентификатор();
		КонецЕсли;
		
		Если СтруктураДействий.Свойство("ПроверитьНеобходимостьОбновленияКолонкиДоступно") Тогда
			СтруктураДействий.ПроверитьНеобходимостьОбновленияКолонкиДоступно.Вставить("ИдентификаторСтрокиПолученный",
				ИдентификаторСтрокиПолученный);
		КонецЕсли;
		Если СтруктураДействий.Свойство("ЗаполнитьКолонкуДоступно") Тогда
			СтруктураДействий.ЗаполнитьКолонкуДоступно.Вставить("ИдентификаторСтрокиПолученный",
				ИдентификаторСтрокиПолученный);
		КонецЕсли;
		Если СтруктураДействий.Свойство("ОбновитьКэшНоменклатура") Тогда
			СтруктураДействий.ОбновитьКэшНоменклатура.Вставить("ИдентификаторСтрокиПолученный",
				ИдентификаторСтрокиПолученный);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция НеобходимВызовСервера(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения)
	
	Перем СтруктураПараметровДействия;
	
	Если СтруктураДействий.Свойство("ПроверитьНеобходимостьОбновленияКолонкиДоступно")
			Или СтруктураДействий.Свойство("ЗаполнитьКолонкуДоступно")
			Или СтруктураДействий.Свойство("ОбновитьКэшНоменклатура") Тогда
		
			Возврат Истина;
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("НеобходимоОбработатьВсюТЧ")
		И СтруктураДействий.НеобходимоОбработатьВсюТЧ Тогда
		ТекстИсключения = НСтр("ru = 'Для обработки всей ТЧ, необходимо сделать контекстный вызов серверной функции ""%Функция%""'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%Функция%", "ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьТЧ");
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ПроверитьХарактеристикуПоВладельцу")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьGTINВСтроке")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ПроверитьЗаполнитьУпаковкуПоВладельцу")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	УпаковкаНоменклатура = Неопределено;
	
	Если (СтруктураДействий.Свойство("ПересчитатьКоличествоЕдиниц", УпаковкаНоменклатура)
		Или СтруктураДействий.Свойство("ПересчитатьКоличествоЕдиницСуффикс")
		Или СтруктураДействий.Свойство("ПересчитатьКоличествоУпаковок")
		Или СтруктураДействий.Свойство("ПересчитатьКоличествоУпаковокСуффикс")
		Или СтруктураДействий.Свойство("ПересчитатьКоличествоУпаковокПоВесу")
		Или СтруктураДействий.Свойство("ПересчитатьКоличествоУпаковокПоОбъему")) Тогда
		
		ПараметрыПересчета = ПакетнаяОбработкаТабличнойЧастиКлиентСервер.НормализоватьПараметрыПересчетаЕдиниц(ТекущаяСтрока, УпаковкаНоменклатура);
		
		КлючКоэффициента = ПакетнаяОбработкаТабличнойЧастиКлиентСервер.КлючКэшаУпаковки(ПараметрыПересчета.Номенклатура, ПараметрыПересчета.Упаковка);
		
		Если ЗначениеЗаполнено(ПараметрыПересчета.Упаковка)
			И ЗначениеЗаполнено(ПараметрыПересчета.Номенклатура)
			И КэшированныеЗначения.КоэффициентыУпаковок[КлючКоэффициента] = Неопределено Тогда
			
			Возврат Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если (СтруктураДействий.Свойство("ПересчитатьКоличествоУпаковокПоВесу")
		Или СтруктураДействий.Свойство("ПересчитатьКоличествоУпаковокПоОбъему")
		Или СтруктураДействий.Свойство("ПересчитатьВесОбъем")) Тогда
		
		КлючКоэффициента = ПакетнаяОбработкаТабличнойЧастиКлиентСервер.КлючКэшаУпаковки(Неопределено, ТекущаяСтрока.ЕдиницаИзмеренияВеса);
		
		Если ЗначениеЗаполнено(ТекущаяСтрока.ЕдиницаИзмеренияВеса)
			И КэшированныеЗначения.КоэффициентыУпаковок[КлючКоэффициента] = Неопределено Тогда
			Возврат Истина;
		КонецЕсли;
		
		КлючКоэффициента = ПакетнаяОбработкаТабличнойЧастиКлиентСервер.КлючКэшаУпаковки(Неопределено, ТекущаяСтрока.ЕдиницаИзмеренияОбъема);
		
		Если ЗначениеЗаполнено(ТекущаяСтрока.ЕдиницаИзмеренияОбъема)
			И КэшированныеЗначения.КоэффициентыУпаковок[КлючКоэффициента] = Неопределено Тогда
				Возврат Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрыПересчета = Неопределено;
	Если СтруктураДействий.Свойство("ПересчитатьКоличествоПоРНПТ", ПараметрыПересчета) Тогда
		КлючКоэффициента = ПакетнаяОбработкаТабличнойЧастиКлиентСервер.КлючКэшаКоэффициентРНПТ(ТекущаяСтрока, ПараметрыПересчета);
		
		Кэш = КэшированныеЗначения.КоэффициентыРНПТ[КлючКоэффициента];
		
		Если Кэш = Неопределено Тогда
			Возврат Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрыПересчета = Неопределено;
	Если СтруктураДействий.Свойство("ПересчитатьКоличествоПоРНПТСуффикс", ПараметрыПересчета) Тогда
		КлючКоэффициента = ПакетнаяОбработкаТабличнойЧастиКлиентСервер.КлючКэшаКоэффициентРНПТ(ТекущаяСтрока, ПараметрыПересчета);
		
		Кэш = КэшированныеЗначения.КоэффициентыРНПТ[КлючКоэффициента];
		
		Если Кэш = Неопределено Тогда
			Возврат Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьЦенуПродажи", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия.Валюта)
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьЦенуПродажиПоАссортименту", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия.Валюта)
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьЦенуЗакупки", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия.Валюта)
		И ЗначениеЗаполнено(СтруктураПараметровДействия.Партнер)
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьСтавкуНДС", СтруктураПараметровДействия) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьСтавкуНДССуффикс", СтруктураПараметровДействия) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьУсловияПродаж", СтруктураПараметровДействия)
		И (ЗначениеЗаполнено(СтруктураПараметровДействия.Соглашение) Или ЗначениеЗаполнено(СтруктураПараметровДействия.Партнер)) 
		И ЗначениеЗаполнено(СтруктураПараметровДействия.Валюта)
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьУсловияРозничныхПродаж", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия.ОбъектХраненияУсловийПродаж) 
		И ЗначениеЗаполнено(СтруктураПараметровДействия.Валюта)
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьНоменклатуруПоНоменклатуреПартнера", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(ТекущаяСтрока.НоменклатураПартнера) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьНоменклатуруПартнераПоНоменклатуре", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия)
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ПроверитьСопоставленнуюНоменклатуруПартнера", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия)
		И Не СтруктураПараметровДействия.НеВыполнятьПроверкуДляПользователя
		И ЗначениеЗаполнено(ТекущаяСтрока.НоменклатураПартнера)
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакТипНоменклатуры")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПризнакВидНоменклатуры")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПризнакКод")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПризнакОписание")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПризнакЕдиницаИзмерения")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакТипИзмеряемойВеличины")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьВесУпаковки")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьОбъемУпаковки")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьЕдиницуИзмеренияВеса")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьЕдиницуИзмеренияОбъема")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакИспользованияХарактеристик")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакВедетсяУчетПоГТД")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьСтрануПроисхожденияНоменклатуры", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(ТекущаяСтрока[СтруктураПараметровДействия.Номенклатура])
		И Не ЗначениеЗаполнено(ТекущаяСтрока.СтранаПроисхождения) Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакВедетсяУчетПоРНПТ")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьТипНомераГТД")
		И ЗначениеЗаполнено(ТекущаяСтрока.НомерГТД) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьЕдиницуИзмеренияТНВЭД")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакЭтоУслуга")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакАртикул")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакКод")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПризнакОписание")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьРеквизитыПоНоменклатуре", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ПересчитатьЦенуСкидкуПоСуммеВПродажах", СтруктураПараметровДействия) Тогда
		
		ИспользоватьРучныеСкидки = Ложь;
		Если СтруктураПараметровДействия <> Неопределено Тогда
			Если СтруктураПараметровДействия.Свойство("ИспользоватьРучныеСкидки") Тогда
				ИспользоватьРучныеСкидки = Истина;
			КонецЕсли;
		КонецЕсли;
		
		ИспользоватьАвтоматическиеСкидки = Ложь;
		Если СтруктураПараметровДействия <> Неопределено Тогда
			Если СтруктураПараметровДействия.Свойство("ИспользоватьАвтоматическиеСкидки") Тогда
				ИспользоватьАвтоматическиеСкидки = Истина;
			КонецЕсли;
		КонецЕсли;
		
		Если (ИспользоватьРучныеСкидки 
			И КэшированныеЗначения.ИспользоватьРучныеСкидкиВПродажах = Неопределено)
			Или (ИспользоватьАвтоматическиеСкидки 
			И КэшированныеЗначения.ИспользоватьАвтоматическиеСкидкиВПродажах = Неопределено) Тогда
			
			Возврат Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ПересчитатьЦенуСкидкуПоСуммеВЗакупках", СтруктураПараметровДействия) Тогда
		
		ИспользоватьРучныеСкидки = Ложь;
		Если СтруктураПараметровДействия <> Неопределено Тогда
			Если СтруктураПараметровДействия.Свойство("ИспользоватьРучныеСкидки") Тогда
				ИспользоватьРучныеСкидки = Истина;
			КонецЕсли;
		КонецЕсли;
		
		Если ИспользоватьРучныеСкидки  <> Неопределено 
			И КэшированныеЗначения.ИспользоватьРучныеСкидкиВЗакупках = Неопределено Тогда
			Возврат Истина;
		КонецЕсли;
		
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПроверитьЗаполнитьВариантКомплектацииПоВладельцу")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура)
		И (ЗначениеЗаполнено(ТекущаяСтрока.Характеристика) 
		И ТекущаяСтрока.ХарактеристикиИспользуются
		Или Не ЗначениеЗаполнено(ТекущаяСтрока.Характеристика) 
		И Не ТекущаяСтрока.ХарактеристикиИспользуются) Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	ПараметрыДействия = Неопределено;
	
	Если СтруктураДействий.Свойство("ЗаполнитьСтатьюАналитикуРасходовНоменклатуры", ПараметрыДействия)
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура)
		И ЗначениеЗаполнено(ПараметрыДействия.Организация)
		И ЗначениеЗаполнено(ПараметрыДействия.Подразделение)
		И Не ЗначениеЗаполнено(ТекущаяСтрока[ПараметрыДействия.СтатьяРасходов]) Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ОчиститьСтатьюАналитикуРасходов") Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ИнициализироватьСтатьюИАналитикуПослеДобавленияСтроки") Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьНастройкуСчетовУчетаПоУмолчанию") Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПредставлениеНастройкиСчетовУчета") Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакПодакцизныйТовар")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакБезВозвратнойТары")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакОтмененоБезВозвратнойТары")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакАктивностьБезВозвратнойТары")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ПересчитатьУчетноеКоличествоНоменклатуры")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакНаличияНоменклатурыПродаваемойСовместно")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ПроверитьАссортиментСтроки")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьСодержание")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	
	
	Если СтруктураДействий.Свойство("ПроверитьСериюРассчитатьСтатус", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
			СтруктураПараметровДействия, "Склад", ПредопределенноеЗначение("Справочник.Склады.ПустаяСсылка")))
		И СтруктураПараметровДействия.ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры
		И Не(ТекущаяСтрока.Свойство("Отменено") 
		И ТекущаяСтрока.Отменено)
		И Не(ТекущаяСтрока.Свойство("ВариантОбеспечения") 
			И ТекущаяСтрока.ВариантОбеспечения <> ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.Отгрузить")
			И ТекущаяСтрока.ВариантОбеспечения <> ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.СоСклада")) Тогда
		
		Если СтруктураПараметровДействия.ПараметрыУказанияСерий.ИменаПолейСтатусУказанияСерий.Количество() = 0
			И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
			Возврат Истина;
		Иначе
			Для Каждого ИмяПоляСтатус Из СтруктураПараметровДействия.ПараметрыУказанияСерий.ИменаПолейСтатусУказанияСерий Цикл
				ИменаПолей = ИменаПолейПоСтатусуУказанияСерий(ИмяПоляСтатус);
				Если ТекущаяСтрока.Свойство(ИменаПолей.Номенклатура)
					И ЗначениеЗаполнено(ТекущаяСтрока[ИменаПолей.Номенклатура]) Тогда
					Возврат Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("НоменклатураПриИзмененииПереопределяемый", ПараметрыДействия)
		И МодификацияКонфигурацииКлиентПереопределяемый.ОбработкаТабличнойЧастиНеобходимВызовСервера("НоменклатураПриИзмененииПереопределяемый",ПараметрыДействия) Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ХарактеристикаПриИзмененииПереопределяемый", ПараметрыДействия)
		И МодификацияКонфигурацииКлиентПереопределяемый.ОбработкаТабличнойЧастиНеобходимВызовСервера("ХарактеристикаПриИзмененииПереопределяемый",ПараметрыДействия) Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ПроверитьЗаполнитьОбеспечениеВДокументеПродажи", ПараметрыДействия) Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьОтгрузитьДляВариантаОформленияЗаказПлюсРеализация", ПараметрыДействия) Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьКолонкуДоступно", ПараметрыДействия) Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ПроверитьЗаполнитьОбеспечениеВЭтапеПроизводства", ПараметрыДействия) Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ПриИзмененииТипаНоменклатурыИлиВариантаОбеспечения", ПараметрыДействия) Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	Если СтруктураДействий.Свойство("ПриИзмененииТипаНоменклатуры", ПараметрыДействия) Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакДвиженияПоСкладскимРегистрам", ПараметрыДействия) Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьСтрануПроисхожденияДляНомераГТД", ПараметрыДействия) Тогда
		Если ПараметрыДействия <> Неопределено
			И ПараметрыДействия.Свойство("НомерГТД")
			И ЗначениеЗаполнено(ПараметрыДействия.НомерГТД) Тогда
			
			Возврат Истина;
			
		КонецЕсли;
	КонецЕсли;

	

	Если СтруктураДействий.Свойство("ЗаполнитьНаправлениеДеятельности", СтруктураПараметровДействия)
	   И ЗначениеЗаполнено(ТекущаяСтрока.Назначение)
	   И КэшированныеЗначения.СвойстваНазначений.Получить(ТекущаяСтрока.Назначение) = Неопределено Тогда
		Возврат Истина;
	КонецЕсли;
	
	
	Если СтруктураДействий.Свойство("ЗаполнитьСлужебныеРеквизитыПоНазначению") Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПартиюТМЦВЭксплуатации", ПараметрыДействия)
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура)
		И ЗначениеЗаполнено(ТекущаяСтрока.ФизическоеЛицо) Тогда
		
		Если ПараметрыДействия = Неопределено
			ИЛИ ЗначениеЗаполнено(ПараметрыДействия.Дата)
				И ЗначениеЗаполнено(ПараметрыДействия.Организация)
				И ЗначениеЗаполнено(ПараметрыДействия.Подразделение)
				И (Не ПараметрыДействия.Свойство("ХозяйственнаяОперация")
					Или (ЗначениеЗаполнено(ПараметрыДействия.ХозяйственнаяОперация)
						И ПараметрыДействия.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратИзЭксплуатации"))) Тогда
			
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакОрдерногоСклада", СтруктураПараметровДействия) Тогда
		Возврат Истина;
	КонецЕсли;

	Если ТМЦВЭксплуатацииКлиент.НеобходимВызовСервераДляОбработкиСтрокиТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если РетроБонусыКлиент.НеобходимВызовСервераДляОбработкиСтрокиТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат ПакетнаяОбработкаТабличнойЧастиКлиентЛокализация.НеобходимВызовСервера(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
КонецФункции


Процедура ЗаполнитьНаправлениеДеятельности(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения)
	
	Перем ПараметрыДействия;

	Если Не СтруктураДействий.Свойство("ЗаполнитьНаправлениеДеятельности", ПараметрыДействия) Тогда
		Возврат;
	КонецЕсли;

	НаправленияДеятельностиКлиент.ЗаполнитьНаправлениеДеятельности(
		ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения, ПараметрыДействия);

КонецПроцедуры

Процедура ЗаполнитьПодразделениеВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения)

	Перем ПараметрыДействия;
	
	Если Не СтруктураДействий.Свойство("ЗаполнитьПодразделениеВСтрокеТЧ", ПараметрыДействия) Тогда
		Возврат;
	КонецЕсли;
	
	СписокТипов = ПродажиКлиент.ТипыНоменклатурыСАналитикойПодразделение();
	Если СписокТипов.НайтиПоЗначению(ТекущаяСтрока.ТипНоменклатуры) = Неопределено Тогда
		ТекущаяСтрока.Подразделение = ПредопределенноеЗначение("Справочник.СтруктураПредприятия.ПустаяСсылка");
	Иначе
		ТекущаяСтрока.Подразделение = ПараметрыДействия.Подразделение;
	КонецЕсли;

КонецПроцедуры


Процедура ПересчитатьКоличествоУпаковокПоВесу(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт
	
	Суффикс = Неопределено;
	
	Если СтруктураДействий.Свойство("ПересчитатьКоличествоУпаковокПоВесу", Суффикс) Тогда
		КоличествоССуффиксом = ПакетнаяОбработкаТабличнойЧастиКлиентСервер.КоличествоССуффиксом(Суффикс);
		ТекущаяСтрока[КоличествоССуффиксом.КоличествоУпаковок] = ТекущаяСтрока.Вес
			* Окр(ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьКоэффициентУпаковки(
				ТекущаяСтрока.ЕдиницаИзмеренияВеса, КэшированныеЗначения).Коэффициент
			/ ТекущаяСтрока.ВесУпаковки, 7, РежимОкругления.Окр15как20);
		
		ТекущаяСтрока[КоличествоССуффиксом.Количество] = ТекущаяСтрока[КоличествоССуффиксом.КоличествоУпаковок]
			* ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьКоэффициентУпаковки(
				ТекущаяСтрока.Упаковка, КэшированныеЗначения, ТекущаяСтрока.Номенклатура).Коэффициент;
		
		ОбъемЕдиницыИзмерения = ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьКоэффициентУпаковки(
			ТекущаяСтрока.ЕдиницаИзмеренияОбъема, КэшированныеЗначения).Коэффициент;
			
		Если ТекущаяСтрока.ОбъемУпаковки * ОбъемЕдиницыИзмерения <> 0 Тогда
			ТекущаяСтрока.Объем = ТекущаяСтрока[КоличествоССуффиксом.КоличествоУпаковок] 
				* 1/Окр(ОбъемЕдиницыИзмерения/ТекущаяСтрока.ОбъемУпаковки, 7, РежимОкругления.Окр15как20);
		Иначе
			ТекущаяСтрока.Объем = 0;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПересчитатьКоличествоУпаковокПоОбъему(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт

	Суффикс = Неопределено;
	
	Если СтруктураДействий.Свойство("ПересчитатьКоличествоУпаковокПоОбъему", Суффикс) Тогда
		КоличествоССуффиксом = ПакетнаяОбработкаТабличнойЧастиКлиентСервер.КоличествоССуффиксом(Суффикс);
		
		ТекущаяСтрока[КоличествоССуффиксом.КоличествоУпаковок] = ТекущаяСтрока.Объем 
			* Окр(ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьКоэффициентУпаковки(
				ТекущаяСтрока.ЕдиницаИзмеренияОбъема, КэшированныеЗначения).Коэффициент
			/ ТекущаяСтрока.ОбъемУпаковки, 7, РежимОкругления.Окр15как20);
		
		ТекущаяСтрока[КоличествоССуффиксом.Количество] = ТекущаяСтрока[КоличествоССуффиксом.КоличествоУпаковок]
			* ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьКоэффициентУпаковки(
				ТекущаяСтрока.Упаковка, КэшированныеЗначения, ТекущаяСтрока.Номенклатура).Коэффициент;
		
		ВесЕдиницыИзмерения = ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьКоэффициентУпаковки(
			ТекущаяСтрока.ЕдиницаИзмеренияВеса, КэшированныеЗначения).Коэффициент;
			
		Если ТекущаяСтрока.ВесУпаковки * ВесЕдиницыИзмерения <> 0 Тогда
			ТекущаяСтрока.Вес = ТекущаяСтрока[КоличествоССуффиксом.КоличествоУпаковок]
			* 1/Окр(ВесЕдиницыИзмерения/ТекущаяСтрока.ВесУпаковки, 7, РежимОкругления.Окр15как20);
		Иначе
			ТекущаяСтрока.Вес = 0;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецОбласти
