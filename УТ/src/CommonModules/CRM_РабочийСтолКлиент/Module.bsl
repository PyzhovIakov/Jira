
#Область ПрограммныйИнтерфейс

// Обработчик события ПередНачаломРаботыСистемы.
//
Процедура ПередНачаломРаботыСистемы() Экспорт

	#Если Не ТолстыйКлиентОбычноеПриложение Тогда
		Если CRM_ЛицензированиеЭкспортныеМетоды.РабочийСтолCRMИспользуется() Тогда	
			ПараметрыРаботыКлиентаПриЗапуске = СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске();
			Если ПараметрыРаботыКлиентаПриЗапуске.Свойство("ЗапускатьРабочийСтолМенеджераНаВесьЭкран")
				И ПараметрыРаботыКлиентаПриЗапуске.ЗапускатьРабочийСтолМенеджераНаВесьЭкран Тогда
				КлиентскоеПриложение.УстановитьРежимОсновногоОкна(РежимОсновногоОкнаКлиентскогоПриложения.РабочееМесто);
				
			КонецЕсли;
		КонецЕсли;
	#КонецЕсли

КонецПроцедуры

// Обработчик события ПриНачалеРаботыСистемы.
//
Процедура ПриНачалеРаботыСистемы() Экспорт
	Если CRM_ЛицензированиеЭкспортныеМетоды.РабочийСтолCRMИспользуется() Тогда
		НастройкиОткрытия = CRM_РабочийСтолСервер.ПолучитьНастройкиОткрытия();
		ЗапускатьРабочийСтолМенеджера = НастройкиОткрытия.ОткрыватьРабочийСтол ИЛИ НастройкиОткрытия.БлокироватьИнтерфейс;
		Если ЗапускатьРабочийСтолМенеджера Тогда

			ИнициализироватьРабочийСтолКлиент();

			НачальнаяСтраницаИзменена = CRM_РабочийСтолСервер.ВосстановитьНастройкиНачальнойСтраницы();
			Если НачальнаяСтраницаИзменена Тогда
				ОбновитьИнтерфейс();
			КонецЕсли;

		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// Обработчик события нажатие гипперссылки.
//
// Параметры:
//  Форма	 - ФормаКлиентскогоПриложения - Форма.
//  Элемент	 - ЭлементФормы - Элемент формы.
//
Процедура ОбработкаГипперссылкиДействийНажатие(Форма, Элемент) Экспорт

	Если Элемент.Имя = "CRM_ОткрытьЗаметки" Тогда
		СформироватьПанельЗаметок(Форма);
	КонецЕсли;
	
	Если Элемент.Имя = "скЗакрытьЗаметки" Тогда
		Форма.Элементы.скОбластьЗаметки.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#Область Заметки

// Скрывает заметки.
//
// Параметры:
//  Форма	 - ФормаКлиентскогоПриложения - Форма.
//
Процедура СкрытьЗаметки(Форма) Экспорт
	
	Форма.Элементы.скОбластьЗаметки.Видимость = Ложь;
	Форма.Элементы.CRM_ОткрытьЗаметки.Видимость = Истина; 
	Форма.скПолеHTMLЗаметок 				  = "";
		
КонецПроцедуры

// Открывает форму всех заметок.
//
// Параметры:
//  Форма	 - ФормаКлиентскогоПриложения - Форма.
//  Команда	 - КомандаФормы	 - Команда.
//
Процедура КомандаЗаметкиВсе(Форма, Команда) Экспорт
	
	Оповещение = Новый ОписаниеОповещения("ПослеРедактированияЗаметок", 
		ЭтотОбъект, Новый Структура("Форма", Форма));
	
	ОткрытьФорму("Справочник.Заметки.Форма.ВсеЗаметки", , 
		Форма,
		Форма.УникальныйИдентификатор, , ,
		Оповещение);	
	
КонецПроцедуры

// Добавляет заметки.
//
// Параметры:
//  Форма	 - ФормаКлиентскогоПриложения - Форма.
//  Команда	 - КомандаФормы	 - Команда.
//
Процедура КомандаЗаметкиДобавить(Форма, Команда) Экспорт
	
	Оповещение = Новый ОписаниеОповещения("ПослеРедактированияЗаметок", 
		ЭтотОбъект, Новый Структура("Форма", Форма));
		
	ОткрытьФорму("Справочник.Заметки.ФормаОбъекта", , 
		Форма,
		Форма.УникальныйИдентификатор, , , 
		Оповещение,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);	
	
КонецПроцедуры

// Выполняет действия после редактирования заметок.
//
// Параметры:
//  Результат	 - Структура - Результат.
//  Контекст	 - ЛюбойТип - Контекст.
//
Процедура ПослеРедактированияЗаметок(Результат, Контекст) Экспорт
	СформироватьПанельЗаметок(Контекст.Форма, Ложь);	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПриЗакрытииФормы(Форма) Экспорт
	Если ск_глСтекФормРабочегоСтола <> Неопределено Тогда 
		Для Каждого ПолученнаяФорма Из ск_глСтекФормРабочегоСтола Цикл
			Если ПолученнаяФорма.Значение.ИмяФормы = Форма.ИмяФормы Тогда
				ск_глСтекФормРабочегоСтола.Удалить(ПолученнаяФорма.Ключ);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры	

Процедура ТумблерРабочегоСтолаПриИзменении(Форма, Элемент) Экспорт
	
	ИндексФормы = Число(СтрЗаменить(Элемент.Имя, "crm_КнопкаТумблера_", ""));
	
	Если  Форма.CRM_НастройкиРабочегоСтола.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ЭлементРабочегоСтола = Форма.CRM_НастройкиРабочегоСтола[ИндексФормы];

	// Формы, недоступные без 1С:КП Отраслевого
	Если ЭлементРабочегоСтола.ИмяФормы = "Обработка.CRM_АРМ_РабочееМестоСквознаяАналитика.Форма.Форма"
	 Или ЭлементРабочегоСтола.ИмяФормы = "Обработка.CRM_ПланированиеПродаж.Форма.Форма" Тогда
		Если Не CRM_ЛицензированиеКлиент.ПроверитьПодключениеОтраслевыхСервисовИОткрыть() Тогда
			Возврат;
		КонецЕсли;
			
	КонецЕсли;
	
	Если ск_глСтекФормРабочегоСтола = Неопределено Тогда
		ск_глСтекФормРабочегоСтола = Новый Соответствие;
	КонецЕсли;
	
	ПолученнаяФорма = ск_глСтекФормРабочегоСтола.Получить(ЭлементРабочегоСтола.Идентификатор);
	
	Если ПолученнаяФорма <> Неопределено И НЕ ПолученнаяФорма.Открыта() Тогда
		#Если ВебКлиент Тогда
			ПолученнаяФорма = Неопределено;
			ск_глСтекФормРабочегоСтола.Удалить(ЭлементРабочегоСтола.Идентификатор);
		#Иначе
			Если ПолученнаяФорма.ИмяФормы = "Обработка.CRM_Мессенджер.Форма.ФормаМессенджера" Тогда
				ПолученнаяФорма = Неопределено;
				ск_глСтекФормРабочегоСтола.Удалить(ЭлементРабочегоСтола.Идентификатор);
			КонецЕсли;
		#КонецЕсли
		
	ИначеЕсли ПолученнаяФорма <> Неопределено
		 И ПолученнаяФорма.ИмяФормы = "Обработка.CRM_АРМПланированияВстреч.Форма.ФормаАРМ" Тогда
		ПолученнаяФорма.Закрыть();
		ПолученнаяФорма = Неопределено;
		ск_глСтекФормРабочегоСтола.Удалить(ЭлементРабочегоСтола.Идентификатор);
	КонецЕсли;
	
	Если ПолученнаяФорма = Неопределено Тогда
		ОбщиеПараметры = Новый Структура;
		ПараметрыНастроек = Неопределено;
		Если ЗначениеЗаполнено(глЗаголовокДиалогов) Тогда
			ПараметрыНастроек = Новый Структура("глЗаголовокДиалогов", глЗаголовокДиалогов);
		КонецЕсли;
		ТаблицаНастроекРабочегоСтола = CRM_РабочийСтолСервер.ПолучитьТаблицуНастроекРабочегоСтола(ПараметрыНастроек);
		ПараметрыФормы = Новый Структура("CRM_НастройкиРабочегоСтола, скОбщиеПараметры",
				ТаблицаНастроекРабочегоСтола, ОбщиеПараметры);
			
		// BSLLS:MissingCodeTryCatchEx-off		
		Попытка
			Выполнить(ЭлементРабочегоСтола.Параметры);
		Исключение
			// Обработка исключения на требуется
		КонецПопытки;
		// BSLLS:MissingCodeTryCatchEx-on
		
		Попытка
			ПараметрыФормы = CRM_РабочийСтолСервер.ПолучитьПараметрыОткрытияФормы(ЭлементРабочегоСтола.ИмяФормы, ПараметрыФормы);
			ПолученнаяФорма = ПолучитьФорму(ЭлементРабочегоСтола.ИмяФормы, ПараметрыФормы);
		Исключение
			ПолученнаяФорма = Неопределено;
		КонецПопытки;
		Если ПолученнаяФорма = Неопределено Тогда
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = "Форма """ + ЭлементРабочегоСтола.Наименование + """ недоступна для использования.";
			СообщениеПользователю.Сообщить();
			Возврат;
		КонецЕсли;	
		ПолученнаяФорма.РежимОткрытияОкна = РежимОткрытияОкнаФормы.Независимый;
		ПолученнаяФорма.Заголовок = ЭлементРабочегоСтола.Наименование; 
		ск_глСтекФормРабочегоСтола.Вставить(ЭлементРабочегоСтола.Идентификатор, ПолученнаяФорма);
		
	КонецЕсли;
	
	Для каждого ФормаРабочегоСтола Из ск_глСтекФормРабочегоСтола Цикл
		Если ФормаРабочегоСтола.Значение = Форма Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ПолученнаяФорма.ИмяФормы = "Обработка.сфпАРМ_Телефония.Форма.Форма" Тогда
		CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики("CRM_Статистика.СофтФон.Подключение.РабочийСтолТелефония");
	ИначеЕсли ПолученнаяФорма.ИмяФормы = "Обработка.CRM_Мессенджер.Форма.ФормаМессенджера" Тогда
		CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики("CRM_Статистика.АРМДиалоги.ОткрытиеВОдинКлик.УниверсальныйРабочийСтол");
	ИначеЕсли ПолученнаяФорма.ИмяФормы = "Отчет.CRM_ПутьКлиента.Форма.ФормаОтчета" Тогда
		CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики("CRM_Статистика.Продажи.ПутьКлиента.ОткрытиеВОдинКлик.УниверсальныйРабочийСтол");
	ИначеЕсли ПолученнаяФорма.ИмяФормы = "Обработка.CRM_МенеджерПочты.Форма.Форма" Тогда
		CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики("CRM_Статистика.Взаимодействия.МенеджерПочты.ОткрытиеВОдинКлик.ОткрытиеИзУниверсальногоРабочегоСтола");
	ИначеЕсли ПолученнаяФорма.ИмяФормы = "Обработка.CRM_ПланированиеПродаж.Форма.Форма" Тогда
		CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики("CRM_Статистика.Продажи.ПланированиеПродаж.ОткрытиеВОдинКлик.ОткрытиеИзУниверсальногоРабочегоСтола");
	ИначеЕсли ПолученнаяФорма.ИмяФормы = "Обработка.CRM_АРМ_УправлениеПоказателями.Форма.ФормаИспользуемыеПоказатели" Тогда
		CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики("CRM_Статистика.Показатели.ФормаМоиПоказатели.ОткрытиеВОдинКлик.ОткрытиеИзРазделаРабочийСтол");
	КонецЕсли;
	
	Если ПолученнаяФорма.Открыта() Тогда
		ПолученнаяФорма.Активизировать();
	Иначе	
		ПолученнаяФорма.Открыть();
	КонецЕсли;
	ОбработкаПриСменеВкладки(ПолученнаяФорма, ЭлементРабочегоСтола);
	
КонецПроцедуры

Процедура ВыборИзСпискаСкрытыхФорм(Форма, Элемент) Экспорт
	ЭлементыРабочегоСтола = CRM_РабочийСтолСервер.ПолучитьТаблицуСкрытыхНастроекРабочегоСтола();
	Если ЭлементыРабочегоСтола.Количество() = 0 Тогда
		Возврат;	
	КонецЕсли;
	ИндексФормы = Число(СтрЗаменить(Элемент.Имя, "crm_СкрытаяКнопкаТумблера_", ""));
	Если ск_глСтекФормРабочегоСтола = Неопределено Тогда
		ск_глСтекФормРабочегоСтола = Новый Соответствие;	
	КонецЕсли;
	ЭлементРабочегоСтола = ЭлементыРабочегоСтола[ИндексФормы];
	ПолученнаяФорма = ск_глСтекФормРабочегоСтола.Получить(ЭлементРабочегоСтола.Идентификатор);
	Если ПолученнаяФорма <> Неопределено И НЕ ПолученнаяФорма.Открыта() Тогда
		#Если ВебКлиент Тогда
			ПолученнаяФорма = Неопределено;
			ск_глСтекФормРабочегоСтола.Удалить(ЭлементРабочегоСтола.Идентификатор);
		#КонецЕсли
	КонецЕсли;
	Если ПолученнаяФорма = Неопределено Тогда
		ОбщиеПараметры = Новый Структура;
		ТаблицаНастроекРабочегоСтола = CRM_РабочийСтолСервер.ПолучитьТаблицуНастроекРабочегоСтола();
		ПараметрыФормы = Новый Структура("CRM_НастройкиРабочегоСтола, скОбщиеПараметры",
		ТаблицаНастроекРабочегоСтола, ОбщиеПараметры);
		
		// BSLLS:MissingCodeTryCatchEx-off
		Попытка
			Выполнить(ЭлементРабочегоСтола.Параметры);
		Исключение
			// Обработка исключения не требуется
		КонецПопытки;
		// BSLLS:MissingCodeTryCatchEx-on
		
		Попытка
			ПолученнаяФорма = ПолучитьФорму(ЭлементРабочегоСтола.ИмяФормы, ПараметрыФормы);
		Исключение
			ПолученнаяФорма = Неопределено;
		КонецПопытки;
		Если ПолученнаяФорма = Неопределено Тогда
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = "Форма """ + ЭлементРабочегоСтола.Наименование + """ недоступна для использования.";
			СообщениеПользователю.Сообщить();
			Возврат;
		КонецЕсли;	
		ПолученнаяФорма.РежимОткрытияОкна = РежимОткрытияОкнаФормы.Независимый;
		ПолученнаяФорма.Заголовок = ЭлементРабочегоСтола.Наименование; 
		ск_глСтекФормРабочегоСтола.Вставить(ЭлементРабочегоСтола.Идентификатор, ПолученнаяФорма);
		
	КонецЕсли;
	
	Для каждого ФормаРабочегоСтола Из ск_глСтекФормРабочегоСтола Цикл
		Если ФормаРабочегоСтола.Значение = Форма Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ПолученнаяФорма.Открыта() Тогда
		ПолученнаяФорма.Активизировать();	
	Иначе	
		ПолученнаяФорма.Открыть();
	КонецЕсли;
	ЭлементКнопка = ПолученнаяФорма.Элементы.Найти("ЭлементГруппаКнопокПодменю");
	Если ЭлементКнопка <> Неопределено Тогда
		ЭлементКнопка.Заголовок = ЭлементРабочегоСтола.Наименование;
		#Если НЕ ВебКлиент Тогда
			ЭлементКнопка.ЦветФона = Новый Цвет(0, 160, 242);
		#КонецЕсли
		ЭлементКнопка = ПолученнаяФорма.Элементы[Элемент.Имя];
		ЭлементКнопка.Пометка = Истина;
	КонецЕсли;
	ОбработкаПриСменеВкладки(ПолученнаяФорма, ЭлементРабочегоСтола);
КонецПроцедуры

Процедура ОткрытьФормуНастроек(Форма, Элемент) Экспорт
	
	ОткрытьФорму("ОбщаяФорма.CRM_НастройкиРабочегоСтола", Новый Структура("ИмяФормы", Форма.ИмяФормы));
	
КонецПроцедуры

Процедура ОткрытьФормуПоддержки(Форма, Элемент) Экспорт
	
	ОткрытьФорму("Обработка.ИнформационныйЦентр.Форма.ИнформационныйЦентр");
	
КонецПроцедуры

Процедура ОбработкаПриСменеВкладки(Форма, ЭлементРабочегоСтола) Экспорт
	
	// BSLLS:UnusedLocalVariable-off
	ск_глТекущийИдентификатор = ЭлементРабочегоСтола.Идентификатор;
	// BSLLS:UnusedLocalVariable-on
	Обновить(Форма);
	
КонецПроцедуры // ОбработкаПриСменеВкладки()

Процедура Обновить(Форма)
	
	// Заметки
	Если Форма.Элементы.Найти("скОбластьЗаметки") <> Неопределено И Форма.Элементы.скОбластьЗаметки.Видимость Тогда
		СформироватьПанельЗаметок(Форма);	
	
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьИндексФормыРабочегоСтола(Форма, ИмяПроверяемойФормы) Экспорт

	ИндексФормы = -1;
	НайденныеСтроки = Форма.CRM_НастройкиРабочегоСтола.НайтиСтроки(Новый Структура("ИмяФормы", ИмяПроверяемойФормы));
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		ИндексФормы = Форма.CRM_НастройкиРабочегоСтола.Индекс(НайденныеСтроки[0]);
	КонецЕсли;
	
	Возврат ИндексФормы;
	
КонецФункции // ПолучитьИндексФормыРабочегоСтола()

// Активирует форму на рабочем столе, если она доступна (без учета скрытых)
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения, текущая форма рабочего стола
//  ИмяОткрываемойФормы - строка, полное имя открываемой формы
//
Процедура АктивироватьФормуРабочегоСтола(Форма, ИмяОткрываемойФормы, ИндексФормы = -1) Экспорт

	Если ИндексФормы = -1 Тогда
		ИндексФормы = ПолучитьИндексФормыРабочегоСтола(Форма, ИмяОткрываемойФормы);
	КонецЕсли;
	
	Если ИндексФормы <> -1 Тогда
		ТумблерРабочегоСтолаПриИзменении(Форма, Новый Структура("Имя", "crm_КнопкаТумблера_" + ИндексФормы));
	КонецЕсли;
	
КонецПроцедуры // АктивироватьФормуРабочегоСтола()

Функция ФормаОткрытаНаРабочемСтоле(Форма) Экспорт

	Если Форма.Элементы.Найти("crm_НастройкиРабочегоСтола") = Неопределено Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;

КонецФункции // ПолучитьИндексФормыРабочегоСтола()

#Область ВспомогательныеПроцедурыФункции

#КонецОбласти

#Область РаботаСHTML

#Область Заметки

Функция СтильЗаметокHTML()
	
	Возврат
		"<style>
		|	.notes {
		|		height: 99%;
		|		overflow: auto;
		|		padding: 6px;
		|		font-family: Arial, sans-serif;
		|		box-sizing: border-box;
		|	}
		|	.notes * {
		|	    box-sizing: border-box;
		|	}
		|	.note {
		|		position: relative;
		|		width: 100%;
		|		max-width: 366px;
		|		background: #f5f5f5;
		|		padding: 12px 28px 12px 22px;
		|		border-top-right-radius: 12px;
		|		border-bottom-right-radius: 12px;
		|		overflow: hidden;
		|		margin-bottom: 8px;
		|		border-left: 10px solid #FAAC58;
		|	}
		|	.note:last-child {
		|		margin-bottom: 0;
		|	}
		|		
		|	.note__content {
		|		font-size: 13px;
		|		line-height: 15px;
		|		color: #2C2C2C;
		|	}
		|		
		|	.note__close {
		|		position: absolute;
		|		top: 8px;
		|		right: 8px;
		|		appearance: none;
		|		background: none;
		|		padding: 0;
		|		margin: 0;
		|		border: none;
		|		cursor: pointer;
		|		display: flex;
		|		align-items: center;
		|		font-size: 13px;
		|		line-height: 15px;
		|		color: #2C2C2C;
		|	}
		|		
		|	.note__close img {
		|		height: 16px;
		|		width: 16px;
		|	}
		|		
		|	::-webkit-scrollbar {
		|	    width: 8px;
		|	}
		|		
		|	::-webkit-scrollbar-thumb {
		|	    border-radius: 4px;
		|	    border-width: 1px 1px 1px 2px;
		|	    border-color: #777;
		|	    background-color: #aaa;
		|	}
		|		
		|	::-webkit-scrollbar-thumb:hover {
		|	    border-width: 1px 1px 1px 2px;
		|	    border-color: #555;
		|	    background-color: #777;
		|	}
		|		
		|	::-webkit-scrollbar-track {
		|	    border-width: 0;
		|	}
		|	
		|	::-webkit-scrollbar-track:hover {
		|	    border-left: solid 1px #aaa;
		|	    background-color: #eee;
		|	}
		|</style>";
		
КонецФункции

Функция HTMLПредставлениеСпискаЗаметок(МассивЭлементовЗаметок, ИдентификаторФормы)
	
	HTMLТекст = "<!DOCTYPE html>
			|<html lang=""ru"">
			|<head>
			|    <meta charset=""UTF-8"">
			|    <title>Заметки</title>" + СтильЗаметокHTML() + "
			|</head>
			|<body>
			|<div class=""notes"">";
	Если МассивЭлементовЗаметок.Количество() = 0 Тогда
		HTMLТекст = HTMLТекст + 
		"<div class=""textcentr"">" + НСтр("ru='Нет заметок...';en='No notes...'") + "</div>";
	Иначе
		
		Для каждого ЭлементНапоминания Из МассивЭлементовЗаметок Цикл
			HTMLТекст = HTMLТекст + "
			|<div class=""note"" style=""border-left-color: " + ЭлементНапоминания.ЦветСтиля + ";"">
			|	<button type=""button"" class=""note__close"">
			|		<img src=""img/close.svg"" alt=""Иконка"" id=""Скрыть_" 
				+ ЭлементНапоминания.ИдентификаторСсылки 
				+ """ title=""Скрыть"">
			|	</button>
			|	<div class=""note__content"" id=""Открыть_" + ЭлементНапоминания.ИдентификаторСсылки + """>
			|	" + СтрЗаменить(ЭлементНапоминания.ТекстСодержания, Символы.ПС, "<br>") + "
			|	</div>
			|</div>";
		КонецЦикла;
		
	КонецЕсли;
	HTMLТекст = HTMLТекст + "</div></body></html>";

	ПутьККартинке = ПоместитьВоВременноеХранилище(БиблиотекаКартинок.CRM_ВиджетыКнопкаЗакрыть, ИдентификаторФормы);
	HTMLТекст = СтрЗаменить(HTMLТекст, "img/close.svg", ПутьККартинке);
	
	Возврат HTMLТекст;
	
КонецФункции

Функция ПолеHTMLЗаметокПриНажатии(Форма, Элемент, ДанныеСобытия, СтандартнаяОбработка) Экспорт
	
	ИмяКоманды = ДанныеСобытия.Event.target.id;
	Если ИмяКоманды = "" Тогда
		Возврат Ложь;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ИмяКоманды = ДанныеСобытия.Event.target.id;
	МассивКоманды = СтрРазделить(ИмяКоманды, "_", Ложь);
	Если СтрНайти(ИмяКоманды, "Скрыть") > 0 Тогда
		Если CRM_РабочийСтолСервер.СкрытьЭлементЗаметки(МассивКоманды[МассивКоманды.ВГраница()]) Тогда
			СформироватьПанельЗаметок(Форма, Ложь);
		
		КонецЕсли;
		
	ИначеЕсли СтрНайти(ИмяКоманды, "Открыть") > 0 Тогда
		Оповещение = Новый ОписаниеОповещения("ПослеРедактированияЗаметок", 
			ЭтотОбъект, Новый Структура("Форма", Форма));
			
		ОткрытьФорму("Справочник.Заметки.ФормаОбъекта", 
			Новый Структура("Ключ",
				 CRM_РабочийСтолСервер.СсылкаЭлемента(МассивКоманды[МассивКоманды.ВГраница()],
				 "Справочник.Заметки")), 
			Форма,
			Форма.УникальныйИдентификатор, , , 
			Оповещение,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
		);	
		
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

#КонецОбласти

Функция ДобавитьКартинку(Картинка, Положение = "middle", Ссылка = "") Экспорт
	
	HTMLТекст = "";
	
	#Если ВебКлиент Тогда
		СтруктураДанныхКартинки = CRM_РабочийСтолСервер.ПолучитьBase64ДанныеКартинки(Картинка);	
	#Иначе
		ДвоичныеДанныеКартинки = Картинка.ПолучитьДвоичныеДанные();
		Base64ДанныеКартинки = Base64Строка(ДвоичныеДанныеКартинки);
		СтруктураДанныхКартинки = Новый Структура("Base64ДанныеКартинки, Формат", Base64ДанныеКартинки, Картинка.Формат());
	#КонецЕсли
	Если ЗначениеЗаполнено(Ссылка) Тогда
		HTMLТекст = HTMLТекст + "<a href=" + Ссылка + ">";
	КонецЕсли;
	
	HTMLТекст = HTMLТекст
		+ "<img border=0 src='data:image/"
		+ СтруктураДанныхКартинки.Формат
		+ ";base64,"
		+ СтруктураДанныхКартинки.Base64ДанныеКартинки + "' align=" + Положение + ">";
		
	Если ЗначениеЗаполнено(Ссылка) Тогда
		HTMLТекст = HTMLТекст + "</a>";
	КонецЕсли;
	
	Возврат HTMLТекст;
	
КонецФункции

#КонецОбласти

Процедура ВопросОткрытьНастройкиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		Пользователь = ПользователиКлиентСервер.АвторизованныйПользователь();
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Пользователь", Пользователь);
		ОткрытьФорму("ОбщаяФорма.CRM_НастройкиРабочегоСтола", СтруктураПараметров);
	КонецЕсли;	
КонецПроцедуры	

Процедура ИнициализироватьРабочийСтолКлиент(ОткрытьФорму = Неопределено, ПараметрыФормы = Неопределено) Экспорт
	Перем ПерваяФорма;
	
	Если сфпСофтФонПроСервер.сфпИспользоватьСофтФон() Тогда
		Если ск_глСтекФормРабочегоСтола <> Неопределено Тогда
			Для Каждого Элемент Из ск_глСтекФормРабочегоСтола Цикл
				Если Элемент.Значение.Открыта() Тогда
					Элемент.Значение.Закрыть();
				КонецЕсли;	
			КонецЦикла;
		ск_глСтекФормРабочегоСтола = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	Если CRM_ОбщегоНазначенияКлиент.ЭтоМобильныйКлиент() Тогда
		//ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Невозможно открыть Рабочий стол на мобильном устройстве.'"));
		Возврат;
	КонецЕсли;
	
	Если НЕ CRM_ЛицензированиеЭкспортныеМетоды.РабочийСтолCRMИспользуется() Тогда
		Возврат;
	КонецЕсли;
	ПараметрыНастроек = Новый Структура("ПолучатьСкрытые", Истина);
	ЭлементыРабочегоСтола = CRM_РабочийСтолСервер.ПолучитьТаблицуНастроекРабочегоСтола(ПараметрыНастроек);
	Если ЭлементыРабочегоСтола.Количество() = 0 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросОткрытьНастройкиЗавершение", ЭтотОбъект, Новый Структура);
		ПоказатьВопрос(ОписаниеОповещения, "Отсутствуют настройки рабочего стола.
		|Открыть настройки ?", РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
	ОткрытыеОкна = ПолучитьОкна(); // получим список открытых окон для проверки.
	Если ОткрытыеОкна = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ОткрытоеОкно Из ОткрытыеОкна Цикл
		Для Каждого ОткрытаяФорма Из ОткрытоеОкно.Содержимое Цикл
			Для Каждого ОткрываемыеОкна Из ЭлементыРабочегоСтола Цикл
				#Если ВебКлиент Тогда
					Если ОткрытаяФорма.ИмяФормы = ОткрываемыеОкна.ИмяФормы И НЕ ОткрытоеОкно.НачальнаяСтраница Тогда
						ОткрытаяФорма.Закрыть();
					КонецЕсли;
				#Иначе
					Если ОткрытаяФорма.ИмяФормы = ОткрываемыеОкна.ИмяФормы Тогда
						ОткрытаяФорма.Закрыть();
					КонецЕсли;
				#КонецЕсли
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ОбщиеПараметры = Новый Структура;
	
	ЭлементыРабочегоСтола = CRM_РабочийСтолСервер.ПолучитьТаблицуНастроекРабочегоСтола();
	
	Если ск_глСтекФормРабочегоСтола = Неопределено Тогда
		ск_глСтекФормРабочегоСтола = Новый Соответствие;
	КонецЕсли;
	
	глИспользуютсяДиалогиНаРабочемСтоле = Ложь;
	Для Каждого ЭлементРабочегоСтола Из ЭлементыРабочегоСтола Цикл
		Если ЭлементРабочегоСтола.ИмяФормы = "Обработка.CRM_Мессенджер.Форма.ФормаМессенджера" Тогда
			глИспользуютсяДиалогиНаРабочемСтоле = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	АктивизироватьСкрытуюФорму = Ложь;
	ТекЭлементРабочегоСтола = Неопределено;
	ИндексПервойФормы = 0;
	Если ЭлементыРабочегоСтола.Количество() = 0 Тогда
		МассивЭлементовРабочегоСтола = CRM_РабочийСтолСервер.ПолучитьТаблицуСкрытыхНастроекРабочегоСтола();
		АктивизироватьСкрытуюФорму = Истина;
	Иначе
		МассивЭлементовРабочегоСтола = ЭлементыРабочегоСтола;
	КонецЕсли;
	
	Для Каждого ЭлементРабочегоСтола Из МассивЭлементовРабочегоСтола Цикл
		Если ЗначениеЗаполнено(ОткрытьФорму) И ЭлементРабочегоСтола.ИмяФормы <> ОткрытьФорму Тогда
			Продолжить;
		КонецЕсли;
		Если Не CRM_РабочийСтолСервер.ФормаДоступнаПоФункциональнымОпциям(ЭлементРабочегоСтола.ИмяФормы) Тогда
			Продолжить;
		КонецЕсли;
		
		Форма = ск_глСтекФормРабочегоСтола.Получить(ЭлементРабочегоСтола.Идентификатор);
		Если Форма = Неопределено Тогда
			Если ПараметрыФормы = Неопределено Тогда
				ПараметрыФормы = Новый Структура;
			КонецЕсли;
			ПараметрыФормы.Вставить("CRM_НастройкиРабочегоСтола", ЭлементыРабочегоСтола);
			ПараметрыФормы.Вставить("скОбщиеПараметры", ОбщиеПараметры);
			
			// BSLLS:MissingCodeTryCatchEx-off
			Попытка
				Выполнить(ЭлементРабочегоСтола.Параметры);
			Исключение
				// Обработка исключения не требуется
			КонецПопытки;
			// BSLLS:MissingCodeTryCatchEx-on
			
			Попытка
				Форма = ПолучитьФорму(ЭлементРабочегоСтола.ИмяФормы, ПараметрыФормы);
			Исключение
				Форма = Неопределено;
			КонецПопытки;
			Если Форма = Неопределено Тогда
				СообщениеПользователю = Новый СообщениеПользователю;
				СообщениеПользователю.Текст = "Форма """ + ЭлементРабочегоСтола.Наименование + """ недоступна для использования.";
				СообщениеПользователю.Сообщить();
				ИндексПервойФормы = ИндексПервойФормы + 1;
				Продолжить;
			КонецЕсли;
			Форма.РежимОткрытияОкна = РежимОткрытияОкнаФормы.Независимый;
			Форма.Заголовок = ЭлементРабочегоСтола.Наименование;
			ск_глСтекФормРабочегоСтола.Вставить(ЭлементРабочегоСтола.Идентификатор, Форма);
			
			ОбработкаПриСменеВкладки(Форма, ЭлементРабочегоСтола);
			
		КонецЕсли;
		ПерваяФорма = Форма;
		ТекЭлементРабочегоСтола = ЭлементРабочегоСтола;
		Прервать;
		
	КонецЦикла;
	
	Если ПерваяФорма <> Неопределено Тогда
		ПерваяФорма.Открыть();
		ОткрытыеОкна = ПолучитьОкна(); // получим список открытых окон для проверки.
		Для Каждого ОткрытоеОкно Из ОткрытыеОкна Цикл
			Для Каждого ОткрытаяФорма Из ОткрытоеОкно.Содержимое Цикл
				Если ОткрытаяФорма.ИмяФормы = ПерваяФорма.ИмяФормы Тогда
					ОткрытаяФорма.Активизировать();
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
		Если АктивизироватьСкрытуюФорму Тогда
			ЭлементКнопка = ПерваяФорма.Элементы.Найти("ЭлементГруппаКнопокПодменю");
			ЭлементИмя = "crm_СкрытаяКнопкаТумблера_" + ИндексПервойФормы;
			Если ЭлементКнопка <> Неопределено Тогда
				ЭлементКнопка.Заголовок = ТекЭлементРабочегоСтола.Наименование;
				#Если НЕ ВебКлиент Тогда
					ЭлементКнопка.ЦветФона = Новый Цвет(0, 160, 242);
				#КонецЕсли
				ЭлементКнопка = ПерваяФорма.Элементы[ЭлементИмя];
				ЭлементКнопка.Пометка = Истина;
			КонецЕсли;
			ОбработкаПриСменеВкладки(ПерваяФорма, ТекЭлементРабочегоСтола);
		КонецЕсли;
	КонецЕсли;
	
	CRM_РаботаСМессенджерамиКлиент.ПодключитьОповещенияОСлужебныхСообщениях();
	
КонецПроцедуры // ИнициализироватьРабочийСтолКлиент()

// Функция необходима для вычисления выражения в СофтФоне
//
Функция ПереинициализироватьРабочийСтолКлиент(ОткрытьФорму = Неопределено, ПараметрыФормы = Неопределено) Экспорт
	Если ск_глСтекФормРабочегоСтола <> Неопределено Тогда
		Для Каждого Элемент Из ск_глСтекФормРабочегоСтола Цикл
			Если Элемент.Значение.Открыта() Тогда
				Элемент.Значение.Закрыть();
			КонецЕсли;
		КонецЦикла;
		ск_глСтекФормРабочегоСтола = Неопределено;

	КонецЕсли;
	ОбновитьИнтерфейс();
	ИнициализироватьРабочийСтолКлиент(ОткрытьФорму, ПараметрыФормы);
	
	Возврат Истина;
КонецФункции

Процедура СформироватьПанельЗаметок(Форма, ЗакрыватьПанель = Истина)
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ПоддерживаетРабочийСтол")
		И Форма.Элементы.Найти("скОбластьЗаметки") <> Неопределено Тогда
		Если Форма.Элементы.скОбластьЗаметки.Видимость И ЗакрыватьПанель Тогда
			Форма.Элементы.скОбластьЗаметки.Видимость = Ложь;
		Иначе	
			
			МассивЭлементов = CRM_РабочийСтолСервер.ЗаметкиПользователя();
			
			Форма.скПолеHTMLЗаметок = HTMLПредставлениеСпискаЗаметок(МассивЭлементов, Форма.УникальныйИдентификатор);	
			Форма.Элементы.скОбластьЗаметки.Видимость = Истина;
			
			Форма.ТекущийЭлемент = Форма.Элементы.скПолеHTMLЗаметок;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
