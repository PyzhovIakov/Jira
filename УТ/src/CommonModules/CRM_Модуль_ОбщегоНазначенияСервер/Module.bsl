
#Область СлужебныйПрограммныйИнтерфейс

#Область ИсточникиПервичногоИнтереса

Процедура CRM_УТ_ИсточникиПервичногоИнтересаПередЗаписью(Источник, Отказ, Замещение) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(Источник) = Тип("РегистрСведенийНаборЗаписей.ИсточникиПервичногоИнтереса") Тогда
		
		Если НЕ ЗначениеЗаполнено(Источник.Отбор.Период.Значение) Тогда
			ТекущаяДата = ТекущаяДата();
			Источник.Отбор.Период.Установить(ТекущаяДата);
			Для каждого Запись из Источник Цикл
				Запись.Период = ТекущаяДата;
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьЗаписиИсточникаПервичногоИнтереса(Сделка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИсточникиПервичногоИнтереса.Период КАК Период,
	|	ИсточникиПервичногоИнтереса.Партнер КАК Партнер
	|ИЗ
	|	РегистрСведений.ИсточникиПервичногоИнтереса КАК ИсточникиПервичногоИнтереса
	|ГДЕ
	|	ИсточникиПервичногоИнтереса.Сделка = &Сделка";
	Запрос.УстановитьПараметр("Сделка", Сделка);
	
	ТаблицаУдаляемыхЗаписей = Запрос.Выполнить().Выгрузить();
	Для Каждого Строка Из ТаблицаУдаляемыхЗаписей Цикл
		МенеджерЗаписей = РегистрыСведений.ИсточникиПервичногоИнтереса.СоздатьМенеджерЗаписи();
		МенеджерЗаписей.Период = Строка.Период;
		МенеджерЗаписей.Сделка = Сделка;
		МенеджерЗаписей.Партнер = Строка.Партнер;
		МенеджерЗаписей.Удалить();
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти // ИсточникиПервичногоИнтереса


#Область МеханизмыОбновления

Процедура УстановитьМинимальноДопустимуюВерсию(МинимальноДопустимаяВерсия) Экспорт
	
	Если CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("ОбщиеМодули", "CRM_УТ_ОбновлениеИнформационнойБазы") Тогда
		МинимальноДопустимаяВерсия = "2.0.19.1"; // для УТиВсК3
	КонецЕсли;
	
КонецПроцедуры // УстановитьМинимальноДопустимуюВерсию

#КонецОбласти // МеханизмыОбновления

#Область УправлениеЭлектроннойПочтой

// Устанавливает папку электронного письма.
// Параметры:
//  Ссылка  - ссылка на письмо,
//  Папка - устанавливаемая папка электронного письма.
//
Процедура УстановитьПапкуЭлектронногоПисьма(Ссылка, Папка, РассчитыватьРассмотрено = Истина) Экспорт
	
	СтруктураДляЗаписи = РегистрыСведений.ПредметыПапкиВзаимодействий.РеквизитыВзаимодействия();
	СтруктураДляЗаписи.Папка                   = Папка;
	СтруктураДляЗаписи.РассчитыватьРассмотрено = РассчитыватьРассмотрено;
	РегистрыСведений.ПредметыПапкиВзаимодействий.ЗаписатьПредметыПапкиВзаимодействий(Ссылка, СтруктураДляЗаписи);
	
КонецПроцедуры

#КонецОбласти // УправлениеЭлектроннойПочтой

// Устанавливает режим ОбменДанными.Загрузка в Истина, когда выполняется запись набора 
// записей регистра сведений "ДокументыФизическихЛиц" при записи Партнера-физлица или Контактного лица
// Делается для того, чтобы не отработали подписки на событие записи этого набора, так как в них 
// не поддрерживается работа с добавленными для CRM типами (владельцами документов физлиц).
//
// Параметры:
//  Объект  - набор записей регистра сведений "ДокументыФизическихЛиц"
//
Процедура ПроверкаПриЗаписиДокументовФизическихЛиц(Объект) Экспорт
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Объект.Отбор, "Физлицо") 
		 И (ТипЗнч(Объект.Отбор.Физлицо.Значение) = Тип("СправочникСсылка.Партнеры")
		 Или ТипЗнч(Объект.Отбор.Физлицо.Значение) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров")) Тогда
		
		Объект.ОбменДанными.Загрузка = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьОбъектБизнесПроцесса(Объект, БизнесПроцесс, Задача = Неопределено) Экспорт
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Объект, "Контрагент") Тогда
		
		ТекущийКлиент = Неопределено;
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Объект, "Партнер") Тогда
			ТекущийКлиент = Объект.Партнер;
		ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Объект, "Клиент") Тогда
			ТекущийКлиент = Объект.Клиент;
		КонецЕсли;
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСКлиентами") Тогда
			// У объекта может не быть метода "ЗаполнитьУсловияПродажПоУмолчанию()"
			Попытка
				Объект.ЗаполнитьУсловияПродажПоУмолчанию();
			Исключение
			КонецПопытки;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Объект.Контрагент) Тогда
			ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(ТекущийКлиент, Объект.Контрагент);
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

#Область ПомощникПродаж

Функция ТаблицаСуммПоЗаказам(Объект) Экспорт
	
	Если ТипЗнч(Объект) = Тип("ФормаКлиентскогоПриложения")
		И Объект.ИмяФормы = "Обработка.ПомощникПродаж.Форма.CRM_Модуль_Форма" Тогда
		
		Менеджер = Обработки.ПомощникПродаж;
		ДокументОбъект = ДанныеФормыВЗначение(Объект.Объект, Тип("ОбработкаОбъект.ПомощникПродаж"));
		
		Возврат Менеджер.СуммыПоЗаказам(ДокументОбъект);
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

#КонецОбласти // ПомощникПродаж

#Область Отчеты

Процедура ДополнитьТекстыЗапросовОтчетРентабельностьПродажДаннымиДокументов(ТекстДополненияДанныеДокумента, ТекстДополненияСводныйРасчет) Экспорт
	
	ТекстДополненияДанныеДокумента = СтрЗаменить(
		ТекстДополненияДанныеДокумента,
		"И КоммерческоеПредложениеКлиентуТовары.Ссылка = ТаблицаДокументов.Ссылка",
		"И КоммерческоеПредложениеКлиентуТовары.Ссылка = ТаблицаДокументов.Ссылка
		| И КоммерческоеПредложениеКлиентуТовары.CRM_Утвержден
		| И НЕ КоммерческоеПредложениеКлиентуТовары.CRM_ЭтоРазделитель");
		
	ТекстДополненияСводныйРасчет = СтрЗаменить(
		ТекстДополненияСводныйРасчет,
		"И КоммерческоеПредложениеКлиентуТовары.Ссылка = ТаблицаДокументов.Ссылка",
		"И КоммерческоеПредложениеКлиентуТовары.Ссылка = ТаблицаДокументов.Ссылка
		| И КоммерческоеПредложениеКлиентуТовары.CRM_Утвержден
		| И НЕ КоммерческоеПредложениеКлиентуТовары.CRM_ЭтоРазделитель");
	
КонецПроцедуры

#КонецОбласти // Отчеты

#КонецОбласти // СлужебныйПрограммныйИнтерфейс
