
////////////////////////////////////////////////////////////////////////////////
// Подсистема "Взаимодействия"
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАМНЫЙ ИНТЕРФЕЙС

// Открывает форму нового документа "Электронное письмо исходящее"
// с переданными в процедуру параметрами.
//
// Параметры:
//  Отправитель  				- СправочникСсылка.УчетныеЗаписи	- Учетная запись, с которой выполняется отправка.
//  Получатель   				- Строка, СписокЗначений, Массив	- Список получателей письма.
//  Тема       				  	- Строка 							- Тема письма.
//  Текст        				- Строка 							- Текст письма.
//  СписокФайлов 				- Массив			 				- Вложения письма.
//  Предмет      				- Ссылка 							- Предмет письма.
//	ОписаниеОповещенияОЗакрытии	- ОписаниеОповещения				- Описание оповещения о закрытии.
//
Процедура CRM_ОткрытьФормуОтправкиПочтовогоСообщения(Знач Отправитель = Неопределено, Знач Получатель = Неопределено,
	Знач Тема = "", Знач Текст = "", Знач СписокФайлов = Неопределено, Знач Предмет = Неопределено,
	Знач ОписаниеОповещенияОЗакрытии = Неопределено) Экспорт
	
	ПараметрыПисьма = Новый Структура;
	
	ПараметрыПисьма.Вставить("УчетнаяЗапись", Отправитель);
	ПараметрыПисьма.Вставить("Кому", Получатель);
	ПараметрыПисьма.Вставить("Тема", Тема);
	ПараметрыПисьма.Вставить("Тело", "");

	ПараметрыПисьма.Вставить("Вложения", СписокФайлов);
	ПараметрыПисьма.Вставить("Предмет", Предмет);
	
	Если Отправитель = "ОтправкаПечатнойФормы" Тогда
		ПараметрыПисьма.УчетнаяЗапись = Неопределено;
		ПараметрыПисьма.Вставить("ОтправкаПечатнойФормы", Истина);
	КонецЕсли;
	
	Если ТипЗнч(Текст) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
		ДанныеЗаполнения = Новый Структура;
		ДанныеЗаполнения.Вставить("ОснованиеВходящее", Текст);
		ДанныеЗаполнения.Вставить("Основание", Предмет);
		ПараметрыПисьма.Вставить("Основание", ДанныеЗаполнения);
		ПараметрыПисьма.Удалить("Тема");
	ИначеЕсли ЗначениеЗаполнено(Предмет) Тогда
		ПараметрыПисьма.Вставить("Основание", Предмет);
		Если ТипЗнч(Текст) = Тип("Строка") И Не ПустаяСтрока(Текст) Тогда
			ПараметрыПисьма.Вставить("Тело", Текст);
			ПараметрыПисьма.Вставить("Текст", Текст);	
		КонецЕсли;
	ИначеЕсли ТипЗнч(Текст) = Тип("Строка") И Не ПустаяСтрока(Текст) Тогда
		ПараметрыПисьма.Вставить("Текст", Текст);	
	КонецЕсли;
	
	ОткрытьФорму("Документ.ЭлектронноеПисьмоИсходящее.ФормаОбъекта", ПараметрыПисьма, , , , , ОписаниеОповещенияОЗакрытии);
	
КонецПроцедуры

// Открывает форму нового документа "Электронное письмо исходящее",
// заполненного по данным формы. Используется в командах форм.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма, из команды которой осуществляется вызов
//
Процедура CRM_ОткрытьФормуОтправкиПочтовогоСообщенияПоДаннымФормы(Форма) Экспорт
	
	Если ТипЗнч(Форма.Объект.ДокументОснование) = Тип("ДокументСсылка.CRM_Интерес") Тогда
		ПараметрыФормы = Новый Структура("Основание", Форма.Объект.ДокументОснование);
		ПараметрыФормы.Вставить("ДанныеЗаполнения", Форма.Объект.ДокументОснование);
	Иначе
		ПараметрыФормы = Новый Структура("Основание", Форма.Объект.Ссылка);
		ПараметрыФормы.Вставить("ДанныеЗаполнения", Форма.Объект.Ссылка);
	КонецЕсли;
	
	ПараметрыФормы.Вставить("Взаимодействие", Форма.Объект.Ссылка);
	Если НЕ ЗначениеЗаполнено(Форма.Объект.КонтактноеЛицо) 
			И НЕ ЗначениеЗаполнено(Форма.Объект.Партнер)
			И НЕ ЗначениеЗаполнено(Форма.Объект.ПотенциальныйКлиент) Тогда
		Возврат;
	КонецЕсли;
	СписокEmail	= Новый СписокЗначений;
	
	Если ЗначениеЗаполнено(Форма.Объект.Партнер) Тогда
		Контакт = ?(ЗначениеЗаполнено(Форма.Объект.КонтактноеЛицо), Форма.Объект.КонтактноеЛицо, Форма.Объект.Партнер);
	Иначе
		Контакт = Форма.Объект.ПотенциальныйКлиент;
	КонецЕсли;	
			
	МассивEmail = CRM_ВзаимодействияВызовСервера.ПолучитьМассивEmail(Контакт);

	Для Каждого ЭлементМассива Из МассивEmail Цикл
		СписокEmail.Добавить(ЭлементМассива.Контакт, ЭлементМассива.Значение);
	КонецЦикла;	
	Если СписокEmail.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не указан Email контактного лица или потенциального клиента';
			|en='No email of contact person or potential customer'"));
	ИначеЕсли СписокEmail.Количество() = 1 Тогда
		ПараметрыФормы.Вставить("Кому", СписокEmail);
	Иначе
		ПараметрыФормы.Вставить("ТолькоКому", Истина);
		ПараметрыФормы.Вставить("Владелец", Форма);
		ОповещениеВыбораEmail	= Новый ОписаниеОповещения("ОбработкаВыбораEmail", ЭтотОбъект, ПараметрыФормы);
		СписокEmail.ПоказатьВыборЭлемента(ОповещениеВыбораEmail);
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("Документ.ЭлектронноеПисьмоИсходящее.ФормаОбъекта", ПараметрыФормы, Форма);
	
КонецПроцедуры

// Осуществляет телефонный звонок по данным формы. Используется в командах форм. 
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения
//
Процедура CRM_Позвонить(Форма) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Форма.Объект.КонтактноеЛицо) И НЕ ЗначениеЗаполнено(Форма.Объект.Партнер)
		 И НЕ ЗначениеЗаполнено(Форма.Объект.ПотенциальныйКлиент) Тогда
		Возврат;
	ИначеЕсли НЕ сфпСофтФонПроКлиент.сфпПроверитьДоступностьСофтФон(Истина) Тогда
		Возврат;
	КонецЕсли;
	СписокТелефонов	= Новый СписокЗначений;
	Если ЗначениеЗаполнено(Форма.Объект.Партнер) Тогда
		МассивКонтактов = Новый Массив;
		МассивКонтактов.Добавить(Форма.Объект.КонтактноеЛицо);
		МассивКонтактов.Добавить(Форма.Объект.Партнер);
		МассивТелефонов = CRM_ВзаимодействияВызовСервера.сфпПолучитьМассивТелефонов(МассивКонтактов);		
	ИначеЕсли ЗначениеЗаполнено(Форма.Объект.ПотенциальныйКлиент) Тогда
		МассивКонтактов = Новый Массив;
		МассивКонтактов.Добавить(Форма.Объект.ПотенциальныйКлиент);		
		МассивТелефонов = CRM_ВзаимодействияВызовСервера.сфпПолучитьМассивТелефонов(МассивКонтактов);				
	КонецЕсли;		
	Для Каждого ЭлементМассива Из МассивТелефонов Цикл
		СписокТелефонов.Добавить(ЭлементМассива.Значение, ЭлементМассива.Представление);
	КонецЦикла;	
	ДанныеЗаполнения	= Новый Структура;
	Если ТипЗнч(Форма.Объект.ДокументОснование) = Тип("ДокументСсылка.CRM_Интерес") Тогда
		ДанныеЗаполнения.Вставить("Основание",	Форма.Объект.ДокументОснование);	
	Иначе
		ДанныеЗаполнения.Вставить("Основание",	Форма.Объект.Ссылка);	
	КонецЕсли;
	ДанныеЗаполнения.Вставить("Взаимодействие", Форма.Объект.Ссылка);
	ДанныеЗаполнения.Вставить("КонтактноеЛицо", Форма.Объект.КонтактноеЛицо);
	Если СписокТелефонов.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не указан номер телефона';en='Missing phone number'"));
	ИначеЕсли СписокТелефонов.Количество() = 1 Тогда
		ОповещениеВыбораТелефона(СписокТелефонов[0], ДанныеЗаполнения);
	Иначе
		ОповещениеВыбораТелефона	= Новый ОписаниеОповещения("ОповещениеВыбораТелефона", ЭтотОбъект, ДанныеЗаполнения);
		СписокТелефонов.ПоказатьВыборЭлемента(ОповещениеВыбораТелефона);
	КонецЕсли;
	
КонецПроцедуры

// Дата взаимодействия начало выбора
//
// Параметры:
//  Объект				 - Произвольный	 - Объект.
//  Элемент				 - ПолеФормы 	 - Поле формы.
//  ДанныеВыбора		 - СписокЗначений  - Данные выбора.
//  СтандартнаяОбработка - Булево	 - Признак выполнения стандартной (системной) обработки события.
//  СтруктураПараметров	 - Структура	 - Структура параметров.
//  РежимОткрытияОкна	 - РежимОткрытияОкна  	 - Режим открытия окна.
//
Процедура ДатаВзаимодействияНачалоВыбора(Объект, Элемент, ДанныеВыбора, СтандартнаяОбработка,
	 СтруктураПараметров,
	 РежимОткрытияОкна = Неопределено) Экспорт
	СтандартнаяОбработка = Ложь;
	
	Параметры = Новый Структура();
	Параметры.Вставить("РежимВыбора", Истина);
	
	Если СтруктураПараметров.Свойство("ДанныеБыстрогоВвода") Тогда
		ДанныеВвода = СтруктураПараметров.ДанныеБыстрогоВвода;
		
		Параметры.Вставить("РежимВыбора_ОбъектАдресат",
			ПредопределенноеЗначение("Документ.CRM_Взаимодействие.ПустаяСсылка"));
		Параметры.Вставить("РежимВыбора_ДатаИВремяНачала",		ДанныеВвода.ПлановаяДата);
		Параметры.Вставить("РежимВыбора_ДатаИВремяЗавершения",	ДанныеВвода.ПлановаяДатаЗавершение);
		Параметры.Вставить("РежимВыбора_ВесьДень",				ДанныеВвода.НаВесьДень);
		Параметры.Вставить("ЗакрыватьПриВыборе",				Ложь);
	КонецЕсли;
	
	Для Каждого ЭлементСтруктуры Из СтруктураПараметров Цикл
		Параметры.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
	КонецЦикла;
	
	CRM_ЦентрМониторингаКлиент.НачатьЗамерОперацииБизнесСтатистики(
		"CRM_Статистика.Взаимодействия.Календарь.ДлительностьСценариев.ВремяОткрытияФормы", Истина);
	
	ОткрытьФорму("Обработка.CRM_КалендарьМенеджера.Форма", Параметры, Элемент,
		 Объект.Ссылка, , , ,
		 РежимОткрытияОкна);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Работает в связке с CRM_ВзаимодействияКлиент.CRM_ОткрытьФормуОтправкиПочтовогоСообщенияПоДаннымФормы
Процедура ОбработкаВыбораEmail(РезультатВыбора, ПараметрыФормы) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	СписокАдресов = Новый СписокЗначений;
	СписокАдресов.Добавить(РезультатВыбора.Значение, РезультатВыбора.Представление);
	
	Владелец = Неопределено;
	Если ПараметрыФормы.Свойство("Владелец") Тогда
		Владелец = ПараметрыФормы.Владелец;
		ПараметрыФормы.Удалить("Владелец");
	КонецЕсли;
	
	ПараметрыФормы.Вставить("Кому", СписокАдресов);
	ОткрытьФорму("Документ.ЭлектронноеПисьмоИсходящее.ФормаОбъекта", ПараметрыФормы, Владелец);

КонецПроцедуры

// Работает в связке с CRM_ВзаимодействияКлиент.CRM_Позвонить
Процедура ОповещениеВыбораТелефона(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	сфпСофтФонПроКлиент.сфпПозвонить(РезультатВыбора.Значение, ДополнительныеПараметры.КонтактноеЛицо,
		 ДополнительныеПараметры);
	
КонецПроцедуры

#КонецОбласти
