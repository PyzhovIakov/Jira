
#Область СлужебныйПрограммныйИнтерфейс

// Возможность дополнить структуру РеквизитыПроверкиКонтрагентов для формы справочника. 
//
// Параметры:
//  Форма  - УправляемаяФорма - форма, для которой дополняется структура РеквизитыПроверкиКонтрагентов.
//  НовыеРеквизиты  - Структура - структура, которая транслируется в реквизит формы РеквизитыПроверкиКонтрагентов.
//
Процедура ДополнитьРеквизитыФормыКонтрагент(Форма, НовыеРеквизиты) Экспорт
	
	Если CRM_Модуль_РаботаСКонтрагентамиКлиентСервер.CRM_ЭтоФормаПартнераКакКонтрагента(Форма) Тогда
		НовыеРеквизиты.ЮрФизЛицо = Форма.ЮрФизЛицо;
		Если НовыеРеквизиты.ПроверкаИспользуется Тогда
			НовыеРеквизиты.ЮрФизЛицо                 = Форма.ЮрФизЛицо;
			НовыеРеквизиты.ЭтоЮридическоеЛицо        = (Форма.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо") 
			                                                            Или  Форма.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицоНеРезидент"));
			НовыеРеквизиты.ЭтоИностранныйКонтрагент  = (Форма.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицоНеРезидент"));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДополнитьРеквизитыФормыДляСозданияКонтрагента(Форма) Экспорт
	
	ДобавитьСоглашение = (Форма.ИмяФормы = "Обработка.CRM_МастерРегистрацииОбращения.Форма.ФормаНовая");
	
	ДобавляемыеРеквизиты = Новый Массив();
	
	Реквизит = Новый РеквизитФормы("Контрагент_Объект", Новый ОписаниеТипов("СправочникОбъект.Контрагенты"));
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	Если ДобавитьСоглашение Тогда
		Реквизит = Новый РеквизитФормы("Соглашение", Новый ОписаниеТипов("СправочникСсылка.СоглашенияСКлиентами"));
		ДобавляемыеРеквизиты.Добавить(Реквизит);
	КонецЕсли;
		
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	ЦветРамки = Новый Цвет(221, 221, 221);
	
	Если ДобавитьСоглашение Тогда
		Элемент = Форма.Элементы.Найти("Соглашение");
		Если Элемент = Неопределено Тогда
			Элемент = Форма.Элементы.Вставить("Соглашение", Тип("ПолеФормы"),
				Форма.Элементы.Найти("ГруппаРеквизитыИнтересаПравая"), Форма.Элементы.Найти("РольВИнтересе"));
			Элемент.ПутьКДанным = "Интерес.Соглашение";
			Элемент.Вид = ВидПоляФормы.ПолеВвода;
			Элемент.Видимость = Ложь;
			
			НоваяСвязь = Новый СвязьПараметраВыбора("Партнер", "Интерес.Партнер");
			МассивСвязей = Новый Массив();
			МассивСвязей.Добавить(НоваяСвязь);
			Элемент.СвязиПараметровВыбора = Новый ФиксированныйМассив(МассивСвязей);
			
			Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_СоглашениеПриИзменении");
		КонецЕсли;

		Элемент = Форма.Элементы.Найти("СоглашениеТовары");
		Если Элемент = Неопределено Тогда
			Элемент = Форма.Элементы.Вставить("СоглашениеТовары", Тип("ПолеФормы"),
				Форма.Элементы.Найти("ГруппаКоммерческиеУсловия2"), Форма.Элементы.Найти("ГруппаСкладДоп"));
			Элемент.ПутьКДанным = "Интерес.Соглашение";
			Элемент.Вид = ВидПоляФормы.ПолеВвода;
			Элемент.Видимость = Ложь;
			
			НоваяСвязь = Новый СвязьПараметраВыбора("Партнер", "Интерес.Партнер");
			МассивСвязей = Новый Массив();
			МассивСвязей.Добавить(НоваяСвязь);
			Элемент.СвязиПараметровВыбора = Новый ФиксированныйМассив(МассивСвязей);
			
			Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_СоглашениеПриИзменении");
		КонецЕсли;

		Элемент = Форма.Элементы.Найти("Склад");
		Если Элемент = Неопределено Тогда
			Элемент = Форма.Элементы.Вставить("Склад", Тип("ПолеФормы"),
				Форма.Элементы.Найти("ГруппаКоммерческиеУсловия2"), Форма.Элементы.Найти("ГруппаСкладДоп"));
			Элемент.ПутьКДанным = "Интерес.Склад";
			Элемент.Вид = ВидПоляФормы.ПолеВвода;
			Элемент.Видимость = Истина;
			
			Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_СкладПриИзменении");
		КонецЕсли;

		Элемент = Форма.Элементы.Найти("НалогообложениеНДС");
		Если Элемент = Неопределено Тогда
			Элемент = Форма.Элементы.Добавить("НалогообложениеНДС", Тип("ПолеФормы"),
				Форма.Элементы.Найти("ГруппаНалогообложение"));
			Элемент.ПутьКДанным = "Интерес.НалогообложениеНДС";
			Элемент.Вид = ВидПоляФормы.ПолеВвода;
			Элемент.Видимость = Истина;
			Элемент.РежимВыбораИзСписка = Истина;
			
			Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_НалогообложениеНДСПриИзменении");
			
			Элемент.СписокВыбора.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
			Элемент.СписокВыбора.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
			Элемент.СписокВыбора.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
			Элемент.СписокВыбора.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		КонецЕсли;
	КонецЕсли;
	
	Элемент = Форма.Элементы.Найти("Контрагент_ОбъектЮрФизЛицо");
	Если Элемент = Неопределено Тогда
		Элемент = Форма.Элементы.Вставить("Контрагент_ОбъектЮрФизЛицо", Тип("ПолеФормы"),
			Форма.Элементы.Найти("ГруппаРеквизитыКлиентаПравая"), Форма.Элементы.Найти("Клиент_ОбъектРодитель"));
		Элемент.ПутьКДанным = "Контрагент_Объект.ЮрФизЛицо";
		Элемент.Вид = ВидПоляФормы.ПолеВвода;
		Элемент.РежимВыбораИзСписка = Истина;
		Элемент.СписокВыбора.Добавить(Перечисления.ЮрФизЛицо.ЮрЛицо);
		Элемент.СписокВыбора.Добавить(Перечисления.ЮрФизЛицо.ЮрЛицоНеРезидент);
		Элемент.СписокВыбора.Добавить(Перечисления.ЮрФизЛицо.ИндивидуальныйПредприниматель);
		Элемент.ЦветРамки = ЦветРамки;
		Элемент.Заголовок = НСтр("ru = 'Вид контрагента'");
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьГруппыДоступаПартнеров") Тогда
		Элемент = Форма.Элементы.Найти("Клиент_ОбъектГруппаДоступа");
		Если Элемент = Неопределено Тогда
			Элемент = Форма.Элементы.Вставить("Клиент_ОбъектГруппаДоступа", Тип("ПолеФормы"),
				Форма.Элементы.Найти("ГруппаРеквизитыКлиентаПравая"), Форма.Элементы.Найти("Клиент_ОбъектРодитель"));
			Элемент.ПутьКДанным = "Клиент_Объект.ГруппаДоступа";
			Элемент.Вид = ВидПоляФормы.ПолеВвода;
			Элемент.ЦветРамки = ЦветРамки;
		КонецЕсли;
	КонецЕсли;
	
	Элемент = Форма.Элементы.Найти("Клиент_ОбъектCRM_КодПоОКПО");
	Если Элемент = Неопределено Тогда
		Элемент = Форма.Элементы.Добавить("Клиент_ОбъектCRM_КодПоОКПО", Тип("ПолеФормы"), Форма.Элементы.Найти("ГруппаКлиентИНН"));
		Элемент.ПутьКДанным = "Контрагент_Объект.КодПоОКПО";
		Элемент.Вид = ВидПоляФормы.ПолеВвода;
		Элемент.ЦветРамки = ЦветРамки;
	КонецЕсли;

	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "Валюта") Тогда
		Форма.Валюта = Константы.ВалютаУправленческогоУчета.Получить();
	КонецЕсли;

КонецПроцедуры

Процедура СоздатьКонтрагентаПриСозданииПартнера(Форма, Партнер) Экспорт
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "Контрагент_Объект") Тогда
	
		ОбъектКонтрагент						= Форма.РеквизитФормыВЗначение("Контрагент_Объект");
		ОбъектКонтрагент.Партнер				= Партнер.Ссылка;
		ОбъектКонтрагент.Наименование			= Партнер.Наименование;
		НаименованиеСокращенное = Форма.CRM_Контрагент_НаименованиеСокращенное;
		ОбъектКонтрагент.НаименованиеПолное		= ?(ЗначениеЗаполнено(НаименованиеСокращенное), 
		НаименованиеСокращенное, Партнер.НаименованиеПолное);
		
		ОбъектКонтрагент["ИНН"] = Форма.Клиент_ИНН;
		ОбъектКонтрагент["КПП"] = Форма.Клиент_КПП;
		ОбъектКонтрагент["РегистрационныйНомер"] = Форма.Клиент_ОГРН;
		
		Для Каждого Стр Из Партнер.КонтактнаяИнформация Цикл
			Если Стр.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес Тогда
				УправлениеКонтактнойИнформацией.ЗаписатьКонтактнуюИнформацию(ОбъектКонтрагент, Стр.Значение, Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента, Перечисления.ТипыКонтактнойИнформации.Адрес);
				УправлениеКонтактнойИнформацией.ЗаписатьКонтактнуюИнформацию(ОбъектКонтрагент, Стр.Значение, Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента, Перечисления.ТипыКонтактнойИнформации.Адрес);
			КонецЕсли;
		КонецЦикла;
			
		Попытка
			ОбъектКонтрагент.Записать();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ЮрФизЛицоПриИзменении(Форма) Экспорт
	
	Если Форма.Клиент_Объект.ЮрФизЛицо = Перечисления.КомпанияЧастноеЛицо.ЧастноеЛицо Тогда
		Форма.Контрагент_Объект.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо;
		Форма.Элементы.Контрагент_ОбъектЮрФизЛицо.Видимость = Ложь;
	Иначе
		Форма.Контрагент_Объект.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо;
		Форма.Элементы.Контрагент_ОбъектЮрФизЛицо.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеКонтрагента(Форма, Отказ) Экспорт
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "Клиент_Объект") Тогда
		Если ПолучитьФункциональнуюОпцию("ИспользоватьГруппыДоступаПартнеров") И НЕ ЗначениеЗаполнено(Форма.Клиент_Объект.ГруппаДоступа) Тогда
			ТекстСообщения = НСтр("ru='Не заполнена группа доступа клиента'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,, "Клиент_Объект.ГруппаДоступа",, Отказ);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры// ПроверитьЗаполнениеКонтрагента(Форма, Отказ) Экспорт

#КонецОбласти // СлужебныйПрограммныйИнтерфейс
