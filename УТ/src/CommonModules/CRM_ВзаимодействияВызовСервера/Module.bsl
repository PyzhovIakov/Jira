
#Область ПрограммныйИнтерфейс

#Область Новые

// Получает настройку пользователя работы с почтой.
// 
// Возвращаемое значение:
//   - Структура
//
Функция ПолучитьНастройкуРаботаСПочтой() Экспорт
	
	Возврат Взаимодействия.НастройкиРаботыСПочтой();
	
КонецФункции // ПолучитьНастройкуРаботаСПочтой()

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Новые

Функция ПроверитьВозможностьЗагрузкиВложения(ИмяФайла, Размер, Расширение) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("Ошибка", Ложь);
	Результат.Вставить("ОписаниеОшибки", "");
	
	ОбщиеНастройки = РаботаСФайламиСлужебныйПовтИсп.НастройкиРаботыСФайлами().ОбщиеНастройки;
	
	// Размер файла слишком большой.
	Если Размер > ОбщиеНастройки.МаксимальныйРазмерФайла Тогда
		
		РазмерВМб     = Размер / (1024 * 1024);
		РазмерВМбМакс = ОбщиеНастройки.МаксимальныйРазмерФайла / (1024 * 1024);
		
		ОписаниеОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Размер файла ""%1"" (%2 Мб) превышает максимально допустимый размер файла (%3 Мб).'"),
			ИмяФайла,
			РаботаСФайламиСлужебныйКлиентСервер.ПредставлениеРазмераФайла(РазмерВМб),
			РаботаСФайламиСлужебныйКлиентСервер.ПредставлениеРазмераФайла(РазмерВМбМакс));
		
		Результат.Ошибка = Истина;
		Результат.ОписаниеОшибки = ОписаниеОшибки;
		Возврат Результат;
		
	ИначеЕсли Размер = 0 Тогда
		
		ОписаниеОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Размер файла ""%1"" (%2 байт). Невозможно загрузить пустой файл.'"),
			ИмяФайла, 0);
		
		Результат.Ошибка = Истина;
		Результат.ОписаниеОшибки = ОписаниеОшибки;
		Возврат Результат;
		
	КонецЕсли;
	
	// Проверка расширения файла.
	Если Не РаботаСФайламиСлужебный.ПроверитьРасширениеФайлаДляЗагрузки(Расширение, Ложь) Тогда
		
		ОписаниеОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Загрузка файлов с расширением ""%1"" запрещена (""%2""). Обратитесь к администратору.'"),
			Расширение,
			ИмяФайла);
		
		Результат.Ошибка = Истина;
		Результат.ОписаниеОшибки = ОписаниеОшибки;
		Возврат Результат;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции	

Процедура УстановитьПапкуЭлектронногоПисьма(Ссылка, Папка, РассчитыватьРассмотрено = Истина) Экспорт
	
	Взаимодействия.УстановитьПапкуЭлектронногоПисьма(Ссылка, Папка, РассчитыватьРассмотрено);
	
КонецПроцедуры

Функция ПолучитьМассивEmail(Контакт) Экспорт
	МассивEmail = Новый Массив;
	Для Каждого ЭлементКИ Из Контакт.КонтактнаяИнформация Цикл
		Если ЭлементКИ.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
			СтруктураКИ = Новый Структура;
			СтруктураКИ.Вставить("Значение",		ЭлементКИ.Представление); 
			СтруктураКИ.Вставить("Представление",	ЭлементКИ.Вид.Наименование + ": " + ЭлементКИ.Представление);
			СтруктураКИ.Вставить("Контакт", Контакт);
			Если ЭлементКИ.CRM_ОсновнойДляСвязи Тогда
				МассивEmail.Вставить(0, СтруктураКИ);
			Иначе
				МассивEmail.Добавить(СтруктураКИ);
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
	Возврат МассивEmail;
КонецФункции

Функция сфпПолучитьМассивТелефонов(МассивКонтактов) Экспорт
	МассивТелефонов = Новый Массив;
	Для Каждого ЭлементМассива Из МассивКонтактов Цикл
		Если ТипЗнч(ЭлементМассива) = Тип("СправочникСсылка.Партнеры") Тогда
			ИмяОбъекта = Нстр("ru='Клиент';en='Customer'");
		ИначеЕсли ТипЗнч(ЭлементМассива) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
			ИмяОбъекта = Нстр("ru='Контактное лицо';en='Contact Person'");
		ИначеЕсли ТипЗнч(ЭлементМассива) = Тип("СправочникСсылка.CRM_ПотенциальныеКлиенты") Тогда
			ИмяОбъекта = Нстр("ru='Потенциальный клиент';en='Potential Customer'");			
		КонецЕсли;			
		Для Каждого ЭлементКИ Из ЭлементМассива.КонтактнаяИнформация Цикл
			Если ЭлементКИ.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
				СтруктураКИ = Новый Структура;
				СтруктураКИ.Вставить("Значение",		ЭлементКИ.Представление); 
				СтруктураКИ.Вставить("Представление",	ЭлементКИ.Вид.Наименование + ": " + ЭлементКИ.Представление + " (" + ЭлементМассива.Наименование + " <" + ИмяОбъекта 
					+ ">" 
					+ ")");
				Если ЭлементКИ.CRM_ОсновнойДляСвязи Тогда
					МассивТелефонов.Вставить(0, СтруктураКИ);
				Иначе
					МассивТелефонов.Добавить(СтруктураКИ);
				КонецЕсли;
			КонецЕсли;	
		КонецЦикла;
	КонецЦикла;	
	Возврат МассивТелефонов;
КонецФункции

Функция ПоместитьКартинкуВоВременноеХранилище(Знач ДвоичныеДанные, Знач УникальныйИдентификатор) Экспорт
	
	Картинка = Новый Картинка(ДвоичныеДанные);
	АдресВХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификатор);
	
	Результат = Новый Структура;
	Результат.Вставить("Расширение", "." + НРег(Строка(Картинка.Формат())));
	Результат.Вставить("Размер", ДвоичныеДанные.Размер());
	Результат.Вставить("АдресВХранилище", АдресВХранилище);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Измененные

Функция ОтправитьПолучитьПочтуПользователяВФоне(УникальныйИдентификатор, УчетныеЗаписиПользователя) Экспорт
	
	// +CRM
	// Если Взаимодействия.ФоновоеЗаданиеПолучениеОтправкаПочтыВыполняется() Тогда
	Если CRM_Взаимодействия.ФоновоеЗаданиеПолучениеОтправкаПочтыВыполняется(УчетныеЗаписиПользователя) Тогда
	// -CRM
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Отправка и получение почты уже выполняется. Пожалуйста, подождите...'"));
		Возврат Неопределено;
	КонецЕсли;
	
	ПараметрыПроцедуры = Новый Структура;
	// +CRM
	ПараметрыПроцедуры.Вставить("УчетныеЗаписиПотока", УчетныеЗаписиПользователя);
	// -CRM
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Получение и отправка электронной почты пользователя'");
	
	// +CRM
	//ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне("УправлениеЭлектроннойПочтой.ОтправитьЗагрузитьПочтуПользователя",
		//
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне("CRM_УправлениеЭлектроннойПочтой.ОтправитьЗагрузитьПочтуПользователя",
	// -CRM
		ПараметрыПроцедуры,	ПараметрыВыполнения);
	Возврат ДлительнаяОперация;
	
КонецФункции

#КонецОбласти

#КонецОбласти
