
////////////////////////////////////////////////////////////////////////////////
// Управление доступом вызов сервера
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ УПРАВЛЕНИЯ ДОСТУПОМ

// Функция проверяет, есть ли доступ к контактной информации клиента у переданного пользователя.
//
// Параметры:
//	Клиент						- СправочникСсылка	- Клиент, владелец контакта.
//	Пользователь				- СправочникСсылка	- Пользователь, права которого проверяются.
//	ПроверятьВверхПоИерархии	- Булево			- Признак проверки пользователей вышестоящих подразделений.
//
// Возвращаемое значение:
//	Булево	- Наличие прав доступа к контактной информации.
//
Функция ЕстьДоступУровняАккаунтМенеджера(Клиент, Знач Пользователь = Неопределено,
	 ПроверятьВверхПоИерархии = Истина) Экспорт
	
	// Если не заполнен клиент, то нет управления защитой.
	Если НЕ ЗначениеЗаполнено(Клиент) Тогда
		Возврат Истина;
	КонецЕсли;
	
	// У пользователей с полными правами всегда есть доступ уровня аккаунт менеджера.
	Если РольДоступна("ПолныеПрава") Тогда
		Возврат Истина;
	КонецЕсли;
	
	// Если пользователь не указан, то проверяем текущего пользователя.
	Если Пользователь = Неопределено Тогда
		Пользователь = Пользователи.АвторизованныйПользователь();
	КонецЕсли;
	АккаунтМенеджер = Клиент.ОсновнойМенеджер;
	Если НЕ ЗначениеЗаполнено(АккаунтМенеджер) Тогда
		Возврат Истина;
	КонецЕсли;
	// Если пользователь не является пользователе БД - даем доступ всем.
	Если НЕ ЗначениеЗаполнено(АккаунтМенеджер.ИдентификаторПользователяИБ) Тогда
		Возврат Истина;
	КонецЕсли;
	// Если текущий пользователь является аккаунт-менеджером, то есть права доступа.
	Если Пользователь = АккаунтМенеджер Тогда
		Возврат Истина;
	КонецЕсли;
	// Проверяем, является ли пользователь руководителем в одном из вышестоящих подразделений или подразделении
	// аккаунт-менеджера.
	МассивРуководителей = CRM_УправлениеДоступомПовтИсп.ПолучитьРуководителейПользователя(АккаунтМенеджер);
	Если НЕ (МассивРуководителей.Найти(Пользователь) = Неопределено) Тогда
		Возврат Истина;
	КонецЕсли;
	// Проверяем,входит ли пользователь в одно из вышестоящих подразделений.
	МассивПользователей = CRM_УправлениеДоступомПовтИсп.ПолучитьПользователейВышестоящихПодразделений(АккаунтМенеджер);
	Если НЕ (МассивПользователей.Найти(Пользователь) = Неопределено) Тогда
		Возврат Истина;
	КонецЕсли;
	// Если не сработало ни одно условие.
	Возврат Ложь;
КонецФункции // ЕстьДоступУровняАккаунтМенеджера()

// Функция возвращает аккаунт-менеджера для переданного контакта.
//
// Параметры:
//	Контакт	- СправочникСсылка	- Клиент или контакт, для которого возвращается аккаунт-менеджер.
//
// Возвращаемое значение:
//	СправочникСсылка	- Аккаунт-менеджер
//
Функция ПолучитьАккаунтМенеджера(Контакт) Экспорт
	Если ТипЗнч(Контакт) = Тип("СправочникСсылка.Партнеры") Тогда
		Возврат Контакт.ОсновнойМенеджер;
	ИначеЕсли ТипЗнч(Контакт) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
		Возврат Контакт.Владелец.ОсновнойМенеджер;
	Иначе
		Возврат Справочники.Пользователи.ПустаяСсылка();
	КонецЕсли;	
КонецФункции // ПолучитьАккаунтМенеджера()

#КонецОбласти
