////////////////////////////////////////////////////////////////////////////////
// Лицензирование экспортные методы
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Процедура записывает признак использования подсистемы CRM.
//
// Параметры:
//  ИспользоватьCRM - булево, признак использования подсистемы CRM
//
Процедура УстановитьИспользованиеCRM(ИспользоватьCRM) Экспорт
	CRM_ЛицензированиеСервер.УстановитьИспользованиеCRM(ИспользоватьCRM);
КонецПроцедуры // УстановитьИспользованиеCRM()

// Переопределение параметров серий ключей защиты, определенных в конфигураци для всех подсистем CRM.
//
// Параметры:
//  СерииКлючейКонфигурации - Соответствие - Соответствие параметров подключения
//											сериям ключей защиты
//
Процедура ПереопределитьСерииКлючейКонфигурацииОбщий(СерииКлючейКонфигурации) Экспорт
	
	CRM_ЛицензированиеСервер.ПереопределитьСерииКлючейКонфигурации(СерииКлючейКонфигурации);
	
	// +СофтФон
	сфпЛицензированиеЭкспортныеМетоды.ПереопределитьСерииКлючейКонфигурации(СерииКлючейКонфигурации);
	// -СофтФон
	
КонецПроцедуры // ПолучитьСерииКлючейКонфигурации()

// Процедура возвращает основной вариант поставки конфигурации.
//
// Возвращаемое значение:
//  ПеречислениеСсылка.CRM_ВариантыПоставки - основной вариант поставки конфигурации.
//
Функция ПолучитьОсновнойВариантПоставки() Экспорт
	Возврат CRM_ЛицензированиеСервер.ПолучитьОсновнойВариантПоставки();
КонецФункции

// Функция возвращает текущий вариант поставки конфигурации для пользователя.
//
// Возвращаемое значение:
//	ПеречислениеСсылкаCRM_ВариантыПоставки - текущий вариант поставки конфигурации для пользователя.
//
Функция ПолучитьВариантПоставкиПользователя() Экспорт
	Возврат CRM_ЛицензированиеСервер.ПолучитьВариантПоставкиПользователя();
КонецФункции

// Функция возвращает признак использования данного варианта поставки.
//
// Возвращаемое значение:
//	Булево - признак использования данного варианта поставки.
//
Функция ВариантПоставкиСТАРТ() Экспорт
	Возврат CRM_ЛицензированиеСервер.ВариантПоставкиСТАРТ();
КонецФункции

// Функция возвращает признак использования данного варианта поставки.
//
// Возвращаемое значение:
//	Булево - признак использования данного варианта поставки.
//
Функция ВариантПоставкиПРОФ() Экспорт
	Возврат CRM_ЛицензированиеСервер.ВариантПоставкиПРОФ();
КонецФункции

// Функция возвращает признак использования данного варианта поставки.
//
// Возвращаемое значение:
//	Булево - признак использования данного варианта поставки.
//
Функция ВариантПоставкиКОРП() Экспорт
	Возврат CRM_ЛицензированиеСервер.ВариантПоставкиКОРП();
КонецФункции

// Функция возвращает признак использования данного варианта поставки.
//
// Возвращаемое значение:
//	Булево - признак использования данного варианта поставки.
//
Функция ВариантПоставкиБазовая() Экспорт
	Возврат CRM_ЛицензированиеСервер.ВариантПоставкиБазовая();
КонецФункции

// Функция возвращает признак использования данного варианта поставки.
//
// Возвращаемое значение:
//	Булево - признак использования данного варианта поставки.
//
Функция ВариантПоставкиСтандарт() Экспорт
	Возврат CRM_ЛицензированиеСервер.ВариантПоставкиСтандарт();
КонецФункции

// Функция возвращает признак использования данного варианта поставки.
//
// Возвращаемое значение:
//	Булево - признак использования данного варианта поставки.
//
Функция ВариантПоставкиСтартИлиСтандарт() Экспорт
	Возврат CRM_ЛицензированиеСервер.ВариантПоставкиСтартИлиСтандарт();
КонецФункции

// Функция создает и инициализирует защищенную обработку. В дальнейшем, в течении
//  сеанса, значение будет закешировано, и вызов будет возвращать тот же
//  экземпляр обработки
//  ИмяОбработки - строка с именем защищенной обработки
//  параметра лицензирования будет совпадать или превышать переданную в этом параметре
//  ОписаниеОшибки - возвращаемый параметр, содержит описание результата операции
//
// Параметры:
//  ВыводитьОшибки	 - Булево - Выводить ошибки.
//  ДляМобильногоКлиента 	 - Булево	 - Признак мобильного клиента
// 
// Возвращаемое значение:
//  ВнешняяОбработка - Созданная обработка.
//
Функция ПолучитьЗащищеннуюОбработкуКеш(ВыводитьОшибки = Истина, ДляМобильногоКлиента = Ложь) Экспорт
	Возврат CRM_ЛицензированиеСервер.ПолучитьЗащищеннуюОбработкуКеш(ВыводитьОшибки, ДляМобильногоКлиента);
КонецФункции // ПолучитьЗащищеннуюОбработкуКеш

// Функция создает и инициализирует защищенную обработку. В дальнейшем, в течении
//  сеанса, значение будет закешировано, и вызов будет возвращать тот же
//  экземпляр обработки
//  ИмяОбработки - строка с именем защищенной обработки
//  параметра лицензирования будет совпадать или превышать переданную в этом параметре
//  ОписаниеОшибки - возвращаемый параметр, содержит описание результата операции
//
// Параметры:
//  ВыводитьОшибки	 - Булево - Выводить ошибки.
//  ДляМобильногоКлиента 	 - Булево	 - Признак мобильного клиента
// 
// Возвращаемое значение:
//  ВнешняяОбработка - Созданная обработка.
//
Функция ПолучитьЗащищеннуюОбработку(ВыводитьОшибки = Истина, ДляМобильногоКлиента = Ложь) Экспорт
	Возврат CRM_ЛицензированиеСервер.ПолучитьЗащищеннуюОбработку(ВыводитьОшибки, ДляМобильногоКлиента);
КонецФункции // ПолучитьЗащищеннуюОбработку

// Функция возвращает признак использования подсистемы CRM.
//
// Возвращаемое значение:
//	Булево - признак использования подсистемы CRM.
//
Функция ПодсистемаCRMИспользуется() Экспорт
	Возврат CRM_ЛицензированиеСервер.ПодсистемаCRMИспользуется();
КонецФункции// ПодсистемаCRMИспользуется()

// Процедура записывает вариант поставки подсистемы CRM.
//
Процедура УстановитьВариантПоставки() Экспорт
	CRM_ЛицензированиеСервер.УстановитьВариантПоставки();
КонецПроцедуры // УстановитьВариантПоставки()

// Возвращает признак:текущая конфигурация является типовой от 1С или нет
// 
// Возвращаемое значение:
//  Булево - признак что тек. конфигурация - "типовая"
//
Функция ЭтоТиповаяКонфигурация() Экспорт
	Возврат CRM_ЛицензированиеСервер.ЭтоТиповаяКонфигурация();
КонецФункции

// Функция возвращает серию ключа продукта
//  Режим - Число - 0: просто строка с серией, 1, серия и только ключ (1/0)
//
// Параметры:
//  Режим	 - Число - 0: просто строка с серией, 1, серия и только ключ (1/0)
// 
// Возвращаемое значение:
//  Строка - Серия ключа.
//
Функция ПолучитьСтрокуСерииКлючейМодульCRM(Режим = 0) Экспорт
	Возврат CRM_ЛицензированиеСервер.ПолучитьСтрокуСерииКлючейМодульCRM(Режим);
КонецФункции

// Функция возвращает признак использования рабочего стола CRM.
//
// Возвращаемое значение:
//	Булево - признак использования рабочего стола CRM.
//
Функция РабочийСтолCRMИспользуется() Экспорт
	Возврат CRM_ЛицензированиеСервер.РабочийСтолCRMИспользуется();
КонецФункции// ПодсистемаCRMИспользуется()

// Возвращает соответствие имен параметров сеанса и обработчиков для их инициализации.
//
// Параметры:
//  Обработчики	 - Структура - Структура с обработчиками. 
//
Процедура ПриДобавленииОбработчиковУстановкиПараметровСеанса(Обработчики) Экспорт
	CRM_ЛицензированиеСервер.ПриДобавленииОбработчиковУстановкиПараметровСеанса(Обработчики);
КонецПроцедуры // ПриДобавленииОбработчиковУстановкиПараметровСеанса()

// Процедура освобождает текущую лицензию СЛК
//
Процедура ОсвободитьТекущуюЛицензию() Экспорт
	CRM_ЛицензированиеСервер.ОсвободитьТекущуюЛицензию();
КонецПроцедуры // ОсвободитьТекущуюЛицензию()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановкаПараметровСеанса(Знач ИмяПараметра, УстановленныеПараметры) Экспорт
	CRM_ЛицензированиеСервер.УстановкаПараметровСеанса(ИмяПараметра, УстановленныеПараметры);
КонецПроцедуры // УстановкаПараметровСеанса()

// Обработчик подписки на событие CRM_Модуль_ПриЗаписиКонстантыОсновнойВариантПоставки.
//
Процедура ПриЗаписиКонстантыОсновнойВариантПоставки(Источник, Отказ) Экспорт
	CRM_ЛицензированиеСервер.ПриЗаписиКонстантыОсновнойВариантПоставки(Источник, Отказ);
КонецПроцедуры // ПриЗаписиКонстантыОсновнойВариантПоставки()

// Для переопределения результатов функции УстановкаПараметровСеанса
// менеджера защиты СЛК для всех подсистем CRM.
//
// Параметры:
//	УстановленныеПараметры - Массив имен установленных параметров сеанса
//  ИменаПараметровСеанса - Массив, Неопределено - в массиве имена параметров
//							сеанса для инициализации.
//
Процедура ПереопределитьПараметрыСеансаОбщий(УстановленныеПараметры, Знач ИменаПараметровСеанса) Экспорт
	
	CRM_ЛицензированиеСервер.ПереопределитьПараметрыСеанса(УстановленныеПараметры, ИменаПараметровСеанса);
	
КонецПроцедуры

// Извлечение имени класса исключения из описания ошибки
Функция ПолучитьКлассИсключения(ОписаниеОшибки) Экспорт
	Возврат CRM_ЛицензированиеСервер.ПолучитьКлассИсключения(ОписаниеОшибки);
КонецФункции

Функция ПроверитьПодключениеКОтраслевымСервисам(ОписаниеОшибки) Экспорт
	
	Возврат ПолучитьЗащищеннуюОбработку().ПодключениеКОтраслевымСервисамДоступно(ОписаниеОшибки);
	
КонецФункции

Процедура ВывестиУведомлениеОНедоступности(ИмяОбъекта = "") Экспорт
	
	 ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Невозможно открыть'") + " "
	+ ИмяОбъекта + НСтр("ru = '. Подсистема 1С:CRM не используется! (отключено в Персональных настройках)'"));

КонецПроцедуры // ВывестиУведомлениеОНедоступности()

#КонецОбласти
