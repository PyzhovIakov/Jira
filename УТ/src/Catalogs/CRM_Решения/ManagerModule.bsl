#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов
//  Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки	 - Структура - настройки подсистемы.
//
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Обрабатывает текст HTML для помещения в форматированный документ.
//
// Параметры:
//  Письмо  - ДокументСсылка.ЭлектронноеПисьмоВходящее,
//            ДокументСсылка.ЭлектронноеПисьмоИсходящее - письмо для которого будет проведена оценка.
//  ТекстHTML - Строка - обрабатываемый текст HTML.
//  СтруктураВложений - Структура - структура в которую помещаются картинки - вложения письма.
//
// Возвращаемое значение:
//   Число   - оценка размера письма в байтах.
//
Функция ОбработатьТекстHTMLДляФорматированногоДокумента(Письмо, ТекстHTML, СтруктураВложений) Экспорт
	
	Если Не ПустаяСтрока(ТекстHTML) Тогда
		
		ДокументHTML = Взаимодействия.ПолучитьОбъектДокументHTMLИзТекстаHTML(ТекстHTML);
		
		ТаблицаФайлов = Взаимодействия.ПолучитьВложенияПисьмаСНеПустымИД(Письмо);
		
		Если ТаблицаФайлов.Количество() Тогда
			
			Для каждого ПрисоединенныйФайл Из ТаблицаФайлов Цикл
				
				Для каждого Картинка Из ДокументHTML.Картинки Цикл
					
					АтрибутИсточникКартинки = Картинка.Атрибуты.ПолучитьИменованныйЭлемент("src");
					
					Если АтрибутИсточникКартинки.Значение = "cid:" + ПрисоединенныйФайл.ИДФайлаЭлектронногоПисьма Тогда
						
						Попытка
							
							СтруктураВложений.Вставить(
								ПрисоединенныйФайл.Наименование,
								Новый Картинка(ПолучитьИзВременногоХранилища(
									РаботаСФайлами.ДанныеФайла(ПрисоединенныйФайл.Ссылка).СсылкаНаДвоичныеДанныеФайла)));
									
							НовыйАтрибутКартинки = АтрибутИсточникКартинки.КлонироватьУзел(Ложь);
							НовыйАтрибутКартинки.ТекстовоеСодержимое = ПрисоединенныйФайл.Наименование;
							Картинка.Атрибуты.УстановитьИменованныйЭлемент(НовыйАтрибутКартинки);
							
							Прервать;
						Исключение
							Продолжить;
						КонецПопытки;
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
			Возврат Взаимодействия.ПолучитьТекстHTMLИзОбъектаДокументHTML(ДокументHTML);
			
		Иначе
			
			Возврат ТекстHTML;
			
		КонецЕсли;
		
	Иначе
		
		Возврат ТекстHTML;
		
	КонецЕсли;
	
КонецФункции

// Функция возвращает вложения для форматированного документа.
//
// Параметры:
//  Письмо            - ДокументСсылка.ЭлектронноеПисьмоВходящее,
//                    - ДокументСсылка.ЭлектронноеПисьмоИсходящее - письмо для которого будет проведена оценка.
//  ТекстHTML         - Строка	 - обрабатываемый текст HTML.
//  СтруктураВложений - Структура - структура в которую помещаются картинки - вложения письма.
// 
// Возвращаемое значение:
//   - Строка
//
Функция ПолучитьВложенияДляФорматированногоДокумента(Письмо, ТекстHTML, СтруктураВложений) Экспорт
	
	Если Не ПустаяСтрока(ТекстHTML) Тогда
		
		ДокументHTML = Взаимодействия.ПолучитьОбъектДокументHTMLИзТекстаHTML(ТекстHTML);
		
		ТаблицаФайлов = Взаимодействия.ПолучитьВложенияПисьмаСНеПустымИД(Письмо);
		
		Если ТаблицаФайлов.Количество() Тогда
			
			Для каждого ПрисоединенныйФайл Из ТаблицаФайлов Цикл
				
				Для каждого Картинка Из ДокументHTML.Картинки Цикл
					
					АтрибутИсточникКартинки = Картинка.Атрибуты.ПолучитьИменованныйЭлемент("src");
					
					Если АтрибутИсточникКартинки.Значение = "cid:" + ПрисоединенныйФайл.ИДФайлаЭлектронногоПисьма Тогда
						
						Если Не ЭтоАдресВременногоХранилища(ПрисоединенныйФайл.Ссылка) Тогда
							СсылкаНаДанные = РаботаСФайлами.ДанныеФайла(ПрисоединенныйФайл.Ссылка).СсылкаНаДвоичныеДанныеФайла;
							Картинка = Новый Картинка(ПолучитьИзВременногоХранилища(СсылкаНаДанные));
							Попытка
								СтруктураВложений.Вставить(ПрисоединенныйФайл.Наименование, Картинка);
								Прервать;
							Исключение
								Продолжить;
							КонецПопытки;
							
						Иначе
							Попытка
							
								СтруктураВложений.Вставить(
									ПрисоединенныйФайл.Наименование,
									Новый Картинка(ПолучитьИзВременногоХранилища(
										РаботаСФайлами.ДанныеФайла(ПрисоединенныйФайл.Ссылка).СсылкаНаДвоичныеДанныеФайла)));
									
								Прервать;
							Исключение
								Продолжить;
							КонецПопытки;
						КонецЕсли;
					Иначе
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
			Возврат Взаимодействия.ПолучитьТекстHTMLИзОбъектаДокументHTML(ДокументHTML);
			
		Иначе
			
			Возврат ТекстHTML;
			
		КонецЕсли;
		
	Иначе
		
		Возврат ТекстHTML;
		
	КонецЕсли;
	
КонецФункции

// Процедура выполняет замену имен картинок на идентификаторы почтовых вложений.
//
// Параметры:
//  ДокументHTML		 - ДокументHTML		 - Документ HTML.
//  ТаблицаСоответствий	 - ТаблицаЗначений	 - Таблица соответствий.
//
Процедура ЗаменитьИменаКартинокНаИдентификаторыПочтовыхВложений(ДокументHTML, ТаблицаСоответствий) Экспорт
	
	ТаблицаСоответствий.Индексы.Добавить("ИмяФайла");
	Для каждого Картинка Из ДокументHTML.Картинки Цикл
		
		АтрибутИсточникКартинки = Картинка.Атрибуты.ПолучитьИменованныйЭлемент("src");
		
		АтрибутИсточникКартинкиПроверка = Картинка.Атрибуты.ПолучитьИменованныйЭлемент("cid-1crm");
		Если Не АтрибутИсточникКартинкиПроверка = Неопределено Тогда
			НовыйАтрибутКартинки = АтрибутИсточникКартинки.КлонироватьУзел(Ложь);
			НовыйАтрибутКартинки.ТекстовоеСодержимое = "cid:" + СтрЗаменить(АтрибутИсточникКартинкиПроверка.Значение, "-", "_");
			Картинка.Атрибуты.УстановитьИменованныйЭлемент(НовыйАтрибутКартинки);
			Продолжить;
		КонецЕсли;
		
		ИсточникКартинки = СокрЛП(АтрибутИсточникКартинки.ТекстовоеСодержимое);
		ИсточникКартинки = СтрЗаменить(ИсточникКартинки, "cid:", "");
		МассивСтрок = ТаблицаСоответствий.НайтиСтроки(Новый Структура("ИмяФайла", ИсточникКартинки));
		Если МассивСтрок.Количество() > 0 Тогда
			НовыйАтрибутКартинки = АтрибутИсточникКартинки.КлонироватьУзел(Ложь);
			НовыйАтрибутКартинки.ТекстовоеСодержимое = "cid:" + СтрЗаменить(МассивСтрок[0].ИдентификаторФайлаДляHTML, "-", "_");
			Картинка.Атрибуты.УстановитьИменованныйЭлемент(НовыйАтрибутКартинки);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
