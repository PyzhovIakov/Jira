
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ОкончаниеДня = Неопределено;
	
	Для Каждого Строка Из Объект.ПериодыРаботы Цикл
		ИндексСтроки = Объект.ПериодыРаботы.Индекс(Строка);
		Если Строка.ВремяНачала > Строка.ВремяОкончания И ЗначениеЗаполнено(Строка.ВремяОкончания) Тогда
			ОбщегоНазначения.СообщитьПользователю(
				НСтр("ru='Время начала больше времени окончания';en='Start time is greater than the end time.'"), ,
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(" Объект.ПериодыРаботы[%1].ВремяОкончания", ИндексСтроки), ,
				Отказ);
		КонецЕсли;
		Если Строка.ВремяНачала = Строка.ВремяОкончания Тогда
			ОбщегоНазначения.СообщитьПользователю(
				НСтр("ru='Длительность интервала не определена';en='Interval duration is not specified'"), ,
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(" Объект.ПериодыРаботы[%1].ВремяОкончания", ИндексСтроки), ,
				Отказ);
		КонецЕсли;
		Если ОкончаниеДня <> Неопределено Тогда
			Если ОкончаниеДня > Строка.ВремяНачала Или Не ЗначениеЗаполнено(ОкончаниеДня) Тогда
				ОбщегоНазначения.СообщитьПользователю(
					НСтр("ru='Обнаружены пересекающиеся интервалы';en='Intervals are found intersecting'"), ,
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(" Объект.ПериодыРаботы[%1].ВремяНачала", ИндексСтроки), ,
					Отказ);
			КонецЕсли;
		КонецЕсли;
		ОкончаниеДня = Строка.ВремяОкончания;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
