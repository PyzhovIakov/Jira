#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ CRM_ЛицензированиеЭкспортныеМетоды.ПодсистемаCRMИспользуется() Тогда
		CRM_ЛицензированиеЭкспортныеМетоды.ВывестиУведомлениеОНедоступности(НСтр("ru = 'Помощник ввода'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	CRM_ЛицензированиеЭкспортныеМетоды.ПолучитьЗащищеннуюОбработку().
		Справочник_CRM_ИсточникиРекламныхКампаний_ФормаПомощникВвода_ПриСозданииНаСервере(
			ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.СценарийАналитики = Перечисления.CRM_СценарииПолученияАналитики.ВнешняяОбработка; 
	КонецЕсли;
	
	РасписаниеРегламентногоЗадания = Новый РасписаниеРегламентногоЗадания();
	РасписаниеРегламентногоЗадания.ПериодПовтораДней  = 1;
	РасписаниеРегламентногоЗадания.ВремяНачала = '00010101 22:00';
	
	ДозагрузитьДанные = Истина;
	
	Объект.ДатаДозагрузки = ДобавитьМесяц(НачалоМесяца(ТекущаяДатаСеанса()), -3);
	ЗаполнитьРасписаниеЗапуска();
	
	Объект.YD_Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Элементы.ГруппаСтраницаЗапросКода.Видимость = Ложь;
	Элементы.ГруппаНовыйТокен.Видимость 		= Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимостьЭлементов();
	
	Заголовок = НСтр("ru='Новый источник аналитики...';en='New analytics source...'");
	
	УстановитьНадписьРасписанияОбмена();
	
	Объект.ПоказательВизиты = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ВыбранноеЗначение = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru ='Необходимо указать источник получения обращений'"));
		Возврат;
	КонецЕсли;
	
	Если ИсточникВыбора.ИмяФормы = "Справочник.CRM_ИсточникиПолученияЛидов.Форма.ФормаЭлемента" ИЛИ
		ИсточникВыбора.ИмяФормы = "Справочник.CRM_ИсточникиПолученияЛидов.Форма.ФормаВыбора" Тогда
		
		Объект.ИсточникиПолученияЛидов = ВыбранноеЗначение;
		
	КонецЕсли;
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаНастройкаИсточника;
	Элементы.ФормаКнопкаДалее.Заголовок = НСтр("ru='Записать и закрыть';en='Save and close'");
	Элементы.СтраницаНастройкаИсточника.Видимость = Истина;
	
	Если Объект.СценарийАналитики = ПредопределенноеЗначение("Перечисление.CRM_СценарииПолученияАналитики.GoogleAnalytics") Тогда
		
		Элементы.ГруппаЯндексДирект.Видимость = Ложь;
		Элементы.ГруппаЯндексДиректа.Видимость = Ложь;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Не ЗначениеЗаполнено(Объект.АдресРасписания) Тогда
		ЗаполнитьРасписаниеЗапуска();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Объект.СценарийАналитики = Перечисления.CRM_СценарииПолученияАналитики.ВнешняяОбработка Тогда
		Если ЗначениеЗАполнено(АдресФайла) Тогда
			ТекущийОбъект.ОбработкаДействия = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресФайла));
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура УменяЕстьТокенПриИзменении(Элемент)
	
	Если УменяЕстьТокен Тогда
		
		Если объект.СценарийАналитики = ПредопределенноеЗначение("Перечисление.CRM_СценарииПолученияАналитики.GoogleAnalytics") Тогда
			Элементы.OAuthТокен.Видимость = Истина;
			Элементы.ГруппаGoogle.Видимость = Истина;
			Элементы.Декорация_gl.Видимость = Ложь;
		Иначе
			Элементы.OAuthТокен.Видимость = Истина;
			Элементы.ГруппаGoogle.Видимость = Ложь;
		КонецЕсли;
		
	Иначе
		
		Элементы.OAuthТокен.Видимость = Ложь;
		
		Если объект.СценарийАналитики = ПредопределенноеЗначение("Перечисление.CRM_СценарииПолученияАналитики.GoogleAnalytics") Тогда
			Элементы.ГруппаGoogle.Видимость = Истина;
			Элементы.Декорация_gl.Видимость = Истина;
		Иначе
			Элементы.ГруппаGoogle.Видимость = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанныеНачинаяПриИзменении(Элемент)
	
	Если ДозагрузитьДанные Тогда
		Элементы.ДатаДозагрузки.Видимость = Истина;
	Иначе
		Элементы.ДатаДозагрузки.Видимость = Ложь;
		Объект.ДатаДозагрузки = Дата(1, 1, 1);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзмерениеПриИзменении(Элемент)
	
	Если Объект.СценарийАналитики <> ПредопределенноеЗначение("Перечисление.CRM_СценарииПолученияАналитики.ЯндексМетрика") Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект[Элемент.Имя] Тогда
		СчетчикИзмерений = 1; // Дата
		Если Объект.ПоказательРекламнаяКампания Тогда
			СчетчикИзмерений = СчетчикИзмерений + 2; // Кампания + Объявление
		КонецЕсли;
		СчетчикИзмерений = СчетчикИзмерений + Объект.ПоказательИсточникиТрафика;
		СчетчикИзмерений = СчетчикИзмерений + Объект.ПоказательГеография;
		СчетчикИзмерений = СчетчикИзмерений + Объект.ПоказательУстройства;
		СчетчикИзмерений = СчетчикИзмерений + Объект.ПоказательВремяНаСайте;
		СчетчикИзмерений = СчетчикИзмерений + Объект.ПоказательSource;
		СчетчикИзмерений = СчетчикИзмерений + Объект.ПоказательMedium;
		СчетчикИзмерений = СчетчикИзмерений + Объект.ПоказательЦелевыеДействия;
		СчетчикИзмерений = СчетчикИзмерений + Объект.ПоказательURL;
			
		Если СчетчикИзмерений > 10 Тогда
			Объект[Элемент.Имя] = Ложь;
			
			ТекстПредупреждения = НСтр("ru='Превышено количество измерений,"
"используемых в запросе к сервисам Яндекс!';en='Number of measurements exceeded"
"used in query to Yandex services!'");
			ПоказатьПредупреждение(, ТекстПредупреждения, 3);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СценарийАналитикиПриИзменении(Элемент)
	
	УстановитьВидимостьЭлементов();
	
	Если НЕ ЗначениеЗАполнено(ВыборДействия) Тогда
		ВыборДействия = 0;
		
		Если Объект.СценарийАналитики = ПредопределенноеЗначение("Перечисление.CRM_СценарииПолученияАналитики.GoogleAnalytics") Тогда
			УстановитьУсловноеОформлениеДействия();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЗакрытьФорму() Экспорт // АПК:78 - исключить из проверки.
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура КнопкаНазад(Команда)
	
	ТекСтраница = Элементы.ГруппаСтраницы.ТекущаяСтраница;
	
	Если Элементы.ФормаКнопкаДалее.Заголовок = НСтр("ru='Записать и закрыть';en='Save and close'") Тогда
		Элементы.ФормаКнопкаДалее.Заголовок = НСтр("ru='Далее'en='Next'");
	КонецЕсли;
	
	Если ТекСтраница = Элементы.СтраницаНастройкаИсточника Тогда
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаЛидогенерация;
		Элементы.СтраницаНастройкаИсточника.Видимость = Ложь;
		
	ИначеЕсли ТекСтраница = Элементы.СтраницаЛидогенерация Тогда
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаПоказатели;
		Элементы.ФормаКнопкаДалее.Доступность = Истина;
		Элементы.СтраницаЛидогенерация.Видимость = Ложь;
		
	ИначеЕсли ТекСтраница = Элементы.СтраницаПоказатели Тогда
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаВыборСценария;
		Элементы.СтраницаПоказатели.Видимость = Ложь;
		Элементы.СтраницаВыборСценария.Видимость = Истина;
		Элементы.ФормаКнопкаНазад.Доступность = Ложь;
		
	КонецЕсли;
	
	ОбновитьОтображениеДанных(Элементы.ГруппаСтраницы);
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаДалее(Команда)
	
	Если НЕ Элементы.ФормаКнопкаНазад.Доступность Тогда
		Элементы.ФормаКнопкаНазад.Доступность = Истина;
	КонецЕсли;
		
	Заголовок = НСтр("ru='Источник аналитики'") + " " + Объект.СценарийАналитики;

	Если Элементы.ФормаКнопкаДалее.Заголовок = НСтр("ru='Записать и закрыть';en='Save and close'") Тогда
		CRM_СистемаСквознойАналитикиКлиент.ЗапуститьЗагрузкуДанных(ЭтотОбъект);
		Возврат;
	КонецЕсли;
	
	ТекСтраница = Элементы.ГруппаСтраницы.ТекущаяСтраница;
	
	Если ТекСтраница = Элементы.СтраницаОсновныеНастройки Тогда
		//СоответствиеПроверки = Новый Соответствие;
		//ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки, "Объект.АдресРасписания",
			// Объект.АдресРасписания,
			// НСтр("ru='Адрес расписания'"));
		//
		//Отказ = ВыполнитьпроверкуРеквизитовПоСоответствию(СоответствиеПроверки);
		//
		// Если НЕ Отказ Тогда
		//	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаВыборСценария;
		//	Элементы.СтраницаВыборСценария.Видимость = Истина;
		//	Элементы.СтраницаОсновныеНастройки.Видимость = Ложь;
		//КонецЕсли;
		
	ИначеЕсли ТекСтраница = Элементы.СтраницаВыборСценария Тогда
		Если Объект.СценарийАналитики = ПредопределенноеЗначение("Перечисление.CRM_СценарииПолученияАналитики.ЯндексМетрика") Тогда 
			
			// В новом API токен один, пока просто копируем его
			Объект.OAuthТокен = Объект.YD_Token;
			
			СоответствиеПроверки = Новый Соответствие;
			ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки, "Объект.Наименование",
				 Объект.Наименование,
				 НСтр("ru='Наименование'"));
			ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки, "Объект.СценарийАналитики",
				 Объект.СценарийАналитики,
				 НСтр("ru='Сценарий аналитики'"));
			ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки, "Объект.YD_Login", Объект.YD_Login, НСтр("ru='Логин'"));
			ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки, "Объект.YD_Token", Объект.YD_Token, НСтр("ru='Токен'"));
			НастройкаИсточника = "0";
			
			Элементы.ПоказательРекламнаяКампания.Подсказка = СтрЗаменить(Элементы.ПоказательРекламнаяКампания.Подсказка,
				 "%1",
				 НСтр("ru='Яндекс.Аналитика'"));

			Отказ = ВыполнитьпроверкуРеквизитовПоСоответствию(СоответствиеПроверки);
			
			Если НЕ Отказ Тогда
				
				ЕстьТокенЯндексДирект = "1";
				ТестированиеСервисаДанных();
			КонецЕсли;
			
		ИначеЕсли Объект.СценарийАналитики = ПредопределенноеЗначение("Перечисление.CRM_СценарииПолученияАналитики.GoogleAnalytics") Тогда 
			Если ВыборДействия = "1" Тогда 
				СоответствиеПроверки = Новый Соответствие;
				ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки, "Объект.Наименование",
					 Объект.Наименование,
					 НСтр("ru='Наименование'"));
				ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки, "Объект.СценарийАналитики",
					 Объект.СценарийАналитики,
					 НСтр("ru='Сценарий аналитики'"));
				ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки, "Объект.OAuthТокен", Объект.OAuthТокен,
					 НСтр("ru='Токен доступа'"));
				
			ИначеЕсли ВыборДействия = "0" Тогда 
				СоответствиеПроверки = Новый Соответствие;
				ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки, "Объект.Наименование",
					 Объект.Наименование,
					 НСтр("ru='Наименование'"));
				ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки, "Объект.СценарийАналитики",
					 Объект.СценарийАналитики,
					 НСтр("ru='Сценарий аналитики'"));
				ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки, "Объект.Client_id", Объект.Client_id, "Client id");
				ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки, "Объект.Client_secret",
					 Объект.Client_secret,
					 "Client secret");
			КонецЕсли;
			
			Элементы.ПоказательРекламнаяКампания.Подсказка = СтрЗаменить(Элементы.ПоказательРекламнаяКампания.Подсказка,
				 "%1",
				 "Google Analitics");
			
		ИначеЕсли Объект.СценарийАналитики = ПредопределенноеЗначение("Перечисление.CRM_СценарииПолученияАналитики.Roistat") Тогда
			СоответствиеПроверки = Новый Соответствие;
			ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки, "Объект.Наименование",
				 Объект.Наименование,
				 НСтр("ru='Наименование'"));
			ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки, "Объект.СценарийАналитики",
				 Объект.СценарийАналитики,
				 НСтр("ru='Сценарий аналитики'"));
			ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки, "Объект.OAuthТокен", Объект.OAuthТокен,
				 НСтр("ru='API-ключ'"));

		ИначеЕсли Объект.СценарийАналитики = ПредопределенноеЗначение("Перечисление.CRM_СценарииПолученияАналитики.ВнешняяОбработка") Тогда
			СоответствиеПроверки = Новый Соответствие;
			ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки, "Объект.Наименование",
				 Объект.Наименование,
				 НСтр("ru='Наименование'"));
			ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки, "Объект.СценарийАналитики",
				 Объект.СценарийАналитики,
				 НСтр("ru='Сценарий аналитики'"));
			ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки, "Объект.НазваниеОбработки",
				 Объект.НазваниеОбработки,
				 НСтр("ru='Файл обработки'"));
		КонецЕсли;
		
		Отказ = ВыполнитьпроверкуРеквизитовПоСоответствию(СоответствиеПроверки);

		Если НЕ Отказ Тогда
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаПоказатели;
			Элементы.СтраницаПоказатели.Видимость = Истина;
			Элементы.СтраницаВыборСценария.Видимость = Ложь;
			
			НастройкаИсточника = "0";
		КонецЕсли;

	ИначеЕсли ТекСтраница = Элементы.СтраницаПоказатели Тогда
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаЛидогенерация;
		Элементы.СтраницаЛидогенерация.Видимость = Истина;
		
	ИначеЕсли ТекСтраница = Элементы.СтраницаЛидогенерация Тогда
		
		Если НастройкаИсточника = "0" Тогда
			Если КоличествоЛидовПустое() Тогда
				ПараметрыФормы = Новый Структура;
				ПараметрыФормы.Вставить("CRM_ИспользоватьCallTracking", Истина);
				
				ОткрытьФорму("Справочник.CRM_ИсточникиПолученияЛидов.Форма.ФормаЭлемента", ПараметрыФормы, ЭтотОбъект);
				
			Иначе
				ОткрытьФорму("Справочник.CRM_ИсточникиПолученияЛидов.Форма.ФормаВыбора", , ЭтотОбъект);
			КонецЕсли;

		Иначе
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаНастройкаИсточника;
			Элементы.ФормаКнопкаДалее.Заголовок = НСтр("ru='Записать и закрыть';en='Save and close'");
			Элементы.СтраницаНастройкаИсточника.Видимость = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияРасписаниеНажатие(Элемент)
	
	Если РасписаниеРегламентногоЗадания = Неопределено Тогда
		РасписаниеРегламентногоЗадания = Новый РасписаниеРегламентногоЗадания;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ИзменитьРасписаниеОбмена", ЭтотОбъект);
	
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(РасписаниеРегламентногоЗадания);
	Диалог.Показать(ОписаниеОповещения);
	
	ЗаполнитьРасписаниеЗапуска();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовШапкиФормы

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьВидимостьЭлементов()
	
	Если Объект.СценарийАналитики = ПредопределенноеЗначение("Перечисление.CRM_СценарииПолученияАналитики.ЯндексМетрика") Тогда
		
		Элементы.ГруппаЯндексДиректа.Видимость = Истина;
		Элементы.ГруппаGoogleОбщая.Видимость = Ложь;
		Элементы.ГруппаПочтовыеСообщения.Видимость = Ложь;
		Элементы.ГруппаВнешняяОбработка.Видимость = Ложь;
		Элементы.ГруппаВыбораЗначения.Видимость = Ложь;
		Элементы.ГруппаRoistat.Видимость = Ложь;
		
		Элементы.ПоказательClientID.Видимость = Истина;
		Элементы.ПоказательЦелевыеДействия.Видимость = Истина;
		Элементы.ПоказательОтказы.Видимость = Истина;
		Элементы.ПоказательГлубинаПросмотра.Видимость = Истина;
		Элементы.ПоказательВремяНаСайте.Видимость = Истина;
		
		Объект.ПоказательЯндексДирект = Истина;
		Элементы.ГруппаЯндексДирект.Видимость = Истина;
		Элементы.YD_Валюта.Видимость = Истина;
		Элементы.ГруппаТестированиеСервиса.Видимость = Истина;
		
		//ЗаполнитьПоказателиСпискаВыбора();
		
	ИначеЕсли Объект.СценарийАналитики = ПредопределенноеЗначение("Перечисление.CRM_СценарииПолученияАналитики.GoogleAnalytics") Тогда
		
		Элементы.ГруппаЯндексДиректа.Видимость = Ложь;
		Элементы.ГруппаGoogleОбщая.Видимость = Истина;
		Элементы.ГруппаПочтовыеСообщения.Видимость = Ложь;
		Элементы.ГруппаВнешняяОбработка.Видимость = Ложь;
		Элементы.ГруппаВыбораЗначения.Видимость = Истина;
		Элементы.ГруппаRoistat.Видимость = Ложь;
		
		Элементы.ПоказательClientID.Видимость = Истина;
		Элементы.ПоказательЦелевыеДействия.Видимость = Истина;
		Элементы.ПоказательОтказы.Видимость = Истина;
		Элементы.ПоказательГлубинаПросмотра.Видимость = Истина;
		Элементы.ПоказательВремяНаСайте.Видимость = Истина;
		
		Объект.ПоказательЯндексДирект = Ложь;
		Элементы.ГруппаЯндексДирект.Видимость = Ложь;
		Элементы.YD_Валюта.Видимость = Ложь;
		Элементы.ГруппаТестированиеСервиса.Видимость = Ложь;
		
		ЗаполнитьПоказателиСпискаВыбора();
		
	ИначеЕсли Объект.СценарийАналитики = ПредопределенноеЗначение("Перечисление.CRM_СценарииПолученияАналитики.Roistat") Тогда
		
		Элементы.ГруппаЯндексДиректа.Видимость = Ложь;
		Элементы.ГруппаGoogleОбщая.Видимость = Ложь;
		Элементы.ГруппаПочтовыеСообщения.Видимость = Ложь;
		Элементы.ГруппаВнешняяОбработка.Видимость = Ложь;
		Элементы.ГруппаВыбораЗначения.Видимость = Ложь;
		Элементы.ГруппаRoistat.Видимость = Истина;
		
		Элементы.ПоказательClientID.Видимость = Ложь;
		Элементы.ПоказательЦелевыеДействия.Видимость = Ложь;
		Элементы.ПоказательОтказы.Видимость = Ложь;
		Элементы.ПоказательГлубинаПросмотра.Видимость = Ложь;
		Элементы.ПоказательВремяНаСайте.Видимость = Ложь;
		
		Объект.ПоказательЯндексДирект = Ложь;
		Элементы.ГруппаЯндексДирект.Видимость = Ложь;
		Элементы.YD_Валюта.Видимость = Ложь;
		Элементы.ГруппаТестированиеСервиса.Видимость = Ложь;
		
	ИначеЕсли Объект.СценарийАналитики = ПредопределенноеЗначение("Перечисление.CRM_СценарииПолученияАналитики.ВнешняяОбработка") Тогда
		
		Элементы.ГруппаЯндексДиректа.Видимость = Ложь;
		Элементы.ГруппаGoogleОбщая.Видимость = Ложь;
		Элементы.ГруппаПочтовыеСообщения.Видимость = Ложь;
		Элементы.ГруппаВнешняяОбработка.Видимость = Истина;
		Элементы.ГруппаВыбораЗначения.Видимость = Ложь;
		Элементы.ГруппаRoistat.Видимость = Ложь;
		
		Объект.ПоказательЯндексДирект = Ложь;
		Элементы.ГруппаЯндексДирект.Видимость = Ложь;
		Элементы.YD_Валюта.Видимость = Ложь;
		Элементы.ГруппаТестированиеСервиса.Видимость = Ложь;
		
	КонецЕсли;
	
	Объект.Наименование = Объект.СценарийАналитики;
	Заголовок = НСтр("ru='Источник аналитики'") + " " + Объект.СценарийАналитики;
	
КонецПроцедуры	

&НаСервере
Процедура УстановитьЗаголовкиКнопок()
	
	Для Каждого Стр Из Элементы.ВыборДействия.СписокВыбора Цикл
		
		Стр.Представление = СтрЗаменить(Стр.Представление, "#1", Объект.СценарийАналитики);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоказателиСпискаВыбора()
	
	УстановитьЗаголовкиКнопок();
	УстановитьУсловноеОформлениеДействия();
	
КонецПроцедуры

&НаСервере
Процедура ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки, Поле, Значение, Представление)
	
	СоответствиеЗначение = Новый Соответствие;
	СоответствиеЗначение.Вставить(Представление, Значение);
	СоответствиеПроверки.Вставить(Поле, СоответствиеЗначение);
	
КонецПроцедуры

&НаСервере
Процедура ТестированиеСервисаДанных()
	
	ОбъектДанных = РеквизитФормыВЗначение("Объект");
	СтруктураДанных = ОбъектДанных.ПолучитьИнформациюПоПодключению(); 
	
	Если Не ЗначениеЗаполнено(СтруктураДанных) Тогда 
		
		Элементы.ФормаКнопкаДалее.Заголовок = НСтр("ru='Далее'en='Next'");
		Элементы.ДекорацияКартинкаСветофор.Картинка		= БиблиотекаКартинок.CRM_СинхронизацияПроблема;
		Элементы.ДекорацияКартинкаСветофор.Подсказка 	= НСтр("ru='В обработке отсутствует или неправильно настроен метод ""ПолучитьИнформациюПоПодключению"".'");
		Элементы.ДекорацияСервис.Заголовок				= НСтр("ru='Ошибка авторизации при подключении к сервису'") 
			+ " " 
			+ Объект.СценарийАналитики;
		Элементы.ДекорацияСервис.ЦветТекста = WebЦвета.Красный;
		
	Иначе
		
		Если СтруктураДанных.ЕстьОшибка Тогда
			
			Элементы.ДекорацияКартинкаСветофор.Картинка		= БиблиотекаКартинок.CRM_СинхронизацияПроблема;
			Элементы.ДекорацияКартинкаСветофор.Подсказка 	= СтруктураДанных.Текст;
			Элементы.ДекорацияСервис.Заголовок				= НСтр("ru='Ошибка авторизации при подключении к сервису'") 
				+ " " 
				+ Объект.СценарийАналитики;
			Элементы.ДекорацияСервис.ЦветТекста = WebЦвета.Красный;
			
		Иначе
			
			Элементы.ДекорацияКартинкаСветофор.Картинка 	= БиблиотекаКартинок.CRM_СинхронизацияНетПроблем;
			Элементы.ДекорацияКартинкаСветофор.Подсказка 	= НСтр("ru='Подключение выполнено'");
			Элементы.ДекорацияСервис.Заголовок				= НСтр("ru='Подключение к сервису'") + " " 
				+ Объект.СценарийАналитики + " " 
				+ НСтр("ru='успешно установлено!'");
			Элементы.ДекорацияСервис.ЦветТекста = WebЦвета.Зеленый;
			
		КонецЕсли;
		
	КонецЕсли;
			 
КонецПроцедуры

&НаСервере
Функция ВыполнитьпроверкуРеквизитовПоСоответствию(Соответствие)
	
	Отказ = Ложь;
	
	Для Каждого Стр Из Соответствие Цикл
		
		СоответствиеПроверки = Стр.Значение;
		
		Для Каждого СтрЗначения Из СоответствиеПроверки Цикл
			
			Если НЕ ЗначениеЗаполнено(СтрЗначения.Значение) Тогда
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Необходимо заполнить обязательное поле:'") 
					+ " " + СтрЗначения.Ключ, ,
					 Стр.Ключ);
				Отказ = Истина;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат Отказ;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьРасписаниеЗапуска()
	
	Адрес = ПоместитьВоВременноеХранилище(РасписаниеРегламентногоЗадания, Новый УникальныйИдентификатор);
	Объект.АдресРасписания = Адрес;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьРасписаниеОбмена(Результат, Параметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("РасписаниеРегламентногоЗадания") Тогда
		РасписаниеРегламентногоЗадания = Результат;
		
		УстановитьНадписьРасписанияОбмена();
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьНадписьРасписанияОбмена()
	
	Если РасписаниеРегламентногоЗадания = Неопределено Тогда
		ТекстЗаголовка = НСтр("ru='Настроить расписание обмена';en='Set up exchange schedule'");
	Иначе
		ТекстЗаголовка = РасписаниеРегламентногоЗадания;
	КонецЕсли;
	
	Элементы.ДекорацияРасписание.Заголовок = ТекстЗаголовка;
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции

#Область ВнешняяОбработка
&НаСервере
Функция ПолучитьДвоичныеДанныеИзХранилища()
	ОбъектПолучения = РеквизитФормыВЗначение("Объект");
	Возврат(ОбъектПолучения.ОбработкаДействия.Получить());
КонецФункции

&НаСервере
Процедура ПодготовитьКВыгрузкеОбработкуНаСервере()
	ДанныеФайла = ПолучитьДвоичныеДанныеИзХранилища();
	АдресФайла = ПоместитьВоВременноеХранилище(ДанныеФайла, УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьОбработку(Команда)
	
	ПодготовитьКВыгрузкеОбработкуНаСервере();
	
	ОбщегоНазначенияКлиент.ПроверитьРасширениеРаботыСФайламиПодключено(
	Новый ОписаниеОповещения(
	"ВыгрузитьОбработкуПродолжение",
	ЭтотОбъект,
	Новый Структура),
	НСтр("ru='Для продолжения необходимо установить расширение для работы с файлами.';en='To continue, install the file operation extension.'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьОбработкуПродолжение(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВыборФайла", ЭтотОбъект);
	ИмяФайла = Объект.НазваниеОбработки + ".epf";
	Файл = Новый ОписаниеПередаваемогоФайла(ИмяФайла, АдресФайла);
	ПолучаемыеФайлы = Новый Массив;
	ПолучаемыеФайлы.Добавить(Файл);
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогОткрытияФайла.Фильтр = "(*.epf)|*.epf";
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	НачатьПолучениеФайлов(ОписаниеОповещения, ПолучаемыеФайлы, ДиалогОткрытияФайла, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборФайла(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ПомещенныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого ПереданныйФайл Из ПомещенныеФайлы Цикл
		Объект.ПутьКОбработке 		= ПереданныйФайл.Имя;
		Модифицированность = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОбработкуКлиент(Команда)
	
	ОбщегоНазначенияКлиент.ПроверитьРасширениеРаботыСФайламиПодключено(
	Новый ОписаниеОповещения(
	"ЗагрузитьОбработкуПродолжение",
	ЭтотОбъект,
	Новый Структура),
	НСтр("ru='Для продолжения необходимо установить расширение для работы с файлами.';en='To continue, install the file operation extension.'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОбработкуПродолжение(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Объект.НазваниеОбработки) Тогда
		ОписаниеОповещенияЗавершения = Новый ОписаниеОповещения("ВопросЗагрузитьОбработку", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещенияЗавершения,
			 НСтр("ru='Загрузить новую обработку с диска?';en='Download new treatment from disk?'"),
			 РежимДиалогаВопрос.ДаНет);
	Иначе
		ВопросЗагрузитьОбработку(КодВозвратаДиалога.Да, Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросЗагрузитьОбработку(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьОбработкуЗавершение", ЭтотОбъект);
		ИмяФайла = Объект.НазваниеОбработки + ".epf";
		ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ДиалогОткрытияФайла.Фильтр = "(*.epf)|*.epf";
		ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
		НачатьПомещениеФайлов(ОписаниеОповещения, , ДиалогОткрытияФайла, Истина, УникальныйИдентификатор);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОбработкуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Результат) = Тип("Массив") И Результат.Количество() > 0 Тогда
		АдресФайла = Результат[0].Хранение;
		Объект.ПутьКОбработке = Результат[0].Имя;
		ЗагрузитьОбработку();
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьОбработку()
	ПараметрыЗащиты = Новый("ОписаниеЗащитыОтОпасныхДействий" + "");
	ПараметрыЗащиты.ПредупреждатьОбОпасныхДействиях = Ложь;
	
	Объект.ИспользуетсяСтандартнаяОбработка = Ложь;
	Обработка =  ВнешниеОбработки.Создать(ВнешниеОбработки.Подключить(АдресФайла, , Ложь, ПараметрыЗащиты), Ложь);
	Объект.НазваниеОбработки = Обработка.Метаданные().Имя;
	Если Объект.Наименование = "" Тогда
		Объект.Наименование = Обработка.Метаданные().Синоним;
	КонецЕсли;
КонецПроцедуры	

&НаСервере
Функция КоличествоЛидовПустое()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	CRM_ИсточникиПолученияЛидов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.CRM_ИсточникиПолученияЛидов КАК CRM_ИсточникиПолученияЛидов
		|ГДЕ
		|	НЕ CRM_ИсточникиПолученияЛидов.ПометкаУдаления";
	
	РезультатЗапроса = Запрос.Выполнить().Пустой();

	Возврат РезультатЗапроса;
	
КонецФункции

#КонецОбласти

#Область ЯндексДирект

&НаКлиенте
Процедура ЯндексДиректПриИзменении(Элемент)
	Элементы.YD_Валюта.Видимость = Объект.ПоказательЯндексДирект;
КонецПроцедуры

&НаСервере
Процедура ЗапросКодаНаСервере()
	
	АдресВерификацииЯндекс = "";
	СтруктураПараметров = Новый Структура("Client_id,YD_device_code,YD_КодПодтверждения, АдресВерификации");
	ЗаполнитьЗначенияСвойств(СтруктураПараметров, Объект);
	CRM_СистемаСквознойАналитики.ЗапросКода(УникальныйИдентификатор, СтруктураПараметров);
	ЗаполнитьЗначенияСвойств(Объект, СтруктураПараметров);
	АдресВерификацииЯндекс = СтруктураПараметров.АдресВерификации;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьТокенЯндексНаСервере()
	
	СтруктураПараметров = Новый Структура("Client_id,Client_secret,YD_device_code,YD_Token");
	ЗаполнитьЗначенияСвойств(СтруктураПараметров, Объект);
	CRM_СистемаСквознойАналитики.ПолучитьТокен(СтруктураПараметров);
	ЗаполнитьЗначенияСвойств(Объект, СтруктураПараметров);
	
	Если ЗначениеЗаполнено(СтруктураПараметров.ТекстИсключения) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Ошибка авторизации :'") + " " 
			+ СтруктураПараметров.ТекстИсключения);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Client_secret_glПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Client_id) И ЗначениеЗаполнено(Объект.Client_secret) Тогда
		Элементы.ДекорацияПолучитьКодАвторизации_gl.Видимость = Истина;
		СформироватьСсылку();
	Иначе
		Элементы.ДекорацияПолучитьКодАвторизации_gl.Видимость = Ложь;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПолучитьКодАвторизации_glОбработкаНавигационнойСсылки(Элемент,
	 НавигационнаяСсылкаФорматированнойСтроки,
	 СтандартнаяОбработка)
	
	Элементы.КодПодтверждения.Видимость = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьСсылку()
	
	АдресОтладочногоТокена = "accounts.google.com";
	ПараметрыСчетчика = "";
	
	redirect_uri = "urn:ietf:wg:oauth:2.0:oob";
	
	Ресурс = "/o/oauth2/v2/auth";
	
	ПараметрыСчетчика = ПараметрыСчетчика + "?response_type=code";
	
	ПараметрыСчетчика = ПараметрыСчетчика + "&client_id=" + ОБъект.Client_id;
	ПараметрыСчетчика = ПараметрыСчетчика + "&redirect_uri=" + redirect_uri;
	ПараметрыСчетчика = ПараметрыСчетчика + "&access_type=offline";
	ПараметрыСчетчика = ПараметрыСчетчика + "&scope=https://www.googleapis.com/auth/analytics.readonly";
	
	АдресРесурса = Ресурс + ПараметрыСчетчика;
	
	СтрокаПодключения = "https://" + АдресОтладочногоТокена + АдресРесурса; 
	
	НоваяСтр = Новый Массив();
	
	НоваяСтр.Добавить(НСтр("ru='Для предоставления токена доступа, необходимо разрешить доступ к `'"));
	НоваяСтр.Добавить(Новый ФорматированнаяСтрока("Analytics API", , , , СтрокаПодключения));
	НоваяСтр.Добавить(НСтр("ru='. Google показывает пользователю диалоговое окно с предложением авторизовать приложение для запроса этих данных. 
								|Если пользователь соглашается, Google предоставляет приложению токен доступа с коротким сроком действия.'"));
	
	Элементы.ДекорацияПолучитьКодАвторизации_gl.Заголовок = Новый ФорматированнаяСтрока(НоваяСтр);
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьТокенНаСервереGoogle(ОтладочныйТокен, Отказ)
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	ОбъектОбработки.ПолучитьТокенGoogle(ОтладочныйТокен, Отказ);
	ЗначениеВРеквизитФормы(ОбъектОбработки, "Объект");

КонецПроцедуры

&НаКлиенте
Процедура ВыборДействияПриИзменении(Элемент)
	УстановитьУсловноеОформлениеДействия();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьУсловноеОформлениеДействия()
	
	Если ВыборДействия = "1" И ЗначениеЗаполнено(Объект.СценарийАналитики) Тогда
		Элементы.ДекорацияВыбор.Заголовок = НСтр("ru='Я подключен к сервису'") + " "  + """" 
			+ Объект.СценарийАналитики + """. " + НСтр("ru='У меня есть токен авторизации'") 
			+ " ";
		УменяЕстьТокен = Истина;
		
	ИначеЕсли ВыборДействия = "0" И ЗначениеЗаполнено(Объект.СценарийАналитики) Тогда
		Элементы.ДекорацияВыбор.Заголовок = НСтр("ru='Я хочу подключиться к сервису'") + " " +  """" 
			+ Объект.СценарийАналитики 
			+ """ ";
		УменяЕстьТокен = Ложь;
		
	ИначеЕсли Не ЗначениеЗаполнено(Объект.СценарийАналитики) Тогда
		ПоказатьПредупреждение(, НСтр("ru='Укажите сценарий аналитики'"));
		Возврат;
		
	Иначе
		Возврат;
	КонецЕсли;
	
	Code = ""; 
	
	Элементы.КодПодтверждения.Видимость = Ложь;
	Элементы.ГруппаGoogleОбщая.Видимость = Истина;
	Элементы.ГруппаПочтовыеСообщения.Видимость = Ложь;
	Элементы.ГруппаВнешняяОбработка.Видимость = Ложь;
	Элементы.ГруппаGoogle.Видимость = Ложь;
	Элементы.ГруппаЯндексДиректа.Видимость = Ложь;
	
	УменяЕстьТокенПриИзменении(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаИсточникаПриИзменении(Элемент)
	
	Если НастройкаИсточника = "0" Тогда
		
		Элементы.НастройкаЛидогенерации.Видимость = Истина;
		Элементы.ФормаКнопкаДалее.Заголовок = НСтр("ru='Далее';en='Next'");

	Иначе
		
		Элементы.НастройкаЛидогенерации.Видимость = Ложь;
		Элементы.ФормаКнопкаДалее.Заголовок = НСтр("ru='Записать и закрыть';en='Save and close'");

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КодПодтвержденияПриИзменении(Элемент)
	
	Отказ = Ложь;
	
	ПолучитьТокенНаСервереGoogle(Code, Отказ);

	Если НЕ Отказ Тогда
		Элементы.RefreshТокен.Видимость = Истина;
	КонецЕсли;
	
	Если Не Отказ Тогда 
		
		Элементы.КодПодтверждения.Видимость = Ложь;
		Элементы.OAuthТокен.Видимость = Истина;
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Ошибка получения токена. Пожалуйста,
			| убедитесь, что данные верны и попробуйте снова.'"), ,
			 "Code");
		Code = "";
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура YD_LoginПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.YD_Login) Тогда
		Элементы.ГруппаСтраницаЗапросКода.Видимость = Истина;
		ЕстьТокенЯндексДирект = "1";
		Элементы.СтраницаПолучениеТокена.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЕстьТокенЯндексДирект1ПриИзменении(Элемент)
	
	Если ЕстьТокенЯндексДирект = "1" Тогда
		Элементы.СтраницаПолучениеТокена.Видимость = Истина;
		Элементы.ГруппаНовыйТокен.Видимость = Ложь;
		
	ИначеЕсли ЕстьТокенЯндексДирект = "0" И ЗначениеЗаполнено(Объект.СценарийАналитики) Тогда
		
		Элементы.СтраницаПолучениеТокена.Видимость = Ложь;
		Элементы.ГруппаНовыйТокен.Видимость = Истина;
		СоответствиеПроверки = Новый Соответствие;
		ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки, "Объект.YD_Login", Объект.YD_Login, "Login"); 
		
		Отказ = ВыполнитьпроверкуРеквизитовПоСоответствию(СоответствиеПроверки);
		
		Если Не Отказ Тогда
			ЗапросКодаНаСервере();
		КонецЕсли;

		Элементы.СтраницаПодтверждениеКода.Видимость = Истина;
		
	ИначеЕсли Не ЗначениеЗаполнено(Объект.СценарийАналитики) Тогда
		ПоказатьПредупреждение(, НСтр("ru='Укажите  аналитики'"));
		Возврат;
	Иначе
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьТокенДирект(Команда)
	
	СоответствиеПроверки = Новый Соответствие;
	ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки, "Объект.YD_КодПодтверждения",
		 Объект.YD_КодПодтверждения,
		 НСтр("ru='Код подтверждения Яндекс'"));
	
	Отказ = ВыполнитьпроверкуРеквизитовПоСоответствию(СоответствиеПроверки);
	
	Если Не Отказ Тогда
		
		ПолучитьТокенЯндексНаСервере();
		
		Элементы.YD_Token1.Видимость = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьИсточник(Команда)
	
	ПоказатьЗначение(, Объект.ИсточникиПолученияЛидов);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКодАвторизацииЯндекса(Команда)
	ЗапросКодаНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСтраницуАвторизацииЯндекса(Команда)
	ПерейтиПоНавигационнойСсылке(АдресВерификацииЯндекс);
	Элементы.ПолучитьТокен.Видимость = Истина;
КонецПроцедуры

#КонецОбласти
