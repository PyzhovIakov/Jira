#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	ОтборТелефон = Новый Структура("Тип, CRM_ОсновнойДляСвязи", Перечисления.ТипыКонтактнойИнформации.Телефон, Истина);
	ОтборЭП		 = Новый Структура("Тип, CRM_ОсновнойДляСвязи",
		 Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты,
		 Истина);
	ЕстьОсновнойТелефон = (КонтактнаяИнформация.НайтиСтроки(ОтборТелефон).Количество() > 0);
	ЕстьОсновнойАдресЭП	= (КонтактнаяИнформация.НайтиСтроки(ОтборЭП).Количество() > 0);
	
	Если НЕ ЕстьОсновнойТелефон Тогда
		ОтборТелефон.Удалить("CRM_ОсновнойДляСвязи");
		СтрокиТелефон = КонтактнаяИнформация.НайтиСтроки(ОтборТелефон);
		
		Если СтрокиТелефон.Количество() > 0 Тогда
			ОсновнойТелефонСтрока = СтрокиТелефон[0];
			Для Каждого СтрокаТ Из СтрокиТелефон Цикл
				Если СтрокаТ.Вид.Предопределенный Тогда
					ОсновнойТелефонСтрока = СтрокаТ;
				КонецЕсли;
			КонецЦикла;
			ОсновнойТелефонСтрока.CRM_ОсновнойДляСвязи = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЕстьОсновнойАдресЭП Тогда
		ОтборЭП.Удалить("CRM_ОсновнойДляСвязи");
		СтрокиЭП = КонтактнаяИнформация.НайтиСтроки(ОтборЭП);
		
		Если СтрокиЭП.Количество() > 0 Тогда
			ОсновнойАдресЭПСтрока = СтрокиЭП[0];
			Для Каждого СтрокаЭП Из СтрокиЭП Цикл
				Если СтрокаЭП.Вид.Предопределенный Тогда
					ОсновнойАдресЭПСтрока = СтрокаЭП;
				КонецЕсли;
			КонецЦикла;
			ОсновнойАдресЭПСтрока.CRM_ОсновнойДляСвязи = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если Ссылка.Пустая() Тогда
		Если НЕ ЗначениеЗаполнено(ДатаРегистрации) Тогда
			ДатаРегистрации = ТекущаяДатаСеанса();
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОсновнойМенеджер) Тогда
			ТекущийПользователь = Пользователи.АвторизованныйПользователь();
			Если Не ТекущийПользователь.Служебный Тогда
				ОсновнойМенеджер = ТекущийПользователь;
			КонецЕсли;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Автор) Тогда
			Автор = Пользователи.АвторизованныйПользователь();
		КонецЕсли;
	ИначеЕсли ПолучитьФункциональнуюОпцию("CRM_ВестиИсториюРеквизитовКлиентов") Тогда
		СтарыеЗначенияРеквизитовОбъекта =
			РегистрыСведений.CRM_ИсторияРеквизитовОбъектов.ПолучитьСтарыеЗначенияРеквизитовОбъекта(Ссылка);
		ДополнительныеСвойства.Вставить("СтарыеЗначения", СтарыеЗначенияРеквизитовОбъекта);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ТелефонныйЗвонок") Тогда
		СтруктураНомера	=
			сфпСофтФонПроСервер.сфпЗаполнитьСтруктуруПолейПоПредставлениюТелефон(ДанныеЗаполнения.АбонентКакСвязаться);
		Телефон = сфпСофтФонПроСервер.сфпУбратьИзНомераТелефонаВсеПрефиксы(ДанныеЗаполнения.АбонентКакСвязаться);		
		Наименование = ДанныеЗаполнения.АбонентПредставление;
		НоваяКИ = КонтактнаяИнформация.Добавить();
		НоваяКИ.Тип = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Телефон");
		СтруктураНомера = сфпСофтФонПроСервер.сфпЗаполнитьСтруктуруПолейПоПредставлениюТелефон(Телефон);
		НоваяКИ.Вид = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.CRM_ТелефонПотенциальногоКлиента");
		НоваяКИ.НомерТелефонаБезКодов	= СтруктураНомера.НомерТелефона;		
		Если ЗначениеЗаполнено(СтруктураНомера.КодГорода) Тогда
			НоваяКИ.Представление	= ?(ЗначениеЗаполнено(СтруктураНомера.КодСтраны), СтруктураНомера.КодСтраны + " (", "(") + СтруктураНомера.КодГорода 
				+ ") " 
				+ СтруктураНомера.НомерТелефона;
		Иначе	
			НоваяКИ.Представление	= Телефон;
		КонецЕсли;	
		НоваяКИ.НомерТелефона = Телефон;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("Телефон") Тогда
		СтруктураНомера	= сфпСофтФонПроСервер.сфпЗаполнитьСтруктуруПолейПоПредставлениюТелефон(ДанныеЗаполнения.Телефон);
		Телефон = сфпСофтФонПроСервер.сфпУбратьИзНомераТелефонаВсеПрефиксы(ДанныеЗаполнения.Телефон);		
		НоваяКИ = КонтактнаяИнформация.Добавить();
		НоваяКИ.Тип = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Телефон");
		СтруктураНомера = сфпСофтФонПроСервер.сфпЗаполнитьСтруктуруПолейПоПредставлениюТелефон(Телефон);
		НоваяКИ.Вид = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.CRM_ТелефонПотенциальногоКлиента");
		НоваяКИ.НомерТелефонаБезКодов	= СтруктураНомера.НомерТелефона;		
		Если ЗначениеЗаполнено(СтруктураНомера.КодГорода) Тогда
			НоваяКИ.Представление	= ?(ЗначениеЗаполнено(СтруктураНомера.КодСтраны), СтруктураНомера.КодСтраны + " (", "(") + СтруктураНомера.КодГорода 
				+ ") " 
				+ СтруктураНомера.НомерТелефона;
		Иначе	
			НоваяКИ.Представление	= Телефон;
		КонецЕсли;	
		НоваяКИ.НомерТелефона = Телефон;
	КонецЕсли;
	Если НЕ ЭтоГруппа Тогда		
		ДатаРегистрации  = CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса();
	КонецЕсли;

КонецПроцедуры	

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписыватьИсторию = (ПолучитьФункциональнуюОпцию("CRM_ВестиИсториюРеквизитовКлиентов")
		 И Не ДополнительныеСвойства.Свойство("НеЗаписыватьИсторию"));
	Если Не Отказ И ЗаписыватьИсторию Тогда
		
	CRM_КлиентыСервер.ЗаписатьИсториюРеквизитовПартнера(
		Ссылка,
		Новый Структура("ПотенциальныйКлиент"),
		?(ДополнительныеСвойства.Свойство("СтарыеЗначения"), ДополнительныеСвойства.СтарыеЗначения, Неопределено),
		?(ДополнительныеСвойства.Свойство("ДатаЗаписиИстории"), ДополнительныеСвойства.ДатаЗаписиИстории, Неопределено),
		,
		(ДополнительныеСвойства.Свойство("ЭтоНовый") И ДополнительныеСвойства.ЭтоНовый));
		
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		Если НЕ ДополнительныеСвойства.Свойство("СвязанныйПК") Тогда
			РегистрыСведений.CRM_СвязанныеПотенциальныеКлиенты.ОбновитьКлиентКонтактВСвязанных(Ссылка);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru='Недопустимый вызов объекта на клиенте.';en='Invalid call of object on client.'");
#КонецЕсли
