
#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура - обработчик события формы "ПриСозданииНаСервере".
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКоманды = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКоманды");
		МодульПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Структура = Новый Структура;
	Структура.Вставить(НСтр("ru='День';en='Day'"),			Перечисления.Периодичность.День);
	Структура.Вставить(НСтр("ru='Неделя';en='Week'"),		Перечисления.Периодичность.Неделя);
	Структура.Вставить(НСтр("ru='Декада';en='Ten-day period'"),		Перечисления.Периодичность.Декада);
	Структура.Вставить(НСтр("ru='Месяц';en='Month'"),		Перечисления.Периодичность.Месяц);
	Структура.Вставить(НСтр("ru='Квартал';en='Quarter'"),		Перечисления.Периодичность.Квартал);
	Структура.Вставить(НСтр("ru='Полугодие';en='Half-year'"),	Перечисления.Периодичность.Полугодие);
	Структура.Вставить(НСтр("ru='Год';en='Year'"),			Перечисления.Периодичность.Год);
	
	СтруктураПериодичность = Структура;
	
	Если Объект.Предопределенный Тогда
		
		Элементы.Периодичность.Доступность = Ложь;
		Элементы.ДатаНачала.Доступность = Ложь;
		Элементы.ДатаНачала.АвтоОтметкаНезаполненного = Ложь;
		Элементы.ДатаОкончания.Доступность = Ложь;
		Элементы.ДатаОкончания.АвтоОтметкаНезаполненного = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
// Процедура - обработчик события формы "ПриОткрытии".
//
Процедура ПриОткрытии(Отказ)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
// Процедура - обработчик события формы "ПриЧтенииНаСервере".
//
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиентСервер = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКомандыКлиентСервер");
		МодульПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ФОРМЫ

&НаКлиенте
// Процедура - обработчик события ПриИзменении поля ДатаНачала.
//
Процедура ДатаНачалаПриИзменении(Элемент)
			
	Если ЗначениеЗаполнено(Объект.Периодичность)
		И ЗначениеЗаполнено(Объект.ДатаНачала) Тогда
		
		Если Объект.Периодичность = СтруктураПериодичность.Неделя Тогда	
			
			Объект.ДатаНачала = НачалоНедели(Объект.ДатаНачала);
						
		ИначеЕсли Объект.Периодичность = СтруктураПериодичность.Месяц Тогда	
			
			Объект.ДатаНачала = НачалоМесяца(Объект.ДатаНачала);
						
		ИначеЕсли Объект.Периодичность = СтруктураПериодичность.Квартал Тогда	
			
			Объект.ДатаНачала = НачалоКвартала(Объект.ДатаНачала);
						
		ИначеЕсли Объект.Периодичность = СтруктураПериодичность.Полугодие Тогда	
			
			МесяцДатыНачала = Месяц(Объект.ДатаНачала);
			
			Объект.ДатаНачала = НачалоГода(Объект.ДатаНачала);

			Если МесяцДатыНачала > 6 Тогда
				
				Объект.ДатаНачала = ДобавитьМесяц(Объект.ДатаНачала, 6);
				
			КонецЕсли;	
						 
		ИначеЕсли Объект.Периодичность = СтруктураПериодичность.Год Тогда
			
			Объект.ДатаНачала = НачалоГода(Объект.ДатаНачала);
						
		КонецЕсли;	
			
	КонецЕсли;	
	
	Если Объект.ДатаНачала > Объект.ДатаОкончания 
		И ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
				
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Значение поля ""Дата начала"" больше значения поля ""Дата окончания""';
			|en='Field value ""Date started"" are more than field value ""Expiry date""'");
		Сообщение.Поле = "Объект.ДатаНачала";
		Сообщение.Сообщить();
				
	КонецЕсли;	
	
КонецПроцедуры // ДатаНачалаПриИзменении()

&НаКлиенте
// Процедура - обработчик события ПриИзменении поля ДатаОкончания.
//
Процедура ДатаОкончанияПриИзменении(Элемент)
			
	Если ЗначениеЗаполнено(Объект.Периодичность)
		И ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
		
		Если Объект.Периодичность = СтруктураПериодичность.Неделя Тогда	
			
			Объект.ДатаОкончания = КонецНедели(Объект.ДатаОкончания);
			
		ИначеЕсли Объект.Периодичность = СтруктураПериодичность.Месяц Тогда	
			
			Объект.ДатаОкончания = КонецМесяца(Объект.ДатаОкончания);
			
		ИначеЕсли Объект.Периодичность = СтруктураПериодичность.Квартал Тогда	
			
			Объект.ДатаОкончания = КонецКвартала(Объект.ДатаОкончания);
			
		ИначеЕсли Объект.Периодичность = СтруктураПериодичность.Полугодие Тогда	
			
			МесяцДатыОкончания = Месяц(Объект.ДатаОкончания);
			
			Объект.ДатаОкончания = КонецГода(Объект.ДатаОкончания);

			Если МесяцДатыОкончания < 7 Тогда
				
				Объект.ДатаОкончания = ДобавитьМесяц(Объект.ДатаОкончания, - 6);
				
			КонецЕсли;	
			 
		ИначеЕсли Объект.Периодичность = СтруктураПериодичность.Год Тогда
			
			Объект.ДатаОкончания = КонецГода(Объект.ДатаОкончания);
			
		КонецЕсли;	
			
	КонецЕсли;
	
	Если Объект.ДатаНачала > Объект.ДатаОкончания 
		И ЗначениеЗаполнено(Объект.ДатаНачала) Тогда
				
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Значение поля ""Дата окончания"" меньше значения поля ""Дата начала""';
			|en='Field value ""Expiry date"" are less than field value ""Date started""'");
		Сообщение.Поле = "Объект.ДатаОкончания";
		Сообщение.Сообщить();
						
	КонецЕсли;
	
КонецПроцедуры // ДатаОкончанияПриИзменении()

&НаКлиенте
// Процедура - обработчик события ПриИзменении поля Периодичность.
//
Процедура ПериодичностьПриИзменении(Элемент)
			
	Если ЗначениеЗаполнено(Объект.ДатаНачала)
		И ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
		
		Если Объект.Периодичность = СтруктураПериодичность.Неделя Тогда	
			
			Объект.ДатаНачала = НачалоНедели(Объект.ДатаНачала);
			Объект.ДатаОкончания = КонецНедели(Объект.ДатаОкончания);
			
		ИначеЕсли Объект.Периодичность = СтруктураПериодичность.Месяц Тогда	
			
			Объект.ДатаНачала = НачалоМесяца(Объект.ДатаНачала);
			Объект.ДатаОкончания = КонецМесяца(Объект.ДатаОкончания);
			
		ИначеЕсли Объект.Периодичность = СтруктураПериодичность.Квартал Тогда	
			
			Объект.ДатаНачала = НачалоКвартала(Объект.ДатаНачала);
			Объект.ДатаОкончания = КонецКвартала(Объект.ДатаОкончания);
			
		ИначеЕсли Объект.Периодичность = СтруктураПериодичность.Полугодие Тогда	
			
			МесяцДатыНачала = Месяц(Объект.ДатаНачала);
			
			Объект.ДатаНачала = НачалоГода(Объект.ДатаНачала);

			Если МесяцДатыНачала > 6 Тогда
				
				Объект.ДатаНачала = ДобавитьМесяц(Объект.ДатаНачала, 6);
				
			КонецЕсли;	
				
			МесяцДатыОкончания = Месяц(Объект.ДатаОкончания);
			
			Объект.ДатаОкончания = КонецГода(Объект.ДатаОкончания);

			Если МесяцДатыОкончания < 7 Тогда
				
				Объект.ДатаОкончания = ДобавитьМесяц(Объект.ДатаОкончания, - 6);
				
			КонецЕсли;	
			 
		ИначеЕсли Объект.Периодичность = СтруктураПериодичность.Год Тогда
			
			Объект.ДатаНачала = НачалоГода(Объект.ДатаНачала);
			Объект.ДатаОкончания = КонецГода(Объект.ДатаОкончания);
			
		КонецЕсли;	
			
	КонецЕсли;	
	
КонецПроцедуры // ПериодичностьПриИзменении()

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
	МодульПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	МодульПодключаемыеКоманды = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКоманды");
	МодульПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	МодульПодключаемыеКомандыКлиентСервер = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиентСервер");
	МодульПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
