//@strict-types

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКопировании(ОбъектКопирования)
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Статус = Перечисления.СтатусыВидовРетроБонусов.Подготовлен;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НачалоДействия)
	   И ЗначениеЗаполнено(ОкончаниеДействия)
	   И ОкончаниеДействия < НачалоДействия Тогда
		
		ТекстСообщения = НСтр("ru = 'Дата окончания действия вида ретро-бонуса должна быть не меньше даты начала действия'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ОкончаниеДействия",, Отказ);
		
	КонецЕсли;
	
	МассивНепроверяемыхРеквизитов = Новый Массив; // Массив Из Строка
	
	Если ТипБонуса = Перечисления.ТипыРетроБонусовПоставщиков.Остатки Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ПериодичностьНачислений");
		
	КонецЕсли;
	
	Если ТипБонуса <> Перечисления.ТипыРетроБонусовПоставщиков.Продажи Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("СоставУчастников");
		МассивНепроверяемыхРеквизитов.Добавить("ОтборУчастников");
		
	КонецЕсли;
	
	ТребуетсяРаспределение =
		ТипБонуса = Перечисления.ТипыРетроБонусовПоставщиков.Закупки
		И БазаРасчета <> Перечисления.БазыРасчетаРетроБонусов.СуммаЗакупкиБазовыеЦены
		И (ПоказательТоваров = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам.Количество
		   ИЛИ ПоказательТоваров = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам.ПакетноеПредложение);
	
	Если БезРасчета
	 ИЛИ НЕ ТребуетсяРаспределение Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ПорядокРаспределения");
		
	КонецЕсли;
	
	Если БезРасчета
	 ИЛИ ТипБонуса = Перечисления.ТипыРетроБонусовПоставщиков.Остатки
	 ИЛИ ПоказательТоваров = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам.НеИспользуется Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ПериодичностьУсловий");
		
	КонецЕсли;
	
	Если БезРасчета Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ТипБонуса");
		МассивНепроверяемыхРеквизитов.Добавить("ПоказательТоваров");
		МассивНепроверяемыхРеквизитов.Добавить("СоставТоваров");
		МассивНепроверяемыхРеквизитов.Добавить("ОтборТоваров");
		
	КонецЕсли;
	
	Если БезРасчета
	 ИЛИ ТипБонуса = Перечисления.ТипыРетроБонусовПоставщиков.Остатки Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("БазаРасчета");
		
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	КонтрольИзмененийРеквизитов(Отказ);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда
		
		ТекстСообщения = НСтр("ru = 'Запрещено изменение справочника в подчиненном узле обмена'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,,, Отказ);
		
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипБонуса <> Перечисления.ТипыРетроБонусовПоставщиков.Продажи Тогда
		
		СоставУчастников = Перечисления.СоставыУчастниковРетроБонусов.ПустаяСсылка();
		ОтборУчастников = Перечисления.СоставыСписковРетроБонусов.ПустаяСсылка();
		
	КонецЕсли;
	
	Если ТипБонуса <> Перечисления.ТипыРетроБонусовПоставщиков.Закупки
	   И НЕ (ТипБонуса = Перечисления.ТипыРетроБонусовПоставщиков.Продажи
			 И ПоказательТоваров <> Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам.НеИспользуется) Тогда
		
		ПериодичностьУсловий = Перечисления.ПериодичностиРетроБонусов.ПустаяСсылка();
		
	КонецЕсли;
	
	Если БезРасчета
	 ИЛИ ТипБонуса = Перечисления.ТипыРетроБонусовПоставщиков.Остатки
	 ИЛИ ПоказательТоваров = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам.НеИспользуется Тогда
		
		ПериодичностьУсловий = Перечисления.ПериодичностиРетроБонусов.ПустаяСсылка();
		
	КонецЕсли;
	
	ПорядокРаспределения = РетроБонусыКлиентСервер.ПроверитьСброситьПорядокРаспределения(
		ПорядокРаспределения,
		БезРасчета,
		ТипБонуса,
		ПоказательТоваров,
		БазаРасчета);
	
	ДоступнаПроверкаПоПокупателям =
		(ТипБонуса = Перечисления.ТипыРетроБонусовПоставщиков.Продажи
		 И ПоказательТоваров <> Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам.НеИспользуется);
	Если НЕ ДоступнаПроверкаПоПокупателям
	 ИЛИ БезРасчета Тогда
		
		ВыполнениеУсловийПоПокупателям = Ложь;
		
	КонецЕсли;
	
	Если БезРасчета Тогда
		
		УчитыватьНДС = Ложь;
		ПоказательТоваров = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам.НеИспользуется;
		ТипБонуса = Перечисления.ТипыРетроБонусовПоставщиков.ПустаяСсылка();
		СоставТоваров = Перечисления.СоставыТоваровРетроБонусов.ПустаяСсылка();
		ОтборТоваров = Перечисления.СоставыСписковРетроБонусов.ПустаяСсылка();
		
	КонецЕсли;
	
	Если БезРасчета
	 ИЛИ ТипБонуса = Перечисления.ТипыРетроБонусовПоставщиков.Остатки Тогда
		
		БазаРасчета = Перечисления.БазыРасчетаРетроБонусов.ПустаяСсылка();
		
	КонецЕсли;
	
	Если ТипБонуса = Перечисления.ТипыРетроБонусовПоставщиков.Остатки Тогда
		
		ПериодичностьНачислений = Перечисления.ПериодичностиРетроБонусов.ПустаяСсылка();
		
	ИначеЕсли БезРасчета Тогда 
		
		ПериодичностьНачислений = Перечисления.ПериодичностиРетроБонусов.Однократно;
		
	КонецЕсли;
	
	КонтрольИзмененийРеквизитов(Отказ, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура КонтрольИзмененийРеквизитов(Отказ, ПроверятьСБлокировкой = Ложь)
	
	Если Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Справочники.ВидыРетроБонусовПоставщиков.ВидРетроБонусаИспользуется(ЭтотОбъект, ПроверятьСБлокировкой) Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыЗапрещенныеДляИзменения = Новый Массив; // Массив из Строка
	РеквизитыЗапрещенныеДляИзменения.Добавить("ТипБонуса");
	РеквизитыЗапрещенныеДляИзменения.Добавить("БезРасчета");
	РеквизитыЗапрещенныеДляИзменения.Добавить("ПоказательТоваров");
	РеквизитыЗапрещенныеДляИзменения.Добавить("БазаРасчета");
	РеквизитыЗапрещенныеДляИзменения.Добавить("УчитыватьНДС");
	РеквизитыЗапрещенныеДляИзменения.Добавить("СоставУчастников");
	РеквизитыЗапрещенныеДляИзменения.Добавить("СоставТоваров");
	РеквизитыЗапрещенныеДляИзменения.Добавить("ПорядокРаспределения");
	РеквизитыЗапрещенныеДляИзменения.Добавить("ВыполнениеУсловийПоПокупателям");
	
	Соответствие = Новый Соответствие;
	Для Каждого ТекРеквизит Из РеквизитыЗапрещенныеДляИзменения Цикл
		
		РеквизитСиноним = Метаданные.Справочники.ВидыРетроБонусовПоставщиков.Реквизиты[ТекРеквизит].Синоним;
		Соответствие.Вставить(ТекРеквизит, РеквизитСиноним);
		
	КонецЦикла;
	
	СтарыеЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		Ссылка, 
		РеквизитыЗапрещенныеДляИзменения);
	
	ШаблонСообщения = НСтр("ru = 'Реквизит ""%1"" изменять нельзя, так как вид ретро-бонуса ""%2"" уже используется в документах.'");
	
	Для Каждого ТекРеквизит Из РеквизитыЗапрещенныеДляИзменения Цикл
		
		Если СтарыеЗначенияРеквизитов[ТекРеквизит] <> ЭтотОбъект[ТекРеквизит] Тогда
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонСообщения, 
				Соответствие[ТекРеквизит],
				Строка(Ссылка));
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,, ТекРеквизит, "Объект", Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли