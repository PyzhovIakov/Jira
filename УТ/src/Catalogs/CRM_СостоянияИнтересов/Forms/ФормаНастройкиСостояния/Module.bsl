
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТекПроверяемыеРеквизитыИнтереса = Неопределено;
	Если Параметры.Свойство("Настройки") Тогда
		ЗаполнитьЗначенияСвойств(Объект, Параметры.Настройки, , "ЧекЛист");
		ЭтоНовыйОбъект = Ложь;
		Если Параметры.Настройки.Свойство("ЭтоНовыйОбъект", ЭтоНовыйОбъект) И ЭтоНовыйОбъект
			 И Не ЗначениеЗаполнено(Объект.ОбязательноеПланированиеАктивности) Тогда
			Объект.ОбязательноеПланированиеАктивности = Перечисления.CRM_ПланируемыеТипыАктивности.Взаимодействие;
		КонецЕсли;
		Если Параметры.Настройки.Свойство("ПроверяемыеРеквизитыИнтереса") Тогда
			ТекПроверяемыеРеквизитыИнтереса = Параметры.Настройки.ПроверяемыеРеквизитыИнтереса;
		КонецЕсли;
		Если Параметры.Настройки.Свойство("БлокируемыеРеквизитыИнтереса") Тогда
			ТекБлокируемыеРеквизитыИнтереса = Параметры.Настройки.БлокируемыеРеквизитыИнтереса;
		КонецЕсли;
		Если Параметры.Настройки.Свойство("ЧекЛист") Тогда
			Объект.ЧекЛист.Загрузить(Параметры.Настройки.ЧекЛист.Выгрузить());
		КонецЕсли;
	ИначеЕсли Параметры.Свойство("Ссылка") Тогда
		ТекПроверяемыеРеквизитыИнтереса = Параметры.Ссылка.ПроверяемыеРеквизитыИнтереса.Получить();
		ТекБлокируемыеРеквизитыИнтереса = Параметры.Ссылка.БлокируемыеРеквизитыИнтереса.Получить();
		ЗначениеВРеквизитФормы(Параметры.Ссылка.ПолучитьОбъект(), "Объект");
		ЗаписыватьОбъект = Истина;
	КонецЕсли;
	
	ЭтоПоддержка = (Объект.Родитель.ЭтоПоддержка);
	Элементы.КатегорияСостояния.Видимость = ЭтоПоддержка;
	Элементы.ГруппаВеротяность.Видимость = Не ЭтоПоддержка;
	Элементы.ОжидаемыйСрокНаЭтапе.Видимость = Не ЭтоПоддержка И Не Объект.Завершено;
	Если ЭтоПоддержка Тогда
		Элементы.ИнтерактивноеПланированиеАктивностей.Заголовок =
			НСтр("ru = 'Планировать дела при изменении состояния обращения в АРМ ""Поддержка""'");
	КонецЕсли;
	
	Элементы.НеСоздаватьЗадачу.Видимость = (Объект.ВидСостояния = Перечисления.CRM_ВидыСостоянияИнтереса.Первое);
	
	Заголовок = НСтр("ru='Настройка состояния';en='Stage Settings'") + ": " + Объект.Наименование;
	
	УправлениеВидимостьюЭлементов(ЭтотОбъект);
	
	Если Объект.ВидСостояния = Перечисления.CRM_ВидыСостоянияИнтереса.УспешноеЗавершение 
	 Или Объект.ВидСостояния = Перечисления.CRM_ВидыСостоянияИнтереса.НеудачноеЗавершение Тогда
		Элементы.ГруппаОбязательноеПланирование.Видимость = Ложь; 	 
		Элементы.ЗавершатьСвязанныеДиалоги.Видимость = Истина; 	 
	КонецЕсли;
	
	Для каждого ЗадачаЧЛ Из Объект.ЧекЛист Цикл
		ЗадачаЧЛ.СтароеОписание = ЗадачаЧЛ.ОписаниеЗадачи;
	КонецЦикла;
	
	ВидимостьЧекЛиста();
	
	Элементы.РольОтветственного.Видимость = (Объект.РазрешитьРолевуюАдресацию
									И Объект.ВидСостояния = Перечисления.CRM_ВидыСостоянияИнтереса.Первое);
	
	ЗаполнитьПроверяемыеРеквизитыИнтереса(ЭтоПоддержка, ТекПроверяемыеРеквизитыИнтереса, ТекБлокируемыеРеквизитыИнтереса);
 
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ПроверяемыеРеквизитыИнтереса = Новый ХранилищеЗначения(МассивПроверяемыхРеквизитов);
	ТекущийОбъект.БлокируемыеРеквизитыИнтереса = Новый ХранилищеЗначения(МассивБлокируемыхРеквизитов);

	ТипСтр = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(150));
	ИзмененныеОписания = Новый ТаблицаЗначений;
	ИзмененныеОписания.Колонки.Добавить("СтароеОписание", ТипСтр); 
	ИзмененныеОписания.Колонки.Добавить("НовоеОписание", ТипСтр); 
	Для каждого ЗадачаЧЛ Из Объект.ЧекЛист Цикл
		Если ЗначениеЗаполнено(ЗадачаЧЛ.СтароеОписание) И ЗадачаЧЛ.СтароеОписание <> ЗадачаЧЛ.ОписаниеЗадачи Тогда
			СтрИО = ИзмененныеОписания.Добавить();
			СтрИО.СтароеОписание = ЗадачаЧЛ.СтароеОписание;
			СтрИО.НовоеОписание = ЗадачаЧЛ.ОписаниеЗадачи;
		КонецЕсли;
	КонецЦикла;
	Если ИзмененныеОписания.Количество() > 0 Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ИзмененныеОписания.СтароеОписание КАК СтароеОписание,
		                      |	ИзмененныеОписания.НовоеОписание КАК НовоеОписание
		                      |ПОМЕСТИТЬ ИзмененныеОписанияВТ
		                      |ИЗ
		                      |	&ИзмененныеОписания КАК ИзмененныеОписания
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	CRM_СостоянияИнтересов.Ссылка КАК Ссылка,
		                      |	CRM_СостоянияИнтересовЧекЛист.ОписаниеЗадачи КАК СтароеОписание,
		                      |	ИзмененныеОписанияВТ.НовоеОписание КАК НовоеОписание
		                      |ИЗ
		                      |	Справочник.CRM_СостоянияИнтересов.ЧекЛист КАК CRM_СостоянияИнтересовЧекЛист
		                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.CRM_СостоянияИнтересов КАК CRM_СостоянияИнтересов
		                      |		ПО CRM_СостоянияИнтересовЧекЛист.Ссылка = CRM_СостоянияИнтересов.Ссылка
		                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИзмененныеОписанияВТ КАК ИзмененныеОписанияВТ
		                      |		ПО CRM_СостоянияИнтересовЧекЛист.ОписаниеЗадачи = ИзмененныеОписанияВТ.СтароеОписание
		                      |ГДЕ
		                      |	CRM_СостоянияИнтересов.Ссылка <> &Ссылка
		                      |	И CRM_СостоянияИнтересов.Родитель = &Родитель
		                      |ИТОГИ ПО
		                      |	Ссылка
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |УНИЧТОЖИТЬ ИзмененныеОписанияВТ");
		Запрос.УстановитьПараметр("Родитель", ТекущийОбъект.Родитель);
		Запрос.УстановитьПараметр("Ссылка", ТекущийОбъект.Ссылка);
		Запрос.УстановитьПараметр("ИзмененныеОписания", ИзмененныеОписания);
		
		Результат = Запрос.Выполнить();
		Если Не Результат.Пустой() Тогда
			ТекущийОбъект.ДополнительныеСвойства.Вставить("СостоянияДляИзмененияЗадач",
				 Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам));
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ТекущийОбъект.ДополнительныеСвойства.Свойство("СостоянияДляИзмененияЗадач") Тогда
		Для Каждого СтрСостояния Из ТекущийОбъект.ДополнительныеСвойства.СостоянияДляИзмененияЗадач.Строки Цикл
			ИзменяемыйОбъект = СтрСостояния.Ссылка.ПолучитьОбъект();
			Для каждого Задача Из СтрСостояния.Строки Цикл
				СтрЗадачи = ИзменяемыйОбъект.ЧекЛист.Найти(Задача.СтароеОписание, "ОписаниеЗадачи");
				Если СтрЗадачи <> Неопределено Тогда
					СтрЗадачи.ОписаниеЗадачи = Задача.НовоеОписание;
				КонецЕсли;
			КонецЦикла;
			ИзменяемыйОбъект.Записать();
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ОбновитьПовторноИспользуемыеЗначения();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИндексЦветаНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОповещениеНовое = Новый ОписаниеОповещения("ЦветНачалоВыбораЗавершение", ЭтотОбъект);
	ПараметрыФормы = Новый Структура("ТекущийЦвет", Объект.ИндексЦвета);
	ФормаВыбораЦвета = ОткрытьФорму("Справочник.CRM_Категории.Форма.ФормаВыбораЦвета", ПараметрыФормы, Элемент, , , ,
		ОповещениеНовое, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);	
КонецПроцедуры // ЦветНачалоВыбора()

&НаКлиенте
// Продолжение процедуры "ЦветНачалоВыбора"
//
Процедура ЦветНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если НЕ (Результат = Неопределено) И НЕ (Результат = КодВозвратаДиалога.Отмена) Тогда
		Объект.ИндексЦвета = Результат[0].Картинка;
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗавершатьЗапланированныеАктивностиПриИзменении(Элемент)
	Если НЕ ЗначениеЗаполнено(Объект.ЗавершатьЗапланированныеАктивности) И Объект.УказыватьДостигнутыйРезультат Тогда
		Объект.УказыватьДостигнутыйРезультат = Ложь;
	КонецЕсли;
	УправлениеВидимостьюЭлементов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьЧекЛистПриИзменении(Элемент)
	ВидимостьЧекЛиста();
КонецПроцедуры

&НаКлиенте
Процедура РазрешитьРолевуюАдресациюПриИзменении(Элемент)
	
	Элементы.РольОтветственного.Видимость = (Объект.РазрешитьРолевуюАдресацию
		И Объект.ВидСостояния = ПредопределенноеЗначение("Перечисление.CRM_ВидыСостоянияИнтереса.Первое"));
	
	Если НЕ Элементы.РольОтветственного.Видимость Тогда
		Объект.РольОтветственного = ПредопределенноеЗначение("Справочник.РолиИсполнителей.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	
	Если ЭтоПоддержка И Объект.КатегорияСостояния.Пустая() Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.ПутьКДанным = "КатегорияСостояния";
		Сообщение.Текст = НСтр("ru='Не заполнена категория !'");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;	

	Для каждого СтрокаЧЛ Из Объект.ЧекЛист Цикл
		Если Объект.ЧекЛист.НайтиСтроки(Новый Структура("ОписаниеЗадачи", СтрокаЧЛ.ОписаниеЗадачи)).Количество() > 1 Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'В чек-листе дублируется задача - '") 
				+ СтрокаЧЛ.ОписаниеЗадачи);
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	МассивПроверяемыхРеквизитовТемп = Новый Массив;
	МассивБлокируемыхРеквизитовТемп = Новый Массив;
	Для каждого Строка Из ПроверяемыеРеквизитыИнтереса Цикл
		Если Строка.ПроверкаЗаполнения Тогда
			МассивПроверяемыхРеквизитовТемп.Добавить(Строка.Реквизит);
		КонецЕсли;
		Если Строка.ТолькоПросмотр Тогда
			МассивБлокируемыхРеквизитовТемп.Добавить(Строка.Реквизит);
		КонецЕсли;
	КонецЦикла;
	МассивПроверяемыхРеквизитов = Новый ФиксированныйМассив(МассивПроверяемыхРеквизитовТемп);
	МассивБлокируемыхРеквизитов = Новый ФиксированныйМассив(МассивБлокируемыхРеквизитовТемп);
	
	Если ЗаписыватьОбъект Тогда
		Если Не Записать() Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Настройки = Новый Структура;
	Настройки.Вставить("ПроверяемыеРеквизитыИнтереса", МассивПроверяемыхРеквизитов);
	Настройки.Вставить("БлокируемыеРеквизитыИнтереса", МассивБлокируемыхРеквизитов);
	Настройки.Вставить("ОбязательноеПланированиеАктивности", Объект.ОбязательноеПланированиеАктивности);
	Настройки.Вставить("ИнтерактивноеПланированиеАктивностей", Объект.ИнтерактивноеПланированиеАктивностей);
	Настройки.Вставить("ЗавершатьЗапланированныеАктивности", Объект.ЗавершатьЗапланированныеАктивности);
	Настройки.Вставить("ОтборЗавершаемыхАктивностей", Объект.ОтборЗавершаемыхАктивностей);
	Настройки.Вставить("УказыватьДостигнутыйРезультат", Объект.УказыватьДостигнутыйРезультат);
	Настройки.Вставить("РазрешитьРолевуюАдресацию", Объект.РазрешитьРолевуюАдресацию);
	Настройки.Вставить("РольОтветственного", Объект.РольОтветственного);
	Настройки.Вставить("ДобавитьВероятностьВПредставлениеСостояния", Объект.ДобавитьВероятностьВПредставлениеСостояния);
	Настройки.Вставить("ВероятностьСделки", Объект.ВероятностьСделки);
	Настройки.Вставить("ИндексЦвета", Объект.ИндексЦвета);
	Настройки.Вставить("ИспользоватьЧекЛист", Объект.ИспользоватьЧекЛист);
	Настройки.Вставить("ПроверкаВыполненияЧекЛиста", Объект.ПроверкаВыполненияЧекЛиста);
	Настройки.Вставить("ЧекЛист", Объект.ЧекЛист);
	
	Закрыть(Настройки);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеВидимостьюЭлементов(Форма)
		
	Форма.Элементы.УказыватьДостигнутыйРезультат.Видимость =
		ЗначениеЗаполнено(Форма.Объект.ЗавершатьЗапланированныеАктивности);
	Форма.Элементы.ОтборЗавершаемыхАктивностей.Видимость =
		ЗначениеЗаполнено(Форма.Объект.ЗавершатьЗапланированныеАктивности);
	Форма.Элементы.ОтборЗавершаемыхАктивностей.АвтоОтметкаНезаполненного =
		ЗначениеЗаполнено(Форма.Объект.ЗавершатьЗапланированныеАктивности);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПроверяемыеРеквизитыИнтереса(ЭтоПоддержка, ТекПроверяемыеРеквизитыИнтереса,
	 ТекБлокируемыеРеквизитыИнтереса)
	
	РеквизитМД = Метаданные.Документы.CRM_Интерес.Реквизиты.Найти("Партнер");
	Если РеквизитМД <> Неопределено Тогда
		НовСтр = ПроверяемыеРеквизитыИнтереса.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Новый Структура("Реквизит, Синоним", "Партнер", РеквизитМД.Синоним));
	КонецЕсли;
	Если НЕ ЭтоПоддержка Тогда
		РеквизитМД = Метаданные.Документы.CRM_Интерес.Реквизиты.Найти("ОжидаемаяВыручка");
		Если РеквизитМД <> Неопределено Тогда
			НовСтр = ПроверяемыеРеквизитыИнтереса.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр, Новый Структура("Реквизит, Синоним", "ОжидаемаяВыручка", РеквизитМД.Синоним));
		КонецЕсли;
		РеквизитМД = Метаданные.Документы.CRM_Интерес.Реквизиты.Найти("ОжидаемаяДатаПродажи");
		Если РеквизитМД <> Неопределено Тогда
			НовСтр = ПроверяемыеРеквизитыИнтереса.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр, Новый Структура("Реквизит, Синоним", "ОжидаемаяДатаПродажи", РеквизитМД.Синоним));
		КонецЕсли;
		
		ТабличнаяЧастьМД = Метаданные.Документы.CRM_Интерес.ТабличныеЧасти.Найти("Товары");
		Если ТабличнаяЧастьМД <> Неопределено Тогда
			НовСтр = ПроверяемыеРеквизитыИнтереса.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр, Новый Структура("Реквизит, Синоним", "Товары", ТабличнаяЧастьМД.Синоним));
		КонецЕсли;
		
	КонецЕсли;
	РеквизитМД = Метаданные.Документы.CRM_Интерес.Реквизиты.Найти("Договор");
	// Если РеквизитМД <> Неопределено Тогда 
	Если РеквизитМД <> Неопределено И Не Объект.ВидСостояния = Перечисления.CRM_ВидыСостоянияИнтереса.Первое Тогда 
		// Для первого состояния договор не является обязательным, так как сам клиент может быть еще не создан
		Если ИспользоватьДоговорыСКлиентами() Тогда
			НовСтр = ПроверяемыеРеквизитыИнтереса.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр, Новый Структура("Реквизит, Синоним", "Договор", РеквизитМД.Синоним));
		КонецЕсли;
	КонецЕсли;
	РеквизитМД = Метаданные.Документы.CRM_Интерес.Реквизиты.Найти("Соглашение");
	Если РеквизитМД <> Неопределено Тогда
		Если ИспользоватьСоглашенияСКлиентами() Тогда
			НовСтр = ПроверяемыеРеквизитыИнтереса.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр, Новый Структура("Реквизит, Синоним", "Соглашение", РеквизитМД.Синоним));
		КонецЕсли;
	КонецЕсли;
	РеквизитМД = Метаданные.Документы.CRM_Интерес.Реквизиты.Найти("Контрагент");
	Если РеквизитМД <> Неопределено Тогда
		НовСтр = ПроверяемыеРеквизитыИнтереса.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Новый Структура("Реквизит, Синоним", "Контрагент", РеквизитМД.Синоним));
	КонецЕсли;
	РеквизитМД = Метаданные.Документы.CRM_Интерес.Реквизиты.Найти("Организация");
	Если РеквизитМД <> Неопределено Тогда
		НовСтр = ПроверяемыеРеквизитыИнтереса.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Новый Структура("Реквизит, Синоним", "Организация", РеквизитМД.Синоним));
	КонецЕсли;
	РеквизитМД = Метаданные.Документы.CRM_Интерес.Реквизиты.Найти("Проект");
	Если РеквизитМД <> Неопределено Тогда
		НовСтр = ПроверяемыеРеквизитыИнтереса.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Новый Структура("Реквизит, Синоним", "Проект", РеквизитМД.Синоним));
	КонецЕсли;
	РеквизитМД = Метаданные.Документы.CRM_Интерес.Реквизиты.Найти("Описание");
	Если РеквизитМД <> Неопределено Тогда
		НовСтр = ПроверяемыеРеквизитыИнтереса.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Новый Структура("Реквизит, Синоним", "Описание", РеквизитМД.Синоним));
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Свойство КАК Свойство,
	                      |	НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Свойство.Заголовок КАК СвойствоЗаголовок
	                      |ИЗ
	                      |	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты
	                      |ГДЕ
	                      |	НЕ НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Свойство.ПометкаУдаления
	                      |	И НЕ НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.ПометкаУдаления
	                      |	И НЕ НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Ссылка.ПометкаУдаления
	                      |	И НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Ссылка В (&Наборы)");
	Запрос.УстановитьПараметр("Наборы", ПолучитьНаборыСвойствДляИнтересов());
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НовСтр = ПроверяемыеРеквизитыИнтереса.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Новый Структура("Реквизит, Синоним", Выборка.Свойство, Выборка.СвойствоЗаголовок));
	КонецЦикла;
	
	Если ТекПроверяемыеРеквизитыИнтереса <> Неопределено ИЛИ ТекБлокируемыеРеквизитыИнтереса <> Неопределено Тогда
		Для каждого Строка Из ПроверяемыеРеквизитыИнтереса Цикл
			Если ТекПроверяемыеРеквизитыИнтереса <> Неопределено
				И ТекПроверяемыеРеквизитыИнтереса.Найти(Строка.Реквизит) <> Неопределено Тогда
				Строка.ПроверкаЗаполнения = Истина;
			КонецЕсли;
			Если ТекБлокируемыеРеквизитыИнтереса <> Неопределено
				И ТекБлокируемыеРеквизитыИнтереса.Найти(Строка.Реквизит) <> Неопределено Тогда
				Строка.ТолькоПросмотр = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьНаборыСвойствДляИнтересов()
	Наборы = Новый СписокЗначений;
	Если Объект.Родитель.ТипыОбращений.Количество() > 0 Тогда
		Для каждого Строка Из Объект.Родитель.ТипыОбращений Цикл
			ТипОбращения = Строка.ТипОбращения;
			Если ТипОбращения = Справочники.CRM_ТипыОбращений.Интерес Тогда
				Наборы.Добавить(УправлениеСвойствами.НаборСвойствПоИмени("Документ_CRM_Интерес_Интерес"),
					НСтр("ru='Для интересов с типом Интерес'"));
			Иначе
				Наборы.Добавить(УправлениеСвойствами.НаборСвойствПоИмени("Документ_CRM_Интерес_ВсеОбращения"),
					НСтр("ru='Общие для всех обращений'"));
				Если ТипОбращения = Справочники.CRM_ТипыОбращений.Обращение Тогда
					Наборы.Добавить(УправлениеСвойствами.НаборСвойствПоИмени("Документ_CRM_Интерес_Обращение"),
						НСтр("ru='Обращение'"));
				Иначе
					Наборы.Добавить(Справочники.НаборыДополнительныхРеквизитовИСведений.НайтиПоНаименованию(ТипОбращения.Наименование), НСтр("ru='Для интересов с типом'") 
						+ " " 
						+ ТипОбращения.Наименование);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Наборы.Добавить(УправлениеСвойствами.НаборСвойствПоИмени("Документ_CRM_Интерес_Интерес"),
			НСтр("ru='Для интересов с типом Интерес'"));
	КонецЕсли;
	Возврат Наборы;
КонецФункции // ПолучитьНаборыСвойствДляПартнеров()

&НаСервере
Процедура ВидимостьЧекЛиста()

	Если Объект.Завершено Тогда
		Элементы.ГруппаЧекЛист.Видимость = Ложь;
	Иначе	
		Элементы.ЧекЛист.Видимость = Объект.ИспользоватьЧекЛист;
		Элементы.ПроверкаВыполненияЧекЛиста.Видимость = Объект.ИспользоватьЧекЛист;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ИспользоватьСоглашенияСКлиентами()
	
	Если CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ИмяФО = "ИспользоватьСоглашенияСКлиентами";
	Возврат ПолучитьФункциональнуюОпцию(ИмяФО);
	
КонецФункции

&НаСервере
Функция ИспользоватьДоговорыСКлиентами()
	
	Если CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
		Возврат Истина;
	КонецЕсли;
	
	ИмяФО = "ИспользоватьДоговорыСКлиентами";
	Возврат ПолучитьФункциональнуюОпцию(ИмяФО);
	
КонецФункции

#КонецОбласти
