
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Сценарий") И ЗначениеЗаполнено(Параметры.Сценарий) Тогда
		Сценарий = Параметры.Сценарий;
		Заголовок = НСтр("ru = 'Чек-лист'") + ": " + Сценарий.Наименование;
	Иначе
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЧекЛистПоСценарию();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	
	Если СохранитьИзмененияЧекЛиста() Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВверх(Команда)
	ПереместитьСтрокуЧекЛиста(-1);
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВниз(Команда)
	ПереместитьСтрокуЧекЛиста(1);
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьСтрокуЧекЛиста(Смещение)
	ТекСтр = Элементы.ЧекЛист.ТекущиеДанные;
	Индекс = ЧекЛист.Индекс(ТекСтр);
	НовИндекс = (Индекс + Смещение);
	Если НовИндекс >= 0 И НовИндекс < ЧекЛист.Количество() Тогда 
		Для каждого ЭлементСЗ Из СписокСостояний Цикл
			Если ТекСтр[ЭлементСЗ.Представление] Тогда
				ЭлементСЗ.Пометка = Истина;
			КонецЕсли;
		КонецЦикла;
		ЧекЛист.Сдвинуть(Индекс, Смещение);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ЧекЛистОписаниеЗадачиПриИзменении(Элемент)
	ТекСтр = Элементы.ЧекЛист.ТекущиеДанные;
	Для каждого ЭлементСЗ Из СписокСостояний Цикл
		Если ТекСтр[ЭлементСЗ.Представление] Тогда
			ЭлементСЗ.Пометка = Истина;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЧекЛистПередУдалением(Элемент, Отказ)
	ТекСтр = Элементы.ЧекЛист.ТекущиеДанные;
	Для каждого ЭлементСЗ Из СписокСостояний Цикл
		Если ТекСтр[ЭлементСЗ.Представление] Тогда
			ЭлементСЗ.Пометка = Истина;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЧекЛистКолонкаПриИзменении(Элемент)
	Для каждого ЭлементСЗ Из СписокСостояний Цикл
		Если ЭлементСЗ.Представление = Элемент.Имя Тогда
			ЭлементСЗ.Пометка = Истина;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьЧекЛистПоСценарию()
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	CRM_СостоянияИнтересов.Ссылка КАК Состояние,
	                      |	CRM_СостоянияИнтересов.Наименование КАК Наименование,
	                      |	CRM_СостоянияИнтересовЧекЛист.ОписаниеЗадачи КАК ОписаниеЗадачи,
	                      |	CRM_СостоянияИнтересовЧекЛист.НомерСтроки КАК НомерСтроки,
	                      |	CRM_СостоянияИнтересов.РеквизитДопУпорядочивания КАК РеквизитДопУпорядочивания
	                      |ИЗ
	                      |	Справочник.CRM_СостоянияИнтересов КАК CRM_СостоянияИнтересов
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.CRM_СостоянияИнтересов.ЧекЛист КАК CRM_СостоянияИнтересовЧекЛист
	                      |		ПО (CRM_СостоянияИнтересовЧекЛист.Ссылка = CRM_СостоянияИнтересов.Ссылка)
	                      |			И (CRM_СостоянияИнтересов.ИспользоватьЧекЛист)
	                      |ГДЕ
	                      |	CRM_СостоянияИнтересов.Родитель = &Сценарий
	                      |	И НЕ CRM_СостоянияИнтересов.Завершено
	                      |	И НЕ CRM_СостоянияИнтересов.ПометкаУдаления
	                      |	И CRM_СостоянияИнтересов.Используется
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	РеквизитДопУпорядочивания,
	                      |	НомерСтроки
	                      |ИТОГИ
	                      |	МАКСИМУМ(Наименование)
	                      |ПО
	                      |	Состояние,
	                      |	ОписаниеЗадачи");
	Запрос.УстановитьПараметр("Сценарий", Сценарий);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаСостояние = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	нРеквизиты = Новый Массив;
	Пока ВыборкаСостояние.Следующий() Цикл
		ИмяКолонки = "Колонка" + СтрЗаменить(Строка(ВыборкаСостояние.Состояние.УникальныйИдентификатор()), "-", "_");
		нРеквизиты.Добавить(Новый РеквизитФормы(ИмяКолонки, Новый ОписаниеТипов("Булево"), "ЧекЛист",
			 ВыборкаСостояние.Наименование,
			 Истина));
		СписокСостояний.Добавить(ВыборкаСостояние.Состояние, ИмяКолонки);
	КонецЦикла;
	ИзменитьРеквизиты(нРеквизиты);
	
	Для каждого ЭлементСЗ Из СписокСостояний Цикл
		нЭлемент = Элементы.Добавить(ЭлементСЗ.Представление, Тип("ПолеФормы"), Элементы.ЧекЛист); 
		нЭлемент.Вид = ВидПоляФормы.ПолеФлажка; 
		нЭлемент.ПутьКДанным = "ЧекЛист." + ЭлементСЗ.Представление;
		нЭлемент.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Центр;
		нЭлемент.УстановитьДействие("ПриИзменении", "ЧекЛистКолонкаПриИзменении"); 
	КонецЦикла;

	ВыборкаОписание = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОписаниеЗадачи");
	Пока ВыборкаОписание.Следующий() Цикл
		Если ВыборкаОписание.ОписаниеЗадачи = null Тогда
			Продолжить;
		КонецЕсли;
		НовСтр = ЧекЛист.Добавить();
		НовСтр.ОписаниеЗадачи = ВыборкаОписание.ОписаниеЗадачи;
		Выборка = ВыборкаОписание.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Состояние");
		Пока Выборка.Следующий() Цикл
			ЭлементСЗ = СписокСостояний.НайтиПоЗначению(Выборка.Состояние);
			Если ЭлементСЗ <> Неопределено Тогда
				НовСтр[ЭлементСЗ.Представление] = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция СохранитьИзмененияЧекЛиста()
	
	НачатьТранзакцию();
	Попытка
		Для каждого ЭлементСЗ Из СписокСостояний Цикл
			Если ЭлементСЗ.Пометка Тогда
				СпрОбъект = ЭлементСЗ.Значение.ПолучитьОбъект();
				СпрОбъект.ЧекЛист.Очистить();
				Для каждого Стр Из ЧекЛист Цикл
					Если Стр[ЭлементСЗ.Представление] Тогда
						НовСтр = СпрОбъект.ЧекЛист.Добавить();
						НовСтр.ОписаниеЗадачи = Стр.ОписаниеЗадачи;
					КонецЕсли;
				КонецЦикла;
				СпрОбъект.ИспользоватьЧекЛист = (СпрОбъект.ЧекЛист.Количество() > 0);
				СпрОбъект.Записать();
			КонецЕсли;
		КонецЦикла;
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
		
КонецФункции

#КонецОбласти
