
&НаКлиенте
Перем ТекущаяПозицияHTML;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	CRM_ВзаимодействияКлиентСервер.ДобавитьНеобходимыеТэгиHTML(ТекстПисьмаHTML);
	
	ТранслитерироватьИменаФайловПриДобавленииВложений = 
		ХранилищеОбщихНастроек.Загрузить("ТранслитерироватьИменаФайловПриДобавленииВложений", 
		"ТранслитерироватьИменаФайловПриДобавленииВложений", Ложь);
	
	Если Объект.Ссылка.Пустая() Тогда
		
		ПриСозданииИПриЧтенииНаСервере();
		
		Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			ЗначениеКопирования = Параметры.ЗначениеКопирования;
			ТекстПисьмаHTML = CRM_Взаимодействия.ВставитьТекстВТекстПисьмаHTML(
				Неопределено, ЗначениеКопирования.Текст, ЗначениеКопирования, Истина, УникальныйИдентификатор, ИдентификаторыКартинокПисьма);
		КонецЕсли;
		
	КонецЕсли;
	
	СоздатьЭлементыАвтотекста();
	
	ЗапрещенныеРасширения = РаботаСФайламиСлужебный.СписокЗапрещенныхРасширений();
	
	ОтображатьТаблицуВложений = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("CRM_Подписки",
		"ОтображатьТаблицуВложений", Ложь);
	Элементы.ГруппаВложения.Видимость = ОтображатьТаблицуВложений;
	Элементы.СсылкиВложений.Видимость = Не ОтображатьТаблицуВложений;
	
	Элементы.ГруппаДополнительное.Видимость = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ВсеВложенияПометка Тогда
		Элементы.Вложения.ОтборСтрок = Неопределено;
	Иначе
		Элементы.Вложения.ОтборСтрок = Новый ФиксированнаяСтруктура("ИДФайлаЭлектронногоПисьмаОтбор", "#");
	КонецЕсли;
	
	СформироватьСсылкиВложений();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если НЕ Настройки["ВсеВложенияПометка"] = Неопределено Тогда
		ВсеВложенияПометка	= Настройки["ВсеВложенияПометка"];
	Иначе
		ВсеВложенияПометка	= Ложь;
	КонецЕсли;
	Элементы.ФормаВсеВложения.Пометка	= ВсеВложенияПометка;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриСозданииИПриЧтенииНаСервере();
	
	ТекстПисьмаHTML = CRM_Взаимодействия.ВставитьКартинкиВТекстHTML(
		ТекущийОбъект.Текст,
		Объект.Ссылка,
		УникальныйИдентификатор,
		ИдентификаторыКартинокПисьма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	HTMLДокумент = Элементы.ТекстПисьмаHTML.Документ;
	Если HTMLДокумент <> Неопределено Тогда
		ТекстПисьмаПередЗакрытием = HTMLДокумент.body.innerHTML;
		CRM_ВзаимодействияКлиентСервер.ДобавитьНеобходимыеТэгиHTML(ТекстПисьмаПередЗакрытием);
		Если ТекстПисьмаПередЗакрытием <> ТекстПисьмаПриОткрытии Тогда
			Модифицированность = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Элементы.ПроверкаПравописания.Пометка Тогда
		ТекстПисьмаHTML = CRM_ПроверкаПравописанияКлиент.СкрытьОшибки(Элементы.ТекстПисьмаHTML);
	КонецЕсли;
	
	CRM_РаботаСHTMLКлиент.ЗапомнитьПозициюHTML(Элементы.ТекстПисьмаHTML, ТекущаяПозицияHTML);
	CRM_РаботаСHTMLКлиент.ЗаписатьHTML(Элементы.ТекстПисьмаHTML, КартинкиДобавленные, УникальныйИдентификатор);
	ТекстПисьмаHTMLПриЗаписи = CRM_РаботаСHTMLКлиент.ТекстВПолеHTML(Элементы.ТекстПисьмаHTML);
	
	#Если Не ВебКлиент Тогда
		Для Каждого СтрокаТаблицыВложений Из Вложения Цикл
			Если СтрокаТаблицыВложений.Расположение = 2 Тогда
				Попытка
					Данные = Новый ДвоичныеДанные(СтрокаТаблицыВложений.ИмяФайлаНаКомпьютере);
					СтрокаТаблицыВложений.ИмяФайлаНаКомпьютере = ПоместитьВоВременноеХранилище(Данные, "");
					СтрокаТаблицыВложений.Расположение = 4;
				Исключение
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке()),
						 , "Вложения", ,
						 Отказ);
				КонецПопытки;
			КонецЕсли;
		КонецЦикла;
	#КонецЕсли
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	CRM_Взаимодействия.ОбработатьКартинкиHTMLПередЗаписью(ТекстПисьмаHTMLПриЗаписи,
		ИдентификаторыКартинокПисьма, КартинкиДобавленные, КартинкиУдаляемые);
	
	ТекущийОбъект.Текст = ТекстПисьмаHTMLПриЗаписи;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Для Каждого УдаленнаяКартинка Из КартинкиУдаляемые Цикл
		ОбъектВложение = УдаленнаяКартинка.Значение.ПолучитьОбъект();
		ОбъектВложение.Удалить();
	КонецЦикла;
	КартинкиУдаляемые.Очистить();
	
	// Удалим удаленные вложения
	Для Каждого УдаленноеВложение Из УдаленныеВложения Цикл
		ОбъектВложение = УдаленноеВложение.Значение.ПолучитьОбъект();
		ОбъектВложение.Удалить();
	КонецЦикла;
	УдаленныеВложения.Очистить();
	
	// Создадим вложения для добавленных картинок.
	Для Каждого Строка Из КартинкиДобавленные Цикл
		
		ПараметрыВложения = Строка.Значение;
		
		ПрисоединенныйФайл = CRM_УправлениеЭлектроннойПочтой.ЗаписатьВложениеЭлектронногоПисьмаИзВременногоХранилища(
			ТекущийОбъект.Ссылка, ПараметрыВложения.АдресВоВременномХранилище, ПараметрыВложения);
		
		Если ПрисоединенныйФайл <> Неопределено Тогда
			ПрисоединенныйФайлОбъект = ПрисоединенныйФайл.ПолучитьОбъект();
			ПрисоединенныйФайлОбъект.ИДФайлаЭлектронногоПисьма = ПараметрыВложения.ИДФайлаЭлектронногоПисьма;
			ПрисоединенныйФайлОбъект.Записать();
		КонецЕсли;
		
	КонецЦикла;
	КартинкиДобавленные.Очистить();
	
	ЗаписатьВложения(ТекущийОбъект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаполнитьВложения();
	
	ТекстПисьмаHTML = CRM_Взаимодействия.ВставитьКартинкиВТекстHTML(
		ТекущийОбъект.Текст,
		Объект.Ссылка,
		УникальныйИдентификатор,
		ИдентификаторыКартинокПисьма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ТекстПисьмаПриОткрытии = Элементы.ТекстПисьмаHTML.Документ.body.innerHTML; 
	CRM_ВзаимодействияКлиентСервер.ДобавитьНеобходимыеТэгиHTML(ТекстПисьмаПриОткрытии);
	
	Если Элементы.ПроверкаПравописания.Пометка Тогда
		ПроверяемыйТекст = Элементы.ТекстПисьмаHTML.Документ.documentElement.outerHTML;
		CRM_ПроверкаПравописанияКлиент.ПоказатьОшибки(ЭтотОбъект, Элементы.ТекстПисьмаHTML,
			 ТекстПисьмаHTML,
			 ПроверяемыйТекст);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ПроверкаПравописания_ИзмененТекст" И Источник = ЭтотОбъект Тогда
		ТекстПисьмаHTML = Параметр.Текст;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики(
		"CRM_Статистика.Взаимодействия.НастройкаУчетнойЗаписи.Удобство.КоилчествоНажатийГиперссылкаНастройкаПодписей.КоличествоНажатийКнопкаПлюса.КоличествоНажатийКнопкаАвтотекст.КоличествоНажатийКнопкаНаименование");
	
КонецПроцедуры

#Область РедакторHTML

&НаКлиенте
Процедура ВыполнитьКомандуСписка(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ИмяКоманды = Сред(Элемент.Имя, 8);
	
	CRM_РаботаСHTMLКлиент.ВыполнитьHTMLКоманду(ЭтотОбъект, Элементы.ТекстПисьмаHTML, ИмяКоманды, ВыбранноеЗначение);
	
	ТекущийЭлемент = Элементы.ТекстПисьмаHTML;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстПисьмаHTMLПриИзменении(Элемент)
	
	CRM_РаботаСHTMLКлиент.ПолеHTMLПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстПисьмаHTMLДокументСформирован(Элемент)
	
	ТекстПисьмаПриОткрытии = Элементы.ТекстПисьмаHTML.Документ.body.innerHTML; 
	CRM_ВзаимодействияКлиентСервер.ДобавитьНеобходимыеТэгиHTML(ТекстПисьмаПриОткрытии);
	
	CRM_РаботаСHTMLКлиент.ПолеHTMLДокументСформирован(ЭтотОбъект, Элемент);
	CRM_РаботаСHTMLКлиент.ВосстановитьПоложениеHTML(Элементы.ТекстПисьмаHTML, ТекущаяПозицияHTML);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстПисьмаHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	CRM_РаботаСHTMLКлиент.ПолеHTMLПриНажатии(ЭтотОбъект, Элемент, ДанныеСобытия, СтандартнаяОбработка);
	
	Если Элементы.Найти("МенюГруппаВариантыЗамены") <> Неопределено 
		И ДанныеСобытия.Element.className = "mistake" Тогда
		НомерОшибки = Число(СтрЗаменить(ДанныеСобытия.Element.id, "mistake", ""));
		ТекстПисьмаHTMLПриНажатииНаСервере(НомерОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ТекстПисьмаHTMLПриНажатииНаСервере(НомерОшибки)
	CRM_ПроверкаПравописанияСервер.ДобавитьВариантыЗаменыВКонтекстноеМеню(ЭтотОбъект, НомерОшибки);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбаботчикиКомандФормы

#Область РаботаСВложениями

&НаКлиенте
Процедура ВсеВложения(Команда)
	
	Элементы.ФормаВсеВложения.Пометка	= Не Элементы.ФормаВсеВложения.Пометка;
	ВсеВложенияПометка					= Элементы.ФормаВсеВложения.Пометка;
	
	Если ВсеВложенияПометка Тогда
		Элементы.Вложения.ОтборСтрок = Неопределено;
	Иначе
		Элементы.Вложения.ОтборСтрок = Новый ФиксированнаяСтруктура("ИДФайлаЭлектронногоПисьмаОтбор", "#");
	КонецЕсли;
	
	СформироватьСсылкиВложений();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьВложение(Команда)
	
	СохранитьВложениеВыполнить();
	
КонецПроцедуры

&НаКлиенте
Процедура СвойстваВложения(Команда)
	
	ТекущиеДанные = Элементы.Вложения.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийИндексВКоллекции = Вложения.Индекс(ТекущиеДанные);
	
	Если ТекущиеДанные.Ссылка = Неопределено Тогда
		ДополнительныеПараметры = Новый Структура("ТекущийИндексВКоллекции", ТекущийИндексВКоллекции);
		ОбработчикОповещенияОЗакрытии = Новый ОписаниеОповещения("ВопросОЗаписиФайлаПослеЗакрытия",
			 ЭтотОбъект,
			 ДополнительныеПараметры);
		ТекстВопроса = НСтр("ru = 'Свойства файла доступны только после его записи. Записать?'");
		ПоказатьВопрос(ОбработчикОповещенияОЗакрытии, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ОткрытьСвойстваВложения(ТекущийИндексВКоллекции);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область РедакторHTML

&НаКлиенте
Процедура ВыполнитьКоманду(Команда)
	
	ИмяКоманды = Сред(Команда.Имя, 8);
	CRM_РаботаСHTMLКлиент.ВыполнитьHTMLКоманду(ЭтотОбъект, Элементы.ТекстПисьмаHTML, ИмяКоманды);
	
КонецПроцедуры

&НаКлиенте
Процедура ВставитьИзображение(Команда)
	
	CRM_РаботаСHTMLКлиент.ВставитьИзображение(ЭтотОбъект, Элементы.ТекстПисьмаHTML, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ВставитьКартинкуИзБуфера(Команда)
	
	CRM_РаботаСHTMLКлиент.ВставитьКартинкуИзБуфера(ЭтотОбъект, Элементы.ТекстПисьмаHTML);
	
КонецПроцедуры

&НаКлиенте
Процедура ВставитьГиперссылку(Команда)
	
	CRM_РаботаСHTMLКлиент.ВставитьГиперссылку(ЭтотОбъект, Элементы.ТекстПисьмаHTML);
	
КонецПроцедуры

&НаКлиенте
Процедура ВставитьТаблицу(Команда)
	
	CRM_РаботаСHTMLКлиент.ВставитьТаблицу(ЭтотОбъект, Элементы.ТекстПисьмаHTML);
	
КонецПроцедуры

&НаКлиенте
Процедура УвеличитьШрифт(Команда)
	
	CRM_РаботаСHTMLКлиент.УвеличитьШрифт(ЭтотОбъект, Элементы.ТекстПисьмаHTML);
	
КонецПроцедуры

&НаКлиенте
Процедура УменьшитьШрифт(Команда)
	
	CRM_РаботаСHTMLКлиент.УменьшитьШрифт(ЭтотОбъект, Элементы.ТекстПисьмаHTML);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьШрифт(Команда)
	
	CRM_РаботаСHTMLКлиент.ИзменитьШрифт(ЭтотОбъект, Элементы.ТекстПисьмаHTML);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборЦвета(Команда)
	
	ИмяКоманды = Сред(Команда.Имя, 8);
	CRM_РаботаСHTMLКлиент.ВыборЦвета(ЭтотОбъект, Элементы.ТекстПисьмаHTML, ИмяКоманды);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьДопФорматирование(Команда)
	Элементы.ПоказатьДопФорматирование.Пометка = НЕ Элементы.ПоказатьДопФорматирование.Пометка;
	Элементы.ГруппаДополнительное.Видимость = Элементы.ПоказатьДопФорматирование.Пометка;
КонецПроцедуры

#КонецОбласти

#Область Автотекст

&НаКлиенте
Процедура Подключаемый_ВставитьТэг(Команда)
	
	CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики(
		"CRM_Статистика.Взаимодействия.НастройкаУчетнойЗаписи.Удобство.КоилчествоНажатийГиперссылкаНастройкаПодписей.КоличествоНажатийКнопкаПлюса.КоличествоНажатийКнопкаАвтотекст");
	
	ИмяКоманды = Команда.Имя;
	МассивСтрок = ТаблицаАвтотекста.НайтиСтроки(Новый Структура("ИмяКоманды", ИмяКоманды));
	Тэг = МассивСтрок[0].Тэг;
	
	Если Лев(ИмяКоманды, 4) = "Тема" Тогда
		Объект.Тема = Объект.Тема + " " + Тэг;
	Иначе
		Кнопка = "insertText";
		Если Элементы.ТекстПисьмаHTML.Документ.queryCommandSupported(Кнопка) Тогда
			Элементы.ТекстПисьмаHTML.Документ.execCommand(Кнопка, Ложь, Тэг);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СоздатьТег(Команда)
	
	CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики(
		"CRM_Статистика.Взаимодействия.НастройкаУчетнойЗаписи.Удобство.КоилчествоНажатийГиперссылкаНастройкаПодписей.КоличествоНажатийКнопкаПлюса.КоличествоНажатийКнопкаАвтотекст.КоличествоНажатийКнопкаДобавитьАвтотекст");
	
	ОписаниеОповещения = Новый ОписаниеОповещения("Подключаемый_СоздатьТегЗавершение", ЭтотОбъект);
	CRM_АвтотекстКлиент.СоздатьТегАвтотекста(ЭтотОбъект, Команда, ОбъектыАвтотекста, , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СоздатьТегЗавершение(ТегАвтотекста, ДополнительныеПараметры) Экспорт
	
	ИмяКоманды = ДобавитьКомандуАвтотекста(ТегАвтотекста);
	Команда = Команды.Найти(ИмяКоманды);
	Если Команда <> Неопределено Тогда
		Подключаемый_ВставитьТэг(Команда);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПроверкиПравописания(Команда)
	CRM_ПроверкаПравописанияКлиент.ВыполнитьКомандуПроверкиПравописания(ЭтотОбъект, Элементы.ТекстПисьмаHTML, Команда.Имя);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЗаменитьНаВариантНажатие(Команда)
	CRM_ПроверкаПравописанияКлиент.ЗаменитьНаВариант(ЭтотОбъект, Элементы.ТекстПисьмаHTML, Команда.Имя);
КонецПроцедуры

#КонецОбласти

#Область ПроверкаПравописания

&НаКлиенте
// Процедура - обработчик команды формы "ПроверкаПравописани".
//
// Параметры:
//  Команда  - выполняемая команда
//
Процедура ПроверкаПравописания(Команда = Неопределено)
	
	Если НЕ CRM_ЛицензированиеЭкспортныеМетоды.ПодсистемаCRMИспользуется() Тогда
		CRM_ЛицензированиеЭкспортныеМетоды.ВывестиУведомлениеОНедоступности(НСтр("ru = 'проверку орфографии'"));
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверкаПравописанияПродолжение", ЭтотОбъект);
	CRM_ЛицензированиеКлиент.ПроверитьПодключениеОтраслевыхСервисовИОткрыть(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаПравописанияПродолжение(Результат, ДопПараметр) Экспорт
	
	Элементы.ПроверкаПравописания.Пометка = Не Элементы.ПроверкаПравописания.Пометка;
	Элементы.CRM_ГруппаПроверкаПравописания.Видимость = Элементы.ПроверкаПравописания.Пометка;
	
	Если Элементы.ПроверкаПравописания.Пометка Тогда
		CRM_ПроверкаПравописанияКлиент.СкрытьОшибки(Элементы.ТекстПисьмаHTML);
		ПроверяемыйТекст = CRM_РаботаСHTMLКлиент.ТекстВПолеHTML(Элементы.ТекстПисьмаHTML);
		ПроверкаПравописанияНаСервере(ПроверяемыйТекст);
		ТекстПисьмаHTML = ПроверяемыйТекст;
		CRM_ПроверкаПравописанияКлиент.ПоказатьОшибки(ЭтотОбъект, Элементы.ТекстПисьмаHTML,
			 ТекстПисьмаHTML,
			 ПроверяемыйТекст);
	
	Иначе
		ВыделенныйТекст = Элементы.ТекстПисьмаHTML.Документ.getSelection();
		НомерТекущейОшибки = ЭтотОбъект["CRM_НомерТекущейОшибки"];
		Если ВыделенныйТекст.type <> "None" 
			И НомерТекущейОшибки < ЭтотОбъект["CRM_СписокОшибок"].Количество()
			И ЭтотОбъект["CRM_СписокОшибок"].Получить(НомерТекущейОшибки).Значение.word
			= ВыделенныйТекст.anchorNode.textContent Тогда
			Элементы.ТекстПисьмаHTML.Документ.getSelection().empty();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаПравописанияНаСервере(ПроверяемыйТекст)
	CRM_ПроверкаПравописанияСервер.ПроверитьПравописание(ЭтотОбъект, Элементы.ТекстПисьмаHTML,
		 ПроверяемыйТекст,
		 Перечисления.ТипыТекстовЭлектронныхПисем.HTML);
КонецПроцедуры

#КонецОбласти

#Область ЗагрузкаИзФайла

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
	
	Фильтр = НСтр("ru = 'Документ HTML (*.html;*.htm)|*.html;*.htm'");
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Фильтр = Фильтр;
	
	ОповещениеЗавершения = Новый ОписаниеОповещения("ЗагрузитьИзФайлаЗавершение", ЭтотОбъект);
	
	ФайловаяСистемаКлиент.ПоказатьДиалогВыбора(ОповещениеЗавершения, ДиалогВыбораФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайлаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Или Результат = "" Тогда
		Возврат;
	КонецЕсли;
	
	ПолноеИмяФайла = Результат[0];
	
	РазделительПути = ПолучитьРазделительПути();
	
	Файл = Новый Файл(ПолноеИмяФайла);
	КаталогФайла = Файл.Путь;
	Если Не СтрЗаканчиваетсяНа(КаталогФайла, РазделительПути) Тогда
		КаталогФайла = КаталогФайла + РазделительПути;
	КонецЕсли;
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ТекстовыйДокумент", ТекстовыйДокумент);
	ДополнительныеПараметры.Вставить("КаталогФайла", КаталогФайла);
	ДополнительныеПараметры.Вставить("РазделительПути", РазделительПути);
	Оповещение = Новый ОписаниеОповещения("ТекстовыйДокументЧтениеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ТекстовыйДокумент.НачатьЧтение(Оповещение, ПолноеИмяФайла, КодировкаТекста.UTF8);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстовыйДокументЧтениеЗавершение(ДополнительныеПараметры) Экспорт
	
	ТекстПисьмаHTML = ДополнительныеПараметры.ТекстовыйДокумент.ПолучитьТекст();
	ТекстПисьмаHTML = ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыXML(ТекстПисьмаHTML, " ");
	
	ПутиККартинкам = ПутиККартинкамHTML(ТекстПисьмаHTML);
	Для Каждого ТекущийПуть Из ПутиККартинкам Цикл
		
		ПутьККартинке = ТекущийПуть;
		ФайлКартинка = Новый Файл(ПутьККартинке);
		
		ДополнительныеПараметрыПроверки = Новый Структура;
		ДополнительныеПараметрыПроверки.Вставить("ПутьККартинке", ПутьККартинке);
		ДополнительныеПараметрыПроверки.Вставить("ТекущийПуть", ТекущийПуть);
		ДополнительныеПараметрыПроверки.Вставить("КаталогФайла", ДополнительныеПараметры.КаталогФайла);
		ДополнительныеПараметрыПроверки.Вставить("РазделительПути", ДополнительныеПараметры.РазделительПути);
		Оповещение = Новый ОписаниеОповещения("ПроверкаСуществованияФайлаПродолжение", ЭтотОбъект,
			 ДополнительныеПараметрыПроверки);
		ФайлКартинка.НачатьПроверкуСуществования(Оповещение);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаСуществованияФайлаПродолжение(Существует, ДополнительныеПараметры) Экспорт
	
	Если Существует Тогда
		
		Если СтрНайти(ВРег(ДополнительныеПараметры.ПутьККартинке), ВРег("file://")) = 0 Тогда
			ТекстПисьмаHTML = СтрЗаменить(ТекстПисьмаHTML, ДополнительныеПараметры.ТекущийПуть, "file://" 
				+ ДополнительныеПараметры.ПутьККартинке);
		КонецЕсли;
		
	Иначе
		
		Если СтрНачинаетсяС(ДополнительныеПараметры.ПутьККартинке, ДополнительныеПараметры.РазделительПути) Тогда
			ДополнительныеПараметры.ПутьККартинке = Сред(ДополнительныеПараметры.ПутьККартинке, 2);
		КонецЕсли;
		
		ДополнительныеПараметры.ПутьККартинке = ДополнительныеПараметры.КаталогФайла + ДополнительныеПараметры.ПутьККартинке;
		ФайлКартинка = Новый Файл(ДополнительныеПараметры.ПутьККартинке);
		
		ДополнительныеПараметрыПроверки = Новый Структура;
		ДополнительныеПараметрыПроверки.Вставить("ПутьККартинке", ДополнительныеПараметры.ПутьККартинке);
		ДополнительныеПараметрыПроверки.Вставить("ТекущийПуть", ДополнительныеПараметры.ТекущийПуть);
		
		Оповещение = Новый ОписаниеОповещения("ПроверкаСуществованияФайлаЗавершение", ЭтотОбъект,
			 ДополнительныеПараметрыПроверки);
		ФайлКартинка.НачатьПроверкуСуществования(Оповещение);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаСуществованияФайлаЗавершение(Существует, ДополнительныеПараметры) Экспорт
	
	Если Существует Тогда
		ТекстПисьмаHTML = СтрЗаменить(ТекстПисьмаHTML, ДополнительныеПараметры.ТекущийПуть, "file://" 
			+ ДополнительныеПараметры.ПутьККартинке);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриСозданииИПриЧтенииНаСервере()
	
	ЗаполнитьВложения(Параметры);
	
КонецПроцедуры

#Область РаботаСВложениями

&НаКлиенте
Процедура СсылкиВложенийНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	НайденныеСтроки = Вложения.НайтиСтроки(Новый Структура("ИДФайлаЭлектронногоПисьма", "#"));
	Если НайденныеСтроки.Количество() = 0 Тогда
		ДобавитьВложениеВыполнить();
	КонецЕсли;
	
	ПереключитьРежимРаботыСВложениями();
	
КонецПроцедуры

#Область ОбработчикиСобытийЭлементовТаблицыФормыВложения

&НаКлиенте
Процедура ВложенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьВложениеВыполнить();
	
КонецПроцедуры

&НаКлиенте
Процедура ВложенияПриАктивизацииЯчейки(Элемент)
	
	ТекущиеДанные = Элементы.Вложения.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.СвойстваВложенияМеню.Доступность = (ТекущиеДанные.Расположение <> 5);
	Элементы.СвойстваВложения.Доступность                        = (ТекущиеДанные.Расположение <> 5);
	
КонецПроцедуры

 &НаКлиенте
Процедура ВложенияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	ДобавитьВложениеВыполнить();
	
КонецПроцедуры

&НаКлиенте
Процедура ВложенияПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	УдалитьВложениеВыполнить();
	
КонецПроцедуры

&НаКлиенте
Процедура ВложенияПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	МассивФайлов = Новый Массив;
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Файл") Тогда
		
		МассивФайлов.Добавить(ПараметрыПеретаскивания.Значение);
		
	ИначеЕсли ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Массив") Тогда
		
		Если ПараметрыПеретаскивания.Значение.Количество() >= 1
			И ТипЗнч(ПараметрыПеретаскивания.Значение[0]) = Тип("Файл") Тогда
			
			Для Каждого ФайлПринятый Из ПараметрыПеретаскивания.Значение Цикл
				Если ТипЗнч(ФайлПринятый) = Тип("Файл") Тогда
					МассивФайлов.Добавить(ФайлПринятый);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
	Для Каждого ВыбранныйФайл Из МассивФайлов Цикл
		
		ДополнительныеПараметры = Новый Структура("ВыбранныйФайл", ВыбранныйФайл);
		ОписаниеОповещение = Новый ОписаниеОповещения("ПроверкаЭтоФайлПослеЗавершения", ЭтотОбъект, ДополнительныеПараметры);
		ВыбранныйФайл.НачатьПроверкуЭтоФайл(ОписаниеОповещение);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ЗаполнитьВложения(ПереданныеПараметры = Неопределено)
	
	Если Объект.Ссылка.Пустая() И ПереданныеПараметры <> Неопределено Тогда
		Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			
			ТабВложения = CRM_УправлениеЭлектроннойПочтой.ПолучитьВложенияЭлектронногоПисьма(ПереданныеПараметры.ЗначениеКопирования,
				 Истина);
			Для Каждого СтрокаТаблицыВложений Из ТабВложения Цикл
				Если ПустаяСтрока(СтрокаТаблицыВложений.ИДФайлаЭлектронногоПисьма) Тогда
					НоваяСтрока = Вложения.Добавить();
					НоваяСтрока.Ссылка              = СтрокаТаблицыВложений.Ссылка;
					Если ТранслитерироватьИменаФайловПриДобавленииВложений Тогда
						НоваяСтрока.ИмяФайла = СтроковыеФункции.СтрокаЛатиницей(СтрокаТаблицыВложений.ИмяФайла);
					Иначе
						НоваяСтрока.ИмяФайла = СтрокаТаблицыВложений.ИмяФайла;
					КонецЕсли;
					НоваяСтрока.ИндексКартинки      = СтрокаТаблицыВложений.ИндексКартинки;
					НоваяСтрока.Размер              = СтрокаТаблицыВложений.Размер;
					НоваяСтрока.РазмерПредставление = СтрокаТаблицыВложений.РазмерПредставление;
					НоваяСтрока.Расположение        = 1;
					НоваяСтрока.ИДФайлаЭлектронногоПисьмаОтбор = "#";
					НоваяСтрока.ИДФайлаЭлектронногоПисьма      = "#";
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
	Иначе
		
		Вложения.Очистить();
		ТабВложения = CRM_УправлениеЭлектроннойПочтой.ПолучитьВложенияЭлектронногоПисьма(Объект.Ссылка, Истина);
		Для Каждого СтрокаТаблицыВложений Из ТабВложения Цикл
			
			ИДФайлаЭлектронногоПисьма = СтрокаТаблицыВложений.ИДФайлаЭлектронногоПисьма;
			Если ПустаяСтрока(ИДФайлаЭлектронногоПисьма) Тогда
				ИДФайлаЭлектронногоПисьма = "#";
			КонецЕсли;
			
			НоваяСтрока = Вложения.Добавить();
			НоваяСтрока.Ссылка              = СтрокаТаблицыВложений.Ссылка;
			Если ТранслитерироватьИменаФайловПриДобавленииВложений Тогда
				НоваяСтрока.ИмяФайла = СтроковыеФункции.СтрокаЛатиницей(СтрокаТаблицыВложений.ИмяФайла);
			Иначе
				НоваяСтрока.ИмяФайла = СтрокаТаблицыВложений.ИмяФайла;
			КонецЕсли;
			НоваяСтрока.ИндексКартинки      = СтрокаТаблицыВложений.ИндексКартинки;
			НоваяСтрока.Размер              = СтрокаТаблицыВложений.Размер;
			НоваяСтрока.РазмерПредставление = СтрокаТаблицыВложений.РазмерПредставление;
			НоваяСтрока.ПодписанЭП          = СтрокаТаблицыВложений.ПодписанЭП;
			НоваяСтрока.Расположение        = 0;
			НоваяСтрока.ИДФайлаЭлектронногоПисьмаОтбор = ИДФайлаЭлектронногоПисьма;
			НоваяСтрока.ИДФайлаЭлектронногоПисьма      = ИДФайлаЭлектронногоПисьма;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Вложения.Сортировать("ИмяФайла");
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьВложения(Письмо)
	
	Для Каждого СтрокаТаблицыВложений Из Вложения Цикл
		
		Размер = 0;
		ИмяФайла = СтрокаТаблицыВложений.ИмяФайла;
		
		Если СтрокаТаблицыВложений.Расположение = 4 Тогда
			// из временного хранилища
			
			ПараметрыВложения = Новый Структура;
			ПараметрыВложения.Вставить("ИмяФайла", ИмяФайла);
			ПараметрыВложения.Вставить("Размер", Размер);
			
			CRM_УправлениеЭлектроннойПочтой.ЗаписатьВложениеЭлектронногоПисьмаИзВременногоХранилища(
			Письмо, СтрокаТаблицыВложений.ИмяФайлаНаКомпьютере, ПараметрыВложения);
			
		ИначеЕсли СтрокаТаблицыВложений.Расположение = 3 Тогда
			// из файла на сервере
			
		ИначеЕсли СтрокаТаблицыВложений.Расположение = 2 Тогда
			// из файла на компьютере
			
			ДвоичныеДанные = Новый ДвоичныеДанные(СтрокаТаблицыВложений.ИмяФайлаНаКомпьютере);
			АдресВременногоХранилищаФайла = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
			
			ПараметрыВложения = Новый Структура;
			ПараметрыВложения.Вставить("ИмяФайла", ИмяФайла);
			ПараметрыВложения.Вставить("Размер", Размер);
			
			CRM_УправлениеЭлектроннойПочтой.ЗаписатьВложениеЭлектронногоПисьмаИзВременногоХранилища(
			Письмо, АдресВременногоХранилищаФайла, ПараметрыВложения);
			
		ИначеЕсли СтрокаТаблицыВложений.Расположение = 1 Тогда
			
			CRM_УправлениеЭлектроннойПочтой.ЗаписатьВложениеЭлектронногоПисьмаСкопировавВложениеДругогоПисьма(
			Письмо, СтрокаТаблицыВложений.Ссылка, УникальныйИдентификатор);
			
		ИначеЕсли СтрокаТаблицыВложений.Расположение = 0 Тогда
			// перезаписать вложение
			
		КонецЕсли;
		
		СтрокаТаблицыВложений.Расположение = 0;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьСсылкиВложений()
	
	НайденныеСтроки = Вложения.НайтиСтроки(Новый Структура("ИДФайлаЭлектронногоПисьма", "#"));
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		СсылкиВложений = НСтр("ru='Добавить файл';en='Add file'");
	Иначе
		СсылкиВложений = "";
		Для Каждого Строка Из НайденныеСтроки Цикл
			СсылкиВложений = СсылкиВложений + "; " + Строка.ИмяФайла + "(" + Строка.РазмерПредставление + ")";
		КонецЦикла;
		СсылкиВложений = Сред(СсылкиВложений, 3);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПереключитьРежимРаботыСВложениями()
	
	ОтображатьТаблицуВложений = Не ОтображатьТаблицуВложений;
	CRM_ОбщегоНазначенияСервер.ХранилищеОбщихНастроекСохранить("CRM_Подписи",
		"ОтображатьТаблицуВложений", ОтображатьТаблицуВложений);
	
	Элементы.ГруппаВложения.Видимость = ОтображатьТаблицуВложений;
	Элементы.СсылкиВложений.Видимость = Не ОтображатьТаблицуВложений;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВложение()
	
	ОткрытьВложениеВыполнить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВложениеВыполнить(ТекущиеДанные = Неопределено)
	
	Если ТекущиеДанные = Неопределено Тогда
		ТекущиеДанные = Элементы.Вложения.ТекущиеДанные;
		Если ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если (ТекущиеДанные.Расположение = 0) ИЛИ (ТекущиеДанные.Расположение = 1) Тогда
		
		Если ВзаимодействияКлиентСервер.ЭтоФайлПисьмо(ТекущиеДанные.ИмяФайла) Тогда
			
			ВзаимодействияКлиент.ОткрытьВложениеПисьмо(ТекущиеДанные.Ссылка, ПараметрыПисьмаВложения(), ЭтотОбъект);
			
		Иначе
			
			ДляРедактирования = Истина;
			
			УправлениеЭлектроннойПочтойКлиент.ОткрытьВложение(ТекущиеДанные.Ссылка,
			                                                  ЭтотОбъект,
			                                                  ДляРедактирования);
			
			Если ДляРедактирования Тогда
				ТекущиеДанные.Редактируется = Истина;
				Модифицированность = Истина;
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли ТекущиеДанные.Расположение = 2 Тогда
		
		ПутьКФайлу = ТекущиеДанные.ИмяФайлаНаКомпьютере;
			
		Если ВзаимодействияКлиентСервер.ЭтоФайлПисьмо(ТекущиеДанные.ИмяФайла) Тогда
			
			Попытка
				
				Данные = Новый ДвоичныеДанные(ТекущиеДанные.ИмяФайлаНаКомпьютере);
				
				ВзаимодействияКлиент.ОткрытьВложениеПисьмо(ПоместитьВоВременноеХранилище(Данные, УникальныйИдентификатор), 
				                                           ПараметрыПисьмаВложения(),
				                                           ЭтотОбъект);
				
			Исключение
				ФайловаяСистемаКлиент.ОткрытьФайл(ПутьКФайлу);
			КонецПопытки;
		Иначе
			ФайловаяСистемаКлиент.ОткрытьФайл(ПутьКФайлу);
		КонецЕсли;
		
	ИначеЕсли ТекущиеДанные.Расположение = 4 Тогда
		
		ФайловаяСистемаКлиент.ОткрытьФайл(ТекущиеДанные.ИмяФайлаНаКомпьютере, , ТекущиеДанные.ИмяФайла);
		
	ИначеЕсли ТекущиеДанные.Расположение = 5 Тогда
		
		ПараметрыВложения = ВзаимодействияКлиент.ПараметрыПисьмаВложения();
		ПараметрыВложения.ДатаПисьмаОснования = ?(ЗначениеЗаполнено(Объект.ДатаОтправления),
			 Объект.ДатаОтправления ,
			 Объект.Дата);
		ПараметрыВложения.ПисьмоОснование     = Объект.Ссылка;
		ПараметрыВложения.ТемаПисьмаОснования = Объект.Тема;
		
		ВзаимодействияКлиент.ОткрытьВложениеПисьмо(ТекущиеДанные.Письмо,
		                                           ПараметрыПисьмаВложения(),
		                                           ЭтотОбъект);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВложениеВыполнить()
	
	ОписаниеОповещение = Новый ОписаниеОповещения("ДиалогВыбораФайловПослеВыбора", ЭтотОбъект);
	ФайловаяСистемаКлиент.ЗагрузитьФайлы(ОписаниеОповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДиалогВыбораФайловПослеВыбора(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДобавленоФайлов = 0;
	Для Каждого ВыбранныйФайл Из ВыбранныеФайлы Цикл
		
		ДанныеФайла = ПолучитьИзВременногоХранилища(ВыбранныйФайл.Хранение);
		Размер = ДанныеФайла.Размер();
		Расширение = ОбщегоНазначенияКлиентСервер.ПолучитьРасширениеИмениФайла(ВыбранныйФайл.ИмяФайла);
		
		РезультатПроверки = CRM_ВзаимодействияВызовСервера.ПроверитьВозможностьЗагрузкиВложения(ВыбранныйФайл.ИмяФайла,
			 Размер,
			 Расширение);
		Если РезультатПроверки.Ошибка Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(РезультатПроверки.ОписаниеОшибки);
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = Вложения.Добавить();
		
		#Если ВебКлиент Тогда
			НоваяСтрока.Расположение = 4;
			НоваяСтрока.ИмяФайлаНаКомпьютере = ПоместитьВоВременноеХранилище(ДанныеФайла);
		#Иначе
			НоваяСтрока.Расположение = 2;
			НоваяСтрока.ИмяФайлаНаКомпьютере = ВыбранныйФайл.ПолноеИмя;
		#КонецЕсли
		
		Если ТранслитерироватьИменаФайловПриДобавленииВложений Тогда
			НоваяСтрока.ИмяФайла = СтроковыеФункцииКлиент.СтрокаЛатиницей(ВыбранныйФайл.ИмяФайла);
		Иначе
			НоваяСтрока.ИмяФайла = ВыбранныйФайл.ИмяФайла;
		КонецЕсли;
		
		НоваяСтрока.ИндексКартинки      = РаботаСФайламиСлужебныйКлиентСервер.ИндексПиктограммыФайла(Расширение);
		НоваяСтрока.РазмерПредставление = CRM_ВзаимодействияКлиентСервер.ПолучитьСтроковоеПредставлениеРазмераФайла(Размер); 
		
		НоваяСтрока.ИДФайлаЭлектронногоПисьмаОтбор = "#";
		НоваяСтрока.ИДФайлаЭлектронногоПисьма = "#";
		
		ДобавленоФайлов = ДобавленоФайлов + 1;
		
	КонецЦикла;
	
	Если ДобавленоФайлов > 0 Тогда
		Элементы.Вложения.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
		Модифицированность = Истина;
		ОбновитьОтображениеДанных();
		СформироватьСсылкиВложений();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВложениеВыполнить(ТекущиеДанные = Неопределено)
	
	Если ТекущиеДанные = Неопределено Тогда
		ТекущиеДанные = Элементы.Вложения.ТекущиеДанные;
		Если ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ТекущиеДанные.Расположение = 0 Тогда
		УдаленныеВложения.Добавить(ТекущиеДанные.Ссылка);
	КонецЕсли;
	
	Индекс = Вложения.Индекс(ТекущиеДанные);
	Вложения.Удалить(Индекс);
	
	Модифицированность = Истина;
	ОбновитьОтображениеДанных();
	СформироватьСсылкиВложений();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаЭтоФайлПослеЗавершения(ЭтоФайл, ДополнительныеПараметры) Экспорт

	Если НЕ ЭтоФайл Тогда
		Возврат;
	КонецЕсли;
	
	Файл = ДополнительныеПараметры.ВыбранныйФайл;
	Размер = Файл.Размер();
	Расширение = ОбщегоНазначенияКлиентСервер.ПолучитьРасширениеИмениФайла(Файл.Имя);
	
	РезультатПроверки = CRM_ВзаимодействияВызовСервера.ПроверитьВозможностьЗагрузкиВложения(Файл.Имя, Размер, Расширение);
	Если РезультатПроверки.Ошибка Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(РезультатПроверки.ОписаниеОшибки);
		Возврат;
	КонецЕсли;
	
	НоваяСтрока = Вложения.Добавить();
	НоваяСтрока.Расположение = 2;
	НоваяСтрока.ИмяФайлаНаКомпьютере = Файл.ПолноеИмя;
	
	Если ТранслитерироватьИменаФайловПриДобавленииВложений Тогда
		НоваяСтрока.ИмяФайла = СтроковыеФункцииКлиент.СтрокаЛатиницей(Файл.Имя);
	Иначе
		НоваяСтрока.ИмяФайла = Файл.Имя;
	КонецЕсли;
	
	НоваяСтрока.ИндексКартинки      = РаботаСФайламиСлужебныйКлиентСервер.ИндексПиктограммыФайла(Расширение);
	НоваяСтрока.РазмерПредставление = CRM_ВзаимодействияКлиентСервер.ПолучитьСтроковоеПредставлениеРазмераФайла(Размер); 
	
	НоваяСтрока.ИДФайлаЭлектронногоПисьмаОтбор = "#";
	НоваяСтрока.ИДФайлаЭлектронногоПисьма = "#";
	
	Модифицированность = Истина;
	ОбновитьОтображениеДанных();
	СформироватьСсылкиВложений();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСвойстваВложения(ТекущийИндексВКоллекции)
	
	ТекущиеДанные = Вложения.Получить(ТекущийИндексВКоллекции);
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Элементы.Вложения.ТекущаяСтрока = ТекущиеДанные.ПолучитьИдентификатор();
		
	ФайлДоступенДляРедактирования = Истина;
	ПараметрыФормы = Новый Структура("ПрисоединенныйФайл, ТолькоПросмотр", 
		ТекущиеДанные.Ссылка, НЕ ФайлДоступенДляРедактирования);
	ОткрытьФорму("Обработка.РаботаСФайлами.Форма.ПрисоединенныйФайл", ПараметрыФормы, , ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Функция ПараметрыПисьмаВложения()
	
	ПараметрыВложения = ВзаимодействияКлиент.ПараметрыПисьмаВложения();
	ПараметрыВложения.ДатаПисьмаОснования = ?(ЗначениеЗаполнено(Объект.ДатаОтправления),
		 Объект.ДатаОтправления ,
		 Объект.Дата);
	ПараметрыВложения.ПисьмоОснование     = Объект.Ссылка;
	ПараметрыВложения.ТемаПисьмаОснования = Объект.Тема;
	
	Возврат ПараметрыВложения;
	
КонецФункции

&НаКлиенте
Процедура СохранитьВложениеВыполнить(ТекущиеДанные = Неопределено)
	
	Если ТекущиеДанные = Неопределено Тогда
		ТекущиеДанные = Элементы.Вложения.ТекущиеДанные;
		Если ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если (ТекущиеДанные.Расположение = 0) ИЛИ (ТекущиеДанные.Расположение = 1) Тогда
		CRM_УправлениеЭлектроннойПочтойКлиент.СохранитьВложение(ТекущиеДанные.Ссылка, УникальныйИдентификатор);
	ИначеЕсли ТекущиеДанные.Расположение = 2 Тогда
		
	ИначеЕсли ТекущиеДанные.Расположение = 4 Тогда
		ФайлВложения = Новый Файл(ТекущиеДанные.ИмяФайла);
		РасширениеВложения = ?(ПустаяСтрока(ФайлВложения.Расширение), ФайлВложения.Расширение,
			 Прав(ФайлВложения.Расширение,
			 СтрДлина(ФайлВложения.Расширение) - 1));
		Если РасширениеВложения = "EML" Тогда
			ПоказатьПредупреждение(, НСтр("ru='Это вложение не может быть сохранено.'"));
			Возврат;
		КонецЕсли;
		ОбщегоНазначенияКлиент.ПроверитьРасширениеРаботыСФайламиПодключено(Неопределено);
		СтруктураДанных = Новый Структура("РасширениеВложения, текДанные", РасширениеВложения, ТекущиеДанные);
		ОповещениеНовое = Новый ОписаниеОповещения("СохранитьВложениеЗавершение", ЭтотОбъект, СтруктураДанных);
		НачатьПодключениеРасширенияРаботыСФайлами(ОповещениеНовое);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьВложениеЗавершение(Подключено, ДополнительныеПараметры) Экспорт
	
	РасширениеВложения = ДополнительныеПараметры.РасширениеВложения;
	текДанные = ДополнительныеПараметры.текДанные;
		
	Если Подключено Тогда
		ВыборФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
		ВыборФайла.МножественныйВыбор = Ложь;
		ВыборФайла.ПолноеИмяФайла = текДанные.ИмяФайла;
		ВыборФайла.Расширение = РасширениеВложения;
		ВыборФайла.Фильтр = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='Все файлы (*.%1)|*.%1'"), РасширениеВложения, РасширениеВложения);
		СтруктураДанных = Новый Структура("ВыборФайла, текДанные", ВыборФайла, текДанные);
		ОповещениеНовое = Новый ОписаниеОповещения("СохранитьВложениеЗавершениеВыборФайла", ЭтотОбъект, СтруктураДанных);
		ВыборФайла.Показать(ОповещениеНовое);
	Иначе
		#Если ВебКлиент Тогда
			ПолучитьФайл(текДанные.ИмяФайлаНаКомпьютере, текДанные.ИмяФайла, Истина);
		#КонецЕсли
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СохранитьВложениеЗавершениеВыборФайла(ВыбранныеФайлы, ДополнительныеПараметры1) Экспорт
	
	ВыборФайла = ДополнительныеПараметры1.ВыборФайла;
	текДанные = ДополнительныеПараметры1.текДанные;
		
	Если (ВыбранныеФайлы <> Неопределено) Тогда
		ТекстПояснения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='Выполняется сохранение файла ""%1"" ...
		         |Пожалуйста, подождите.'"), текДанные.ИмяФайла);
		Состояние(ТекстПояснения);
		ПолучаемыйФайл = Новый ОписаниеПередаваемогоФайла(ВыборФайла.ПолноеИмяФайла, текДанные.ИмяФайлаНаКомпьютере);
		ПолучаемыеФайлы = Новый Массив;
		ПолучаемыеФайлы.Добавить(ПолучаемыйФайл);
		ПолученныеФайлы = Новый Массив;
		СтруктураДанных = Новый Структура("ВыборФайла", ВыборФайла);
		ОповещениеНовое = Новый ОписаниеОповещения("СохранитьВложениеЗавершениеПолучитьФайлы", ЭтотОбъект, СтруктураДанных);
		НачатьПолучениеФайлов(ОповещениеНовое, ПолучаемыеФайлы, ВыборФайла, Ложь);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СохранитьВложениеЗавершениеПолучитьФайлы(ПолученныеФайлы, ДополнительныеПараметры) Экспорт
	
	ВыборФайла = ДополнительныеПараметры.ВыборФайла;
		
	Если ПолученныеФайлы.Количество() > 0 Тогда
		Состояние(НСтр("ru='Файл успешно сохранен'"), , ВыборФайла.ПолноеИмяФайла);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область Автотекст

&НаСервере
Функция ДобавитьКомандуАвтотекста(ТегАвтотекста)
	
	Возврат CRM_АвтотекстПереопределяемый.ДобавитьКомандуАвтотекста(ЭтотОбъект, ТегАвтотекста,
		 Ложь,
		 Истина);
	
КонецФункции

&НаСервере
Процедура СоздатьЭлементыАвтотекста()
	
	ТаблицаАвтотекстаЗнач = РеквизитФормыВЗначение("ТаблицаАвтотекста");
	ИдентификаторМДПодпись = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Справочник.CRM_Подписи");
	ОбъектыАвтотекста.Добавить(ИдентификаторМДПодпись);
	CRM_АвтотекстПереопределяемый.СформироватьСписокАвтотекста(ТаблицаАвтотекстаЗнач, ИдентификаторМДПодпись);
	НачальныйНомер = ТаблицаАвтотекстаЗнач.Количество();
	
	CRM_АвтотекстПереопределяемый.СформироватьСписокАвтотекста(ТаблицаАвтотекстаЗнач, ИдентификаторМДПодпись, , Истина);
	ЗначениеВРеквизитФормы(ТаблицаАвтотекстаЗнач, "ТаблицаАвтотекста");
	
	CRM_АвтотекстПереопределяемый.ЗаполнитьКоманднуюПанельФорматированногоДокумента(ЭтотОбъект, Истина);
	
КонецПроцедуры

#КонецОбласти

&НаСервереБезКонтекста
Функция ПутиККартинкамHTML(Знач Текст)
	
	ПутиККартинкам = Новый Массив;
	
	ЧтениеHTML = Новый ЧтениеHTML;
	
	ЧтениеHTML.УстановитьСтроку(Текст);
	ПостроительDOM = Новый ПостроительDOM;
	ДокументHTML = ПостроительDOM.Прочитать(ЧтениеHTML);
	
	Для Каждого Картинка Из ДокументHTML.Картинки Цикл
		Путь = Картинка.Атрибуты.ПолучитьИменованныйЭлемент("src").Значение;
		ПутиККартинкам.Добавить(Путь);
	КонецЦикла;
	
	Возврат ОбщегоНазначенияКлиентСервер.СвернутьМассив(ПутиККартинкам);
	
КонецФункции

#КонецОбласти