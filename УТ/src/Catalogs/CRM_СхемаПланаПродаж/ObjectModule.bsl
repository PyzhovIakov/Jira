#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Разрезы должны быть уникальны
	ТаблицаПроверки = ЭлементыСхемы.Выгрузить(, "Разрез");
	ТаблицаПроверки.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	ТаблицаПроверки.ЗаполнитьЗначения(1, "Количество");
	
	ТаблицаПроверки.Свернуть("Разрез", "Количество");
	
	МассивСовпадающихРазрезов = Новый Массив;
	Для Каждого СтрТаблицаПроверки Из ТаблицаПроверки Цикл
		Если Справочники.CRM_СхемаПланаПродаж.ЭтоТипИерархии(СтрТаблицаПроверки.Разрез) Тогда
			Продолжить;
		КонецЕсли;
		Если СтрТаблицаПроверки.Количество > 1 Тогда
			МассивСовпадающихРазрезов.Добавить(СтрТаблицаПроверки.Разрез);
		КонецЕсли;
	КонецЦикла;
		
	Если МассивСовпадающихРазрезов.Количество() > 0 Тогда
		
		ШаблонСообщения = НСтр("ru = 'Найдены совпадающие разрезы: %1'");
		ОбщегоНазначения.СообщитьПользователю(
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения,
				 СтрСоединить(МассивСовпадающихРазрезов, ",
				| ")),
																	, , , Отказ);
	КонецЕсли;
	
	// У всех строк должен быть заполнен идентификатор уровня
	Если ЭлементыСхемы.НайтиСтроки(Новый Структура("ИдентификаторУровня", 0)).Количество() > 0 Тогда
		ШаблонСообщения = НСтр("ru = 'Есть незаполненные идентификаторы уровня схемы'");
		ОбщегоНазначения.СообщитьПользователю(ШаблонСообщения, , , , Отказ);
	КонецЕсли;
	
	// Не может быть больше одной строки с Менеджер
	Если ЭлементыСхемы.НайтиСтроки(Новый Структура("Разрез",
		 ПланыВидовХарактеристик.CRM_ТипыАналитикПланирования.Менеджеры)).Количество() > 1 Тогда
		ШаблонСообщения = НСтр("ru = 'Не может быть больше одной строки с Менеджер'");
		ОбщегоНазначения.СообщитьПользователю(ШаблонСообщения, , , , Отказ);
	КонецЕсли;
	
	// Блокировать изменения в схеме, если она в Плане продаж, по которому есть записи
	Если Справочники.CRM_СхемаПланаПродаж.ЕстьЗаписиСоСвязаннымиПланамиПродаж(Ссылка) Тогда
		ШаблонСообщения = НСтр("ru = 'Данная схема связана с планами продаж, по которым уже есть записи,
			| изменения запрещены'");
		//ОбщегоНазначения.СообщитьПользователю(ШаблонСообщения,,,, Отказ);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.';
						|en = 'Invalid object call on the client.'");
#КонецЕсли
