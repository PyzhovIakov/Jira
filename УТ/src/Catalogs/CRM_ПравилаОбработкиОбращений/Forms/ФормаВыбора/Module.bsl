#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СписокПолей = Новый СписокЗначений();
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ИспользуетсяВАккаунтах",
	                                                                   СписокПолей, Истина);
	Если Параметры.Свойство("ИсточникОткрытияТелефония") Тогда
		
		ИсточникТелефония = Истина;
		СписокВариантов = Новый СписокЗначений;
		СписокВариантов.Добавить(Перечисления.CRM_ВариантыОбработкиОбращения.НеОбрабатывать);
		СписокВариантов.Добавить(Перечисления.CRM_ВариантыОбработкиОбращения.ОтклонитьОбращение);
		
		ЭлементОтбораДанных = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВариантОбработки");
		ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементОтбораДанных.ПравоеЗначение = СписокВариантов;
		ЭлементОтбораДанных.Использование = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	Если ИсточникТелефония Тогда
		
		СтандартнаяОбработка = Ложь;
		ТекущаяСтрока = Элементы.Список.ТекущаяСтрока;
		
		ПараметрыВвода = Новый Структура("Ключ, ИсточникОткрытияТелефония", ТекущаяСтрока, Истина);

		ОткрытьФорму("Справочник.CRM_ПравилаОбработкиОбращений.Форма.ФормаЭлемента", ПараметрыВвода,
			 ЭтотОбъект, УникальныйИдентификатор, , , ,
			 РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если ИсточникТелефония Тогда
		СтандартнаяОбработка = Ложь;
		
		ПараметрыВвода = Новый Структура("ИсточникОткрытияТелефония", Истина);
		
		ОткрытьФорму("Справочник.CRM_ПравилаОбработкиОбращений.Форма.ФормаЭлемента", ПараметрыВвода,
			 ЭтотОбъект, , , , ,
			 РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	ПравилаОбработкиТелефонии = Константы.сфпНастройкиТелефонии_ПравилаОбработки.Получить().Получить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	CRM_ИсточникиПолученияЛидовCRM_ПравилаОбработки.Ссылка КАК Ссылка,
		|	CRM_ИсточникиПолученияЛидовCRM_ПравилаОбработки.ПравилоОбработки КАК ПравилоОбработки
		|ПОМЕСТИТЬ втИсточникиЛидов
		|ИЗ
		|	Справочник.CRM_ИсточникиПолученияЛидов.CRM_ПравилаОбработки КАК CRM_ИсточникиПолученияЛидовCRM_ПравилаОбработки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	CRM_УчетныеЗаписиМессенджеровCRM_ПравилаОбработки.Ссылка,
		|	CRM_УчетныеЗаписиМессенджеровCRM_ПравилаОбработки.ПравилоОбработки
		|ИЗ
		|	Справочник.CRM_УчетныеЗаписиМессенджеров.CRM_ПравилаОбработки КАК CRM_УчетныеЗаписиМессенджеровCRM_ПравилаОбработки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УчетныеЗаписиЭлектроннойПочтыCRM_ПравилаОбработки.Ссылка,
		|	УчетныеЗаписиЭлектроннойПочтыCRM_ПравилаОбработки.ПравилоОбработки
		|ИЗ
		|	Справочник.УчетныеЗаписиЭлектроннойПочты.CRM_ПравилаОбработки КАК УчетныеЗаписиЭлектроннойПочтыCRM_ПравилаОбработки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втИсточникиЛидов.Ссылка КАК Ссылка,
		|	втИсточникиЛидов.ПравилоОбработки КАК ПравилоОбработки
		|ИЗ
		|	втИсточникиЛидов КАК втИсточникиЛидов
		|
		|СГРУППИРОВАТЬ ПО
		|	втИсточникиЛидов.Ссылка,
		|	втИсточникиЛидов.ПравилоОбработки
		|ИТОГИ ПО
		|	ПравилоОбработки";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаПравила = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Для Каждого ТекСтрока Из Строки Цикл
		
		СписокАккаунтов = Новый СписокЗначений;
		
		Пока ВыборкаПравила.Следующий() Цикл
			Если ТекСтрока.Значение.Данные.Ссылка = ВыборкаПравила.ПравилоОбработки Тогда
				ВыборкаДетальная = ВыборкаПравила.Выбрать();
				Пока ВыборкаДетальная.Следующий() Цикл
					СписокАккаунтов.Добавить(ВыборкаДетальная.Ссылка);
				КонецЦикла;
				
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		ВыборкаПравила.Сбросить();
		
		Если Не ПравилаОбработкиТелефонии = Неопределено Тогда
			СтрокаПравилоОбработки = ПравилаОбработкиТелефонии.Найти(ТекСтрока.Значение.Данные.Ссылка, "ПравилоОбработки");
			Если Не СтрокаПравилоОбработки = Неопределено Тогда
				СписокАккаунтов.Добавить("Телефония");
			КонецЕсли;
		КонецЕсли;
		
		ТекСтрока.Значение.Данные.ИспользуетсяВАккаунтах = СписокАккаунтов;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
