
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИспользоватьТипыУслуг = ПолучитьФункциональнуюОпцию("CRM_ИспользоватьТипыУслуг");
	ИспользоватьПоддержку = ПолучитьФункциональнуюОпцию("CRM_ИспользоватьПоддержку");
	
	Если Параметры.Свойство("АккаунтВладелец") Тогда
		АккаунтВладелец = Параметры.АккаунтВладелец;
	КонецЕсли;
	
	CRM_ИспользоватьПотенциальныхКлиентов = ПолучитьФункциональнуюОпцию("CRM_ИспользоватьПотенциальныхКлиентов");
	Если Объект.Ссылка.Пустая() Тогда
		Объект.ВариантОбработки = Перечисления.CRM_ВариантыОбработкиОбращения.НеОбрабатывать;
		Если CRM_ИспользоватьПотенциальныхКлиентов Тогда
			Объект.CRM_ВариантАвтосозданияКлиентов = Перечисления.CRM_ВариантыАвтосозданияКлиентов.СоздаватьПК;
		Иначе
			Объект.CRM_ВариантАвтосозданияКлиентов = Перечисления.CRM_ВариантыАвтосозданияКлиентов.СоздаватьКлиента;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("ИсточникОткрытияТелефония") Тогда
		
		Список = Новый СписокЗначений;
		Список.Добавить(Перечисления.CRM_ВариантыОбработкиОбращения.НеОбрабатывать);
		Список.Добавить(Перечисления.CRM_ВариантыОбработкиОбращения.ОтклонитьОбращение);
	
		НовыйМассив = Новый Массив();
		ПараметрВыбора = Новый ПараметрВыбора("Отбор.Ссылка", Список);
		НовыйМассив.Добавить(ПараметрВыбора);
		
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Элементы.ВыриантОбработки.ПараметрыВыбора = НовыеПараметры;
		
		Элементы.ГруппаАдресацияОбращения.Видимость = Ложь;
		
	КонецЕсли;
	
	ВидимостьЭлементов();
	ЗаполнитьДоступныеСценарииПродаж(ЭтотОбъект);
	
	CRM_НастроитьКнопкиСоздаватьКлиентаНаСервере();
	
	ПриСозданииЧтенииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ПриСозданииЧтенииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииЧтенииНаСервере()
	
	ЗаполнитьСписокИспользованиеВАккаунтах();
	ВСпискеТолькоТекущийАккаунт = СписокИспользованиеВАккаунтах.Количество() = 1
	                              И СписокИспользованиеВАккаунтах[0].Значение = АккаунтВладелец;
	
	Элементы.СписокИспользованиеВАккаунтах.Видимость = СписокИспользованиеВАккаунтах.Количество() > 0 
	                                                   И Не ВСпискеТолькоТекущийАккаунт;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьПравилаОбработкиОбращений" Тогда
		
		ПриСозданииЧтенииНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура CRM_СоздаватьПК(Команда)
	
	Объект.CRM_ВариантАвтосозданияКлиентов =
		ПредопределенноеЗначение("Перечисление.CRM_ВариантыАвтосозданияКлиентов.СоздаватьПК");
	CRM_НастроитьКнопкиСоздаватьКлиентаНаСервере();
	
	Элементы.ГруппаНастройкиСозданияПартнера.Видимость = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура CRM_СоздаватьКлиента(Команда)
	
	Объект.CRM_ВариантАвтосозданияКлиентов =
		ПредопределенноеЗначение("Перечисление.CRM_ВариантыАвтосозданияКлиентов.СоздаватьКлиента");
	CRM_НастроитьКнопкиСоздаватьКлиентаНаСервере();
	
	Элементы.ГруппаНастройкиСозданияПартнера.Видимость = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура CRM_НеСоздаватьКлиента(Команда)
	
	Объект.CRM_ВариантАвтосозданияКлиентов =
		ПредопределенноеЗначение("Перечисление.CRM_ВариантыАвтосозданияКлиентов.НеСоздавать");
	CRM_НастроитьКнопкиСоздаватьКлиентаНаСервере();
	
	Элементы.ГруппаНастройкиСозданияПартнера.Видимость = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура CRM_НастроитьКнопкиСоздаватьКлиентаНаСервере()
	
	// Установить видимость
	
	Элементы.CRM_СоздаватьПК.Видимость = CRM_ИспользоватьПотенциальныхКлиентов;
	Элементы.ГруппаНастройкиСозданияПартнера.Видимость =
		(Объект.CRM_ВариантАвтосозданияКлиентов = Перечисления.CRM_ВариантыАвтосозданияКлиентов.СоздаватьКлиента);
	Если CRM_ИспользоватьПотенциальныхКлиентов Тогда
		Элементы.ДекорацияНадписьСозданиеПартнера.Подсказка = НСтр("ru = 'При обращении от неизвестного контакта,
			| создавать потенциального клиента,
                                                        |клиента, либо не сохранять контакт.'");
	КонецЕсли;
	
	// Покрасить кнопки
	
	НомерКнопки = ?(CRM_ИспользоватьПотенциальныхКлиентов, 1, 2);
	
	Если Объект.CRM_ВариантАвтосозданияКлиентов = ПредопределенноеЗначение("Перечисление.CRM_ВариантыАвтосозданияКлиентов.СоздаватьПК") Тогда
		НомерКнопки = 1;
	ИначеЕсли Объект.CRM_ВариантАвтосозданияКлиентов = ПредопределенноеЗначение("Перечисление.CRM_ВариантыАвтосозданияКлиентов.СоздаватьКлиента") Тогда
		НомерКнопки = 2;
	ИначеЕсли Объект.CRM_ВариантАвтосозданияКлиентов = ПредопределенноеЗначение("Перечисление.CRM_ВариантыАвтосозданияКлиентов.НеСоздавать") Тогда
		НомерКнопки = 3;
	КонецЕсли;
	
	СтруктураВидимыеКнопки = Новый Структура;
	
	Если CRM_ИспользоватьПотенциальныхКлиентов Тогда
		
		СтруктураКнопка = Новый Структура;
		ИмяОписания = "CRM_СоздаватьПК";
		СтруктураКнопка.Вставить("ИмяКнопки", ИмяОписания);
		СтруктураКнопка.Вставить("Пометка", ?(НомерКнопки = 1, Истина, Ложь));
		
		СтруктураВидимыеКнопки.Вставить(ИмяОписания, СтруктураКнопка);
		
	КонецЕсли;
	
	СтруктураКнопка = Новый Структура;
	ИмяОписания = "CRM_СоздаватьКлиента";
	СтруктураКнопка.Вставить("ИмяКнопки", ИмяОписания);
	СтруктураКнопка.Вставить("Пометка", ?(НомерКнопки = 2, Истина, Ложь));
	
	СтруктураВидимыеКнопки.Вставить(ИмяОписания, СтруктураКнопка);
	
	СтруктураКнопка = Новый Структура;
	ИмяОписания = "CRM_НеСоздаватьКлиента";
	СтруктураКнопка.Вставить("ИмяКнопки", ИмяОписания);
	СтруктураКнопка.Вставить("Пометка", ?(НомерКнопки = 3, Истина, Ложь));
	
	СтруктураВидимыеКнопки.Вставить(ИмяОписания, СтруктураКнопка);
	
	CRM_ОбщегоНазначенияСервер.ПокраситьКнопки(ЭтотОбъект, СтруктураВидимыеКнопки);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаСервере
Процедура ВыриантОбработкиПриИзмененииНаСервере()
	Если Не ИспользоватьПоддержку Тогда
		Объект.ТипОбращения = Справочники.CRM_ТипыОбращений.Интерес;
		ЗаполнитьДоступныеСценарииПродаж(ЭтотОбъект);
	КонецЕсли;
	ВидимостьЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура ВыриантОбработкиПриИзменении(Элемент)
	ВыриантОбработкиПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура АдресацияОбращенияПриИзмененииНаСервере()
	ВидимостьЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура АдресацияОбращенияПриИзменении(Элемент)
	АдресацияОбращенияПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ТипОбращенияПриИзменении(Элемент)
	ЗаполнитьДоступныеСценарииПродаж(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ТипУслугиПриИзменении(Элемент)
	ЗаполнитьДоступныеСценарииПродаж(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ВыриантОбработкиОчистка(Элемент, СтандартнаяОбработка)
	Объект.ВариантОбработки = ПредопределенноеЗначение("Перечисление.CRM_ВариантыОбработкиОбращения.НеОбрабатывать");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВидимостьЭлементов()
	
	Элементы.РольИсполнителя.Видимость =
		(Объект.АдресацияОбращения = Перечисления.CRM_ВариантыАдресацииОбращения.НаРольИсполнителя);
	Элементы.ОчередьОтветственных.Видимость =
		(Объект.АдресацияОбращения = Перечисления.CRM_ВариантыАдресацииОбращения.НаПользователяВОчереди);
	
	Элементы.ГруппаНастройкиИнтереса.Видимость =
		(Объект.ВариантОбработки = Перечисления.CRM_ВариантыОбработкиОбращения.СоздатьИнтерес);
	Элементы.ПричинаОтклонения.Видимость =
		(Объект.ВариантОбработки = Перечисления.CRM_ВариантыОбработкиОбращения.ОтклонитьОбращение);
	
	Элементы.ТипОбращения.Видимость = ИспользоватьПоддержку;
	
	Элементы.ГруппаНастройкиСозданияПартнера.Видимость =
		(Объект.CRM_ВариантАвтосозданияКлиентов = Перечисления.CRM_ВариантыАвтосозданияКлиентов.СоздаватьКлиента);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьДоступныеСценарииПродаж(Форма)
	
	СписокВыбора = Форма.Элементы.Сценарий.СписокВыбора;
	
	ПараметрыСценариев = Новый Структура;
	ПараметрыСценариев.Вставить("ТипУслуги", Форма.Объект.ТипУслуги);
	ПараметрыСценариев.Вставить("ИспользоватьТипыУслуг", Форма.ИспользоватьТипыУслуг);
	ПараметрыСценариев.Вставить("ДоступныКарты", Ложь);
	ПараметрыСценариев.Вставить("Подразделение", ПредопределенноеЗначение("Справочник.СтруктураПредприятия.ПустаяСсылка"));
	ПараметрыСценариев.Вставить("ТипОбращения", Форма.Объект.ТипОбращения);
	ПараметрыСценариев.Вставить("ЭтоПоддержка",
		 (Форма.Объект.ТипОбращения <> ПредопределенноеЗначение("Справочник.CRM_ТипыОбращений.Интерес")));
	
	ДоступныеСценарии = ПолучитьДоступныеСценарииПродаж(ПараметрыСценариев);
	
	СписокВыбора.Очистить();
	Для Каждого Элемент Из ДоступныеСценарии Цикл
		СписокВыбора.Добавить(Элемент.Значение, Элемент.Представление, , Элемент.Картинка);
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(Форма.Объект.Сценарий) Тогда
		Если СписокВыбора.Количество() > 0 Тогда
			Форма.Объект.Сценарий = СписокВыбора[0].Значение;
		КонецЕсли;
	Иначе
		Если СписокВыбора.Количество() > 0 Тогда
			Если СписокВыбора.Количество() = 1 Тогда
				Форма.Объект.Сценарий = СписокВыбора[0].Значение;
			ИначеЕсли СписокВыбора.НайтиПоЗначению(Форма.Объект.Сценарий) = Неопределено Тогда
				Форма.Объект.Сценарий = СписокВыбора[0].Значение;
			КонецЕсли;
		Иначе
			Форма.Объект.Сценарий = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДоступныеСценарииПродаж(Знач ПараметрыСценариев)
	Возврат Обработки.CRM_МастерРегистрацииОбращения.ПолучитьДоступныеСценарииПродаж(ПараметрыСценариев);
КонецФункции

&НаСервере
Процедура ЗаполнитьСписокИспользованиеВАккаунтах()
	
	СписокИспользованиеВАккаунтах.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	CRM_ИсточникиПолученияЛидовCRM_ПравилаОбработки.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ втИсточникиЛидов
		|ИЗ
		|	Справочник.CRM_ИсточникиПолученияЛидов.CRM_ПравилаОбработки КАК CRM_ИсточникиПолученияЛидовCRM_ПравилаОбработки
		|ГДЕ
		|	CRM_ИсточникиПолученияЛидовCRM_ПравилаОбработки.ПравилоОбработки = &ПравилоОбработки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	CRM_УчетныеЗаписиМессенджеровCRM_ПравилаОбработки.Ссылка
		|ИЗ
		|	Справочник.CRM_УчетныеЗаписиМессенджеров.CRM_ПравилаОбработки КАК CRM_УчетныеЗаписиМессенджеровCRM_ПравилаОбработки
		|ГДЕ
		|	CRM_УчетныеЗаписиМессенджеровCRM_ПравилаОбработки.ПравилоОбработки = &ПравилоОбработки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УчетныеЗаписиЭлектроннойПочтыCRM_ПравилаОбработки.Ссылка
		|ИЗ
		|	Справочник.УчетныеЗаписиЭлектроннойПочты.CRM_ПравилаОбработки КАК УчетныеЗаписиЭлектроннойПочтыCRM_ПравилаОбработки
		|ГДЕ
		|	УчетныеЗаписиЭлектроннойПочтыCRM_ПравилаОбработки.ПравилоОбработки = &ПравилоОбработки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втИсточникиЛидов.Ссылка КАК Ссылка
		|ИЗ
		|	втИсточникиЛидов КАК втИсточникиЛидов
		|
		|СГРУППИРОВАТЬ ПО
		|	втИсточникиЛидов.Ссылка";
	
	Запрос.УстановитьПараметр("ПравилоОбработки", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СписокИспользованиеВАккаунтах.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	ПравилаОбработкиТелефонии = Константы.сфпНастройкиТелефонии_ПравилаОбработки.Получить().Получить();
	ИспользуетсяВТелефонии = Ложь;
	Если Не ПравилаОбработкиТелефонии = Неопределено Тогда
		НайденнаяСтрока = ПравилаОбработкиТелефонии.Найти(Объект.Ссылка, "ПравилоОбработки");
		ИспользуетсяВТелефонии = Не (НайденнаяСтрока = Неопределено);
	КонецЕсли;
	
	Если ИспользуетсяВТелефонии Тогда
		
		// BSLLS:Typo-off
		ОбработкаТелефония = ПолучитьНавигационнуюСсылку(Метаданные.Обработки.сфпАРМ_Телефония);
		// BSLLS:Typo-on
		ФорматированнаяТелефония = Новый ФорматированнаяСтрока("Телефония", ,
		                                                       ЦветаСтиля.ЦветТекстаПоля, ,
		                                                       ОбработкаТелефония);
		
		// BSLLS:Typo-off
		СписокИспользованиеВАккаунтах.Добавить("сфпАРМ_Телефония", ФорматированнаяТелефония);
		// BSLLS:Typo-on
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокИспользованиеВАккаунтахОбработкаНавигационнойСсылкиМножественногоЗначения(Элемент, Идентификатор, 
	НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если СтрНайти(НавигационнаяСсылкаФорматированнойСтроки, "сфпАРМ_Телефония") > 0 Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыОткрытия = Новый Структура("ПоказатьГруппуОбщихНастроек", Истина);
		ОткрытьФорму("Обработка.сфпАРМ_Телефония.Форма.ФормаНастройки", ПараметрыОткрытия, ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
