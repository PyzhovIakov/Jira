
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	CRM_ОбщегоНазначенияСервер.СбросНастроекПоложенияОкна(ЭтотОбъект);
	
	ОбъектЗначение = РеквизитФормыВЗначение("Объект");
	ДанныеУсловий = ОбъектЗначение.НастройкиУсловий.Получить();
	АдресНастроекУсловий = ПоместитьВоВременноеХранилище(ДанныеУсловий, УникальныйИдентификатор);		
	ДанныеДействий = ОбъектЗначение.НастройкиДействий.Получить();
	АдресНастроекДействий = ПоместитьВоВременноеХранилище(ДанныеДействий, УникальныйИдентификатор);	
    Если Объект.УсловиеСрабатывания.ИспользоватьСКД Тогда
		СхемаСКД = ОбъектЗначение.УсловиеСрабатывания.ХранилищеСхемыКомпоновкиДанных.Получить();
		Если СхемаСКД = Неопределено Тогда 
			СхемаСКД = Новый СхемаКомпоновкиДанных();
		КонецЕсли;	
		АдресСхемыКомпоновкиДанных = ПоместитьВоВременноеХранилище(СхемаСКД, УникальныйИдентификатор);
		НастройкиСКД = ОбъектЗначение.ХранилищеНастроекКомпоновкиДанных.Получить();
		Если НастройкиСКД = Неопределено Тогда 
			КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
			КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаСКД));
			КомпоновщикНастроек.ЗагрузитьНастройки(СхемаСКД.НастройкиПоУмолчанию);
			НастройкиСКД = КомпоновщикНастроек.Настройки;
		КонецЕсли;
		АдресНастроекКомпоновкиДанных = ПоместитьВоВременноеХранилище(НастройкиСКД, УникальныйИдентификатор);
	    Попытка
			КомпановщикНастроекУсловий.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанных));
			КомпановщикНастроекУсловий.ЗагрузитьНастройки(НастройкиСКД);
			КомпановщикНастроекУсловий.Восстановить();
		Исключение
			ОшибкаИнициализацииСКД = Истина;
		КонецПопытки;
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() И Параметры.Свойство("НастройкиНовогоТриггера") Тогда
		НастройкиНовогоТриггера = Параметры.НастройкиНовогоТриггера;
		НастройкиНовогоТриггера.Свойство("Действие", Объект.Действие);
		Если НастройкиНовогоТриггера.Свойство("УсловиеСрабатывания", Объект.УсловиеСрабатывания) Тогда
			УсловиеСрабатыванияПриИзмененииНаСервере();
		КонецЕсли;
		
		НастройкиНовогоТриггера.Свойство("НастройкиУсловий", ДанныеУсловий);
		АдресНастроекУсловий = ПоместитьВоВременноеХранилище(ДанныеУсловий, УникальныйИдентификатор);		
		НастройкиНовогоТриггера.Свойство("НастройкиДействий", ДанныеДействий);
		АдресНастроекДействий = ПоместитьВоВременноеХранилище(ДанныеДействий, УникальныйИдентификатор);	
		
		НастройкиНовогоТриггера.Свойство("ПредставлениеНастроекУсловия", Объект.ПредставлениеНастроекУсловия);
		НастройкиНовогоТриггера.Свойство("ПредставлениеНастроекДействия", Объект.ПредставлениеНастроекДействия);
		
		НастройкиНовогоТриггера.Свойство("ОткрыватьНастройкиДействия", ОткрыватьНастройкиДействия);
	КонецЕсли;
	
	Если Параметры.Свойство("УсловиеСрабатывания") Тогда
		Объект.УсловиеСрабатывания = Параметры.УсловиеСрабатывания;
	КонецЕсли;
	Если Параметры.Свойство("СостояниеИнтереса") Тогда
		Если Объект.Ссылка.Пустая() Тогда
			Объект.СостояниеИнтереса = Параметры.СостояниеИнтереса;
			Если ТипЗнч(Объект.СостояниеИнтереса) = Тип("СправочникСсылка.CRM_СостоянияИнтересов") Тогда
				Объект.СценарийКарта = Параметры.СостояниеИнтереса.Родитель;
			ИначеЕсли ТипЗнч(Объект.СостояниеИнтереса) = Тип("СправочникСсылка.CRM_ТочкиМаршрутов") Тогда
				Объект.СценарийКарта = Параметры.СостояниеИнтереса.Владелец;
			КонецЕсли;
		КонецЕсли;
		Элементы.СценарийКарта.Видимость = Ложь;
		Если ТипЗнч(Объект.СостояниеИнтереса) = Тип("СправочникСсылка.CRM_СостоянияИнтересов") Тогда
			Элементы.СостояниеИнтереса.Заголовок = НСтр("ru='Состояние';en='Status'");
		ИначеЕсли ТипЗнч(Объект.СостояниеИнтереса) = Тип("СправочникСсылка.CRM_ТочкиМаршрутов") Тогда
			Элементы.СостояниеИнтереса.Заголовок = НСтр("ru='Этап';en='Stage'");
		КонецЕсли;
		//Элементы.ВключатьВЛоги.Видимость = Ложь;
		Элементы.Наименование.Видимость = Ложь;
		Элементы.Декорация1.Ширина = 5;
		Элементы.Декорация2.Ширина = 5;
	Иначе	
		ИдентификаторИнтерес = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Метаданные.Документы.CRM_Интерес);
		ИдентификаторЗадача = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Метаданные.Задачи.ЗадачаИсполнителя);
		Элементы.СостояниеИнтереса.Видимость = (Объект.УсловиеСрабатывания = Справочники.CRM_УсловияСрабатыванияТриггеров.ПриВыбореНовогоСостоянияИнтереса
			ИЛИ Объект.УсловиеСрабатывания = Справочники.CRM_УсловияСрабатыванияТриггеров.ПриИзмененииТекущегоСостоянияИнтереса
			ИЛИ Объект.УсловиеСрабатывания.ОбъектДействия = ИдентификаторИнтерес
			ИЛИ Объект.УсловиеСрабатывания.ОбъектыОбработки.НайтиСтроки(Новый Структура("ОбъектОбработки",
				 ИдентификаторИнтерес)).Количество() > 0
			ИЛИ Объект.УсловиеСрабатывания.ОбъектДействия = ИдентификаторЗадача
			ИЛИ Объект.УсловиеСрабатывания.ОбъектыОбработки.НайтиСтроки(Новый Структура("ОбъектОбработки", ИдентификаторЗадача)).Количество() > 0);
		Элементы.СценарийКарта.Видимость = Элементы.СостояниеИнтереса.Видимость;
		Элементы.Декорация1.Ширина = 12;
		Элементы.Декорация2.Ширина = 12;
	КонецЕсли;
	Если Параметры.Свойство("Действие") Тогда
		Объект.Действие = Параметры.Действие;
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.СценарийКарта) Тогда
		НовыеПараметрыВыбора = Новый Массив;
		Если ТипЗнч(Объект.СценарийКарта) = Тип("СправочникСсылка.CRM_СостоянияИнтересов") Тогда
			Элементы.СостояниеИнтереса.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.CRM_СостоянияИнтересов");
			НовыеПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.Родитель", Объект.СценарийКарта));
		ИначеЕсли ТипЗнч(Объект.СценарийКарта) = Тип("СправочникСсылка.CRM_КартыМаршрутов") Тогда
			Элементы.СостояниеИнтереса.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.CRM_ТочкиМаршрутов");
			НовыеПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.Владелец", Объект.СценарийКарта));
		КонецЕсли;
		Элементы.СостояниеИнтереса.ПараметрыВыбора = Новый ФиксированныйМассив(НовыеПараметрыВыбора);
	КонецЕсли;
	
	Если Параметры.Свойство("ФильтрОбъектДействия")
		И ЗначениеЗаполнено(Объект.Действие)
		И Объект.Действие.ОписаниеТипов.Получить().Типы().Количество() > 0 Тогда
		НовыеПараметрыВыбора = Новый Массив;
		НовыеПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ОбъектДействия", Параметры.ФильтрОбъектДействия));
		Элементы.УсловиеСрабатывания.ПараметрыВыбора = Новый ФиксированныйМассив(НовыеПараметрыВыбора);
	КонецЕсли;
	Элементы.Действует.Доступность = Не Объект.ПометкаУдаления;
	Если Не ЗначениеЗаполнено(Объект.ПредставлениеНастроекДействия) Тогда
		Объект.ПредставлениеНастроекДействия = НСтр("ru='Настройки действия';en='Action settings'");
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Объект.ПредставлениеНастроекУсловия) Тогда
		Объект.ПредставлениеНастроекУсловия = НСтр("ru='Настройки условия';en='Settings conditions'");
	КонецЕсли;
	Элементы.ПредставлениеНастроекДействия.Высота = СтрЧислоСтрок(Объект.ПредставлениеНастроекДействия);
	Элементы.ПредставлениеНастроекУсловия.Высота = СтрЧислоСтрок(Объект.ПредставлениеНастроекУсловия);
	Элементы.ГруппаОтложеноНа.Видимость = Объект.ОтложенноеВыполнение;
	Элементы.ГруппаНастройкиТриггераПриЗаписи.Видимость = (Объект.УсловиеСрабатывания.Событие = Перечисления.CRM_СобытияТриггеров.ПриЗаписи
		 ИЛИ Объект.УсловиеСрабатывания.Событие = Перечисления.CRM_СобытияТриггеров.ОбработкаПроведения);
	ВидимостьУчитвыатьГрафик();
	
	Если ТипЗнч(Объект.СостояниеИнтереса) = Тип("СправочникСсылка.CRM_СостоянияИнтересов") Тогда
		Элементы.ВыполнятьВСостоянииИнтереса.Заголовок = НСтр("ru='Выполнять пока Интерес находится в состоянии';
			|en='Execute while lead is in the state'") 
			+ ":";
	ИначеЕсли ТипЗнч(Объект.СостояниеИнтереса) = Тип("СправочникСсылка.CRM_ТочкиМаршрутов") Тогда
		Элементы.ВыполнятьВСостоянииИнтереса.Заголовок = НСтр("ru='Выполнять пока Бизнес-процесс находится на этапе';
			|en='Execute till Business Process is on stage'") 
			+ ":";
	КонецЕсли;
	Элементы.ГруппаВыполнятьВСостоянииИнтереса.Видимость = (ЗначениеЗаполнено(Объект.СостояниеИнтереса)
		 И (Объект.ОтложенноеВыполнение
		 ИЛИ ЗначениеЗаполнено(Объект.ПовторятьПриОшибке)));
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ОшибкаИнициализацииСКД Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриОшибкеИнициализацииСКД", ЭтотОбъект,
			 Новый Структура("ПриОткрытии",
			 Истина));
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'При инициализации условия триггера произошла ошибка! 
                                                |Необходимо восстановить настройки. Перейти в условие?'"), РежимДиалогаВопрос.ОКОтмена);
	КонецЕсли;
	УправлениеВидимостьюЭлементов();
	Если ОткрыватьНастройкиДействия Тогда
		НастроитьДействие(Неопределено);
	КонецЕсли;
	
	CRM_ЦентрМониторингаКлиент.НачатьЗамерОперацииБизнесСтатистики(
		"CRM_Статистика.Триггеры.Триггер.ДлительностьСценариев.ВремяРаботыВФорме");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	CRM_ЦентрМониторингаКлиент.ЗавершитьЗамерОперацииБизнесСтатистики(
		"CRM_Статистика.Триггеры.Триггер.ДлительностьСценариев.ВремяРаботыВФорме");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НастроитьУсловия(Команда)
	Если НЕ Объект.УсловиеСрабатывания.Пустая() Тогда
		Если CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.УсловиеСрабатывания, "ИспользоватьСКД") Тогда
			ОписаниеОповещенияЗавершения = Новый ОписаниеОповещения("НастроитьУсловияЗавершениеСКД", ЭтотОбъект);
			ПараметрыОткрытия = Новый Структура;
			ПараметрыОткрытия.Вставить("АдресСхемыКомпоновкиДанных", АдресСхемыКомпоновкиДанных);
			ПараметрыОткрытия.Вставить("НастройкиСКД", КомпановщикНастроекУсловий.Настройки);
			ОткрытьФорму("Справочник.CRM_Триггеры.Форма.ФормаРедактированияСКД", ПараметрыОткрытия, ЭтотОбъект,
				 , , , ОписаниеОповещенияЗавершения,
				 РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Иначе	
			ВернутьОбработкуУсловий();
			ПараметрыОткрытия = Новый Структура;
			ПередаваемыеНастройки = ПолучитьИзВременногоХранилища(АдресНастроекУсловий);
			ПараметрыОткрытия.Вставить("Настройки", ?(ПередаваемыеНастройки = Неопределено, Новый Структура,
				 ПередаваемыеНастройки));
			ПараметрыОткрытия.Вставить("УсловиеСрабатывания", Объект.УсловиеСрабатывания);
			ОповещениеЗакрытия = Новый ОписаниеОповещения("НастроитьУсловияЗавершение", ЭтотОбъект);
			
			ФормаНастройки = ПолучитьФорму("ВнешняяОбработка." 
				+ CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.УсловиеСрабатывания, "НазваниеОбработки") 
					+ ".Форма", ПараметрыОткрытия,
				 ЭтотОбъект);
			ФормаНастройки.АвтоЗаголовок = Ложь;
			ФормаНастройки.Заголовок = НСтр("ru='Настройка условия';en='Setting the condition'") + " (" 
				+ Строка(Объект.УсловиеСрабатывания) 
				+ ")";
			ФормаНастройки.ОписаниеОповещенияОЗакрытии = ОповещениеЗакрытия;
			ФормаНастройки.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
			ФормаНастройки.Открыть();
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьДействие(Команда)
	Если НЕ Объект.Действие.Пустая() Тогда
		ВернутьОбработкуДействия();
		ПараметрыОткрытия = Новый Структура;
		ПередаваемыеНастройки = ПолучитьИзВременногоХранилища(АдресНастроекДействий);
		Если ПередаваемыеНастройки = Неопределено Тогда
			ПередаваемыеНастройки = Новый Структура();
			
		КонецЕсли;	
		ПередаваемыеНастройки.Вставить("УсловиеСрабатывания", Объект.УсловиеСрабатывания);
		ПередаваемыеНастройки.Вставить("СостояниеОбъекта", Объект.СостояниеИнтереса);
		ПередаваемыеНастройки.Вставить("СценарийКарта", Объект.СценарийКарта);
		ПараметрыОткрытия.Вставить("Настройки", ПередаваемыеНастройки);
		ОповещениеЗакрытия = Новый ОписаниеОповещения("НастроитьДействияЗавершение", ЭтотОбъект);
		ФормаНастройки = ПолучитьФорму("ВнешняяОбработка." 
			+ CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.Действие, "НазваниеОбработки") + ".Форма", ПараметрыОткрытия, ЭтотОбъект);
			
		Если ФормаНастройки <> Неопределено Тогда
			ФормаНастройки.АвтоЗаголовок = Ложь;
			ФормаНастройки.Заголовок =
				НСтр("ru='Настройка действия';en='Action setting'") + " (" + Строка(Объект.Действие) + ")";
			ФормаНастройки.ОписаниеОповещенияОЗакрытии = ОповещениеЗакрытия;
			ФормаНастройки.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
			ФормаНастройки.Открыть();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НастроитьДействияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		АдресНастроекДействий = ПоместитьВоВременноеХранилище(Результат, УникальныйИдентификатор);
		Если Результат.Свойство("ПредставлениеНастроекДействия") Тогда
			СтрокаРезультата = Результат.ПредставлениеНастроекДействия;
			Если Результат.Свойство("ИспользоватьШаблон") Тогда
				Если Не Результат.ИспользоватьШаблон Тогда
					СтрокаНайтиШаблон = СтрНайти(СтрокаРезультата, "Шаблон");
					Если СтрокаНайтиШаблон > 0 Тогда
						СтрокаРезультата = Сред(СтрокаРезультата, 1, СтрокаНайтиШаблон - 2);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			Объект.ПредставлениеНастроекДействия = СтрокаРезультата;
			Элементы.ПредставлениеНастроекДействия.Высота = СтрЧислоСтрок(Объект.ПредставлениеНастроекДействия);
		КонецЕсли;
		Если Объект.Ссылка.Пустая() И Результат.Свойство("УсловиеСрабатыванияПоУмолчанию") Тогда
			УстановитьУсловиеПоУмолчанию(Результат.УсловиеСрабатыванияПоУмолчанию);
			УсловиеСрабатыванияПриИзменении(Неопределено);
		КонецЕсли;
		Если НЕ Открыта() Тогда
			Записать();
			Оповестить("ЗаписанТриггер", Объект.СостояниеИнтереса);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ТекущийОбъект.НастройкиУсловий = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресНастроекУсловий));
	ТекущийОбъект.НастройкиДействий = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресНастроекДействий));
	Если ЗначениеЗаполнено(АдресНастроекКомпоновкиДанных) Тогда
		ТекущийОбъект.ХранилищеНастроекКомпоновкиДанных =
			Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресНастроекКомпоновкиДанных));
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УсловиеСрабатыванияПриИзмененииНаСервере()
	
	Если CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.УсловиеСрабатывания, "ИспользоватьСКД") Тогда
		ОбъектЗначение = РеквизитФормыВЗначение("Объект");
		СхемаСКД = ОбъектЗначение.УсловиеСрабатывания.ХранилищеСхемыКомпоновкиДанных.Получить();
		Если СхемаСКД = Неопределено Тогда 
			СхемаСКД = Новый СхемаКомпоновкиДанных();
		КонецЕсли;
		АдресСхемыКомпоновкиДанных = ПоместитьВоВременноеХранилище(СхемаСКД, УникальныйИдентификатор);
		НастройкиСКД = ОбъектЗначение.УсловиеСрабатывания.ХранилищеНастроекКомпоновкиДанных.Получить();
		Если НастройкиСКД = Неопределено Тогда 
			КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
			КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаСКД));
			КомпоновщикНастроек.ЗагрузитьНастройки(СхемаСКД.НастройкиПоУмолчанию);
			НастройкиСКД = КомпоновщикНастроек.Настройки;
		КонецЕсли;
		АдресНастроекКомпоновкиДанных = ПоместитьВоВременноеХранилище(НастройкиСКД, УникальныйИдентификатор);
		КомпановщикНастроекУсловий.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанных));
		КомпановщикНастроекУсловий.ЗагрузитьНастройки(НастройкиСКД);
		КомпановщикНастроекУсловий.Восстановить();
	Иначе	
		ВернутьОбработкуУсловий();
	КонецЕсли;
	ИдентификаторИнтерес = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Метаданные.Документы.CRM_Интерес);
	ИдентификаторЗадача = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Метаданные.Задачи.ЗадачаИсполнителя);
	Элементы.СостояниеИнтереса.Видимость = (Объект.УсловиеСрабатывания = Справочники.CRM_УсловияСрабатыванияТриггеров.ПриВыбореНовогоСостоянияИнтереса
		ИЛИ Объект.УсловиеСрабатывания = Справочники.CRM_УсловияСрабатыванияТриггеров.ПриИзмененииТекущегоСостоянияИнтереса
		ИЛИ Объект.УсловиеСрабатывания.ОбъектДействия = ИдентификаторИнтерес
		ИЛИ Объект.УсловиеСрабатывания.ОбъектыОбработки.НайтиСтроки(Новый Структура("ОбъектОбработки",
			 ИдентификаторИнтерес)).Количество() > 0
		ИЛИ Объект.УсловиеСрабатывания.ОбъектДействия = ИдентификаторЗадача
		ИЛИ Объект.УсловиеСрабатывания.ОбъектыОбработки.НайтиСтроки(Новый Структура("ОбъектОбработки", ИдентификаторЗадача)).Количество() > 0);
	Элементы.СценарийКарта.Видимость = Элементы.СостояниеИнтереса.Видимость;
	Если Элементы.СостояниеИнтереса.Видимость Тогда
		Элементы.Декорация1.Ширина = 12;
		Элементы.Декорация2.Ширина = 12;
	Иначе	
		Элементы.Декорация1.Ширина = 5;
		Элементы.Декорация2.Ширина = 5;
	КонецЕсли;
	Объект.РазрешитьПовторноеСрабатывание = (Объект.УсловиеСрабатывания = Справочники.CRM_УсловияСрабатыванияТриггеров.ПриВыбореНовогоСостоянияИнтереса
		ИЛИ Объект.УсловиеСрабатывания = Справочники.CRM_УсловияСрабатыванияТриггеров.ПриИзмененииТекущегоСостоянияИнтереса	
		ИЛИ Объект.УсловиеСрабатывания.Событие = Перечисления.CRM_СобытияТриггеров.ОбработкаПроведения);	
	Объект.ВключатьВЛоги =
		(Объект.УсловиеСрабатывания.ОбъектДействия = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Метаданные.Документы.CRM_Интерес));
	Если ЗначениеЗаполнено(Объект.СостояниеИнтереса) И НЕ Элементы.СостояниеИнтереса.Видимость Тогда
		Объект.СостояниеИнтереса = Справочники.CRM_СостоянияИнтересов.ПустаяСсылка();
	КонецЕсли;
	Объект.Наименование = Объект.Действие.Наименование + ", " 
		+ НРег(Лев(Объект.УсловиеСрабатывания.Наименование, 1)) + Сред(Объект.УсловиеСрабатывания.Наименование, 2);
	Элементы.ГруппаНастройкиТриггераПриЗаписи.Видимость = (Объект.УсловиеСрабатывания.Событие = Перечисления.CRM_СобытияТриггеров.ПриЗаписи
		 ИЛИ Объект.УсловиеСрабатывания.Событие = Перечисления.CRM_СобытияТриггеров.ОбработкаПроведения);
			
КонецПроцедуры

&НаКлиенте
Процедура УсловиеСрабатыванияПриИзменении(Элемент) Экспорт // АПК:78 - исключить из проверки.
	
    Попытка
		Если НЕ Объект.УсловиеСрабатывания.Пустая() Тогда
			
			Если Объект.УсловиеСрабатывания <> ПредопределенноеЗначение("Справочник.CRM_УсловияСрабатыванияТриггеров.ПоРасписанию") Тогда
				Если CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.УсловиеСрабатывания, "ИспользоватьСКД") Тогда
					УсловиеСрабатыванияПриИзмененииНаСервере();
				Иначе
					
					#Если Не ВебКлиент Тогда
						Если CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.УсловиеСрабатывания, "РежимОтладки") Тогда
							ИмяФайлаОбработки = CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.УсловиеСрабатывания,
								 "ПутьКОбработке");
							НачатьПомещениеФайла(Новый ОписаниеОповещения("ИзменитьУсловияПродолжение", ЭтотОбъект),
								 АдресОбработкиУсловий, ИмяФайлаОбработки, Ложь,
								 УникальныйИдентификатор);
						Иначе
							АдресНастроекУсловий = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
							УсловиеСрабатыванияПриИзмененииНаСервере();
							УправлениеВидимостьюЭлементов();
						КонецЕсли;
					#Иначе
						АдресНастроекУсловий = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
						УсловиеСрабатыванияПриИзмененииНаСервере();
						УправлениеВидимостьюЭлементов();
					#КонецЕсли	
				КонецЕсли;
			КонецЕсли;
		Иначе
			АдресОбработкиУсловий = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);		
			АдресНастроекУсловий = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
		КонецЕсли;
		Объект.ПредставлениеНастроекУсловия = НСтр("ru='Настройки условия';en='Settings conditions'");
		Элементы.ПредставлениеНастроекУсловия.Высота = 1;
		УправлениеВидимостьюЭлементов();
	Исключение
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриОшибкеИнициализацииСКД", ЭтотОбъект,
			 Новый Структура("ПриОткрытии",
			 Ложь));
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'При инициализации условия триггера произошла ошибка! 
                                                |Необходимо восстановить настройки. Перейти в условие?'"), РежимДиалогаВопрос.ОКОтмена);
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ПриОшибкеИнициализацииСКД(Результат, ДопПараметры) Экспорт
	Если ДопПараметры.ПриОткрытии Тогда
		Закрыть();
	КонецЕсли;
	Если Результат = КодВозвратаДиалога.ОК Тогда
		
		ОткрытьФорму("Справочник.CRM_УсловияСрабатыванияТриггеров.ФормаОбъекта", Новый Структура("Ключ,
			| РаскрытьДопНастройки", Объект.УсловиеСрабатывания,
			 Истина));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьУсловияПродолжение(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	АдресОбработкиУсловий = Адрес; 
	АдресНастроекУсловий = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	УсловиеСрабатыванияПриИзмененииНаСервере();
	УправлениеВидимостьюЭлементов();
КонецПроцедуры

&НаСервере
Процедура УсловиеСрабатыванияОчисткаНаСервере()
	ОбъектЗначение = РеквизитФормыВЗначение("Объект");
	СхемаСКД = Новый СхемаКомпоновкиДанных();
	АдресСхемыКомпоновкиДанных = ПоместитьВоВременноеХранилище(СхемаСКД, УникальныйИдентификатор);
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаСКД));
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаСКД.НастройкиПоУмолчанию);
	НастройкиСКД = КомпоновщикНастроек.Настройки;
	АдресНастроекКомпоновкиДанных = ПоместитьВоВременноеХранилище(НастройкиСКД, УникальныйИдентификатор);
	КомпановщикНастроекУсловий.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанных));
	КомпановщикНастроекУсловий.ЗагрузитьНастройки(НастройкиСКД);
	КомпановщикНастроекУсловий.Восстановить();
	Если ЗначениеЗаполнено(Объект.УсловиеСрабатывания) Тогда
		// Элементы.ГруппаНастройки.Видимость =
		// CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.УсловиеСрабатывания, "ИспользоватьСКД");
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура УсловиеСрабатыванияОчистка(Элемент, СтандартнаяОбработка)
	УсловиеСрабатыванияОчисткаНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеНастроекДействияНажатие(Элемент, СтандартнаяОбработка)
	НастроитьДействие(Неопределено);
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеНастроекУсловияНажатие(Элемент, СтандартнаяОбработка)
	НастроитьУсловия(Неопределено);
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОтчетОРаботе(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("КлючВарианта", "Основной");
	ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
	
	ФормаРасшифровки = ПолучитьФорму("Отчет.CRM_РаботаТриггеров.Форма", ПараметрыФормы);
	ОтборТриггер = Новый ПолеКомпоновкиДанных("Триггер"); 
	Для каждого ЭлементОтбора Из ФормаРасшифровки.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			ЭлементОтбора.ПравоеЗначение = Объект.Ссылка;
			ЭлементОтбора.Использование = Истина;
		КонецЕсли;
	КонецЦикла;
	ФормаРасшифровки.Открыть();

КонецПроцедуры

&НаКлиенте
Процедура УправлениеВидимостьюЭлементов()
	ЭтоТриггерСобытия =
		(Объект.УсловиеСрабатывания <> ПредопределенноеЗначение("Справочник.CRM_УсловияСрабатыванияТриггеров.ПоРасписанию"));
	Элементы.НастроитьРасписание.Видимость = НЕ ЭтоТриггерСобытия;
	Если НЕ Объект.УсловиеСрабатывания.Пустая() Тогда
		Элементы.ПредставлениеНастроекУсловия.Видимость = ЭтоТриггерСобытия;
	Иначе
		Элементы.ГруппаНастройки.Видимость = Ложь;	
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРасписаниеНаСервере(УникальныйИдентификаторЗадания)
	Если ЗначениеЗаполнено(УникальныйИдентификаторЗадания) Тогда
		СписокЗаданий = РегламентныеЗаданияСервер.НайтиЗадания(Новый Структура("Ключ", УникальныйИдентификаторЗадания));
		Если СписокЗаданий.Количество() > 0 Тогда
			Возврат СписокЗаданий[0].Расписание;
		Иначе
			Возврат Новый РасписаниеРегламентногоЗадания;
		КонецЕсли;
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Процедура ЗаписатьРасписаниеНаСервере(УникальныйИдентификаторЗадания, Расписание, Включен)
	Если ЗначениеЗаполнено(УникальныйИдентификаторЗадания) Тогда
		СписокЗаданий = РегламентныеЗаданияСервер.НайтиЗадания(Новый Структура("Ключ", УникальныйИдентификаторЗадания));
		Для Каждого Задание Из СписокЗаданий Цикл
			ПараметрыЗадания = Новый Структура("Использование", (Строка(Расписание) <> "один день; один раз в день" И Включен));
			ПараметрыЗадания.Вставить("Расписание", Расписание);
			РегламентныеЗаданияСервер.ИзменитьЗадание(Задание, ПараметрыЗадания);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НастроитьРасписание(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.УникальныйИдентификаторЗадания) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Триггер не записан,
			| настройка расписания недоступна!';en='Trigger not recorded,
			| schedule setting is not available!'"));
		Возврат;
	КонецЕсли;
	Расписание = ПолучитьРасписаниеНаСервере(Объект.УникальныйИдентификаторЗадания);
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(Расписание);
	ОписаниеОповещения = Новый ОписаниеОповещения("НастроитьРасписаниеЗавершение", ЭтотОбъект);
	Диалог.Показать(ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура НастроитьРасписаниеЗавершение(Расписание, ДополнительныеПараметры) Экспорт
	Если Расписание <> Неопределено Тогда
		ЗаписатьРасписаниеНаСервере(Объект.УникальныйИдентификаторЗадания, Расписание, Объект.Действует);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ВернутьОбработкуДействия()
	ОбработкаПроверки = ПолучитьДвоичныеДанныеИзХранилища("Действие", "ОбработкаДействия");

	ПараметрыЗащиты = Новый("ОписаниеЗащитыОтОпасныхДействий" + "");
	ПараметрыЗащиты.ПредупреждатьОбОпасныхДействиях = Ложь;                                            

	АдресОбработкиДействий = ПоместитьВоВременноеХранилище(ОбработкаПроверки, УникальныйИдентификатор);
	Обработка =  ВнешниеОбработки.Создать(ВнешниеОбработки.Подключить(АдресОбработкиДействий,
		 Объект.Действие.НазваниеОбработки, Ложь, ПараметрыЗащиты),
		 Ложь);
	Возврат Истина;
КонецФункции

&НаСервере
Функция ВернутьОбработкуУсловий()
	ОбработкаПроверки = ПолучитьДвоичныеДанныеИзХранилища("УсловиеСрабатывания", "ОбработкаПроверки");
	// ИмяВременногоФайла = ПолучитьИмяВременногоФайла("epf");
	// ОбработкаПроверки.Записать(ИмяВременногоФайла);
	//
	ПараметрыЗащиты = Новый("ОписаниеЗащитыОтОпасныхДействий" + "");
	ПараметрыЗащиты.ПредупреждатьОбОпасныхДействиях = Ложь;                                            
	//
	// Данные = Новый ДвоичныеДанные(ИмяВременногоФайла);
	АдресОбработкиУсловий = ПоместитьВоВременноеХранилище(ОбработкаПроверки, УникальныйИдентификатор);
	Обработка =  ВнешниеОбработки.Создать(ВнешниеОбработки.Подключить(АдресОбработкиУсловий,
		 Объект.УсловиеСрабатывания.НазваниеОбработки, Ложь, ПараметрыЗащиты),
		 Ложь);
	Возврат Истина;
КонецФункции

&НаСервере
Функция ПроверитьСовместимостьОбработки()
	Если Объект.УсловиеСрабатывания = Справочники.CRM_УсловияСрабатыванияТриггеров.ПоРасписанию Тогда
		Возврат Истина;
	КонецЕсли;
	Если Объект.УсловиеСрабатывания.Пустая() Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Сначала выберите условие срабатывания триггера";
		Сообщение.Сообщить();
		Объект.Действие = Справочники.CRM_ДействияТриггеров.ПустаяСсылка();
		Возврат Ложь;
	КонецЕсли;	
	ОбработкаПроверки = ПолучитьДвоичныеДанныеИзХранилища("Действие", "ОбработкаДействия");
	// ИмяВременногоФайла = ПолучитьИмяВременногоФайла("epf");
	// ОбработкаПроверки.Записать(ИмяВременногоФайла);
	//
	ПараметрыЗащиты = Новый("ОписаниеЗащитыОтОпасныхДействий" + "");
	ПараметрыЗащиты.ПредупреждатьОбОпасныхДействиях = Ложь;                                            
	//
	// Данные = Новый ДвоичныеДанные(ИмяВременногоФайла);
	АдресОбработкиДействий = ПоместитьВоВременноеХранилище(ОбработкаПроверки, УникальныйИдентификатор);
	Обработка =  ВнешниеОбработки.Создать(ВнешниеОбработки.Подключить(АдресОбработкиДействий,
		 Объект.Действие.НазваниеОбработки, Ложь, ПараметрыЗащиты),
		 Ложь);
	ПроверяемыеТипы = Новый Массив;
	Если ЗначениеЗаполнено(Объект.УсловиеСрабатывания.ОбъектДействия) Тогда
		ПроверяемыйТип = Тип(ОбщегоНазначения.ВидОбъектаПоТипу(ТипЗнч(Объект.УсловиеСрабатывания.ОбъектДействия.ЗначениеПустойСсылки))
			+ "Объект." + Объект.УсловиеСрабатывания.ОбъектДействия.Имя);
		ПроверяемыеТипы.Добавить(ПроверяемыйТип);
	Иначе
		Для каждого Строка Из Объект.УсловиеСрабатывания.ОбъектыОбработки Цикл
			Если ЗначениеЗаполнено(Строка.ОбъектОбработки) Тогда
				ПроверяемыйТип = Тип(ОбщегоНазначения.ВидОбъектаПоТипу(ТипЗнч(Строка.ОбъектОбработки.ЗначениеПустойСсылки))
					+ "Объект." + Строка.ОбъектОбработки.Имя);
				ПроверяемыеТипы.Добавить(ПроверяемыйТип);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Если Обработка.Метаданные().Реквизиты.Найти("ОбъектДействия") <> Неопределено Тогда
		Если CRM_ОбщегоНазначенияКлиентСервер.ПересечениеМножеств(Обработка.Метаданные().Реквизиты.ОбъектДействия.Тип.Типы(),
			 ПроверяемыеТипы).Количество() > 0 Тогда
			Возврат Истина;
		Иначе
			Если Обработка.Метаданные().Реквизиты.ОбъектДействия.Тип.Типы().Количество() = 0 Тогда // проверка для произвольного типа
				Возврат Истина;
			КонецЕсли;	
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Данное действие не подходит для обработки триггера (несоответствие типов объектов обработки)";
			Сообщение.Сообщить();
			Объект.Действие = Справочники.CRM_ДействияТриггеров.ПустаяСсылка();
			Возврат Ложь;
		КонецЕсли;	
	КонецЕсли;	
КонецФункции

&НаСервере
Процедура ДействиеПриИзмененииНаСервере()
	Если Объект.Действие <> Справочники.CRM_ДействияТриггеров.ПустаяСсылка() Тогда
		ПроверитьСовместимостьОбработки();
		АдресНастроекДействий = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);		
	КонецЕсли;
	Объект.Наименование = Объект.Действие.Наименование + ", " 
		+ НРег(Лев(Объект.УсловиеСрабатывания.Наименование, 1)) + Сред(Объект.УсловиеСрабатывания.Наименование, 2);
КонецПроцедуры

&НаКлиенте
Процедура ДействиеПриИзменении(Элемент) Экспорт // АПК:78 - исключить из проверки.
	Если НЕ Объект.Действие.Пустая() Тогда
	
		#Если Не ВебКлиент Тогда
			Если CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.Действие, "РежимОтладки") Тогда
				ИмяФайлаОбработки = CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.Действие, "ПутьКОбработке");
				НачатьПомещениеФайла(Новый ОписаниеОповещения("ИзменитьДействиеПродолжение", ЭтотОбъект), "",
					 ИмяФайлаОбработки, Ложь,
					 УникальныйИдентификатор);
			Иначе
				АдресОбработкиДействий = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
				ДействиеПриИзмененииНаСервере();
			КонецЕсли;
		#Иначе
			АдресОбработкиДействий = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
			ДействиеПриИзмененииНаСервере();
		#КонецЕсли
		
	Иначе
		АдресОбработкиДействий = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);		
		АдресНастроекДействий = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);		
	КонецЕсли;
	Объект.ПредставлениеНастроекДействия = НСтр("ru='Настройки действия';en='Action settings'");
	Элементы.ПредставлениеНастроекДействия.Высота = 1;
	НастроитьДействие(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьДействиеПродолжение(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	АдресОбработкиДействий = Адрес; 
	АдресНастроекДействий = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	ДействиеПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбновитьНастройкиСКД()
	КомпановщикНастроекУсловий.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанных));
	КомпановщикНастроекУсловий.ЗагрузитьНастройки(ПолучитьИзВременногоХранилища(АдресНастроекКомпоновкиДанных));
	КомпановщикНастроекУсловий.Восстановить();
КонецПроцедуры	

&НаКлиенте
Процедура НастроитьУсловияЗавершениеСКД(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		АдресНастроекКомпоновкиДанных = ПоместитьВоВременноеХранилище(Результат, УникальныйИдентификатор);
		ОбновитьНастройкиСКД();
		Объект.ПредставлениеНастроекУсловия = Строка(Результат.Отбор);
		Элементы.ПредставлениеНастроекУсловия.Высота = СтрЧислоСтрок(Объект.ПредставлениеНастроекУсловия);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НастроитьУсловияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		АдресНастроекУсловий = ПоместитьВоВременноеХранилище(Результат, УникальныйИдентификатор);
		Если Результат.Свойство("ПредставлениеНастроекУсловия") Тогда
			Если ЗначениеЗаполнено(Результат.ПредставлениеНастроекУсловия) Тогда
				Объект.ПредставлениеНастроекУсловия = Результат.ПредставлениеНастроекУсловия;
			Иначе
				Объект.ПредставлениеНастроекУсловия = НСтр("ru='Настройки условия';en='Settings conditions'");
			КонецЕсли;
			Элементы.ПредставлениеНастроекУсловия.Высота = СтрЧислоСтрок(Объект.ПредставлениеНастроекУсловия);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьДвоичныеДанныеИзХранилища(ОбъектПолучения, Реквизит)
	тмпОбъект = РеквизитФормыВЗначение("Объект");
	Возврат(тмпОбъект[ОбъектПолучения][Реквизит].Получить());
КонецФункции

&НаСервере
Процедура УстановитьУсловиеПоУмолчанию(Условие)
	
	Если ТипЗнч(Условие) = Тип("СправочникСсылка.CRM_УсловияСрабатыванияТриггеров") Тогда
		
		Объект.УсловиеСрабатывания = Условие;
		
	ИначеЕсли ТипЗнч(Условие) = Тип("Структура") Тогда
		
		Если Условие.Свойство("Событие") И Условие.Свойство("ОбъектОбработки") Тогда
			
			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	ОбъектыОбработкиУсловий.Ссылка КАК Условие
			|ИЗ
			|	Справочник.CRM_УсловияСрабатыванияТриггеров.ОбъектыОбработки КАК ОбъектыОбработкиУсловий
			|ГДЕ
			|	ОбъектыОбработкиУсловий.ОбъектОбработки = &ОбъектОбработки
			|	И ОбъектыОбработкиУсловий.Ссылка.Событие = &Событие
			|	И ОбъектыОбработкиУсловий.Ссылка.ОбъектДействия В(&ОбъектыДействия)");
			
			Запрос.УстановитьПараметр("Событие", Условие.Событие);
			Запрос.УстановитьПараметр("ОбъектОбработки", Условие.ОбъектОбработки);
			
			ОбъектыДействия = Новый Массив;
			ОбъектыДействия.Добавить(Условие.ОбъектОбработки);
			ОбъектыДействия.Добавить(Справочники.ИдентификаторыОбъектовМетаданных.ПустаяСсылка());
			Запрос.УстановитьПараметр("ОбъектыДействия", ОбъектыДействия);
			
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				Объект.УсловиеСрабатывания = Выборка.Условие;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтложенноеВыполнениеПриИзменении(Элемент)
	Элементы.ГруппаОтложеноНа.Видимость = Объект.ОтложенноеВыполнение;
	Элементы.ГруппаВыполнятьВСостоянииИнтереса.Видимость = (ЗначениеЗаполнено(Объект.СостояниеИнтереса)
		 И (Объект.ОтложенноеВыполнение
		 ИЛИ ЗначениеЗаполнено(Объект.ПовторятьПриОшибке)));
КонецПроцедуры

&НаКлиенте
Процедура ОтложеноПериодичностьПриИзменении(Элемент)
	ВидимостьУчитвыатьГрафик();
КонецПроцедуры
	
&НаСервере
Процедура ВидимостьУчитвыатьГрафик()
	
	ВидимостьФлага = (Объект.ОтложеноПериодичность = Перечисления.CRM_ПериодичностьОповещений.День
		Или Объект.ОтложеноПериодичность = Перечисления.CRM_ПериодичностьОповещений.Неделя);
	Элементы.УчитыватьГрафикРаботы.Видимость = ВидимостьФлага;
	
КонецПроцедуры

&НаКлиенте
Процедура ПовторятьПриОшибкеПриИзменении(Элемент)
	Элементы.ГруппаВыполнятьВСостоянииИнтереса.Видимость = (ЗначениеЗаполнено(Объект.СостояниеИнтереса)
		 И (Объект.ОтложенноеВыполнение
		 ИЛИ ЗначениеЗаполнено(Объект.ПовторятьПриОшибке)));
КонецПроцедуры

&НаКлиенте
Процедура СостояниеИнтересаПриИзменении(Элемент)
	Если ТипЗнч(Объект.СостояниеИнтереса) = Тип("СправочникСсылка.CRM_СостоянияИнтересов") Тогда
		Элементы.ВыполнятьВСостоянииИнтереса.Заголовок = НСтр("ru='Выполнять пока Интерес находится в состоянии';
			|en='Execute while lead is in the state'") 
			+ ":";
	ИначеЕсли ТипЗнч(Объект.СостояниеИнтереса) = Тип("СправочникСсылка.CRM_ТочкиМаршрутов") Тогда
		Элементы.ВыполнятьВСостоянииИнтереса.Заголовок = НСтр("ru='Выполнять пока Бизнес-процесс находится на этапе';
			|en='Execute till Business Process is on stage'") 
			+ ":";
	КонецЕсли;
	Элементы.ГруппаВыполнятьВСостоянииИнтереса.Видимость = (ЗначениеЗаполнено(Объект.СостояниеИнтереса)
		 И (Объект.ОтложенноеВыполнение
		 ИЛИ ЗначениеЗаполнено(Объект.ПовторятьПриОшибке)));
	Если Не ЗначениеЗаполнено(Объект.СценарийКарта) Тогда
		СостояниеИнтересаПриИзмененииСервер();
		СценарийКартаПриИзменении(Неопределено);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СостояниеИнтересаПриИзмененииСервер()
	Если ТипЗнч(Объект.СостояниеИнтереса) = Тип("СправочникСсылка.CRM_СостоянияИнтересов") Тогда
		Объект.СценарийКарта = Объект.СостояниеИнтереса.Родитель;
	ИначеЕсли ТипЗнч(Объект.СостояниеИнтереса) = Тип("СправочникСсылка.CRM_ТочкиМаршрутов") Тогда
		Объект.СценарийКарта = Объект.СостояниеИнтереса.Владелец;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СценарийКартаПриИзменении(Элемент)
	НовыеПараметрыВыбора = Новый Массив;
	Если ТипЗнч(Объект.СценарийКарта) = Тип("СправочникСсылка.CRM_СостоянияИнтересов") Тогда
		Элементы.СостояниеИнтереса.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.CRM_СостоянияИнтересов");
		Если ЗначениеЗаполнено(Объект.СценарийКарта) Тогда
			НовыеПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.Родитель", Объект.СценарийКарта));
		КонецЕсли;
	ИначеЕсли ТипЗнч(Объект.СценарийКарта) = Тип("СправочникСсылка.CRM_КартыМаршрутов") Тогда
		Элементы.СостояниеИнтереса.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.CRM_ТочкиМаршрутов");
		Если ЗначениеЗаполнено(Объект.СценарийКарта) Тогда
			НовыеПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.Владелец", Объект.СценарийКарта));
		КонецЕсли;
	Иначе	
		Элементы.СостояниеИнтереса.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.CRM_СостоянияИнтересов,
			| СправочникСсылка.CRM_ТочкиМаршрутов");
	КонецЕсли;
	Элементы.СостояниеИнтереса.ПараметрыВыбора = Новый ФиксированныйМассив(НовыеПараметрыВыбора);
КонецПроцедуры

#КонецОбласти 
