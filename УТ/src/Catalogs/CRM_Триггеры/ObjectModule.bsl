#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ИДЗаданияОтложенных = "c7eddcdc-02d2-48fb-a742-6c3118f37d98";
	Если ПометкаУдаления Тогда
		Действует = Ложь;
	КонецЕсли;
	
	Если УсловиеСрабатывания = Справочники.CRM_УсловияСрабатыванияТриггеров.ПоРасписанию И Действует Тогда
		СписокЗаданий = Новый Массив;
		Если ЗначениеЗаполнено(УникальныйИдентификаторЗадания) Тогда
			СписокЗаданий = РегламентныеЗаданияСервер.НайтиЗадания(Новый Структура("Ключ", УникальныйИдентификаторЗадания));
		КонецЕсли;
		
		Если СписокЗаданий.Количество() = 0 Тогда
			ПараметрыЗадания = Новый Структура("Использование", Ложь);
			ПараметрыЗадания.Вставить("Метаданные", Метаданные.РегламентныеЗадания.CRM_ВыполнениеТриггеров);
			УникальныйИдентификаторЗадания = Строка(Новый УникальныйИдентификатор);
			ПараметрыЗадания.Вставить("Ключ", УникальныйИдентификаторЗадания);
			ПараметрыЗадания.Вставить("Наименование", "Периодическое выполнение триггера: " + Наименование);
			ПараметрыСтруктура = Новый Структура;
			ПараметрыСтруктура.Вставить("УникальныйИдентификаторЗадания", УникальныйИдентификаторЗадания);
			ПараметрыВыполненияЗадания = Новый Массив;
			ПараметрыВыполненияЗадания.Добавить(ПараметрыСтруктура);
			ПараметрыЗадания.Вставить("Параметры", ПараметрыВыполненияЗадания);
			РегламентноеЗадание = РегламентныеЗаданияСервер.ДобавитьЗадание(ПараметрыЗадания);
		Иначе	
			Для Каждого Задание Из СписокЗаданий Цикл
				ПараметрыЗадания = Новый Структура("Использование", (Строка(Задание.Расписание) <> "один день; один раз в день"
					 И Действует));
				ПараметрыЗадания.Вставить("Наименование", "Периодическое выполнение триггера: " + Наименование);
				ПараметрыСтруктура = Новый Структура;
				ПараметрыСтруктура.Вставить("УникальныйИдентификаторЗадания", УникальныйИдентификаторЗадания);
				ПараметрыВыполненияЗадания = Новый Массив;
				ПараметрыВыполненияЗадания.Добавить(ПараметрыСтруктура);
				ПараметрыЗадания.Вставить("Параметры", ПараметрыВыполненияЗадания);
				РегламентныеЗаданияСервер.ИзменитьЗадание(Задание, ПараметрыЗадания);
			КонецЦикла;
		КонецЕсли;
	ИначеЕсли ОтложенноеВыполнение И Действует Тогда
		СписокЗаданий = Новый Массив;
		СписокЗаданий = РегламентныеЗаданияСервер.НайтиЗадания(Новый Структура("Ключ", ИДЗаданияОтложенных));
		УникальныйИдентификаторЗадания = ИДЗаданияОтложенных;
		
		Если СписокЗаданий.Количество() = 0 Тогда
			ПараметрыЗадания = Новый Структура("Использование", Истина);
			ПараметрыЗадания.Вставить("Метаданные", Метаданные.РегламентныеЗадания.CRM_ОтложенноеВыполнениеТриггеров);
			ПараметрыЗадания.Вставить("Ключ", ИДЗаданияОтложенных);
			ПараметрыЗадания.Вставить("Наименование", "Отложенное выполнение триггеров");
			ПараметрыСтруктура = Новый Структура;
			ПараметрыСтруктура.Вставить("УникальныйИдентификаторЗадания", ИДЗаданияОтложенных);
			ПараметрыВыполненияЗадания = Новый Массив;
			ПараметрыВыполненияЗадания.Добавить(ПараметрыСтруктура);
			ПараметрыЗадания.Вставить("Параметры", ПараметрыВыполненияЗадания);
			РегламентноеЗадание = РегламентныеЗаданияСервер.ДобавитьЗадание(ПараметрыЗадания);
		Иначе	
			Для Каждого Задание Из СписокЗаданий Цикл
				ПараметрыЗадания = Новый Структура("Использование", Истина);
				ПараметрыЗадания.Вставить("Наименование", "Отложенное выполнение триггеров");
				ПараметрыСтруктура = Новый Структура;
				ПараметрыСтруктура.Вставить("УникальныйИдентификаторЗадания", ИДЗаданияОтложенных);
				ПараметрыВыполненияЗадания = Новый Массив;
				ПараметрыВыполненияЗадания.Добавить(ПараметрыСтруктура);
				ПараметрыЗадания.Вставить("Параметры", ПараметрыВыполненияЗадания);
				РегламентныеЗаданияСервер.ИзменитьЗадание(Задание, ПараметрыЗадания);
			КонецЦикла;
		КонецЕсли;
	Иначе	
		Если ЗначениеЗаполнено(УникальныйИдентификаторЗадания) Тогда
			Если УникальныйИдентификаторЗадания = ИДЗаданияОтложенных Тогда
				Если ЕстьОтложенныеТриггерыКромеТекущего() Тогда
					Возврат;
				КонецЕсли;
			КонецЕсли;
			СписокЗаданий = РегламентныеЗаданияСервер.НайтиЗадания(Новый Структура("Ключ", УникальныйИдентификаторЗадания));
			Для Каждого Задание Из СписокЗаданий Цикл
				ПараметрыЗадания = Новый Структура("Использование", Ложь);
				РегламентныеЗаданияСервер.ИзменитьЗадание(Задание, ПараметрыЗадания);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	Если ПометкаУдаления Тогда
		Если ЗначениеЗаполнено(УникальныйИдентификаторЗадания) Тогда
			РегламентныеЗаданияСервер.УдалитьЗадание(УникальныйИдентификаторЗадания);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	УникальныйИдентификаторЗадания = "";
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЕстьОтложенныеТриггерыКромеТекущего()
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	CRM_Триггеры.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.CRM_Триггеры КАК CRM_Триггеры
	                      |ГДЕ
	                      |	CRM_Триггеры.Ссылка <> &Ссылка
	                      |	И CRM_Триггеры.Действует
	                      |	И CRM_Триггеры.ОтложенноеВыполнение");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Возврат (НЕ Запрос.Выполнить().Пустой());
КонецФункции

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru='Недопустимый вызов объекта на клиенте.';en='Invalid call of object on client.'");
#КонецЕсли
