#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СокращенноеНаименованиеКонфигурации =
		ИнтеграцияС1СДокументооборотБазоваяФункциональность.СокращенноеНаименованиеКонфигурации();
	Если ЗначениеЗаполнено(СокращенноеНаименованиеКонфигурации) Тогда
		Элементы.МестоВыполненияВыражения.СписокВыбора.Очистить();
		Элементы.МестоВыполненияВыражения.СписокВыбора.Добавить(
			Перечисления.МестаВыполненияВыраженийНаВстроенномЯзыке.НаСторонеИС,
			СтрШаблон(НСтр("ru = 'На стороне %1'"), СокращенноеНаименованиеКонфигурации));
		Элементы.МестоВыполненияВыражения.СписокВыбора.Добавить(
			Перечисления.МестаВыполненияВыраженийНаВстроенномЯзыке.НаСторонеДО,
			НСтр("ru = 'На стороне 1С:Документооборот'"));
	КонецЕсли;
	
	Параметры.Свойство("ТипОбъектаДО", ТипОбъектаДО);
	Параметры.Свойство("ТипОбъектаИС", ТипОбъектаИС);
	Параметры.Свойство("ИмяРеквизитаОбъектаИС", ИмяРеквизитаОбъектаИС);
	Параметры.Свойство("ЭтоТаблица", ЭтоТаблица);
	Параметры.Свойство("Таблица", Таблица);
	Параметры.Свойство("ВидДокументаДО", ВидДокументаДО);
	Параметры.Свойство("ВычисляемоеВыражение", ВычисляемоеВыражение);
	Параметры.Свойство("МестоВыполненияВыражения", МестоВыполненияВыражения);
	Параметры.Свойство("ДоступнаТекущаяСтрока", ДоступнаТекущаяСтрока);
	
	Если Не ЗначениеЗаполнено(МестоВыполненияВыражения) Тогда
		МестоВыполненияВыражения = Перечисления.МестаВыполненияВыраженийНаВстроенномЯзыке.НаСторонеИС;
	КонецЕсли;
	
	ЗаполнитьИнструкцию();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РеквизитыПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ДанныеСобытия.Button) И ДанныеСобытия.Button.tagName = "U" Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ЗначениеЗаполнено(ДанныеСобытия.HRef) Тогда
		Возврат;
	КонецЕсли;
	
	Позиция = СтрНайти(ДанныеСобытия.HRef, "#", НаправлениеПоиска.СКонца);
	Ссылка = Сред(ДанныеСобытия.HRef, Позиция + 1);
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ссылка", Ссылка);
	
	ОткрытьФорму("Обработка.ИнтеграцияС1СДокументооборотБазоваяФункциональность.Форма.ОписаниеВебСервисов",
		ПараметрыФормы, ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

&НаКлиенте
Процедура МестоВыполненияВыраженияПриИзменении(Элемент)
	
	ЗаполнитьИнструкцию();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Асинх Процедура КомандаОчистить(Знач Команда)
	
	ТекстВопроса = НСтр("ru = 'Очистить введенное выражение?'");
	Ответ = Ждать ИнтеграцияС1СДокументооборотБазоваяФункциональностьКлиент.ПоказатьВопросДаНетАсинх(ТекстВопроса);
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Ответ = Новый Структура;
		Ответ.Вставить("ВычисляемоеВыражение", "");
		Ответ.Вставить("МестоВыполненияВыражения", МестоВыполненияВыражения);
		
		Закрыть(Ответ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Ответ = Новый Структура;
	Ответ.Вставить("ВычисляемоеВыражение", ВычисляемоеВыражение);
	Ответ.Вставить("МестоВыполненияВыражения", МестоВыполненияВыражения);
	
	Закрыть(Ответ);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПроверить(Команда)
	
	ОчиститьСообщения();
	ПроверитьВыражениеНаВстроенномЯзыке(ВычисляемоеВыражение, ТипОбъектаДО, ТипОбъектаИС);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПроверитьВыражениеНаВстроенномЯзыке(ВычисляемоеВыражение, ТипОбъектаДО, ТипОбъектаИС)
	
	КонтекстВыражения = Справочники.ПравилаИнтеграцииС1СДокументооборотом3.КонтекстВыраженияНаВстроенномЯзыке();
	КонтекстВыражения.ТаблицаИсточник = Таблица;
	КонтекстВыражения.ВидДокументаДОID = ВидДокументаДО;
	
	Справочники.ПравилаИнтеграцииС1СДокументооборотом3.ПроверитьВыражениеПравилаЗагрузки(
		ВычисляемоеВыражение,
		МестоВыполненияВыражения,
		ТипОбъектаДО,
		ТипОбъектаИС,
		КонтекстВыражения,
		ЭтоТаблица);
	
	ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Ошибок не обнаружено'"));
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИнструкцию()
	
	ИнструкцияМассив = Новый Массив;
	
	ИнструкцияМассив.Добавить(
		"<html>
		|<style type=""text/css"">
		|	body {
		|		overflow:    auto;
		|		margin-top:  12px;
		|		margin-left: 20px;
		|		font-family: MS Shell Dlg, Microsoft Sans Serif, sans-serif;
		|		font-size:   8pt;}
		|	table {
		|		width:       450px;
		|		font-family: MS Shell Dlg, Microsoft Sans Serif, sans-serif;
		|		font-size:   8pt;}
		|	td {vertical-align: top;}
		|	p {
		|		margin-top: 7px;}
		|</style>
		|<body>");
	
	Заголовок = НСтр("ru = 'Выражение на встроенном языке'");
	
	ИнструкцияМассив.Добавить("<p>");
	ИнструкцияМассив.Добавить(
		СтрШаблон(
			НСтр("ru = 'Результат вычисления выражения на встроенном языке 1С:Предприятия
				|должен присваиваться свойству %1 переменной %2.'"),
			"<b>Результат</b>",
			"<b>Параметры</b>"));
	ИнструкцияМассив.Добавить(" ");
	
	Если ЭтоТаблица Тогда
		ИнструкцияМассив.Добавить(
			СтрШаблон(
				НСтр("ru = 'Для заполнения таблицы результат должен иметь тип %1 с колонками:'"),
			"<b>ТаблицаЗначений</b>"));
		ИнструкцияМассив.Добавить("</p><table>");
		
		ИнструкцияМассив.Добавить("<tr><td>");
		ИнструкцияМассив.Добавить("<b>");
		ИнструкцияМассив.Добавить(НСтр("ru ='Имя реквизита'"));
		ИнструкцияМассив.Добавить("</b></td>");
		
		ИнструкцияМассив.Добавить("<td><b>");
		ИнструкцияМассив.Добавить(НСтр("ru ='Синоним'"));
		ИнструкцияМассив.Добавить("</b></td>");
		ИнструкцияМассив.Добавить("</tr>");
		
		МетаданныеОбъекта = Метаданные.НайтиПоПолномуИмени(ТипОбъектаИС);
		Для Каждого Элемент Из МетаданныеОбъекта.ТабличныеЧасти[ИмяРеквизитаОбъектаИС].Реквизиты Цикл
			ИнструкцияМассив.Добавить("<tr><td>");
			ИнструкцияМассив.Добавить(Элемент.Имя);
			ИнструкцияМассив.Добавить("</td>");
			ИнструкцияМассив.Добавить("<td>");
			ИнструкцияМассив.Добавить(Элемент.Синоним);
			ИнструкцияМассив.Добавить("</td></tr>");
		КонецЦикла;
		
		ИнструкцияМассив.Добавить("</table>");
	КонецЕсли;
	
	Если ДоступнаТекущаяСтрока Тогда
		ИнструкцияМассив.Добавить("<p>");
		ИнструкцияМассив.Добавить(СтрШаблон(
			НСтр("ru ='К данным текущей строки табличной части источника""%1"", из которой выполняется
			|заполнение табличной части приемника, можно обращаться через свойство %2 переменной %3.'"),
				Таблица,
				"<b>ТекущаяСтрока</b>",
				"<b>Параметры</b>"));
	КонецЕсли;
	
	ИнструкцияМассив.Добавить("<p>");
	ИнструкцияМассив.Добавить(НСтр("ru ='К объекту'"));
	ИнструкцияМассив.Добавить(" ");
	
	ИнструкцияМассив.Добавить(НСтр("ru = '1С:Документооборота'"));
	
	ИнструкцияМассив.Добавить(" ");
	ИнструкцияМассив.Добавить(
		СтрШаблон(
			НСтр("ru = 'можно обращаться через свойство %1 переменной %2.
				|Реквизиты источника:'"),
			"<b>Источник</b>",
			"<b>Параметры</b>"));
	
	Если МестоВыполненияВыражения = Перечисления.МестаВыполненияВыраженийНаВстроенномЯзыке.НаСторонеИС Тогда
		СоставРеквизитов = Справочники.ПравилаИнтеграцииС1СДокументооборотом3.РеквизитыОбъектаДО(
			ТипОбъектаДО,
			ВидДокументаДО,
			Ложь);
		СоставРеквизитов.Сортировать("ДопРеквизит, ЭтоТаблица, Имя");
	ИначеЕсли МестоВыполненияВыражения = Перечисления.МестаВыполненияВыраженийНаВстроенномЯзыке.НаСторонеДО Тогда
		Прокси = ИнтеграцияС1СДокументооборотБазоваяФункциональностьПовтИсп.ПолучитьПрокси();
		Запрос = ИнтеграцияС1СДокументооборотБазоваяФункциональность.СоздатьОбъект(Прокси, "DMGetObjectMetadataRequest");
		
		Запрос.objectType = ИнтеграцияС1СДокументооборотБазоваяФункциональность.СоздатьОбъект(Прокси, "DMType");
		Запрос.objectType.xdtoClassName = ТипОбъектаДО;
		Запрос.objectType.presentation = ТипОбъектаДО;
		
		МетаданныеОбъекта = ИнтеграцияС1СДокументооборотБазоваяФункциональность.ВыполнитьЗапрос(Прокси, Запрос);
		ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПроверитьВозвратВебСервиса(Прокси, МетаданныеОбъекта);
		
		СоставРеквизитов = Справочники.ПравилаИнтеграцииС1СДокументооборотом3.СтруктураТаблицыРеквизитовДО();
		
		Для Каждого МетаданныеРеквизит Из МетаданныеОбъекта.attributes Цикл
			НоваяСтрока = СоставРеквизитов.Добавить();
			НоваяСтрока.Имя = МетаданныеРеквизит.name;
			НоваяСтрока.Представление = МетаданныеРеквизит.synonym;
			Если СтроковыеФункцииКлиентСервер.ЭтоУникальныйИдентификатор(МетаданныеРеквизит.name) Тогда
				НоваяСтрока.ДопРеквизит = Истина;
				НоваяСтрока.ДопРеквизитID = МетаданныеРеквизит.name;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого МетаданныеТаблица Из МетаданныеОбъекта.tabularSections Цикл
			НоваяСтрока = СоставРеквизитов.Добавить();
			НоваяСтрока.Имя = МетаданныеТаблица.name;
			НоваяСтрока.ТаблицаДляСортировки = МетаданныеТаблица.name;
			НоваяСтрока.Представление = МетаданныеТаблица.synonym;
			НоваяСтрока.ЭтоТаблица = Истина;
			
			Для Каждого МетаданныеРеквизит Из МетаданныеТаблица.attributes Цикл
				НоваяСтрока = СоставРеквизитов.Добавить();
				НоваяСтрока.Имя = МетаданныеРеквизит.name;
				НоваяСтрока.Представление = МетаданныеРеквизит.synonym;
				НоваяСтрока.Таблица = МетаданныеТаблица.name;
				НоваяСтрока.ТаблицаДляСортировки = МетаданныеТаблица.name;
			КонецЦикла;
		КонецЦикла;
		
		СоставРеквизитов.Сортировать("ДопРеквизит, ТаблицаДляСортировки, ЭтоТаблица УБЫВ, Имя");
	КонецЕсли;
	
	ВывестиТаблицуРеквизитов(ИнструкцияМассив, СоставРеквизитов);
	
	Если МестоВыполненияВыражения = Перечисления.МестаВыполненияВыраженийНаВстроенномЯзыке.НаСторонеИС Тогда
		
		ИнструкцияМассив.Добавить("<p>");
		ИнструкцияМассив.Добавить(НСтр("ru ='К объекту'"));
		ИнструкцияМассив.Добавить(" ");
		
		Если ЗначениеЗаполнено(СокращенноеНаименованиеКонфигурации) Тогда
			ИнструкцияМассив.Добавить(СокращенноеНаименованиеКонфигурации);
		Иначе
			ИнструкцияМассив.Добавить(НСтр("ru = 'интегрированной системы'"));
		КонецЕсли;
		
		ИнструкцияМассив.Добавить(" ");
		ИнструкцияМассив.Добавить(
			СтрШаблон(
				НСтр("ru = 'можно обращаться через свойство %1 переменной %2.
					|Реквизиты приемника:'"),
				"<b>Приемник</b>",
				"<b>Параметры</b>"));
		
		СоставРеквизитов = ИнтеграцияС1СДокументооборотБазоваяФункциональность.РеквизитыОбъектаИС(ТипОбъектаИС, Истина);
		СоставРеквизитов.Колонки.Добавить("ДопРеквизит", Новый ОписаниеТипов("Булево"));
		СоставРеквизитов.Сортировать("ЭтоДополнительныйРеквизитИС, ЭтоТаблица, Имя");
		
		ВывестиТаблицуРеквизитов(ИнструкцияМассив, СоставРеквизитов, Истина);
		
	КонецЕсли;
	
	ИнструкцияМассив.Добавить("</body></html>");
	
	Инструкция = СтрСоединить(ИнструкцияМассив);
	
КонецПроцедуры

&НаСервере
Процедура ВывестиТаблицуРеквизитов(ИнструкцияМассив, СоставРеквизитов, ВыводРеквизитовОбъектаИС = Ложь)
	
	ИнструкцияМассив.Добавить("</p><table>");
	
	ИнструкцияМассив.Добавить("<tr><td>");
	ИнструкцияМассив.Добавить("<b>");
	ИнструкцияМассив.Добавить(НСтр("ru ='Имя реквизита'"));
	ИнструкцияМассив.Добавить("</b></td>");
	
	ИнструкцияМассив.Добавить("<td><b>");
	ИнструкцияМассив.Добавить(НСтр("ru ='Синоним'"));
	ИнструкцияМассив.Добавить("</b></td>");
	ИнструкцияМассив.Добавить("</tr>");
	
	ВыведенЗаголовокДопРеквизитов = Ложь;
	ИдентификаторДопРеквизита = "00000000-0000-0000-0000-000000000000";
	ИдентификаторДействияСогласования = "status_00000000_0000_0000_0000_000000000000";
	ЕстьТаблицы = Ложь;
	
	Для Каждого СтруктураРеквизита Из СоставРеквизитов Цикл
		
		Если ЗначениеЗаполнено(СтруктураРеквизита.Таблица) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ВыводРеквизитовОбъектаИС Тогда
			ЭтоДопРеквизит = СтруктураРеквизита.ЭтоДополнительныйРеквизитИС;
		Иначе
			ЭтоДопРеквизит = СтруктураРеквизита.ДопРеквизит;
		КонецЕсли;
		
		Если ЭтоДопРеквизит И Не ВыведенЗаголовокДопРеквизитов Тогда
			ИнструкцияМассив.Добавить("<tr><td>");
			ИнструкцияМассив.Добавить("<b>");
			ИнструкцияМассив.Добавить(НСтр("ru = 'Дополнительные реквизиты:'"));
			ИнструкцияМассив.Добавить("</b>");
			ИнструкцияМассив.Добавить("</tr></td>");
			ВыведенЗаголовокДопРеквизитов = Истина;
		КонецЕсли;
		
		Если СтруктураРеквизита.ЭтоТаблица Тогда
			ЕстьТаблицы = Истина;
			
			ИнструкцияМассив.Добавить("<tr><td>");
			ИнструкцияМассив.Добавить("<b>");
			ИнструкцияМассив.Добавить(СтрШаблон(НСтр("ru = 'Табличная часть %1'"), СтруктураРеквизита.Имя));
			ИнструкцияМассив.Добавить("</b></td>");
			
			ИнструкцияМассив.Добавить("<td><b>");
			ИнструкцияМассив.Добавить(СтруктураРеквизита.Представление);
			ИнструкцияМассив.Добавить("</b></td>");
			
			ИнструкцияМассив.Добавить("</tr>");
			
			РеквизитыТаблицы = СоставРеквизитов.НайтиСтроки(Новый Структура("Таблица", СтруктураРеквизита.Имя));
			Для Каждого РеквизитТаблицы Из РеквизитыТаблицы Цикл
				ИнструкцияМассив.Добавить("<tr>");
				
				ВывестиИмяРеквизитаДО(ИнструкцияМассив, РеквизитТаблицы, РеквизитТаблицы.Имя);
				
				ИнструкцияМассив.Добавить("<td>");
				ИнструкцияМассив.Добавить(РеквизитТаблицы.Представление);
				ИнструкцияМассив.Добавить("</td>");
				
				ИнструкцияМассив.Добавить("</tr>");
			КонецЦикла;
			Продолжить;
		КонецЕсли;
		
		Если ЭтоДопРеквизит Тогда
			Если ВыводРеквизитовОбъектаИС Тогда
				ИдентификаторДопРеквизита = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
					СтруктураРеквизита.ДополнительныйРеквизитИС,
					"ИдентификаторДляФормул");
				ИмяРеквизита = СтрШаблон("ID: ""%1""<br>ИдентификаторДляФормул: ""%2""</br>",
					СтруктураРеквизита.ДополнительныйРеквизитИС.УникальныйИдентификатор(),
					ИдентификаторДопРеквизита);
			Иначе
				ИдентификаторДопРеквизита = СтруктураРеквизита.ДопРеквизитID;
				Если МестоВыполненияВыражения = Перечисления.МестаВыполненияВыраженийНаВстроенномЯзыке.НаСторонеИС Тогда
					ИмяРеквизита = СтрШаблон("<a href=""#DMAdditionalProperty"">ID: ""%1""</a>", ИдентификаторДопРеквизита);
				Иначе
					ИмяРеквизита = СтрШаблон("ID: ""%1""", ИдентификаторДопРеквизита);
				КонецЕсли;
			КонецЕсли;
		Иначе
			ИмяРеквизита = СтруктураРеквизита.Имя;
		КонецЕсли;
		
		ИнструкцияМассив.Добавить("<tr>");
		
		ВывестиИмяРеквизитаДО(ИнструкцияМассив, СтруктураРеквизита, ИмяРеквизита);
		
		ИнструкцияМассив.Добавить("<td>");
		ИнструкцияМассив.Добавить(СтруктураРеквизита.Представление);
		Если СтрНайти(ИмяРеквизита, "status_") = 1 И СтрНайти(СтруктураРеквизита.Представление, "Согласование") > 0 Тогда
			ИдентификаторДействияСогласования = ИмяРеквизита;
		КонецЕсли;
		ИнструкцияМассив.Добавить("</td>");
		
		ИнструкцияМассив.Добавить("</tr>");
		
	КонецЦикла;
	
	ИнструкцияМассив.Добавить("</table>");
	
	// Выведем примеры выражений.
	Если ВыведенЗаголовокДопРеквизитов Тогда
		Если ВыводРеквизитовОбъектаИС Тогда
			ЗаголовокРаздела = НСтр("ru = 'Пример обращения к дополнительным реквизитам приемника'");
			ПримерВыражения =
				"ЗначениеДопРеквизита = Неопределено;
				|Для Каждого Строка Из Параметры.Приемник.ДополнительныеРеквизиты Цикл
				|	Если Строка.Свойство.ИдентификаторДляФормул = ""ИдентификаторДопРеквизита"" Тогда
				|		ЗначениеДопРеквизита = Строка.Значение;
				|	КонецЕсли;
				|КонецЦикла;";
		Иначе
			ЗаголовокРаздела = НСтр("ru = 'Пример обращения к дополнительным реквизитам источника'");
			Если МестоВыполненияВыражения = Перечисления.МестаВыполненияВыраженийНаВстроенномЯзыке.НаСторонеДО Тогда
				Если ЭтоТаблица Тогда
					ПримерВыражения =
						"ЗначениеДопРеквизита = Неопределено;
						|Для Каждого Строка Из Параметры.Источник.ДополнительныеРеквизиты Цикл
						|	Если СокрЛП(Строка.Свойство.УникальныйИдентификатор()) = ""ИдентификаторДопРеквизита"" Тогда
						|		ЗначениеДопРеквизита = Строка.Значение;
						|	КонецЕсли;
						|КонецЦикла;";
				Иначе
					ПримерВыражения =
						"Для Каждого Строка Из Параметры.Источник.ДополнительныеРеквизиты Цикл
						|	Если СокрЛП(Строка.Свойство.УникальныйИдентификатор()) = ""ИдентификаторДопРеквизита"" Тогда
						|		Параметры.Результат = Строка.Значение;
						|	КонецЕсли;
						|КонецЦикла;";
				КонецЕсли;
			Иначе
				Если ЭтоТаблица Тогда
					ПримерВыражения =
						"ЗначениеДопРеквизита = Неопределено;
						|Для Каждого СвойствоXDTO Из Параметры.Источник.additionalProperties Цикл
						|	Если СвойствоXDTO.objectID.ID = ""ИдентификаторДопРеквизита"" Тогда
						|		ЗначениеДопРеквизита = СвойствоXDTO.propertySimpleValue;
						|	КонецЕсли;
						|КонецЦикла;";
				Иначе
					ПримерВыражения =
						"Для Каждого СвойствоXDTO Из Параметры.Источник.additionalProperties Цикл
						|	Если СвойствоXDTO.objectID.ID = ""ИдентификаторДопРеквизита"" Тогда
						|		Параметры.Результат = СвойствоXDTO.propertySimpleValue;
						|	КонецЕсли;
						|КонецЦикла;";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		ПримерВыражения = СтрЗаменить(ПримерВыражения, "ИдентификаторДопРеквизита", ИдентификаторДопРеквизита);
		ВывестиПримерВыражения(ИнструкцияМассив, ЗаголовокРаздела, ПримерВыражения);
	КонецЕсли;
	
	Если ИдентификаторДействияСогласования <> "status_00000000_0000_0000_0000_000000000000" Тогда
		ЗаголовокРаздела = НСтр("ru = 'Пример загрузки статуса согласования из 1С:Документооборота'");
		ПримерВыражения =
			"СостояниеСогласованияДО = Параметры.Источник.ИдентификаторДействияСогласования;
			|Если СостояниеСогласованияДО = ""Approved"" Тогда
			|	Параметры.Результат = Перечисления._ДемоСостоянияДоговораКонтрагента.Согласован;
			|ИначеЕсли СостояниеСогласованияДО = ""NotApproved"" Тогда
			|	Параметры.Результат = Перечисления._ДемоСостоянияДоговораКонтрагента.НеСогласован;
			|ИначеЕсли СостояниеСогласованияДО = ""AwaitingApproval"" Тогда
			|	Параметры.Результат = Перечисления._ДемоСостоянияДоговораКонтрагента.НаСогласовании;
			|Иначе
			|	Параметры.Результат = Перечисления._ДемоСостоянияДоговораКонтрагента.Проект;
			|КонецЕсли;";
		ПримерВыражения = СтрЗаменить(ПримерВыражения, "ИдентификаторДействияСогласования", ИдентификаторДействияСогласования);
		ВывестиПримерВыражения(ИнструкцияМассив, ЗаголовокРаздела, ПримерВыражения);
	КонецЕсли;
	
	Если ЕстьТаблицы
			И Не ВыводРеквизитовОбъектаИС
			И МестоВыполненияВыражения = Перечисления.МестаВыполненияВыраженийНаВстроенномЯзыке.НаСторонеИС Тогда
		ЗаголовокРаздела = НСтр("ru = 'Пример загрузки данных из табличной части 1С:Документооборота'");
		Если ЭтоТаблица Тогда
			ПримерВыражения =
				"Параметры.Результат = Новый ТаблицаЗначений;
				|Параметры.Результат.Колонки.Добавить(""СтатьяДДС"");
				|Параметры.Результат.Колонки.Добавить(""Сумма"");
				|Параметры.Результат.Колонки.Добавить(""СуммаНДС"");
				|УстановленаТЧСтатьиДДС = Параметры.Источник.Свойство(""cashFlowRows"")
				|	И ИнтеграцияС1СДокументооборотБазоваяФункциональность.СвойствоУстановлено(
				|		Параметры.Источник.cashFlowRows,
				|		""rows"");
				|Если УстановленаТЧСтатьиДДС Тогда
				|	ИндексСтроки = 0;
				|	ПереноситьСтарыеДанные =
				|		(Параметры.Источник.cashFlowRows.rows.Количество() = Параметры.Приемник.Ссылка.РасшифровкаПлатежа.Количество());
				|	Для Каждого СтрокаXDTO Из Параметры.Источник.cashFlowRows.rows Цикл
				|		СтрокаРасшифровкаПлатежа = Параметры.Результат.Добавить();
				|		Если ПереноситьСтарыеДанные Тогда
				|			ЗаполнитьЗначенияСвойств(СтрокаРасшифровкаПлатежа, Параметры.Приемник.Ссылка.РасшифровкаПлатежа[ИндексСтроки]);
				|		Иначе
				|			СтрокаРасшифровкаПлатежа.Сумма = СтрокаXDTO.total;
				|			СтрокаРасшифровкаПлатежа.СуммаНДС = СтрокаXDTO.VAT;
				|		КонецЕсли;
				|		СтрокаРасшифровкаПлатежа.СтатьяДДС =
				|			ИнтеграцияС1СДокументооборотБазоваяФункциональность.ЗначениеРеквизитаОбъектаИСПоЗначениюДляЗаполнения(
				|				Тип(""СправочникСсылка._ДемоСтатьиДвиженияДенежныхСредств""),
				|				ИнтеграцияС1СДокументооборотБазоваяФункциональность.ЗначениеДляЗаполненияРеквизитаОбъектаИС(
				|					СтрокаXDTO.item));
				|		ИндексСтроки = ИндексСтроки + 1;
				|	КонецЦикла;
				|КонецЕсли;";
		Иначе
			ПримерВыражения =
				"УстановленаТЧСтатьиДДС = Параметры.Источник.Свойство(""cashFlowRows"")
				|	И ИнтеграцияС1СДокументооборотБазоваяФункциональность.СвойствоУстановлено(
				|		Параметры.Источник.cashFlowRows, ""rows"")
				|	И Параметры.Источник.cashFlowRows.rows.Количество() > 0;
				|Если УстановленаТЧСтатьиДДС Тогда
				|	СтатьяДДС_XDTO = Параметры.Источник.cashFlowRows.rows[0].item;
				|	Параметры.Результат =
				|		ИнтеграцияС1СДокументооборотБазоваяФункциональность.ЗначениеРеквизитаОбъектаИСПоЗначениюДляЗаполнения(
				|			Тип(""СправочникСсылка._ДемоСтатьиДвиженияДенежныхСредств""),
				|			ИнтеграцияС1СДокументооборотБазоваяФункциональность.ЗначениеДляЗаполненияРеквизитаОбъектаИС(
				|				СтатьяДДС_XDTO));
				|КонецЕсли;";
		КонецЕсли;
		ВывестиПримерВыражения(ИнструкцияМассив, ЗаголовокРаздела, ПримерВыражения);
	КонецЕсли;
	
	ИнструкцияМассив.Добавить("<p>");
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ВывестиИмяРеквизитаДО(ИнструкцияМассив, СтруктураРеквизита, ИмяРеквизита)
	
	Если ТипЗнч(СтруктураРеквизита.Тип) = Тип("СписокЗначений")
				И СтруктураРеквизита.Тип.Количество() > 0
				И Лев(СтруктураРеквизита.Тип[0], 2) = "DM" Тогда
			ИнструкцияМассив.Добавить("<td><a href=""#");
			ИнструкцияМассив.Добавить(СтруктураРеквизита.Тип[0]);
			ИнструкцияМассив.Добавить(""">");
			ИнструкцияМассив.Добавить(ИмяРеквизита);
			ИнструкцияМассив.Добавить("</a></td>");
		Иначе
			ИнструкцияМассив.Добавить("<td>");
			ИнструкцияМассив.Добавить(ИмяРеквизита);
			ИнструкцияМассив.Добавить("</td>");
		КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ВывестиПримерВыражения(ИнструкцияМассив, ЗаголовокРаздела, ПримерВыражения)
	
	Если ИнструкцияМассив[ИнструкцияМассив.ВГраница()] <> "</details>" Тогда
		ИнструкцияМассив.Добавить("<p>");
	КонецЕсли;
	
	ИнструкцияМассив.Добавить("<details>");
	ИнструкцияМассив.Добавить("<summary><u>");
	ИнструкцияМассив.Добавить(ЗаголовокРаздела);
	ИнструкцияМассив.Добавить("</u></summary>");
	ИнструкцияМассив.Добавить("<blockquote><pre>");
	ИнструкцияМассив.Добавить(ПримерВыражения);
	ИнструкцияМассив.Добавить("</pre></blockquote>");
	ИнструкцияМассив.Добавить("</details>");
	
КонецПроцедуры

#КонецОбласти