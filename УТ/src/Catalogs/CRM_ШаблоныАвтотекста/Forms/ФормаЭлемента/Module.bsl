
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.ИзМакета = Ложь;
		Объект.ИдентификаторОбъекта = Объект.Родитель.ИдентификаторОбъекта;
		Объект.ИмяТабличнойЧасти = Объект.Родитель.ИмяТабличнойЧасти;
	КонецЕсли;
	
	ПолеТекстовогоДокумента.УстановитьТекст(Объект.Действие);
	
	Если ЗначениеЗаполнено(Объект.ИдентификаторОбъекта) И ЗначениеЗаполнено(Объект.ИмяТабличнойЧасти) Тогда
		ТабличнаяЧасть =
			Метаданные.НайтиПоПолномуИмени(Объект.ИдентификаторОбъекта.ПолноеИмя).ТабличныеЧасти[Объект.ИмяТабличнойЧасти].Синоним;
	КонецЕсли;
	
	УстановитьСвойстваСсылкиНаОбъект();
	
	Элементы.ФормаВосстановитьИзМакета.Видимость		= Объект.ИзМакета;
	Элементы.Родитель.ТолькоПросмотр					= Объект.ИзМакета;
	Элементы.Представление.ТолькоПросмотр				= Объект.ИзМакета;
	Элементы.ИдентификаторОбъекта.ТолькоПросмотр	= Объект.ИзМакета;
	Элементы.ТабличнаяЧасть.ТолькоПросмотр				= Объект.ИзМакета;
	
	Если Объект.Родитель = Справочники.CRM_ШаблоныАвтотекста.АвтотекстЭлектронногоПисьма Тогда
		Элементы.ПредставлениеLAT.Видимость = Истина;
	КонецЕсли;
	
	СписокИдентификаторов.Добавить(Справочники.ИдентификаторыОбъектовМетаданных.НайтиПоРеквизиту("Имя",
		 "Документы",
		 Справочники.ИдентификаторыОбъектовМетаданных.ПустаяСсылка()));
	СписокИдентификаторов.Добавить(Справочники.ИдентификаторыОбъектовМетаданных.НайтиПоРеквизиту("Имя",
		 "Справочники",
		 Справочники.ИдентификаторыОбъектовМетаданных.ПустаяСсылка()));
	СписокИдентификаторов.Добавить(Справочники.ИдентификаторыОбъектовМетаданных.НайтиПоРеквизиту("Имя",
		 "Задачи",
		 Справочники.ИдентификаторыОбъектовМетаданных.ПустаяСсылка()));
	СписокИдентификаторов.Добавить(Справочники.ИдентификаторыОбъектовМетаданных.НайтиПоРеквизиту("Имя",
		 "БизнесПроцессы",
		 Справочники.ИдентификаторыОбъектовМетаданных.ПустаяСсылка()));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПолеТекстовогоДокументаПриИзменении(Элемент)
	
	Объект.Действие = ПолеТекстовогоДокумента.ПолучитьТекст();
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = СформироватьСписокТабличныхЧастей();
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка		= Ложь;
	Объект.ИмяТабличнойЧасти	= ВыбранноеЗначение;
	ТабличнаяЧасть				= ВернутьСинонимТабличнойЧасти(ВыбранноеЗначение);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Проверить(Команда)
	
	Если НЕ ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
		Возврат;
	КонецЕсли;
	ВыполнитьПроверкуДействия();
	
КонецПроцедуры

&НаКлиенте
Процедура СсылкаНаОбъектНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Отбор", Новый Структура("CRM_Личная", Ложь));
		ПараметрыФормы.Вставить("РежимВыбора"	, Истина);
		ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Истина);
		ОткрытьФорму("Задача.ЗадачаИсполнителя.ФормаВыбора", ПараметрыФормы, Элемент);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВосстановитьИзМакета(Команда)
	
	Если Объект.Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВосстановитьИзМакетаЗавершение", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения,
		 НСтр("ru='Элемент будет перезаполнен из макета справочника. Продолжить?';
		|en='Item will be re-written from catalog template. Continue?'"), РежимДиалогаВопрос.ДаНет, ,
		 КодВозвратаДиалога.Да);
		
КонецПроцедуры

&НаКлиенте
Процедура ВосстановитьИзМакетаЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ВосстановитьЗначениеИзМакета();
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВставитьРеквизит(Команда)
	Если ЗначениеЗаполнено(Объект.ИдентификаторОбъекта) Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ВставитьРеквизитЗавершение", ЭтотОбъект);
		ПараметрыФормы = Новый Структура("ИдентификаторМетаданных, ВключатьДопРеквизиты, ВключатьКИ",
			Объект.ИдентификаторОбъекта, Истина, Истина);
		Если ЗначениеЗаполнено(Объект.ИмяТабличнойЧасти) Тогда
			ПараметрыФормы.Вставить("ИмяТЧ", Объект.ИмяТабличнойЧасти);
		КонецЕсли;
		ОткрытьФорму("ОбщаяФорма.CRM_ФормаВыбораРеквизита", ПараметрыФормы, ЭтотОбъект, , , ,
			 ОписаниеОповещения,
			 РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Иначе
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не выбран идентификатор объекта!'"), , ,
			 "Объект.ИдентификаторОбъекта");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВставитьРеквизитЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Наименование) Тогда
		Объект.Наименование = Результат.Представление;
		Объект.ПредставлениеШаблона = CRM_АвтотекстКлиент.ТегАвтотекстаИзСтроки(Результат.Представление);
	КонецЕсли;
	
	ТекстДействия = ПолеТекстовогоДокумента.ПолучитьТекст();
	ДобавитьРезультат = НЕ ЗначениеЗаполнено(ТекстДействия);
	Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст = CRM_АвтотекстКлиент.СформироватьАвтотекстИзРеквизитов(Результат.Реквизиты,
		 ДобавитьРезультат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьСвойстваСсылкиНаОбъект()
	
	Если ЗначениеЗаполнено(Объект.ИдентификаторОбъекта) Тогда
		СсылкаНаОбъект = Объект.ИдентификаторОбъекта.ЗначениеПустойСсылки;
	Иначе
		СсылкаНаОбъект = Неопределено;
	КонецЕсли;
	
	Элементы.ГруппаПроверки.Доступность = (НЕ СсылкаНаОбъект = Неопределено);
	Элементы.ТабличнаяЧасть.Видимость = (Объект.ИдентификаторОбъекта = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Метаданные.Документы.КоммерческоеПредложениеКлиенту))
									ИЛИ (Объект.ИдентификаторОбъекта = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Метаданные.Документы.CRM_Интерес));
	
КонецПроцедуры

&НаСервере
Функция СформироватьСписокТабличныхЧастей()
	
	СписокТЧ = Новый СписокЗначений;
	Если ЗначениеЗаполнено(Объект.ИдентификаторОбъекта) Тогда
		МетаОбъект = Метаданные.НайтиПоПолномуИмени(Объект.ИдентификаторОбъекта.ПолноеИмя);
		
		Для Каждого ТабЧасть Из МетаОбъект.ТабличныеЧасти Цикл
			СписокТЧ.Добавить(ТабЧасть.Имя, ТабЧасть.Синоним);
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат СписокТЧ;
	
КонецФункции

&НаСервере
Функция ВернутьСинонимТабличнойЧасти(ВыбранноеЗначение)
	
	Если ЗначениеЗаполнено(Объект.ИдентификаторОбъекта) Тогда
		Возврат Метаданные.НайтиПоПолномуИмени(Объект.ИдентификаторОбъекта.ПолноеИмя).ТабличныеЧасти[ВыбранноеЗначение].Синоним;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ВыполнитьПроверкуДействия()
	
	CRM_АвтотекстПереопределяемый.ПроверитьВыполнениеДействия(Объект.Действие, СсылкаНаОбъект,
		 Объект.ИмяТабличнойЧасти,
		 ТабличнаяЧасть);
	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьЗначениеИзМакета()
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(Объект.Ссылка);
	
	СтруктураЗначений = Справочники.CRM_ШаблоныАвтотекста.ПолучитьЗначениеИзМакета(Объект.Ссылка);
	
	Если СтруктураЗначений <> Неопределено Тогда
		Объект.Наименование	= СтруктураЗначений.Наименование;
		Объект.Действие		= СтруктураЗначений.Действие;
		
		ПолеТекстовогоДокумента.УстановитьТекст(СтруктураЗначений.Действие);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторОбъектаПриИзменении(Элемент)
	УстановитьСвойстваСсылкиНаОбъект();
КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторОбъектаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	фиксНастройки = Новый НастройкиКомпоновкиДанных;
	 
	эОтбор = фиксНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	эОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
	эОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии;
	эОтбор.ПравоеЗначение = СписокИдентификаторов;
	эОтбор.Использование = Истина;
	
	эОтбор.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	эОтбор = фиксНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	эОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПометкаУдаления");
	эОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	эОтбор.ПравоеЗначение = Ложь;
	эОтбор.Использование = Истина;
	
	эОтбор.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	 
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ФиксированныеНастройки", фиксНастройки);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	
	ОткрытьФорму("Справочник.ИдентификаторыОбъектовМетаданных.ФормаВыбора", ПараметрыФормы, Элемент, ,
		 , , ,
		 РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

#КонецОбласти 
