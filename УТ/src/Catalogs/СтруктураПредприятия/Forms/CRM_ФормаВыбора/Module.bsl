
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКоманды = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКоманды");
		МодульПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	ТолькоДоступные = (Параметры.Свойство("ТолькоДоступные") И Параметры.ТолькоДоступные);
	УстановитьОтборПоДоступнымПодразделениям(Параметры.Свойство("ТолькоДоступные") И Параметры.ТолькоДоступные);
	
	// +CRM_Модуль
	НастроитьОтображениеСписка();
	// -CRM_Модуль
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура СписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	Если НЕ Элемент.ТекущиеДанные.Доступно Тогда
		СтандартнаяОбработка = Ложь;
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Подразделение недоступно для выбора!'"));
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
	МодульПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	МодульПодключаемыеКоманды = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКоманды");
	МодульПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	МодульПодключаемыеКомандыКлиентСервер = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиентСервер");
	МодульПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьОтборПоДоступнымПодразделениям(ТолькоДоступные)
	ЗначениеПараметра = ?(ТолькоДоступные, ПолучитьСписокДоступныхПодразделений(), Неопределено);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ТолькоДоступные", ТолькоДоступные, Истина); 
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "СписокДоступных",
		 ЗначениеПараметра,
		 Истина); 
КонецПроцедуры

// +CRM_Модуль
&НаСервере
Процедура НастроитьОтображениеСписка()
	
	Если Элементы.Список.Отображение = ОтображениеТаблицы.Список Тогда
		Возврат;
	КонецЕсли;
	
	РазрешенныеПодразделения = УправлениеДоступом.РазрешенныеЗначенияДляДинамическогоСписка(Список.ОсновнаяТаблица, Тип("СправочникСсылка.СтруктураПредприятия"));
	Если РазрешенныеПодразделения <> Неопределено Тогда
		Элементы.Список.Отображение = ОтображениеТаблицы.Список;
	КонецЕсли;
	
	Если Параметры.Свойство("Отбор")
		И (Параметры.Отбор.Свойство("ВариантОбособленногоУчетаТоваров")
			ИЛИ Параметры.Отбор.Свойство("ПроизводственноеПодразделение")
			ИЛИ Параметры.Отбор.Свойство("ПроизводствоПоЗаказам")
			ИЛИ Параметры.Отбор.Свойство("ПроизводствоБезЗаказов")
			ИЛИ Параметры.Отбор.Свойство("ИспользуетсяСписаниеЗатратНаВыпуск")
			ИЛИ Параметры.Отбор.Свойство("ИспользоватьПооперационноеУправление")
			ИЛИ Параметры.Отбор.Свойство("ИспользоватьПооперационноеПланирование")
			ИЛИ Параметры.Отбор.Свойство("ПодразделениеДиспетчер")
			ИЛИ Параметры.Отбор.Свойство("ПодразделениеДиспетчерИлиПроизводственноеПодразделение")
			ИЛИ Параметры.Отбор.Свойство("ИспользоватьСменныеЗадания")
			ИЛИ Параметры.Отбор.Свойство("ИспользоватьПроизводственныеУчастки")) Тогда
		// Если установлен отбор то список должен быть не иерахическим
		Элементы.Список.Отображение = ОтображениеТаблицы.Список;
	КонецЕсли;
	
КонецПроцедуры
// -CRM_Модуль

#КонецОбласти
