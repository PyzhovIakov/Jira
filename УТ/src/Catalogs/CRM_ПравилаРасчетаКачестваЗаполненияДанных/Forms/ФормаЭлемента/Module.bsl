#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьСписокВыбораДоступныхТиповОбъектов();
	ПоместитьНастройкиВоВременноеХранилище();
	ЗаполнитьИменаШаблонов();
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Соответствие = ПолучитьИзВременногоХранилища(АдресХранилищаКомпоновщикНастроек);
	ТекущийОбъект.Правила.Очистить();
	
	Для каждого СтрокаНастроки Из Объект.Правила Цикл
		ТекСтрока = ТекущийОбъект.Правила.Добавить();
		ЗаполнитьЗначенияСвойств(ТекСтрока, СтрокаНастроки);
		ТекСтрока.Условие = Новый ХранилищеЗначения(Соответствие.Получить(СтрокаНастроки.ПолучитьИдентификатор()));
	КонецЦикла;
	
	Если ЗначениеЗаполнено(Объект.Ссылка)
		И Не Объект.ЭтоГруппа
		И Не Модифицированность Тогда
		ТекущийОбъект.ДополнительныеСвойства.Вставить("ПравилоНеИзменено");		
	КонецЕсли;
	
КонецПроцедуры
#КонецОбласти  
	
#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СтатусРаботыСКлиентомПриИзменении(Элемент)
	ЗаполнитьНаименование(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ТипОбъектаПриИзменении(Элемент)
	ЗаполнитьИменаШаблонов();
	ЗаполнитьНаименование(ЭтотОбъект);	
КонецПроцедуры

&НаКлиенте
Процедура ТипОбъектаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ВыбранноеЗначение = Объект.ТипОбъекта Тогда
		Объект.Правила.Очистить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
	
#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура ПравилаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.Имя = "ПравилаУсловиеПредставление" Тогда
		СтандартнаяОбработка = Ложь;
		ТекСтрока = Элементы.Правила.ТекущиеДанные;
		Если ТекСтрока = Неопределено Тогда
			Возврат;	
		КонецЕсли;
		
		ИмяМакета = ПолучитьИмяМакетаНастроек(Объект.ТипОбъекта);
		Если Не ЗначениеЗаполнено(ИмяМакета) Тогда
			Возврат;	
		КонецЕсли; 
		
		ИДСтроки = ТекСтрока.ПолучитьИдентификатор();
		
		ПараметрыКомпоновки = Новый Структура;
		ПараметрыКомпоновки.Вставить("НастройкиКомпоновкиДанных", ПолучитьНастройкиКомпоновки(ИДСтроки));
		ПараметрыКомпоновки.Вставить("ИмяОбъектаМетаданных", "Справочник.CRM_ПравилаРасчетаКачестваЗаполненияДанных");
		ПараметрыКомпоновки.Вставить("ИмяМакета", ИмяМакета);
				
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриИзмененииНастроекКомпоновкиДанных", ЭтотОбъект, ИДСтроки);
		
		ОткрытьФорму("ОбщаяФорма.CRM_НастройкиКомпоновкиДанных", ПараметрыКомпоновки, ЭтотОбъект,,,, ОписаниеОповещения);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьНастройкиКомпоновки(ИДСтроки)
	
	Если ЗначениеЗаполнено(АдресХранилищаКомпоновщикНастроек) Тогда
		СоответствиеНастройкиХранилищеЗначения = ПолучитьИзВременногоХранилища(АдресХранилищаКомпоновщикНастроек);
		Если ТипЗнч(СоответствиеНастройкиХранилищеЗначения) = Тип("Соответствие") Тогда			
			НастройкаКомпоновки = СоответствиеНастройкиХранилищеЗначения.Получить(ИДСтроки);
			Если ТипЗнч(НастройкаКомпоновки) = Тип("НастройкиКомпоновкиДанных") Тогда
				Возврат НастройкаКомпоновки;
			КонецЕсли; 
		КонецЕсли;                                                      	
	КонецЕсли;
	
	Возврат Неопределено;

КонецФункции

&НаКлиенте
Процедура КомментарийОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры
	
#КонецОбласти


#Область ОбаботчикиКомандФормы

&НаСервере
Процедура ЗаполнитьПоШаблонуНаСервере(КомандаИмя)
	
	ИмяВарианта = СтрЗаменить(КомандаИмя, "Команда_ЗаполнитьПоШаблону_", "");
	
	ИмяМакета = ПолучитьИмяМакетаНастроек(Объект.ТипОбъекта);
	Если Не ЗначениеЗаполнено(ИмяМакета) Тогда
		Возврат;	
	КонецЕсли;

	Объект.Правила.Очистить();
	
	СКД = Справочники.CRM_ПравилаРасчетаКачестваЗаполненияДанных.ПолучитьМакет(ИмяМакета);
	
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	
	Для Каждого Вариант Из СКД.ВариантыНастроек Цикл
		Если Вариант.Имя = ИмяВарианта Тогда
			Для Каждого ЭлементОтбора Из Вариант.Настройки.Отбор.Элементы Цикл
				КомпоновщикНастроек.ЗагрузитьНастройки(СКД.НастройкиПоУмолчанию);
				ЗаполнитьЭлементОтбораКомпоновщика(КомпоновщикНастроек.Настройки.Отбор.Элементы, ЭлементОтбора);

				Представление = Строка(КомпоновщикНастроек.Настройки.Отбор);
				Вес = 0;
				Если ЗначениеЗаполнено(ЭлементОтбора.Представление) Тогда
					ДанныеПоУсловию = CRM_ОбщегоНазначенияСервер.ЗначениеИзСтрокиJSON(ЭлементОтбора.Представление);
					Если ДанныеПоУсловию.Свойство("Представление") Тогда
						Представление = ДанныеПоУсловию.Представление;
					КонецЕсли;
					Если ДанныеПоУсловию.Свойство("Вес") Тогда
						Вес = ДанныеПоУсловию.Вес;
					КонецЕсли;
				КонецЕсли;
				
				Правило = Объект.Правила.Добавить();
				ИДСтроки = Правило.ПолучитьИдентификатор();
				Правило.УсловиеПредставление = Представление;
				Правило.УсловиеПредставлениеДляПользователя = Представление;
				Правило.Вес = Вес;
				ОбновитьНастройкиКомпоновки(ИДСтроки, КомпоновщикНастроек.Настройки);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЗаполнитьПоШаблону(Команда)
	ЗаполнитьПоШаблонуНаСервере(Команда.Имя);
КонецПроцедуры

#КонецОбласти

	
#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьИмяМакетаНастроек(ТипОбъекта)

	Возврат Справочники.CRM_ПравилаРасчетаКачестваЗаполненияДанных.ПолучитьИмяМакетаНастроек(ТипОбъекта);	

КонецФункции

&НаСервере
Процедура ЗаполнитьСписокВыбораДоступныхТиповОбъектов()
	Элементы.ТипОбъекта.СписокВыбора.Добавить("Справочник.Партнеры", "Клиенты");	 
	Элементы.ТипОбъекта.СписокВыбора.Добавить("Справочник.КонтактныеЛицаПартнеров", "Контактные лица");	 
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИменаШаблонов()
	
	УдаляемыеЭлементы = Новый Массив;
	Для Каждого Элемент Из Элементы.ПодменюЗаполнитьПоШаблону.ПодчиненныеЭлементы Цикл
		ИмяКоманды = СтрЗаменить(Элемент.Имя, "Элемент_ЗаполнитьПоШаблону_", "Команда_ЗаполнитьПоШаблону_");
		УдаляемыеЭлементы.Добавить(Элемент.Имя); 
		Команда = Команды.Найти(ИмяКоманды);
		Если Команда <> Неопределено Тогда
			Команды.Удалить(Команда);
		КонецЕсли;
	КонецЦикла;
	Для Каждого Элемент Из УдаляемыеЭлементы Цикл
		Элементы.Удалить(Элементы[Элемент]);
	КонецЦикла;
	
	ИмяМакета = ПолучитьИмяМакетаНастроек(Объект.ТипОбъекта);
	Если Не ЗначениеЗаполнено(ИмяМакета) Тогда
		Возврат;	
	КонецЕсли;
	
	СКД = Справочники.CRM_ПравилаРасчетаКачестваЗаполненияДанных.ПолучитьМакет(ИмяМакета);
	Для Каждого Вариант Из СКД.ВариантыНастроек Цикл
		Если Вариант.Имя = "Основной" Тогда
			Продолжить;
		КонецЕсли;
		
		Команда = Команды.Добавить("Команда_ЗаполнитьПоШаблону_" + Вариант.Имя);
		Команда.Действие = "Подключаемый_ЗаполнитьПоШаблону";
		Команда.Заголовок = Вариант.Представление;
		
		НовыйПунктМеню = Элементы.Добавить("Элемент_ЗаполнитьПоШаблону_" + Вариант.Имя, Тип("КнопкаФормы"),
			Элементы.ПодменюЗаполнитьПоШаблону);
		НовыйПунктМеню.ИмяКоманды = Команда.Имя;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПоместитьНастройкиВоВременноеХранилище()
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	СоответствиеПравила = Новый Соответствие;
	Для каждого Правило Из Объект.Правила Цикл
		СтрокаХранилищеНастройки = ТекущийОбъект.Правила.Получить(Объект.Правила.Индекс(Правило));
		СоответствиеПравила.Вставить(Правило.ПолучитьИдентификатор(), СтрокаХранилищеНастройки.Условие.Получить());	
	КонецЦикла;  
	
	АдресХранилищаКомпоновщикНастроек = ПоместитьВоВременноеХранилище(СоответствиеПравила, УникальныйИдентификатор);	

КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииНастроекКомпоновкиДанных(Результат, ИДСтроки) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекСтрока = Объект.Правила.НайтиПоИдентификатору(ИДСтроки);
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекСтрока.УсловиеПредставление = Результат.ПредставлениеОтбора;
	ТекСтрока.УсловиеПредставлениеДляПользователя = Результат.ПредставлениеОтбора;
	ОбновитьНастройкиКомпоновки(ИДСтроки, Результат.Настройки);
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНастройкиКомпоновки(ИДСтроки, Настройки)
	
	Соответствие = ПолучитьИзВременногоХранилища(АдресХранилищаКомпоновщикНастроек);
	ТекНастройки = ?(ЗначениеЗаполнено(Настройки.Отбор), Настройки, Неопределено);
	Соответствие.Вставить(ИДСтроки, ТекНастройки);
	
	АдресХранилищаКомпоновщикНастроек = ПоместитьВоВременноеХранилище(Соответствие, УникальныйИдентификатор);
	
КонецПроцедуры


&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьНаименование(Форма)

	ТипОбъекта = Форма.Объект.ТипОбъекта;
	Если ЗначениеЗаполнено(ТипОбъекта) Тогда
		ЗначениеСпискаВыбора = Форма.Элементы.ТипОбъекта.СписокВыбора.НайтиПоЗначению(ТипОбъекта);
		Если Не ЗначениеСпискаВыбора = Неопределено Тогда
			ТипОбъекта = ЗначениеСпискаВыбора.Представление;		
		КонецЕсли;                                          	
	КонецЕсли;
	
	Форма.Объект.Наименование = ПолучитьНаименование(ТипОбъекта, Форма.Объект.СтатусРаботыСКлиентом); 

КонецПроцедуры 

&НаСервереБезКонтекста
Функция ПолучитьНаименование(ТипОбъекта, СтатусРаботыСКлиентом)

	МассивНаименование = Новый Массив;
	
	Если ЗначениеЗаполнено(ТипОбъекта) Тогда
		МассивНаименование.Добавить(ТипОбъекта);	
	КонецЕсли; 
	Если ЗначениеЗаполнено(СтатусРаботыСКлиентом) Тогда
		МассивНаименование.Добавить(СтатусРаботыСКлиентом.Наименование);	
	КонецЕсли;
	
	Возврат СтрСоединить(МассивНаименование, " ");
	
КонецФункции 

&НаСервере
Процедура ЗаполнитьЭлементОтбораКомпоновщика(ЭлементыОтбора, Источник)
	Если ТипЗнч(Источник) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
		НовыйЭлемент = ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЗаполнитьЗначенияСвойств(НовыйЭлемент, Источник);
		НовыйЭлемент.Представление = "";
	Иначе
		НоваяГруппа = ЭлементыОтбора.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		ЗаполнитьЗначенияСвойств(НоваяГруппа, Источник);
		Для Каждого ЭлементОтбора Из Источник.Элементы Цикл
			ЗаполнитьЭлементОтбораКомпоновщика(НоваяГруппа.Элементы, ЭлементОтбора);
		КонецЦикла;
		НоваяГруппа.Представление = "";
	КонецЕсли;
КонецПроцедуры

#КонецОбласти



