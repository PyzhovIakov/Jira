#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	Если ВидФормы = "ФормаОбъекта" Тогда
		ВыбраннаяФорма = "ФормаНастройки";
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс

Функция ПолучитьИмяМакетаНастроек(ТипОбъекта) Экспорт

	Если ТипОбъекта = "Справочник.Партнеры" Тогда
		Возврат "Партнеры";
	ИначеЕсли ТипОбъекта = "Справочник.КонтактныеЛицаПартнеров" Тогда
		Возврат "КонтактныеЛица";
	КонецЕсли; 
	
	Возврат "";	

КонецФункции

Функция ПолучитьПроцентЗаполнения(Правило, МассивОбъектов) Экспорт
	
	СоответствиеОбъектВес = Новый Соответствие;
	
	Для каждого ТекСсылка Из МассивОбъектов Цикл
		СоответствиеОбъектВес.Вставить(ТекСсылка, Новый Структура("Вес, КомментарийМассив", 0, Новый Массив));
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(Правило) Тогда
		Возврат СоответствиеОбъектВес;
	КонецЕсли; 
	
	СКД = Неопределено;
	ИмяМакета = ПолучитьИмяМакетаНастроек(Правило.ТипОбъекта);
	ШаблонКомментарий = "%1: %2";
	
	Если ЗначениеЗаполнено(ИмяМакета) Тогда
		
		СКД = ПолучитьМакет(ИмяМакета);
	 
		КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
		КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СКД));
		
		Слагаемые = ПолучитьСлагаемыеПравила(Правило);
		Для каждого Слагаемое Из Слагаемые Цикл
			Отбор = Слагаемое.Условие.Получить();
			МассивОбъектыСУчетомОтбора = ПолучитьМассивОбъектовСУчетомОтбора(СКД, КомпоновщикНастроек, Отбор, МассивОбъектов);	
			Для каждого ТекОбъект Из МассивОбъектыСУчетомОтбора Цикл
				ДанныеТекОбъекта = СоответствиеОбъектВес.Получить(ТекОбъект);
				 
				ДанныеТекОбъекта.КомментарийМассив.Добавить(СтрШаблон(ШаблонКомментарий, Слагаемое.НомерСтроки, Слагаемое.Вес));
				ДанныеТекОбъекта.Вес = ДанныеТекОбъекта.Вес + Слагаемое.Вес;
								
			КонецЦикла;			
		КонецЦикла;
	КонецЕсли;
	
	Возврат СоответствиеОбъектВес;

КонецФункции

Процедура ЗаполнитьПравилоПоШаблону(Объект, ИмяШаблона) Экспорт

	ИмяМакета = ПолучитьИмяМакетаНастроек(Объект.ТипОбъекта);
	Если Не ЗначениеЗаполнено(ИмяМакета) Тогда
		Возврат;	
	КонецЕсли;

	Объект.Правила.Очистить();
	
	СКД = ПолучитьМакет(ИмяМакета);
	
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	
	Для Каждого Вариант Из СКД.ВариантыНастроек Цикл
		Если Вариант.Имя = ИмяШаблона Тогда
			Для Каждого ЭлементОтбора Из Вариант.Настройки.Отбор.Элементы Цикл
				КомпоновщикНастроек.ЗагрузитьНастройки(СКД.НастройкиПоУмолчанию);
				ЗаполнитьЭлементОтбораКомпоновщика(КомпоновщикНастроек.Настройки.Отбор.Элементы, ЭлементОтбора);

				Представление = Строка(КомпоновщикНастроек.Настройки.Отбор);
				Вес = 0;
				Если ЗначениеЗаполнено(ЭлементОтбора.Представление) Тогда
					ДанныеПоУсловию = CRM_ОбщегоНазначенияСервер.ЗначениеИзСтрокиJSON(ЭлементОтбора.Представление);
					Если ДанныеПоУсловию.Свойство("Представление") Тогда
						Представление = ДанныеПоУсловию.Представление;
					КонецЕсли;
					Если ДанныеПоУсловию.Свойство("Вес") Тогда
						Вес = ДанныеПоУсловию.Вес;
					КонецЕсли;
				КонецЕсли;
				
				Правило = Объект.Правила.Добавить();
				Правило.УсловиеПредставление = Представление;
				Правило.УсловиеПредставлениеДляПользователя = Представление;
				Правило.Вес = Вес;
				Правило.Условие = Новый ХранилищеЗначения(КомпоновщикНастроек.Настройки);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьЭлементОтбораКомпоновщика(ЭлементыОтбора, Источник)
	Если ТипЗнч(Источник) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
		НовыйЭлемент = ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЗаполнитьЗначенияСвойств(НовыйЭлемент, Источник);
		НовыйЭлемент.Представление = "";
	Иначе
		НоваяГруппа = ЭлементыОтбора.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		ЗаполнитьЗначенияСвойств(НоваяГруппа, Источник);
		Для Каждого ЭлементОтбора Из Источник.Элементы Цикл
			ЗаполнитьЭлементОтбораКомпоновщика(НоваяГруппа.Элементы, ЭлементОтбора);
		КонецЦикла;
		НоваяГруппа.Представление = "";
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСлагаемыеПравила(Правило)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПравилаРасчета.Условие КАК Условие,
	|	ПравилаРасчета.Вес КАК Вес,
	|	ПравилаРасчета.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Справочник.CRM_ПравилаРасчетаКачестваЗаполненияДанных.Правила КАК ПравилаРасчета
	|ГДЕ
	|	ПравилаРасчета.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Правило);
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат.Выгрузить();

КонецФункции 

Функция ПолучитьМассивОбъектовСУчетомОтбора(СКД, КомпоновщикНастроек, Настройки, МассивОбъектовДляПроверки)
	
	МассивРезультат = Новый Массив;
	
	Если МассивОбъектовДляПроверки.Количество() = 0 Тогда
		Возврат МассивРезультат;	
	КонецЕсли; 
					
	Если Настройки = Неопределено
		Или Настройки.Отбор.Элементы.Количество() = 0 Тогда
		Возврат МассивОбъектовДляПроверки;		
	КонецЕсли;
	
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	КомпоновщикНастроек.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);
	
	ПараметрКД = Новый ПараметрКомпоновкиДанных("МассивОбъектов");
	КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра(ПараметрКД, МассивОбъектовДляПроверки);
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКД   = КомпоновщикМакета.Выполнить(СКД, КомпоновщикНастроек.Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));		
	ПроцессорКД = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКД.Инициализировать(МакетКД);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТЗ = Новый ТаблицаЗначений;
	ПроцессорВывода.УстановитьОбъект(ТЗ);
	ПроцессорВывода.Вывести(ПроцессорКД);
	
	ТЗ.Свернуть("Ссылка");
		
	МассивРезультат = ТЗ.ВыгрузитьКолонку("Ссылка");
	
	Возврат МассивРезультат;

КонецФункции

#КонецОбласти

#КонецЕсли
 