////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции модуля формы "Справочники.CRM_ВариантыВиджетов.Форма.ФормаНастройки".
//
////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИспользоватьПодразделения = CRM_ОбщегоНазначенияПовтИсп.ИспользоватьПодразделения();
	
	ВариантВиджета		= Параметры.ВариантВиджета;
	Виджет				= ВариантВиджета.Виджет;
	
	НастройкиВиджета	= ВариантВиджета.НастройкиВарианта.Получить();
	
	ТекущийПользователь		= Пользователи.ТекущийПользователь();
	ВыбранныйПользователь	= ТекущийПользователь;
	
	Если ИспользоватьПодразделения Тогда
		ВыбранноеПодразделение = ТекущийПользователь.Подразделение;
	КонецЕсли;
	
	// --------------
	
	Элементы.Настройки_СтандартнаяДатаНачала.Видимость = Ложь;
	Элементы.Настройки_СтандартныйПериод.Видимость = Ложь;
	Элементы.Настройки_Периодичность.Видимость = Ложь;
	Элементы.Настройки_ПланПродаж.Видимость = Ложь;
	
	// --------------
	
	Если НастройкиВиджета <> Неопределено Тогда
		
		Настройки_ПериодОбновления = ВариантВиджета.ПериодОбновления;
		
		НастройкиВиджета.Свойство("ТипАналитики",		Настройки_ТипАналитики);
		НастройкиВиджета.Свойство("ЗначениеАналитики",	Настройки_ЗначениеАналитики);
		
		НастройкиВиджета.Свойство("ОтображатьОбщиеРезультаты",	Настройки_ФлагОтображатьОбщиеРезультаты);
		НастройкиВиджета.Свойство("ОтображатьПлановыеЗначения",	Настройки_ФлагОтображатьПлановыеЗначения);
		
		НастройкиВиджета.Свойство("ДинамическоеЗначениеАналитики", Настройки_ДинамическоеЗначениеАналитики);
		
		Если Виджет = Справочники.CRM_Виджеты.ДинамикаПродаж
				Или Виджет = Справочники.CRM_Виджеты.ДинамикаСтатусовКлиентов Тогда
			
			НастройкиВиджета.Свойство("СтандартныйПериод",	Настройки_СтандартныйПериод);
			НастройкиВиджета.Свойство("Периодичность",		Настройки_Периодичность);
			
		ИначеЕсли Виджет = Справочники.CRM_Виджеты.ДебиторскаяЗадолженность Тогда
			
			НастройкиВиджета.Свойство("Период",			Настройки_СтандартнаяДатаНачала);
			// +CRM_Модуль
			//НастройкиВиджета.Свойство("Периодичность",	Настройки_Периодичность);
			// -CRM_Модуль
			
		ИначеЕсли Виджет = Справочники.CRM_Виджеты.ВыполнениеПланаПродажКол
				Или Виджет = Справочники.CRM_Виджеты.ВыполнениеПланаПродаж Тогда
			
			НастройкиВиджета.Свойство("ПланПродаж", Настройки_ПланПродаж);
			
		ИначеЕсли Виджет = Справочники.CRM_Виджеты.СтатистикаТелефонныхЗвонков
			 Или Виджет = Справочники.CRM_Виджеты.ТрудозатратыВремениПоВидамРабот Тогда
			
			НастройкиВиджета.Свойство("СтандартныйПериод", Настройки_СтандартныйПериод);
			
		КонецЕсли;
		
		Если Настройки_ЗначениеАналитики = Перечисления.CRM_ВидыРазверткиПоказателей.ПоВсейКомпании Тогда
			ВыбранныйПользователь = Настройки_ЗначениеАналитики;
			ВыбранноеПодразделение = Настройки_ЗначениеАналитики.Подразделение;
		КонецЕсли;
		
	Иначе
		
		Настройки_ПериодОбновления		= 3600;
		Настройки_ТипАналитики			= Перечисления.CRM_ВидыРазверткиПоказателей.ПоМенеджеру;
		Настройки_ЗначениеАналитики		= ТекущийПользователь;
		
	КонецЕсли;
	
	// --------------
	
	Если Виджет = Справочники.CRM_Виджеты.ВыполнениеПланаПродажКол
			Или Виджет = Справочники.CRM_Виджеты.ВыполнениеПланаПродаж
			Или Виджет = Справочники.CRM_Виджеты.ДинамикаПродаж
			Или Виджет = Справочники.CRM_Виджеты.ДебиторскаяЗадолженность
			Или Виджет = Справочники.CRM_Виджеты.ДинамикаСтатусовКлиентов
			Или Виджет = Справочники.CRM_Виджеты.СтатистикаТелефонныхЗвонков
			Или Виджет = Справочники.CRM_Виджеты.ТрудозатратыВремениПоВидамРабот Тогда
		
		Элементы.ГруппаОтображения.Видимость = Ложь;
		
	КонецЕсли;
	
	// --------------
	
	Если Виджет = Справочники.CRM_Виджеты.ВыполнениеПланаПродажКол
			Или Виджет = Справочники.CRM_Виджеты.ВыполнениеПланаПродаж Тогда
		
		Элементы.Настройки_ПланПродаж.Видимость = Истина;
		
	ИначеЕсли Виджет = Справочники.CRM_Виджеты.ДинамикаПродаж
			Или Виджет = Справочники.CRM_Виджеты.ДинамикаСтатусовКлиентов Тогда
		
		Элементы.Настройки_СтандартныйПериод.Видимость = Истина;
		Элементы.Настройки_Периодичность.Видимость = Истина;
		
	ИначеЕсли Виджет = Справочники.CRM_Виджеты.ДебиторскаяЗадолженность Тогда
		
		Элементы.Настройки_СтандартнаяДатаНачала.Видимость = Истина;
		// +CRM_Модуль
		//Элементы.Настройки_Периодичность.Видимость = Истина;
		// -CRM_Модуль
		
	ИначеЕсли Виджет = Справочники.CRM_Виджеты.СтатистикаТелефонныхЗвонков
			Или Виджет = Справочники.CRM_Виджеты.ТрудозатратыВремениПоВидамРабот Тогда
		
		Элементы.Настройки_СтандартныйПериод.Видимость = Истина;
		
	КонецЕсли;
	
	// --------------
	
	Заголовок = Виджет.Наименование;
	
	Если Не ИспользоватьПодразделения Тогда
		
		Элементы.ВыбратьПоПодразделению.Видимость = Ложь;
		
		Если ТипЗнч(Настройки_ЗначениеАналитики) = Тип("СправочникСсылка.СтруктураПредприятия") Тогда
			
			Настройки_ЗначениеАналитики = Неопределено;
			ИспользованиеЗначенияАналитики = Элементы.ИспользованиеЗначенияАналитики.СписокВыбора.НайтиПоЗначению("ПоТекущему");
			Настройки_ТипАналитики = Перечисления.CRM_ВидыРазверткиПоказателей.ПоВсейКомпании;
			
			Элементы.ВыбратьПоКомпанииВЦелом.Пометка = Истина;
			Элементы.ВыбратьПоПодразделению.Пометка = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ОбновитьПереключательТипаАналитики();
	
	// --------------
	
	Если ТекущийПользователь <> ВариантВиджета.Автор Тогда
		ЭтотОбъект.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ИспользованиеЗначенияАналитики = ?(Настройки_ДинамическоеЗначениеАналитики, "ПоТекущему", "ПоУказанному");
	ИспользованиеЗначенияАналитикиПриИзменении(Элементы.ИспользованиеЗначенияАналитики);
	
КонецПроцедуры // ПриОткрытии()

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если НастройкиИзменены Тогда
		
		Отказ = Истина;
		
		ОбратныйВызов = Новый ОписаниеОповещения(
			"ПередЗакрытиемЗавершение", ЭтотОбъект);
		
		ПоказатьВопрос(ОбратныйВызов,
			НСтр("ru='Все сделанные изменения будут отменены. Закрыть форму?';
			|en='All changes made will be canceled. Close the form?'"),
			РежимДиалогаВопрос.ДаНет);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		НастройкиИзменены = Ложь;
		Закрыть(Неопределено);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура Настройки_ПериодОбновленияПриИзменении(Элемент)
	
	CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики(
		"CRM_Статистика.Показатели.Виджеты.Удобства.КоличествоНажатийПериодОбновления");
	
	НастройкиИзменены = Истина;
	
КонецПроцедуры // Настройки_ПериодОбновленияПриИзменении()

&НаКлиенте
Процедура Настройки_ЗначениеАналитикиПриИзменении(Элемент)
	
	Если Настройки_ТипАналитики = ПредопределенноеЗначение("Перечисление.CRM_ВидыРазверткиПоказателей.ПоПодразделению") Тогда
		
		ВыбранноеПодразделение = Настройки_ЗначениеАналитики;
		
	ИначеЕсли Настройки_ТипАналитики = ПредопределенноеЗначение("Перечисление.CRM_ВидыРазверткиПоказателей.ПоМенеджеру") Тогда
		
		ВыбранныйПользователь = Настройки_ЗначениеАналитики;
		
	КонецЕсли;
	
	НастройкиИзменены = Истина;
	
КонецПроцедуры // Настройки_ЗначениеАналитикиПриИзменении()

&НаКлиенте
Процедура Настройки_ЗначениеАналитикиОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Настройки_ТипАналитики = ПредопределенноеЗначение("Перечисление.CRM_ВидыРазверткиПоказателей.ПоВсейКомпании") Тогда
		
		Настройки_ЗначениеАналитики = Неопределено;
		
	ИначеЕсли Настройки_ТипАналитики = ПредопределенноеЗначение("Перечисление.CRM_ВидыРазверткиПоказателей.ПоПодразделению") Тогда
		
		Настройки_ЗначениеАналитики = ВыбранноеПодразделение;
		
	ИначеЕсли Настройки_ТипАналитики = ПредопределенноеЗначение("Перечисление.CRM_ВидыРазверткиПоказателей.ПоМенеджеру") Тогда
		
		Настройки_ЗначениеАналитики = ТекущийПользователь;
		ВыбранныйПользователь = Настройки_ЗначениеАналитики;
		
	КонецЕсли;
	
	НастройкиИзменены = Истина;
	
КонецПроцедуры // Настройки_ЗначениеАналитикиОчистка()

&НаКлиенте
Процедура Настройки_ФлагОтображатьОбщиеРезультатыПриИзменении(Элемент)
	
	CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики(
		"CRM_Статистика.Показатели.Виджеты.Удобства.КоличествоНажатийВключенияПоказыватьОбщиеРезультаты");
	
КонецПроцедуры // Настройки_ФлагОтображатьОбщиеРезультатыПриИзменении()

&НаКлиенте
Процедура Настройки_ФлагОтображатьПлановыеЗначенияПриИзменении(Элемент)
	
	CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики(
		"CRM_Статистика.Показатели.Виджеты.Удобства.КоличествоНажатийВключенияПоказыватьПлановоеЗначения");
	
КонецПроцедуры // Настройки_ФлагОтображатьПлановыеЗначенияПриИзменении()

&НаКлиенте
Процедура ИспользованиеЗначенияАналитикиПриИзменении(Элемент)
	
	Настройки_ДинамическоеЗначениеАналитики = (ИспользованиеЗначенияАналитики = "ПоТекущему");
	Элементы.Настройки_ЗначениеАналитики.Доступность = Не Настройки_ДинамическоеЗначениеАналитики;
	
КонецПроцедуры // ИспользованиеЗначенияАналитикиПриИзменении()

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Если Не ЗаписатьНастройкиВариантаВиджета() Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиИзменены = Ложь;
	
	Закрыть(ВозвращаемыйРезультат);
	
КонецПроцедуры // ОК()

&НаКлиенте
Процедура Отмена(Команда)
	
	НастройкиИзменены = Ложь;
	
	Закрыть(Неопределено);
	
КонецПроцедуры // Отмена()

&НаКлиенте
Процедура ВыбратьПоКомпанииВЦелом(Команда)
	
	Настройки_ТипАналитики = ПредопределенноеЗначение("Перечисление.CRM_ВидыРазверткиПоказателей.ПоВсейКомпании");
	
	ПриИзмененииТипаАналитики();
	
КонецПроцедуры // ВыбратьПоКомпанииВЦелом()

&НаКлиенте
Процедура ВыбратьПоПодразделению(Команда)
	
	Настройки_ТипАналитики = ПредопределенноеЗначение("Перечисление.CRM_ВидыРазверткиПоказателей.ПоПодразделению");
	
	ПриИзмененииТипаАналитики();
	
КонецПроцедуры // ВыбратьПоПодразделению()

&НаКлиенте
Процедура ВыбратьПоМенеджеру(Команда)
	
	Настройки_ТипАналитики = ПредопределенноеЗначение("Перечисление.CRM_ВидыРазверткиПоказателей.ПоМенеджеру");
	
	ПриИзмененииТипаАналитики();
	
КонецПроцедуры // ВыбратьПоМенеджеру()

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриИзмененииТипаАналитики()
	
	// --------------
	
	ОбновитьПереключательТипаАналитики();
	
	// --------------
	// Установка значений настройки.
	
	Если Настройки_ТипАналитики = Перечисления.CRM_ВидыРазверткиПоказателей.ПоВсейКомпании Тогда
		
		CRM_ЦентрМониторингаКлиентСервер.ЗаписатьОперациюБизнесСтатистики(
			"CRM_Статистика.Показатели.Виджеты.Удобства.КоличествоНажатийВыбораОтображенияПоКомпанииВЦелом");
		
		Настройки_ЗначениеАналитики = Неопределено;
		
	ИначеЕсли Настройки_ТипАналитики = Перечисления.CRM_ВидыРазверткиПоказателей.ПоПодразделению Тогда
		
		CRM_ЦентрМониторингаКлиентСервер.ЗаписатьОперациюБизнесСтатистики(
			"CRM_Статистика.Показатели.Виджеты.Удобства.КоличествоНажатийВыбораОтображенияПоПодразделению");
		
		Настройки_ЗначениеАналитики = ВыбранноеПодразделение;
		
	ИначеЕсли Настройки_ТипАналитики = Перечисления.CRM_ВидыРазверткиПоказателей.ПоМенеджеру Тогда
		
		CRM_ЦентрМониторингаКлиентСервер.ЗаписатьОперациюБизнесСтатистики(
			"CRM_Статистика.Показатели.Виджеты.Удобства.КоличествоНажатийВыбораОтображенияПоМенеджеру");
		
		Настройки_ЗначениеАналитики = ?(
			ЗначениеЗаполнено(ВыбранныйПользователь),
			ВыбранныйПользователь,
			ТекущийПользователь);
		
	КонецЕсли;
	
	// --------------
	
	НастройкиИзменены = Истина;
	
КонецПроцедуры // ПриИзмененииТипаАналитики()

&НаСервере
Процедура ОбновитьПереключательТипаАналитики()
	
	Если Настройки_ТипАналитики = Перечисления.CRM_ВидыРазверткиПоказателей.ПоПодразделению Тогда
		
		Элементы.Настройки_ЗначениеАналитики.ОграничениеТипа =
			Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия");
		
	ИначеЕсли Настройки_ТипАналитики = Перечисления.CRM_ВидыРазверткиПоказателей.ПоМенеджеру Тогда
		
		Элементы.Настройки_ЗначениеАналитики.ОграничениеТипа =
			Новый ОписаниеТипов("СправочникСсылка.Пользователи");
		
	КонецЕсли;
	
	// --------------
	
	СтруктураВидимыеКнопки = Новый Структура;
	
	ДобавитьОписаниеКоманды(СтруктураВидимыеКнопки, "ВыбратьПоКомпанииВЦелом", (Настройки_ТипАналитики = Перечисления.CRM_ВидыРазверткиПоказателей.ПоВсейКомпании));
	ДобавитьОписаниеКоманды(СтруктураВидимыеКнопки, "ВыбратьПоПодразделению", (Настройки_ТипАналитики = Перечисления.CRM_ВидыРазверткиПоказателей.ПоПодразделению));
	ДобавитьОписаниеКоманды(СтруктураВидимыеКнопки, "ВыбратьПоМенеджеру", (Настройки_ТипАналитики = Перечисления.CRM_ВидыРазверткиПоказателей.ПоМенеджеру));
	
	// --------------
	// Обновление отображения.
	
	CRM_ОбщегоНазначенияСервер.ПокраситьКнопки(ЭтотОбъект, СтруктураВидимыеКнопки);
	
	// --------------
	
	Элементы.ГруппаЗначенияАналитики.Видимость =
		(Настройки_ТипАналитики = Перечисления.CRM_ВидыРазверткиПоказателей.ПоПодразделению
		Или Настройки_ТипАналитики = Перечисления.CRM_ВидыРазверткиПоказателей.ПоМенеджеру);
	
КонецПроцедуры // ОбновитьПереключательТипаАналитики()

&НаСервере
Процедура ДобавитьОписаниеКоманды(СтруктураВидимыеКнопки, ОписаниеКоманды, Пометка)
	
	СтруктураКнопка = Новый Структура;
	СтруктураКнопка.Вставить("ИмяКнопки", ОписаниеКоманды);
	СтруктураКнопка.Вставить("Пометка", Пометка);
	
	СтруктураВидимыеКнопки.Вставить(ОписаниеКоманды, СтруктураКнопка);
	
КонецПроцедуры // ДобавитьОписаниеКоманды()

&НаСервере
Функция ЗаписатьНастройкиВариантаВиджета()
	
	Если Настройки_ТипАналитики = Перечисления.CRM_ВидыРазверткиПоказателей.ПоПодразделению
			И Не ЗначениеЗаполнено(Настройки_ЗначениеАналитики) Тогда
		
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не заполнено подразделение!'"));
		Возврат Ложь;
		
	КонецЕсли;
	
	// --------------
	
	Если Виджет = Справочники.CRM_Виджеты.ДинамикаПродаж Тогда
		
		НовыеНастройкиВарианта = Справочники.CRM_ВариантыВиджетов.ПолучитьНастройки_ДинамикаПродаж();
		
		НовыеНастройкиВарианта.СтандартныйПериод	= Настройки_СтандартныйПериод;
		НовыеНастройкиВарианта.Периодичность		= Настройки_Периодичность;
		
	ИначеЕсли Виджет = Справочники.CRM_Виджеты.ДебиторскаяЗадолженность Тогда
		
		НовыеНастройкиВарианта = Справочники.CRM_ВариантыВиджетов.ПолучитьНастройки_ДебиторскаяЗадолженность();
		
		НовыеНастройкиВарианта.Период			= Настройки_СтандартнаяДатаНачала;
		// +CRM_Модуль
		//НовыеНастройкиВарианта.Периодичность	= Настройки_Периодичность;
		// -CRM_Модуль
		
	ИначеЕсли Виджет = Справочники.CRM_Виджеты.ДинамикаСтатусовКлиентов Тогда
		
		НовыеНастройкиВарианта = Справочники.CRM_ВариантыВиджетов.ПолучитьНастройки_ДинамикаСтатусовКлиентов();
		
		НовыеНастройкиВарианта.СтандартныйПериод	= Настройки_СтандартныйПериод;
		НовыеНастройкиВарианта.Периодичность		= Настройки_Периодичность;
		
	ИначеЕсли Виджет = Справочники.CRM_Виджеты.СтатистикаТелефонныхЗвонков
			Или Виджет = Справочники.CRM_Виджеты.ТрудозатратыВремениПоВидамРабот Тогда
		
		НовыеНастройкиВарианта = Справочники.CRM_ВариантыВиджетов.ПолучитьНастройки_СтатистикаТелефонныхЗвонков();
		
		НовыеНастройкиВарианта.СтандартныйПериод = Настройки_СтандартныйПериод;
		
	Иначе
		
		НовыеНастройкиВарианта = Справочники.CRM_ВариантыВиджетов.ПолучитьНастройки_КлючевыеПоказатели(Виджет);
		
		НовыеНастройкиВарианта.ОтображатьОбщиеРезультаты	= Настройки_ФлагОтображатьОбщиеРезультаты;
		НовыеНастройкиВарианта.ОтображатьПлановыеЗначения	= Настройки_ФлагОтображатьПлановыеЗначения;
		
		Если НовыеНастройкиВарианта.Свойство("ПланПродаж") Тогда
			НовыеНастройкиВарианта.ПланПродаж = Настройки_ПланПродаж;
		КонецЕсли;
		
	КонецЕсли;
	
	НовыеНастройкиВарианта.ТипАналитики			= Настройки_ТипАналитики;
	НовыеНастройкиВарианта.ЗначениеАналитики	= Настройки_ЗначениеАналитики;
	
	НовыеНастройкиВарианта.ДинамическоеЗначениеАналитики = Настройки_ДинамическоеЗначениеАналитики;
	
	// --------------
	
	ВариантВиджетаОбъект = ВариантВиджета.ПолучитьОбъект();
	
	ВариантВиджетаОбъект.ПериодОбновления	= Настройки_ПериодОбновления;
	ВариантВиджетаОбъект.НастройкиВарианта	= Новый ХранилищеЗначения(НовыеНастройкиВарианта);
	
	ВариантВиджетаОбъект.Записать();
	
	// --------------
	
	ВозвращаемыйРезультат = НовыеНастройкиВарианта;
	
	Возврат Истина;
	
КонецФункции // ЗаписатьНастройкиВариантаВиджета()

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
