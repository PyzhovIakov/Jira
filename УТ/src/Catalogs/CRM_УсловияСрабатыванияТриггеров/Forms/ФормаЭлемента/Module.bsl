
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	ВидСобытия = Число(Объект.СервисныйВызов);
	
	Если Объект.Ссылка = Справочники.CRM_УсловияСрабатыванияТриггеров.ПоРасписанию Тогда
		Отказ = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Редактирование данного условия срабатывания триггера запрещено!';
			|en='Editing this triggering condition is prohibited!'"));
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаОбработкаПуть.Видимость = Не Объект.ИспользоватьСКД;
	Элементы.РедактироватьСхемуКомпоновкиДанных.Видимость = Объект.ИспользоватьСКД;
	ОбъектЗначение = РеквизитФормыВЗначение("Объект");
	АдресФайла = ПоместитьВоВременноеХранилище(ОбъектЗначение.ОбработкаПроверки.Получить(), УникальныйИдентификатор);
	Если ОбъектЗначение.ХранилищеСхемыКомпоновкиДанных.Получить() = Неопределено Тогда
		СформироватьСКДПоОбъекту();
	Иначе	
		АдресСхемыКомпоновкиДанных = ПоместитьВоВременноеХранилище(ОбъектЗначение.ХранилищеСхемыКомпоновкиДанных.Получить(),
			 УникальныйИдентификатор);
		АдресНастроекКомпоновкиДанных = ПоместитьВоВременноеХранилище(ОбъектЗначение.ХранилищеНастроекКомпоновкиДанных.Получить(),
			 УникальныйИдентификатор);
	КонецЕсли;
	
	СобытиеПриИзмененииНаСервере();
	
	СписокИдентификаторов.Добавить(Справочники.ИдентификаторыОбъектовМетаданных.НайтиПоРеквизиту("Имя",
		 "Документы",
		 Справочники.ИдентификаторыОбъектовМетаданных.ПустаяСсылка()));
	СписокИдентификаторов.Добавить(Справочники.ИдентификаторыОбъектовМетаданных.НайтиПоРеквизиту("Имя",
		 "Справочники",
		 Справочники.ИдентификаторыОбъектовМетаданных.ПустаяСсылка()));
	СписокИдентификаторов.Добавить(Справочники.ИдентификаторыОбъектовМетаданных.НайтиПоРеквизиту("Имя",
		 "Задачи",
		 Справочники.ИдентификаторыОбъектовМетаданных.ПустаяСсылка()));
	СписокИдентификаторов.Добавить(Справочники.ИдентификаторыОбъектовМетаданных.НайтиПоРеквизиту("Имя",
		 "БизнесПроцессы",
		 Справочники.ИдентификаторыОбъектовМетаданных.ПустаяСсылка()));
	
	Если Не Объект.СервисныйВызов И Объект.ОбъектыОбработки.Количество() = 0 Тогда
		Объект.ОбъектыОбработки.Добавить();
	КонецЕсли;
	Элементы.ОбъектыОбработки.Видимость = Объект.ОбъектыОбработки.Количество() > 1;
	Элементы.ГруппаОбъектОбработки.Видимость = Объект.ОбъектыОбработки.Количество() = 1;

	СервисныйВызовПриИзмененииНаСервере();
	
	// Передается при восстановлении настроек СКД
	Параметры.Свойство("РаскрытьДопНастройки", РаскрытьДопНастройки);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	#Если ВебКлиент Тогда
		Элементы.РежимОтладки.Видимость = Ложь;
	#КонецЕсли
	Если РаскрытьДопНастройки Тогда
		Элементы.ГруппаРасширеннаяНастройка.Показать();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если Не ТекущийОбъект.ИспользоватьСКД Тогда 
		ТемпОбработка = ПолучитьИзВременногоХранилища(АдресФайла);
		Если ТемпОбработка = Неопределено Тогда
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не загружена обработка проверки условия!'"));
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		ТекущийОбъект.ОбработкаПроверки = Новый ХранилищеЗначения(ТемпОбработка);
	Иначе
		ТемпСКД = ПолучитьИзВременногоХранилища(АдресСхемыКомпоновкиДанных);
		Если ТемпСКД = Неопределено Тогда
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не сформирована схема компоновки данных проверки условия!'"));
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		ТекущийОбъект.ХранилищеСхемыКомпоновкиДанных = Новый ХранилищеЗначения(ТемпСКД);
		ТекущийОбъект.ХранилищеНастроекКомпоновкиДанных =
			Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресНастроекКомпоновкиДанных));
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОбработкаВыбораПути(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Объект.ПутьКОбработке = ДополнительныеПараметры.ДиалогВыбораФайла.ПолноеИмяФайла;
	Модифицированность = Истина;
КонецПроцедуры	

&НаКлиенте
Процедура ПутьКОбработкеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Фильтр = "Файл обработки (*.epf)|*.epf";
	ДиалогВыбораФайла.Расширение = "html";
	ДиалогВыбораФайла.Заголовок = НСтр("ru='Выберите внешнюю обработку для отладки';
		|en='Select external data processor for debugging'");
	ДиалогВыбораФайла.ПредварительныйПросмотр = Ложь;
	ДиалогВыбораФайла.ИндексФильтра = 0;
	ДиалогВыбораФайла.ПолноеИмяФайла = Объект.ПутьКОбработке;
	ДополнительныеПараметры	= Новый Структура;
	ДополнительныеПараметры.Вставить("ДиалогВыбораФайла", ДиалогВыбораФайла);
	ДополнительныеПараметры.Вставить("ПроверкаСуществованияФайлов", Истина);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораПути", ЭтотОбъект, ДополнительныеПараметры);
	ДиалогВыбораФайла.Показать(ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСКДПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура СобытиеПриИзменении(Элемент)
	
	Объект.Наименование = Объект.Событие;
	Для каждого Строка Из Объект.ОбъектыОбработки Цикл
		Объект.Наименование = Объект.Наименование + ?(Строка.НомерСтроки = 1, ": ", "; ") + Строка.ОбъектОбработки;
	КонецЦикла;
	
	СобытиеПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура РежимОтладкиПриИзменении(Элемент)
	Если НЕ Объект.РежимОтладки И НЕ Объект.ИспользоватьСКД Тогда
		ОписаниеОповещенияЗавершения = Новый ОписаниеОповещения("ВопросЗагрузитьОбработку", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещенияЗавершения,
			 НСтр("ru='Загрузить новую обработку действия?';en='Download new action processing?'"),
			 РежимДиалогаВопрос.ДаНет);
		
	// ИначеЕсли НЕ Объект.ИспользоватьСКД Тогда
	//	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	//	
	//	ДиалогВыбораФайла.Фильтр = "Файл обработки (*.epf)|*.epf";
	//	ДиалогВыбораФайла.Расширение = "html";
	//	
	//	ДиалогВыбораФайла.Заголовок = НСтр("ru='Выберите файл';en='Select file'");
	//	ДиалогВыбораФайла.ПредварительныйПросмотр = Ложь;
	//	ДиалогВыбораФайла.ИндексФильтра = 0;
	//	ДиалогВыбораФайла.ПолноеИмяФайла = Объект.ПутьКОбработке;
	//	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = истина;
	//	
	//	Если ДиалогВыбораФайла.Выбрать() Тогда
	//		
	//		Объект.ПутьКОбработке		= ДиалогВыбораФайла.ПолноеИмяФайла;
	//		
	//		// ЗагрузитьОбработку();
	//		ЭтаФорма.Модифицированность = Истина;
	//	КонецЕсли;
	КонецЕсли;
	УстановитьВидимость();

КонецПроцедуры

&НаКлиенте
Процедура ОбъектыОбработкиОбъектОбработкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	фиксНастройки = Новый НастройкиКомпоновкиДанных;
	 
	эОтбор = фиксНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	эОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
	эОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии;
	эОтбор.ПравоеЗначение = СписокИдентификаторов;
	эОтбор.Использование = Истина;
	
	эОтбор.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	эОтбор = фиксНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	эОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПометкаУдаления");
	эОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	эОтбор.ПравоеЗначение = Ложь;
	эОтбор.Использование = Истина;
	
	эОтбор.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	 
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ФиксированныеНастройки", фиксНастройки);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	
	ОткрытьФорму("Справочник.ИдентификаторыОбъектовМетаданных.ФормаВыбора", ПараметрыФормы, Элемент, ,
		 , , ,
		 РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыОбработкиПриИзменении(Элемент)
	
	Наименование = Строка(Объект.Событие);
	Для каждого Строка Из Объект.ОбъектыОбработки Цикл
		Наименование = Наименование + ?(Строка.НомерСтроки = 1, ": ", "; ") + Строка.ОбъектОбработки;
	КонецЦикла;
	Если СтрНайти(Наименование, Объект.Наименование) > 0 Тогда
		Объект.Наименование = Наименование;
	КонецЕсли;
	
	Если Объект.ИспользоватьСКД Тогда
		Если Объект.ОбъектыОбработки.Количество() = 1 Тогда
			Объект.ОбъектДействия = Объект.ОбъектыОбработки[0].ОбъектОбработки;
		Иначе
			Объект.ОбъектДействия = ПредопределенноеЗначение("Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка");
		КонецЕсли;
	КонецЕсли;
	СформироватьСКДПоОбъекту();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьОбъектОбработки(Команда)
	Если Объект.ОбъектыОбработки.Количество() = 1 И ЗначениеЗаполнено(Объект.ОбъектыОбработки[0].ОбъектОбработки) Тогда
		Объект.ОбъектыОбработки.Добавить();
		Элементы.ГруппаОбъектОбработки.Видимость = Ложь;
		Элементы.ОбъектыОбработки.Видимость = Истина;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не заполнен текущий объект обработки!';
			|en='Current processing object not filled!'"), ,
			 "Объект.ОбъектыОбработки");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СервисныйВызовПриИзмененииНаСервере()
	Если Объект.СервисныйВызов И Элементы.ИдентификаторВызова.СписокВыбора.Количество() = 0 Тогда
		ПодключенныеСервисы = CRM_ТриггерыСервер.ПодключенныеКТриггерамСервисы();
		Для каждого Сервис Из ПодключенныеСервисы Цикл
			Элементы.ИдентификаторВызова.СписокВыбора.Добавить(Сервис.Значение, Сервис.Представление);
		КонецЦикла;
	КонецЕсли;
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура СервисныйВызовПриИзменении(Элемент)
	Объект.СервисныйВызов = Булево(ВидСобытия);
	Если Объект.СервисныйВызов Тогда
		Объект.ИспользоватьСКД = Ложь;
		Объект.ОбъектыОбработки.Очистить();
	ИначеЕсли Объект.ОбъектыОбработки.Количество() = 0 Тогда
		Объект.ОбъектыОбработки.Добавить();
	КонецЕсли;
	СервисныйВызовПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыгрузитьОбработку(Команда)
	ПодготовитьКВыгрузкеОбработкуНаСервере();

	ОбщегоНазначенияКлиент.ПроверитьРасширениеРаботыСФайламиПодключено(
			Новый ОписаниеОповещения(
				"ВыгрузитьОбработкуПродолжение",
				ЭтотОбъект,
				Новый Структура),
			НСтр("ru='Для продолжения необходимо установить расширение для работы с файлами.';en='To continue, install the file operation extension.'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьОбработкуПродолжение(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт

    ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВыборФайла", ЭтотОбъект);
	ИмяФайла = Объект.НазваниеОбработки + ".epf";
	Файл = Новый ОписаниеПередаваемогоФайла(ИмяФайла, АдресФайла);
	ПолучаемыеФайлы = Новый Массив;
	ПолучаемыеФайлы.Добавить(Файл);
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогОткрытияФайла.Фильтр = "(*.epf)|*.epf";
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	НачатьПолучениеФайлов(ОписаниеОповещения, ПолучаемыеФайлы, ДиалогОткрытияФайла, Истина);
    
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборФайла(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ПомещенныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого ПереданныйФайл Из ПомещенныеФайлы Цикл
		Объект.ПутьКОбработке		= ПереданныйФайл.Имя;
		Модифицированность = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьСхемуКомпоновкиДанных(Команда)
	
	// Открыть редактор настроек схемы компоновки данных
	ЗаголовокФормыНастройкиСхемыКомпоновкиДанных = НСтр("ru='Настройка шаблона условий проверки ""%1""';
		|en='Setting the test conditions template ""%1""'");
	ЗаголовокФормыНастройкиСхемыКомпоновкиДанных = СтрЗаменить(ЗаголовокФормыНастройкиСхемыКомпоновкиДанных,
		 "%1",
		 Объект.Наименование);
	ОповещениеЗакрытия = Новый ОписаниеОповещения("ПослеРедактированияСхемы", ЭтотОбъект);
	АдресаНастроек = ОткрытьФорму("ОбщаяФорма.УпрощеннаяНастройкаСхемыКомпоновкиДанных",
		Новый Структура(
						"НеПомещатьНастройкиВСхемуКомпоновкиДанных,
						|НеРедактироватьСхемуКомпоновкиДанных,
						|НеНастраиватьУсловноеОформление,
						|НеНастраиватьВыбор,
						|НеНастраиватьПорядок,
						|УникальныйИдентификатор,
						|АдресСхемыКомпоновкиДанных,
						|АдресНастроекКомпоновкиДанных,
						|Заголовок,
						// |ИсточникШаблонов,
						|ИмяШаблонаСКД,
						|ВозвращатьИмяТекущегоШаблонаСКД",
						Истина,
						Ложь,
						Истина,
						Истина,
						Истина,
						УникальныйИдентификатор,
						АдресСхемыКомпоновкиДанных,
						АдресНастроекКомпоновкиДанных,
						ЗаголовокФормыНастройкиСхемыКомпоновкиДанных,
						// ,
						ЗаголовокФормыНастройкиСхемыКомпоновкиДанных,
						Истина), ЭтотОбъект, , , , ОповещениеЗакрытия);
	
	// УстановитьДоступностьИВидимостьЭлементовФормы(Объект, Элементы, РазмерностьДоступна());
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеРедактированияСхемы(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	Если ЗначениеЗаполнено(РезультатЗакрытия) Тогда
				
		Если РезультатЗакрытия.Свойство("АдресХранилищаНастройкиКомпоновщика") Тогда
			АдресНастроекКомпоновкиДанных = РезультатЗакрытия.АдресХранилищаНастройкиКомпоновщика;
			ПослеРедактированияСхемыСервер();
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры	

&НаСервере
Процедура ПослеРедактированияСхемыСервер()
	
	НастройкиСКД = ПолучитьИзВременногоХранилища(АдресНастроекКомпоновкиДанных);
	ПолеОбъектДействия = НастройкиСКД.ДоступныеПоляВыбора.Элементы.Найти("ОбъектДействия");
	Если ПолеОбъектДействия <> Неопределено 
		И ПолеОбъектДействия.Тип.Типы().Количество() = 1 
		И Метаданные.НайтиПоТипу(ПолеОбъектДействия.Тип.Типы()[0]) <> Неопределено Тогда
		
		ИдетнификаторОбъектаДействия = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолеОбъектДействия.Тип.Типы()[0]);
		Если Объект.ОбъектДействия <> ИдетнификаторОбъектаДействия Тогда
			Объект.ОбъектДействия = ИдетнификаторОбъектаДействия;
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура ЗагрузитьОбработкуКлиент(Команда)
	
	ОбщегоНазначенияКлиент.ПроверитьРасширениеРаботыСФайламиПодключено(
			Новый ОписаниеОповещения(
				"ЗагрузитьОбработкуПродолжение",
				ЭтотОбъект,
				Новый Структура),
			НСтр("ru='Для продолжения необходимо установить расширение для работы с файлами.';en='To continue, install the file operation extension.'"));

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОбработкуПродолжение(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт

	Если ЗначениеЗаполнено(Объект.НазваниеОбработки) Тогда
		ОписаниеОповещенияЗавершения = Новый ОписаниеОповещения("ВопросЗагрузитьОбработку", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещенияЗавершения,
			 НСтр("ru='Загрузить новую обработку с диска?';en='Download new treatment from disk?'"),
			 РежимДиалогаВопрос.ДаНет);
	Иначе
		ВопросЗагрузитьОбработку(КодВозвратаДиалога.Да, Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросЗагрузитьОбработку(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьОбработкуЗавершение", ЭтотОбъект);
		ИмяФайла = Объект.НазваниеОбработки + ".epf";
		ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ДиалогОткрытияФайла.Фильтр = "(*.epf)|*.epf";
		ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
		НачатьПомещениеФайлов(ОписаниеОповещения, , ДиалогОткрытияФайла, Истина, УникальныйИдентификатор);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОбработкуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Результат) = Тип("Массив") И Результат.Количество() > 0 Тогда
		АдресФайла = Результат[0].Хранение;
		Объект.ПутьКОбработке = Результат[0].Имя;
		ЗагрузитьОбработку();
		Модифицированность = Истина;
		УстановитьВидимость();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьСтандартнуюОбработку(Команда)
	ОписаниеОповещенияЗавершения = Новый ОписаниеОповещения("ВопроcВосстановитьОбработку", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещенияЗавершения,
		 НСтр("ru='Восстановить стандартную обработку ?';en='Restore standard data processor?'"),
		 РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

&НаКлиенте
Процедура ВопроcВосстановитьОбработку(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗагрузитьСтандартнуюОбработкуНаСервере();
		Модифицированность = Истина;
		Объект.ИспользуетсяСтандартнаяОбработка = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВосстановитьСКД(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВосстановитьСКДПродолжение", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, "Будут восстановлены настройки по умолчанию.
		|Если была изменена схема компоновки данных, она будет удалена. Продолжить?", РежимДиалогаВопрос.ОКОтмена);
	
КонецПроцедуры

&НаКлиенте
Процедура ВосстановитьСКДПродолжение(Результат, ДопПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.ОК Тогда
		СформироватьСКДПоОбъекту(Ложь);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьВидимость()
	
	Элементы.ПутьКОбработке.Видимость 				 = Объект.РежимОтладки;
	Элементы.ЗагрузитьОбработку.Видимость 			 = НЕ Объект.РежимОтладки;
	Элементы.ВыгрузитьОбработку.Видимость 			 = НЕ Объект.РежимОтладки;
	Элементы.ВыгрузитьОбработку.Доступность 		 = ЗначениеЗаполнено(Объект.НазваниеОбработки);
	Элементы.ЗагрузитьСтандартнуюОбработку.Видимость = Объект.Предопределенный И НЕ Объект.РежимОтладки;
	Элементы.НазваниеОбработки.Видимость 			 = НЕ Объект.ИспользоватьСКД И НЕ Объект.РежимОтладки;
	Элементы.РежимОтладки.Видимость 				 = НЕ Объект.ИспользоватьСКД;

	Элементы.ГруппаОбработкаПуть.Видимость = Не Объект.ИспользоватьСКД;
	Элементы.РедактироватьСхемуКомпоновкиДанных.Видимость = Объект.ИспользоватьСКД;
	
	Элементы.ГруппаТриггерСобытия.Видимость = Не Объект.СервисныйВызов;
	Элементы.ГруппаТриггерСервиса.Видимость = Объект.СервисныйВызов;
	Элементы.ИспользоватьСКД.Видимость = Не Объект.СервисныйВызов;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьОбработку()
	ПараметрыЗащиты = Новый("ОписаниеЗащитыОтОпасныхДействий" + "");
	ПараметрыЗащиты.ПредупреждатьОбОпасныхДействиях = Ложь;
	
	Объект.ИспользуетсяСтандартнаяОбработка = Ложь;
	Обработка =  ВнешниеОбработки.Создать(ВнешниеОбработки.Подключить(АдресФайла, , Ложь, ПараметрыЗащиты), Ложь);
	Объект.НазваниеОбработки = Обработка.Метаданные().Имя;
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Обработка, "ТипОбъектаДействия") Тогда
		Объект.ОбъектДействия = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ТипЗнч(Обработка.ТипОбъектаДействия));
	КонецЕсли;
	Если Объект.Наименование = "" Тогда	
		Объект.Наименование = Обработка.Метаданные().Синоним;
	КонецЕсли;	
КонецПроцедуры	

&НаСервере
Функция ПолучитьДвоичныеДанныеИзХранилища()
	ОбъектПолучения = РеквизитФормыВЗначение("Объект");
	Возврат(ОбъектПолучения.ОбработкаПроверки.Получить());
КонецФункции

&НаКлиенте
Процедура ПодготовитьКВыгрузкеОбработкуНаСервере()
	// ОбъектЗначение = РеквизитФормыВЗначение("Объект");
	ДанныеФайла = ПолучитьДвоичныеДанныеИзХранилища();
	АдресФайла = ПоместитьВоВременноеХранилище(ДанныеФайла, УникальныйИдентификатор);
КонецПроцедуры

&НаСервере
Процедура СформироватьСКДПоОбъекту(ОчищатьНастройки = Истина)
	СКДПроверка = Новый СхемаКомпоновкиДанных();
	
	ИсточникДанных = СКДПроверка.ИсточникиДанных.Добавить();
	ИсточникДанных.Имя = "ИсточникДанныхПроверка";
	ИсточникДанных.ТипИсточникаДанных = "Local";
	
	НаборДанных = СКДПроверка.НаборыДанных.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
	НаборДанных.Имя = "НаборДанныхПроверка";
	НаборДанных.ИсточникДанных = "ИсточникДанныхПроверка";
	
	НаборДанных.Запрос = ПолучитьТекстЗапросаПоОбъекту();
	
	ДобавитьДополнительныеПараметрыПоОбъекту(СКДПроверка);
	
	Если ОчищатьНастройки Тогда
		НастройкиСКД = 	СКДПроверка.НастройкиПоУмолчанию;
		
		КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных();
		КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СКДПроверка));
		КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиСКД);
		
		АдресНастроекКомпоновкиДанных = ПоместитьВоВременноеХранилище(НастройкиСКД, УникальныйИдентификатор);
	КонецЕсли;
	
	АдресСхемыКомпоновкиДанных = ПоместитьВоВременноеХранилище(СКДПроверка, УникальныйИдентификатор);
КонецПроцедуры	

&НаСервере
Функция ПолучитьТекстЗапросаПоОбъекту()
	Если Объект.ОбъектыОбработки.Количество() = 0 Тогда
		Возврат "ВЫБРАТЬ
		|	ИСТИНА КАК Ссылка";
	ИначеЕсли Объект.ОбъектыОбработки.Количество() = 1 Тогда	
		МетаданныеОбъекта = ОбщегоНазначения.ОбъектМетаданныхПоИдентификатору(Объект.ОбъектыОбработки[0].ОбъектОбработки);
		
		ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ *";
		
		Если Объект.ОбъектДействия.Имя = "CRM_Интерес" И МетаданныеОбъекта.Имя <> "CRM_Интерес" Тогда
			Если Объект.ОбъектыОбработки[0].ОбъектОбработки.ПолноеИмя = "Документ.CRM_СообщениеМессенджера" Тогда
				ОбъектЖурнала = МетаданныеОбъекта.Имя + ".Диалог";
			Иначе
				ОбъектЖурнала = МетаданныеОбъекта.Имя + ".Ссылка";
			КонецЕсли;
			
			ТекстЗапроса = ТекстЗапроса + "	
			|, CRM_ЖурналДокументов.CRM_Интерес КАК ОбъектДействия
			|, CRM_ЖурналДокументов.CRM_Интерес.СостояниеИнтереса КАК СостояниеИнтереса
			| ИЗ " + Объект.ОбъектыОбработки[0].ОбъектОбработки.ПолноеИмя + " КАК " + МетаданныеОбъекта.Имя + "
			|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.CRM_ЖурналДокументов КАК CRM_ЖурналДокументов
			|		ПО CRM_ЖурналДокументов.Объект = " + ОбъектЖурнала + "
			|ГДЕ
			|	" + МетаданныеОбъекта.Имя + ".Ссылка = &Ссылка";
		Иначе
			ТекстЗапроса = ТекстЗапроса + "	
			| ИЗ " + Объект.ОбъектыОбработки[0].ОбъектОбработки.ПолноеИмя + " КАК " + МетаданныеОбъекта.Имя + "
			|ГДЕ
			|	" + МетаданныеОбъекта.Имя + ".Ссылка = &Ссылка";
		КонецЕсли;
		
	Иначе	
		НачалоЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ";
		ТекстЗапроса = "";
		Для Каждого Строка Из Объект.ОбъектыОбработки Цикл
			
			Если НЕ ЗначениеЗаполнено(Строка.ОбъектОбработки) Тогда
				Продолжить;
			КонецЕсли;
			
			МетаданныеОбъекта = ОбщегоНазначения.ОбъектМетаданныхПоИдентификатору(Строка.ОбъектОбработки);
			ТекстЗапроса = ТекстЗапроса + НачалоЗапроса + "
			|	" + МетаданныеОбъекта.Имя + ".Ссылка";
			
			Если Объект.ОбъектДействия.Имя = "CRM_Интерес" И МетаданныеОбъекта.Имя <> "CRM_Интерес" Тогда
				Если Строка.ОбъектОбработки.ПолноеИмя = "Документ.CRM_СообщениеМессенджера" Тогда
					ОбъектЖурнала = МетаданныеОбъекта.Имя + ".Диалог";
				Иначе
					ОбъектЖурнала = МетаданныеОбъекта.Имя + ".Ссылка";
				КонецЕсли;
				
				ТекстЗапроса = ТекстЗапроса + "	
				|, CRM_ЖурналДокументов.CRM_Интерес КАК ОбъектДействия
				|, CRM_ЖурналДокументов.CRM_Интерес.СостояниеИнтереса КАК СостояниеИнтереса
				| ИЗ " + Строка.ОбъектОбработки.ПолноеИмя + " КАК " + МетаданныеОбъекта.Имя + "
				|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.CRM_ЖурналДокументов КАК CRM_ЖурналДокументов
				|		ПО CRM_ЖурналДокументов.Объект = " + ОбъектЖурнала + "
				|ГДЕ
				|	" + МетаданныеОбъекта.Имя + ".Ссылка = &Ссылка";
			Иначе
				ТекстЗапроса = ТекстЗапроса + "
				| ИЗ " + Строка.ОбъектОбработки.ПолноеИмя + " КАК " + МетаданныеОбъекта.Имя + "
				|ГДЕ
				|	" + МетаданныеОбъекта.Имя + ".Ссылка = &Ссылка";
			КонецЕсли;
			
			НачалоЗапроса = "
			|ОБЪЕДИНИТЬ ВСЕ
			|ВЫБРАТЬ
			|";

		КонецЦикла;
	КонецЕсли;
	Возврат ТекстЗапроса;
КонецФункции	

Процедура ДобавитьДополнительныеПараметрыПоОбъекту(СКД)
	
	МассивПараметров = Новый Массив; 
	Для Каждого Строка Из Объект.ОбъектыОбработки Цикл
		
		ТипОбъектаОбработки = ТипЗнч(Строка.ОбъектОбработки.ЗначениеПустойСсылки);
		Если ТипОбъектаОбработки = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
			МассивПараметров.Добавить("ПринятаКИсполнениюПередЗаписью");
			МассивПараметров.Добавить("ВыполненаПередЗаписью");
		ИначеЕсли ТипОбъектаОбработки = Тип("ДокументСсылка.CRM_Интерес") Тогда
			МассивПараметров.Добавить("ЭтоНовый");
			МассивПараметров.Добавить("ПредыдущееСостояниеИнтереса");
			МассивПараметров.Добавить("ПредыдущийПартнер");
		КонецЕсли;
		
	КонецЦикла;
	
	Для каждого Параметр Из МассивПараметров Цикл
		ЗначениеПараметра = СКД.Параметры.Добавить();
		ЗначениеПараметра.Имя = Параметр;
		
		ЗначениеПараметраДанных =	СКД.НастройкиПоУмолчанию.ПараметрыДанных.Элементы.Добавить();
		ЗначениеПараметраДанных.Параметр = Новый ПараметрКомпоновкиДанных(Параметр);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СобытиеПриИзмененииНаСервере()
	
	Если Объект.Событие = Перечисления.CRM_СобытияТриггеров.ВыполнитьПереопределяемуюКоманду
	ИЛИ Объект.Событие = Перечисления.CRM_СобытияТриггеров.ОбработкаОповещения
	ИЛИ Объект.Событие = Перечисления.CRM_СобытияТриггеров.ПередЗаписьюНаСервере
	ИЛИ Объект.Событие = Перечисления.CRM_СобытияТриггеров.ПослеЗаписиНаСервере
	ИЛИ Объект.Событие = Перечисления.CRM_СобытияТриггеров.ПриСозданииНаСервере Тогда
		
		Объект.ИспользоватьСКД									= Истина;
		Объект.РежимОтладки										= Ложь;
		Элементы.ИспользоватьСКД.Видимость						= Ложь;
		Элементы.ГруппаОбработкаПуть.Видимость					= Ложь;
		Элементы.НазваниеОбработки.Видимость					= Ложь;
		Элементы.РедактироватьСхемуКомпоновкиДанных.Видимость	= Ложь;
	Иначе
		Элементы.ИспользоватьСКД.Видимость						= Истина;
		Элементы.РедактироватьСхемуКомпоновкиДанных.Видимость	= Объект.ИспользоватьСКД;
		УстановитьВидимость();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьСтандартнуюОбработкуНаСервере()
	
	Если Объект.ИмяПредопределенныхДанных = "ПроверкаСвязиСИнтересом"
		 ИЛИ Объект.ИмяПредопределенныхДанных = "ВходящийТелефонныйЗвонокПоИнтересуКлиента"
		ИЛИ Объект.ИмяПредопределенныхДанных = "ВходящееЭлектронноеПисьмоПоИнтересуКлиента"
			 ИЛИ Объект.ИмяПредопределенныхДанных = "ВходящееСообщениеЧатаПоИнтересуКлиента" Тогда	
		АдресФайла = ПоместитьВоВременноеХранилище(Справочники.CRM_УсловияСрабатыванияТриггеров.ПолучитьМакет("ПроверкаСвязиСИнтересом"),
			 УникальныйИдентификатор);
		Объект.НазваниеОбработки = "ПроверкаСвязиСИнтересом";
	ИначеЕсли Объект.ИмяПредопределенныхДанных = "ПисьмоОтНовогоКлиента" Тогда	
		АдресФайла = ПоместитьВоВременноеХранилище(Справочники.CRM_УсловияСрабатыванияТриггеров.ПолучитьМакет("ПисьмоОтНовогоКлиента"),
			 УникальныйИдентификатор);
		Объект.НазваниеОбработки = "ПисьмоОтНовогоКлиента";	
	ИначеЕсли ЗначениеЗаполнено(Объект.ИмяПредопределенныхДанных) Тогда	
		ИмяМакета = "CRM_Модуль_" + Объект.ИмяПредопределенныхДанных;
		Если Метаданные.Справочники.CRM_УсловияСрабатыванияТриггеров.Макеты.Найти(ИмяМакета) = Неопределено Тогда
			ИмяМакета = Объект.ИмяПредопределенныхДанных;
		КонецЕсли;
		АдресФайла = ПоместитьВоВременноеХранилище(Справочники.CRM_УсловияСрабатыванияТриггеров.ПолучитьМакет(ИмяМакета),
			 УникальныйИдентификатор);
		Объект.НазваниеОбработки = Объект.ИмяПредопределенныхДанных;	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектДействияПриИзменении(Элемент)
	Если Не Объект.СервисныйВызов Тогда
		СформироватьСКДПоОбъекту();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти 
