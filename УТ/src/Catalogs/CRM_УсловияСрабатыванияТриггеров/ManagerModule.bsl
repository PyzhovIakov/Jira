#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Функция - Шаблоны схемы компоновки данных
// 
// Возвращаемое значение:
//  Шаблоны - Массив - Массив шаблонов ключевых показателей.
//
Функция ШаблоныСхемыКомпоновкиДанных() Экспорт
	
	Шаблоны = Новый Массив;
	
	Для каждого Макет Из Метаданные.Справочники.CRM_ШаблоныКлючевыхПоказателей.Макеты Цикл
		
		Если Макет.ТипМакета <> Метаданные.СвойстваОбъектов.ТипМакета.СхемаКомпоновкиДанных Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		Шаблоны.Добавить(Новый Структура("Имя, Синоним", Макет.Имя, Макет.Синоним));
		
	КонецЦикла;
	
	Возврат Шаблоны;
	
КонецФункции

// Процедура - Создать предопределенные действия
//  Процедура создает предопределенные действия.
//
// Параметры:
//  Параметры	 - Структура - Параметры выполнения процедуры.
//
Процедура СоздатьПредопределенныеДействия(Параметры = Неопределено) Экспорт
	
	ИдентификаторМетаданных =
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Метаданные.Документы.ЭлектронноеПисьмоВходящее);
	
	ОбработкаТриггера = Справочники.CRM_УсловияСрабатыванияТриггеров.ПисьмоОтНовогоКлиента.ПолучитьОбъект();
	ОбработкаТриггера.ОбработкаПроверки =
		Новый ХранилищеЗначения(Справочники.CRM_УсловияСрабатыванияТриггеров.ПолучитьМакет("ПисьмоОтНовогоКлиента"));
	ОбработкаТриггера.НазваниеОбработки = "ПисьмоОтНовогоКлиента";
	ОбработкаТриггера.ИспользуетсяСтандартнаяОбработка = Истина;
	ОбработкаТриггера.Событие = Перечисления.CRM_СобытияТриггеров.ПриЗаписи;
	ОбработкаТриггера.ИспользоватьСКД = Ложь;
	ОбработкаТриггера.РежимОтладки = Ложь;
	ОбработкаТриггера.ОбъектДействия = ИдентификаторМетаданных;
	
	Если ОбработкаТриггера.ОбъектыОбработки.Количество() = 0 Тогда
		НовыйОбъект = ОбработкаТриггера.ОбъектыОбработки.Добавить();
		НовыйОбъект.ОбъектОбработки = ИдентификаторМетаданных;
	КонецЕсли;
	
	ОбработкаТриггера.Записать();
	
	ИдентификаторМетаданныхИнтерес = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Метаданные.Документы.CRM_Интерес);
		
	ОбработкаТриггера = Справочники.CRM_УсловияСрабатыванияТриггеров.ПриВыбореНовогоСостоянияИнтереса.ПолучитьОбъект();
	ОбработкаТриггера.ОбработкаПроверки = Новый ХранилищеЗначения(ПолучитьМакет(?(CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM(),
		 "", "CRM_Модуль_") 
		+ "ПриВыбореНовогоСостоянияИнтереса"));
	ОбработкаТриггера.НазваниеОбработки = "ПриВыбореНовогоСостоянияИнтереса";
	ОбработкаТриггера.ИспользуетсяСтандартнаяОбработка = Истина;
	ОбработкаТриггера.Событие = Перечисления.CRM_СобытияТриггеров.ПриЗаписи;
	ОбработкаТриггера.ИспользоватьСКД = Ложь;
	ОбработкаТриггера.РежимОтладки = Ложь;
	ОбработкаТриггера.ОбъектДействия = ИдентификаторМетаданныхИнтерес;
	
	Если ОбработкаТриггера.ОбъектыОбработки.Количество() = 0 Тогда
		НовыйОбъект = ОбработкаТриггера.ОбъектыОбработки.Добавить();
		НовыйОбъект.ОбъектОбработки = ИдентификаторМетаданныхИнтерес;
	КонецЕсли;
	
	ОбработкаТриггера.Записать();
	
	ОбработкаТриггера =
		Справочники.CRM_УсловияСрабатыванияТриггеров.ПриИзмененииТекущегоСостоянияИнтереса.ПолучитьОбъект();
	ОбработкаТриггера.ОбработкаПроверки =
		Новый ХранилищеЗначения(Справочники.CRM_УсловияСрабатыванияТриггеров.ПолучитьМакет("ПриИзмененииТекущегоСостоянияИнтереса"));
	ОбработкаТриггера.НазваниеОбработки = "ПриИзмененииТекущегоСостоянияИнтереса";
	ОбработкаТриггера.ИспользуетсяСтандартнаяОбработка = Истина;
	ОбработкаТриггера.Событие = Перечисления.CRM_СобытияТриггеров.ПриЗаписи;
	ОбработкаТриггера.ИспользоватьСКД = Ложь;
	ОбработкаТриггера.РежимОтладки = Ложь;
	ОбработкаТриггера.ОбъектДействия = ИдентификаторМетаданныхИнтерес;
	
	Если ОбработкаТриггера.ОбъектыОбработки.Количество() = 0 Тогда
		НовыйОбъект = ОбработкаТриггера.ОбъектыОбработки.Добавить();
		НовыйОбъект.ОбъектОбработки = ИдентификаторМетаданныхИнтерес;
	КонецЕсли;
	
	ОбработкаТриггера.Записать();
	
	ОбработкаТриггера =
		Справочники.CRM_УсловияСрабатыванияТриггеров.ВходящееСообщениеЧатаПоИнтересуКлиента.ПолучитьОбъект();
	ОбработкаТриггера.ОбработкаПроверки =
		Новый ХранилищеЗначения(Справочники.CRM_УсловияСрабатыванияТриггеров.ПолучитьМакет("ПроверкаСвязиСИнтересом"));
	ОбработкаТриггера.НазваниеОбработки = "ПроверкаСвязиСИнтересом";
	ОбработкаТриггера.ИспользуетсяСтандартнаяОбработка = Истина;
	ОбработкаТриггера.Событие = Перечисления.CRM_СобытияТриггеров.ПриЗаписи;
	ОбработкаТриггера.ИспользоватьСКД = Ложь;
	ОбработкаТриггера.РежимОтладки = Ложь;
	ОбработкаТриггера.ОбъектДействия = ИдентификаторМетаданныхИнтерес;
	
	Если ОбработкаТриггера.ОбъектыОбработки.Количество() = 0 Тогда
		НовыйОбъект = ОбработкаТриггера.ОбъектыОбработки.Добавить();
		НовыйОбъект.ОбъектОбработки =
			ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Тип("ДокументСсылка.CRM_СообщениеМессенджера"));
	КонецЕсли;
	
	ОбработкаТриггера.Записать();
	
	ОбработкаТриггера =
		Справочники.CRM_УсловияСрабатыванияТриггеров.ВходящееЭлектронноеПисьмоПоИнтересуКлиента.ПолучитьОбъект();
	ОбработкаТриггера.ОбработкаПроверки =
		Новый ХранилищеЗначения(Справочники.CRM_УсловияСрабатыванияТриггеров.ПолучитьМакет("ПроверкаСвязиСИнтересом"));
	ОбработкаТриггера.НазваниеОбработки = "ПроверкаСвязиСИнтересом";
	ОбработкаТриггера.ИспользуетсяСтандартнаяОбработка = Истина;
	ОбработкаТриггера.Событие = Перечисления.CRM_СобытияТриггеров.ПриЗаписи;
	ОбработкаТриггера.ИспользоватьСКД = Ложь;
	ОбработкаТриггера.РежимОтладки = Ложь;
	ОбработкаТриггера.ОбъектДействия = ИдентификаторМетаданныхИнтерес;
	
	Если ОбработкаТриггера.ОбъектыОбработки.Количество() = 0 Тогда
		НовыйОбъект = ОбработкаТриггера.ОбъектыОбработки.Добавить();
		НовыйОбъект.ОбъектОбработки =
			ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее"));
	КонецЕсли;
	
	ОбработкаТриггера.Записать();
	
	ОбработкаТриггера =
		Справочники.CRM_УсловияСрабатыванияТриггеров.ВходящийТелефонныйЗвонокПоИнтересуКлиента.ПолучитьОбъект();
	ОбработкаТриггера.ОбработкаПроверки =
		Новый ХранилищеЗначения(Справочники.CRM_УсловияСрабатыванияТриггеров.ПолучитьМакет("ПроверкаСвязиСИнтересом"));
	ОбработкаТриггера.НазваниеОбработки = "ПроверкаСвязиСИнтересом";
	ОбработкаТриггера.ИспользуетсяСтандартнаяОбработка = Истина;
	ОбработкаТриггера.Событие = Перечисления.CRM_СобытияТриггеров.ПриЗаписи;
	ОбработкаТриггера.ИспользоватьСКД = Ложь;
	ОбработкаТриггера.РежимОтладки = Ложь;
	ОбработкаТриггера.ОбъектДействия = ИдентификаторМетаданныхИнтерес;
	
	Если ОбработкаТриггера.ОбъектыОбработки.Количество() = 0 Тогда
		НовыйОбъект = ОбработкаТриггера.ОбъектыОбработки.Добавить();
		НовыйОбъект.ОбъектОбработки = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Тип("ДокументСсылка.ТелефонныйЗвонок"));
	КонецЕсли;
	
	ОбработкаТриггера.Записать();
	
	ОбработкаТриггера = Справочники.CRM_УсловияСрабатыванияТриггеров.ПриОплатеПоИнтересу.ПолучитьОбъект();
	ОбработкаТриггера.ОбработкаПроверки = Новый ХранилищеЗначения(ПолучитьМакет(?(CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM(),
		 "", "CRM_Модуль_") 
		+ "ПриОплатеПоИнтересу"));
	ОбработкаТриггера.НазваниеОбработки = "ПриОплатеПоИнтересу";
	ОбработкаТриггера.ИспользуетсяСтандартнаяОбработка = Истина;
	ОбработкаТриггера.Событие = Перечисления.CRM_СобытияТриггеров.ОбработкаПроведения;
	ОбработкаТриггера.ИспользоватьСКД = Ложь;
	ОбработкаТриггера.РежимОтладки = Ложь;
	ОбработкаТриггера.ОбъектДействия = ИдентификаторМетаданныхИнтерес;
	
	Если ОбработкаТриггера.ОбъектыОбработки.Количество() = 0 Тогда
		Если CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
			НовыйОбъект = ОбработкаТриггера.ОбъектыОбработки.Добавить();
			НовыйОбъект.ОбъектОбработки =
				ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.CRM_ДокументРасчетовСКонтрагентом");
			НовыйОбъект = ОбработкаТриггера.ОбъектыОбработки.Добавить();
			НовыйОбъект.ОбъектОбработки = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.CRM_СчетНаОплатуПокупателю");
		Иначе
			НовыйОбъект = ОбработкаТриггера.ОбъектыОбработки.Добавить();
			НовыйОбъект.ОбъектОбработки =
				ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ПоступлениеБезналичныхДенежныхСредств");
			НовыйОбъект = ОбработкаТриггера.ОбъектыОбработки.Добавить();
			НовыйОбъект.ОбъектОбработки = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ПриходныйКассовыйОрдер");
			НовыйОбъект = ОбработкаТриггера.ОбъектыОбработки.Добавить();
			НовыйОбъект.ОбъектОбработки = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ОперацияПоПлатежнойКарте");
		КонецЕсли;
	КонецЕсли;
	
	ОбработкаТриггера.Записать();
	
	ОбработкаТриггера = Справочники.CRM_УсловияСрабатыванияТриггеров.ПриОтгрузкеПоИнтересу.ПолучитьОбъект();
	ОбработкаТриггера.ОбработкаПроверки = Новый ХранилищеЗначения(ПолучитьМакет(?(CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM(),
		 "", "CRM_Модуль_") 
		+ "ПриОтгрузкеПоИнтересу"));
	ОбработкаТриггера.НазваниеОбработки = "ПриОтгрузкеПоИнтересу";
	ОбработкаТриггера.ИспользуетсяСтандартнаяОбработка = Истина;
	ОбработкаТриггера.Событие = Перечисления.CRM_СобытияТриггеров.ОбработкаПроведения;
	ОбработкаТриггера.ИспользоватьСКД = Ложь;
	ОбработкаТриггера.РежимОтладки = Ложь;
	ОбработкаТриггера.ОбъектДействия = ИдентификаторМетаданныхИнтерес;
	
	Если ОбработкаТриггера.ОбъектыОбработки.Количество() = 0 Тогда
		Если CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
			НовыйОбъект = ОбработкаТриггера.ОбъектыОбработки.Добавить();
			НовыйОбъект.ОбъектОбработки = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.CRM_СчетНаОплатуПокупателю");
		Иначе
			НовыйОбъект = ОбработкаТриггера.ОбъектыОбработки.Добавить();
			НовыйОбъект.ОбъектОбработки = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.РеализацияТоваровУслуг");
			НовыйОбъект = ОбработкаТриггера.ОбъектыОбработки.Добавить();
			НовыйОбъект.ОбъектОбработки = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.РасходныйОрдерНаТовары");
		КонецЕсли;
	КонецЕсли;
	
	ОбработкаТриггера.Записать();
	
	ОбработкаТриггера = Справочники.CRM_УсловияСрабатыванияТриггеров.ПриЗаполненииКлиентаВИнтересе.ПолучитьОбъект();
	ОбработкаТриггера.ИспользуетсяСтандартнаяОбработка = Истина;
	ОбработкаТриггера.Наименование = "При заполнении клиента в интересе";
	ОбработкаТриггера.Событие = Перечисления.CRM_СобытияТриггеров.ПриЗаписи;
	ОбработкаТриггера.ИспользоватьСКД = Истина;
	ОбработкаТриггера.РежимОтладки = Ложь;
	ОбработкаТриггера.ОбъектДействия = ИдентификаторМетаданныхИнтерес;
	СКД = ПолучитьМакет("ПриЗаполненииКлиентаВИнтересе");
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СКД));
	КомпоновщикНастроек.ЗагрузитьНастройки(СКД.НастройкиПоУмолчанию);
	НастройкиСКД = КомпоновщикНастроек.ПолучитьНастройки();
	ОбработкаТриггера.ХранилищеСхемыКомпоновкиДанных = Новый ХранилищеЗначения(СКД);
	ОбработкаТриггера.ХранилищеНастроекКомпоновкиДанных = Новый ХранилищеЗначения(НастройкиСКД);
	
	Если ОбработкаТриггера.ОбъектыОбработки.Количество() = 0 Тогда
		НовыйОбъект = ОбработкаТриггера.ОбъектыОбработки.Добавить();
		НовыйОбъект.ОбъектОбработки = ИдентификаторМетаданныхИнтерес;
	КонецЕсли;
	
	ОбработкаТриггера.Записать();
	
	// Триггеры по задачам
	ИдентификаторМетаданныхЗадача = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Метаданные.Задачи.ЗадачаИсполнителя);
	
	ОбработкаТриггера = Справочники.CRM_УсловияСрабатыванияТриггеров.ПриПринятииКИсполнениюЗадачи.ПолучитьОбъект();
	ОбработкаТриггера.ОбработкаПроверки = Новый ХранилищеЗначения(ПолучитьМакет("ПриПринятииКИсполнениюЗадачи"));
	ОбработкаТриггера.НазваниеОбработки = "ПриПринятииКИсполнениюЗадачи";
	ОбработкаТриггера.ИспользуетсяСтандартнаяОбработка = Истина;
	ОбработкаТриггера.Событие = Перечисления.CRM_СобытияТриггеров.ПриЗаписи;
	ОбработкаТриггера.ИспользоватьСКД = Ложь;
	ОбработкаТриггера.РежимОтладки = Ложь;
	ОбработкаТриггера.ОбъектДействия = ИдентификаторМетаданныхЗадача;
	
	Если ОбработкаТриггера.ОбъектыОбработки.Количество() = 0 Тогда
		НовыйОбъект = ОбработкаТриггера.ОбъектыОбработки.Добавить();
		НовыйОбъект.ОбъектОбработки = ИдентификаторМетаданныхЗадача;
	КонецЕсли;
	
	ОбработкаТриггера.Записать();
	
	ОбработкаТриггера = Справочники.CRM_УсловияСрабатыванияТриггеров.ПриВыполненииЗадачи.ПолучитьОбъект();
	ОбработкаТриггера.ОбработкаПроверки = Новый ХранилищеЗначения(ПолучитьМакет("ПриВыполненииЗадачи"));
	ОбработкаТриггера.НазваниеОбработки = "ПриВыполненииЗадачи";
	ОбработкаТриггера.ИспользуетсяСтандартнаяОбработка = Истина;
	ОбработкаТриггера.Событие = Перечисления.CRM_СобытияТриггеров.ПриЗаписи;
	ОбработкаТриггера.ИспользоватьСКД = Ложь;
	ОбработкаТриггера.РежимОтладки = Ложь;
	ОбработкаТриггера.ОбъектДействия = ИдентификаторМетаданныхЗадача;
	
	Если ОбработкаТриггера.ОбъектыОбработки.Количество() = 0 Тогда
		НовыйОбъект = ОбработкаТриггера.ОбъектыОбработки.Добавить();
		НовыйОбъект.ОбъектОбработки = ИдентификаторМетаданныхЗадача;
	КонецЕсли;
	
	ОбработкаТриггера.Записать();
	
	ОбработкаТриггера = Справочники.CRM_УсловияСрабатыванияТриггеров.ПриВыполненииЗадачиПоОбъектуИнтереса.ПолучитьОбъект();
	ОбработкаТриггера.ОбработкаПроверки = Новый ХранилищеЗначения(ПолучитьМакет("ПриВыполненииЗадачиПоОбъектуИнтереса"));
	ОбработкаТриггера.НазваниеОбработки = "ПриВыполненииЗадачиПоОбъектуИнтереса";
	ОбработкаТриггера.ИспользуетсяСтандартнаяОбработка = Истина;
	ОбработкаТриггера.Событие = Перечисления.CRM_СобытияТриггеров.ПриЗаписи;
	ОбработкаТриггера.ИспользоватьСКД = Ложь;
	ОбработкаТриггера.РежимОтладки = Ложь;
	ОбработкаТриггера.ОбъектДействия = ИдентификаторМетаданныхИнтерес;
	
	Если ОбработкаТриггера.ОбъектыОбработки.Количество() = 0 Тогда
		НовыйОбъект = ОбработкаТриггера.ОбъектыОбработки.Добавить();
		НовыйОбъект.ОбъектОбработки = ИдентификаторМетаданныхЗадача;
	КонецЕсли;
	
	ОбработкаТриггера.Записать();
	
	ОбработкаТриггера = Справочники.CRM_УсловияСрабатыванияТриггеров.ПриПереходеНаЭтапБизнесПроцесса.ПолучитьОбъект();
	ОбработкаТриггера.ОбработкаПроверки = Новый ХранилищеЗначения(ПолучитьМакет("ПриПереходеНаЭтапБизнесПроцесса"));
	ОбработкаТриггера.НазваниеОбработки = "ПриПереходеНаЭтапБизнесПроцесса";
	ОбработкаТриггера.ИспользуетсяСтандартнаяОбработка = Истина;
	ОбработкаТриггера.Событие = Перечисления.CRM_СобытияТриггеров.ПриЗаписи;
	ОбработкаТриггера.ИспользоватьСКД = Ложь;
	ОбработкаТриггера.РежимОтладки = Ложь;
	ОбработкаТриггера.ОбъектДействия = ИдентификаторМетаданныхЗадача;
	
	Если ОбработкаТриггера.ОбъектыОбработки.Количество() = 0 Тогда
		НовыйОбъект = ОбработкаТриггера.ОбъектыОбработки.Добавить();
		НовыйОбъект.ОбъектОбработки = ИдентификаторМетаданныхЗадача;
	КонецЕсли;
	
	ОбработкаТриггера.Записать();
	
	ОбработкаТриггера =
		Справочники.CRM_УсловияСрабатыванияТриггеров.ПриПроведенииКоммерческогоПредложенияПоИнтересу.ПолучитьОбъект();
	ОбработкаТриггера.ИспользуетсяСтандартнаяОбработка = Истина;
	ОбработкаТриггера.Событие = Перечисления.CRM_СобытияТриггеров.ОбработкаПроведения;
	ОбработкаТриггера.ИспользоватьСКД = Истина;
	ОбработкаТриггера.РежимОтладки = Ложь;
	ОбработкаТриггера.ОбъектДействия = ИдентификаторМетаданныхИнтерес;
	СКД = ПолучитьМакет(?(CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM(), "", "CRM_Модуль_") 
		+ "ПриПроведенииКоммерческогоПредложенияПоИнтересу");
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СКД));
	КомпоновщикНастроек.ЗагрузитьНастройки(СКД.НастройкиПоУмолчанию);
	НастройкиСКД = КомпоновщикНастроек.ПолучитьНастройки();
	ОбработкаТриггера.ХранилищеСхемыКомпоновкиДанных = Новый ХранилищеЗначения(СКД);
	ОбработкаТриггера.ХранилищеНастроекКомпоновкиДанных = Новый ХранилищеЗначения(НастройкиСКД);
	
	Если ОбработкаТриггера.ОбъектыОбработки.Количество() = 0 Тогда
		НовыйОбъект = ОбработкаТриггера.ОбъектыОбработки.Добавить();
		НовыйОбъект.ОбъектОбработки =
			ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.КоммерческоеПредложениеКлиенту");
	КонецЕсли;
	
	ОбработкаТриггера.Записать();
	
	Если CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
		ОбработкаТриггера =
			Справочники.CRM_УсловияСрабатыванияТриггеров["ПриПроведенииСчетаНаОплатуПоИнтересу"].ПолучитьОбъект();
		ОбработкаТриггера.ИспользуетсяСтандартнаяОбработка = Истина;
		ОбработкаТриггера.Событие = Перечисления.CRM_СобытияТриггеров.ОбработкаПроведения;
		ОбработкаТриггера.ИспользоватьСКД = Истина;
		ОбработкаТриггера.РежимОтладки = Ложь;
		ОбработкаТриггера.ОбъектДействия = ИдентификаторМетаданныхИнтерес;
		СКД = ПолучитьМакет(?(CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM(), "", "CRM_Модуль_") 
			+ "ПриПроведенииСчетаНаОплатуПоИнтересу");
		КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
		КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СКД));
		КомпоновщикНастроек.ЗагрузитьНастройки(СКД.НастройкиПоУмолчанию);
		НастройкиСКД = КомпоновщикНастроек.ПолучитьНастройки();
		ОбработкаТриггера.ХранилищеСхемыКомпоновкиДанных = Новый ХранилищеЗначения(СКД);
		ОбработкаТриггера.ХранилищеНастроекКомпоновкиДанных = Новый ХранилищеЗначения(НастройкиСКД);
		
		Если ОбработкаТриггера.ОбъектыОбработки.Количество() = 0 Тогда
			НовыйОбъект = ОбработкаТриггера.ОбъектыОбработки.Добавить();
			НовыйОбъект.ОбъектОбработки = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.CRM_СчетНаОплатуПокупателю");
		КонецЕсли;
		
		ОбработкаТриггера.Записать();
	КонецЕсли;
	
	ОбработкаТриггера = Справочники.CRM_УсловияСрабатыванияТриггеров.ПриВыполненииЗадачиПоИнтересу.ПолучитьОбъект();
	ОбработкаТриггера.ИспользуетсяСтандартнаяОбработка = Истина;
	ОбработкаТриггера.Событие = Перечисления.CRM_СобытияТриггеров.ПриЗаписи;
	ОбработкаТриггера.ИспользоватьСКД = Истина;
	ОбработкаТриггера.РежимОтладки = Ложь;
	ОбработкаТриггера.ОбъектДействия = ИдентификаторМетаданныхИнтерес;
	СКД = ПолучитьМакет("ПриВыполненииЗадачиПоИнтересу");
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СКД));
	КомпоновщикНастроек.ЗагрузитьНастройки(СКД.НастройкиПоУмолчанию);
	НастройкиСКД = КомпоновщикНастроек.ПолучитьНастройки();
	ОбработкаТриггера.ХранилищеСхемыКомпоновкиДанных = Новый ХранилищеЗначения(СКД);
	ОбработкаТриггера.ХранилищеНастроекКомпоновкиДанных = Новый ХранилищеЗначения(НастройкиСКД);
	
	Если ОбработкаТриггера.ОбъектыОбработки.Количество() = 0 Тогда
		НовыйОбъект = ОбработкаТриггера.ОбъектыОбработки.Добавить();
		НовыйОбъект.ОбъектОбработки = ИдентификаторМетаданныхЗадача;
	КонецЕсли;
	
	ОбработкаТриггера.Записать();
	
	ОбработкаТриггера =
		Справочники.CRM_УсловияСрабатыванияТриггеров.ПриЗавершенииВзаимодействияПоИнтересу.ПолучитьОбъект();
	ОбработкаТриггера.ИспользуетсяСтандартнаяОбработка = Истина;
	ОбработкаТриггера.Событие = Перечисления.CRM_СобытияТриггеров.ПриЗаписи;
	ОбработкаТриггера.ИспользоватьСКД = Истина;
	ОбработкаТриггера.РежимОтладки = Ложь;
	ОбработкаТриггера.ОбъектДействия = ИдентификаторМетаданныхИнтерес;
	СКД = ПолучитьМакет("ПриЗавершенииВзаимодействияПоИнтересу");
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СКД));
	КомпоновщикНастроек.ЗагрузитьНастройки(СКД.НастройкиПоУмолчанию);
	НастройкиСКД = КомпоновщикНастроек.ПолучитьНастройки();
	ОбработкаТриггера.ХранилищеСхемыКомпоновкиДанных = Новый ХранилищеЗначения(СКД);
	ОбработкаТриггера.ХранилищеНастроекКомпоновкиДанных = Новый ХранилищеЗначения(НастройкиСКД);
	
	Если ОбработкаТриггера.ОбъектыОбработки.Количество() = 0 Тогда
		НовыйОбъект = ОбработкаТриггера.ОбъектыОбработки.Добавить();
		НовыйОбъект.ОбъектОбработки =
			ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Метаданные.Документы.CRM_Взаимодействие);
	КонецЕсли;
	
	ОбработкаТриггера.Записать();
	
	ОбработкаТриггера = Справочники.CRM_УсловияСрабатыванияТриггеров.ПриПолученииОбратнойСвязи.ПолучитьОбъект();
	ОбработкаТриггера.ОбработкаПроверки = Новый ХранилищеЗначения(ПолучитьМакет("ПриПолученииОбратнойСвязи"));
	ОбработкаТриггера.НазваниеОбработки = "ПриПолученииОбратнойСвязи";
	ОбработкаТриггера.ИспользуетсяСтандартнаяОбработка = Истина;
	ОбработкаТриггера.СервисныйВызов = Истина;
	ОбработкаТриггера.ИдентификаторВызова = "CRM_Feedback";
	ОбработкаТриггера.ОбъектДействия = ИдентификаторМетаданныхИнтерес;
	ОбработкаТриггера.ИспользоватьСКД = Ложь;
	ОбработкаТриггера.РежимОтладки = Ложь;
	
	ОбработкаТриггера.Записать();
	
	Если НЕ CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
		ОбработкаТриггера = Справочники.CRM_УсловияСрабатыванияТриггеров["ПриДоставкеПоИнтересу"].ПолучитьОбъект();
		ОбработкаТриггера.ОбработкаПроверки = Новый ХранилищеЗначения(ПолучитьМакет(?(CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM(),
			 "", "CRM_Модуль_") 
			+ "ПриДоставкеПоИнтересу"));
		ОбработкаТриггера.НазваниеОбработки = "ПриДоставкеПоИнтересу";
		ОбработкаТриггера.ИспользуетсяСтандартнаяОбработка = Истина;
		ОбработкаТриггера.Событие = Перечисления.CRM_СобытияТриггеров.ОбработкаПроведения;
		ОбработкаТриггера.ИспользоватьСКД = Ложь;
		ОбработкаТриггера.РежимОтладки = Ложь;
		ОбработкаТриггера.ОбъектДействия = ИдентификаторМетаданныхИнтерес;
		
		Если ОбработкаТриггера.ОбъектыОбработки.Количество() = 0 Тогда
			НовыйОбъект = ОбработкаТриггера.ОбъектыОбработки.Добавить();
			НовыйОбъект.ОбъектОбработки = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ЗаданиеНаПеревозку");
		КонецЕсли;
		
		ОбработкаТриггера.Записать();
		
		ОбработкаТриггера =
			Справочники.CRM_УсловияСрабатыванияТриггеров["CRM_Модуль_ПриЗаписиЗаказаКлиента"].ПолучитьОбъект();
		ОбработкаТриггера.ИспользуетсяСтандартнаяОбработка = Истина;
		ОбработкаТриггера.Событие = Перечисления.CRM_СобытияТриггеров.ПриЗаписи;
		ОбработкаТриггера.ИспользоватьСКД = Истина;
		ОбработкаТриггера.РежимОтладки = Ложь;
		ОбработкаТриггера.ОбъектДействия = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ЗаказКлиента");
		СКД = Справочники["CRM_УсловияСрабатыванияТриггеров"].ПолучитьМакет("CRM_Модуль_ПриЗаписиЗаказаКлиента");
		КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
		КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СКД));
		КомпоновщикНастроек.ЗагрузитьНастройки(СКД.НастройкиПоУмолчанию);
		НастройкиСКД = КомпоновщикНастроек.ПолучитьНастройки();
		ОбработкаТриггера.ХранилищеСхемыКомпоновкиДанных = Новый ХранилищеЗначения(СКД);
		ОбработкаТриггера.ХранилищеНастроекКомпоновкиДанных = Новый ХранилищеЗначения(НастройкиСКД);
		
		Если ОбработкаТриггера.ОбъектыОбработки.Количество() = 0 Тогда
			НовыйОбъект = ОбработкаТриггера.ОбъектыОбработки.Добавить();
			НовыйОбъект.ОбъектОбработки = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ЗаказКлиента");
		КонецЕсли;
		
		ОбработкаТриггера.Записать();
	КонецЕсли;
	
КонецПроцедуры

// Функция - Массив исключаемых по функциональным опциям предопределенных элементов справочника.
// 
// Возвращаемое значение:
//  МассивИсключаемых - Массив - Массив ссылок.
//
Функция МассивИсключаемыхПоФОПредопределенных() Экспорт
	
	МассивИсключаемых = Новый Массив;
	
	Выборка = Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.ОбъектДействия) И НЕ ОбщегоНазначения.ОбъектМетаданныхДоступенПоФункциональнымОпциям(
				ОбщегоНазначения.ОбъектМетаданныхПоИдентификатору(Выборка.ОбъектДействия)) Тогда
			МассивИсключаемых.Добавить(Выборка.Ссылка);
			Продолжить;
		КонецЕсли;
		Если Выборка.ОбъектыОбработки.Количество() > 0 Тогда
			Исключить = Истина;
			Для каждого ОбъектОбработки Из Выборка.ОбъектыОбработки Цикл
				Если ЗначениеЗаполнено(ОбъектОбработки.ОбъектОбработки)
					 И ОбщегоНазначения.ОбъектМетаданныхДоступенПоФункциональнымОпциям(
					ОбщегоНазначения.ОбъектМетаданныхПоИдентификатору(ОбъектОбработки.ОбъектОбработки)) Тогда
					Исключить = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;	
			Если Исключить Тогда
				МассивИсключаемых.Добавить(Выборка.Ссылка);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивИсключаемых;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если Параметры.Отбор.Свойство("ОбъектДействия") Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	CRM_УсловияСрабатыванияТриггеров.Ссылка КАК Ссылка
		                      |ИЗ
		                      |	Справочник.CRM_УсловияСрабатыванияТриггеров КАК CRM_УсловияСрабатыванияТриггеров
		                      |ГДЕ
		                      |	CRM_УсловияСрабатыванияТриггеров.ОбъектДействия = &ОбъектДействия
		                      |	И CRM_УсловияСрабатыванияТриггеров.Наименование ПОДОБНО &Наименование
		                      |	И НЕ CRM_УсловияСрабатыванияТриггеров.ПометкаУдаления
		                      |
		                      |ОБЪЕДИНИТЬ
		                      |
		                      |ВЫБРАТЬ
		                      |	ОбъектыОбработки.Ссылка
		                      |ИЗ
		                      |	Справочник.CRM_УсловияСрабатыванияТриггеров.ОбъектыОбработки КАК ОбъектыОбработки
		                      |ГДЕ
		                      |	ОбъектыОбработки.ОбъектОбработки = &ОбъектДействия
		                      |	И ОбъектыОбработки.Ссылка.Наименование ПОДОБНО &Наименование
		                      |	И НЕ ОбъектыОбработки.Ссылка.ПометкаУдаления");

		Запрос.УстановитьПараметр("ОбъектДействия", Параметры.Отбор.ОбъектДействия);
		Запрос.УстановитьПараметр("ОбъектОбработки", Параметры.Отбор.ОбъектДействия.Имя);
		Запрос.УстановитьПараметр("Наименование", "%" + Параметры.СтрокаПоиска + "%");
		ДанныеВыбора = Новый СписокЗначений;
		ДанныеВыбора.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПереходНаНовуюВерсию

#КонецОбласти

#КонецОбласти

#КонецЕсли
