#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли;
	
	//////////////////////////////////////////////
	// Заполнение хранилищ объекта.
	
	Если ЗначениеЗаполнено(ЭтотОбъект.НаименованиеМакетаВерсии) Тогда
		ДвоичныеДанныеАрхиваБиблиотеки = Справочники.CRM_ВнешниеБиблиотеки.ПолучитьМакет(
			ЭтотОбъект.НаименованиеМакетаВерсии);
		
		ЭтотОбъект.ХранилищеАрхиваБиблиотеки = Новый ХранилищеЗначения(ДвоичныеДанныеАрхиваБиблиотеки);
	Иначе
		ДвоичныеДанныеАрхиваБиблиотеки = ЭтотОбъект.ХранилищеАрхиваБиблиотеки.Получить();
	КонецЕсли;
	
	Если ДвоичныеДанныеАрхиваБиблиотеки = Неопределено Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ZipФайл = Новый ЧтениеZipФайла(ДвоичныеДанныеАрхиваБиблиотеки.ОткрытьПотокДляЧтения());
	
	Если ZipФайл.Элементы.Количество() = 0 Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	КаталогВременныхФайлов = КаталогВременныхФайлов();
	
	ПутьКРаспакованномуФайлу = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(КаталогВременныхФайлов)
		+ ZipФайл.Элементы[0].Имя;
	
	ZipФайл.Извлечь(ZipФайл.Элементы[0], КаталогВременныхФайлов());
	
	ДвоичныеДанныеРаспакованногоФайла = Новый ДвоичныеДанные(ПутьКРаспакованномуФайлу);
	ЭтотОбъект.ХранилищеБиблиотеки = Новый ХранилищеЗначения(ДвоичныеДанныеРаспакованногоФайла);
	
	ЭтотОбъект.РазмерБиблиотеки = ДвоичныеДанныеРаспакованногоФайла.Размер();
	ЭтотОбъект.КонтрольнаяСумма = CRM_РаботаСВнешнимиБиблиотекамиВызовСервера.КонтрольнаяСуммаСтрокой(
		ДвоичныеДанныеРаспакованногоФайла);
	
	//////////////////////////////////////////////
	
КонецПроцедуры // ПередЗаписью()

#КонецОбласти

#Иначе

ВызватьИсключение НСтр(
	"ru = 'Недопустимый вызов объекта на клиенте.';
	|en = 'Invalid object call on the client.'");

#КонецЕсли
