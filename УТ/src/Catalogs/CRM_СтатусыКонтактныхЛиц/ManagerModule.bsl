#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет список значений значениями справочника
//
// Параметры:
//  СписокЗначений	 - СписокЗначений	 - Список, который будет заполнен значениями справочника.
//  МассивВыбранных	 - Массив			 - Массив выбранных.
//
Процедура ЗаполнитьСписокСтатусов(СписокЗначений, МассивВыбранных = Неопределено) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	CRM_СтатусыКонтактныхЛиц.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.CRM_СтатусыКонтактныхЛиц КАК CRM_СтатусыКонтактныхЛиц
	                      |ГДЕ
	                      |	НЕ CRM_СтатусыКонтактныхЛиц.ПометкаУдаления
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	CRM_СтатусыКонтактныхЛиц.РеквизитДопУпорядочивания");
	СписокЗначений.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	Если МассивВыбранных <> Неопределено Тогда
		Для каждого Тип Из МассивВыбранных Цикл
			ЭлементСписка = СписокЗначений.НайтиПоЗначению(Тип);
			Если ЭлементСписка <> Неопределено Тогда
				ЭлементСписка.Пометка = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Перезаписывает контактные лица со статусом.
//
// Параметры:
//  ПараметрыМетода - Структура - Параметры выполнения метода.
//  АдресРезультата - Строка 	- Адрес результата.
//
Процедура ПерезаписатьКонтактныеЛицаСоСтатусом(ПараметрыМетода, АдресРезультата) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	CRM_СтатусыКонтактныхЛиц.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.КонтактныеЛицаПартнеров.CRM_Статусы КАК CRM_СтатусыКонтактныхЛиц
	                      |ГДЕ
	                      |	CRM_СтатусыКонтактныхЛиц.Статус = &Статус");
	Запрос.УстановитьПараметр("Статус", ПараметрыМетода.Статус);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		КЛОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Попытка
			КЛОбъект.Заблокировать();
			КЛОбъект.Записать();
		Исключение
			ЗаписьЖурналаРегистрации("Изменение типа отношений в партнере",
				УровеньЖурналаРегистрации.Информация, , ,
				НСтр("ru='Не удалось заблокировать партнера для записи';en='Failed to block partner for recording'") + ": " + КЛОбъект.Наименование);
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИБ

Процедура НачальноеЗаполнение() Экспорт
	
	Выборка = Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	Элемент = СоздатьЭлемент();
	Элемент.Наименование = НСтр("ru = 'Влияет на принятие решений'");
	Элемент.Записать();
	
	Элемент = СоздатьЭлемент();
	Элемент.Наименование = НСтр("ru = 'Принимает решения'");
	Элемент.Записать();
	
	Элемент = СоздатьЭлемент();
	Элемент.Наименование = НСтр("ru = 'Не принимает решения'");
	Элемент.Записать();
	
КонецПроцедуры

#КонецОбласти

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	CRM_СтатусыКонтактныхЛиц.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.CRM_СтатусыКонтактныхЛиц КАК CRM_СтатусыКонтактныхЛиц
	                      |ГДЕ
	                      |	НЕ CRM_СтатусыКонтактныхЛиц.ПометкаУдаления
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	CRM_СтатусыКонтактныхЛиц.РеквизитДопУпорядочивания");
	ДанныеВыбора = Новый СписокЗначений;
	ДанныеВыбора.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
КонецПроцедуры

#КонецОбласти

#КонецЕсли
