///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ВызватьИсключение НСтр("ru = 'Создание объекта через форму элемента запрещено.'");
	КонецЕсли;
	
	НастройкиПодключения = СистемаБыстрыхПлатежейСлужебный.НастройкиПодключенияПрограммы();
	
	УстановитьВидимостьДоступность(НастройкиПодключения);
	
	СистемаБыстрыхПлатежейСлужебный.ДобавитьНастройкиАутентификации(
		ЭтотОбъект,
		Элементы.ГруппаНастройкиПодключения,
		Объект.Ссылка,
		Объект.ИдентификаторУчастника,
		СистемаБыстрыхПлатежейСлужебный.НовыйПараметрПодсказки(),
		Объект.ВариантНастройки);
	
	СистемаБыстрыхПлатежейСлужебный.ДобавитьНастройкиОплаты(
		ЭтотОбъект,
		Элементы.ГруппаНастройкиОплаты,
		Объект.ВариантНастройки,
		Объект.Ссылка);
	
	СистемаБыстрыхПлатежейСлужебный.НастроитьЭлементыФормыПодключения(
		ЭтотОбъект,
		Объект.ВариантНастройки,
		Объект.ИдентификаторУчастника,
		Объект.Ссылка);
	
	ПредопределенныеШаблоны = Неопределено;
	СистемаБыстрыхПлатежейСобытия.ПриОпределенииШаблоновНазначений(
		Объект.ВариантНастройки,
		СистемаБыстрыхПлатежейСлужебный.НастройкиПодключенияПрограммы(),
		ПредопределенныеШаблоны);
	
	Если ПредопределенныеШаблоны = Неопределено Или ПредопределенныеШаблоны.Количество() = 0 Тогда
		Элементы.ДекорацияНастройкиШаблонов.Видимость = Ложь;
	Иначе
		СистемаБыстрыхПлатежейСлужебный.ЗаполнитьДекорацияНастройкиШаблонов(
			ЭтотОбъект,
			Объект.ВариантНастройки,
			Объект.Ссылка,
			НастройкиПодключения);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	СистемаБыстрыхПлатежейСлужебный.ПроверитьНастройкиАутентификации(
		ЭтотОбъект,
		Отказ);
	
	СистемаБыстрыхПлатежейСлужебный.ПроверитьНастройкиОплаты(
		ЭтотОбъект,
		Отказ);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	НастройкиАутентификации = СистемаБыстрыхПлатежейСлужебный.НастройкиАутентификацииПоДаннымФормы(
		ЭтотОбъект);
	ТекущийОбъект.ИдентификаторМерчанта = СистемаБыстрыхПлатежейСлужебный.ИдентификаторМерчантаПоДаннымАутентификации(
		НастройкиАутентификации);
		
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		ТекущийОбъект.Ссылка,
		"Используется");
	
	ОбновитьТокен = Ложь;
	
	Если ЗначениеЗаполнено(ТекущийОбъект.Ссылка)
		И ЗначенияРеквизитов.Используется <> ТекущийОбъект.Используется Тогда
		
		ОбновитьТокен = Истина;
		РезультатОперации = СистемаБыстрыхПлатежейСлужебный.НовыйРезультатОперации();
		РезультатОперации.Вставить("Ошибка", Ложь);
		
		СистемаБыстрыхПлатежейСобытия.ПриИзмененииИспользованияНастройки(
			ТекущийОбъект.Ссылка,
			ТекущийОбъект.Используется,
			ТекущийОбъект.ВариантНастройки,
			Ложь,
			РезультатОперации);
		
		Если РезультатОперации.Ошибка Тогда
			Отказ = Истина;
			ОбщегоНазначения.СообщитьПользователю(РезультатОперации.СообщениеОбОшибке);
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	НастройкиОплаты = СистемаБыстрыхПлатежейСлужебный.НастройкиОплатыПоДаннымФормы(
		ЭтотОбъект);
	
	Результат = СистемаБыстрыхПлатежейСлужебный.ЗаписатьНастройкиОплаты(
		НастройкиОплаты,
		ТекущийОбъект.Ссылка,
		ТекущийОбъект.ВариантНастройки);
	
	Если Результат.Отказ Тогда
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю(Результат.СообщениеОбОшибке);
		Возврат;
	КонецЕсли;
	
	НастройкиАутентификации = СистемаБыстрыхПлатежейСлужебный.НастройкиАутентификацииПоДаннымФормы(
		ЭтотОбъект);
	НастройкиАвторизации = СистемаБыстрыхПлатежейСлужебный.НастройкиАвторизацииУчастникаСБП(
		ТекущийОбъект.ИдентификаторУчастника,
		ТекущийОбъект.ВариантНастройки);
		
	ПараметрыАутентификацииИзменены = Ложь;
	
	СистемаБыстрыхПлатежейСлужебный.СохранитьНастройкиАутентификации(
		ТекущийОбъект.Ссылка,
		НастройкиАутентификации,
		Объект.ИдентификаторУчастника,
		НастройкиАвторизации.ТипАутентификации,
		ПараметрыАутентификацииИзменены);
	
	Если ПараметрыАутентификацииИзменены Тогда
		ОбновитьТокен = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ЗакрытьПослеЗаписи", Ложь);
	ЗаполнитьЗначенияСвойств(ДополнительныеПараметры, ПараметрыЗаписи);
	
	Если ОбновитьТокен Тогда
		Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.ОнлайнЗаказы") Тогда
			МодульОнлайнЗаказыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ОнлайнЗаказыКлиент");
			МодульОнлайнЗаказыКлиент.ПоказатьВопросОбновленияНастроекПодключенияПоНастройкеОплаты(
				Объект.Ссылка,
				ЭтотОбъект,
				ДополнительныеПараметры.ЗакрытьПослеЗаписи);
			КонецЕсли;
	ИначеЕсли ДополнительныеПараметры.ЗакрытьПослеЗаписи Тогда
		Закрыть(Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если ОбновитьТокен Тогда
		Если ОбщегоНазначения.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.ОнлайнЗаказы") Тогда
			МодульОнлайнЗаказыСлужебный = ОбщегоНазначения.ОбщийМодуль("ОнлайнЗаказыСлужебный");
			ОбновитьТокен = МодульОнлайнЗаказыСлужебный.СуществуютНастройкиПоНастройкеОплаты(
				ТекущийОбъект.Ссылка);
		Иначе
			ОбновитьТокен = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "БИПСменаУчастникаСБП" Тогда
		ОбновитьДанныеАутентификации();
		Если ОбновитьТокен
			И ОбщегоНазначенияКлиент.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.ОнлайнЗаказы") Тогда
			
			МодульОнлайнЗаказыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ОнлайнЗаказыКлиент");
			МодульОнлайнЗаказыКлиент.ПоказатьВопросОбновленияНастроекПодключенияПоНастройкеОплаты(
				Объект.Ссылка,
				ЭтотОбъект,
				Ложь);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ПриИзмененииНастройкиОплаты(Элемент)
	
	ПриИзмененииНастройкиОплатыНаСервере();
	
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ПриИзмененииНастройкиАутентификации(
		Элемент,
		Текст,
		СтандартнаяОбработка)
	
	ИнтернетПоддержкаПользователейКлиент.ПриИзмененииСекретныхДанных(
		Элемент);
	
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_НачалоВыбораНастройкиАутентификации(
		Элемент,
		ДанныеВыбора,
		СтандартнаяОбработка)
	
	ИнтернетПоддержкаПользователейКлиент.ОтобразитьСекретныеДанные(
		ЭтотОбъект,
		Элемент,
		Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияДополнительнаяИнформацияОбработкаНавигационнойСсылки(
		Элемент,
		НавигационнаяСсылкаФорматированнойСтроки,
		СтандартнаяОбработка)
	
	ДанныеФормы = Новый Структура;
	ДанныеФормы.Вставить("ПараметрыОплатыСБПc2b", НастройкиОплатыПоДаннымФормы());
	ДанныеФормы.Вставить("НастройкаПодключения", Объект.Ссылка);
	ДанныеФормы.Вставить("Модифицированность", Модифицированность);
	
	СистемаБыстрыхПлатежейКлиент.ПриОбработкеНавигационнойСсылкиДополнительнойИнформации(
		Элемент,
		НавигационнаяСсылкаФорматированнойСтроки,
		СтандартнаяОбработка,
		ДанныеФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияНастройкиШаблоновОбработкаНавигационнойСсылки(
		Элемент,
		НавигационнаяСсылкаФорматированнойСтроки,
		СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки <> "open:paymentPurpose" Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Если Модифицированность Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru = 'Перед настройкой шаблонов назначения необходимо записать изменения.'"));
		Возврат;
	КонецЕсли;
	
	Если Не Объект.Используется Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru = 'Для отключенной настройки подключения недоступно изменение шаблонов назначения.'"));
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("НастройкаПодключения", Объект.Ссылка);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ДекорацияНастройкиШаблоновЗавершение",
		ЭтотОбъект);
	
	ОткрытьФорму(
		"Справочник.НастройкиПодключенияКСистемеБыстрыхПлатежей.Форма.ФормаНастройкиНазначенияПлатежа",
		ПараметрыФормы,
		ЭтотОбъект,
		УникальныйИдентификатор,
		,
		,
		ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияКассовыеСсылкиОбработкаНавигационнойСсылки(
		Элемент,
		НавигационнаяСсылкаФорматированнойСтроки,
		СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки <> "open:cashQrc" Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Если Модифицированность Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru = 'Перед настройкой кассовых QR-кодов необходимо записать изменения.'"));
		Возврат;
	КонецЕсли;
	
		Если Не Объект.Используется Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru = 'Для отключенной настройки подключения недоступно изменение кассовых QR-кодов.'"));
		Возврат;
	КонецЕсли;
	
	ОповещениеПослеЗакрытияФормыКассовыхСсылок = Новый ОписаниеОповещения(
		"ПослеЗакрытияФормыКассовыхСсылок",
		ЭтотОбъект,
		Новый Структура);
	
	ПараметрыНастройки = Новый Структура;
	ПараметрыНастройки.Вставить("НастройкаПодключения", Объект.Ссылка);
	
	МодульПереводыСБПc2bКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПереводыСБПc2bКлиент");
	МодульПереводыСБПc2bКлиент.ПриНастройкеКассовыхСсылок(
		ПараметрыНастройки,
		ОповещениеПослеЗакрытияФормыКассовыхСсылок);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Записать(Новый Структура("ЗакрытьПослеЗаписи", Истина));
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПодключение(Команда)
	
	Если Модифицированность Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru = 'Перед проверкой настроек необходимо записать изменения.'"));
		Возврат;
	КонецЕсли;
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
	ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Проверка параметров подключения к Системе быстрых платежей.'");
	
	РезультатВыполнения = ПроверитьПараметрыПодключенияЗапускЗадания();
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения(
		"ПроверитьПараметрыПодключенияЗавершение",
		ЭтотОбъект);
		
	Если РезультатВыполнения.Статус = "Выполнено" Или РезультатВыполнения.Статус = "Ошибка" Тогда
		ПроверитьПараметрыПодключенияЗавершение(РезультатВыполнения, Неопределено);
		Возврат;
	КонецЕсли;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		РезультатВыполнения,
		ОповещениеОЗавершении,
		ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура РеестрОперацийc2b(Команда)
	
	Отбор = Новый Структура;
	Отбор.Вставить("НастройкаПодключения", Объект.Ссылка);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СформироватьПриОткрытии", Ложь);
	ПараметрыФормы.Вставить("Отбор",                   Отбор);
	
	ОткрытьФорму(
		"Отчет.РеестрОперацийСБПc2b.ФормаОбъекта",
		ПараметрыФормы,
		ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СсылкаПеренаправления(Команда)
	
	ОповещениеПослеЗакрытияФормыНастройкиСсылкиПеренаправления = Новый ОписаниеОповещения(
		"ПослеЗакрытияФормыНастройкиСсылкиПеренаправления",
		ЭтотОбъект,
		Новый Структура);
		
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("СсылкаПеренаправления", Объект.СсылкаПеренаправления);
	
	ОткрытьФорму(
		"Справочник.НастройкиПодключенияКСистемеБыстрыхПлатежей.Форма.ФормаНастройкиСсылкиПеренаправления",
		ПараметрыОткрытия,
		ЭтотОбъект,
		,
		,
		,
		ОповещениеПослеЗакрытияФормыНастройкиСсылкиПеренаправления);
	
КонецПроцедуры

&НаКлиенте
Процедура СменитьУчастникаСБП(Команда)
	
	Если ОбработчикЗаполненияИдентификаторовВыполнен() Тогда
		
		Если Объект.ВариантНастройки = ПредопределенноеЗначение("Перечисление.ВариантыНастройкиСБП.c2b") Тогда
			
			Оповещение = Новый ОписаниеОповещения(
				"ПослеЗакрытияВопросаСменаУчастникаСБП",
				ЭтотОбъект);
			
			ТекстВопроса = НСтр("ru = 'После смены участника СБП сверка взаиморасчетов по текущему участнику станет недоступна.
				|Существующие кассовые QR-коды будет необходимо переформировать. Продолжить?'");
			
			ПоказатьВопрос(
				Оповещение,
				ТекстВопроса,
				РежимДиалогаВопрос.ДаНет);
			
		Иначе
			ПослеЗакрытияВопросаСменаУчастникаСБП(
				КодВозвратаДиалога.Да,
				Неопределено);
		КонецЕсли;
	Иначе
		ПоказатьПредупреждение(
			,
			НСтр("ru = 'Необходимо дождаться окончания перехода на новую версию. Повторите попытку позднее.'"),
			,
			НСтр("ru = 'Выполняется обновление'"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьВидимостьДоступность(НастройкиПодключения)
	
	НастройкиУчастника = СистемаБыстрыхПлатежейСлужебный.НастройкиУчастникаСБП(
		Объект.ИдентификаторУчастника);
	
	Элементы.ФормаЗаписатьИЗакрыть.Доступность = СистемаБыстрыхПлатежей.НастройкаПодключенияДоступна();
	Элементы.ГруппаНастройкиПодключения.ТолькоПросмотр = Не СистемаБыстрыхПлатежей.НастройкаПодключенияДоступна();
	Элементы.ГруппаНастройкиОплаты.ТолькоПросмотр = Не СистемаБыстрыхПлатежей.НастройкаПодключенияДоступна();
	Элементы.ФормаСменитьУчастникаСБП.Видимость = СистемаБыстрыхПлатежей.НастройкаПодключенияДоступна();
	
	// Видимость должна быть включена в переопределении.
	Элементы.ДекорацияДополнительнаяИнформация.Видимость = Ложь;
	
	КлючиПоиска = Новый Структура;
	КлючиПоиска.Вставить("СверкаВзаиморасчетовc2b", Истина);
	
	УчастникиСПоддержкойСверки = СистемаБыстрыхПлатежейСлужебный.УчастникиСБППоНастройкам(
		КлючиПоиска);
	
	СценарииРаботы = СистемаБыстрыхПлатежейСлужебный.НовыйСценарииРаботыПодсистемы();
	СистемаБыстрыхПлатежейСобытия.ПриОпределенииДоступныхСценариев(
		Объект.ВариантНастройки,
		СценарииРаботы);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.СистемаБыстрыхПлатежей.ПереводыСБПc2b") Тогда
		МодульПереводыСБПc2b = ОбщегоНазначения.ОбщийМодуль("ПереводыСБПc2b");
		Элементы.ФормаРеестрОперацийc2b.Видимость =
			(МодульПереводыСБПc2b.ПереводыСБПДоступны()
				И СценарииРаботы.СверкаВзаиморасчетов
				И УчастникиСПоддержкойСверки.Найти(Объект.ИдентификаторУчастника) <> Неопределено);
	Иначе
		Элементы.ФормаРеестрОперацийc2b.Видимость = Ложь;
	КонецЕсли;
	
	Если СценарииРаботы.КассовыеСсылки Тогда
		Если НастройкиПодключения.c2b.ИспользоватьНастройкуКассовыхСсылок = Истина
			И НастройкиУчастника.КассовыеСсылкиc2b = Истина Тогда
			Элементы.ДекорацияКассовыеСсылки.Видимость = Истина;
			ЗаполнитьДекорацияКассовыеСсылки();
		Иначе
			Элементы.ДекорацияКассовыеСсылки.Видимость = Ложь;
		КонецЕсли;
	Иначе
		Элементы.ДекорацияКассовыеСсылки.Видимость = Ложь;
	КонецЕсли;
	
	Если НастройкиУчастника.ПеренаправлениеПоСсылке = Истина
		И СистемаБыстрыхПлатежей.НастройкаПодключенияДоступна() Тогда
		Элементы.ФормаСсылкаПеренаправления.Видимость = Истина;
	Иначе
		Элементы.ФормаСсылкаПеренаправления.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииНастройкиОплатыНаСервере()
	
	СистемаБыстрыхПлатежейСлужебный.НастроитьЭлементыФормыПодключения(
		ЭтотОбъект,
		Объект.ВариантНастройки,
		Объект.ИдентификаторУчастника,
		Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Функция ПроверитьПараметрыПодключенияЗапускЗадания()
	
	ПараметрыАутентификации = СистемаБыстрыхПлатежейСлужебный.НастройкиАутентификацииПоДаннымФормы(
		ЭтотОбъект);
	
	ПараметрыПроцедуры = Новый Структура;
	ПараметрыПроцедуры.Вставить("НастройкаПодключения", Объект.Ссылка);
	ПараметрыПроцедуры.Вставить("ИдентификаторУчастника", Объект.ИдентификаторУчастника);
	ПараметрыПроцедуры.Вставить("ВариантНастройки", Объект.ВариантНастройки);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(
		УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания
		= НСтр("ru = 'Проверка параметров подключения к Системе быстрых платежей.'");
	
	РезультатВыполнения = ДлительныеОперации.ВыполнитьВФоне(
		"СистемаБыстрыхПлатежейСлужебный.ПроверитьПараметрыПодключенияОбъект",
		ПараметрыПроцедуры,
		ПараметрыВыполнения);
	
	Возврат РезультатВыполнения;
	
КонецФункции

&НаКлиенте
Процедура ПроверитьПараметрыПодключенияЗавершение(
		Результат,
		ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		
		РезультатОперации = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		Если ЗначениеЗаполнено(РезультатОперации.КодОшибки) Тогда
			ПоказатьПредупреждение(
				Неопределено,
				РезультатОперации.СообщениеОбОшибке);
		Иначе
			ПоказатьПредупреждение(
				Неопределено,
				НСтр("ru = 'Подключение завершено успешно.'"));
		КонецЕсли;
		
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		ПоказатьПредупреждение(
			Неопределено,
			Результат.КраткоеПредставлениеОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияНастройкиШаблоновЗавершение(
		Результат,
		ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Результат) = Тип("Число") И Результат > 0 Тогда
		ПредставлениеСсылки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Настроить (%1)'"),
			Результат);
	Иначе
		ПредставлениеСсылки = НСтр("ru = 'Настроить'");
	КонецЕсли;
	
	Элементы.ДекорацияНастройкиШаблонов.Заголовок = СтроковыеФункцииКлиент.ФорматированнаяСтрока(
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Шаблоны назначения: <a href = ""open:paymentPurpose"">%1</a>'"),
			ПредставлениеСсылки))
	
КонецПроцедуры

&НаСервере
Функция НастройкиОплатыПоДаннымФормы()
	
	ПараметрыОплатыСБПc2b = СистемаБыстрыхПлатежейСлужебный.НастройкиОплатыПоДаннымФормы(
		ЭтотОбъект);
	
	НастройкиПодключения = Неопределено;
	СистемаБыстрыхПлатежейСобытия.ПриОпределенииНастроекОплаты(
		ЭтотОбъект,
		Объект.ВариантНастройки,
		НастройкиПодключения);
	
	Если НастройкиПодключения = Неопределено Тогда
		ВызватьИсключение НСтр("ru = 'Не удалось определить настройки подключения.'");
	КонецЕсли;
	
	ИмяАтрибута = СистемаБыстрыхПлатежейСлужебный.АтрибутНастройкаПодключения(
		НастройкиПодключения.ОбъектМетаданных);
	ПараметрыОплатыСБПc2b.Вставить(ИмяАтрибута, Объект.Ссылка);
	
	Возврат ПараметрыОплатыСБПc2b;
	
КонецФункции

&НаКлиенте
Процедура ПослеЗакрытияФормыКассовыхСсылок(
		РезультатВыполнения,
		Параметры) Экспорт
	
	ЗаполнитьДекорацияКассовыеСсылки();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДекорацияКассовыеСсылки()
	
	СистемаБыстрыхПлатежейСлужебный.ЗаполнитьДекорацияКассовыеСсылки(
		ЭтотОбъект,
		Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияФормыНастройкиСсылкиПеренаправления(
		РезультатВыполнения,
		Параметры) Экспорт
	
	Если РезультатВыполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.СсылкаПеренаправления = РезультатВыполнения;
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаСменаУчастникаСБП(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		ПараметрыПодключения = СистемаБыстрыхПлатежейКлиент.НовыйПараметрыПодключения(
			Неопределено,
			Неопределено);
		
		ПараметрыПодключения.Вставить("НастройкаПодключения", Объект.Ссылка);
		ПараметрыПодключения.Вставить("ДополнительныеПараметры", Неопределено);
		ПараметрыПодключения.Вставить(
			"РежимРаботы",
			СистемаБыстрыхПлатежейКлиент.ИдентификаторОперацииСменаУчастника());
		
		СистемаБыстрыхПлатежейКлиент.СлужебнаяПодключитьСистемуБыстрыхПлатежей(
			ПараметрыПодключения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеАутентификации()
	
	ОбновитьТокен = Ложь;
	
	Прочитать();
	
	СистемаБыстрыхПлатежейСлужебный.УдалитьНастройкиАутентификации(
		ЭтотОбъект);
	
	СистемаБыстрыхПлатежейСлужебный.ДобавитьНастройкиАутентификации(
		ЭтотОбъект,
		Элементы.ГруппаНастройкиПодключения,
		Объект.Ссылка,
		Объект.ИдентификаторУчастника,
		СистемаБыстрыхПлатежейСлужебный.НовыйПараметрПодсказки(),
		Объект.ВариантНастройки);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.ОнлайнЗаказы") Тогда
		МодульОнлайнЗаказыСлужебный = ОбщегоНазначения.ОбщийМодуль("ОнлайнЗаказыСлужебный");
		ОбновитьТокен = МодульОнлайнЗаказыСлужебный.СуществуютНастройкиПоНастройкеОплаты(
			Объект.Ссылка);
	Иначе
		ОбновитьТокен = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ОбработчикЗаполненияИдентификаторовВыполнен()
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.СистемаБыстрыхПлатежей.ПереводыСБПc2b") Тогда
		ДанныеОбработчиков = ОбновлениеИнформационнойБазы.ОбъектОбработан(
			"РегистрСведений.ИдентификаторыОперацийСБПc2b");
		Если СтрНайти(
			ДанныеОбработчиков.НевыполненныеОбработчикиСтрокой,
			"ПереводыСБПc2bСлужебный.ЗаполнитьИдентификаторУчастника") > 0 Тогда // АПК:277 проверка выполнения обработчиков.
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(Знач ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
