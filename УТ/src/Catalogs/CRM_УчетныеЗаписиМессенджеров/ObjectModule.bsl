#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
		
	УстановитьПривилегированныйРежим(Истина);                    

	// BSLLS:LatinAndCyrillicSymbolInWord-off
	ЭтоB2BПортал = Ссылка =  Справочники.CRM_УчетныеЗаписиМессенджеров.B2BПортал;
	Если ЭтоB2BПортал Тогда // для портала настройка рег. заданий не нужна                                         
		Возврат;
	КонецЕсли;
	// BSLLS:LatinAndCyrillicSymbolInWord-on
	
	СписокЗаданий = Новый Массив;
	Если ЗначениеЗаполнено(УникальныйИдентификаторЗадания) Тогда
		СписокЗаданий = РегламентныеЗаданияСервер.НайтиЗадания(Новый Структура("Ключ", УникальныйИдентификаторЗадания));
	КонецЕсли;
	
	Если Не ПометкаУдаления И Включена И НЕ ИспользоватьWebhook Тогда
		Если СписокЗаданий.Количество() = 0 Тогда
			ПараметрыЗадания = Новый Структура("Использование", Истина);
			ПараметрыЗадания.Вставить("Метаданные", Метаданные.РегламентныеЗадания.CRM_ОжиданиеСобытийМессенджера);
			УникальныйИдентификаторЗадания = Строка(Новый УникальныйИдентификатор);
			ПараметрыЗадания.Вставить("Ключ", УникальныйИдентификаторЗадания);
			ПараметрыЗадания.Вставить("Наименование", "Ожидание событий: " + ТипМессенджера + " " + Наименование);
			ПараметрыВыполненияЗадания = Новый Массив;
			ПараметрыВыполненияЗадания.Добавить(УникальныйИдентификаторЗадания);
			ПараметрыВыполненияЗадания.Добавить(ТипМессенджера);
			ПараметрыЗадания.Вставить("Параметры", ПараметрыВыполненияЗадания);
			Расписание = Новый РасписаниеРегламентногоЗадания;
			Расписание.ПериодПовтораДней = 1;
			Расписание.ПериодПовтораВТечениеДня = 60;
			ПараметрыЗадания.Вставить("Расписание", Расписание);
			Если Ссылка = Справочники.CRM_УчетныеЗаписиМессенджеров.СистемаВзаимодействия Тогда
				ИдентификаторПользователяИБ = Пользователи.ТекущийПользователь().ИдентификаторПользователяИБ;
				ПользовательИБ = ПользователиИнформационнойБазы.НайтипоуникальномуИдентификатору(ИдентификаторПользователяИБ);
				Если ПользовательИБ <> Неопределено Тогда
					ПараметрыЗадания.Вставить("ИмяПользователя", ПользовательИБ.Имя);
				КонецЕсли;					
			КонецЕсли;
			РегламентноеЗадание = РегламентныеЗаданияСервер.ДобавитьЗадание(ПараметрыЗадания);
		Иначе	
			Для Каждого Задание Из СписокЗаданий Цикл
				ПараметрыЗадания = Новый Структура("Использование", НЕ ПометкаУдаления);
				ПараметрыВыполненияЗадания = Новый Массив;
				ПараметрыВыполненияЗадания.Добавить(УникальныйИдентификаторЗадания);
				ПараметрыВыполненияЗадания.Добавить(ТипМессенджера);
				ПараметрыЗадания.Вставить("Параметры", ПараметрыВыполненияЗадания);
				Если Ссылка = Справочники.CRM_УчетныеЗаписиМессенджеров.СистемаВзаимодействия Тогда
					ИдентификаторПользователяИБ = Пользователи.ТекущийПользователь().ИдентификаторПользователяИБ;
					ПользовательИБ = ПользователиИнформационнойБазы.НайтипоуникальномуИдентификатору(ИдентификаторПользователяИБ);
					Если ПользовательИБ <> Неопределено Тогда
						ПараметрыЗадания.Вставить("ИмяПользователя", ПользовательИБ.Имя);
					КонецЕсли;					
				КонецЕсли;
				РегламентныеЗаданияСервер.ИзменитьЗадание(Задание, ПараметрыЗадания);
			КонецЦикла;
		КонецЕсли;
	Иначе
		Если СписокЗаданий.Количество() > 0 Тогда
			РегламентныеЗаданияСервер.УдалитьЗадание(СписокЗаданий[0]);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	УникальныйИдентификаторЗадания = "";
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли;
	
	РегистрыСведений.CRM_ВидыКонтактнойИнформацииМессенджеров.ЗаписатьВидыКИ(ТипМессенджера);
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru='Недопустимый вызов объекта на клиенте.';en='Invalid call of object on client.'");
#КонецЕсли