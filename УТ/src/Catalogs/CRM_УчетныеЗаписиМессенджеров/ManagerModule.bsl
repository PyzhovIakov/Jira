#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет предопределенные параметры
//
Процедура ЗаполнитьПредопределенныеЭлементы() Экспорт
	
	ЭлементОбъект = Справочники.CRM_УчетныеЗаписиМессенджеров.СистемаВзаимодействия.ПолучитьОбъект();
	ЭлементОбъект.ТипМессенджера = "СистемаВзаимодействия";
	ЭлементОбъект.Наименование = НСтр("ru = 'Обсуждение'");
	ЭлементОбъект.Записать();
	
	ЭлементОбъект = Справочники.CRM_УчетныеЗаписиМессенджеров.B2BПортал.ПолучитьОбъект();
	ЭлементОбъект.ТипМессенджера = "B2BПортал";
	ЭлементОбъект.Наименование = НСтр("ru = 'B2B портал'");
	ЭлементОбъект.Записать();
	
КонецПроцедуры

// Функция возвращает Истина, если удалось установить Webhook Green.
//
// Параметры:
//  УчетнаяЗапись				 - СправочинкСсылка.CRM_УчетныеЗаписиМессенджеров	 - Учетная запись.
//  СтруктураПараметровДоступа	 - Структура										 - Структура параметров.
//  ТекстОшибки					 - Строка											 - Текст ошибки.
// 
// Возвращаемое значение:
//   - Булево
//
Функция УстановитьWebhookGreen(УчетнаяЗапись, СтруктураПараметровДоступа, ТекстОшибки = "") Экспорт
	
	Если ЗначениеЗаполнено(СтруктураПараметровДоступа.АдресWebhook) Тогда
		АдресWebhook = СтруктураПараметровДоступа.АдресWebhook;
		АдресWebhook = АдресWebhook + ?(Прав(АдресWebhook, 1) = "/", "", "/") 
			+ Строка(УчетнаяЗапись.Ссылка.УникальныйИдентификатор());
	Иначе
		АдресWebhook = "";
	КонецЕсли;
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("webhookUrl", АдресWebhook);
	СтруктураНастроек.Вставить("incomingWebhook", "yes");
	СтруктураНастроек.Вставить("outgoingWebhook", "yes");
	СтруктураНастроек.Вставить("deviceWebhook", "yes");
	СтруктураНастроек.Вставить("stateWebhook", "yes");
	СтруктураНастроек.Вставить("markIncomingMessagesReaded", "no");
	СтруктураНастроек.Вставить("outgoingMessageWebhook", "yes");
	
	СтрокаЗапроса = CRM_РаботаСМессенджерамиСервер.ПолучитьСтрокуJSON(СтруктураНастроек, Истина);
	
	СтруктураОтвета = CRM_РаботаСМессенджерамиСервер.ПолучитьЗначениеИзОтветаJSON(CRM_РаботаСМессенджерамиСервер.ВыполнитьЗапрос(Обработки.CRM_РаботаСМессенджеромWhatsApp.СерверGreen(),
		 СтрокаЗапроса
		, Обработки.CRM_РаботаСМессенджеромWhatsApp.URLМетодаСервисаGreen(СтруктураПараметровДоступа.ApiURL, СтруктураПараметровДоступа.Токен, "setSettings"), СтруктураПараметровДоступа.ПараметрыПрокси));
		
	Если СтруктураОтвета.Свойство("saveSettings")	Тогда
		Возврат СтруктураОтвета.saveSettings;
	Иначе       
		ТекстОшибки = (?(СтруктураОтвета.Свойство("error"), "Не удалось сохранить настройки по причине : " 
			+ СтруктураОтвета.error,
			 "Не удалось сохранить настройки!"));
		//ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецЕсли
