
#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура - обработчик события формы "ПриСозданииНаСервере".
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если  Параметры.Свойство("Владелец") Тогда
			Объект.Владелец = Параметры.Владелец;
		КонецЕсли;
		
		Если  Параметры.Свойство("Наименование") Тогда
			Объект.Наименование = Параметры.Наименование;
		КонецЕсли;
		Если Объект.Владелец.Пустая() Тогда
			Объект.Владелец = Пользователи.ТекущийПользователь().Подразделение;
		КонецЕсли;
	КонецЕсли;
	
	ЭтоНовый = Объект.Ссылка.Пустая();
	ИспользоватьПодразделения = CRM_ОбщегоНазначенияПовтИсп.ИспользоватьПодразделения();
	
	Элементы.Владелец.Видимость = ИспользоватьПодразделения;
	
	// Проверим, может ли пользователь редактировать\добавлять теги подразделения.
	ЕстьРоль = Пользователи.РолиДоступны("CRM_ДобавлениеИзменениеТегов");
	ЕстьПолныеПрава = Пользователи.РолиДоступны("ПолныеПрава");	
	
	ПодразделенияРодители = CRM_МетодыМодулейМенеджеровСправочников.ПолучитьВсеПодразделенияРодители(Объект.Владелец,
		 Истина); 
	ПодразделениеПользователяВышеПоИерархии =
		(ПодразделенияРодители.Найти(Пользователи.ТекущийПользователь().Подразделение) <> Неопределено);
	
	// Даем возможность редактировать, если есть роль и подразделение пользователя 
	// выше по иерерхии, чем подразделение у тега.
	ЕстьРоль = (ЕстьРоль И ПодразделениеПользователяВышеПоИерархии) ИЛИ ЕстьПолныеПрава;
	
	ПодчиненныеПодразделения = CRM_УправлениеДоступомПовтИсп.ПолучитьПодразделенияВКоторыхРуководитель(Пользователи.ТекущийПользователь(),
		 Истина);

	РуководительПодразделения = (ПодчиненныеПодразделения.Найти(Объект.Владелец) <> Неопределено);	
	
	// Также радактирование разрешено руководителям подразделений выше по иерархии.
	Если НЕ ЕстьРоль И НЕ РуководительПодразделения Тогда
		ТекстСообщения = НСтр("ru='Нет права на добавление и изменение тегов подразделения';en='There is no right to add and edit department tags'") + " <" 
			+ Объект.Владелец 
			+ ">.";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Отказ = Истина;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Или ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		ЭлементЦвет = Элементы.ЦветПредставление;
		// BSLLS:StyleElementConstructors-off
		Если ЗначениеЗаполнено(Объект.ЦветПредставление) Тогда
			ЭлементЦвет.ЦветФона   = Новый Цвет(Объект.ЦветКрасный, Объект.ЦветЗеленый, Объект.ЦветСиний);
		КонецЕсли;
		// BSLLS:StyleElementConstructors-on
		ЭлементЦвет.ЦветТекста = CRM_ОбщегоНазначенияКлиентСервер.ПолучитьКонтрастныйЦвет(ЭлементЦвет.ЦветФона);
	Иначе
		Объект.ЦветИндекс = 25;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события формы "ПередЗаписью".
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	ЕстьДублиТегов = ЕстьДублиТегов(Объект.Наименование, Объект.Владелец);
	Если ЕстьДублиТегов.ЕстьДубли Тогда
		Отказ = Истина;
		ТекстСообщения = НСтр("ru='Создаваемый тег уже существует у подразделения';en='Created tag already exists for department'") + " <" 
			+ ЕстьДублиТегов.Подразделение 
			+ ">.";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события формы "ПослеЗаписи".
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ЭтоНовый Тогда
		ЭтоНовый = Ложь;
		Оповестить("ПослеСозданияТега", Объект.Ссылка, ВладелецФормы);
	КонецЕсли;
	
	Оповестить("ПослеЗаписиТега", Объект.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЦветПредставлениеПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЦветПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики(
		"CRM_Статистика.Взаимодействия.СозданиеЭлектронногоПисьма.Удобство.КоличествоВыбораРеквизитаТег.КоличествоОткрытияСтрокиЦветВТеге");
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура("ТекущийЦвет", Объект.ЦветИндекс);
	ОповещениеНовое = Новый ОписаниеОповещения("ЦветНачалоВыбораЗавершение", ЭтотОбъект);
	ФормаВыбораЦвета = ОткрытьФорму("Справочник.CRM_Теги.Форма.ФормаВыбораЦвета", ПараметрыФормы, Элемент, , , ,
		ОповещениеНовое, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры // ЦветПредставлениеНачалоВыбора()

// Продолжение процедуры "ЦветНачалоВыбора"
//
// Параметры:
//  Результат				 - КодВозвратаДиалога, Неопределено	 - Результат выбора пользователя.
//  ДополнительныеПараметры	 - Произвольный	 - Дополнительные параметры
//
&НаКлиенте
Процедура ЦветНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Не (Результат = Неопределено) И Не (Результат = КодВозвратаДиалога.Отмена) Тогда
		Объект.ЦветПредставление = Результат[0].Представление;
		Объект.ЦветИндекс        = Результат[0].Картинка;
		Объект.ЦветКрасный       = Результат[0].Красный;
		Объект.ЦветЗеленый       = Результат[0].Зеленый;
		Объект.ЦветСиний         = Результат[0].Синий;
		// BSLLS:StyleElementConstructors-off
		Элементы.ЦветПредставление.ЦветФона   = Новый Цвет(Объект.ЦветКрасный, Объект.ЦветЗеленый, Объект.ЦветСиний);
		// BSLLS:StyleElementConstructors-on
		Элементы.ЦветПредставление.ЦветТекста = CRM_ОбщегоНазначенияКлиентСервер.ПолучитьКонтрастныйЦвет(
		                                        Элементы.ЦветПредставление.ЦветФона);
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЦветПредставлениеОчистка(Элемент, СтандартнаяОбработка)
	Элементы.ЦветПредставление.ЦветФона = Новый Цвет();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
// Функция ищет теги с заданным наименованием вверх и вниз по иерархии.
Функция ЕстьДублиТегов(Наименование, Подразделение)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Теги.Владелец КАК Владелец
		|ИЗ
		|	Справочник.CRM_Теги КАК Теги
		|ГДЕ
		|	Теги.Наименование = &Наименование
		|	И Теги.Владелец В(&ПроверяемыеПодразделения)
		|	И Теги.Ссылка <> &Ссылка";
	
	ПроверяемыеПодразделения = CRM_МетодыМодулейМенеджеровСправочников.ПолучитьВсеПодразделенияРодители(Подразделение,
		 Истина);
	ПодчиненныеПодразделения = Новый Массив;
	ПодчиненныеПодразделения = CRM_МетодыМодулейМенеджеровСправочников.ПолучитьПодчиненныеПодразделенияПользователя(Подразделение,
		 ПодчиненныеПодразделения);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ПроверяемыеПодразделения, ПодчиненныеПодразделения);
	
	Запрос.УстановитьПараметр("Наименование", Наименование);
	Запрос.УстановитьПараметр("ПроверяемыеПодразделения", ПроверяемыеПодразделения);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	СтруктураВозврата = Новый Структура("ЕстьДубли, Подразделение", Ложь, Неопределено);
	
	Если  ВыборкаДетальныеЗаписи.Следующий() Тогда 
		СтруктураВозврата.ЕстьДубли = Истина;
		СтруктураВозврата.Подразделение = ВыборкаДетальныеЗаписи.Владелец;
	КонецЕсли;
	
	Возврат СтруктураВозврата;
	
КонецФункции

#КонецОбласти
