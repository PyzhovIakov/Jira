
#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура - обработчик события ПриСозданииНаСервере.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКоманды = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКоманды");
		МодульПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ВерсионированиеОбъектов") Тогда
		МодульВерсионированиеОбъектов = ОбщегоНазначения.ОбщийМодуль("ВерсионированиеОбъектов");
		МодульВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
	МодульПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	МодульПодключаемыеКоманды = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКоманды");
	МодульПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	МодульПодключаемыеКомандыКлиентСервер = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиентСервер");
	МодульПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура КомандаСоздатьВоронку(Команда)
	Форма = ПолучитьФорму("Справочник.CRM_ВоронкиПродаж.ФормаОбъекта",
		 Новый Структура("ЗначенияЗаполнения", Новый Структура()),
		 Элементы.Список);
	Если Форма <> Неопределено Тогда
		Форма.Открыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаСоздатьЭтап(Команда)
	ТекРодитель = Элементы.Список.ТекущийРодитель;
	Если Не ЗначениеЗаполнено(ТекРодитель) Тогда
		Если Элементы.Список.ТекущиеДанные <> Неопределено
			 И Не ЗначениеЗаполнено(Элементы.Список.ТекущиеДанные.Родитель) Тогда
			ТекРодитель = Элементы.Список.ТекущиеДанные.Ссылка;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(CRM_ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ТекРодитель, "СценарийИнтереса")) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='Выбранная воронка связана со сценарием обработки интереса! Пользовательское создание этапов не возможно. ';en='Selected funnel associated with the processing scropt of lead! Custom stages creation impossible. '"));
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекРодитель) Тогда
		ПараметрыСтруктура = Новый Структура("ЗначенияЗаполнения", Новый Структура("Родитель", ТекРодитель));
	Иначе
		ПараметрыСтруктура = Новый Структура("ЗначенияЗаполнения", Новый Структура("Родитель"));
	КонецЕсли;
	Форма = ПолучитьФорму("Справочник.CRM_ВоронкиПродаж.ФормаОбъекта", ПараметрыСтруктура, Элементы.Список);
	Если Форма <> Неопределено Тогда
		Форма.Открыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаЭтаповВоронок(Команда)
	ПараметрКоманды = Новый Массив;
	ПараметрКоманды.Добавить(Элементы.Список.ТекущиеДанные.Ссылка);
	ПараметрыВыполненияКоманды = Новый Структура;
	ПараметрыВыполненияКоманды.Вставить("Источник",		ЭтотОбъект);
	ПараметрыВыполненияКоманды.Вставить("Окно",			Неопределено);
	ПараметрыВыполненияКоманды.Вставить("Уникальность",	Ложь);
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Справочник.CRM_ВоронкиПродаж", "ПроверкаВоронокПродаж", 
		ПараметрКоманды, ПараметрыВыполненияКоманды.Источник);
КонецПроцедуры

#КонецОбласти
