
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("УчетнаяЗапись", УчетнаяЗапись);
	Если Не ЗначениеЗаполнено(УчетнаяЗапись) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	ТолькоПросмотр = НЕ CRM_УправлениеЭлектроннойПочтой.ТекущийПользовательПолучитьПравоУчетнойЗаписи(УчетнаяЗапись,
		 "Администрирование");
	Элементы.ПапкиУчетнойЗаписиПодписать.ТолькоПросмотр = ТолькоПросмотр;
	
	Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='Настройка синхронизации для %1';en='Synchronization setting for %1'"), УчетнаяЗапись);
	ЗаполнитьДанные();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПапкиУчетнойЗаписиПодписатьПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ПапкиУчетнойЗаписи.ТекущаяСтрока;
	ДанныеСтроки = ПапкиУчетнойЗаписи.НайтиПоИдентификатору(ТекущаяСтрока);
	Если ДанныеСтроки.Подписаться Тогда
		ДанныеРодителя = ДанныеСтроки.ПолучитьРодителя();
		Пока ДанныеРодителя <> Неопределено Цикл
			ДанныеРодителя.Подписаться = Истина;
			ДанныеРодителя = ДанныеРодителя.ПолучитьРодителя();
		КонецЦикла;
	Иначе
		УстановитьПодпискуВИерархии(ДанныеСтроки, Ложь);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийКомандФормы

&НаКлиенте
Процедура Применить(Команда)
	
	ЕстьОшибки = Ложь;
	Если Модифицированность Тогда
		СохранитьДанные();
		Оповестить("ИзмененыНастройкиСинхронизацииПапок", УчетнаяЗапись);
		Модифицированность = Ложь;
	КонецЕсли;
	
	Если Не ЕстьОшибки Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьВсе(Команда)
	УстановитьПодпискуВИерархии(ПапкиУчетнойЗаписи, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОтписатьВсе(Команда)
	УстановитьПодпискуВИерархии(ПапкиУчетнойЗаписи, Ложь);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьДанные()
	
	// Данные папок.
	ДанныеПапок.Очистить();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПапкиЭлектронныхПисем.Ссылка КАК Ссылка,
	|	ПапкиЭлектронныхПисем.Родитель КАК Родитель,
	|	ПРЕДСТАВЛЕНИЕ(ПапкиЭлектронныхПисем.Ссылка) КАК Представление,
	|	ЕСТЬNULL(ПапкиУчетныхЗаписей.ВидПапки, ЗНАЧЕНИЕ(Перечисление.CRM_ВидыПапокЭлектроннойПочты.ПустаяСсылка)) КАК ВидПапки,
	|	ПапкиЭлектронныхПисем.CRM_Подписаться КАК Подписаться,
	|	ПапкиЭлектронныхПисем.CRM_ИмяНаСервере КАК ИмяНаСервере,
	|	ПапкиЭлектронныхПисем.Родитель.CRM_ИмяНаСервере КАК ИмяРодителяНаСервере
	|ИЗ
	|	Справочник.ПапкиЭлектронныхПисем КАК ПапкиЭлектронныхПисем
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.CRM_ПапкиУчетныхЗаписей КАК ПапкиУчетныхЗаписей
	|		ПО (ПапкиУчетныхЗаписей.Папка = ПапкиЭлектронныхПисем.Ссылка)
	|ГДЕ
	|	ПапкиЭлектронныхПисем.Владелец = &УчетнаяЗапись
	|	И НЕ ПапкиЭлектронныхПисем.ПометкаУдаления
	|	И НЕ ЕСТЬNULL(ПапкиУчетныхЗаписей.ВидПапки, ЗНАЧЕНИЕ(Перечисление.CRM_ВидыПапокЭлектроннойПочты.ПустаяСсылка)) В (&ИсключаемыеВиды)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Родитель,
	|	Ссылка");
	
	Запрос.УстановитьПараметр("УчетнаяЗапись", УчетнаяЗапись);
	
	ИсключаемыеВиды = Новый Массив;
	ИсключаемыеВиды.Добавить(Перечисления.CRM_ВидыПапокЭлектроннойПочты.Исходящие);
	Запрос.УстановитьПараметр("ИсключаемыеВиды", ИсключаемыеВиды);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ДанныеПапок.Добавить(), Выборка);
	КонецЦикла;
	
	// Записанная иерархия папок.
	ЭлементыДерева = ПапкиУчетнойЗаписи.ПолучитьЭлементы();
	ЭлементыДерева.Очистить();
	
	ДанныеОтбора = Новый Структура;
	ДанныеОтбора.Вставить("Родитель", Справочники.ПапкиЭлектронныхПисем.ПустаяСсылка());
	НайденныеСтроки = ДанныеПапок.НайтиСтроки(ДанныеОтбора);
	Для Каждого ДанныеПапки Из НайденныеСтроки Цикл
		ДобавитьСтрокуВДеревоПапок(ДанныеПапки, ЭлементыДерева, ДанныеПапок);
	КонецЦикла;
	
	// Дополнение данными на сервере.
	Профиль = РаботаСПочтовымиСообщениямиСлужебный.ИнтернетПочтовыйПрофиль(УчетнаяЗапись, Истина);
	Протокол = ПротоколИнтернетПочты.IMAP;
	
	Почта = Новый ИнтернетПочта;
	Попытка
		Почта.Подключиться(Профиль, Протокол);
	Исключение
		
		ТекстСообщенияОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Во время подключения к учетной записи %1 произошла ошибка ""%2""'"),
			УчетнаяЗапись,
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщенияОбОшибке);
		
		Возврат;
		
	КонецПопытки;
	
	Попытка
		МассивПапок = Почта.ПолучитьПочтовыеЯщики();
	Исключение
		Почта.Отключиться();
		Возврат;
	КонецПопытки;
	
	Попытка
		Разделитель = Почта.СимволРазделитель;
	Исключение          
		Разделитель = "/";
	КонецПопытки;
	
	Почта.Отключиться();
	
	ПапкаИсходящие = CRM_УправлениеЭлектроннойПочтой.ПапкаУчетнойЗаписи(УчетнаяЗапись, "Исходящие");
	ИмяИсходящих = ПапкаИсходящие.Наименование;
	
	Для Каждого ПолноеИмяНаСервере Из МассивПапок Цикл
		
		Если ПолноеИмяНаСервере = ИмяИсходящих Тогда
			Продолжить;
		КонецЕсли;
		
		ИменаПапок = СтрРазделить(ПолноеИмяНаСервере, Разделитель);
		ИмяРодителяНаСервере = "";
		Для Каждого Имя Из ИменаПапок Цикл
			
			ТекущееИмяНаСервере = ?(ИмяРодителяНаСервере = "", Имя, ИмяРодителяНаСервере + Разделитель + Имя);
			
			НайденныеСтроки = ДанныеПапок.НайтиСтроки(Новый Структура("ИмяНаСервере", ТекущееИмяНаСервере));
			Если НайденныеСтроки.Количество() = 0 Тогда
				НоваяСтрока = ДанныеПапок.Добавить();
				НоваяСтрока.Представление = Имя;
				НоваяСтрока.ИмяНаСервере = ТекущееИмяНаСервере;
				НоваяСтрока.ИмяРодителяНаСервере = ИмяРодителяНаСервере;
			КонецЕсли;
			ИмяРодителяНаСервере = ТекущееИмяНаСервере;
			
		КонецЦикла;
		
	КонецЦикла;
	
	// Дополнение серверной иерархией папок.
	ЭлементыДерева = ПапкиУчетнойЗаписи.ПолучитьЭлементы();
	
	ДанныеОтбора = Новый Структура;
	ДанныеОтбора.Вставить("Ссылка", Справочники.ПапкиЭлектронныхПисем.ПустаяСсылка());
	НайденныеСтроки = ДанныеПапок.НайтиСтроки(ДанныеОтбора);
	Для Каждого ДанныеПапки Из НайденныеСтроки Цикл
		
		Если ЗначениеЗаполнено(ДанныеПапки.ИмяРодителяНаСервере) Тогда
			
			ДанныеОтбораРодитель = Новый Структура;
			ДанныеОтбораРодитель.Вставить("ИмяНаСервере", ДанныеПапки.ИмяРодителяНаСервере);
			НайденныеСтрокиРодитель = ДанныеПапок.НайтиСтроки(ДанныеОтбораРодитель);
			Если НайденныеСтрокиРодитель.Количество() > 0 Тогда
				СтрокаРодителя = ПапкиУчетнойЗаписи.НайтиПоИдентификатору(НайденныеСтрокиРодитель[0].ИдентификаторВДереве);
				НоваяСтрока = СтрокаРодителя.ПолучитьЭлементы().Добавить();
				ДанныеПапки.ИдентификаторВДереве = НоваяСтрока.ПолучитьИдентификатор();
				НоваяСтрока.Имя			= ДанныеПапки.Представление;
				НоваяСтрока.Картинка	= 8;
			КонецЕсли;
			
		Иначе
			
			НоваяСтрока = ЭлементыДерева.Добавить();
			ДанныеПапки.ИдентификаторВДереве = НоваяСтрока.ПолучитьИдентификатор();
			НоваяСтрока.Имя			= ДанныеПапки.Представление;
			НоваяСтрока.Картинка	= 8;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДобавитьСтрокуВДеревоПапок(ДанныеПапки, Коллекция, ВсеДанныеПапок)
	
	НоваяСтрока = Коллекция.Добавить();
	ДанныеПапки.ИдентификаторВДереве = НоваяСтрока.ПолучитьИдентификатор();
	
	НоваяСтрока.Имя			= ДанныеПапки.Представление;
	НоваяСтрока.Подписаться	= ДанныеПапки.Подписаться;
	НоваяСтрока.Ссылка		= ДанныеПапки.Ссылка;
	
	Если ДанныеПапки.ВидПапки = Перечисления.CRM_ВидыПапокЭлектроннойПочты.Входящие Тогда
		НоваяСтрока.Картинка	= 0;
	ИначеЕсли ДанныеПапки.ВидПапки = Перечисления.CRM_ВидыПапокЭлектроннойПочты.Исходящие Тогда
		НоваяСтрока.Картинка	= 1;
	ИначеЕсли ДанныеПапки.ВидПапки = Перечисления.CRM_ВидыПапокЭлектроннойПочты.Отправленные Тогда
		НоваяСтрока.Картинка	= 2;
	ИначеЕсли ДанныеПапки.ВидПапки = Перечисления.CRM_ВидыПапокЭлектроннойПочты.Черновики Тогда
		НоваяСтрока.Картинка	= 3;
	ИначеЕсли ДанныеПапки.ВидПапки = Перечисления.CRM_ВидыПапокЭлектроннойПочты.Удаленные Тогда
		НоваяСтрока.Картинка	= 4;
	ИначеЕсли ДанныеПапки.ВидПапки = Перечисления.CRM_ВидыПапокЭлектроннойПочты.Обработанные Тогда
		НоваяСтрока.Картинка	= 6;
	ИначеЕсли ДанныеПапки.ВидПапки = Перечисления.CRM_ВидыПапокЭлектроннойПочты.НежелательнаяПочта Тогда
		НоваяСтрока.Картинка	= 7;
	Иначе
		НоваяСтрока.Картинка	= 8;
	КонецЕсли;
	
	ДанныеОтбора = Новый Структура;
	ДанныеОтбора.Вставить("Родитель", ДанныеПапки.Ссылка);
	НайденныеСтроки = ВсеДанныеПапок.НайтиСтроки(Новый Структура("Родитель", ДанныеПапки.Ссылка));
	Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
		ДобавитьСтрокуВДеревоПапок(НайденнаяСтрока, НоваяСтрока.ПолучитьЭлементы(), ВсеДанныеПапок);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьДанные()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЭлементыДерева = ПапкиУчетнойЗаписи.ПолучитьЭлементы();
	Для Каждого Строка Из ЭлементыДерева Цикл
		ОбработатьСтрокуДереваПапок(Строка, ДанныеПапок, УчетнаяЗапись);
	КонецЦикла;
	
	Профиль = РаботаСПочтовымиСообщениямиСлужебный.ИнтернетПочтовыйПрофиль(УчетнаяЗапись, Истина);
	Протокол = ПротоколИнтернетПочты.IMAP;
	
	Почта = Новый ИнтернетПочта;
	Попытка
		Почта.Подключиться(Профиль, Протокол);
	Исключение
		
		ТекстСообщенияОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Во время подключения к учетной записи %1 произошла ошибка ""%2""'"),
			УчетнаяЗапись,
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщенияОбОшибке);
		
		Возврат;
		
	КонецПопытки;
	
	Попытка
		ПапкиНаСервере = Почта.ПолучитьПочтовыеЯщики();
	Исключение
		Почта.Отключиться();
		Возврат;
	КонецПопытки;
	
	Для Каждого Строка Из ДанныеПапок Цикл
		Если ЗначениеЗаполнено(Строка.Ссылка) И ЗначениеЗаполнено(Строка.ИмяНаСервере) И Строка.Подписаться Тогда
			
			Если ПапкиНаСервере.Найти(Строка.ИмяНаСервере) <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Попытка
				Почта.СоздатьПочтовыйЯщик(Строка.ИмяНаСервере);
			Исключение
				
				ЕстьОшибки = Истина;
				ТекстОшибки = ПользовательскийТекстОшибки(ОписаниеОшибки(), Строка.ИмяНаСервере);
				ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
				
				СтрокаДерева = ПапкиУчетнойЗаписи.НайтиПоИдентификатору(Строка.ИдентификаторВДереве);
				СтрокаДерева.Подписаться = Ложь;
				УстановитьПодпискуВИерархии(СтрокаДерева, Ложь);
				
			КонецПопытки;
			
		КонецЕсли;
	КонецЦикла;
	
	Почта.Отключиться();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбработатьСтрокуДереваПапок(СтрокаДерева, ВсеДанныеПапок, УчетнаяЗапись)
	
	ДанныеОтбора = Новый Структура;
	ДанныеОтбора.Вставить("ИдентификаторВДереве", СтрокаДерева.ПолучитьИдентификатор());
	НайденныеСтроки = ВсеДанныеПапок.НайтиСтроки(ДанныеОтбора);
	Если НайденныеСтроки.Количество() > 0 Тогда
		
		ДанныеПапки = НайденныеСтроки[0];
		Если ЗначениеЗаполнено(ДанныеПапки.Ссылка) Тогда
			
			// Изменилась подписка у существующей папки.
			Если СтрокаДерева.Подписаться <> ДанныеПапки.Подписаться Тогда
				
				ПапкаОбъект = ДанныеПапки.Ссылка.ПолучитьОбъект();
				ПапкаОбъект.CRM_Подписаться = СтрокаДерева.Подписаться;
				ПапкаОбъект.Записать();
				
				// Для создания папки на сервере.
				ДанныеПапки.Подписаться = СтрокаДерева.Подписаться;
				
			КонецЕсли;
			
		ИначеЕсли СтрокаДерева.Подписаться Тогда
			
			// Создана новая папка с почтового сервера.
			ПапкаОбъект = Справочники.ПапкиЭлектронныхПисем.СоздатьЭлемент();
			ДанныеРодителя = СтрокаДерева.ПолучитьРодителя();
			Если ДанныеРодителя <> Неопределено Тогда
				ПапкаОбъект.Родитель = ДанныеРодителя.Ссылка;
			КонецЕсли;
			ПапкаОбъект.Наименование = ДанныеПапки.Представление;
			ПапкаОбъект.CRM_Подписаться = СтрокаДерева.Подписаться;
			ПапкаОбъект.CRM_ИмяНаСервере = ДанныеПапки.ИмяНаСервере;
			ПапкаОбъект.Владелец = УчетнаяЗапись;
			ПапкаОбъект.Записать();
			
			// Для заполнения родителя у новых вложенных папок.
			СтрокаДерева.Ссылка = ПапкаОбъект.Ссылка;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ВложенныеСтроки = СтрокаДерева.ПолучитьЭлементы();
	Для Каждого ВложеннаяСтрока Из ВложенныеСтроки Цикл
		ОбработатьСтрокуДереваПапок(ВложеннаяСтрока, ВсеДанныеПапок, УчетнаяЗапись);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПользовательскийТекстОшибки(Знач ТекстОшибки, ИмяПапки)
	
	Если СтрНайти(ТекстОшибки, "Folder name is reserved") Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не удалось создать на сервере папку %1, имя зарезервировано на сервере.'"), ИмяПапки);
	ИначеЕсли СтрНайти(ТекстОшибки, "Mailbox already exists") Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не удалось создать на сервере папку %1, папка уже существует.'"), ИмяПапки);
	ИначеЕсли СтрНайти(ТекстОшибки, "Invalid mailbox name") Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не удалось создать на сервере папку %1, недопустимое имя папки.'"), ИмяПапки);
	Иначе
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'При создании на сервере папки %1 произошла ошибка"), ИмяПапки) + ": " + ТекстОшибки;
	КонецЕсли;
	
	Возврат ТекстОшибки;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПодпискуВИерархии(Ветка, Подписка)
	
	Ветки = Ветка.ПолучитьЭлементы();
	Для Каждого ТекВетка Из Ветки Цикл
		ТекВетка.Подписаться = Подписка;
		УстановитьПодпискуВИерархии(ТекВетка, Подписка);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
