
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Объект.Владелец) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Объект.ПредопределеннаяПапка Тогда
		ТолькоПросмотр = Истина;
		Возврат;
	// +CRM
	Иначе
		Элементы.CRM_ИмяНаСервере.АвтоОтметкаНезаполненного = Истина;
	// -CRM
	КонецЕсли;
	
	ЕстьПравоНаВедениеПапок = Взаимодействия.ПользовательЯвляетсяОтветственнымЗаВедениеПапок(Объект.Владелец);
	
	Если НЕ ЕстьПравоНаВедениеПапок Тогда
		Если Объект.Ссылка.Пустая() Тогда
			Отказ = Истина;
			// +CRM
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru='Недостаточно прав для создания папок.'"));
			// -CRM
		Иначе
			ТолькоПросмотр = Истина;
		КонецЕсли;
	КонецЕсли;

	// +CRM
	Если НЕ Параметры.Ключ.Пустая() Тогда
		Заголовок = НСтр("ru = 'Редактирование папки'");
	КонецЕсли;
	// -CRM
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_ПапкиЭлектронныхПисем", ПараметрыЗаписи, Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// +CRM
	ПапкаСуществуетНаСервере = ПроверитьСоздатьПапкуНаСервере(Объект.Владелец, Объект.CRM_ИмяНаСервере);
	Если Не ПапкаСуществуетНаСервере Тогда
		ТекстСообщения = Нстр("ru = 'Не удалось создать папку с указанным именем по указанному пути на сервере.'");
		Если Объект.CRM_Подписаться Тогда
			ТекстСообщения = ТекстСообщения + Символы.ПС
				+ Нстр("ru = 'До ее создания синхронизация осуществляться не будет.'")
		КонецЕсли;
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "CRM_ИмяНаСервере");
	КонецЕсли;
	// -CRM
	
КонецПроцедуры

// +CRM
&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Не ЗначениеЗаполнено(Объект.CRM_ИмяНаСервере) Тогда
		Текст = НСтр("ru = 'Реквизит ""%1"" не заполнен.'");
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Текст, "Имя на сервере");
		ОбщегоНазначения.СообщитьПользователю(Текст, , "CRM_ИмяНаСервере", "Объект.CRM_ИмяНаСервере");
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ТекущийОбъект.Родитель.CRM_Подписаться Тогда
		ТекущийОбъект.CRM_Подписаться = Истина;
	КонецЕсли;
	
	РодительскаяПапка = ТекущийОбъект.Родитель;
	Если ЗначениеЗаполнено(РодительскаяПапка) Тогда
		ТекущийОбъект.CRM_ИмяНаСервере = РодительскаяПапка.CRM_ИмяНаСервере + "|" + ТекущийОбъект.CRM_ИмяНаСервере;
	КонецЕсли;
	
КонецПроцедуры
// -CRM

#КонецОбласти

// +CRM
#Область СлужебныеПроцедурыИФункции

// Проверяет, есть ли на почтовом сервере папка с указанным именем. Если нет, то создает ее.
//
// Параметры:
//  УчетнаяЗапись  - СправочникСсылка.УчетныеЗаписиЭлектроннойПочты - учетная запись, для которой создается новая папка
//  ИмяНаСервере  - Строка - Имя папки на сервере, указанное пользователем на форме
//
// Возвращаемое значение:
//   Булево   - на почтовом сервере уже есть или создана папка с указанным именем
//
&НаСервереБезКонтекста
Функция ПроверитьСоздатьПапкуНаСервере(УчетнаяЗапись, ИмяНаСервере)
	
	Профиль = РаботаСПочтовымиСообщениямиСлужебный.ИнтернетПочтовыйПрофиль(УчетнаяЗапись, Истина);
	Протокол = ПротоколИнтернетПочты.IMAP;
	
	Почта = Новый ИнтернетПочта;
	Попытка
		Почта.Подключиться(Профиль, Протокол);
	Исключение
		
		ТекстСообщенияОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Во время подключения к учетной записи %1 произошла ошибка ""%2""'"),
			УчетнаяЗапись,
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщенияОбОшибке);
		
		Возврат Неопределено;
		
	КонецПопытки;
	
	Попытка
		МассивПапок = Почта.ПолучитьПочтовыеЯщики();
	Исключение
		Почта.Отключиться();
		Возврат Ложь;
	КонецПопытки;
	
	Попытка
		Разделитель = Почта.СимволРазделитель;
	Исключение
		Разделитель = "/";
	КонецПопытки;
	
	ИмяНаСервере = СтрЗаменить(ИмяНаСервере, "|", Разделитель);
	
	Если МассивПапок.Найти(ИмяНаСервере) <> Неопределено Тогда
		Почта.Отключиться();
		Возврат Истина;
	КонецЕсли;
	
	Попытка
		Почта.СоздатьПочтовыйЯщик(ИмяНаСервере);
		Почта.Отключиться();
		Возврат Истина;
	Исключение
		Почта.Отключиться();
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции

#КонецОбласти
// -CRM