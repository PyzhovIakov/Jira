
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Отбор") И Параметры.Отбор.Свойство("Владелец") Тогда 
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Владелец",
			 Параметры.Отбор.Владелец, ВидСравненияКомпоновкиДанных.Равно, , Истина,
			 РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);	
		CRM_Владелец = Параметры.Отбор.Владелец;
		
		Если ЗначениеЗаполнено(CRM_Владелец) Тогда
			АвтоЗаголовок = Ложь;
			ШаблонЗаголовка = НСтр("ru = 'Папки электронных писем (%1)'; en = 'Folders of electronic letters (%1)'");
			Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонЗаголовка, CRM_Владелец);
		КонецЕсли;
		
		Элементы.Подписаться.Видимость = CRM_Владелец.CRM_СинхронизироватьПапкиСПочтовымСервером;
		Элементы.СписокНастройкаСинхронизацииПапок.Видимость = CRM_Владелец.CRM_СинхронизироватьПапкиСПочтовымСервером; 
	Иначе
		Элементы.СписокНастройкаСинхронизацииПапок.Видимость = Ложь; 
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("CRM_ИспользоватьОбменСMSExchange") Тогда
		УчетнаяЗаписьMSExchange = Неопределено;
		Если Параметры.Свойство("Отбор") И Параметры.Отбор.Свойство("Владелец") Тогда
			УстановитьПривилегированныйРежим(Истина);
			УчетнаяЗаписьMSExchange =
				CRM_MSExchangeВызовСервера.ПолучитьУчетнуюЗаписьMSExchangeПоУчетнойЗаписиЭлектроннойПочты(CRM_Владелец);
			УстановитьПривилегированныйРежим(Ложь);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(CRM_Владелец)
			Или Не ЗначениеЗаполнено(УчетнаяЗаписьMSExchange)
			Или Не ПравоДоступа("Добавление", Метаданные.Справочники.ПапкиЭлектронныхПисем)
			Или Не ПравоДоступа("Чтение", Метаданные.Справочники.CRM_СтруктурыПапокMSExchange) Тогда
			Элементы.СписокДобавитьПапкиMSExchange.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКоманды = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКоманды");
		МодульПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
	МодульПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	МодульПодключаемыеКоманды = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКоманды");
	МодульПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	МодульПодключаемыеКомандыКлиентСервер = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиентСервер");
	МодульПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура НастройкаСинхронизацииПапок(Команда)
	ОткрытьФорму("Справочник.ПапкиЭлектронныхПисем.Форма.CRM_ФормаСинхронизацииПапок", 
		Новый Структура("УчетнаяЗапись", CRM_Владелец), ЭтотОбъект, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ИзмененыНастройкиСинхронизацииПапок" И Параметр = CRM_Владелец Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДобавитьПапкиMSExchange(Команда)
	Если Не ЗначениеЗаполнено(CRM_Владелец) Тогда
		Возврат;
	КонецЕсли;
	
	УчетнаяЗаписьMSExchange =
		CRM_MSExchangeВызовСервера.ПолучитьУчетнуюЗаписьMSExchangeПоУчетнойЗаписиЭлектроннойПочты(CRM_Владелец);
	Если Не ЗначениеЗаполнено(УчетнаяЗаписьMSExchange) Тогда
		ПоказатьПредупреждение(, НСтр("ru='Для учетной записи электронной почты ';en='For account email'") + """" + Строка(CRM_Владелец) 
			+ """" 
			+ Символы.ПС
			+ НСтр("ru='не найдена соответствующая учетная запись MS Exchange!';en='the appropriate login account of MS Exchange is not found!'"));
		//
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДобавитьПапкиMSExchangeЗавершение", ЭтотОбъект,
		 УчетнаяЗаписьMSExchange);
	ПоказатьВопрос(ОписаниеОповещения, НСтр("ru='Текущая структура папок будет дополнена папками из MS Exchange."
"Продолжить?';en='The current folder structure will be supplemented with folders from MS Exchange."
"Continue?'"), РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПапкиMSExchangeЗавершение(Ответ, УчетнаяЗаписьMSExchange) Экспорт
	Если Ответ = КодВозвратаДиалога.Да Тогда
		СтрОшибка = ДобавитьПапкиMSExchangeНаСервере(УчетнаяЗаписьMSExchange);
		Если ТипЗнч(СтрОшибка) = Тип("Строка") И ЗначениеЗаполнено(СтрОшибка)  Тогда
			ПоказатьПредупреждение(, СтрОшибка);
		КонецЕсли;
		Элементы.Список.Обновить();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ДобавитьПапкиMSExchangeНаСервере(УчетнаяЗаписьMSExchange)
	Если Не ЗначениеЗаполнено(УчетнаяЗаписьMSExchange) Тогда
		Возврат НСтр("ru='Не указана учетная запись MS Exchange!'");
	КонецЕсли;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ ПЕРВЫЕ 1 РАЗРЕШЕННЫЕ
	|	СтруктурыПапокMSExchange.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.CRM_СтруктурыПапокMSExchange КАК СтруктурыПапокMSExchange
	|ГДЕ
	|	СтруктурыПапокMSExchange.СерверMSExchange = &СерверMSExchange
	|	И СтруктурыПапокMSExchange.УчетнаяЗапись = &УчетнаяЗапись
	|");
	Запрос.УстановитьПараметр("СерверMSExchange", УчетнаяЗаписьMSExchange.СерверMSExchange);
	Запрос.УстановитьПараметр("УчетнаяЗапись", УчетнаяЗаписьMSExchange);
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат НСтр("ru='Для учетной записи электронной почты '") + """" + Строка(CRM_Владелец) + """ "
			+ Символы.ПС + НСтр("ru='структура папок MS Exchange еще не была загружена с сервера!'");
		//
	КонецЕсли;
	
	Справочники.CRM_СтруктурыПапокMSExchange.ДобавитьПапкиMSExchangeВСправочникПапкиЭлектронныхПисем(CRM_Владелец,
		 УчетнаяЗаписьMSExchange,
		 УчетнаяЗаписьMSExchange.СерверMSExchange);
	
	Возврат Неопределено;
КонецФункции

#КонецОбласти
