#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ CRM_ЛицензированиеЭкспортныеМетоды.ПодсистемаCRMИспользуется() Тогда
		CRM_ЛицензированиеЭкспортныеМетоды.ВывестиУведомлениеОНедоступности(НСтр("ru = 'форму настройки интеграции'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	CRM_ЛицензированиеЭкспортныеМетоды.ПолучитьЗащищеннуюОбработку().
		ИнтеграцииСИнтернетМагазинамиПриСозданииНаСервере(ЭтотОбъект, Отказ);
	
	Если Объект.Ссылка.Пустая() Тогда
		Параметры.Свойство("ТипИнтернетМагазина", Объект.ТипИнтернетМагазина);
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	МАКСИМУМ(CRM_ИнтеграцииСИнтернетМагазинами.Код) КАК Код
		                      |ИЗ
		                      |	ПланОбмена.CRM_ИнтеграцииСИнтернетМагазинами КАК CRM_ИнтеграцииСИнтернетМагазинами");
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Объект.Код = Выборка.Код + 1;
		КонецЕсли;
	КонецЕсли;
		
	Логотип = ПоместитьВоВременноеХранилище(CRM_ИнтеграцияСИнтернетМагазинами.КартинкаСервиса(
		Новый Структура("ТипИнтернетМагазина", Объект.ТипИнтернетМагазина), "Картинка_128"), УникальныйИдентификатор);
		
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(CRM_ИнтеграцияСИнтернетМагазинами.ТекстЗаголовка(Объект.ТипИнтернетМагазина));
	ТекстЗаголовка = СериализаторXDTO.ПрочитатьJSON(ЧтениеJSON, Тип("ФорматированнаяСтрока"));

	УправлениеВидимостьюЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	СтруктураНастроек = ТекущийОбъект.ХранилищеНастроек.Получить();
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ХранилищеНастроек = Новый ХранилищеЗначения(СтруктураНастроек);
	ТекущийОбъект.ДополнительныеСвойства.Вставить("ЭтоНовый", НЕ ЗначениеЗаполнено(ТекущийОбъект.Ссылка));
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	Если ТекущийОбъект.ДополнительныеСвойства.ЭтоНовый Тогда
		CRM_ИнтеграцияСИнтернетМагазинами.НачальнаяРегистрацияДанных(ТекущийОбъект.Ссылка);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	Если Записать() Тогда
		Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Отменить(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Настройка(Команда)
	Если ЗначениеЗаполнено(Объект.ТипИнтернетМагазина) Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("НастройкаЗавершение", ЭтотОбъект);
		ОткрытьФорму("Обработка.CRM_ИнтеграцияСМагазином" + Строка(Объект.ТипИнтернетМагазина) 
			+ ".Форма.ФормаНастройки", СтруктураНастроек,
				ЭтотОбъект, , , , ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Модифицированность = Истина;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не выбран тип магазина!'"));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НастройкаЗавершение(Результат, ДопПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		СтруктураНастроек = Результат;
		Объект.Включена = Истина;
		УправлениеВидимостьюЭлементов();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Отключить(Команда)
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтключитьЗавершение", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Интеграция с магазином будет отключена,
		| с удалением всех сделанных настроек.
                                             |Продолжить?'"), РежимДиалогаВопрос.ОКОтмена, , , НСтр("ru = 'Отключение интеграции с магазином'"));
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьЗавершение(Результат, ДопПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.ОК Тогда
		СтруктураНастроек = Неопределено;
		УправлениеВидимостьюЭлементов();
		Если НЕ Объект.Ссылка.Пустая() Тогда
			Записать();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НастроитьРасписание(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.УникальныйИдентификаторЗадания) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Интеграция с магазином не записана,
			| настройка расписания недоступна!';'"));
		Возврат;
	КонецЕсли;
	Расписание = ПолучитьРасписаниеНаСервере(Объект.УникальныйИдентификаторЗадания);
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(Расписание);
	ОписаниеОповещения = Новый ОписаниеОповещения("НастроитьРасписаниеЗавершение", ЭтотОбъект);
	Диалог.Показать(ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура НастроитьРасписаниеЗавершение(Расписание, ДополнительныеПараметры) Экспорт
	Если Расписание <> Неопределено Тогда
		ЗаписатьРасписаниеНаСервере(Объект.УникальныйИдентификаторЗадания, Расписание, Объект.Включена);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеВидимостьюЭлементов()
	Элементы.Настройка.Заголовок = ?(СтруктураНастроек = Неопределено, НСтр("ru = 'Подключить'"), НСтр("ru = 'Изменить'"));
	Элементы.Отключить.Видимость = (СтруктураНастроек <> Неопределено);
КонецПроцедуры

&НаСервере
Функция ЗапуститьОбменНаСервере(УникальныйИдентификаторЗадания)
	СписокЗаданий = РегламентныеЗаданияСервер.НайтиЗадания(Новый Структура("Ключ", Объект.УникальныйИдентификаторЗадания));
	Результат = РегламентныеЗаданияСлужебный.ВыполнитьРегламентноеЗаданиеВручную(СписокЗаданий[0].УникальныйИдентификатор);
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ЗапуститьОбмен(Команда)
	Если Модифицированность И НЕ Записать() Тогда
		Возврат;
	КонецЕсли;

	ПараметрыВыполнения = ЗапуститьОбменНаСервере(Объект.УникальныйИдентификаторЗадания);
	Если ПараметрыВыполнения.ЗапускВыполнен Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Обмен с магазином запущен.'"));
		
		ИдентификаторФоновогоЗадания = ПараметрыВыполнения.ИдентификаторФоновогоЗадания;
		
		ПодключитьОбработчикОжидания(
		"СообщитьОбОкончанииОбмена", 1);
	ИначеЕсли ПараметрыВыполнения.ПроцедураУжеВыполняется Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Обмен с магазином уже выполняется.'"));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СообщитьОбОкончанииОбмена()
	
	Если НЕ ФоновоеЗаданиеВыполняется() Тогда
		ОтключитьОбработчикОжидания("СообщитьОбОкончанииОбмена");
		Прочитать();
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Обмен с магазином завершен.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ФоновоеЗаданиеВыполняется()
	
	НовыйУникальныйИдентификатор = Новый УникальныйИдентификатор(ИдентификаторФоновогоЗадания);
	Отбор = Новый Структура;
	Отбор.Вставить("УникальныйИдентификатор", НовыйУникальныйИдентификатор);
	
	МассивФоновыхЗаданий = ФоновыеЗадания.ПолучитьФоновыеЗадания(Отбор);
	Если МассивФоновыхЗаданий.Количество() > 0 Тогда
		Возврат НЕ ЗначениеЗаполнено(МассивФоновыхЗаданий[0].Конец);
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьРасписаниеНаСервере(УникальныйИдентификаторЗадания)
	Если ЗначениеЗаполнено(УникальныйИдентификаторЗадания) Тогда
		СписокЗаданий = РегламентныеЗаданияСервер.НайтиЗадания(Новый Структура("Ключ", УникальныйИдентификаторЗадания));
		Если СписокЗаданий.Количество() > 0 Тогда
			Возврат СписокЗаданий[0].Расписание;
		Иначе
			Возврат Новый РасписаниеРегламентногоЗадания;
		КонецЕсли;
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Процедура ЗаписатьРасписаниеНаСервере(УникальныйИдентификаторЗадания, Расписание, Включен)
	Если ЗначениеЗаполнено(УникальныйИдентификаторЗадания) Тогда
		СписокЗаданий = РегламентныеЗаданияСервер.НайтиЗадания(Новый Структура("Ключ", УникальныйИдентификаторЗадания));
		Для Каждого Задание Из СписокЗаданий Цикл
			ПараметрыЗадания = Новый Структура("Использование", (Строка(Расписание) <> "один день; один раз в день" И Включен));
			ПараметрыЗадания.Вставить("Расписание", Расписание);
			РегламентныеЗаданияСервер.ИзменитьЗадание(Задание, ПараметрыЗадания);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЖурналРегистрации(Команда)
	
	Отбор = Новый Структура;
	МассивСобытий = Новый Массив;
	МассивСобытий.Добавить("Обмен с интернет-магазином.Начало обмена");
	МассивСобытий.Добавить("Обмен с интернет-магазином.Завершение обмена");
	МассивСобытий.Добавить("Обмен с интернет-магазином.Выгрузка номенклатуры");
	МассивСобытий.Добавить("Обмен с интернет-магазином.Загрузка номенклатуры");
	МассивСобытий.Добавить("Обмен с интернет-магазином.Загрузка заказов");
	МассивСобытий.Добавить("Обмен с интернет-магазином.Выгрузка статусов заказов");
	Отбор.Вставить("СобытиеЖурналаРегистрации", МассивСобытий);
	ОткрытьФорму("Обработка.ЖурналРегистрации.Форма", Отбор, ЭтотОбъект, , , , ,
		 РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

#КонецОбласти 
