
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтоОтправкаИзИнтереса = Параметры.Свойство("ВходящиеПисьмаВИнтересе");
	
	Если ЭтоОтправкаИзИнтереса Или Параметры.Свойство("СвязанныйИнтерес") Тогда
		
		ВходящиеПисьмаВИнтересе = ?(ЭтоОтправкаИзИнтереса, Параметры.ВходящиеПисьмаВИнтересе, 
			ВходящиеПисьмаВИнтересеНаСервере(Параметры.СвязанныйИнтерес));
		Элементы.ОтборПоПисьмамВИнтересе.Видимость = Истина;
		Элементы.УчетнаяЗапись.Видимость = Истина;
		ОтборПоПисьмамВИнтересе = Истина;
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			СписокПисем,
			"Ссылка",
			ВходящиеПисьмаВИнтересе,
			ВидСравненияКомпоновкиДанных.ВСписке,
			,
			Истина);
			
	КонецЕсли;
	
	Если Параметры.Свойство("УчетнаяЗапись") Тогда
	
		УчетнаяЗапись = Параметры.УчетнаяЗапись;
		ОтборПоУчетнойЗаписи = Не ОтборПоПисьмамВИнтересе;
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			СписокПисем,
			"УчетнаяЗапись",
			УчетнаяЗапись,
			ВидСравненияКомпоновкиДанных.Равно, ,
			ОтборПоУчетнойЗаписи);
			
	КонецЕсли;
	
	Если Параметры.Свойство("СписокАдресов") Тогда
	
		СписокАдресов = Параметры.СписокАдресов;
		ОтборПоПолучателямПисьма = Не ОтборПоПисьмамВИнтересе;
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			СписокПисем,
			"ОтправительАдрес",
			СписокАдресов,
			ВидСравненияКомпоновкиДанных.ВСписке, ,
			ОтборПоПолучателямПисьма);
			
	КонецЕсли;
	
	ЗапрещеноОтображениеНебезопасногоСодержимого = Взаимодействия.ЗапрещеноОтображениеНебезопасногоСодержимогоВПисьмах();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборПоПолучателямПисьмаПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		СписокПисем,
		"ОтправительАдрес",
		СписокАдресов,
		ВидСравненияКомпоновкиДанных.ВСписке,
		,
		ОтборПоПолучателямПисьма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоУчетнойЗаписиПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		СписокПисем,
		"УчетнаяЗапись",
		УчетнаяЗапись,
		ВидСравненияКомпоновкиДанных.Равно, ,
		ОтборПоУчетнойЗаписи);
		
		Элементы.УчетнаяЗапись.Видимость = Не ОтборПоУчетнойЗаписи;
		
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоПисьмамВИнтересеПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		СписокПисем,
		"Ссылка",
		ВходящиеПисьмаВИнтересе,
		ВидСравненияКомпоновкиДанных.ВСписке, ,
		ОтборПоПисьмамВИнтересе);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокПисем

&НаКлиенте
Процедура СписокПисемПриАктивизацииСтроки(Элемент)
	ОбработчикОжиданияСписокПисемПриАктивизацииСтроки();
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОжиданияСписокПисемПриАктивизацииСтроки()
	
	ТекущееПисьмо = Элементы.СписокПисем.ТекущаяСтрока;
	
	Если ТекущееПисьмо = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекстПисьма = СформироватьОписаниеТекущегоПисьма(ТекущееПисьмо);
	
	Если ТекстПисьма <> Неопределено Тогда
		CRM_ВзаимодействияКлиентСервер.ДобавитьНеобходимыеТэгиHTML(ТекстПисьма);
		ОписаниеПисьма = ТекстПисьма;
	КонецЕсли;
	
		Элементы.ПредупреждениеБезопасности.Видимость = Не ЗапрещеноОтображениеНебезопасногоСодержимого
			И ЕстьНебезопасноеСодержимое И Не ВключитьНебезопасноеСодержимое;
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ВходящиеПисьмаВИнтересеНаСервере(Ссылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	CRM_ЖурналДокументов.Объект КАК Объект
		|ИЗ
		|	РегистрСведений.CRM_ЖурналДокументов КАК CRM_ЖурналДокументов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭлектронноеПисьмоВходящее КАК ЭлектронноеПисьмоВходящее
		|		ПО CRM_ЖурналДокументов.Объект = ЭлектронноеПисьмоВходящее.Ссылка
		|ГДЕ
		|	CRM_ЖурналДокументов.CRM_Интерес = &Ссылка
		|	И ТИПЗНАЧЕНИЯ(CRM_ЖурналДокументов.Объект) = ТИП(Документ.ЭлектронноеПисьмоВходящее)";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Список = Новый СписокЗначений;
	Список.ЗагрузитьЗначения(РезультатЗапроса.ВыгрузитьКолонку("Объект"));
	Возврат Список;
	
КонецФункции

&НаСервере
Функция СформироватьОписаниеТекущегоПисьма(ПисьмоСсылка)
	
	// Проверим доступность письма по RLS.
	Попытка
		СсылкаДоступна = ПисьмоСсылка.Дата;
	Исключение
		// письмо недоступно
		
		Начало = "
		|<html>
		|<head>  
		|<META http-equiv=Content-Type content=""text/html; charset=utf-8"">
		|<META content=""MSHTML 6.00.2800.1400"" name=GENERATOR>
		|<body scroll=""auto"">";
		
		Описание = НСтр("ru = 'Письмо недоступно из-за ограничения прав доступа'");
		
		Конец = "
		|</body>
		|</html>";
		
		Текст = Начало + Описание + Конец;
		
		Возврат Текст;
		
	КонецПопытки;
	
	Если ПисьмоСсылка = Неопределено Или ТипЗнч(ПисьмоСсылка) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Предмет = Взаимодействия.ПолучитьЗначениеПредмета(ПисьмоСсылка);
	ЭтоПисьмоРассылки = (ТипЗнч(ПисьмоСсылка) = Тип("ДокументСсылка.ЭлектронноеПисьмоИсходящее")
						И ЗначениеЗаполнено(Предмет)
						И ТипЗнч(Предмет) = Тип("ДокументСсылка.CRM_РассылкаЭлектронныхПисем"));
	
	ЕстьНебезопасноеСодержимое = Ложь;
	ВключитьНебезопасноеСодержимое = Истина;
	
	Если ПисьмоСсылка.ТипТекста = Перечисления.ТипыТекстовЭлектронныхПисем.ПростойТекст Тогда
		Текст = СтрЗаменить(ПисьмоСсылка.Текст, Символы.ПС, "<br>");
		CRM_ВзаимодействияКлиентСервер.ДобавитьНеобходимыеТэгиHTML(Текст);
	Иначе
		НавигационнаяСсылкаИнформационнойБазы = ПолучитьНавигационнуюСсылкуИнформационнойБазы();
		ПозицияПараметров = СтрНайти(НавигационнаяСсылкаИнформационнойБазы, "?");		
		Если ПозицияПараметров > 0 Тогда
			НавигационнаяСсылкаИнформационнойБазы = Лев(НавигационнаяСсылкаИнформационнойБазы, ПозицияПараметров - 1);
		КонецЕсли;
		Для Каждого ЭлементСписка Из ИдентификаторыКартинокПисьма Цикл
			НавигационнаяСсылка = СтрЗаменить(ЭлементСписка.Значение.НавигационнаяСсылка, НавигационнаяСсылкаИнформационнойБазы 
				+ "/",
				 "");
			Если ЭтоАдресВременногоХранилища(НавигационнаяСсылка) Тогда
				УдалитьИзВременногоХранилища(НавигационнаяСсылка);
			КонецЕсли;
		КонецЦикла;
		ИдентификаторыКартинокПисьма.Очистить();
		Если ЭтоПисьмоРассылки И Не ПисьмоСсылка.CRM_РассылкаИзменена Тогда
			
			Текст = CRM_Взаимодействия.ВставитьКартинкиВТекстHTMLBase64(Предмет.ТекстHTML, Предмет);
			CRM_Взаимодействия.ЗаполнитьАвтотекстПоПисьму(Текст, ПисьмоСсылка);
			
		Иначе
			
			Текст = CRM_Взаимодействия.ВставитьКартинкиВТекстHTMLBase64(ПисьмоСсылка.ТекстHTML, ПисьмоСсылка);
			
		КонецЕсли;
		
		Если ТипЗнч(ПисьмоСсылка) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
			Если ПисьмоСсылка.CRM_ВключитьНебезопасноеСодержимое Тогда
				
				ВключитьНебезопасноеСодержимое = Не ЗапрещеноОтображениеНебезопасногоСодержимого;
				
			Иначе
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	ИСТИНА
				|ИЗ
				|	РегистрСведений.CRM_ДоверенныеАдресаЭлектроннойПочты КАК ДоверенныеАдреса
				|ГДЕ
				|	ДоверенныеАдреса.АдресЭлектроннойПочты = &АдресЭлектроннойПочты";
				
				Запрос.УстановитьПараметр("АдресЭлектроннойПочты", ПисьмоСсылка.ОтправительАдрес);
				РезультатЗапроса = Запрос.Выполнить();
				
				ВключитьНебезопасноеСодержимое = Не ЗапрещеноОтображениеНебезопасногоСодержимого И Не РезультатЗапроса.Пустой();
				
			КонецЕсли;
			
			// Коррекция ошибочного HTML.
			ПозицияЗакрывающегоТега = СтрНайти(Текст, "</html>", НаправлениеПоиска.СКонца);
			Если ПозицияЗакрывающегоТега > 0 Тогда
				Текст = Лев(Текст, ПозицияЗакрывающегоТега + СтрДлина("</html>"));
			КонецЕсли;
			
			Взаимодействия.ОтфильтроватьСодержимоеТекстаHTML(
				Текст, ПисьмоСсылка.Кодировка, Не ВключитьНебезопасноеСодержимое, ЕстьНебезопасноеСодержимое);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЭтоПисьмоРассылки И Не ПисьмоСсылка.CRM_РассылкаИзменена Тогда
		табВложения = CRM_УправлениеЭлектроннойПочтой.ПолучитьВложенияЭлектронногоПисьма(Предмет);
	Иначе
		табВложения = CRM_УправлениеЭлектроннойПочтой.ПолучитьВложенияЭлектронногоПисьма(ПисьмоСсылка);
	КонецЕсли;
	
	Описание = "";
	//
	ОбъектМетаданных = Метаданные.НайтиПоТипу(ТипЗнч(ПисьмоСсылка));
	Если ОбъектМетаданных = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат Текст;
	
КонецФункции

&НаКлиенте
Процедура ПредупреждениеОНебезопасномСодержимомОбработкаНавигационнойСсылки(Элемент, 
	НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ВключитьНебезопасноеСодержимое" Тогда
		СтандартнаяОбработка = Ложь;
		ВключитьНебезопасноеСодержимое = Истина;
		ЗаписатьПризнакВключитьНебезопасноеСодержимое(Элементы.СписокПисем.ТекущаяСтрока);
		ПринудительнаяАктивизацияСтроки = Истина;
		ОбработчикОжиданияСписокПисемПриАктивизацииСтроки();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьПризнакВключитьНебезопасноеСодержимое(ПисьмоСсылка)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПисьмоОбъект = ПисьмоСсылка.ПолучитьОбъект();
	ПисьмоОбъект.CRM_ВключитьНебезопасноеСодержимое = Истина;
	ПисьмоОбъект.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьСодержимоеДляВсехПисемОтправителяОбработкаНавигационнойСсылки(Элемент,
	 НавигационнаяСсылкаФорматированнойСтроки,
	 СтандартнаяОбработка)
	
	ПредупреждениеОНебезопасномСодержимомОбработкаНавигационнойСсылки(Элемент,
		 НавигационнаяСсылкаФорматированнойСтроки,
		 СтандартнаяОбработка);
	ДобавитьВДоверенныеАдреса(Элементы.СписокПисем.ТекущаяСтрока);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДобавитьВДоверенныеАдреса(ПисьмоСсылка)
	
	НоваяЗапись = РегистрыСведений.CRM_ДоверенныеАдресаЭлектроннойПочты.СоздатьМенеджерЗаписи();
	НоваяЗапись.АдресЭлектроннойПочты = ПисьмоСсылка.ОтправительАдрес;
	НоваяЗапись.Записать();
	
КонецПроцедуры

#КонецОбласти