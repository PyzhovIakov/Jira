// @strict-types

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	АктПремииПоставщикаЛокализация.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, СтандартнаяОбработка);
	
	ПараметрыВыбораСтатейИАналитик = Документы.АктПремииПоставщика.ПараметрыВыбораСтатейИАналитик();
	ДоходыИРасходыСервер.ОбработкаЗаполнения(ЭтотОбъект, ПараметрыВыбораСтатейИАналитик);
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("ДокументСсылка.НачислениеРетроБонусовПоставщика") Тогда
		
		ДокументНачисления = ДанныеЗаполнения; // ДокументСсылка.НачислениеРетроБонусовПоставщика
		ЗаполнитьПоДаннымДокументаНачислений(ДокументНачисления, СтандартнаяОбработка);
		ВзаиморасчетыСервер.ОбработкаЗаполнения(ЭтотОбъект, ДокументНачисления);
		
	КонецЕсли;
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ПараметрыВыбораСтатейИАналитик = Документы.АктПремииПоставщика.ПараметрыВыбораСтатейИАналитик();
	ДоходыИРасходыСервер.ОбработкаПроверкиЗаполнения(
		ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, ПараметрыВыбораСтатейИАналитик);
	
	АктПремииПоставщикаЛокализация.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда
		
		ТекстСообщения = НСтр("ru = 'Запрещено изменение документа в подчиненном узле обмена'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,,, Отказ);
		
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	СуммаВзаиморасчетов = РетроБонусы.Итог("СуммаВзаиморасчетов");
	
	ОбщегоНазначенияУТ.ЗаполнитьИдентификаторыДокумента(ЭтотОбъект);
	
	
	ПараметрыВыбораСтатейИАналитик = Документы.АктПремииПоставщика.ПараметрыВыбораСтатейИАналитик();
	ДоходыИРасходыСервер.ПередЗаписью(ЭтотОбъект, ПараметрыВыбораСтатейИАналитик);
	
	Если ЭтоНовый()
	   И НЕ ЗначениеЗаполнено(Номер) Тогда
		УстановитьНовыйНомер();
	КонецЕсли;
	
	ВзаиморасчетыСервер.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи);
	
	ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	АктПремииПоставщикаЛокализация.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ПриЗаписиДокумента(ЭтотОбъект, Отказ);
	
	АктПремииПоставщикаЛокализация.ПриЗаписи(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеДокументов.ОбработкаПроведенияДокумента(ЭтотОбъект, Отказ);
	
	АктПремииПоставщикаЛокализация.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеДокументов.ОбработкаУдаленияПроведенияДокумента(ЭтотОбъект, Отказ);
	
	АктПремииПоставщикаЛокализация.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ВзаиморасчетыСервер.ПриКопировании(ЭтотОбъект);
	
	ОбщегоНазначенияУТ.ОчиститьИдентификаторыДокумента(ЭтотОбъект);
	
	ИнициализироватьДокумент();
	
	ВалютаРеглУчета = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Организация);
	Для Каждого СтрокаТЧ Из РетроБонусы Цикл
		
		ПараметрыРасчета = Новый Структура;
		ПараметрыРасчета.Вставить("Валюта", СтрокаТЧ.ВалютаБонуса);
		ПараметрыРасчета.Вставить("КурсЧислитель", СтрокаТЧ.КурсЧислительВзаиморасчетов);
		ПараметрыРасчета.Вставить("КурсЗнаменатель", СтрокаТЧ.КурсЗнаменательВзаиморасчетов);
		ПараметрыРасчета.Вставить("ВалютаВзаиморасчетов", ВалютаВзаиморасчетов);
		
		СтрокаТЧ.СуммаВзаиморасчетов = РетроБонусыКлиентСервер.ПересчитатьСуммуВзаиморасчетовВСтроке(
			ПараметрыРасчета, СтрокаТЧ.СуммаБонуса, ВалютаРеглУчета);
		
	КонецЦикла;
	
	АктПремииПоставщикаЛокализация.ПриКопировании(ЭтотОбъект, ОбъектКопирования);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьДокумент()
	
	Ответственный = Пользователи.ТекущийПользователь();
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	
	Если ПолучитьФункциональнуюОпцию("НеИспользоватьНесколькоВалют") Тогда
		
		ВалютаВзаиморасчетов = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Организация);
		
	КонецЕсли;
	
КонецПроцедуры

#Область ВводНаОсновании

// Параметры:
//  ДокументНачислений - ДокументСсылка.НачислениеРетроБонусовПоставщика
//  СтандартнаяОбработка - Булево - 
//
Процедура ЗаполнитьПоДаннымДокументаНачислений(ДокументНачислений, СтандартнаяОбработка)
	
	ДанныеЗаполнения = Документы.НачислениеРетроБонусовПоставщика.ДанныеДокументаНачисления(ДокументНачислений);
	
	ДанныеШапки = ДанныеЗаполнения.Шапка;
	ДанныеСтрок = ДанныеЗаполнения.ДанныеСтрок;
	Контрагенты = ДанныеЗаполнения.Контрагенты;
	
	ДанныеШапки.Следующий();
	ТипБонуса = ДанныеШапки.ТипБонуса;
	
	Если Контрагенты.Количество() > 1
	   И ТипБонуса = Перечисления.ТипыРетроБонусовПоставщиков.Закупки Тогда
		
		ТекстУведомления = НСтр("ru = 'В документе начисления указаны несколько контрагентов. Невозможно определить контрагента для создания акта.'");
		ВызватьИсключение ТекстУведомления;
		
	Иначе
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеШапки);
		ВалютаВзаиморасчетов = ДанныеШапки.Валюта;
		
		Если ТипБонуса = Перечисления.ТипыРетроБонусовПоставщиков.Закупки
		   И Контрагенты.Количество() > 0 Тогда
			
			Контрагенты.Следующий();
			Контрагент = Контрагенты.Контрагент;
			
		КонецЕсли;
		
		Пока ДанныеСтрок.Следующий() Цикл
			
			НоваяСтрока = РетроБонусы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеСтрок);
			НоваяСтрока.СуммаБонуса = ДанныеСтрок.Сумма;
			НоваяСтрока.СуммаВзаиморасчетов = ДанныеСтрок.Сумма;
			НоваяСтрока.ВалютаБонуса = ДанныеШапки.Валюта;
			НоваяСтрока.КурсЧислительВзаиморасчетов = 1;
			НоваяСтрока.КурсЗнаменательВзаиморасчетов = 1;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли