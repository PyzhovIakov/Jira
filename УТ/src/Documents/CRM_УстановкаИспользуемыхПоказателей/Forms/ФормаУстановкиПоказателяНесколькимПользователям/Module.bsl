
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВремяНачалаЗамера = ОценкаПроизводительности.НачатьЗамерВремени();
	
	//ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	Если Параметры.Свойство("ПериодПланирования") Тогда
		Объект.НачалоПериодаПланирования = Параметры.ПериодПланирования.ДатаНачала;
		Объект.КонецПериодаПланирования = Параметры.ПериодПланирования.ДатаОкончания;
		Если Месяц(Объект.НачалоПериодаПланирования) = Месяц(Объект.КонецПериодаПланирования) Тогда
			Объект.ВидПериода = Перечисления.Периодичность.Месяц;
		ИначеЕсли Месяц(Объект.КонецПериодаПланирования) - Месяц(Объект.НачалоПериодаПланирования) = 2 Тогда
			Объект.ВидПериода = Перечисления.Периодичность.Квартал;
		Иначе
			Объект.ВидПериода = Перечисления.Периодичность.Год;
		КонецЕсли;
	Иначе
		Объект.НачалоПериодаПланирования = НачалоМесяца(CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса());
		Объект.КонецПериодаПланирования = КонецМесяца(CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса());
		Объект.ВидПериода = Перечисления.Периодичность.Месяц;
	КонецЕсли;
	
	Объект.Автор = Пользователи.ТекущийПользователь();
	
	Если Параметры.Свойство("Исполнитель") Тогда
		СписокПользователей = Параметры.Исполнитель;
	КонецЕсли;
	
	Если Параметры.Свойство("Показатель") Тогда
		Объект.Показатель = Параметры.Показатель;
	КонецЕсли;
	
	Если Объект.Показатель.ЦелевойТренд = "Интервал" Тогда
		Элементы.ЗначениеПоказателяМаксимум.Видимость = Истина;
	КонецЕсли;
	
	Попытка
		Объект.ПредставлениеПериодаПланирования = ПредставлениеПериода(
			Объект.НачалоПериодаПланирования, КонецДня(Объект.КонецПериодаПланирования));
	Исключение
		Объект.ПредставлениеПериодаПланирования = "";
	КонецПопытки;
	
	CRM_СобытияФорм.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
	Элементы.ДатаНазад.Доступность		= Ложь;
	Элементы.ДатаВперед.Доступность		= Ложь;
	Элементы.ВыборПериода.Доступность	= Ложь;
	
	Если Не РольДоступна("ПолныеПрава")
			И Объект.Исполнитель = Пользователи.ТекущийПользователь() Тогда
		Элементы.ДатаНазад.Доступность			= Ложь;
		Элементы.ДатаВперед.Доступность			= Ложь;
		Элементы.ВыборПериода.Доступность		= Ложь;
		Элементы.ЗначениеПоказателя.Доступность	= Ложь;
		Элементы.Дата.Доступность				= Ложь;
	КонецЕсли;
	
	CRM_ОбщегоНазначенияСервер.ЗакончитьЗамерВремениСозданияФормы(ЭтотОбъект, ВремяНачалаЗамера);
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	CRM_ОбщегоНазначенияКлиент.НачатьЗамерВремениОткрытияФормы(ЭтотОбъект);
	
	УстановитьЗаголовокФормы();
	
	ДоступностьПериодаДляУстановкиПоказателя();
	
КонецПроцедуры // ПриОткрытии()

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	CRM_СобытияФормКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПоказательПриИзменении(Элемент)
	
	УстановитьЗаголовокФормы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДатаВперед(Команда)
	
	Если Объект.ВидПериода = ПредопределенноеЗначение("Перечисление.Периодичность.Год") Тогда
		Месяцев = 12;
	ИначеЕсли Объект.ВидПериода = ПредопределенноеЗначение("Перечисление.Периодичность.Квартал") Тогда
		Месяцев = 3;
	Иначе
		Месяцев = 1;
	КонецЕсли;
	
	Объект.НачалоПериодаПланирования	= ДобавитьМесяц(Объект.НачалоПериодаПланирования, Месяцев);
	Объект.КонецПериодаПланирования		= КонецМесяца(ДобавитьМесяц(Объект.КонецПериодаПланирования, Месяцев));
	
	Объект.ПредставлениеПериодаПланирования = ПредставлениеПериода(
		Объект.НачалоПериодаПланирования, КонецДня(Объект.КонецПериодаПланирования));
	
	ДоступностьПериодаДляУстановкиПоказателя();
	
КонецПроцедуры // ДатаВперед()

&НаКлиенте
Процедура ДатаНазад(Команда)
	
	Если Объект.ВидПериода = ПредопределенноеЗначение("Перечисление.Периодичность.Год") Тогда
		Месяцев = 12;
	ИначеЕсли Объект.ВидПериода = ПредопределенноеЗначение("Перечисление.Периодичность.Квартал") Тогда
		Месяцев = 3;
	Иначе
		Месяцев = 1;
	КонецЕсли;
	
	Объект.НачалоПериодаПланирования	= ДобавитьМесяц(Объект.НачалоПериодаПланирования, -Месяцев);
	Объект.КонецПериодаПланирования		= КонецМесяца(ДобавитьМесяц(Объект.КонецПериодаПланирования, -Месяцев));
	
	Объект.ПредставлениеПериодаПланирования = ПредставлениеПериода(
		Объект.НачалоПериодаПланирования, КонецДня(Объект.КонецПериодаПланирования));
	
	ДоступностьПериодаДляУстановкиПоказателя();
	
КонецПроцедуры // ДатаНазад()

&НаКлиенте
Процедура ВыборПериода(Команда)
	
	ПараметрВыбора = Новый Структура(
		"НачалоПериода, КонецПериода",
		Объект.НачалоПериодаПланирования, Объект.КонецПериодаПланирования);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыборПериодаЗавершение", ЭтотОбъект);
	
	ОткрытьФорму(
		"ОбщаяФорма.CRM_ВыборСтандартногоПериода",
		ПараметрВыбора, Элементы.ВыборПериода, , , , ОписаниеОповещения);
	
КонецПроцедуры // ВыборПериода()

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	CRM_СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтотОбъект, Команда);
	
КонецПроцедуры // Подключаемый_ВыполнитьПереопределяемуюКоманду()

&НаКлиенте
Процедура РаспределитьПоказатели(Команда)
	
	ИсполнителиМассив = Новый Массив;
	
	Для Каждого ТекущийПользовательСтрока Из СписокПользователей Цикл
		Если ТекущийПользовательСтрока.Пометка Тогда
			ИсполнителиМассив.Добавить(ТекущийПользовательСтрока.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Если ИсполнителиМассив.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр(
			"ru = 'Не выбраны пользователи, для которых нужно перенести показатель.';
			|en = 'The users for whom you want to transfer the metric have not been selected'"), , "СписокПользователей");
		Возврат;
	КонецЕсли;
	
	РаспределитьПоказателиНаСервере(ИсполнителиМассив);
	
	Закрыть();
	
КонецПроцедуры // РаспределитьПоказатели()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьЗаголовокФормы()
	
	Заголовок = НСтр("ru='Установка показателя: ';en='Set indicator: '") + Объект.Показатель;
	
	Если CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.Показатель, "ЦелевойТренд") = "Интервал" Тогда
		Элементы.ЗначениеПоказателяМаксимум.Видимость = Истина;
		Элементы.ЗначениеПоказателя.Заголовок = Элементы.ЗначениеПоказателя.Заголовок + НСтр("ru=' от';en=' from'");
		Элементы.ТрендПоказателя.Видимость = Ложь;
	КонецЕсли;
	
	Если CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.Показатель, "КратностьЗначений") = "НеИзменять" Тогда
		ЕдиницаИзмерения = CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.Показатель, "ЕдиницаИзмерения");
	ИначеЕсли CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.Показатель, "КратностьЗначений") = "Тысячи" Тогда
		ЕдиницаИзмерения = НСтр("ru='тыс. ';en='ths. '")
			+ CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.Показатель, "ЕдиницаИзмерения");
	ИначеЕсли CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(
			Объект.Показатель, "КратностьЗначений") = "Миллионы" Тогда
		ЕдиницаИзмерения = НСтр("ru='млн. ';en='mln. '") 
			+ CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.Показатель, "ЕдиницаИзмерения");
	КонецЕсли;
	
КонецПроцедуры // УстановитьЗаголовокФормы()

&НаСервере
Функция ДоступностьПериодаДляУстановкиПоказателя(Предупреждение = Неопределено)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	CRM_ИспользуемыеКлючевыеПоказатели.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрСведений.CRM_ИспользуемыеКлючевыеПоказатели КАК CRM_ИспользуемыеКлючевыеПоказатели
	|ГДЕ
	|	CRM_ИспользуемыеКлючевыеПоказатели.Показатель = &Показатель
	|	И CRM_ИспользуемыеКлючевыеПоказатели.Менеджер = &Менеджер
	|	И CRM_ИспользуемыеКлючевыеПоказатели.Регистратор <> &Регистратор
	|	И CRM_ИспользуемыеКлючевыеПоказатели.Период >= &НачалоПериода И CRM_ИспользуемыеКлючевыеПоказатели.Период <= &КонецПериода";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Запрос.УстановитьПараметр("Менеджер",		Объект.Исполнитель);
	Запрос.УстановитьПараметр("Показатель",		Объект.Показатель);
	Запрос.УстановитьПараметр("Регистратор",	Объект.Ссылка);
	
	Запрос.УстановитьПараметр("НачалоПериода",	Объект.НачалоПериодаПланирования);
	Запрос.УстановитьПараметр("КонецПериода",	Объект.КонецПериодаПланирования);
	
	Если Запрос.Выполнить().Пустой() Тогда
		Элементы.ДекорацияНадписьДоступностьПоказателя.Заголовок	= "";
		Элементы.ДекорацияНадписьДоступностьПоказателя.ЦветТекста	= WebЦвета.ЦветМорскойВолны;
		Элементы.ДекорацияНадписьДоступностьПоказателя.Видимость	= Ложь;
		
		Возврат Истина;
	Иначе
		Элементы.ДекорацияНадписьДоступностьПоказателя.ЦветТекста = WebЦвета.Кирпичный;
		
		Предупреждение = НСтр(
			"ru='В выбранном периоде показатель уже назначен!';
			|en='The indicator has already been assigned in the selected period!'");
		
		Элементы.ДекорацияНадписьДоступностьПоказателя.Заголовок = Предупреждение;
		Элементы.ДекорацияНадписьДоступностьПоказателя.Видимость = Истина;
		
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции // ДоступностьПериодаДляУстановкиПоказателя()

&НаКлиенте
Процедура ВыборПериодаЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.НачалоПериодаПланирования	= РезультатВыбора.НачалоПериода;
	Объект.КонецПериодаПланирования		= РезультатВыбора.КонецПериода;
	
	Объект.ВидПериода = РезультатВыбора.ПериодичностьКонтроля;
	Объект.ПредставлениеПериодаПланирования = РезультатВыбора.ПредставлениеПериода;
	
	ДоступностьПериодаДляУстановкиПоказателя();
	
КонецПроцедуры // ВыборПериодаЗавершение()

&НаСервере
Процедура РаспределитьПоказателиНаСервере(ИсполнителиМассив)
	
	ДатаДокумента = ТекущаяДатаСеанса();
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Пользователи.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втПользователи
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|	Пользователи.Ссылка В(&Исполнители)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	CRM_УстановкаИспользуемыхПоказателей.Ссылка КАК Ссылка,
	|	CRM_УстановкаИспользуемыхПоказателей.Исполнитель КАК Исполнитель
	|ПОМЕСТИТЬ втДокументыПоказателей
	|ИЗ
	|	Документ.CRM_УстановкаИспользуемыхПоказателей КАК CRM_УстановкаИспользуемыхПоказателей
	|ГДЕ
	|	CRM_УстановкаИспользуемыхПоказателей.Исполнитель В(&Исполнители)
	|	И CRM_УстановкаИспользуемыхПоказателей.НачалоПериодаПланирования = &НачалоПериодаПланирования
	|	И CRM_УстановкаИспользуемыхПоказателей.КонецПериодаПланирования = &КонецПериодаПланирования
	|	И CRM_УстановкаИспользуемыхПоказателей.Показатель = &Показатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПользователи.Ссылка КАК ПользовательСсылка,
	|	ЕСТЬNULL(втДокументыПоказателей.Ссылка, НЕОПРЕДЕЛЕНО) КАК ДокументСсылка
	|ИЗ
	|	втПользователи КАК втПользователи
	|		ЛЕВОЕ СОЕДИНЕНИЕ втДокументыПоказателей КАК втДокументыПоказателей
	|		ПО втПользователи.Ссылка = втДокументыПоказателей.Исполнитель";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Запрос.УстановитьПараметр("НачалоПериодаПланирования",	Объект.НачалоПериодаПланирования);
	Запрос.УстановитьПараметр("КонецПериодаПланирования",	НачалоДня(Объект.КонецПериодаПланирования));
	
	Запрос.УстановитьПараметр("Показатель",		Объект.Показатель);
	Запрос.УстановитьПараметр("Исполнители",	ИсполнителиМассив);
	
	РезультатВыборка = Запрос.Выполнить().Выбрать();
	
	Пока РезультатВыборка.Следующий() Цикл
		Если РезультатВыборка.ДокументСсылка = Неопределено Тогда
			ДокументОбъект = Документы.CRM_УстановкаИспользуемыхПоказателей.СоздатьДокумент();
			ДокументОбъект.Дата = ДатаДокумента;
		Иначе
			ДокументОбъект = РезультатВыборка.ДокументСсылка.ПолучитьОбъект();
		КонецЕсли;
		
		ДокументОбъект.ВидПериода					= Объект.ВидПериода;
		ДокументОбъект.НачалоПериодаПланирования	= Объект.НачалоПериодаПланирования;
		ДокументОбъект.КонецПериодаПланирования		= Объект.КонецПериодаПланирования;
		
		ДокументОбъект.Автор		= Объект.Автор;
		ДокументОбъект.Показатель	= Объект.Показатель;
		ДокументОбъект.Исполнитель	= РезультатВыборка.ПользовательСсылка;
		
		ДокументОбъект.ЗначениеПоказателя			= Объект.ЗначениеПоказателя;
		ДокументОбъект.ЗначениеПоказателяМаксимум	= Объект.ЗначениеПоказателяМаксимум;
		
		Попытка
			ДокументОбъект.ПредставлениеПериодаПланирования = ПредставлениеПериода(
				Объект.НачалоПериодаПланирования, КонецДня(Объект.КонецПериодаПланирования));
		Исключение
			ДокументОбъект.ПредставлениеПериодаПланирования = "";
		КонецПопытки;
		
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;
	
КонецПроцедуры // РаспределитьПоказателиНаСервере()

#КонецОбласти
