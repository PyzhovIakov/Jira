//@strict-types

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// Задает расширенные настройки отчета
//
// Параметры:
//   Настройки - см. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов.Настройки.
//   НастройкиОтчета - см. ВариантыОтчетов.ОписаниеОтчета.
//
Процедура НастроитьВариантыОтчета(Настройки, НастройкиОтчета) Экспорт
	
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РасчетРетроБонусовКлиентов);
	ОписаниеОтчета.ВидимостьПоУмолчанию = Истина;
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, ОписаниеОтчета, Ложь);
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	
КонецПроцедуры

#КонецОбласти

#Область КомандыПодменюОтчеты

// Добавляет команду отчета в список команд.
// 
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   КлючВарианта - Строка -
//   
//	Возвращаемое значение:
//		СтрокаТаблицыЗначений - описание созданной команды.
//
Функция ДобавитьКомандуРасчетРетроБонусовКлиентов(КомандыОтчетов, КлючВарианта = "") Экспорт
	
	Если ПравоДоступа("Просмотр", Метаданные.Отчеты.РасчетРетроБонусовКлиентов) Тогда
		
		КомандаОтчет = КомандыОтчетов.Добавить();
		
		Представление = НСтр("ru = 'Расчет ретро-бонусов клиентов'");
		КомандаОтчет.Менеджер = Метаданные.Отчеты.РасчетРетроБонусовКлиентов.ПолноеИмя();
		КомандаОтчет.Представление = Представление;
		
		КомандаОтчет.МножественныйВыбор = Ложь;
		КомандаОтчет.Важность = "Важное";
		Если ЗначениеЗаполнено(КлючВарианта) Тогда
			КомандаОтчет.КлючВарианта = КлючВарианта;
		КонецЕсли;
		
		КомандаОтчет.Обработчик = "РетроБонусыКлиент.РасчетРетроБонусовКлиентов";
		
		Возврат КомандаОтчет;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. РетроБонусыРасчет.ПараметрыУсловийРетроБонусовКлиентов
//  ПараметрыВарианта - См. РетроБонусыРасчет.НовыеПараметрыВарианта
// 
// Возвращаемое значение:
//  Строка - Текст запроса
//
Функция ТекстЗапроса(ПараметрыУсловийРетроБонусов, ПараметрыВарианта) Экспорт
	
	ПоказательТоваров = ПараметрыУсловийРетроБонусов.ПоказательТоваров;
	ВидыПоказателей = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	ТекстыЗапросов = Новый Массив; // Массив Из Строка
	
	Если ПоказательТоваров = ВидыПоказателей.НеИспользуется Тогда
		
		СформироватьТекстыЗапросовБезЦелевогоПоказателя(
			ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	ИначеЕсли ПоказательТоваров = ВидыПоказателей.Сумма Тогда
		
		СформироватьТекстыЗапросовПоЦелевомуПоказателюСумма(
			ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	ИначеЕсли ПоказательТоваров = ВидыПоказателей.Количество Тогда
		
		СформироватьТекстыЗапросовПоЦелевомуПоказателюКоличество(
			ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	ИначеЕсли ПоказательТоваров = ВидыПоказателей.КоличествоСовокупно Тогда
		
		СформироватьТекстыЗапросовПоЦелевомуПоказателюКоличествоСовокупно(
			ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	ИначеЕсли ПоказательТоваров = ВидыПоказателей.ПакетноеПредложение Тогда
		
		СформироватьТекстыЗапросовПоЦелевомуПоказателюПакетноеПредложение(
			ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	ИначеЕсли ПоказательТоваров = ВидыПоказателей.ПустаяСсылка() Тогда
		
		ШаблонОшибки = НСтр("ru = 'Не заполнен целевой показатель продаж для документа ""%1""'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонОшибки,
			ПараметрыУсловийРетроБонусов.ДокументУсловийРетроБонусовПредставление);
		ВызватьИсключение ТекстОшибки;
		
	Иначе
		
		ШаблонОшибки = НСтр("ru = 'Не удалось определить целевой показатель продаж (""%1"") для документа ""%2""'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонОшибки,
			ПараметрыУсловийРетроБонусов.ПоказательТоваровПредставление,
			ПараметрыУсловийРетроБонусов.ДокументУсловийРетроБонусовПредставление);
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	РазделительПакетаЗапросов = ОбщегоНазначения.РазделительПакетаЗапросов();
	ТекстЗапроса = СтрСоединить(ТекстыЗапросов, РазделительПакетаЗапросов);
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает таблицу рассчитанных ретро-бонусов клиентов по указанным условиям с детализацией до документа продажи.
// 
// Параметры:
//  ПараметрыРасчета - см. ПараметрыРасчетаРетроБонусов
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Рассчитанные ретро-бонусы по указанным условиям
//  
Функция РетроБонусыЗаПериодПоДокументамПродажи(ПараметрыРасчета) Экспорт
	
	Замер = ОценкаПроизводительности.НачатьЗамерДлительнойОперации(
		"Отчет.РасчетРетроБонусовКлиентов.МодульМенеджера.РетроБонусыЗаПериодПоДокументамПродажи");
	
	Реквизиты = "Проведен, БезРасчета, Статус, Исправление, ИсправляемыйДокумент";
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПараметрыРасчета.ДокументУсловий, Реквизиты);
	
	Если НЕ ЗначенияРеквизитов.Проведен Тогда
		
		ТекстИсключения = НСтр("ru = 'Документ условий не проведен.'");
		ВызватьИсключение ТекстИсключения;
		
	КонецЕсли;
	
	Если ЗначенияРеквизитов.Исправление = Истина Тогда
		ИсходныйДокумент = ЗначенияРеквизитов.ИсправляемыйДокумент;
	Иначе
		ИсходныйДокумент = ПараметрыРасчета.ДокументУсловий;
	КонецЕсли;
	ПараметрыУсловий = РетроБонусыРасчет.ПараметрыУсловийРетроБонусовКлиентов(ИсходныйДокумент);
	
	Если ПараметрыУсловий.Количество() = 0 Тогда
		
		ТекстИсключения = НСтр("ru = 'Документ условий не согласован.'");
		ВызватьИсключение ТекстИсключения;
		
	Иначе
		
		ИспользуютсяСегментыТоваров =
			(ПараметрыУсловий.СоставТоваров = Перечисления.СоставыТоваровРетроБонусов.СегментыНоменклатуры);
		ИспользуютсяСегментыПартнеров =
			(ПараметрыУсловий.СоставУчастников = Перечисления.СоставыУчастниковРетроБонусов.СегментыПартнеров);
		ИспользуютсяСегменты = (ИспользуютсяСегментыТоваров ИЛИ ИспользуютсяСегментыПартнеров);
		СоставСегментовЗафиксирован = ПараметрыУсловий.СегментыЗафиксированы;
		
		Если ИспользуютсяСегменты
		   И НЕ СоставСегментовЗафиксирован Тогда
			
			ТекстИсключения = НСтр("ru = 'Не зафиксирован состав сегментов документа условий.'");
			ВызватьИсключение ТекстИсключения;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// корректировка периода расчета по периоду действия условий
	
	ПустаяДата = '00010101';
	
	Если ПараметрыРасчета.ДатаНачала = ПустаяДата
	 ИЛИ ПараметрыРасчета.ДатаНачала < ПараметрыУсловий.НачалоДействия
	 ИЛИ ПараметрыРасчета.ДатаНачала > ПараметрыУсловий.ОкончаниеДействия Тогда
		
		ПараметрыРасчета.ДатаНачала = ПараметрыУсловий.НачалоДействия;
		
	КонецЕсли;
	
	Если ПараметрыРасчета.ДатаОкончания = ПустаяДата
	 ИЛИ ПараметрыРасчета.ДатаОкончания < ПараметрыУсловий.НачалоДействия
	 ИЛИ ПараметрыРасчета.ДатаОкончания > КонецДня(ПараметрыУсловий.ОкончаниеДействия) Тогда
		
		ПараметрыРасчета.ДатаОкончания = ПараметрыУсловий.ОкончаниеДействия;
		
	КонецЕсли;
	
	ПараметрыВарианта = РетроБонусыРасчет.НовыеПараметрыВарианта();
	ПараметрыВарианта.КлючВарианта = "НачисленияПоДокументам";
	ПараметрыВарианта.ЭтоРасшифровка = Истина;
	ПараметрыВарианта.ЭтоРасшифровкаПоДокументам = Истина;
	
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	ТекстЗапроса = ТекстЗапроса(ПараметрыУсловий, ПараметрыВарианта);
	СхемаКомпоновкиДанных.НаборыДанных.РасчетРетроБонусовКлиентов.Запрос = ТекстЗапроса;
	
	КомпонуемыйВариантОтчета = СхемаКомпоновкиДанных.ВариантыНастроек[ПараметрыВарианта.КлючВарианта];
	
	КомпоновщикНастроекПоВарианту = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроекПоВарианту.ЗагрузитьНастройки(КомпонуемыйВариантОтчета.Настройки);
	ИсточникДоступныхНастроекКД = Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных);
	КомпоновщикНастроекПоВарианту.Инициализировать(ИсточникДоступныхНастроекКД);
	НастройкиОтчета = КомпоновщикНастроекПоВарианту.ПолучитьНастройки();
	
	УстанавливаемыеПараметры = Новый Соответствие;
	УстанавливаемыеПараметры.Вставить("ДокументУсловийРетроБонусов", ПараметрыРасчета.ДокументУсловий);
	УстанавливаемыеПараметры.Вставить("ИсходныйДокумент", ИсходныйДокумент);
	УстанавливаемыеПараметры.Вставить("Организация", ПараметрыРасчета.Организация);
	УстанавливаемыеПараметры.Вставить("ДатаНачала", ПараметрыРасчета.ДатаНачала);
	УстанавливаемыеПараметры.Вставить("ДатаОкончания", КонецДня(ПараметрыРасчета.ДатаОкончания));
	УстанавливаемыеПараметры.Вставить("Контрагент", ПараметрыРасчета.Контрагент);
	УстанавливаемыеПараметры.Вставить("Партнер", ПараметрыРасчета.Партнер);
	ИсключаемыеХозяйственныеОперации = Отчеты.РасчетРетроБонусовКлиентов.ИсключаемыеХозяйственныеОперации();
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(
		НастройкиОтчета, "ИсключаемыеХозяйственныеОперации", ИсключаемыеХозяйственныеОперации);
	ИсключаемыеНастройкиХозОпераций = Отчеты.РасчетРетроБонусовКлиентов.ИсключаемыеНастройкиХозяйственныхОпераций();
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(
		НастройкиОтчета, "ИсключаемыеНастройкиХозяйственныхОпераций", ИсключаемыеНастройкиХозОпераций);
	
	КомпоновкаДанныхКлиентСервер.УстановитьКоллекциюПараметров(НастройкиОтчета, УстанавливаемыеПараметры);
	
	Если ЗначениеЗаполнено(ПараметрыРасчета.Валюта) Тогда
		
		КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(НастройкиОтчета, "Валюта", ПараметрыРасчета.Валюта);
		
	КонецЕсли;
	
	ОценкаПроизводительности.ЗафиксироватьЗамерДлительнойОперации(Замер, 1, "Настройка");
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(
		СхемаКомпоновкиДанных, НастройкиОтчета,,, Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТаблицаРезультат = Новый ТаблицаЗначений;
	ПроцессорВывода.УстановитьОбъект(ТаблицаРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	ОценкаПроизводительности.ЗафиксироватьЗамерДлительнойОперации(Замер, ТаблицаРезультат.Количество(), "Компоновка");
	
	// дозаполнение полей по участникам
	
	ДетализацияРасчетаУчастников = ПараметрыУсловий.ДетализацияРасчетаУчастников;
	ДетализацииУчастников = Перечисления.ДетализацияРасчетаУчастниковРетроБонусов;
	
	Если ДетализацияРасчетаУчастников <> ДетализацииУчастников.ПоКонтрагентуКлиенту Тогда
		
		ДокументыПродажи = ОбщегоНазначенияУТ.УникальныеЗначенияИзКолонкиТаблицы(
			ТаблицаРезультат, "ДокументПродажи");
		УчастникиПоДокументамПродажи = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(
			ДокументыПродажи, "Контрагент, Партнер");
		
		Для Каждого СтрокаТаблицы Из ТаблицаРезультат Цикл
			
			УчастникиДокумента = УчастникиПоДокументамПродажи[СтрокаТаблицы.ДокументПродажи];
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, УчастникиДокумента);
			
		КонецЦикла;
		
	КонецЕсли;
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(Замер, 1, "ЗаполнениеУчастников");
	
	Возврат ТаблицаРезультат;
	
КонецФункции

// Параметры расчета ретро бонусов.
// 
// Возвращаемое значение:
//  Структура:
//  * ДокументУсловий - ДокументСсылка.УсловияРетроБонусовКлиентов -
//  * Организация - СправочникСсылка.Организации -
//  * ДатаСозданияДокументов - Дата - Начало периода расчета бонусов
//  * ДатаНачала - Дата - Начало периода расчета бонусов
//  * ДатаОкончания - Дата - Окончание периода расчета бонусов
//  * Контрагент - СправочникСсылка.Контрагенты - Отбор по контрагенту
//  * Партнер - СправочникСсылка.Партнеры - Отбор по клиенту
//  * Валюта - СправочникСсылка.Валюты - Отбор по валюте
// 
Функция ПараметрыРасчетаРетроБонусов() Экспорт
	
	ПустаяДата = Дата(1, 1, 1);
	
	Параметры = Новый Структура;
	Параметры.Вставить("ДокументУсловий", Документы.УсловияРетроБонусовКлиентов.ПустаяСсылка());
	Параметры.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
	Параметры.Вставить("ДатаСозданияДокументов", ПустаяДата);
	Параметры.Вставить("ДатаНачала", ПустаяДата);
	Параметры.Вставить("ДатаОкончания", ПустаяДата);
	Параметры.Вставить("Контрагент", Справочники.Контрагенты.ПустаяСсылка());
	Параметры.Вставить("Партнер", Справочники.Партнеры.ПустаяСсылка());
	Параметры.Вставить("Валюта", Справочники.Валюты.ПустаяСсылка());
	
	Возврат Параметры;
	
КонецФункции

Функция ИсключаемыеХозяйственныеОперации() Экспорт
	
	Результат = Новый Массив; // Массив Из ПеречислениеСсылка.ХозяйственныеОперации
	Результат.Добавить(Перечисления.ХозяйственныеОперации.РеализацияЧерезКомиссионера);
	Результат.Добавить(Перечисления.ХозяйственныеОперации.ОтчетКомиссионера);
	Возврат Результат;
	
КонецФункции

Функция ИсключаемыеНастройкиХозяйственныхОпераций() Экспорт
	
	Результат = Новый Массив; // Массив Из СправочникСсылка.НастройкиХозяйственныхОпераций
	Результат.Добавить(Справочники.НастройкиХозяйственныхОпераций.РеализацияЧерезКомиссионера);
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ТекстЗапроса

Процедура СформироватьТекстыЗапросовБезЦелевогоПоказателя(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ДобавитьТекстЗапросаПараметрыРБ(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	Если ПараметрыУсловийРетроБонусов.СоставУчастников = Перечисления.СоставыУчастниковРетроБонусов.Соглашения Тогда
		
		ДобавитьТекстЗапросаСоглашенияПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаСоглашения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаАналитикаПоПартнерамПоТиповымСоглашениям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаУчастникиПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаКонтрагенты(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПартнеры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПартнерыКонтрагенты(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаАналитикаПоПартнерам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаАналитикаУчетаНоменклатуры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПродажи(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПроцентСкидкиБезГруппировок(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаИтоговыеДанныеБезЦелевогоПоказателя(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаВыборкиДанных(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
КонецПроцедуры

Процедура СформироватьТекстыЗапросовПоЦелевомуПоказателюСумма(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	
	ДобавитьТекстЗапросаПараметрыРБ(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	Если ПараметрыУсловийРетроБонусов.СоставУчастников = Перечисления.СоставыУчастниковРетроБонусов.Соглашения Тогда
		
		ДобавитьТекстЗапросаСоглашенияПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаСоглашения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаАналитикаПоПартнерамПоТиповымСоглашениям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаУчастникиПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаКонтрагенты(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПартнеры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПартнерыКонтрагенты(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаАналитикаПоПартнерам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаАналитикаУчетаНоменклатуры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПродажиБезОтбораПоКонтрагентам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПродажиСОтборомПоКонтрагентам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПроцентСкидкиБезГруппировок(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоПериодам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	Если ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПорядокРаспределения = ПорядкиРаспределения.FIFO Тогда
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаКоличествоСтрокПоДокументам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаКоличествоСтрокПоПериодам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаКоличествоСтрокПоПериодамНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаКоличествоСтрокПоДокументамНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаКоличествоСтрокПоПериодамДокументамНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаПревышениеЛимитаОбщая(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПодготовленныеДанныеПоСумме(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	Если ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПорядокРаспределения = ПорядкиРаспределения.FIFO Тогда
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаПодготовленныеДанныеПоДокументам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоПорциям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоПорциямНарастающийИтог(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ОборотыПоПорциям",
			"ВТ_ОборотыПоПорциямНарастающийИтог");
		РетроБонусыРасчет.ДобавитьТекстЗапросаПорцияПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ОборотыПоПорциямНарастающийИтог",
			"ВТ_ПорцияПревышенияЛимита");
		РетроБонусыРасчет.ДобавитьТекстЗапросаПредыдущаяПорцияДоПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыДоПорцииПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыЗаПорциюПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ОборотыДоПорцииПревышенияЛимита",
			"ВТ_ОборотыЗаПорциюПревышенияЛимита",
			РетроБонусыРасчет.ПорцияНарастающегоИтога());
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоСубпорциям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоПорциямНарастающийИтог(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ОборотыПоСубпорциям",
			"ВТ_ОборотыПоСубпорциямНарастающийИтог");
		РетроБонусыРасчет.ДобавитьТекстЗапросаПорцияПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ОборотыПоСубпорциямНарастающийИтог",
			"ВТ_СубпорцияПревышенияЛимита");
		РетроБонусыРасчет.ДобавитьТекстЗапросаСубпорцияПревышенияЛимитаОборотыДоПорции(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаПредыдущаяСубпорцияДоПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаСубпорцияПревышенияЛимитаОборотыДоСубпорции(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыЗаПорциюПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_СубпорцияПревышенияЛимитаОборотыДоСубпорции",
			"ВТ_ОборотыЗаСубпорциюПревышенияЛимита",
			РетроБонусыРасчет.СубпорцияНарастающегоИтога());
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаПревышениеЛимитаНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаМинимальныйПриоритетВыполненияПланаПоСумме(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаДокументВыполненияПлана(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаДокументВыполненияПланаСуммаПредыдущих(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаРаспределениеСтрокДокументаПревышенияПлана(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеДляРаспределенияПоФИФО(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаПриоритетОкругления(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОкруглениеРаспределенияПоФИФО(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаИтоговоеРаспределениеПоФИФОПоСумме(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	 ИЛИ ПараметрыУсловийРетроБонусов.ПорядокРаспределения = ПорядкиРаспределения.ПропорциональноВыручке Тогда
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеСУчетомПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана Тогда
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеБезЗапретаПревышения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	Если ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПорядокРаспределения = ПорядкиРаспределения.ПропорциональноВыручке Тогда
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеДляПропорциональногоРаспределенияПоСумме(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаПриоритетОкругления(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОкруглениеПропорциональногоРаспределения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаИтоговоеПропорциональноеРаспределение(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаИтоговыеДанные(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаВыборкиДанных(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
КонецПроцедуры

Процедура СформироватьТекстыЗапросовПоЦелевомуПоказателюКоличество(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	
	ДобавитьТекстЗапросаПараметрыРБ(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	Если ПараметрыУсловийРетроБонусов.СоставУчастников = Перечисления.СоставыУчастниковРетроБонусов.Соглашения Тогда
		
		ДобавитьТекстЗапросаСоглашенияПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаСоглашения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаАналитикаПоПартнерамПоТиповымСоглашениям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаТоварыМинимальныйПланПоУпаковкам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаМинимальныеПараметрыПоПозиции(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаУчастникиПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаКонтрагенты(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПартнеры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПартнерыКонтрагенты(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаАналитикаПоПартнерам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаАналитикаУчетаНоменклатуры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПродажи(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПроцентСкидкиБезГруппировок(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	Если ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПорядокРаспределения = ПорядкиРаспределения.FIFO Тогда
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаКоличествоСтрокПоДокументам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаКоличествоСтрокПоПериодам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаКоличествоСтрокПоПериодамНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаКоличествоСтрокПоДокументамНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаКоличествоСтрокПоПериодамДокументамНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаПревышениеЛимитаОбщая(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоПериодам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПодготовленныеДанныеОпределениеПлана(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПодготовленныеДанныеПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	Если ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПорядокРаспределения = ПорядкиРаспределения.FIFO Тогда
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаПодготовленныеДанныеПоДокументам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоПорциям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоПорциямНарастающийИтог(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ОборотыПоПорциям",
			"ВТ_ОборотыПоПорциямНарастающийИтог");
		РетроБонусыРасчет.ДобавитьТекстЗапросаПорцияПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ОборотыПоПорциямНарастающийИтог",
			"ВТ_ПорцияПревышенияЛимита");
		РетроБонусыРасчет.ДобавитьТекстЗапросаПредыдущаяПорцияДоПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыДоПорцииПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыЗаПорциюПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ОборотыДоПорцииПревышенияЛимита",
			"ВТ_ОборотыЗаПорциюПревышенияЛимита",
			РетроБонусыРасчет.ПорцияНарастающегоИтога());
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоСубпорциям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоПорциямНарастающийИтог(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ОборотыПоСубпорциям",
			"ВТ_ОборотыПоСубпорциямНарастающийИтог");
		РетроБонусыРасчет.ДобавитьТекстЗапросаПорцияПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ОборотыПоСубпорциямНарастающийИтог",
			"ВТ_СубпорцияПревышенияЛимита");
		РетроБонусыРасчет.ДобавитьТекстЗапросаСубпорцияПревышенияЛимитаОборотыДоПорции(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаПредыдущаяСубпорцияДоПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаСубпорцияПревышенияЛимитаОборотыДоСубпорции(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыЗаПорциюПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_СубпорцияПревышенияЛимитаОборотыДоСубпорции",
			"ВТ_ОборотыЗаСубпорциюПревышенияЛимита",
			РетроБонусыРасчет.СубпорцияНарастающегоИтога());
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаПревышениеЛимитаНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаМинимальныйПриоритетВыполненияПланаПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаДокументВыполненияПлана(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаДокументВыполненияПланаСуммаПредыдущих(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаРаспределениеСтрокДокументаПревышенияПлана(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеДляРаспределенияПоФИФО(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеДляРаспределенияПоФИФОСуммаБонусаПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаПриоритетОкругления(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОкруглениеРаспределенияПоФИФО(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаИтоговоеРаспределениеПоФИФОПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	 ИЛИ ПараметрыУсловийРетроБонусов.ПорядокРаспределения = ПорядкиРаспределения.ПропорциональноВыручке Тогда
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеСУчетомПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана Тогда
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеБезЗапретаПревышения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	Если ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПорядокРаспределения = ПорядкиРаспределения.ПропорциональноВыручке Тогда
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеДляПропорциональногоРаспределенияПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаБазаПропорциональногоРаспределенияПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаРасчетПропорциональногоРаспределенияПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаПропорциональноеРаспределениеПоПозициям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаПриоритетОкругления(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОкруглениеПропорциональногоРаспределения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаИтоговоеПропорциональноеРаспределение(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаИтоговыеДанные(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаВыборкиДанных(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
КонецПроцедуры

Процедура СформироватьТекстыЗапросовПоЦелевомуПоказателюКоличествоСовокупно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ДобавитьТекстЗапросаПараметрыРБ(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	Если ПараметрыУсловийРетроБонусов.СоставУчастников = Перечисления.СоставыУчастниковРетроБонусов.Соглашения Тогда
		
		ДобавитьТекстЗапросаСоглашенияПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаСоглашения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаАналитикаПоПартнерамПоТиповымСоглашениям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаУчастникиПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаКонтрагенты(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПартнеры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПартнерыКонтрагенты(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаАналитикаПоПартнерам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаАналитикаУчетаНоменклатуры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПродажи(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПроцентСкидкиБезГруппировок(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаУчастникиПериодыДокументы(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаУчастникиПериодыДокументыВсеТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаУчастникиПериодыДокументыПроданныеТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаНедостающийСоставПакета(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПроцентСкидкиСДаннымиПоПакету(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоПериодам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоПериодамУсловияПакетаНеВыполнены(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоПериодамУсловияПакетаВыполнены(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПодготовленныеДанныеПоКоличествуСовокупно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеСУчетомПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеБезЗапретаПревышения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаИтоговыеДанные(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаВыборкиДанных(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
КонецПроцедуры

Процедура СформироватьТекстыЗапросовПоЦелевомуПоказателюПакетноеПредложение(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПорядкиРаспределения = Перечисления.ПорядкиРаспределенияРетроБонусов;
	
	ДобавитьТекстЗапросаПараметрыРБ(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	Если ПараметрыУсловийРетроБонусов.СоставУчастников = Перечисления.СоставыУчастниковРетроБонусов.Соглашения Тогда
		
		ДобавитьТекстЗапросаСоглашенияПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаСоглашения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		ДобавитьТекстЗапросаАналитикаПоПартнерамПоТиповымСоглашениям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаУчастникиПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаКонтрагенты(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПартнеры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПартнерыКонтрагенты(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаАналитикаПоПартнерам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаАналитикаУчетаНоменклатуры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПродажи(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПроцентСкидкиБезГруппировок(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаУчастникиПериодыДокументы(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаУчастникиПериодыДокументыВсеТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаУчастникиПериодыДокументыПроданныеТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаНедостающийСоставПакета(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПроцентСкидкиСДаннымиПоПакету(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаКратностьПакетаТоваров(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаКоличествоПакетовТоваров(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПодготовленныеДанныеПоПакетномуПредложению(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	Если ПараметрыУсловийРетроБонусов.ПорядокРаспределения = ПорядкиРаспределения.FIFO Тогда
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаКоличествоСтрокПоДокументам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаКоличествоСтрокПоПериодам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаКоличествоСтрокПоПериодамНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаКоличествоСтрокПоДокументамНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаКоличествоСтрокПоПериодамДокументамНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаПревышениеЛимитаОбщая(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	Если ПараметрыУсловийРетроБонусов.ПорядокРаспределения = ПорядкиРаспределения.FIFO Тогда
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаПодготовленныеДанныеПоДокументамПакетноеПредложение(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоПорциям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоПорциямНарастающийИтог(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ОборотыПоПорциям",
			"ВТ_ОборотыПоПорциямНарастающийИтог");
		РетроБонусыРасчет.ДобавитьТекстЗапросаПорцияПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ОборотыПоПорциямНарастающийИтог",
			"ВТ_ПорцияПревышенияЛимита");
		РетроБонусыРасчет.ДобавитьТекстЗапросаПредыдущаяПорцияДоПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыДоПорцииПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыЗаПорциюПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ОборотыДоПорцииПревышенияЛимита",
			"ВТ_ОборотыЗаПорциюПревышенияЛимита",
			РетроБонусыРасчет.ПорцияНарастающегоИтога());
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоСубпорциям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоПорциямНарастающийИтог(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ОборотыПоСубпорциям",
			"ВТ_ОборотыПоСубпорциямНарастающийИтог");
		РетроБонусыРасчет.ДобавитьТекстЗапросаПорцияПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ОборотыПоСубпорциямНарастающийИтог",
			"ВТ_СубпорцияПревышенияЛимита");
		РетроБонусыРасчет.ДобавитьТекстЗапросаСубпорцияПревышенияЛимитаОборотыДоПорции(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаПредыдущаяСубпорцияДоПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаСубпорцияПревышенияЛимитаОборотыДоСубпорции(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыЗаПорциюПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_СубпорцияПревышенияЛимитаОборотыДоСубпорции",
			"ВТ_ОборотыЗаСубпорциюПревышенияЛимита",
			РетроБонусыРасчет.СубпорцияНарастающегоИтога());
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаПревышениеЛимитаНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаМинимальныйПриоритетВыполненияПланаПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаДокументВыполненияПлана(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаДокументВыполненияПланаСуммаПредыдущих(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаРаспределениеСтрокДокументаПревышенияПлана(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеДляРаспределенияПоФИФО(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеДляРаспределенияПоФИФОСуммаБонусаПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаПриоритетОкругления(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОкруглениеРаспределенияПоФИФО(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаИтоговоеРаспределениеПоФИФОПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	КонецЕсли;
	
	Если ПараметрыУсловийРетроБонусов.ПорядокРаспределения = ПорядкиРаспределения.ПропорциональноВыручке Тогда
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеСУчетомПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	Если ПараметрыУсловийРетроБонусов.ПорядокРаспределения = ПорядкиРаспределения.ПропорциональноВыручке Тогда
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеДляПропорциональногоРаспределенияПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаБазаПропорциональногоРаспределенияПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаРасчетПропорциональногоРаспределенияПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаПропорциональноеРаспределениеПоПозициям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаПриоритетОкругления(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОкруглениеПропорциональногоРаспределения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаИтоговоеПропорциональноеРаспределение(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаИтоговыеДанные(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаВыборкиДанных(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаПараметрыРБ(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РетроБонусыКлиентовУсловия.ДокументУсловий КАК УсловиеРетроБонуса,
	|	РетроБонусыКлиентовУсловия.НачалоДействия КАК ДатаНачала,
	|	КОНЕЦПЕРИОДА(РетроБонусыКлиентовУсловия.ОкончаниеДействия, ДЕНЬ) КАК ДатаОкончания,
	|	РетроБонусыКлиентовУсловия.УчитыватьНДС КАК УчитыватьНДС,
	|	РетроБонусыКлиентовУсловия.Валюта КАК Валюта,
	|	РетроБонусыКлиентовУсловия.Вид.БазаРасчетаПродаж КАК БазаРасчета,
	|	РетроБонусыКлиентовУсловия.Вид.ПоказательТоваров КАК ПоказательТоваров,
	|	РетроБонусыКлиентовУсловия.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	РетроБонусыКлиентовУсловия.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	РетроБонусыКлиентовУсловия.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	РетроБонусыКлиентовУсловия.БонусПроцент КАК БонусПроцент,
	|	РетроБонусыКлиентовУсловия.СуммаПлан КАК СуммаПлан,
	|	РетроБонусыКлиентовУсловия.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	(РетроБонусыКлиентовУсловия.Вид.ПорядокРаспределения = ЗНАЧЕНИЕ(Перечисление.ПорядкиРаспределенияРетроБонусов.FIFO)) КАК РаспределениеПоФИФО,
	|	(РетроБонусыКлиентовУсловия.Товары = ЗНАЧЕНИЕ(Перечисление.СоставыСписковРетроБонусов.Выбранные)) КАК ОтборТоваровВыбранные,
	|	(РетроБонусыКлиентовУсловия.Товары = ЗНАЧЕНИЕ(Перечисление.СоставыСписковРетроБонусов.КромеВыбранных)) КАК ОтборТоваровКромеВыбранных,
	|	(РетроБонусыКлиентовУсловия.Товары = ЗНАЧЕНИЕ(Перечисление.СоставыСписковРетроБонусов.Все)) КАК ОтборТоваровБезОграничений,
	|	РетроБонусыКлиентовУсловия.Вид.СоставУчастников = ЗНАЧЕНИЕ(Перечисление.СоставыУчастниковРетроБонусов.ИНН) КАК ОтборПоИНН,
	|	(РетроБонусыКлиентовУсловия.Вид.СоставУчастников = ЗНАЧЕНИЕ(Перечисление.СоставыУчастниковРетроБонусов.Клиенты)
	|		ИЛИ РетроБонусыКлиентовУсловия.Вид.СоставУчастников = ЗНАЧЕНИЕ(Перечисление.СоставыУчастниковРетроБонусов.Контрагенты)
	|		ИЛИ РетроБонусыКлиентовУсловия.Вид.СоставУчастников = ЗНАЧЕНИЕ(Перечисление.СоставыУчастниковРетроБонусов.СегментыПартнеров)) КАК ОтборПоКонтрагентамПартнерам,
	|	(РетроБонусыКлиентовУсловия.Участники = ЗНАЧЕНИЕ(Перечисление.СоставыСписковРетроБонусов.Выбранные)) КАК ОтборУчастниковВыбранные,
	|	(РетроБонусыКлиентовУсловия.Участники = ЗНАЧЕНИЕ(Перечисление.СоставыСписковРетроБонусов.КромеВыбранных)) КАК ОтборУчастниковКромеВыбранных,
	|	(РетроБонусыКлиентовУсловия.Участники = ЗНАЧЕНИЕ(Перечисление.СоставыСписковРетроБонусов.Все)) КАК ОтборУчастниковБезОграничений
	|ПОМЕСТИТЬ ВТ_ПараметрыРБ
	|ИЗ
	|	РегистрСведений.РетроБонусыКлиентовУсловия КАК РетроБонусыКлиентовУсловия
	|ГДЕ
	|	РетроБонусыКлиентовУсловия.ДокументУсловий = &ИсходныйДокумент";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаСоглашенияПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РетроБонусыКлиентовДоговорыСоглашения.ДокументУсловий КАК УсловияРетроБонусов,
	|	РетроБонусыКлиентовДоговорыСоглашения.Соглашение КАК Соглашение,
	|	РетроБонусыКлиентовДоговорыСоглашения.НачалоДействия КАК НачалоДействия,
	|	РетроБонусыКлиентовДоговорыСоглашения.ОкончаниеДействия КАК ОкончаниеДействия,
	|	РетроБонусыКлиентовДоговорыСоглашения.СуммаПлан КАК СуммаПлан,
	|	РетроБонусыКлиентовДоговорыСоглашения.УчитыватьПродажиПоИндивидуальным КАК УчитыватьПродажиПоИндивидуальным,
	|	РетроБонусыКлиентовДоговорыСоглашения.Соглашение.Типовое КАК ТиповоеСоглашение,
	|	РетроБонусыКлиентовДоговорыСоглашения.Соглашение.Партнер КАК Партнер
	|ПОМЕСТИТЬ ВТ_СоглашенияПредварительно
	|ИЗ
	|	РегистрСведений.РетроБонусыКлиентовДоговорыСоглашения КАК РетроБонусыКлиентовДоговорыСоглашения
	|ГДЕ
	|	РетроБонусыКлиентовДоговорыСоглашения.ДокументУсловий = &ИсходныйДокумент
	|	И РетроБонусыКлиентовДоговорыСоглашения.Соглашение <> ЗНАЧЕНИЕ(Справочник.СоглашенияСКлиентами.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Соглашение,
	|	ТиповоеСоглашение,
	|	УчитыватьПродажиПоИндивидуальным";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаСоглашения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_СоглашенияПредварительно.УсловияРетроБонусов КАК УсловияРетроБонусов,
	|	ВТ_СоглашенияПредварительно.Соглашение КАК Соглашение,
	|	ВТ_СоглашенияПредварительно.НачалоДействия КАК НачалоДействия,
	|	ВТ_СоглашенияПредварительно.ОкончаниеДействия КАК ОкончаниеДействия,
	|	ВТ_СоглашенияПредварительно.СуммаПлан КАК СуммаПлан,
	|	ВТ_СоглашенияПредварительно.ТиповоеСоглашение КАК ТиповоеСоглашение,
	|	ВТ_СоглашенияПредварительно.Партнер КАК Партнер
	|ПОМЕСТИТЬ ВТ_Соглашения
	|ИЗ
	|	ВТ_СоглашенияПредварительно КАК ВТ_СоглашенияПредварительно
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_СоглашенияПредварительно.УсловияРетроБонусов КАК УсловияРетроБонусов,
	|	СоглашенияСКлиентами.Ссылка КАК Соглашение,
	|	ВТ_СоглашенияПредварительно.НачалоДействия КАК НачалоДействия,
	|	ВТ_СоглашенияПредварительно.ОкончаниеДействия КАК ОкончаниеДействия,
	|	ВТ_СоглашенияПредварительно.СуммаПлан КАК СуммаПлан,
	|	СоглашенияСКлиентами.Типовое КАК ТиповоеСоглашение,
	|	СоглашенияСКлиентами.Партнер КАК Партнер
	|ИЗ
	|	ВТ_СоглашенияПредварительно КАК ВТ_СоглашенияПредварительно
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
	|		ПО ВТ_СоглашенияПредварительно.Соглашение = СоглашенияСКлиентами.Соглашение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СоглашенияПредварительно КАК ИндивидуальныеСоглашенияУказанныеНапрямую
	|		ПО СоглашенияСКлиентами.Ссылка = ИндивидуальныеСоглашенияУказанныеНапрямую.Соглашение
	|		И ИндивидуальныеСоглашенияУказанныеНапрямую.ТиповоеСоглашение = ЛОЖЬ
	|ГДЕ
	|	ВТ_СоглашенияПредварительно.ТиповоеСоглашение
	|	И ВТ_СоглашенияПредварительно.УчитыватьПродажиПоИндивидуальным
	|	И ИндивидуальныеСоглашенияУказанныеНапрямую.Соглашение ЕСТЬ NULL
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Соглашение,
	|	Партнер,
	|	ТиповоеСоглашение";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаАналитикаПоПартнерамПоТиповымСоглашениям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам КАК КлючАналитики,
	|	РС_АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	РС_АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	РС_АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
	|	ВыручкаИСебестоимостьПродаж.Соглашение КАК Соглашение
	|ПОМЕСТИТЬ ВТ_АналитикаПоПартнерамПоТиповымСоглашениям
	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимостьПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РС_АналитикаУчетаПоПартнерам
	|		ПО ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам = РС_АналитикаУчетаПоПартнерам.КлючАналитики
	|ГДЕ
	|	ВыручкаИСебестоимостьПродаж.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ВыручкаИСебестоимостьПродаж.Соглашение В
	|		(ВЫБРАТЬ
	|			ВТ_Соглашения.Соглашение КАК Соглашение
	|		ИЗ
	|			ВТ_Соглашения КАК ВТ_Соглашения
	|		ГДЕ
	|			ВТ_Соглашения.ТиповоеСоглашение)
	|	И РС_АналитикаУчетаПоПартнерам.Организация В (&Организация)
	|	И &УсловиеОтбораПоКонтрагенту
	|	И &УсловиеОтбораПоПартнеру
	|	И ВыручкаИСебестоимостьПродаж.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|	И ВыручкаИСебестоимостьПродаж.ХозяйственнаяОперация НЕ В (&ИсключаемыеХозяйственныеОперации)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Соглашение";
	
	Если ПараметрыВарианта.ЭтоРасшифровка Тогда
		
		УсловиеОтбораПоКонтрагенту =
		"ВЫБОР
		|	КОГДА &Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|		ИЛИ &Контрагент = НЕОПРЕДЕЛЕНО
		|	ТОГДА ИСТИНА
		|	ИНАЧЕ РС_АналитикаУчетаПоПартнерам.Контрагент = &Контрагент
		|КОНЕЦ";
		УсловиеОтбораПоПартнеру =
		"ВЫБОР
		|	КОГДА &Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|		ИЛИ &Партнер = НЕОПРЕДЕЛЕНО
		|	ТОГДА ИСТИНА
		|	ИНАЧЕ РС_АналитикаУчетаПоПартнерам.Партнер = &Партнер
		|КОНЕЦ";
		
	Иначе
		
		УсловиеОтбораПоКонтрагенту = "ИСТИНА";
		УсловиеОтбораПоПартнеру = "ИСТИНА";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоКонтрагенту", УсловиеОтбораПоКонтрагенту);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоПартнеру", УсловиеОтбораПоПартнеру);
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаВыборкиДанных(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИтоговыеДанные.Период КАК Период,
	|	ИтоговыеДанные.ПериодРасчета КАК ПериодРасчета,
	|	ИтоговыеДанные.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ИтоговыеДанные.ПоказательТоваров КАК ПоказательТоваров,
	|	ИтоговыеДанные.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ИтоговыеДанные.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ИтоговыеДанные.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ИтоговыеДанные.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ИтоговыеДанные.ПланВыполнен КАК ПланВыполнен,
	|	ИтоговыеДанные.ДокументРегистратор КАК ДокументПродажи,
	|	ИтоговыеДанные.Организация КАК Организация,
	|	ИтоговыеДанные.Контрагент КАК Контрагент,
	|	ИтоговыеДанные.Партнер КАК Партнер,
	|	ИтоговыеДанные.Договор КАК Договор,
	|	ИтоговыеДанные.Соглашение КАК Соглашение,
	|	ИтоговыеДанные.Номенклатура КАК Номенклатура,
	|	ИтоговыеДанные.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ИтоговыеДанные.Характеристика КАК Характеристика,
	|	ИтоговыеДанные.Количество КАК КоличествоПродажи,
	|	ИтоговыеДанные.Валюта КАК Валюта,
	|	ИтоговыеДанные.СуммаПродажи КАК СуммаПродажи,
	|	ИтоговыеДанные.СуммаОборотСНДС КАК СуммаВыручки,
	|	ИтоговыеДанные.СуммаОборотБезНДС КАК СуммаВыручкиБезНДС,
	|	ИтоговыеДанные.БазоваяЦена КАК БазоваяЦена,
	|	ИтоговыеДанные.Количество * ИтоговыеДанные.БазоваяЦена КАК СуммаВБазовыхЦенах,
	|	ИтоговыеДанные.БонусПроцент КАК ПроцентБонус,
	|	ИтоговыеДанные.СуммаПлан КАК СуммаПлан,
	|	ИтоговыеДанные.КоличествоПлан КАК КоличествоПлан,
	|	ИтоговыеДанные.РасчетнаяБаза КАК РасчетнаяБаза,
	|	ИтоговыеДанные.КоличествоДляРасчетаБонуса КАК КоличествоДляРасчетаБонуса,
	|	ИтоговыеДанные.СуммаБонус КАК СуммаБонус,
	|	ИтоговыеДанные.КоличествоПакетов КАК ПроданоПакетов
	|{ВЫБРАТЬ
	|	УсловиеРетроБонуса.*,
	|	Период,
	|	ПериодРасчета,
	|	ЗапретНачисленияСверхПлана,
	|	ПериодичностьНачислений,
	|	ПериодичностьУсловий,
	|	ДетализацияРасчетаУчастников,
	|	ПоказательТоваров,
	|	ДокументПродажи.*,
	|	Организация.*,
	|	Контрагент.*,
	|	Партнер.*,
	|	Договор.*,
	|	Соглашение.*,
	|	Номенклатура.*,
	|	ЕдиницаИзмерения.*,
	|	Характеристика.*,
	|	ПланВыполнен,
	|	ПроцентБонус,
	|	КоличествоПродажи,
	|	Валюта,
	|	БазоваяЦена,
	|	СуммаПродажи,
	|	СуммаВыручки,
	|	СуммаВыручкиБезНДС,
	|	СуммаВБазовыхЦенах,
	|	СуммаБонус,
	|	СуммаПлан,
	|	КоличествоПлан,
	|	РасчетнаяБаза,
	|	ПроданоПакетов}
	|ИЗ
	|	ВТ_ИтоговыеДанные КАК ИтоговыеДанные
	|{ГДЕ
	|	ИтоговыеДанные.ДокументРегистратор.*,
	|	ИтоговыеДанные.Организация.*,
	|	ИтоговыеДанные.Валюта.*,
	|	ИтоговыеДанные.Контрагент.*,
	|	ИтоговыеДанные.Договор.*,
	|	ИтоговыеДанные.Соглашение.*,
	|	ИтоговыеДанные.ПериодРасчета,
	|	ИтоговыеДанные.Номенклатура.*,
	|	ИтоговыеДанные.Характеристика.*,
	|	ИтоговыеДанные.Партнер.*}";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли