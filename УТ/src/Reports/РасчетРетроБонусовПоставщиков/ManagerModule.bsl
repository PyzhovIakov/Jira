//@strict-types

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// Задает расширенные настройки отчета
//
// Параметры:
//   Настройки - см. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов.Настройки.
//   НастройкиОтчета - см. ВариантыОтчетов.ОписаниеОтчета.
//
Процедура НастроитьВариантыОтчета(Настройки, НастройкиОтчета) Экспорт
	
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РасчетРетроБонусовПоставщиков);
	ОписаниеОтчета.ВидимостьПоУмолчанию = Истина;
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, ОписаниеОтчета, Ложь);
	ВариантыОтчетовУТПереопределяемый.ОтключитьОтчет(ОписаниеОтчета);
	
КонецПроцедуры

#КонецОбласти

#Область КомандыПодменюОтчеты

// Добавляет команду отчета в список команд.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   
// Возвращаемое значение:
//   СтрокаТаблицыЗначений - описание созданной команды.
//
Функция ДобавитьКомандуРасчетРетроБонусовПоставщиков(КомандыОтчетов) Экспорт
	
	Если ПравоДоступа("Просмотр", Метаданные.Отчеты.РасчетРетроБонусовПоставщиков) Тогда
		
		КомандаОтчет = КомандыОтчетов.Добавить();
		
		Представление = НСтр("ru = 'Расчет ретро-бонусов поставщика'");
		КомандаОтчет.Менеджер = Метаданные.Отчеты.РасчетРетроБонусовПоставщиков.ПолноеИмя();
		КомандаОтчет.Представление = Представление;
		
		КомандаОтчет.МножественныйВыбор = Ложь;
		КомандаОтчет.Важность = "Важное";
		КомандаОтчет.КлючВарианта = "РасчетРетроБонусовПоставщиковКонтекст";
		
		КомандаОтчет.Обработчик = "РетроБонусыКлиент.РасчетРетроБонусовПоставщиков";
		
		Возврат КомандаОтчет;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Параметры расчета ретро бонусов.
// 
// Возвращаемое значение:
//  Структура:
//  * ДокументУсловий - ДокументСсылка.УсловияРетроБонусовПоставщика
//  * ДатаНачала - Дата - Начало периода расчета бонусов
//  * ДатаОкончания - Дата - Окончание периода расчета бонусов
//  * ДатаОстатков - Дата - Дата остатков (только для типа бонуса Остатки)
//  * Валюта - СправочникСсылка.Валюты - Отбор по валюте
// 
Функция ПараметрыРасчетаРетроБонусов() Экспорт
	
	ПустаяДата = Дата(1, 1, 1);
	
	Параметры = Новый Структура;
	Параметры.Вставить("ДокументУсловий", Документы.УсловияРетроБонусовПоставщика.ПустаяСсылка());
	Параметры.Вставить("ДатаНачала", ПустаяДата);
	Параметры.Вставить("ДатаОкончания", ПустаяДата);
	Параметры.Вставить("ДатаОстатков", ПустаяДата);
	Параметры.Вставить("Валюта", Справочники.Валюты.ПустаяСсылка());
	
	Возврат Параметры;
	
КонецФункции

// Возвращает таблицу рассчитанных ретро-бонусов поставщиков для заполнения документов начисления.
// 
// Параметры:
//  ПараметрыРасчета - см. ПараметрыРасчетаРетроБонусов
//  ВПривилегированномРежиме - Булево
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Рассчитанные ретро-бонусы по указанным условиям:
//   * Организация - СправочникСсылка.Организации
//   * Валюта - СправочникСсылка.Валюты
//   * КонтрагентПокупатель - СправочникСсылка.Контрагенты
//   * СуммаПлан - Число
//   * СуммаВБазовыхЦенах - Число
//   * СуммаОборотБезНДС - Число
//   * СуммаОборотСНДС - Число
//   * РасчетнаяБаза - Число
//   * СуммаБонус - Число
//  
Функция РасчетРетроБонусовЗаПериод(ПараметрыРасчета, ВПривилегированномРежиме = Истина) Экспорт
	
	Замер = ОценкаПроизводительности.НачатьЗамерДлительнойОперации(
		"Отчет.РасчетРетроБонусовПоставщиков.МодульМенеджера.РасчетРетроБонусовЗаПериод");
	
	Реквизиты = "Проведен, БезРасчета, Статус, Исправление, ИсправляемыйДокумент";
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПараметрыРасчета.ДокументУсловий, Реквизиты);
	
	Если НЕ ЗначенияРеквизитов.Проведен Тогда
		
		ТекстИсключения = НСтр("ru = 'Документ условий не проведен.'");
		ВызватьИсключение ТекстИсключения;
		
	КонецЕсли;
	
	Если ЗначенияРеквизитов.Исправление = Истина Тогда
		ИсходныйДокумент = ЗначенияРеквизитов.ИсправляемыйДокумент;
	Иначе
		ИсходныйДокумент = ПараметрыРасчета.ДокументУсловий;
	КонецЕсли;
	ПараметрыУсловий = РетроБонусыРасчет.ПараметрыУсловийРетроБонусовПоставщиков(ИсходныйДокумент);
	
	Если ПараметрыУсловий.Количество() = 0 Тогда
		
		ТекстИсключения = НСтр("ru = 'Документ условий не согласован.'");
		ВызватьИсключение ТекстИсключения;
		
	Иначе
		
		ИспользуютсяСегментыТоваров =
			(ПараметрыУсловий.СоставТоваров = Перечисления.СоставыТоваровРетроБонусов.СегментыНоменклатуры);
		СоставСегментовЗафиксирован = ПараметрыУсловий.СегментыЗафиксированы;
		
		Если ИспользуютсяСегментыТоваров
		   И НЕ СоставСегментовЗафиксирован Тогда
			
			ТекстИсключения = НСтр("ru = 'Не зафиксирован состав сегментов документа условий.'");
			ВызватьИсключение ТекстИсключения;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// корректировка периода расчета по периоду действия условий
	
	ПустаяДата = '00010101';
	ТипыБонусов = Перечисления.ТипыРетроБонусовПоставщиков;
	
	Если ПараметрыУсловий.ТипБонуса <> ТипыБонусов.Остатки Тогда
		
		Если ПараметрыРасчета.ДатаНачала = ПустаяДата
		 ИЛИ ПараметрыРасчета.ДатаНачала < ПараметрыУсловий.НачалоДействия
		 ИЛИ ПараметрыРасчета.ДатаНачала > ПараметрыУсловий.ОкончаниеДействия Тогда
			
			ПараметрыРасчета.ДатаНачала = ПараметрыУсловий.НачалоДействия;
			
		КонецЕсли;
		
		Если ПараметрыРасчета.ДатаОкончания = ПустаяДата
		 ИЛИ ПараметрыРасчета.ДатаОкончания < ПараметрыУсловий.НачалоДействия
		 ИЛИ ПараметрыРасчета.ДатаОкончания > КонецДня(ПараметрыУсловий.ОкончаниеДействия) Тогда
			
			ПараметрыРасчета.ДатаОкончания = ПараметрыУсловий.ОкончаниеДействия;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрыВарианта = РетроБонусыРасчет.НовыеПараметрыВарианта();
	ПараметрыВарианта.ЭтоРасшифровка = Истина;
	ПараметрыВарианта.ЭтоРасшифровкаПоДокументам = Истина;
	
	Если ПараметрыУсловий.ТипБонуса = ТипыБонусов.Продажи Тогда
		
		ПараметрыВарианта.КлючВарианта = "ПродажиНачисления";
		
	ИначеЕсли ПараметрыУсловий.ТипБонуса = ТипыБонусов.Закупки Тогда
		
		ПараметрыВарианта.КлючВарианта = "ЗакупкиНачисления";
		
	ИначеЕсли ПараметрыУсловий.ТипБонуса = ТипыБонусов.Остатки Тогда
		
		ПараметрыВарианта.КлючВарианта = "ОстаткиНачисления";
		
	Иначе
		
		ШаблонИсключения = НСтр("ru = 'Неподдерживаемый тип бонуса ""%1"".'");
		ТекстИсключения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонИсключения, Строка(ПараметрыУсловий.ТипБонуса));
		ВызватьИсключение ТекстИсключения;
		
	КонецЕсли;
	
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	Если ВПривилегированномРежиме Тогда
		УстановитьПривилегированныйРежим(Истина);
	КонецЕсли;
	
	ТаблицаПоставщиков = Отчеты.РасчетРетроБонусовПоставщиков.ПредварительнаяТаблицаПоставщиков(ИсходныйДокумент);
	
	ТекстЗапроса = ТекстЗапроса(ПараметрыУсловий, ПараметрыВарианта, ТаблицаПоставщиков);
	СхемаКомпоновкиДанных.НаборыДанных.РасчетРетроБонусовПоставщиков.Запрос = ТекстЗапроса;
	
	КомпонуемыйВариантОтчета = СхемаКомпоновкиДанных.ВариантыНастроек[ПараметрыВарианта.КлючВарианта];
	
	КомпоновщикНастроекПоВарианту = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроекПоВарианту.ЗагрузитьНастройки(КомпонуемыйВариантОтчета.Настройки);
	ИсточникДоступныхНастроекКД = Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных);
	КомпоновщикНастроекПоВарианту.Инициализировать(ИсточникДоступныхНастроекКД);
	НастройкиОтчета = КомпоновщикНастроекПоВарианту.ПолучитьНастройки();
	
	УстанавливаемыеПараметры = Новый Соответствие;
	УстанавливаемыеПараметры.Вставить("ДокументУсловийРетроБонусов", ПараметрыРасчета.ДокументУсловий);
	УстанавливаемыеПараметры.Вставить("ИсходныйДокумент", ИсходныйДокумент);
	УстанавливаемыеПараметры.Вставить("Организация", ПараметрыУсловий.Организация);
	
	УстанавливаемыеПараметры.Вставить("ДатаНачала", ПараметрыРасчета.ДатаНачала);
	УстанавливаемыеПараметры.Вставить("ДатаОкончания", КонецДня(ПараметрыРасчета.ДатаОкончания));
	ПериодОтчета = Новый СтандартныйПериод(ПараметрыРасчета.ДатаНачала, ПараметрыРасчета.ДатаОкончания);
	УстанавливаемыеПараметры.Вставить("ПериодОтчета", ПериодОтчета);
	УстанавливаемыеПараметры.Вставить("ДатаОстатков", ПараметрыРасчета.ДатаОстатков);
	
	УстанавливаемыеПараметры.Вставить("Контрагент", Справочники.Контрагенты.ПустаяСсылка());
	УстанавливаемыеПараметры.Вставить("Партнер", Справочники.Партнеры.ПустаяСсылка());
	ИсключаемыеХозяйственныеОперации = Отчеты.РасчетРетроБонусовПоставщиков.ИсключаемыеХозяйственныеОперации();
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(
		НастройкиОтчета, "ИсключаемыеХозяйственныеОперации", ИсключаемыеХозяйственныеОперации);
	ИсключаемыеНастройкиХозОпераций = Отчеты.РасчетРетроБонусовПоставщиков.ИсключаемыеНастройкиХозяйственныхОпераций();
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(
		НастройкиОтчета, "ИсключаемыеНастройкиХозяйственныхОпераций", ИсключаемыеНастройкиХозОпераций);
	
	КомпоновкаДанныхКлиентСервер.УстановитьКоллекциюПараметров(НастройкиОтчета, УстанавливаемыеПараметры);
	
	Если ЗначениеЗаполнено(ПараметрыРасчета.Валюта) Тогда
		
		КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(НастройкиОтчета, "Валюта", ПараметрыРасчета.Валюта);
		
	КонецЕсли;
	
	Если ПараметрыУсловий.ТипБонуса = Перечисления.ТипыРетроБонусовПоставщиков.Закупки Тогда
		
		Запрос = Новый Запрос;
		МенеджерВТ = Новый МенеджерВременныхТаблиц();
		Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
		Запрос.УстановитьПараметр("ТаблицаПоставщиков", ТаблицаПоставщиков);
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	*
		|ПОМЕСТИТЬ ВТ_ПоставщикиПредварительно
		|ИЗ
		|	&ТаблицаПоставщиков КАК ТаблицаПоставщиков";
		Запрос.Текст = ТекстЗапроса;
		
		Запрос.Выполнить();
		
	Иначе
		
		МенеджерВТ = Неопределено;
		
	КонецЕсли;
	
	ОценкаПроизводительности.ЗафиксироватьЗамерДлительнойОперации(Замер, 1, "Настройка");
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(
		СхемаКомпоновкиДанных, НастройкиОтчета,,, Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных,,, Истина,, МенеджерВТ);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТаблицаРезультат = Новый ТаблицаЗначений;
	ПроцессорВывода.УстановитьОбъект(ТаблицаРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(Замер, ТаблицаРезультат.Количество(), "Компоновка");
	
	Возврат ТаблицаРезультат;
	
КонецФункции

Функция ИсключаемыеХозяйственныеОперации() Экспорт
	
	Результат = Новый Массив; // Массив Из ПеречислениеСсылка.ХозяйственныеОперации
	Результат.Добавить(Перечисления.ХозяйственныеОперации.РеализацияЧерезКомиссионера);
	Результат.Добавить(Перечисления.ХозяйственныеОперации.ОтчетКомиссионера);
	Возврат Результат;
	
КонецФункции

Функция ИсключаемыеНастройкиХозяйственныхОпераций() Экспорт
	
	Результат = Новый Массив; // Массив Из СправочникСсылка.НастройкиХозяйственныхОпераций
	Результат.Добавить(Справочники.НастройкиХозяйственныхОпераций.РеализацияЧерезКомиссионера);
	Возврат Результат;
	
КонецФункции

Функция ТипыРегистраторовВыборкиЗакупок() Экспорт
	
	Результат = Новый Массив; // Массив Из ОбъектМетаданныхДокумент
	
	Результат.Добавить(Метаданные.Документы.ВозвратТоваровПоставщику);
	Результат.Добавить(Метаданные.Документы.ВыкупПринятыхНаХранениеТоваров);
	Результат.Добавить(Метаданные.Документы.КорректировкаПриобретения);
	Результат.Добавить(Метаданные.Документы.ПриобретениеТоваровУслуг);
	
	Возврат Результат;
	
КонецФункции

// Параметры:
//  ПараметрыУсловийРетроБонусов - См. РетроБонусыРасчет.ПараметрыУсловийРетроБонусовПоставщиков
//  ПараметрыВарианта - См. РетроБонусыРасчет.НовыеПараметрыВарианта
//  ТаблицаПоставщиков - ТаблицаЗначений
// 
// Возвращаемое значение:
//  Строка - Текст запроса
//
Функция ТекстЗапроса(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТаблицаПоставщиков) Экспорт
	
	ТипБонуса = ПараметрыУсловийРетроБонусов.ТипБонуса;
	ТипыБонуса = Перечисления.ТипыРетроБонусовПоставщиков;
	ТекстыЗапросов = Новый Массив; // Массив Из Строка
	
	Если ТипБонуса = ТипыБонуса.Продажи Тогда
		
		СформироватьТекстыЗапросовПоПродажам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	ИначеЕсли ТипБонуса = ТипыБонуса.Закупки Тогда
		
		СформироватьТекстыЗапросовПоЗакупкам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов, ТаблицаПоставщиков);
		
	ИначеЕсли ТипБонуса = ТипыБонуса.Остатки Тогда
		
		СформироватьТекстыЗапросовПоОстаткам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	ИначеЕсли ТипБонуса = ТипыБонуса.ПустаяСсылка() Тогда
		
		ШаблонОшибки = НСтр("ru = 'Не заполнен тип бонуса для документа ""%1""'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонОшибки,
			ПараметрыУсловийРетроБонусов.ДокументУсловийРетроБонусовПредставление);
		ВызватьИсключение ТекстОшибки;
		
	Иначе
		
		ШаблонОшибки = НСтр("ru = 'Некорректный тип бонуса ""%1"" для документа ""%2""'");
		ТипБонусаСтрокой = Строка(ТипБонуса);
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонОшибки,
			ТипБонусаСтрокой,
			ПараметрыУсловийРетроБонусов.ДокументУсловийРетроБонусовПредставление);
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	РазделительПакетаЗапросов = ОбщегоНазначения.РазделительПакетаЗапросов();
	ТекстЗапроса = СтрСоединить(ТекстыЗапросов, РазделительПакетаЗапросов);
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Параметры:
//  ИсходныйДокумент - ДокументСсылка.УсловияРетроБонусовПоставщика
// 
// Возвращаемое значение:
//  ТаблицаЗначений:
//  * Контрагент - СправочникСсылка.Контрагенты
//  * Партнер - СправочникСсылка.Партнеры
//  * Договор - СправочникСсылка.ДоговорыКонтрагентов
//  * Соглашение - СправочникСсылка.СоглашенияСПоставщиками
//
Функция ПредварительнаяТаблицаПоставщиков(ИсходныйДокумент) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИсходныйДокумент", ИсходныйДокумент);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РетроБонусыПоставщиковПоставщики.Контрагент КАК Контрагент,
	|	РетроБонусыПоставщиковПоставщики.Партнер КАК Партнер,
	|	РетроБонусыПоставщиковПоставщики.Договор КАК Договор,
	|	РетроБонусыПоставщиковПоставщики.Соглашение КАК Соглашение,
	|	РетроБонусыПоставщиковПоставщики.НачалоДействия КАК НачалоДействия,
	|	РетроБонусыПоставщиковПоставщики.ОкончаниеДействия КАК ОкончаниеДействия
	|ИЗ
	|	РегистрСведений.РетроБонусыПоставщиковПоставщики КАК РетроБонусыПоставщиковПоставщики
	|ГДЕ
	|	РетроБонусыПоставщиковПоставщики.ДокументУсловий = &ИсходныйДокумент";
	
	Запрос.Текст = ТекстЗапроса;
	ТаблицаПоставщиков = Запрос.Выполнить().Выгрузить();
	Возврат ТаблицаПоставщиков;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ТекстЗапроса

#Область Продажи

Процедура СформироватьТекстыЗапросовПоПродажам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ПоказательТоваров = ПараметрыУсловийРетроБонусов.ПоказательТоваров;
	ВидыПоказателей = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	
	Если ПоказательТоваров = ВидыПоказателей.НеИспользуется Тогда
		
		СформироватьТекстыЗапросовПродажиБезЦелевогоПоказателя(
			ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	ИначеЕсли ПоказательТоваров = ВидыПоказателей.Сумма Тогда
		
		СформироватьТекстыЗапросовПродажиСумма(
			ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	ИначеЕсли ПоказательТоваров = ВидыПоказателей.Количество Тогда
		
		СформироватьТекстыЗапросовПродажиКоличество(
			ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	ИначеЕсли ПоказательТоваров = ВидыПоказателей.КоличествоСовокупно Тогда
		
		СформироватьТекстыЗапросовПродажиКоличествоСовокупно(
			ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	ИначеЕсли ПоказательТоваров = ВидыПоказателей.ПакетноеПредложение Тогда
		
		СформироватьТекстыЗапросовПродажиПакетноеПредложение(
			ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	ИначеЕсли ПоказательТоваров = ВидыПоказателей.ПустаяСсылка() Тогда
		
		ШаблонОшибки = НСтр("ru = 'Не заполнен показатель товаров для документа ""%1""'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонОшибки,
			ПараметрыУсловийРетроБонусов.ДокументУсловийРетроБонусовПредставление);
		ВызватьИсключение ТекстОшибки;
		
	Иначе
		
		ШаблонОшибки = НСтр("ru = 'Не удалось определить показатель товаров (""%1"") для документа ""%2""'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонОшибки,
			ПараметрыУсловийРетроБонусов.ПоказательТоваровПредставление,
			ПараметрыУсловийРетроБонусов.ДокументУсловийРетроБонусовПредставление);
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьТекстыЗапросовПродажиБезЦелевогоПоказателя(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ДобавитьТекстЗапросаПараметрыРБ(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаУчастникиПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаКонтрагенты(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПартнерыЗаглушка(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПартнерыКонтрагентыЗаглушка(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаАналитикаПоПартнерам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаАналитикаУчетаНоменклатуры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаПродажи(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаПроцентСкидкиБезГруппировок(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаИтоговыеДанныеБезЦелевогоПоказателя(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаСлияниеПоПродажам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаВыборкиДанных(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
КонецПроцедуры

Процедура СформироватьТекстыЗапросовПродажиСумма(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ДобавитьТекстЗапросаПараметрыРБ(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаУчастникиПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаКонтрагенты(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПартнерыЗаглушка(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПартнерыКонтрагентыЗаглушка(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаАналитикаПоПартнерам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаАналитикаУчетаНоменклатуры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаПродажиБезОтбораПоКонтрагентам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПродажиСОтборомПоКонтрагентам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаПроцентСкидкиБезГруппировок(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоПериодам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПревышениеЛимитаОбщая(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПодготовленныеДанныеПоСумме(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеСУчетомПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана Тогда
		РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеБезЗапретаПревышения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	КонецЕсли;
	
	Если ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПропорциональноеРаспределение Тогда
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеДляПропорциональногоРаспределенияПоСумме(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаПриоритетОкругления(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОкруглениеПропорциональногоРаспределения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаИтоговоеПропорциональноеРаспределение(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаИтоговыеДанные(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаСлияниеПоПродажам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаВыборкиДанных(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
КонецПроцедуры

Процедура СформироватьТекстыЗапросовПродажиКоличество(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ДобавитьТекстЗапросаПараметрыРБ(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаТоварыМинимальныйПланПоУпаковкам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаМинимальныеПараметрыПоПозиции(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаАналитикаУчетаНоменклатуры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаУчастникиПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаКонтрагенты(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПартнерыЗаглушка(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПартнерыКонтрагентыЗаглушка(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаАналитикаПоПартнерам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаПродажи(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаПроцентСкидкиБезГруппировок(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПревышениеЛимитаОбщая(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоПериодам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПодготовленныеДанныеОпределениеПлана(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПодготовленныеДанныеПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеСУчетомПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана Тогда
		РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеБезЗапретаПревышения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	КонецЕсли;
	
	Если ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПропорциональноеРаспределение Тогда
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеДляПропорциональногоРаспределенияПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаБазаПропорциональногоРаспределенияПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаРасчетПропорциональногоРаспределенияПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаПропорциональноеРаспределениеПоПозициям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаПриоритетОкругления(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОкруглениеПропорциональногоРаспределения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаИтоговоеПропорциональноеРаспределение(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаИтоговыеДанные(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаСлияниеПоПродажам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаВыборкиДанных(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
КонецПроцедуры

Процедура СформироватьТекстыЗапросовПродажиКоличествоСовокупно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ДобавитьТекстЗапросаПараметрыРБ(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаУчастникиПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаКонтрагенты(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПартнерыЗаглушка(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПартнерыКонтрагентыЗаглушка(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаАналитикаПоПартнерам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаАналитикаУчетаНоменклатуры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаПродажи(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаПроцентСкидкиБезГруппировок(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаУчастникиПериодыДокументы(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаУчастникиПериодыДокументыВсеТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаУчастникиПериодыДокументыПроданныеТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаНедостающийСоставПакета(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПроцентСкидкиСДаннымиПоПакету(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоПериодам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоПериодамУсловияПакетаНеВыполнены(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоПериодамУсловияПакетаВыполнены(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПодготовленныеДанныеПоКоличествуСовокупно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеСУчетомПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеБезЗапретаПревышения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаИтоговыеДанные(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаСлияниеПоПродажам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаВыборкиДанных(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
КонецПроцедуры

Процедура СформироватьТекстыЗапросовПродажиПакетноеПредложение(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ДобавитьТекстЗапросаПараметрыРБ(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаУчастникиПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаКонтрагенты(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПартнерыЗаглушка(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаПартнерыКонтрагентыЗаглушка(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаАналитикаПоПартнерам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаАналитикаУчетаНоменклатуры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаПродажи(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаПроцентСкидкиБезГруппировок(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаУчастникиПериодыДокументы(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаУчастникиПериодыДокументыВсеТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаУчастникиПериодыДокументыПроданныеТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаНедостающийСоставПакета(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПроцентСкидкиСДаннымиПоПакету(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаКратностьПакетаТоваров(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаКоличествоПакетовТоваров(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПодготовленныеДанныеПоПакетномуПредложению(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПревышениеЛимитаОбщая(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеСУчетомПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	Если ПараметрыУсловийРетроБонусов.ПропорциональноеРаспределение Тогда
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеДляПропорциональногоРаспределенияПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаБазаПропорциональногоРаспределенияПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаРасчетПропорциональногоРаспределенияПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаПропорциональноеРаспределениеПоПозициям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаПриоритетОкругления(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОкруглениеПропорциональногоРаспределения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаИтоговоеПропорциональноеРаспределение(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаИтоговыеДанные(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаСлияниеПоПродажам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаВыборкиДанных(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаПартнерыЗаглушка(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&ИсходныйДокумент КАК УсловияРетроБонусов,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка) КАК Партнер,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаНачала,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаОкончания,
	|	0 КАК СуммаПлан
	|ПОМЕСТИТЬ ВТ_Партнеры
	|ГДЕ
	|	ЛОЖЬ";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаПартнерыКонтрагентыЗаглушка(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&ИсходныйДокумент КАК УсловияРетроБонусов,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка) КАК Партнер,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаНачала,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаОкончания,
	|	0 КАК СуммаПлан
	|ПОМЕСТИТЬ ВТ_ПартнерыКонтрагенты
	|ГДЕ
	|	ЛОЖЬ";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаСлияниеПоПродажам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ДетализацияРасчетаУчастников = ПараметрыУсловийРетроБонусов.ДетализацияРасчетаУчастников;
	ДетализацииУчастников = Перечисления.ДетализацияРасчетаУчастниковРетроБонусов;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИтоговыеДанные.Период КАК Период,
	|	ИтоговыеДанные.ПериодРасчета КАК ПериодРасчета,
	|	ИтоговыеДанные.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ИтоговыеДанные.ПоказательТоваров КАК ПоказательТоваров,
	|	ИтоговыеДанные.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ИтоговыеДанные.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ЕСТЬNULL(РетроБонусыПоставщиковПоставщики.Контрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК КонтрагентПоставщик,
	|	ЕСТЬNULL(РетроБонусыПоставщиковПоставщики.Партнер, ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)) КАК ПартнерПоставщик,
	|	ЕСТЬNULL(РетроБонусыПоставщиковПоставщики.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) КАК ДоговорПоставщика,
	|	ЕСТЬNULL(РетроБонусыПоставщиковПоставщики.Соглашение, ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка)) КАК СоглашениеПоставщика,
	|	ИтоговыеДанные.ДокументРегистратор КАК ДокументРегистратор,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	ИтоговыеДанные.Организация КАК Организация,
	|	&ВыражениеКонтрагентПокупатель КАК КонтрагентПокупатель,
	|	ИтоговыеДанные.Номенклатура КАК Номенклатура,
	|	ИтоговыеДанные.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ИтоговыеДанные.Характеристика КАК Характеристика,
	|	ИтоговыеДанные.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ИтоговыеДанные.ПланВыполнен КАК ПланВыполнен,
	|	ИтоговыеДанные.Количество КАК КоличествоОборот,
	|	0 КАК КоличествоОстаток,
	|	ИтоговыеДанные.Валюта КАК Валюта,
	|	ИтоговыеДанные.БазоваяЦена КАК БазоваяЦена,
	|	ИтоговыеДанные.СуммаОборотСНДС КАК СуммаОборотСНДС,
	|	ИтоговыеДанные.СуммаОборотБезНДС КАК СуммаОборотБезНДС,
	|	ИтоговыеДанные.Количество * ИтоговыеДанные.БазоваяЦена КАК СуммаВБазовыхЦенах,
	|	ИтоговыеДанные.БонусПроцент КАК БонусПроцент,
	|	ИтоговыеДанные.СуммаПлан КАК СуммаПлан,
	|	ИтоговыеДанные.КоличествоПлан КАК КоличествоПлан,
	|	ИтоговыеДанные.РасчетнаяБаза КАК РасчетнаяБаза,
	|	ИтоговыеДанные.СуммаБонус КАК СуммаБонус,
	|	ИтоговыеДанные.КоличествоПакетов КАК КоличествоПакетов,
	|	0 КАК СуммаБонусаЗаЕдиницу
	|ПОМЕСТИТЬ ВТ_Слияние
	|ИЗ
	|	ВТ_ИтоговыеДанные КАК ИтоговыеДанные
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РетроБонусыПоставщиковПоставщики КАК РетроБонусыПоставщиковПоставщики
	|	ПО РетроБонусыПоставщиковПоставщики.ДокументУсловий = &ИсходныйДокумент
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПроцентСкидки КАК ВТ_ПроцентСкидки
	|	ПО ИтоговыеДанные.ДокументРегистратор = ВТ_ПроцентСкидки.ДокументРегистратор
	|		И ИтоговыеДанные.НомерСтроки = ВТ_ПроцентСкидки.НомерСтроки";
	
	Если ДетализацияРасчетаУчастников = ДетализацииУчастников.ПустаяСсылка() Тогда
		
		ВыражениеКонтрагентПокупатель = "ЕСТЬNULL(ВТ_ПроцентСкидки.Контрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))";
		
	Иначе
		
		ВыражениеКонтрагентПокупатель = "ИтоговыеДанные.Контрагент";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеКонтрагентПокупатель", ВыражениеКонтрагентПокупатель);
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

#КонецОбласти

#Область Закупки

Процедура СформироватьТекстыЗапросовПоЗакупкам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов, ТаблицаПоставщиков)
	
	КомбинацииПоставщиков = КомбинацииПолейПоставщиков(ТаблицаПоставщиков);
	
	ПоказательТоваров = ПараметрыУсловийРетроБонусов.ПоказательТоваров;
	ВидыПоказателей = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам;
	
	Если ПоказательТоваров = ВидыПоказателей.НеИспользуется Тогда
		
		СформироватьТекстыЗапросовЗакупкиБезЦелевогоПоказателя(
			ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов, КомбинацииПоставщиков);
		
	ИначеЕсли ПоказательТоваров = ВидыПоказателей.Сумма Тогда
		
		СформироватьТекстыЗапросовЗакупкиСумма(
			ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов, КомбинацииПоставщиков);
		
	ИначеЕсли ПоказательТоваров = ВидыПоказателей.Количество Тогда
		
		СформироватьТекстыЗапросовЗакупкиКоличество(
			ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов, КомбинацииПоставщиков);
		
	ИначеЕсли ПоказательТоваров = ВидыПоказателей.КоличествоСовокупно Тогда
		
		СформироватьТекстыЗапросовЗакупкиКоличествоСовокупно(
			ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов, КомбинацииПоставщиков);
		
	ИначеЕсли ПоказательТоваров = ВидыПоказателей.ПакетноеПредложение Тогда
		
		СформироватьТекстыЗапросовЗакупкиПакетноеПредложение(
			ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов, КомбинацииПоставщиков);
		
	ИначеЕсли ПоказательТоваров = ВидыПоказателей.ПустаяСсылка() Тогда
		
		ШаблонОшибки = НСтр("ru = 'Не заполнен показатель товаров для документа ""%1""'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонОшибки,
			ПараметрыУсловийРетроБонусов.ДокументУсловийРетроБонусовПредставление);
		ВызватьИсключение ТекстОшибки;
		
	Иначе
		
		ШаблонОшибки = НСтр("ru = 'Не удалось определить показатель товаров (""%1"") для документа ""%2""'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонОшибки,
			ПараметрыУсловийРетроБонусов.ПоказательТоваровПредставление,
			ПараметрыУсловийРетроБонусов.ДокументУсловийРетроБонусовПредставление);
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьТекстыЗапросовЗакупкиБезЦелевогоПоказателя(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов, КомбинацииПоставщиков)
	
	ДобавитьТекстЗапросаПараметрыРБ(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаАналитикаУчетаНоменклатуры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	ДобавитьТекстЗапросаПоставщики(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	ДобавитьТекстЗапросаЗакупкиПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов, КомбинацииПоставщиков);
	ДобавитьТекстЗапросаЗакупкиСОтборомПоПоставщикам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов, КомбинацииПоставщиков);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаПроцентСкидкиБезГруппировок(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаИтоговыеДанныеБезЦелевогоПоказателя(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	ДобавитьТекстЗапросаСлияниеПоЗакупкам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаВыборкиДанных(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
КонецПроцедуры

Процедура СформироватьТекстыЗапросовЗакупкиСумма(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов, КомбинацииПоставщиков)
	
	ДобавитьТекстЗапросаПараметрыРБ(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаАналитикаУчетаНоменклатуры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	ДобавитьТекстЗапросаПоставщики(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	ДобавитьТекстЗапросаЗакупкиПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов, КомбинацииПоставщиков);
	ДобавитьТекстЗапросаЗакупкиСОтборомПоПоставщикам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов, КомбинацииПоставщиков);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаПроцентСкидкиБезГруппировок(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоПериодам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	Если ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.РаспределениеПоFIFO Тогда
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаКоличествоСтрокПоДокументам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаКоличествоСтрокПоПериодам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаКоличествоСтрокПоПериодамНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаКоличествоСтрокПоДокументамНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаКоличествоСтрокПоПериодамДокументамНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаПревышениеЛимитаОбщая(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПодготовленныеДанныеПоСумме(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	Если ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.РаспределениеПоFIFO Тогда
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаПодготовленныеДанныеПоДокументам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоПорциям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоПорциямНарастающийИтог(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ОборотыПоПорциям",
			"ВТ_ОборотыПоПорциямНарастающийИтог");
		РетроБонусыРасчет.ДобавитьТекстЗапросаПорцияПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ОборотыПоПорциямНарастающийИтог",
			"ВТ_ПорцияПревышенияЛимита");
		РетроБонусыРасчет.ДобавитьТекстЗапросаПредыдущаяПорцияДоПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыДоПорцииПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыЗаПорциюПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ОборотыДоПорцииПревышенияЛимита",
			"ВТ_ОборотыЗаПорциюПревышенияЛимита",
			РетроБонусыРасчет.ПорцияНарастающегоИтога());
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоСубпорциям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоПорциямНарастающийИтог(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ОборотыПоСубпорциям",
			"ВТ_ОборотыПоСубпорциямНарастающийИтог");
		РетроБонусыРасчет.ДобавитьТекстЗапросаПорцияПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ОборотыПоСубпорциямНарастающийИтог",
			"ВТ_СубпорцияПревышенияЛимита");
		РетроБонусыРасчет.ДобавитьТекстЗапросаСубпорцияПревышенияЛимитаОборотыДоПорции(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаПредыдущаяСубпорцияДоПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаСубпорцияПревышенияЛимитаОборотыДоСубпорции(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыЗаПорциюПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_СубпорцияПревышенияЛимитаОборотыДоСубпорции",
			"ВТ_ОборотыЗаСубпорциюПревышенияЛимита",
			РетроБонусыРасчет.СубпорцияНарастающегоИтога());
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаПревышениеЛимитаНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаМинимальныйПриоритетВыполненияПланаПоСумме(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаДокументВыполненияПлана(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаДокументВыполненияПланаСуммаПредыдущих(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаРаспределениеСтрокДокументаПревышенияПлана(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеДляРаспределенияПоФИФО(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаПриоритетОкругления(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОкруглениеРаспределенияПоФИФО(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаИтоговоеРаспределениеПоФИФОПоСумме(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	 ИЛИ ПараметрыУсловийРетроБонусов.ПропорциональноеРаспределение Тогда
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеСУчетомПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана Тогда
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеБезЗапретаПревышения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	Если ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПропорциональноеРаспределение Тогда
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеДляПропорциональногоРаспределенияПоСумме(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаПриоритетОкругления(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОкруглениеПропорциональногоРаспределения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаИтоговоеПропорциональноеРаспределение(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаИтоговыеДанные(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаСлияниеПоЗакупкам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаВыборкиДанных(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
КонецПроцедуры

Процедура СформироватьТекстыЗапросовЗакупкиКоличество(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов, КомбинацииПоставщиков)
	
	ДобавитьТекстЗапросаПараметрыРБ(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаТоварыМинимальныйПланПоУпаковкам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаМинимальныеПараметрыПоПозиции(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаАналитикаУчетаНоменклатуры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	ДобавитьТекстЗапросаПоставщики(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	ДобавитьТекстЗапросаЗакупкиПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов, КомбинацииПоставщиков);
	ДобавитьТекстЗапросаЗакупкиСОтборомПоПоставщикам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов, КомбинацииПоставщиков);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаПроцентСкидкиБезГруппировок(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	Если ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.РаспределениеПоFIFO Тогда
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаКоличествоСтрокПоДокументам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаКоличествоСтрокПоПериодам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаКоличествоСтрокПоПериодамНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаКоличествоСтрокПоДокументамНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаКоличествоСтрокПоПериодамДокументамНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаПревышениеЛимитаОбщая(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоПериодам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПодготовленныеДанныеОпределениеПлана(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПодготовленныеДанныеПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	Если ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.РаспределениеПоFIFO Тогда
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаПодготовленныеДанныеПоДокументам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоПорциям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоПорциямНарастающийИтог(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ОборотыПоПорциям",
			"ВТ_ОборотыПоПорциямНарастающийИтог");
		РетроБонусыРасчет.ДобавитьТекстЗапросаПорцияПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ОборотыПоПорциямНарастающийИтог",
			"ВТ_ПорцияПревышенияЛимита");
		РетроБонусыРасчет.ДобавитьТекстЗапросаПредыдущаяПорцияДоПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыДоПорцииПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыЗаПорциюПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ОборотыДоПорцииПревышенияЛимита",
			"ВТ_ОборотыЗаПорциюПревышенияЛимита",
			РетроБонусыРасчет.ПорцияНарастающегоИтога());
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоСубпорциям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоПорциямНарастающийИтог(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ОборотыПоСубпорциям",
			"ВТ_ОборотыПоСубпорциямНарастающийИтог");
		РетроБонусыРасчет.ДобавитьТекстЗапросаПорцияПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ОборотыПоСубпорциямНарастающийИтог",
			"ВТ_СубпорцияПревышенияЛимита");
		РетроБонусыРасчет.ДобавитьТекстЗапросаСубпорцияПревышенияЛимитаОборотыДоПорции(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаПредыдущаяСубпорцияДоПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаСубпорцияПревышенияЛимитаОборотыДоСубпорции(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыЗаПорциюПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_СубпорцияПревышенияЛимитаОборотыДоСубпорции",
			"ВТ_ОборотыЗаСубпорциюПревышенияЛимита",
			РетроБонусыРасчет.СубпорцияНарастающегоИтога());
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаПревышениеЛимитаНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаМинимальныйПриоритетВыполненияПланаПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаДокументВыполненияПлана(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаДокументВыполненияПланаСуммаПредыдущих(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаРаспределениеСтрокДокументаПревышенияПлана(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеДляРаспределенияПоФИФО(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеДляРаспределенияПоФИФОСуммаБонусаПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаПриоритетОкругления(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОкруглениеРаспределенияПоФИФО(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаИтоговоеРаспределениеПоФИФОПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	 ИЛИ ПараметрыУсловийРетроБонусов.ПропорциональноеРаспределение Тогда
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеСУчетомПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	Если НЕ ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана Тогда
		РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеБезЗапретаПревышения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	КонецЕсли;
	
	Если ПараметрыУсловийРетроБонусов.ЗапретНачисленияСверхПлана
	   И ПараметрыУсловийРетроБонусов.ПропорциональноеРаспределение Тогда
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеДляПропорциональногоРаспределенияПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаБазаПропорциональногоРаспределенияПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаРасчетПропорциональногоРаспределенияПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаПропорциональноеРаспределениеПоПозициям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаПриоритетОкругления(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОкруглениеПропорциональногоРаспределения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаИтоговоеПропорциональноеРаспределение(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаИтоговыеДанные(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаСлияниеПоЗакупкам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаВыборкиДанных(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
КонецПроцедуры

Процедура СформироватьТекстыЗапросовЗакупкиКоличествоСовокупно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов, КомбинацииПоставщиков)
	
	ДобавитьТекстЗапросаПараметрыРБ(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаАналитикаУчетаНоменклатуры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	ДобавитьТекстЗапросаПоставщики(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	ДобавитьТекстЗапросаЗакупкиПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов, КомбинацииПоставщиков);
	ДобавитьТекстЗапросаЗакупкиСОтборомПоПоставщикам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов, КомбинацииПоставщиков);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаПроцентСкидкиБезГруппировок(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаУчастникиПериодыДокументы(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаУчастникиПериодыДокументыВсеТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаУчастникиПериодыДокументыПроданныеТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаНедостающийСоставПакета(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПроцентСкидкиСДаннымиПоПакету(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоПериодам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоПериодамУсловияПакетаНеВыполнены(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоПериодамУсловияПакетаВыполнены(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПодготовленныеДанныеПоКоличествуСовокупно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеСУчетомПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеБезЗапретаПревышения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаИтоговыеДанные(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаСлияниеПоЗакупкам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаВыборкиДанных(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
КонецПроцедуры

Процедура СформироватьТекстыЗапросовЗакупкиПакетноеПредложение(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов, КомбинацииПоставщиков)
	
	ДобавитьТекстЗапросаПараметрыРБ(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаАналитикаУчетаНоменклатуры(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	ДобавитьТекстЗапросаПоставщики(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	ДобавитьТекстЗапросаЗакупкиПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов, КомбинацииПоставщиков);
	ДобавитьТекстЗапросаЗакупкиСОтборомПоПоставщикам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов, КомбинацииПоставщиков);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаПроцентСкидкиБезГруппировок(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаУчастникиПериодыДокументы(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаУчастникиПериодыДокументыВсеТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаУчастникиПериодыДокументыПроданныеТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаНедостающийСоставПакета(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПроцентСкидкиСДаннымиПоПакету(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаКратностьПакетаТоваров(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаКоличествоПакетовТоваров(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	РетроБонусыРасчет.ДобавитьТекстЗапросаПодготовленныеДанныеПоПакетномуПредложению(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	Если ПараметрыУсловийРетроБонусов.РаспределениеПоFIFO Тогда
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаКоличествоСтрокПоДокументам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаКоличествоСтрокПоПериодам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаКоличествоСтрокПоПериодамНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаКоличествоСтрокПоДокументамНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаКоличествоСтрокПоПериодамДокументамНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаПревышениеЛимитаОбщая(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	Если ПараметрыУсловийРетроБонусов.РаспределениеПоFIFO Тогда
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаПодготовленныеДанныеПоДокументамПакетноеПредложение(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоПорциям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоПорциямНарастающийИтог(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ОборотыПоПорциям",
			"ВТ_ОборотыПоПорциямНарастающийИтог");
		РетроБонусыРасчет.ДобавитьТекстЗапросаПорцияПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ОборотыПоПорциямНарастающийИтог",
			"ВТ_ПорцияПревышенияЛимита");
		РетроБонусыРасчет.ДобавитьТекстЗапросаПредыдущаяПорцияДоПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыДоПорцииПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыЗаПорциюПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ОборотыДоПорцииПревышенияЛимита",
			"ВТ_ОборотыЗаПорциюПревышенияЛимита",
			РетроБонусыРасчет.ПорцияНарастающегоИтога());
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоСубпорциям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыПоПорциямНарастающийИтог(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ОборотыПоСубпорциям",
			"ВТ_ОборотыПоСубпорциямНарастающийИтог");
		РетроБонусыРасчет.ДобавитьТекстЗапросаПорцияПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_ОборотыПоСубпорциямНарастающийИтог",
			"ВТ_СубпорцияПревышенияЛимита");
		РетроБонусыРасчет.ДобавитьТекстЗапросаСубпорцияПревышенияЛимитаОборотыДоПорции(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаПредыдущаяСубпорцияДоПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаСубпорцияПревышенияЛимитаОборотыДоСубпорции(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОборотыЗаПорциюПревышенияЛимита(
			ПараметрыУсловийРетроБонусов,
			ПараметрыВарианта,
			ТекстыЗапросов,
			"ВТ_СубпорцияПревышенияЛимитаОборотыДоСубпорции",
			"ВТ_ОборотыЗаСубпорциюПревышенияЛимита",
			РетроБонусыРасчет.СубпорцияНарастающегоИтога());
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаПревышениеЛимитаНарастающийИтог(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаМинимальныйПриоритетВыполненияПланаПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаДокументВыполненияПлана(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаДокументВыполненияПланаСуммаПредыдущих(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаРаспределениеСтрокДокументаПревышенияПлана(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеДляРаспределенияПоФИФО(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеДляРаспределенияПоФИФОСуммаБонусаПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаПриоритетОкругления(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОкруглениеРаспределенияПоФИФО(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаИтоговоеРаспределениеПоФИФОПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	КонецЕсли;
	
	Если ПараметрыУсловийРетроБонусов.ПропорциональноеРаспределение Тогда
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеСУчетомПревышенияЛимита(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	Если ПараметрыУсловийРетроБонусов.ПропорциональноеРаспределение Тогда
		
		РетроБонусыРасчет.ДобавитьТекстЗапросаДанныеДляПропорциональногоРаспределенияПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаБазаПропорциональногоРаспределенияПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаРасчетПропорциональногоРаспределенияПоКоличеству(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаПропорциональноеРаспределениеПоПозициям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаПриоритетОкругления(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаОкруглениеПропорциональногоРаспределения(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		РетроБонусыРасчет.ДобавитьТекстЗапросаИтоговоеПропорциональноеРаспределение(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
		
	КонецЕсли;
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаИтоговыеДанные(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаСлияниеПоЗакупкам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаВыборкиДанных(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаПоставщики(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	// Таблица ВТ_ПоставщикиПредварительно будет передана в ПроцессорКомпоновкиДанных через МенеджерВременныхТаблиц
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Поставщики.Контрагент КАК Контрагент,
	|	Поставщики.Партнер КАК Партнер,
	|	Поставщики.Договор КАК Договор,
	|	Поставщики.Соглашение КАК Соглашение,
	|	Поставщики.НачалоДействия КАК НачалоДействия,
	|	КОНЕЦПЕРИОДА(Поставщики.ОкончаниеДействия, ДЕНЬ) КАК ОкончаниеДействия,
	|	&ВыражениеПриоритет КАК Приоритет
	|ПОМЕСТИТЬ ВТ_Поставщики
	|ИЗ
	|	ВТ_ПоставщикиПредварительно КАК Поставщики";
	
	ВыражениеПриоритет =
	"ВЫБОР
	|		КОГДА Поставщики.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА Поставщики.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА Поставщики.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА Поставщики.Соглашение = ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеПриоритет", ВыражениеПриоритет);
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// Параметры:
//  ТаблицаПоставщиков - ТаблицаЗначений
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Во всех колонках Истина означает заполненное поле поставщика, Ложь - пустое:
//  * Контрагент - Булево
//  * Партнер - Булево
//  * Договор - Булево
//  * Соглашение - Булево
//
Функция КомбинацииПолейПоставщиков(ТаблицаПоставщиков)
	
	Комбинации = Новый ТаблицаЗначений;
	Комбинации.Колонки.Добавить("Приоритет", ОбщегоНазначения.ОписаниеТипаЧисло(1, 0, ДопустимыйЗнак.Неотрицательный));
	
	ИменаКолонок = Новый Массив; // Массив Из Строка
	ИменаКолонок.Добавить("Контрагент");
	ИменаКолонок.Добавить("Партнер");
	ИменаКолонок.Добавить("Договор");
	ИменаКолонок.Добавить("Соглашение");
	
	Для Каждого ИмяКолонки Из ИменаКолонок Цикл
		Комбинации.Колонки.Добавить(ИмяКолонки, Новый ОписаниеТипов("Булево"));
	КонецЦикла;
	
	Для Каждого СтрокаПоставщиков Из ТаблицаПоставщиков Цикл
		
		СтрокаКомбинаций = Комбинации.Добавить();
		Для Каждого ИмяКолонки Из ИменаКолонок Цикл
			
			СтрокаКомбинаций[ИмяКолонки] = ЗначениеЗаполнено(СтрокаПоставщиков[ИмяКолонки]);
			Если НЕ СтрокаКомбинаций[ИмяКолонки] Тогда
				СтрокаКомбинаций.Приоритет = СтрокаКомбинаций.Приоритет + 1;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ИменаКолонок.Добавить("Приоритет");
	Комбинации.Свернуть(СтрСоединить(ИменаКолонок, ","));
	Комбинации.Сортировать("Приоритет Возр");
	Комбинации.Колонки.Удалить("Приоритет");
	
	Возврат Комбинации;
	
КонецФункции

Процедура ДобавитьТекстЗапросаЗакупкиПредварительно(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов, КомбинацииПоставщиков)
	
	ШаблонЗапроса =
	"ВЫБРАТЬ
	|	Закупки.Период КАК Период,
	|	&ВыражениеПериод КАК ПериодРасчета,
	|	Закупки.НомерСтроки КАК НомерСтроки,
	|	&ВыражениеДокументРегистратор КАК ДокументРегистратор,
	|	Закупки.Организация КАК Организация,
	|	Закупки.Контрагент КАК Контрагент,
	|	Закупки.Партнер КАК Партнер,
	|	Закупки.Договор КАК Договор,
	|	Закупки.Соглашение КАК Соглашение,
	|	Закупки.Склад КАК Склад,
	|	РС_АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	РС_АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА Закупки.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			И Закупки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику)
	|			ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ * Закупки.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА Закупки.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			И Закупки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику)
	|			ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ * Закупки.Сумма КАК СуммаОборотУпрСНДС,
	|	ВЫБОР
	|		КОГДА Закупки.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			И Закупки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику)
	|			ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ * Закупки.СуммаРегл КАК СуммаОборотРеглСНДС,
	|	ВЫБОР
	|		КОГДА Закупки.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			И Закупки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику)
	|			ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ * Закупки.СуммаВВалютеВзаиморасчетов КАК СуммаОборотВВалютеВзаиморасчетовСНДС,
	|	ВЫБОР
	|		КОГДА Закупки.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			И Закупки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику)
	|			ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ * Закупки.СуммаБезНДС КАК СуммаОборотУпрБезНДС,
	|	ВЫБОР
	|		КОГДА Закупки.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			И Закупки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику)
	|			ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ * Закупки.СуммаРеглБезНДС КАК СуммаОборотРеглБезНДС,
	|	ВЫБОР
	|		КОГДА Закупки.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			И Закупки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику)
	|			ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ * Закупки.СуммаБезНДСВВалютеВзаиморасчетов КАК СуммаОборотВВалютеВзаиморасчетовБезНДС,
	|	ВЫБОР
	|		КОГДА Закупки.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			И Закупки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику)
	|			ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ * ВЫБОР
	|		КОГДА ВТ_ПараметрыРБ.УчитыватьНДС
	|			ТОГДА Закупки.Сумма
	|		ИНАЧЕ Закупки.СуммаБезНДС
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА Закупки.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			И Закупки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику)
	|			ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ * ВЫБОР
	|		КОГДА ВТ_ПараметрыРБ.УчитыватьНДС
	|			ТОГДА Закупки.СуммаРегл
	|		ИНАЧЕ Закупки.СуммаРеглБезНДС
	|	КОНЕЦ КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА Закупки.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			И Закупки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику)
	|			ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ * ВЫБОР
	|		КОГДА ВТ_ПараметрыРБ.УчитыватьНДС
	|			ТОГДА Закупки.СуммаВВалютеВзаиморасчетов
	|		ИНАЧЕ Закупки.СуммаБезНДСВВалютеВзаиморасчетов
	|	КОНЕЦ КАК СуммаВВалютеВзаиморасчетов,
	|	ВТ_ПараметрыРБ.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПараметрыРБ.БонусПроцент КАК БонусПроцент,
	|	ВТ_ПараметрыРБ.ПоказательТоваров КАК ПоказательТоваров,
	|	ВТ_ПараметрыРБ.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПараметрыРБ.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ПараметрыРБ.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ПараметрыРБ.УчитыватьНДС КАК УчитыватьНДС,
	|	ВТ_ПараметрыРБ.Валюта КАК ВалютаУсловий,
	|	Закупки.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ВТ_ПараметрыРБ.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ПараметрыРБ.РаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	ВТ_ПараметрыРБ.СуммаПлан КАК СуммаПлан,
	|	ВТ_ПараметрыРБ.БазаРасчета КАК БазаРасчета,
	|	ВТ_ПараметрыРБ.ОтборТоваровВыбранные КАК ОтборТоваровВыбранные,
	|	ВТ_ПараметрыРБ.ОтборТоваровКромеВыбранных КАК ОтборТоваровКромеВыбранных,
	|	ВТ_ПараметрыРБ.ОтборТоваровБезОграничений КАК ОтборТоваровБезОграничений,
	|	ВТ_ПараметрыРБ.ОтборУчастниковВыбранные КАК ОтборУчастниковВыбранные,
	|	ВТ_ПараметрыРБ.ОтборУчастниковКромеВыбранных КАК ОтборУчастниковКромеВыбранных,
	|	&ВыражениеПриоритетПоставщика КАК ПриоритетПоставщика
	|ПОМЕСТИТЬ ВТ_ЗакупкиПредварительно
	|ИЗ
	|	РегистрНакопления.Закупки КАК Закупки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПараметрыРБ КАК ВТ_ПараметрыРБ
	|		ПО ИСТИНА
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК РС_АналитикаУчетаНоменклатуры
	|		ПО Закупки.АналитикаУчетаНоменклатуры = РС_АналитикаУчетаНоменклатуры.КлючАналитики
	|		ЛЕВОЕ СОЕДИНЕНИЕ &ВТ_Поставщики КАК ВТ_Поставщики ПО ИСТИНА
	|ГДЕ
	|	&УсловиеОтбораПоТипуДокументаХозОперации
	|	И Закупки.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И Закупки.Организация В (&Организация)
	|	И &УсловиеОтбораПоПоставщикам
	|	И &УсловиеОтбораТоваров
	|	И Закупки.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И &УсловиеОтбораПоВалюте
	|	И &УсловиеОтбораПоКонтрагенту
	|	И &УсловиеОтбораПоПартнеру";
	
	Если ПараметрыУсловийРетроБонусов.Товары = Перечисления.СоставыСписковРетроБонусов.Выбранные Тогда
		
		УсловиеОтбораТоваров =
		"Закупки.АналитикаУчетаНоменклатуры В
		|			(ВЫБРАТЬ
		|				ВТ_АналитикаУчетаНоменклатуры.КлючАналитики
		|			ИЗ
		|				ВТ_АналитикаУчетаНоменклатуры КАК ВТ_АналитикаУчетаНоменклатуры)";
		
	ИначеЕсли ПараметрыУсловийРетроБонусов.Товары = Перечисления.СоставыСписковРетроБонусов.КромеВыбранных Тогда
		
		УсловиеОтбораТоваров =
		"НЕ Закупки.АналитикаУчетаНоменклатуры В
		|			(ВЫБРАТЬ
		|				ВТ_АналитикаУчетаНоменклатуры.КлючАналитики
		|			ИЗ
		|				ВТ_АналитикаУчетаНоменклатуры КАК ВТ_АналитикаУчетаНоменклатуры)";
		
	Иначе
		
		УсловиеОтбораТоваров = "ИСТИНА";
		
	КонецЕсли;
	
	Если ПараметрыВарианта.ЭтоРасшифровка Тогда
		
		УсловиеОтбораПоКонтрагенту =
		"ВЫБОР
		|	КОГДА &Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|		ИЛИ &Контрагент = НЕОПРЕДЕЛЕНО
		|	ТОГДА ИСТИНА
		|	ИНАЧЕ Закупки.Контрагент = &Контрагент
		|КОНЕЦ";
		УсловиеОтбораПоПартнеру =
		"ВЫБОР
		|	КОГДА &Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|		ИЛИ &Партнер = НЕОПРЕДЕЛЕНО
		|	ТОГДА ИСТИНА
		|	ИНАЧЕ Закупки.Партнер = &Партнер
		|КОНЕЦ";
		
	Иначе
		
		УсловиеОтбораПоКонтрагенту = "ИСТИНА";
		УсловиеОтбораПоПартнеру = "ИСТИНА";
		
	КонецЕсли;
	
	Если ПараметрыУсловийРетроБонусов.ПоказательТоваров = Перечисления.ЦелевыеПоказателиРетроБонусовПоТоварам.Сумма
	   И ПараметрыУсловийРетроБонусов.БазаРасчета = Перечисления.БазыРасчетаРетроБонусов.СуммаЗакупкиВзаиморасчеты Тогда
		
		УсловиеОтбораПоВалюте = "Закупки.ВалютаВзаиморасчетов = ВТ_ПараметрыРБ.Валюта"; // @query-part
		
	Иначе
		
		УсловиеОтбораПоВалюте = "ИСТИНА";
		
	КонецЕсли;
	
	ВыражениеПериод = РетроБонусыРасчет.ВыражениеПериодРасчета(ПараметрыУсловийРетроБонусов, Истина);
	
	СоединенияСПоставщиками = СоединенияСТаблицейПоставщиковПоВсемКомбинациямПолей(КомбинацииПоставщиков, "Закупки");
	УсловиеОтбораПоПоставщикам = УсловиеОтбораЗакупокПоКомбинациямПолейПоставщиков(КомбинацииПоставщиков);
	ВыражениеПриоритетПоставщика = ВыражениеПриоритетПоставщикаПоКомбинациямПолейПоставщиков(КомбинацииПоставщиков);
	
	ТипыРегистраторов = ТипыРегистраторовВыборкиЗакупок();
	ТекстыПодзапросов = Новый Массив; // Массив Из Строка
	НомерПодзапроса = 1;
	
	Для ИндексТипаДокумента = 0 По ТипыРегистраторов.ВГраница() Цикл
		
		ТипДокумента = ТипыРегистраторов[ИндексТипаДокумента];
		ВыражениеДокументРегистратор = "ВЫРАЗИТЬ(Закупки.Регистратор КАК " + ТипДокумента.ПолноеИмя() +")";
		УсловиеОтбораПоТипуДокументаХозОперации = УсловиеОтбораЗакупокПоТипуДокументаХозОперации(ТипДокумента);
		
		ТекстЗапроса = ШаблонЗапроса;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеПериод", ВыражениеПериод);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеДокументРегистратор", ВыражениеДокументРегистратор);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыражениеПриоритетПоставщика", ВыражениеПриоритетПоставщика);
		
		ТекстЗапроса = СтрЗаменить(
			ТекстЗапроса, "ЛЕВОЕ СОЕДИНЕНИЕ &ВТ_Поставщики КАК ВТ_Поставщики ПО ИСТИНА", СоединенияСПоставщиками);
		
		ТекстЗапроса = СтрЗаменить(
			ТекстЗапроса, "&УсловиеОтбораПоТипуДокументаХозОперации", УсловиеОтбораПоТипуДокументаХозОперации);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораТоваров", УсловиеОтбораТоваров);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоВалюте", УсловиеОтбораПоВалюте);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоКонтрагенту", УсловиеОтбораПоКонтрагенту);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоПартнеру", УсловиеОтбораПоПартнеру);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоПоставщикам", УсловиеОтбораПоПоставщикам);
		
		Если НомерПодзапроса > 1 Тогда
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ВТ_ЗакупкиПредварительно", "");
			
		КонецЕсли;
		
		ТекстыПодзапросов.Добавить(ТекстЗапроса);
		НомерПодзапроса = НомерПодзапроса + 1;
		
	КонецЦикла;
	
	РазделительПодзапросов = РетроБонусыРасчет.РазделительПодзапросов();
	ТекстЗапроса = СтрСоединить(ТекстыПодзапросов, РазделительПодзапросов);
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Функция УсловиеОтбораЗакупокПоТипуДокументаХозОперации(ТипДокумента)
	
	ХозяйственныеОперации = Новый Массив; // Массив Из ПеречислениеСсылка.ХозяйственныеОперации
	
	Если ТипДокумента = Метаданные.Документы.ВозвратТоваровПоставщику Тогда
		
		ХозяйственныеОперации.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТоваровПоставщику);
		
	ИначеЕсли ТипДокумента = Метаданные.Документы.ВыкупПринятыхНаХранениеТоваров Тогда
		
		ХозяйственныеОперации.Добавить(Перечисления.ХозяйственныеОперации.ВыкупПринятыхНаХранениеТоваров);
		
	ИначеЕсли ТипДокумента = Метаданные.Документы.КорректировкаПриобретения Тогда
		
		ХозяйственныеОперации.Очистить(); // все ХО
		
	ИначеЕсли ТипДокумента = Метаданные.Документы.ПриобретениеТоваровУслуг Тогда
		
		ХозяйственныеОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС);
		ХозяйственныеОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути);
		ХозяйственныеОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки);
		ХозяйственныеОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет);
		ХозяйственныеОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика);
		ХозяйственныеОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути);
		ХозяйственныеОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки);
		ХозяйственныеОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо);
		ХозяйственныеОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту);
		ХозяйственныеОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути);
		
	Иначе
		
		ТипДокументаСтрокой = Строка(ТипДокумента);
		ШаблонОшибки = НСтр("ru = 'Некорректный тип документа закупок ""%1""'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонОшибки, ТипДокументаСтрокой);
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	ТекстУсловия = "Закупки.Регистратор ССЫЛКА " + ТипДокумента.ПолноеИмя();
	
	Если ХозяйственныеОперации.Количество() > 0 Тогда
		
		ХозяйственныеОперацииСтрокиЗначений = Новый Массив; // Массив Из Строка
		Для Каждого ХозяйственнаяОперация Из ХозяйственныеОперации Цикл
			
			СтрокаЗначения = "ЗНАЧЕНИЕ(" + ПолучитьПолноеИмяПредопределенногоЗначения(ХозяйственнаяОперация) + ")";
			ХозяйственныеОперацииСтрокиЗначений.Добавить(СтрокаЗначения);
			
		КонецЦикла;
		
		ХозяйственныеОперацииМассивСтрокой = СтрСоединить(ХозяйственныеОперацииСтрокиЗначений, "," + Символы.ПС);
		ТекстУсловия = ТекстУсловия + Символы.ПС + " И Закупки.ХозяйственнаяОперация В ("
			+ Символы.ПС + ХозяйственныеОперацииМассивСтрокой + ")";
		
	КонецЕсли;
	
	Возврат ТекстУсловия;
	
КонецФункции

Функция СоединенияСТаблицейПоставщиковПоВсемКомбинациямПолей(КомбинацииПоставщиков, ЛеваяТаблица, ДобавлятьУсловиеПоПриоритету = Ложь)
	
	ПустыеЗначения = Новый Соответствие;
	ПустыеЗначения.Вставить("Контрагент", "ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)");
	ПустыеЗначения.Вставить("Партнер", "ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)");
	ПустыеЗначения.Вставить("Договор", "ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)");
	ПустыеЗначения.Вставить("Соглашение", "ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка)");
	
	ТекстыКомбинаций = Новый Массив; // Массив Из Строка
	
	Для ИндексКомбинации = 0 По КомбинацииПоставщиков.Количество() - 1 Цикл
		
		СтрокаКомбинацииПолей = КомбинацииПоставщиков[ИндексКомбинации];
		НомерКомбинацииСтрокой = Строка(ИндексКомбинации + 1);
		
		ТекстКомбинации = "ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Поставщики КАК ВТ_ПоставщикиКомбинация&НомерКомбинации
		|ПО ";
		ТекстКомбинации = СтрЗаменить(ТекстКомбинации, "&НомерКомбинации", НомерКомбинацииСтрокой);
		
		СтрокиУсловий = Новый Массив; // Массив Из Строка
		
		Если ДобавлятьУсловиеПоПриоритету Тогда
			
			СтрокаУсловия = "&ЛеваяТаблица.ПриоритетПоставщика = ВТ_ПоставщикиКомбинация&НомерКомбинации.Приоритет";
			СтрокаУсловия = СтрЗаменить(СтрокаУсловия, "&ЛеваяТаблица", ЛеваяТаблица);
			СтрокаУсловия = СтрЗаменить(СтрокаУсловия, "&НомерКомбинации", НомерКомбинацииСтрокой);
			СтрокиУсловий.Добавить(СтрокаУсловия);
			
		КонецЕсли;
		
		Для Каждого Колонка Из КомбинацииПоставщиков.Колонки Цикл
			
			Если СтрокаКомбинацииПолей[Колонка.Имя] Тогда
				
				СтрокаУсловия = "&ЛеваяТаблица.&ИмяКолонки = ВТ_ПоставщикиКомбинация&НомерКомбинации.&ИмяКолонки";
				СтрокаУсловия = СтрЗаменить(СтрокаУсловия, "&ЛеваяТаблица", ЛеваяТаблица);
				СтрокаУсловия = СтрЗаменить(СтрокаУсловия, "&ИмяКолонки", Колонка.Имя);
				СтрокаУсловия = СтрЗаменить(СтрокаУсловия, "&НомерКомбинации", НомерКомбинацииСтрокой);
				СтрокиУсловий.Добавить(СтрокаУсловия);
				
				СтрокаУсловия = "ВТ_ПоставщикиКомбинация&НомерКомбинации.&ИмяКолонки <> &ПустоеЗначениеКолонки";
				ПустоеЗначениеКолонки = ПустыеЗначения[Колонка.Имя];
				СтрокаУсловия = СтрЗаменить(СтрокаУсловия, "&ПустоеЗначениеКолонки", ПустоеЗначениеКолонки);
				СтрокаУсловия = СтрЗаменить(СтрокаУсловия, "&ИмяКолонки", Колонка.Имя);
				СтрокаУсловия = СтрЗаменить(СтрокаУсловия, "&НомерКомбинации", НомерКомбинацииСтрокой);
				СтрокиУсловий.Добавить(СтрокаУсловия);
				
			Иначе
				
				СтрокаУсловия = "ВТ_ПоставщикиКомбинация&НомерКомбинации.&ИмяКолонки = &ПустоеЗначениеКолонки";
				ПустоеЗначениеКолонки = ПустыеЗначения[Колонка.Имя];
				СтрокаУсловия = СтрЗаменить(СтрокаУсловия, "&ПустоеЗначениеКолонки", ПустоеЗначениеКолонки);
				СтрокаУсловия = СтрЗаменить(СтрокаУсловия, "&ИмяКолонки", Колонка.Имя);
				СтрокаУсловия = СтрЗаменить(СтрокаУсловия, "&НомерКомбинации", НомерКомбинацииСтрокой);
				СтрокиУсловий.Добавить(СтрокаУсловия);
				
			КонецЕсли;
			
		КонецЦикла;
		
		ТекстКомбинации = ТекстКомбинации + СтрСоединить(СтрокиУсловий, Символы.ПС + "И ");
		
		ТекстыКомбинаций.Добавить(ТекстКомбинации);
		
	КонецЦикла;
	
	ТекстЗапроса = СтрСоединить(ТекстыКомбинаций, Символы.ПС + Символы.ПС) + Символы.ПС;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция УсловиеОтбораЗакупокПоКомбинациямПолейПоставщиков(КомбинацииПоставщиков)
	
	ТекстыКомбинаций = Новый Массив; // Массив Из Строка
	
	Для ИндексКомбинации = 0 По КомбинацииПоставщиков.Количество() - 1 Цикл
		
		НомерКомбинацииСтрокой = Строка(ИндексКомбинации + 1);
		ТекстКомбинации = "ВТ_ПоставщикиКомбинация&НомерКомбинации.Приоритет ЕСТЬ НЕ NULL";
		ТекстКомбинации = СтрЗаменить(ТекстКомбинации, "&НомерКомбинации", НомерКомбинацииСтрокой);
		ТекстыКомбинаций.Добавить(ТекстКомбинации);
		
	КонецЦикла;
	
	ТекстЗапроса = "(" + СтрСоединить(ТекстыКомбинаций, Символы.ПС + "ИЛИ ") + ")";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ВыражениеПриоритетПоставщикаПоКомбинациямПолейПоставщиков(КомбинацииПоставщиков)
	
	ТекстыКомбинаций = Новый Массив; // Массив Из Строка
	
	Для ИндексКомбинации = 0 По КомбинацииПоставщиков.Количество() - 1 Цикл
		
		НомерКомбинацииСтрокой = Строка(ИндексКомбинации + 1);
		ТекстКомбинации = "КОГДА ВТ_ПоставщикиКомбинация&НомерКомбинации.Приоритет ЕСТЬ НЕ NULL
		|	ТОГДА ВТ_ПоставщикиКомбинация&НомерКомбинации.Приоритет";
		ТекстКомбинации = СтрЗаменить(ТекстКомбинации, "&НомерКомбинации", НомерКомбинацииСтрокой);
		ТекстыКомбинаций.Добавить(ТекстКомбинации);
		
	КонецЦикла;
	
	ТекстЗапроса =
		"ВЫБОР
		|"
		+ СтрСоединить(ТекстыКомбинаций, Символы.ПС)
		+ "
		|КОНЕЦ";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ДобавитьТекстЗапросаЗакупкиСОтборомПоПоставщикам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов, КомбинацииПоставщиков)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ЗакупкиПредварительно.Период КАК Период,
	|	ВТ_ЗакупкиПредварительно.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_ЗакупкиПредварительно.НомерСтроки КАК НомерСтроки,
	|	ВТ_ЗакупкиПредварительно.ДокументРегистратор КАК ДокументРегистратор,
	|	ВТ_ЗакупкиПредварительно.Организация КАК Организация,
	|	ВТ_ЗакупкиПредварительно.Контрагент КАК Контрагент,
	|	ВТ_ЗакупкиПредварительно.Партнер КАК Партнер,
	|	ВТ_ЗакупкиПредварительно.Договор КАК Договор,
	|	ВТ_ЗакупкиПредварительно.Соглашение КАК Соглашение,
	|	ВТ_ЗакупкиПредварительно.Склад КАК Склад,
	|	ВТ_ЗакупкиПредварительно.Номенклатура КАК Номенклатура,
	|	ВТ_ЗакупкиПредварительно.Характеристика КАК Характеристика,
	|	ВТ_ЗакупкиПредварительно.Количество КАК Количество,
	|	ВТ_ЗакупкиПредварительно.СуммаОборотУпрСНДС КАК СуммаОборотУпрСНДС,
	|	ВТ_ЗакупкиПредварительно.СуммаОборотРеглСНДС КАК СуммаОборотРеглСНДС,
	|	ВТ_ЗакупкиПредварительно.СуммаОборотВВалютеВзаиморасчетовСНДС КАК СуммаОборотВВалютеВзаиморасчетовСНДС,
	|	ВТ_ЗакупкиПредварительно.СуммаОборотУпрБезНДС КАК СуммаОборотУпрБезНДС,
	|	ВТ_ЗакупкиПредварительно.СуммаОборотРеглБезНДС КАК СуммаОборотРеглБезНДС,
	|	ВТ_ЗакупкиПредварительно.СуммаОборотВВалютеВзаиморасчетовБезНДС КАК СуммаОборотВВалютеВзаиморасчетовБезНДС,
	|	ВТ_ЗакупкиПредварительно.Сумма КАК Сумма,
	|	ВТ_ЗакупкиПредварительно.СуммаРегл КАК СуммаРегл,
	|	ВТ_ЗакупкиПредварительно.СуммаВВалютеВзаиморасчетов КАК СуммаВВалютеВзаиморасчетов,
	|	ВТ_ЗакупкиПредварительно.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ЗакупкиПредварительно.БонусПроцент КАК БонусПроцент,
	|	ВТ_ЗакупкиПредварительно.ПоказательТоваров КАК ПоказательТоваров,
	|	ВТ_ЗакупкиПредварительно.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ЗакупкиПредварительно.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ЗакупкиПредварительно.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ВТ_ЗакупкиПредварительно.УчитыватьНДС КАК УчитыватьНДС,
	|	ВТ_ЗакупкиПредварительно.ВалютаУсловий КАК ВалютаУсловий,
	|	ВТ_ЗакупкиПредварительно.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ВТ_ЗакупкиПредварительно.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_ЗакупкиПредварительно.РаспределениеПоФИФО КАК РаспределениеПоФИФО,
	|	ВТ_ЗакупкиПредварительно.СуммаПлан КАК СуммаПлан,
	|	ВТ_ЗакупкиПредварительно.БазаРасчета КАК БазаРасчета,
	|	ВТ_ЗакупкиПредварительно.ОтборТоваровВыбранные КАК ОтборТоваровВыбранные,
	|	ВТ_ЗакупкиПредварительно.ОтборТоваровКромеВыбранных КАК ОтборТоваровКромеВыбранных,
	|	ВТ_ЗакупкиПредварительно.ОтборТоваровБезОграничений КАК ОтборТоваровБезОграничений,
	|	ВТ_ЗакупкиПредварительно.ОтборУчастниковВыбранные КАК ОтборУчастниковВыбранные,
	|	ВТ_ЗакупкиПредварительно.ОтборУчастниковКромеВыбранных КАК ОтборУчастниковКромеВыбранных
	|ПОМЕСТИТЬ ВТ_ПродажиЗакупки
	|ИЗ
	|	ВТ_ЗакупкиПредварительно КАК ВТ_ЗакупкиПредварительно
	|	ЛЕВОЕ СОЕДИНЕНИЕ &ВТ_Поставщики КАК ВТ_Поставщики ПО ИСТИНА
	|ГДЕ
	|	&УсловиеПоПериодуПоставщика";
	
	СоединенияСПоставщиками = СоединенияСТаблицейПоставщиковПоВсемКомбинациямПолей(
		КомбинацииПоставщиков, "ВТ_ЗакупкиПредварительно", Истина);
	
	УсловиеПоПериодуПоставщика = УсловиеОтбораЗакупокПоПериодуПоставщика(КомбинацииПоставщиков);
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса, "ЛЕВОЕ СОЕДИНЕНИЕ &ВТ_Поставщики КАК ВТ_Поставщики ПО ИСТИНА", СоединенияСПоставщиками);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоПериодуПоставщика", УсловиеПоПериодуПоставщика);
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Функция УсловиеОтбораЗакупокПоПериодуПоставщика(КомбинацииПоставщиков)
	
	ТекстыКомбинаций = Новый Массив; // Массив Из Строка
	
	Для ИндексКомбинации = 0 По КомбинацииПоставщиков.Количество() - 1 Цикл
		
		НомерКомбинацииСтрокой = Строка(ИндексКомбинации + 1);
		ТекстКомбинации = "ВТ_ПоставщикиКомбинация&НомерКомбинации.Приоритет ЕСТЬ НЕ NULL
		|	И (ВТ_ЗакупкиПредварительно.Период МЕЖДУ ВТ_ПоставщикиКомбинация&НомерКомбинации.НачалоДействия
		|		И ВТ_ПоставщикиКомбинация&НомерКомбинации.ОкончаниеДействия)";
		ТекстКомбинации = СтрЗаменить(ТекстКомбинации, "&НомерКомбинации", НомерКомбинацииСтрокой);
		ТекстыКомбинаций.Добавить(ТекстКомбинации);
		
	КонецЦикла;
	
	ТекстЗапроса = "(" + СтрСоединить(ТекстыКомбинаций,  Символы.ПС + "ИЛИ ") + ")";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ДобавитьТекстЗапросаСлияниеПоЗакупкам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИтоговыеДанные.Период КАК Период,
	|	ИтоговыеДанные.ПериодРасчета КАК ПериодРасчета,
	|	ИтоговыеДанные.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ИтоговыеДанные.ПоказательТоваров КАК ПоказательТоваров,
	|	ИтоговыеДанные.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ИтоговыеДанные.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_ПроцентСкидки.Контрагент КАК КонтрагентПоставщик,
	|	ВТ_ПроцентСкидки.Партнер КАК ПартнерПоставщик,
	|	ВТ_ПроцентСкидки.Договор КАК ДоговорПоставщика,
	|	ВТ_ПроцентСкидки.Соглашение КАК СоглашениеПоставщика,
	|	ИтоговыеДанные.ДокументРегистратор КАК ДокументРегистратор,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	ИтоговыеДанные.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК КонтрагентПокупатель,
	|	ИтоговыеДанные.Номенклатура КАК Номенклатура,
	|	ИтоговыеДанные.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ИтоговыеДанные.Характеристика КАК Характеристика,
	|	ИтоговыеДанные.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ИтоговыеДанные.ПланВыполнен КАК ПланВыполнен,
	|	ИтоговыеДанные.Количество КАК КоличествоОборот,
	|	0 КАК КоличествоОстаток,
	|	ИтоговыеДанные.Валюта КАК Валюта,
	|	ИтоговыеДанные.БазоваяЦена КАК БазоваяЦена,
	|	ИтоговыеДанные.СуммаОборотСНДС КАК СуммаОборотСНДС,
	|	ИтоговыеДанные.СуммаОборотБезНДС КАК СуммаОборотБезНДС,
	|	ИтоговыеДанные.Количество * ИтоговыеДанные.БазоваяЦена КАК СуммаВБазовыхЦенах,
	|	ИтоговыеДанные.БонусПроцент КАК БонусПроцент,
	|	ИтоговыеДанные.СуммаПлан КАК СуммаПлан,
	|	ИтоговыеДанные.КоличествоПлан КАК КоличествоПлан,
	|	ИтоговыеДанные.РасчетнаяБаза КАК РасчетнаяБаза,
	|	ИтоговыеДанные.СуммаБонус КАК СуммаБонус,
	|	ИтоговыеДанные.КоличествоПакетов КАК КоличествоПакетов,
	|	0 КАК СуммаБонусаЗаЕдиницу
	|ПОМЕСТИТЬ ВТ_Слияние
	|ИЗ
	|	ВТ_ИтоговыеДанные КАК ИтоговыеДанные
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПроцентСкидки КАК ВТ_ПроцентСкидки
	|	ПО ИтоговыеДанные.ДокументРегистратор = ВТ_ПроцентСкидки.ДокументРегистратор
	|		И ИтоговыеДанные.НомерСтроки = ВТ_ПроцентСкидки.НомерСтроки";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

#КонецОбласти

#Область Остатки

Процедура СформироватьТекстыЗапросовПоОстаткам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ДобавитьТекстЗапросаПараметрыРБ(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	РетроБонусыРасчет.ДобавитьТекстЗапросаТовары(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаАналитикаУчетаНоменклатурыПоСкладам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	ДобавитьТекстЗапросаОстатки(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	ДобавитьТекстЗапросаОстаткиПоПозициям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаТоварыБезОстатков(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	ДобавитьТекстЗапросаСлияниеПоОстаткам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
	ДобавитьТекстЗапросаВыборкиДанных(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаАналитикаУчетаНоменклатурыПоСкладам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	АналитикаУчетаНоменклатуры.КлючАналитики КАК КлючАналитики
	|ПОМЕСТИТЬ ВТ_АналитикаУчетаНоменклатуры
	|ИЗ
	|	РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Товары КАК ВТ_Товары
	|		ПО АналитикаУчетаНоменклатуры.Номенклатура = ВТ_Товары.Номенклатура
	|		И АналитикаУчетаНоменклатуры.Характеристика = ВТ_Товары.Характеристика
	|ГДЕ
	|	&УсловиеОтбораПоСкладам";
	
	Если ПараметрыУсловийРетроБонусов.Склады = Перечисления.СоставыСписковРетроБонусов.Выбранные Тогда
		
		УсловиеОтбораПоСкладам =
		"АналитикаУчетаНоменклатуры.МестоХранения В
		|		(ВЫБРАТЬ
		|			РетроБонусыПоставщиковСклады.Склад КАК Склад
		|		ИЗ
		|			РегистрСведений.РетроБонусыПоставщиковСклады КАК РетроБонусыПоставщиковСклады
		|		ГДЕ
		|			РетроБонусыПоставщиковСклады.ДокументУсловий = &ИсходныйДокумент)";
		
	ИначеЕсли ПараметрыУсловийРетроБонусов.Склады = Перечисления.СоставыСписковРетроБонусов.КромеВыбранных Тогда
		
		УсловиеОтбораПоСкладам =
		"АналитикаУчетаНоменклатуры.МестоХранения НЕ В
		|		(ВЫБРАТЬ
		|			РетроБонусыПоставщиковСклады.Склад КАК Склад
		|		ИЗ
		|			РегистрСведений.РетроБонусыПоставщиковСклады КАК РетроБонусыПоставщиковСклады
		|		ГДЕ
		|			РетроБонусыПоставщиковСклады.ДокументУсловий = &ИсходныйДокумент)";
		
	Иначе
		
		УсловиеОтбораПоСкладам = "ИСТИНА";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбораПоСкладам", УсловиеОтбораПоСкладам);
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаОстатки(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТоварыОрганизацийОстатки.Организация КАК Организация,
	|	РС_АналитикаУчетаНоменклатуры.МестоХранения КАК Склад,
	|	РС_АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	РС_АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ТоварыОрганизацийОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ПОМЕСТИТЬ ВТ_Остатки
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций.Остатки(
	|			&ДатаОстатковГраница,
	|			АналитикаУчетаНоменклатуры В
	|					(ВЫБРАТЬ
	|						ВТ_АналитикаУчетаНоменклатуры.КлючАналитики
	|					ИЗ
	|						ВТ_АналитикаУчетаНоменклатуры КАК ВТ_АналитикаУчетаНоменклатуры)
	|				И Организация В (&Организация)
	|				И ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)) КАК ТоварыОрганизацийОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК РС_АналитикаУчетаНоменклатуры
	|		ПО ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры = РС_АналитикаУчетаНоменклатуры.КлючАналитики
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаОстаткиПоПозициям(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_Остатки.Номенклатура КАК Номенклатура,
	|	ВТ_Остатки.Характеристика КАК Характеристика,
	|	СУММА(ВТ_Остатки.КоличествоОстаток) КАК КоличествоОстатокВсего
	|ПОМЕСТИТЬ ВТ_ОстаткиПоПозициям
	|ИЗ
	|	ВТ_Остатки КАК ВТ_Остатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Остатки.Номенклатура,
	|	ВТ_Остатки.Характеристика
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаТоварыБезОстатков(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_Товары.Номенклатура КАК Номенклатура,
	|	ВЫРАЗИТЬ(ВТ_Товары.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_Товары.Характеристика КАК Характеристика,
	|	ВТ_Товары.БонусПроцент КАК БонусПроцент,
	|	ВТ_Товары.КоличествоПлан КАК КоличествоПлан,
	|	ВТ_Товары.БонусЗаЕдиницу КАК БонусЗаЕдиницу
	|ПОМЕСТИТЬ ВТ_ТоварыБезОстатков
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Остатки КАК ВТ_Остатки
	|		ПО ВТ_Товары.Номенклатура = ВТ_Остатки.Номенклатура
	|			И ВТ_Товары.Характеристика = ВТ_Остатки.Характеристика
	|ГДЕ
	|	ВТ_Остатки.КоличествоОстаток ЕСТЬ NULL";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаСлияниеПоОстаткам(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&ДатаОстатков КАК Период,
	|	&ДатаОстатков КАК ПериодРасчета,
	|	ВТ_ПараметрыРБ.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПараметрыРБ.ПоказательТоваров КАК ПоказательТоваров,
	|	ВТ_ПараметрыРБ.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПараметрыРБ.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ЕСТЬNULL(РетроБонусыПоставщиковПоставщики.Контрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК КонтрагентПоставщик,
	|	ЕСТЬNULL(РетроБонусыПоставщиковПоставщики.Партнер, ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)) КАК ПартнерПоставщик,
	|	ЕСТЬNULL(РетроБонусыПоставщиковПоставщики.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) КАК ДоговорПоставщика,
	|	ЕСТЬNULL(РетроБонусыПоставщиковПоставщики.Соглашение, ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка)) КАК СоглашениеПоставщика,
	|	NULL КАК ДокументРегистратор,
	|	ВТ_Остатки.Организация КАК Организация,
	|	ВТ_Остатки.Склад КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК КонтрагентПокупатель,
	|	ВТ_Остатки.Номенклатура КАК Номенклатура,
	|	ВЫРАЗИТЬ(ВТ_Остатки.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_Остатки.Характеристика КАК Характеристика,
	|	ЛОЖЬ КАК ЗапретНачисленияСверхПлана,
	|	ВТ_Остатки.КоличествоОстаток >= ВТ_Товары.КоличествоПлан КАК ПланВыполнен,
	|	0 КАК КоличествоОборот,
	|	ВТ_Остатки.КоличествоОстаток КАК КоличествоОстаток,
	|	ВТ_ПараметрыРБ.Валюта КАК Валюта,
	|	0 КАК БазоваяЦена,
	|	0 КАК СуммаОборотСНДС,
	|	0 КАК СуммаОборотБезНДС,
	|	0 КАК СуммаВБазовыхЦенах,
	|	ВТ_Товары.БонусПроцент КАК БонусПроцент,
	|	0 КАК СуммаПлан,
	|	ВТ_Товары.КоличествоПлан КАК КоличествоПлан,
	|	0 КАК РасчетнаяБаза,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_ОстаткиПоПозициям.КоличествоОстатокВсего, 0) >= ВТ_Товары.КоличествоПлан
	|			ТОГДА ВЫРАЗИТЬ(ВТ_Остатки.КоличествоОстаток * ВТ_Товары.БонусЗаЕдиницу КАК ЧИСЛО(31, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаБонус,
	|	0 КАК КоличествоПакетов,
	|	ВТ_Товары.БонусЗаЕдиницу КАК СуммаБонусаЗаЕдиницу
	|ПОМЕСТИТЬ ВТ_Слияние
	|ИЗ
	|	ВТ_Остатки КАК ВТ_Остатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПараметрыРБ КАК ВТ_ПараметрыРБ
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РетроБонусыПоставщиковПоставщики КАК РетроБонусыПоставщиковПоставщики
	|		ПО (РетроБонусыПоставщиковПоставщики.ДокументУсловий = &ИсходныйДокумент)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Товары КАК ВТ_Товары
	|		ПО ВТ_Остатки.Номенклатура = ВТ_Товары.Номенклатура
	|			И ВТ_Остатки.Характеристика = ВТ_Товары.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстаткиПоПозициям КАК ВТ_ОстаткиПоПозициям
	|		ПО ВТ_Остатки.Номенклатура = ВТ_ОстаткиПоПозициям.Номенклатура
	|			И ВТ_Остатки.Характеристика = ВТ_ОстаткиПоПозициям.Характеристика
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ДатаОстатков КАК Период,
	|	&ДатаОстатков КАК ПериодРасчета,
	|	ВТ_ПараметрыРБ.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_ПараметрыРБ.ПоказательТоваров КАК ПоказательТоваров,
	|	ВТ_ПараметрыРБ.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_ПараметрыРБ.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ЕСТЬNULL(РетроБонусыПоставщиковПоставщики.Контрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК КонтрагентПоставщик,
	|	ЕСТЬNULL(РетроБонусыПоставщиковПоставщики.Партнер, ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)) КАК ПартнерПоставщик,
	|	ЕСТЬNULL(РетроБонусыПоставщиковПоставщики.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) КАК ДоговорПоставщика,
	|	ЕСТЬNULL(РетроБонусыПоставщиковПоставщики.Соглашение, ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка)) КАК СоглашениеПоставщика,
	|	NULL КАК ДокументРегистратор,
	|	ВТ_ПараметрыРБ.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК КонтрагентПокупатель,
	|	ВТ_ТоварыБезОстатков.Номенклатура КАК Номенклатура,
	|	ВТ_ТоварыБезОстатков.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ТоварыБезОстатков.Характеристика КАК Характеристика,
	|	ЛОЖЬ КАК ЗапретНачисленияСверхПлана,
	|	ЛОЖЬ КАК ПланВыполнен,
	|	0 КАК КоличествоОборот,
	|	0 КАК КоличествоОстаток,
	|	ВТ_ПараметрыРБ.Валюта КАК Валюта,
	|	0 КАК БазоваяЦена,
	|	0 КАК СуммаОборотСНДС,
	|	0 КАК СуммаОборотБезНДС,
	|	0 КАК СуммаВБазовыхЦенах,
	|	ВТ_ТоварыБезОстатков.БонусПроцент КАК БонусПроцент,
	|	0 КАК СуммаПлан,
	|	ВТ_ТоварыБезОстатков.КоличествоПлан КАК КоличествоПлан,
	|	0 КАК РасчетнаяБаза,
	|	0 КАК СуммаБонус,
	|	0 КАК КоличествоПакетов,
	|	ВТ_ТоварыБезОстатков.БонусЗаЕдиницу КАК СуммаБонусаЗаЕдиницу
	|ИЗ
	|	ВТ_ТоварыБезОстатков КАК ВТ_ТоварыБезОстатков
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПараметрыРБ КАК ВТ_ПараметрыРБ
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РетроБонусыПоставщиковПоставщики КАК РетроБонусыПоставщиковПоставщики
	|		ПО (РетроБонусыПоставщиковПоставщики.ДокументУсловий = &ИсходныйДокумент)";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

#КонецОбласти

Процедура ДобавитьТекстЗапросаПараметрыРБ(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РетроБонусыПоставщиковУсловия.ДокументУсловий КАК УсловиеРетроБонуса,
	|	РетроБонусыПоставщиковУсловия.Организация КАК Организация,
	|	РетроБонусыПоставщиковУсловия.НачалоДействия КАК ДатаНачала,
	|	КОНЕЦПЕРИОДА(РетроБонусыПоставщиковУсловия.ОкончаниеДействия, ДЕНЬ) КАК ДатаОкончания,
	|	РетроБонусыПоставщиковУсловия.УчитыватьНДС КАК УчитыватьНДС,
	|	РетроБонусыПоставщиковУсловия.Валюта КАК Валюта,
	|	РетроБонусыПоставщиковУсловия.Вид.БазаРасчета КАК БазаРасчета,
	|	РетроБонусыПоставщиковУсловия.Вид.ПоказательТоваров КАК ПоказательТоваров,
	|	ВЫБОР
	|		КОГДА РетроБонусыПоставщиковУсловия.Вид.ВыполнениеУсловийПоПокупателям
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ДетализацияРасчетаУчастниковРетроБонусов.ПоКонтрагенту)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ДетализацияРасчетаУчастниковРетроБонусов.ПустаяСсылка)
	|	КОНЕЦ КАК ДетализацияРасчетаУчастников,
	|	РетроБонусыПоставщиковУсловия.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	РетроБонусыПоставщиковУсловия.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	РетроБонусыПоставщиковУсловия.БонусПроцент КАК БонусПроцент,
	|	РетроБонусыПоставщиковУсловия.СуммаПлан КАК СуммаПлан,
	|	РетроБонусыПоставщиковУсловия.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	(РетроБонусыПоставщиковУсловия.Вид.ПорядокРаспределения = ЗНАЧЕНИЕ(Перечисление.ПорядкиРаспределенияРетроБонусов.FIFO)) КАК РаспределениеПоФИФО,
	|	(РетроБонусыПоставщиковУсловия.Товары = ЗНАЧЕНИЕ(Перечисление.СоставыСписковРетроБонусов.Выбранные)) КАК ОтборТоваровВыбранные,
	|	(РетроБонусыПоставщиковУсловия.Товары = ЗНАЧЕНИЕ(Перечисление.СоставыСписковРетроБонусов.КромеВыбранных)) КАК ОтборТоваровКромеВыбранных,
	|	(РетроБонусыПоставщиковУсловия.Товары = ЗНАЧЕНИЕ(Перечисление.СоставыСписковРетроБонусов.Все)) КАК ОтборТоваровБезОграничений,
	|	РетроБонусыПоставщиковУсловия.Вид.СоставУчастников = ЗНАЧЕНИЕ(Перечисление.СоставыУчастниковРетроБонусов.ИНН) КАК ОтборПоИНН,
	|	(РетроБонусыПоставщиковУсловия.Вид.СоставУчастников = ЗНАЧЕНИЕ(Перечисление.СоставыУчастниковРетроБонусов.Контрагенты)) КАК ОтборПоКонтрагентамПартнерам,
	|	(РетроБонусыПоставщиковУсловия.Участники = ЗНАЧЕНИЕ(Перечисление.СоставыСписковРетроБонусов.Выбранные)) КАК ОтборУчастниковВыбранные,
	|	(РетроБонусыПоставщиковУсловия.Участники = ЗНАЧЕНИЕ(Перечисление.СоставыСписковРетроБонусов.КромеВыбранных)) КАК ОтборУчастниковКромеВыбранных,
	|	(РетроБонусыПоставщиковУсловия.Участники = ЗНАЧЕНИЕ(Перечисление.СоставыСписковРетроБонусов.Все)) КАК ОтборУчастниковБезОграничений
	|ПОМЕСТИТЬ ВТ_ПараметрыРБ
	|ИЗ
	|	РегистрСведений.РетроБонусыПоставщиковУсловия КАК РетроБонусыПоставщиковУсловия
	|ГДЕ
	|	РетроБонусыПоставщиковУсловия.ДокументУсловий = &ИсходныйДокумент";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаВыборкиДанных(ПараметрыУсловийРетроБонусов, ПараметрыВарианта, ТекстыЗапросов)
	
	ТипБонуса = ПараметрыУсловийРетроБонусов.ТипБонуса;
	ТипыБонуса = Перечисления.ТипыРетроБонусовПоставщиков;
	
	//@skip-check bsl-ql-hub - выбранные поля компоновки уточняются путем замены текста запроса
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_Слияние.Период КАК Период,
	|	ВТ_Слияние.ПериодРасчета КАК ПериодРасчета,
	|	ВТ_Слияние.УсловиеРетроБонуса КАК УсловиеРетроБонуса,
	|	ВТ_Слияние.ПоказательТоваров КАК ПоказательТоваров,
	|	ВТ_Слияние.ДетализацияРасчетаУчастников КАК ДетализацияРасчетаУчастников,
	|	ВТ_Слияние.ПериодичностьУсловий КАК ПериодичностьУсловий,
	|	ВТ_Слияние.ЗапретНачисленияСверхПлана КАК ЗапретНачисленияСверхПлана,
	|	ВТ_Слияние.ПланВыполнен КАК ПланВыполнен,
	|	ВТ_Слияние.КонтрагентПоставщик КАК КонтрагентПоставщик,
	|	ВТ_Слияние.ПартнерПоставщик КАК ПартнерПоставщик,
	|	ВТ_Слияние.ДоговорПоставщика КАК ДоговорПоставщика,
	|	ВТ_Слияние.СоглашениеПоставщика КАК СоглашениеПоставщика,
	|	ВТ_Слияние.ДокументРегистратор КАК ДокументРегистратор,
	|	ВТ_Слияние.Склад КАК Склад,
	|	ВТ_Слияние.Организация КАК Организация,
	|	ВТ_Слияние.КонтрагентПокупатель КАК КонтрагентПокупатель,
	|	ВТ_Слияние.Номенклатура КАК Номенклатура,
	|	ВТ_Слияние.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_Слияние.Характеристика КАК Характеристика,
	|	ВТ_Слияние.КоличествоОборот КАК КоличествоОборот,
	|	ВТ_Слияние.КоличествоОстаток КАК КоличествоОстаток,
	|	ВТ_Слияние.Валюта КАК Валюта,
	|	ВТ_Слияние.СуммаОборотСНДС КАК СуммаОборотСНДС,
	|	ВТ_Слияние.СуммаОборотБезНДС КАК СуммаОборотБезНДС,
	|	ВТ_Слияние.БазоваяЦена КАК БазоваяЦена,
	|	ВТ_Слияние.СуммаВБазовыхЦенах КАК СуммаВБазовыхЦенах,
	|	ВТ_Слияние.БонусПроцент КАК БонусПроцент,
	|	ВТ_Слияние.СуммаПлан КАК СуммаПлан,
	|	ВТ_Слияние.КоличествоПлан КАК КоличествоПлан,
	|	ВТ_Слияние.РасчетнаяБаза КАК РасчетнаяБаза,
	|	ВТ_Слияние.СуммаБонус КАК СуммаБонус,
	|	ВТ_Слияние.КоличествоПакетов КАК КоличествоПакетов,
	|	ВТ_Слияние.СуммаБонусаЗаЕдиницу КАК СуммаБонусаЗаЕдиницу
	|{ВЫБРАТЬ
	|	УсловиеРетроБонуса.*,
	|	Период,
	|	ПериодРасчета,
	|	ЗапретНачисленияСверхПлана,
	|	ПериодичностьУсловий,
	|	ДетализацияРасчетаУчастников,
	|	ПоказательТоваров,
	|	ДокументРегистратор.*,
	|	Склад.*,
	|	Организация.*,
	|	КонтрагентПоставщик.*,
	|	ПартнерПоставщик.*,
	|	КонтрагентПокупатель.*,
	|	Номенклатура.*,
	|	ЕдиницаИзмерения.*,
	|	Характеристика.*,
	|	ПланВыполнен,
	|	БонусПроцент,
	|	КоличествоОборот,
	|	КоличествоОстаток,
	|	Валюта,
	|	БазоваяЦена,
	|	СуммаОборотСНДС,
	|	СуммаОборотБезНДС,
	|	СуммаВБазовыхЦенах,
	|	СуммаБонус,
	|	СуммаПлан,
	|	КоличествоПлан,
	|	РасчетнаяБаза,
	|	КоличествоПакетов,
	|	СуммаБонусаЗаЕдиницу,
	|	СоглашениеПоставщика.*,
	|	ДоговорПоставщика.*}
	|ИЗ
	|	ВТ_Слияние КАК ВТ_Слияние
	|{ГДЕ
	|	ВТ_Слияние.ДокументРегистратор.*,
	|	ВТ_Слияние.Склад.*,
	|	ВТ_Слияние.Организация.*,
	|	ВТ_Слияние.Валюта.*,
	|	ВТ_Слияние.КонтрагентПоставщик.*,
	|	ВТ_Слияние.ПартнерПоставщик.*,
	|	ВТ_Слияние.КонтрагентПокупатель.*,
	|	ВТ_Слияние.ПериодРасчета,
	|	ВТ_Слияние.Номенклатура.*,
	|	ВТ_Слияние.Характеристика.*,
	|	ВТ_Слияние.ДоговорПоставщика.*,
	|	ВТ_Слияние.СоглашениеПоставщика.*}";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли