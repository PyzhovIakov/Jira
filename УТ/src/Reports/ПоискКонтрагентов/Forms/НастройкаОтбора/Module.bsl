///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОписаниеПеременных

&НаКлиенте
Перем ПоследнееВремяПодбора;

&НаКлиенте
Перем ИсходныеДанныеВыбора;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.ДоступныеОтборы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВидыСравнений = ПоискКонтрагентовСлужебныйКлиентСервер.ВидыСравнений();
	ПредставленияВидов = ПоискКонтрагентовСлужебныйКлиентСервер.ПредставленияВидовСравнений(
		ВидыСравнений);

	ТипЗначенияПоСтроке = Новый ФиксированноеСоответствие(
		ПоискКонтрагентовСлужебный.ОписаниеТиповПоИдентификатору());

	ТипыОбработкиПолей = ПоискКонтрагентовСлужебный.ТипыОбработкиПолей();
	
	Для Каждого ДоступныйОтбор Из Параметры.ДоступныеОтборы Цикл
		
		ТекущийТип = ТипЗначенияПоСтроке.Получить(ДоступныйОтбор.ТипЗначения);
		Если ТекущийТип = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = НастройкиОтборов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ДоступныйОтбор);
		
		НоваяСтрока.ИдентификаторКритерия = ДоступныйОтбор.Идентификатор;
		
		НоваяСтрока.ЭтоПолеОКВЭД = (ДоступныйОтбор.ТипОбработки = ТипыОбработкиПолей.ОКВЭД);
		
		ВариантыСравнения = Новый Массив;
		
		Для Каждого Вариант Из ДоступныйОтбор.ВариантыСравнения Цикл
			ВариантыСравнения.Добавить(
				Вариант
				+ "$"
				+ ПредставленияВидов[Вариант]);
		КонецЦикла;
		
		НоваяСтрока.ВариантыСравнения = СтрСоединить(ВариантыСравнения, ";");
		
		НастройкаПользователя = Параметры.НастройкаОтборов[НоваяСтрока.ИдентификаторКритерия];
		Если НастройкаПользователя <> Неопределено Тогда
			
			// Структура настройки задается в методе ПоискКонтрагентовСлужебныйКлиентСервер.НовыйОписаниеПоляОтбора.
			НоваяСтрока.ВидСравнения  = НастройкаПользователя.ВидСравнения;
			НоваяСтрока.Значение      = НастройкаПользователя.ПредставлениеЗначения;
			НоваяСтрока.Пометка       = НастройкаПользователя.Пометка;
			НоваяСтрока.БыстрыйДоступ = НастройкаПользователя.БыстрыйДоступ;
			НоваяСтрока.Порядок       = НастройкаПользователя.Порядок;
			Если НастройкаПользователя.ВыборИзСправочника
				Или НастройкаПользователя.ЭтоПолеОКВЭД Тогда
				НоваяСтрока.ЗначениеИзСправочника = НастройкаПользователя.Значение;
			КонецЕсли;
			
		ИначеЕсли Не ЗначениеЗаполнено(НоваяСтрока.ВидСравнения)
			И ДоступныйОтбор.ВариантыСравнения.Количество() = 1 Тогда
			
			НоваяСтрока.ВидСравнения = ДоступныйОтбор.ВариантыСравнения[0];
			
		КонецЕсли;
		
	КонецЦикла;
	
	НастройкиОтборов.Сортировать("Порядок");
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПоследнееВремяПодбора = 0;
	ИсходныеДанныеВыбора  = Неопределено;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНастройкиОтборов

&НаКлиенте
Процедура НастройкиОтборовПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.НастройкиОтборов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.НастройкиОтборовВидСравнения.СписокВыбора.Очистить();
	ВариантыСравнения = СтрРазделить(ТекущиеДанные.ВариантыСравнения, ";", Ложь);
	Для Каждого Вариант Из ВариантыСравнения Цикл
		ОписаниеВарианта = СтрРазделить(Вариант, "$", Ложь);
		Если ОписаниеВарианта.Количество() = 2 Тогда
			Элементы.НастройкиОтборовВидСравнения.СписокВыбора.Добавить(
				ОписаниеВарианта[0],
				ОписаниеВарианта[1]);
		КонецЕсли;
	КонецЦикла;
	
	Если Элементы.НастройкиОтборовВидСравнения.СписокВыбора.Количество() = 1 Тогда
		ТекущиеДанные.ВидСравнения = Элементы.НастройкиОтборовВидСравнения.СписокВыбора[0].Значение;
	КонецЕсли;
	
	УстановитьДоступныйТипДанныхЗначения(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиОтборовВидСравненияПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.НастройкиОтборов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьДоступныйТипДанныхЗначения(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиОтборовЗначениеПриИзменении(Элемент)
	
	ИсходныеДанныеВыбора = Неопределено;
	
	ТекущиеДанные = Элементы.НастройкиОтборов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если (ТекущиеДанные.ВыборИзСправочника
		Или ТекущиеДанные.ЭтоПолеОКВЭД)
		И ТекущиеДанные.ВидСравнения = ВидыСравнений.Содержит.Значение Тогда
		
		ТекущиеДанные.ЗначениеИзСправочника = ТекущиеДанные.Значение;
		
	ИначеЕсли (ТекущиеДанные.ВыборИзСправочника
		Или ТекущиеДанные.ЭтоПолеОКВЭД)
		И ТекущиеДанные.ВидСравнения = ВидыСравнений.ВСписке.Значение Тогда
		// Может быть удаление значения в поле, без открытия списка.
		// Проверяем, что элементы в представлении соответствуют элементам в значении.
		
		ПоискКонтрагентовКлиент.СравнитьПредставленияВСпискеИзСправочника(
			ТекущиеДанные.ЗначениеИзСправочника,
			ТекущиеДанные.Значение);
		
	КонецЕсли;
	
	ТекущиеДанные.Пометка = ЗначениеЗаполнено(ТекущиеДанные.Значение);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиОтборовЗначениеНачалоВыбора(
		Элемент,
		ДанныеВыбора,
		СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.НастройкиОтборов.ТекущиеДанные;
	
	ИзмененияСпискаЗавершение = Новый ОписаниеОповещения(
		"ИзмененияСпискаЗавершение",
		ЭтотОбъект,
		ТекущиеДанные);
	
	ВыборОКВЭДЗавершение = Новый ОписаниеОповещения(
		"ВыборОКВЭДЗавершение",
		ЭтотОбъект,
		ТекущиеДанные);
	
	ПараметрыВыбора = ПоискКонтрагентовКлиент.НовыйПараметрыВыбора();
	
	ПараметрыВыбора.ОписаниеПоля              = ТекущиеДанные;
	ПараметрыВыбора.НастройкаСпискаЗавершение = ИзмененияСпискаЗавершение;
	ПараметрыВыбора.ВыборОКВЭДЗавершение      = ВыборОКВЭДЗавершение;
	ПараметрыВыбора.ТекущееЗначениеОКВЭД      = ТекущиеДанные.ЗначениеИзСправочника;
	ПараметрыВыбора.УникальныйИдентификатор   = УникальныйИдентификатор;
	
	Если ТекущиеДанные.ВыборИзСправочника
		Или ТекущиеДанные.ЭтоПолеОКВЭД Тогда
		ПараметрыВыбора.ТекущееЗначениеСписок = ТекущиеДанные.ЗначениеИзСправочника;
	Иначе
		ПараметрыВыбора.ТекущееЗначениеСписок = ТекущиеДанные.Значение;
	КонецЕсли;
	
	ПоискКонтрагентовКлиент.НачалоВыбора(ПараметрыВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиОтборовЗначениеОчистка(Элемент, СтандартнаяОбработка)

	ТекущиеДанные = Элементы.НастройкиОтборов.ТекущиеДанные;
	ТекущиеДанные.ЗначениеИзСправочника = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиОтборовЗначениеОбработкаВыбора(
		Элемент,
		ВыбранноеЗначение,
		СтандартнаяОбработка)
	
	ИсходныеДанныеВыбора = Неопределено;
	
	ТекущиеДанные = Элементы.НастройкиОтборов.ТекущиеДанные;
	
	Если (ТекущиеДанные.ВыборИзСправочника
		Или ТекущиеДанные.ЭтоПолеОКВЭД) Тогда
		
		// Если список, то обработка выполняется в процедуре ОбработкаИзмененияСписка
		
		ПравильноеЗначение = ПоискКонтрагентовСлужебныйКлиентСервер.ПравильноеЗначениеИзСправочника(
			ВыбранноеЗначение);
		Если ПравильноеЗначение = Неопределено Тогда
			СтандартнаяОбработка = Ложь;
		Иначе
			ТекущиеДанные.ЗначениеИзСправочника = ПравильноеЗначение;
			ВыбранноеЗначение = ПравильноеЗначение.Представление;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиОтборовЗначениеАвтоПодбор(
		Элемент,
		Текст,
		ДанныеВыбора,
		ПараметрыПолученияДанных,
		Ожидание,
		СтандартнаяОбработка)
	
	ДополнительныеПараметры = ПоискКонтрагентовКлиент.НовыйДопПараметрыАвтоподбора();
	ДополнительныеПараметры.ПоследнееВремяПодбора = ПоследнееВремяПодбора;
	ДополнительныеПараметры.ИсходныеДанныеВыбора  = ИсходныеДанныеВыбора;

	АвтоподборВыполнен = ПоискКонтрагентовКлиент.АвтоПодбор(
		Элементы.НастройкиОтборов.ТекущиеДанные,
		Текст,
		ДанныеВыбора,
		СтандартнаяОбработка,
		ДополнительныеПараметры);
		
	Если АвтоподборВыполнен Тогда
		ИсходныеДанныеВыбора = ДанныеВыбора;
		ПоследнееВремяПодбора = ТекущаяУниверсальнаяДатаВМиллисекундах();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиОтборовЗначениеОкончаниеВводаТекста(
	Элемент,
	Текст,
	ДанныеВыбора,
	ПараметрыПолученияДанных,
	СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.НастройкиОтборов.ТекущиеДанные;
	
	Если ПоискКонтрагентовКлиент.ЭтоТочноеЗначениеИзСправочника(ТекущиеДанные) Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
	Если ПоискКонтрагентовКлиент.ЭтоТочноеЗначениеОКВЭД(ТекущиеДанные) Тогда
		ТекстДляПроверки = СтрЗаменить(Текст, ".", "");
		Если Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ТекстДляПроверки) Тогда
			СтандартнаяОбработка = Ложь;
			Возврат;
		КонецЕсли;
		
		ДанныеОКВЭД = ПоискКонтрагентовКлиент.ЗначениеОКВЭДНетВКлассификаторе(Текст);
		
		ТекущиеДанные = Элементы.НастройкиОтборов.ТекущиеДанные;
		ТекущиеДанные.ЗначениеИзСправочника = ДанныеОКВЭД;
		ТекущиеДанные.Значение = ДанныеОКВЭД.Представление;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиОтборовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "НастройкиОтборовБыстрыйДоступ" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ТекущиеДанные = Элементы.НастройкиОтборов.ТекущиеДанные;
		Если ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ТекущиеДанные.БыстрыйДоступ = Не ТекущиеДанные.БыстрыйДоступ;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Ок(Команда)
	
	НастройкаОтборов = Новый Соответствие;
	
	НомерПП = 1;
	Для Каждого Стр Из НастройкиОтборов Цикл
		Стр.Порядок = НомерПП;
		НомерПП = НомерПП + 1;
	КонецЦикла;
	
	Для Каждого Стр Из НастройкиОтборов Цикл
		
		НовыйОтбор = ПоискКонтрагентовСлужебныйКлиентСервер.НовыйОписаниеПоляОтбора();
		НовыйОтбор.Идентификатор         = Стр.ИдентификаторКритерия;
		НовыйОтбор.ВидСравнения          = Стр.ВидСравнения;
		НовыйОтбор.Представление         = Стр.Представление;
		НовыйОтбор.ВыборИзСправочника    = Стр.ВыборИзСправочника;
		НовыйОтбор.ПредставлениеЗначения = Стр.Значение;
		НовыйОтбор.Пометка               = Стр.Пометка И ЗначениеЗаполнено(Стр.Значение);
		НовыйОтбор.ЭтоПолеОКВЭД          = Стр.ЭтоПолеОКВЭД;
		НовыйОтбор.Порядок               = Стр.Порядок;
		НовыйОтбор.БыстрыйДоступ         = Стр.БыстрыйДоступ;
		
		Если Стр.ВыборИзСправочника Или Стр.ЭтоПолеОКВЭД Тогда
			НовыйОтбор.Значение = Стр.ЗначениеИзСправочника;
		Иначе
			НовыйОтбор.Значение = Стр.Значение;
		КонецЕсли;
		
		НастройкаОтборов.Вставить(Стр.ИдентификаторКритерия, НовыйОтбор);

	КонецЦикла;
	
	Закрыть(НастройкаОтборов);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	ПараметрыОформления = Новый Структура;
	
	// Корректное отображение вида сравнения
	ПараметрыОформления.Вставить("ПроверяемоеПоле", "НастройкиОтборов.ВидСравнения");
	ПараметрыОформления.Вставить("ВидСравнения", ВидСравненияКомпоновкиДанных.Равно);
	ПараметрыОформления.Вставить("ЗначениеУсловия", "");
	
	Поля = Новый Массив;
	Поля.Добавить("НастройкиОтборовВидСравнения");
	ПараметрыОформления.Вставить("Поля", Поля);
	
	Оформление = Новый Массив;
	Оформление.Добавить(
		Новый Структура(
			"Параметр, ЗначениеПараметра",
			"Текст",
			""));
	ПараметрыОформления.Вставить("Оформление", Оформление);
	
	Для Каждого КлючЗначение Из ВидыСравнений Цикл
		ПараметрыОформления.ЗначениеУсловия = КлючЗначение.Значение.Значение;
		ПараметрыОформления.Оформление[0].ЗначениеПараметра = КлючЗначение.Значение.Представление;
		ДобавитьОформлениеПоля(ПараметрыОформления);
	КонецЦикла;
	
	// Блокировка значения если не выбран вид сравнения
	ПараметрыОформления.ПроверяемоеПоле = "НастройкиОтборов.ВидСравнения";
	ПараметрыОформления.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	ПараметрыОформления.Поля[0] = "НастройкиОтборовЗначение";
	
	Оформление.Очистить();
	Оформление.Добавить(
		Новый Структура(
			"Параметр, ЗначениеПараметра",
			"Текст",
			НСтр("ru = '<укажите условие сравнения>'")));
	Оформление.Добавить(
		Новый Структура(
			"Параметр, ЗначениеПараметра",
			"ТолькоПросмотр",
			Истина));
	Оформление.Добавить(
		Новый Структура(
			"Параметр, ЗначениеПараметра",
			"ЦветТекста",
			ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет));
	
	ПараметрыОформления.Вставить("Оформление", Оформление);
	ДобавитьОформлениеПоля(ПараметрыОформления);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьОформлениеПоля(ПараметрыОформления)
	
	НовыйЭлемент = УсловноеОформление.Элементы.Добавить();
	
	Условие = НовыйЭлемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Условие.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ПараметрыОформления.ПроверяемоеПоле);
	Условие.ВидСравнения   = ПараметрыОформления.ВидСравнения;
	Условие.ПравоеЗначение = ПараметрыОформления.ЗначениеУсловия;
	
	Для Каждого Поле Из ПараметрыОформления.Поля Цикл
		НовоеПоле = НовыйЭлемент.Поля.Элементы.Добавить();
		НовоеПоле.Использование = Истина;
		НовоеПоле.Поле = Новый ПолеКомпоновкиДанных(Поле);
	КонецЦикла;
	
	Для Каждого Оформление Из ПараметрыОформления.Оформление Цикл
		НовыйЭлемент.Оформление.УстановитьЗначениеПараметра(
			Оформление.Параметр,
			Оформление.ЗначениеПараметра);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступныйТипДанныхЗначения(ТекущиеДанные)
	
	Если Не ЗначениеЗаполнено(ТекущиеДанные.ВидСравнения) Тогда
		ТекущиеДанные.Значение              = Неопределено;
		ТекущиеДанные.ЗначениеИзСправочника = Неопределено;
		Возврат;
	КонецЕсли;
	
	Элементы.НастройкиОтборовЗначение.КнопкаОчистки = Неопределено;
	
	Если ТекущиеДанные.ВидСравнения = ВидыСравнений.Содержит.Значение Тогда
		Элементы.НастройкиОтборовЗначение.ОграничениеТипа = Новый ОписаниеТипов("Строка");
		Элементы.НастройкиОтборовЗначение.КнопкаВыбора    = Ложь;
		ТекущиеДанные.Значение = Элементы.НастройкиОтборовЗначение.ОграничениеТипа.ПривестиЗначение(
			ТекущиеДанные.Значение);
		
	ИначеЕсли ТекущиеДанные.ВидСравнения = ВидыСравнений.ВСписке.Значение Тогда
		Элементы.НастройкиОтборовЗначение.ОграничениеТипа = Новый ОписаниеТипов("СписокЗначений");
		Элементы.НастройкиОтборовЗначение.КнопкаВыбора    = Истина;
		Элементы.НастройкиОтборовЗначение.КнопкаОчистки   = Истина;
		
		ТекущиеДанные.Значение              = ЗначениеВСписок(ТекущиеДанные.Значение);
		ТекущиеДанные.ЗначениеИзСправочника = ЗначениеВСписок(ТекущиеДанные.ЗначениеИзСправочника);
		
	ИначеЕсли ТекущиеДанные.ВидСравнения = ВидыСравнений.Равно.Значение
		Или ТекущиеДанные.ВидСравнения = ВидыСравнений.Больше.Значение
		Или ТекущиеДанные.ВидСравнения = ВидыСравнений.БольшеИлиРавно.Значение
		Или ТекущиеДанные.ВидСравнения = ВидыСравнений.Меньше.Значение
		Или ТекущиеДанные.ВидСравнения = ВидыСравнений.МеньшеИлиРавно.Значение Тогда
		
		Элементы.НастройкиОтборовЗначение.ОграничениеТипа = ТипЗначенияПоСтроке.Получить(ТекущиеДанные.ТипЗначения);
		
		Если ТекущиеДанные.ЭтоПолеОКВЭД Тогда
			Элементы.НастройкиОтборовЗначение.КнопкаВыбора = Истина
		Иначе
			Элементы.НастройкиОтборовЗначение.КнопкаВыбора = Неопределено;
		КонецЕсли;
		
		ТекущиеДанные.Значение              = СписокВЗначение(ТекущиеДанные.Значение);
		ТекущиеДанные.ЗначениеИзСправочника = СписокВЗначение(ТекущиеДанные.ЗначениеИзСправочника);
		
	КонецЕсли;
	
	Если ТекущиеДанные.ВыборИзСправочника Или ТекущиеДанные.ЭтоПолеОКВЭД Тогда
		Элементы.НастройкиОтборовЗначение.КнопкаОчистки = Истина;
	КонецЕсли;
	
	Если (ТекущиеДанные.ВыборИзСправочника
		Или ТекущиеДанные.ЭтоПолеОКВЭД)
		И ТекущиеДанные.ВидСравнения <> ВидыСравнений.Содержит.Значение
		И ТипЗнч(ТекущиеДанные.ЗначениеИзСправочника) = Тип("Строка") Тогда
		ТекущиеДанные.Значение              = Неопределено;
		ТекущиеДанные.ЗначениеИзСправочника = Неопределено;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ИзмененияСпискаЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт

	Если ТипЗнч(РезультатВыбора) <> Тип("СписокЗначений") Тогда
		Возврат;
	КонецЕсли;

	Если ДополнительныеПараметры.ВыборИзСправочника
		Или ДополнительныеПараметры.ЭтоПолеОКВЭД Тогда
		
		ДополнительныеПараметры.ЗначениеИзСправочника = РезультатВыбора;
		ПредставлениеЗначения = Новый СписокЗначений;
		Для Каждого ЭлементСписка Из РезультатВыбора Цикл
			ПредставлениеЗначения.Добавить(ЭлементСписка.Представление);
		КонецЦикла;
		ДополнительныеПараметры.Значение = ПредставлениеЗначения;
		
	Иначе
		ДополнительныеПараметры.Значение = РезультатВыбора;
	КонецЕсли;
	
	ОбновитьПометку();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборОКВЭДЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если Не ПоискКонтрагентовСлужебныйКлиентСервер.ЭтоСтруктура(РезультатВыбора) Тогда
		Возврат;
	КонецЕсли;
	
	ПравильноеЗначение = Новый Структура("ВыбранныеЗначения");
	ЗаполнитьЗначенияСвойств(ПравильноеЗначение, РезультатВыбора);
	Если ТипЗнч(ПравильноеЗначение.ВыбранныеЗначения) <> Тип("Массив")
		Или ПравильноеЗначение.ВыбранныеЗначения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	ВыбранноеЗначение = ПоискКонтрагентовКлиент.ВыбранныйОКВЭДВЗначениеСправочника(
		ПравильноеЗначение.ВыбранныеЗначения[0]);
		
	ДополнительныеПараметры.Значение              = ВыбранноеЗначение.Представление;
	ДополнительныеПараметры.ЗначениеИзСправочника = ВыбранноеЗначение;
		
	ОбновитьПометку();
	
КонецПроцедуры

&НаКлиенте
Функция ЗначениеВСписок(ТекущееЗначение)
	
	Если ТипЗнч(ТекущееЗначение) = Тип("СписокЗначений") Тогда
		Возврат ТекущееЗначение;
	КонецЕсли;
	
	НовыйСписок = Новый СписокЗначений;
	Если ЗначениеЗаполнено(ТекущееЗначение) Тогда
		НовыйСписок.Добавить(ТекущееЗначение);
	КонецЕсли;
	
	Возврат НовыйСписок;
	
КонецФункции

&НаКлиенте
Функция СписокВЗначение(ТекущееЗначение)
	
	Если ТипЗнч(ТекущееЗначение) = Тип("СписокЗначений") Тогда
		Если ТекущееЗначение.Количество() > 0 Тогда
			Возврат ТекущееЗначение[0].Значение;
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	Иначе
		Возврат ТекущееЗначение;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьПометку()
	
	ТекущиеДанные = Элементы.НастройкиОтборов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ТекущиеДанные.Пометка = ЗначениеЗаполнено(ТекущиеДанные.Значение);
	
КонецПроцедуры

#КонецОбласти

