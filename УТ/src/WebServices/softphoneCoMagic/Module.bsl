#Область СлужебныеПроцедурыИФункции

Функция PutCallInfo(LineName, CallerID, CallInfo)
	
	
	ЧтениеJSON = Новый ЧтениеJSON();
	ЧтениеJSON.УстановитьСтроку(CallInfo);
	json = ПрочитатьJSON(ЧтениеJSON);
	ЧтениеJSON.Закрыть();
	
	Если json.Свойство("comagic_context") И ЗначениеЗаполнено(CallerID) Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		Заявка = Документы.CRM_Заявка.СоздатьДокумент();
		
		СтруктураЗаполнения = Новый Структура;
		
		СтруктураЗаполнения.Вставить("Дата", 	  ТекущаяДата());
		Телефон = СокрЛП(json.ani);
		СтруктураЗаполнения.Вставить("Телефон",	  Телефон);
		
		СтруктураЗаполнения.Вставить("Тема",	  НСтр("ru='Заявка по клиенту';en='Request by customer'") + " " + Телефон);
		
		СтруктураЗаполнения.Вставить("ТипЗаявки", 1); // Звонок
		
		Ид = Формат(json.comagic_context.id, "ЧРД=; ЧРГ=; ЧГ=");
		СтруктураЗаполнения.Вставить("id",Ид);
		
		НаименованиеРеклКампания = СокрЛП(json.comagic_context.campaign);
		ИДРекламнаяКомпания 	 = Формат(json.comagic_context.campaign_id, "ЧРД=; ЧРГ=; ЧГ=");
		КаналПривлечения		 = СтрЗаменить(json.comagic_context.channel,Символы.НПП,"");
		ДанныеКампании = Новый Структура("Идентификатор,Наименование",ИДРекламнаяКомпания, НаименованиеРеклКампания);
		СтрРекл = CRM_СистемаСквознойАналитики.ПолучитьРекламнуюКампаниюПоИД(ДанныеКампании, КаналПривлечения);
		
		Если НЕ ЗначениеЗаполнено(СтрРекл.КаналПервичногоИнтереса) Тогда
			СтрРекл.КаналПервичногоИнтереса = ПланыВидовХарактеристик.КаналыРекламныхВоздействий.CRM_CoMagic;
		КонецЕсли;
			
		СтруктураЗаполнения.Вставить("КаналПервичногоИнтереса",СтрРекл.КаналПервичногоИнтереса);
		СтруктураЗаполнения.Вставить("ИсточникПервичногоИнтереса",СтрРекл.ИсточникПервичногоИнтереса);
		
		// Получим источник получения заявки
		ИсточникЗаявок = "";
		Запрос = новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	CRM_ИсточникиПолученияЛидов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.CRM_ИсточникиПолученияЛидов КАК CRM_ИсточникиПолученияЛидов
		|ГДЕ
		|	CRM_ИсточникиПолученияЛидов.ИспользоватьГенераторЗвонка
		|	И НЕ CRM_ИсточникиПолученияЛидов.ПометкаУдаления
		|	И CRM_ИсточникиПолученияЛидов.Включено
		|	И CRM_ИсточникиПолученияЛидов.Сценарий В (&МассивОператоровКоллтрекинга)";
		МассивОператоров = Новый Массив;
		МассивОператоров.Добавить(Перечисления.CRM_CallTrakingСценарии.Comagic);
		МассивОператоров.Добавить(Перечисления.CRM_CallTrakingСценарии.UIS);
		Запрос.УстановитьПараметр("МассивОператоровКоллтрекинга", МассивОператоров);
		
		Результат = Запрос.Выполнить().Выбрать();
	
		Если Результат.Следующий() Тогда
			ИсточникЗаявок = Результат.Ссылка;
		КонецЕсли;
		
		СтруктураЗаполнения.Вставить("ИсточникПолучения", ИсточникЗаявок);
		
		СайтДомен = json.comagic_context.site;
		СайтДомен = СтрЗаменить(СайтДомен, "https://","");
		СайтДомен = СтрЗаменить(СайтДомен, "http://","");
		СайтИД	  = Формат(json.comagic_context.site_id, "ЧРД=; ЧРГ=; ЧГ=");
		СтруктураСайт = Новый Структура;
		СтруктураСайт.Вставить("id",СайтИД);
		СтруктураСайт.Вставить("Наименование",СайтДомен);
		СтруктураСайт.Вставить("domain",СайтДомен);
		Сайт = CRM_СистемаСквознойАналитики.ЗаписатьИнформациюПоСайтам(СтруктураСайт);
		СтруктураЗаполнения.Вставить("CRM_Сайт", Сайт);
		
		СтруктураЗаполнения.Вставить("CRM_UTM_source", json.comagic_context.utm_source);
		СтруктураЗаполнения.Вставить("CRM_UTM_medium", json.comagic_context.medium);
		СтруктураЗаполнения.Вставить("CRM_UTM_pos", "");

		device = json.comagic_context.device;
		Если НЕ ЗначениеЗаполнено(device) Тогда
			device = НСтр("ru='Прочее';en='Other'");
		КонецЕсли;
			
		ТекстОписание = "region: " + json.comagic_context.region + " 
						|login_page: "  + json.comagic_context.url + " 
						|visitor_device: "  + device + " 
						|visitor_id: " + json.comagic_context.visitor_id + " 
						|site: " + json.comagic_context.site + "
						|channel: "  + json.comagic_context.channel + " 
						|search_query: " + json.comagic_context.search_query + "
						|source: "  + json.comagic_context.utm_source;
			
		ЗаполнитьЗначенияСвойств(Заявка,СтруктураЗаполнения);
		Заявка.Комментарий = ТекстОписание;
		
		Документы.CRM_Заявка.ЗаполнитьКонтактЗаявки(Заявка);
		Справочники.CRM_ПравилаОбработкиОбращений.ПрименитьПравило(Заявка);
		Попытка
			Заявка.Записать();
			CRM_СистемаСквознойАналитики.
					УстановитьСсылкуВИсточникПервичногоИнтересаЗаписатьДопРеквизит(Заявка.Ссылка,СтруктураЗаполнения);
			
			Справочники.CRM_ПравилаОбработкиОбращений.ОбработатьОбращение(Заявка);
		Исключение
			ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки());
			ВызватьИсключение ОписаниеОшибки();
		КонецПопытки;
		
		МенеджерЗаписи = РегистрыСведений.сфпДанныеКоллтрекинга.СоздатьМенеджерЗаписи();
		НомерТелефона 							  = Прав(json.ani, 10);
		МенеджерЗаписи.НомерТелефона 			  = НомерТелефона;
		МенеджерЗаписи.ДатаЗвонка 				  = ТекущаяДата();
		МенеджерЗаписи.Идентификатор 			  = json.comagic_context.visitor_id;
		МенеджерЗаписи.Сайт 					  = json.comagic_context.site;
		МенеджерЗаписи.utm_campaign				  = СокрЛП(json.comagic_context.campaign);
		МенеджерЗаписи.utm_term		 			  = json.comagic_context.search_query;
		МенеджерЗаписи.Оператор 				  = Константы.сфпОператорКоллтрекинга.Получить();
		МенеджерЗаписи.Заявка 					  = Заявка.Ссылка;
		МенеджерЗаписи.КаналПервичногоИнтереса 	  = Заявка.КаналПервичногоИнтереса;
		МенеджерЗаписи.ИсточникПервичногоИнтереса = Заявка.ИсточникПервичногоИнтереса;
		МенеджерЗаписи.Записать();
		
		// Удалим записи старше 1 часа.
		Запрос = Новый Запрос("
		|ВЫБРАТЬ НомерТелефона
		|ИЗ РегистрСведений.сфпДанныеКоллтрекинга
		|ГДЕ ДатаЗвонка < &ДатаПроверки");
		Запрос.УстановитьПараметр("ДатаПроверки", (ТекущаяДата() - 3600));
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			МенеджерЗаписи = РегистрыСведений.сфпДанныеКоллтрекинга.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.НомерТелефона = Выборка.НомерТелефона;
			МенеджерЗаписи.Прочитать();
			Если МенеджерЗаписи.Выбран() Тогда
				МенеджерЗаписи.Удалить();
			КонецЕсли;
		КонецЦикла;
		
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат "OK";

КонецФункции

#КонецОбласти