
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// +Рабочий стол
	CRM_СобытияФорм.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	// -Рабочий стол

КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияТелефонияНажатие(Элемент)
	
	ОткрытьТелефонию();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияFacebookНажатие(Элемент)
	ОткрытьВыбранныйСервис("МессенджерFacebook");
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияКартинкаInstagramНажатие(Элемент)
	ОткрытьВыбранныйСервис("МессенджерInstagram");
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияКартинкаInstagramDirectНажатие(Элемент)
	ОткрытьВыбранныйСервис("МессенджерInstagramDirect");
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияКартинкаTelegramНажатие(Элемент)
	ОткрытьВыбранныйСервис("МессенджерTelegram");
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияКартинкаTelegramБотНажатие(Элемент)
	ОткрытьВыбранныйСервис("МессенджерTelegramBot");
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияКартинкаWhatsAppНажатие(Элемент)
	ОткрытьВыбранныйСервис("МессенджерWhatsApp");
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияКартинкаВКонтактеНажатие(Элемент)
	ОткрытьВыбранныйСервис("МессенджерВКонтакте");
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияКартинкаViberНажатие(Элемент)
	ОткрытьВыбранныйСервис("МессенджерViber");
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияКартинкаСистемаВзаимодействияСообщенияНажатие(Элемент)
	ОткрытьВыбранныйСервис("МессенджерСистемаВзаимодействия");
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияКартинкаСистемаВзаимодействияНажатие(Элемент)
	
	Если ЕстьДоступКПодключениюСистемыВзаимодействия() Тогда
		Если СистемаВзаимодействия.ИнформационнаяБазаЗарегистрирована() Тогда
			ПерейтиПоНавигационнойСсылке("e1cib/command/Обработка.сфпПодключениеСистемыВзаимодействия.Команда.Отключение");
		Иначе 
			ПерейтиПоНавигационнойСсылке("e1cib/app/Обработка.сфпПодключениеСистемыВзаимодействия");
		КонецЕсли;
	Иначе
		ОткрытьФорму("Обработка.сфпПодключениеСистемыВзаимодействия.Форма"); // Чтобы вышло системное сообщение о недостатке прав
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовШапкиФормы

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ЕстьДоступКПодключениюСистемыВзаимодействия()
	Возврат ПравоДоступа("Использование", Метаданные.Обработки.сфпПодключениеСистемыВзаимодействия);
КонецФункции

&НаКлиенте
Процедура ОткрытьТелефонию()
	
	ИмяОткрываемойФормы = "Обработка.сфпАРМ_Телефония.Форма.Форма";
	Синоним = НСтр("ru='Телефония';en='Telephony'");
	
	Если CRM_РабочийСтолКлиент.ФормаОткрытаНаРабочемСтоле(ЭтотОбъект) Тогда
		ИндексФормы = CRM_РабочийСтолКлиент.ПолучитьИндексФормыРабочегоСтола(ЭтотОбъект, ИмяОткрываемойФормы);
		Если ИндексФормы = -1 Тогда
			ОткрытьФорму(ИмяОткрываемойФормы);
		Иначе
			CRM_РабочийСтолКлиент.АктивироватьФормуРабочегоСтола(ЭтотОбъект, ИмяОткрываемойФормы, ИндексФормы);
		КонецЕсли;
	Иначе
		ОткрытьФорму(ИмяОткрываемойФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВыбранныйСервис(ИмяСервиса)
	
	Если СтрНайти(ИмяСервиса, "Мессенджер") > 0 Тогда
		СоздатьКаналДиалогов(СтрЗаменить(ИмяСервиса, "Мессенджер", ""));
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
// Функция - проверка наличия подключенных аккантов диалогов определенного типа
//
// Параметры:
//  ТипМессенджера - строка - название мессенджера
// 
// Возвращаемое значение:
//  Булево - Результат проверки. Истина, если есть элементы.
//
Функция ЕстьПодключенныеУчетныеЗаписиМессенджеров(ТипМессенджера)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	CRM_УчетныеЗаписиМессенджеров.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.CRM_УчетныеЗаписиМессенджеров КАК CRM_УчетныеЗаписиМессенджеров
	               |ГДЕ
	               |	CRM_УчетныеЗаписиМессенджеров.Включена
	               |	И НЕ CRM_УчетныеЗаписиМессенджеров.ПометкаУдаления
	               |	И CRM_УчетныеЗаписиМессенджеров.ТипМессенджера = &ТипМессенджера";
	
	Запрос.УстановитьПараметр("ТипМессенджера", ТипМессенджера);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Если РезультатЗапроса.Следующий() Тогда
		Возврат РезультатЗапроса.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции // ЕстьПодключенныеУчетныеЗаписиМессенджеров()

&НаКлиенте
Процедура СоздатьКаналДиалогов(ТипМессенджера)

	УстановитьКонстанту("CRM_ИспользоватьИнтеграциюСМессенджерами");
	
	Канал = ЕстьПодключенныеУчетныеЗаписиМессенджеров(ТипМессенджера);
	Если Канал <> Неопределено Тогда
		ПараметрыФормы = Новый Структура("ТекущаяСтрока", Канал);
		ОткрытьФорму("Справочник.CRM_УчетныеЗаписиМессенджеров.ФормаСписка", ПараметрыФормы, ЭтотОбъект);
		
	Иначе
		ПараметрыФормы = Новый Структура("ТипМессенджера", ТипМессенджера);
		ОткрытьФорму("Справочник.CRM_УчетныеЗаписиМессенджеров.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьКонстанту(ИмяКонстанты)
	Если НЕ Константы[ИмяКонстанты].Получить() Тогда
		Константы[ИмяКонстанты].Установить(Истина);
	КонецЕсли;
КонецПроцедуры

// +Рабочий стол
#Область Подключаемый_РабочийСтол

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	CRM_СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтотОбъект, Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПолеHTMLЗаметокПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	CRM_РабочийСтолКлиент.ПолеHTMLЗаметокПриНажатии(ЭтотОбъект, Элемент, ДанныеСобытия, СтандартнаяОбработка);
КонецПроцедуры // Подключаемый_ПолеHTMLЗаметокПриНажатии()

#КонецОбласти
// -Рабочий стол

#КонецОбласти // СлужебныеПроцедурыИФункции
