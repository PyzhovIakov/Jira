
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВремяНачалаЗамера = ОценкаПроизводительности.НачатьЗамерВремени();
	
	ИспользоватьПодразделения = CRM_ОбщегоНазначенияПовтИсп.ИспользоватьПодразделения();
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	ОтборПодразделение  = ТекущийПользователь.Подразделение;
	
	ЧьиПоказатели = "Мои";
	
	ПерекраситьКнопкиВариантаОтображенияПоказателей("ВыбратьМоиПоказатели");
	
	НачалоПериода	= НачалоМесяца(CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса());
	КонецПериода	= КонецМесяца(CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса());
	
	ПериодичностьКонтроля	= ПредопределенноеЗначение("Перечисление.Периодичность.Месяц");
	ПредставлениеПериода	= ПредставлениеПериода(НачалоПериода, КонецПериода);
	
	Если ТипЗнч(ОтборПодразделение.ТекущийРуководитель) = Тип("СправочникСсылка.Пользователи") Тогда
		ЯвляетсяРуководителем	= (ОтборПодразделение.ТекущийРуководитель = ТекущийПользователь);
	Иначе
		ЯвляетсяРуководителем	= (ОтборПодразделение.ТекущийРуководитель = ТекущийПользователь.ФизическоеЛицо);
	КонецЕсли;
	ЕстьПраваАдминистратора	= (РольДоступна("ПолныеПрава") Или РольДоступна("Администрирование"));
	ЕстьПравоРедактирования	= (ЯвляетсяРуководителем Или ЕстьПраваАдминистратора);
	
	Элементы.ВыбратьПоказателиПодразделения.Видимость = ИспользоватьПодразделения;
	Элементы.ГруппаОтборПользователей.Видимость       = ИспользоватьПодразделения;
	
	Если Не ЕстьПравоРедактирования Тогда
		Элементы.ВыбратьПоказателиПодразделения.Видимость	= Ложь;
		Элементы.ГруппаОтборПользователей.Видимость			= Ложь;
		
		Элементы.ПользователиСписок.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
		Элементы.ПланыПользователей.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
		
		Элементы.ПланыПользователейФлагВыбора.Видимость = Ложь;
		
		Элементы.ПланыПользователейКонтекстноеМенюГруппа1.Видимость = Ложь;
	КонецЕсли;
	
	ЗаполнитьПользователиТаблица();
	ЗаполнитьПланыПользователейТаблица(ТекущийПользователь);
	
	// +Рабочий стол
	CRM_СобытияФорм.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	// -Рабочий стол
	
	CRM_ОбщегоНазначенияСервер.ЗакончитьЗамерВремениСозданияФормы(ЭтотОбъект, ВремяНачалаЗамера);
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	CRM_ОбщегоНазначенияКлиент.НачатьЗамерВремениОткрытияФормы(ЭтотОбъект);
	
	ПриИзмененииВариантаОтображенияПоказателей();
	
КонецПроцедуры // ПриОткрытии()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборПодразделениеСпособПриИзменении(Элемент)
	
	УстановитьТипРеквизитаПодразделение();
	
	ОтборПодразделениеПриИзменении(Элемент);
	
КонецПроцедуры // ОтборПодразделениеСпособПриИзменении()

&НаКлиенте
Процедура ОтборПодразделениеПриИзменении(Элемент)
	
	Если ОтборПодразделениеСпособ = 0 Тогда
		Сравнение = ВидСравненияКомпоновкиДанных.Равно;
	ИначеЕсли ОтборПодразделениеСпособ = 1 Тогда
		Сравнение = ВидСравненияКомпоновкиДанных.ВИерархии;
	Иначе
		Сравнение = ВидСравненияКомпоновкиДанных.ВСписке;
	КонецЕсли;
	
	ЗаполнитьПользователиТаблица();
	
КонецПроцедуры // ОтборПодразделениеПриИзменении()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПользователиСписок

&НаКлиенте
Процедура ПользователиСписокПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанныеТаблицы = Элемент.ТекущиеДанные;
	
	Если ТекущиеДанныеТаблицы <> Неопределено Тогда
		ЗаполнитьПланыПользователейТаблица(ТекущиеДанныеТаблицы.Ссылка);
	Иначе
		ПланыПользователей.Очистить();
	КонецЕсли;
	
КонецПроцедуры // ПользователиСписокПриАктивизацииСтроки()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПланыПользователей

&НаКлиенте
Процедура ПланыПользователейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ОбновлениеСпискаПланов", ЭтотОбъект);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", Элемент.ТекущиеДанные.Регистратор);
	
	ОткрытьФорму(
		"Документ.CRM_УстановкаИспользуемыхПоказателей.ФормаОбъекта",
		ПараметрыФормы, , , , , ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры // ПланыПользователейВыбор()

&НаКлиенте
Процедура ПланыПользователейПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	Если Копирование Тогда
		ТекущиеДанныеСтроки = Элементы.ПланыПользователей.ТекущиеДанные;
		ТекущиеДанныеСтроки.ФлагВыбора = Истина;
		
		КопироватьДругимПользователям(Команды.Найти("КопироватьДругимПользователям"));
	Иначе
		УстановкаПоказателей(Команды.Найти("УстановкаПоказателей"));
	КонецЕсли;
	
КонецПроцедуры // ПланыПользователейПередНачаломДобавления()

&НаКлиенте
Процедура ПланыПользователейПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
	МассивСсылокДокументов = Новый Массив;
	
	Для Каждого ТекущийИдентификаторСтроки Из Элементы.ПланыПользователей.ВыделенныеСтроки Цикл
		СтрокаТаблицыПоказателей = ПланыПользователей.НайтиПоИдентификатору(ТекущийИдентификаторСтроки);
		МассивСсылокДокументов.Добавить(СтрокаТаблицыПоказателей.Регистратор);
	КонецЦикла;
	
	Если МассивСсылокДокументов.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='Не выбрано показателей для отмены.'; en='No indicators are selected for cancellation.'"));
		Возврат;
	КонецЕсли;
	
	ОтменитьПоказателиНаСервере(МассивСсылокДокументов);
	
	ПоказатьОповещениеПользователя(
		НСтр("ru = 'Отмена показателей'; en = 'Cancellation of indicators'"), ,
		СтрШаблон(НСтр(
			"ru = 'Отменено показателей - %1'; en = 'Cancelled indicators - %1'"),
			МассивСсылокДокументов.Количество()),
		БиблиотекаКартинок.CRM_Выполнено);
	
	ОбновитьДанныеПлановПоПользователю();
	
КонецПроцедуры // ПланыПользователейПередУдалением()

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьПериод(Команда)
	
	ПараметрыВыбора = Новый Структура(
		"НачалоПериода, КонецПериода",
		НачалоПериода, КонецПериода);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ВыбратьПериодЗавершение", ЭтотОбъект);
	
	ОткрытьФорму(
		"ОбщаяФорма.CRM_ВыборСтандартногоПериода",
		ПараметрыВыбора, Элементы.ВыбратьПериод, , , , ОписаниеОповещения);
	
КонецПроцедуры // ВыбратьПериод()

&НаКлиенте
Процедура ПерейтиНазад(Команда)
	
	СдвинутьПериод(-1);
	
КонецПроцедуры // ПерейтиНазад()

&НаКлиенте
Процедура ПерейтиВперед(Команда)
	
	СдвинутьПериод(1);
	
КонецПроцедуры // ПерейтиВперед()

&НаКлиенте
Процедура Справка(Команда)
	
	СсылкаНаРазделСправки = CRM_ОбщегоНазначенияСервер.ПолучитьСсылкуНаРазделСправки(
		"ИспользованиеПоказателей");
	
	ПерейтиПоНавигационнойСсылке(СсылкаНаРазделСправки);
	
КонецПроцедуры // Справка()

&НаКлиенте
Процедура УстановкаПоказателей(Команда)
	
	CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики(
		"CRM_Статистика.Показатели.ФормаМоиПоказатели.Удобства.КоличествоНажатийГиперссылкаУстановитьПоказатель");
	
	ТекущиеДанныеТаблицы = Элементы.ПользователиСписок.ТекущиеДанные;
	
	Если ЧьиПоказатели = "Мои" Или (ТекущиеДанныеТаблицы <> Неопределено
			И (ТекущийПользователь <> ТекущиеДанныеТаблицы.Ссылка Или ЭтоПолныеПрава())) Тогда
		СписокИспользуемыхШаблонов = СписокИспользуемыхПоказателей();
		
		Если ТекущиеДанныеТаблицы <> Неопределено Тогда
			ИспользуемыйПользователь = ТекущиеДанныеТаблицы.Ссылка;
		Иначе // Мои показатели
			ИспользуемыйПользователь = ТекущийПользователь;
		КонецЕсли;
		
		Подсказка = НСтр("ru='Доступные показатели для пользователя %1, на %2';en='Available indicators for user %1, %2'");
		Подсказка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			Подсказка, ИспользуемыйПользователь, ПредставлениеПериода);
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("НеВСписке", СписокИспользуемыхШаблонов);
		ПараметрыФормы.Вставить("Подсказка", Подсказка);
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ИспользуемыйПользователь", ИспользуемыйПользователь);
		
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"УстановкаПоказателейЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		
		ОткрытьФорму(
			"Справочник.CRM_ШаблоныКлючевыхПоказателей.ФормаВыбора",
			ПараметрыФормы, , , , , ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='Не выбран пользователь, для которого нужно установить показатель.';
			|en='User for whom you want set indicator is not selected.'"), , "ПользователиСписок");
	КонецЕсли;
	
КонецПроцедуры // УстановкаПоказателей()

&НаКлиенте
Процедура ПользователиСписокУстановитьВсеФлаги(Команда)
	
	УстановитьЗначенияФлагов(Истина, "ПользователиСписок");
	
КонецПроцедуры // ПользователиСписокУстановитьВсеФлаги()

&НаКлиенте
Процедура ПользователиСписокСнятьВсеФлаги(Команда)
	
	УстановитьЗначенияФлагов(Ложь, "ПользователиСписок");
	
КонецПроцедуры // ПользователиСписокСнятьВсеФлаги()

&НаКлиенте
Процедура ПланыПользователейУстановитьВсеФлаги(Команда)
	
	УстановитьЗначенияФлагов(Истина, "ПланыПользователей");
	
КонецПроцедуры // ПланыПользователейУстановитьВсеФлаги()

&НаКлиенте
Процедура ПланыПользователейСнятьВсеФлаги(Команда)
	
	УстановитьЗначенияФлагов(Ложь, "ПланыПользователей");
	
КонецПроцедуры // ПланыПользователейСнятьВсеФлаги()

&НаКлиенте
Процедура ПеренестиНаДругойПериод(Команда)
	
	ОтборСотрудников	= Новый Структура("ФлагВыбора", Истина);
	ВыбранныеСотрудники	= ПользователиСписок.НайтиСтроки(ОтборСотрудников);
	
	Если ВыбранныеСотрудники.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр(
			"ru = 'Не выбраны пользователи, для которых нужно перенести показатель.';
			|en = 'The users for whom you want to transfer the metric have not been selected'"), , "ПользователиСписок");
		Возврат;
	КонецЕсли;
	
	ПараметрыВыбора = Новый Структура;
	ПараметрыВыбора.Вставить("НачалоПериода", НачалоПериода);
	ПараметрыВыбора.Вставить("КонецПериода", КонецПериода);
	ПараметрыВыбора.Вставить("ВариантПериода", ВариантСтандартногоПериода.Месяц);
	
	ДополнительныеПараметры = Новый Структура(
		"ВыбранныеСотрудники", ВыбранныеСотрудники);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ПеренестиНаДругойПериодЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ОткрытьФорму(
		"ОбщаяФорма.CRM_ВыборСтандартногоПериода",
		ПараметрыВыбора, ЭтотОбъект, , , , ОписаниеОповещения);
	
КонецПроцедуры // ПеренестиНаДругойПериод()

&НаКлиенте
Процедура КопироватьДругимПользователям(Команда)
	
	CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики(
		"CRM_Статистика.Показатели.ФормаМоиПоказатели.Удобства.КоличествоНажатийГиперссылкаКопироватьДругимПользователям");
	
	ОтборПоказателей	= Новый Структура("ФлагВыбора", Истина);
	ВыбранныеПоказатели	= ПланыПользователей.НайтиСтроки(ОтборПоказателей);
	
	Если ВыбранныеПоказатели.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр(
			"ru = 'Не выбраны показатели, которые нужно скопировать пользователям.';
			|en = 'The metrics that users need to copy are not selected.'"), , "ПланыПользователей");
		Возврат;
	КонецЕсли;
	
	ТекущиеДанныеТаблицыПользователей = Элементы.ПользователиСписок.ТекущиеДанные;
	
	Если ТекущиеДанныеТаблицыПользователей <> Неопределено Тогда
		ИспользуемыйПользователь = ТекущиеДанныеТаблицыПользователей.Ссылка;
	Иначе // Мои показатели
		ИспользуемыйПользователь = ТекущийПользователь;
	КонецЕсли;
	
	СписокПользователей = Новый СписокЗначений;
	
	Для Каждого ТекущаяСтрокаТаблицы Из ПользователиСписок Цикл
		Если ТекущаяСтрокаТаблицы.Ссылка <> ИспользуемыйПользователь Тогда
			СписокПользователей.Добавить(
				ТекущаяСтрокаТаблицы.Ссылка,
				ТекущаяСтрокаТаблицы.Наименование);
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СкрытьКнопкиПорядка", Истина);
	ПараметрыФормы.Вставить("СписокЗначений", СписокПользователей);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ВыбранныеПоказатели",		ВыбранныеПоказатели);
	ДополнительныеПараметры.Вставить("ПользовательКопирования", ИспользуемыйПользователь);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"КопироватьДругимПользователямЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ОткрытьФорму(
		"ОбщаяФорма.CRM_ФормаОтметкиЭлементовСписка",
		ПараметрыФормы, ЭтотОбъект, КлючУникальности, , , ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры // КопироватьДругимПользвателям()

&НаКлиенте
Процедура ВыбратьМоиПоказатели(Команда)
	
	CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики(
		"CRM_Статистика.Показатели.ФормаМоиПоказатели.Удобства.КоличествоВыбораКнопкиМоиПоказатели");
	
	ЧьиПоказатели = "Мои";
	
	ПерекраситьКнопкиВариантаОтображенияПоказателей(Команда.Имя);
	ПриИзмененииВариантаОтображенияПоказателей();
	
КонецПроцедуры // ВыбратьМоиПоказатели()

&НаКлиенте
Процедура ВыбратьПоказателиПодразделения(Команда)
	
	CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики(
		"CRM_Статистика.Показатели.ФормаМоиПоказатели.Удобства.КоличествоВыбораКнопкиМоегоПодразделения");
	
	ЧьиПоказатели = "Подразделения";
	
	ПерекраситьКнопкиВариантаОтображенияПоказателей(Команда.Имя);
	ПриИзмененииВариантаОтображенияПоказателей();
	
КонецПроцедуры // ВыбратьПоказателиПодразделения()

&НаКлиенте
Процедура ОбновитьПоказатели(Команда)
	
	ОбновитьДанныеПлановПоПользователю();
	
КонецПроцедуры // ОбновитьПоказатели()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СдвинутьПериод(Множетель)
	
	Если ПериодичностьКонтроля = ПредопределенноеЗначение("Перечисление.Периодичность.Месяц") Тогда
		НачалоПериода	= ДобавитьМесяц(НачалоПериода, Множетель);
		КонецПериода	= КонецМесяца(ДобавитьМесяц(КонецМесяца(КонецПериода) , Множетель));
	ИначеЕсли ПериодичностьКонтроля = ПредопределенноеЗначение("Перечисление.Периодичность.Квартал") Тогда
		НачалоПериода	= ДобавитьМесяц(НачалоПериода, Множетель * 3);
		КонецПериода	= КонецМесяца(ДобавитьМесяц(КонецПериода , Множетель * 3));
	КонецЕсли;	
	
	ПредставлениеПериода = ПредставлениеПериода(НачалоПериода, КонецПериода);
	
	ПользовательСсылка = Неопределено;
	ТекущиеДанные = Элементы.ПользователиСписок.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ПользовательСсылка = ТекущиеДанные.Ссылка;
	КонецЕсли;
	
	ЗаполнитьПользователиТаблица();
	ОбновитьДанныеПлановПоПользователю();
	
	Если ЗначениеЗаполнено(ПользовательСсылка) Тогда
		ПараметрыОтбора = Новый Структура("Ссылка", ПользовательСсылка);
		НайденныеСтроки = ПользователиСписок.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки.Количество() > 0 Тогда
			Элементы.ПользователиСписок.ТекущаяСтрока = НайденныеСтроки[0].ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // СдвинутьПериод()

&НаСервере
Процедура УстановитьТипРеквизитаПодразделение()
	
	ПредыдущееЗначение = ОтборПодразделение;
	
	Если ОтборПодразделениеСпособ = 2 Тогда
		ОписаниеРеквизита = Новый ОписаниеТипов("СписокЗначений");
	Иначе
		ОписаниеРеквизита = Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия");
	КонецЕсли;
	
	ОтборПодразделение = ОписаниеРеквизита.ПривестиЗначение(ОтборПодразделение);
	
	Если ТипЗнч(ПредыдущееЗначение) <> ТипЗнч(ОтборПодразделение) Тогда 
		Если ТипЗнч(ОтборПодразделение) = Тип("СписокЗначений") И ЗначениеЗаполнено(ПредыдущееЗначение) Тогда 
			ОтборПодразделение.Добавить(ПредыдущееЗначение);
		ИначеЕсли ТипЗнч(ПредыдущееЗначение) = Тип("СписокЗначений") И ПредыдущееЗначение.Количество() > 0 Тогда 
			ОтборПодразделение = ПредыдущееЗначение[0].Значение;
		КонецЕсли;
		
		// В списке можно выбирать только подразделения
		Если ТипЗнч(ОтборПодразделение) = Тип("СписокЗначений") Тогда 
			ОтборПодразделение.ТипЗначения =  Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // УстановитьТипРеквизитаПодразделение()

&НаСервере
Функция ЭтоПолныеПрава()
	
	Возврат РольДоступна("ПолныеПрава");
	
КонецФункции // ЭтоПолныеПрава()

&НаСервере
Функция СписокИспользуемыхПоказателей()
	
	ТаблицаПланов = РеквизитФормыВЗначение(
		"ПланыПользователей", Тип("ТаблицаЗначений"));
	
	Возврат ТаблицаПланов.ВыгрузитьКолонку("Показатель");
	
КонецФункции // СписокИспользуемыхПоказателей()

&НаСервере
Процедура ЗаполнитьПланыПользователейТаблица(Менеджер)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	CRM_ИспользуемыеКлючевыеПоказатели.Показатель КАК Показатель,
	|	ВЫБОР
	|		КОГДА CRM_ИспользуемыеКлючевыеПоказатели.Показатель.КратностьЗначений = ""НеИзменять""
	|			ТОГДА CRM_ИспользуемыеКлючевыеПоказатели.Показатель.ЕдиницаИзмерения
	|		КОГДА CRM_ИспользуемыеКлючевыеПоказатели.Показатель.КратностьЗначений = ""Тысячи""
	|			ТОГДА ""тыс. "" + CRM_ИспользуемыеКлючевыеПоказатели.Показатель.ЕдиницаИзмерения.Наименование
	|		КОГДА CRM_ИспользуемыеКлючевыеПоказатели.Показатель.КратностьЗначений = ""Миллионы""
	|			ТОГДА ""млн. "" + CRM_ИспользуемыеКлючевыеПоказатели.Показатель.ЕдиницаИзмерения.Наименование
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	CRM_ИспользуемыеКлючевыеПоказатели.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрСведений.CRM_ИспользуемыеКлючевыеПоказатели КАК CRM_ИспользуемыеКлючевыеПоказатели
	|ГДЕ
	|	CRM_ИспользуемыеКлючевыеПоказатели.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И CRM_ИспользуемыеКлючевыеПоказатели.Менеджер = &Менеджер
	|	И CRM_ИспользуемыеКлючевыеПоказатели.Регистратор.ПометкаУдаления = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	CRM_ИспользуемыеКлючевыеПоказатели.Показатель,
	|	ВЫБОР
	|		КОГДА CRM_ИспользуемыеКлючевыеПоказатели.Показатель.КратностьЗначений = ""НеИзменять""
	|			ТОГДА CRM_ИспользуемыеКлючевыеПоказатели.Показатель.ЕдиницаИзмерения
	|		КОГДА CRM_ИспользуемыеКлючевыеПоказатели.Показатель.КратностьЗначений = ""Тысячи""
	|			ТОГДА ""тыс. "" + CRM_ИспользуемыеКлючевыеПоказатели.Показатель.ЕдиницаИзмерения.Наименование
	|		КОГДА CRM_ИспользуемыеКлючевыеПоказатели.Показатель.КратностьЗначений = ""Миллионы""
	|			ТОГДА ""млн. "" + CRM_ИспользуемыеКлючевыеПоказатели.Показатель.ЕдиницаИзмерения.Наименование
	|	КОНЕЦ,
	|	CRM_ИспользуемыеКлючевыеПоказатели.Регистратор";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Запрос.УстановитьПараметр("НачалоПериода",	НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",	КонецПериода);
	Запрос.УстановитьПараметр("Менеджер",		Менеджер);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	ПланыПользователей.Загрузить(РезультатЗапроса);
	
	CRM_ОбщегоНазначенияКлиентСервер.ОбновлениеТаблицыФормы(Элементы.ПланыПользователей);
	
КонецПроцедуры // ЗаполнитьПланыПользователейТаблица()

&НаСервере
Процедура ЗаполнитьПользователиТаблица()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	CRM_УстановкаИспользуемыхПоказателей.Исполнитель КАК Исполнитель,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ CRM_УстановкаИспользуемыхПоказателей.Ссылка) КАК КоличествоДокументов
	|ПОМЕСТИТЬ втДокументыПоказателейПоИсполнителям
	|ИЗ
	|	Документ.CRM_УстановкаИспользуемыхПоказателей КАК CRM_УстановкаИспользуемыхПоказателей
	|ГДЕ
	|	CRM_УстановкаИспользуемыхПоказателей.Проведен = ИСТИНА
	|	И CRM_УстановкаИспользуемыхПоказателей.ПометкаУдаления = ЛОЖЬ
	|	И CRM_УстановкаИспользуемыхПоказателей.НачалоПериодаПланирования = &НачалоПериодаПланирования
	|	И CRM_УстановкаИспользуемыхПоказателей.КонецПериодаПланирования = &КонецПериодаПланирования
	|
	|СГРУППИРОВАТЬ ПО
	|	CRM_УстановкаИспользуемыхПоказателей.Исполнитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Пользователи.Ссылка КАК Ссылка,
	|	Пользователи.Наименование КАК Наименование,
	|	ВЫБОР
	|		КОГДА Пользователи.ПометкаУдаления
	|			ТОГДА 4
	|		КОГДА Пользователи.ИдентификаторПользователяИБ = &ПустойУникальныйИдентификатор
	|			ТОГДА 5
	|		ИНАЧЕ 3
	|	КОНЕЦ КАК НомерКартинки,
	|	Пользователи.Подразделение КАК Подразделение
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|		ЛЕВОЕ СОЕДИНЕНИЕ втДокументыПоказателейПоИсполнителям КАК втДокументыПоказателейПоИсполнителям
	|		ПО Пользователи.Ссылка = втДокументыПоказателейПоИсполнителям.Исполнитель
	|ГДЕ
	|	Пользователи.Ссылка В(&ДоступныеПользователи)
	|	И (НЕ Пользователи.Недействителен
	|			ИЛИ ЕСТЬNULL(втДокументыПоказателейПоИсполнителям.КоличествоДокументов, 0) > 0)
	|	И Пользователи.Подразделение = &Подразделение";
	
	Если Не ЗначениеЗаполнено(ОтборПодразделение) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И Пользователи.Подразделение = &Подразделение", "");
	ИначеЕсли ОтборПодразделениеСпособ = 1 Тогда // В группе
		ТекстЗапроса = СтрЗаменить(
			ТекстЗапроса,
			"И Пользователи.Подразделение = &Подразделение",
			"И Пользователи.Подразделение В ИЕРАРХИИ(&Подразделение)");
	ИначеЕсли ОтборПодразделениеСпособ = 2 Тогда // В списке
		ТекстЗапроса = СтрЗаменить(
			ТекстЗапроса,
			"И Пользователи.Подразделение = &Подразделение",
			"И Пользователи.Подразделение В (&Подразделение)");
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	ДоступныеПользователи	= CRM_УправлениеЦелевымиПоказателямиСервер.ДоступныеПользователи(Ложь);
	ПустойИдентификатор		= Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000");
	
	Запрос.УстановитьПараметр("Подразделение",					ОтборПодразделение);
	Запрос.УстановитьПараметр("ДоступныеПользователи",			ДоступныеПользователи);
	Запрос.УстановитьПараметр("ПустойУникальныйИдентификатор",	ПустойИдентификатор);
	
	Запрос.УстановитьПараметр("НачалоПериодаПланирования",	НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериодаПланирования",	НачалоДня(КонецПериода));
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	ПользователиСписок.Загрузить(РезультатЗапроса);
	
	CRM_ОбщегоНазначенияКлиентСервер.ОбновлениеТаблицыФормы(Элементы.ПользователиСписок);
	
КонецПроцедуры // ЗаполнитьПользователиТаблица()

&НаКлиенте
Процедура УстановитьЗначенияФлагов(ЗначениеФлага, НаименованиеТаблицыДанных)
	
	Если НаименованиеТаблицыДанных = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ТекущаяСтрокаТаблицы Из ЭтотОбъект[НаименованиеТаблицыДанных] Цикл
		ТекущаяСтрокаТаблицы["ФлагВыбора"] = ЗначениеФлага;
	КонецЦикла;
	
КонецПроцедуры // УстановитьЗначенияФлагов()

&НаКлиенте
Процедура ПеренестиНаДругойПериодЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВыбранныеПользователи = Новый Массив;
	
	Для Каждого ТекущаяСтрокаВыбранногоПользователя Из ДополнительныеПараметры.ВыбранныеСотрудники Цикл
		ВыбранныеПользователи.Добавить(ТекущаяСтрокаВыбранногоПользователя.Ссылка);
	КонецЦикла;
	
	ПеренестиНаДругойПериодНаСервере(РезультатЗакрытия, ВыбранныеПользователи);
	
	ПоказатьОповещениеПользователя(
		НСтр("ru = 'Перенос показателей'; en = 'Transferring indicators'"), ,
		НСтр("ru = 'Перенос показателей выполнен.';
			|en = 'The transfer of indicators has been completed.'"),
		БиблиотекаКартинок.CRM_Выполнено);
	
	ОповеститьОбИзменении(Тип("ДокументСсылка.CRM_УстановкаИспользуемыхПоказателей"));
	
	ОбновитьДанныеПлановПоПользователю();
	
КонецПроцедуры // ПеренестиНаДругойПериодЗавершение()

&НаСервере
Процедура ПеренестиНаДругойПериодНаСервере(ПериодПереноса, ВыбранныеПользователи)
	
	УстанавливаемаяДатаДокумента = ТекущаяДатаСеанса();
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	CRM_УстановкаИспользуемыхПоказателей.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втПоказателиПервыйПериод
	|ИЗ
	|	Документ.CRM_УстановкаИспользуемыхПоказателей КАК CRM_УстановкаИспользуемыхПоказателей
	|ГДЕ
	|	CRM_УстановкаИспользуемыхПоказателей.НачалоПериодаПланирования = &НачалоПериодаПланирования
	|	И CRM_УстановкаИспользуемыхПоказателей.КонецПериодаПланирования = &КонецПериодаПланирования
	|	И CRM_УстановкаИспользуемыхПоказателей.Исполнитель В(&Исполнители)
	|	И CRM_УстановкаИспользуемыхПоказателей.ПометкаУдаления = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	CRM_УстановкаИспользуемыхПоказателей.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втПоказателиВторойПериод
	|ИЗ
	|	Документ.CRM_УстановкаИспользуемыхПоказателей КАК CRM_УстановкаИспользуемыхПоказателей
	|ГДЕ
	|	CRM_УстановкаИспользуемыхПоказателей.НачалоПериодаПланирования = &НачалоПериодаПланированияСледующий
	|	И CRM_УстановкаИспользуемыхПоказателей.КонецПериодаПланирования = &КонецПериодаПланированияСледующий
	|	И CRM_УстановкаИспользуемыхПоказателей.Исполнитель В(&Исполнители)
	|	И CRM_УстановкаИспользуемыхПоказателей.ПометкаУдаления = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПоказателиПервыйПериод.Ссылка КАК ПоказательТекущийПериод,
	|	ЕСТЬNULL(втПоказателиВторойПериод.Ссылка, НЕОПРЕДЕЛЕНО) КАК ПоказательСледующийПериод
	|ИЗ
	|	втПоказателиПервыйПериод КАК втПоказателиПервыйПериод
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПоказателиВторойПериод КАК втПоказателиВторойПериод
	|		ПО втПоказателиПервыйПериод.Ссылка.Показатель = втПоказателиВторойПериод.Ссылка.Показатель
	|			И втПоказателиПервыйПериод.Ссылка.Исполнитель = втПоказателиВторойПериод.Ссылка.Исполнитель";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Запрос.УстановитьПараметр("Исполнители", ВыбранныеПользователи);
	
	Запрос.УстановитьПараметр("НачалоПериодаПланирования",	НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериодаПланирования",	НачалоДня(КонецПериода));
	
	Запрос.УстановитьПараметр("НачалоПериодаПланированияСледующий",	ПериодПереноса.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериодаПланированияСледующий",	НачалоДня(ПериодПереноса.КонецПериода));
	
	ВыборкаРезультат = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаРезультат.Следующий() Цикл
		Если ВыборкаРезультат.ПоказательСледующийПериод = Неопределено Тогда
			ДокументДляПереноса = ВыборкаРезультат.ПоказательТекущийПериод.Скопировать();
			
			ДокументДляПереноса.Дата = УстанавливаемаяДатаДокумента;
		Иначе
			ДокументДляПереноса = ВыборкаРезультат.ПоказательСледующийПериод.ПолучитьОбъект();
			
			ДокументДляПереноса.ВидОперации		= ДокументДляПереноса.ВидОперации;
			ДокументДляПереноса.ВесПоказателя	= ДокументДляПереноса.ВесПоказателя;
			ДокументДляПереноса.ВидПериода		= ДокументДляПереноса.ВидПериода;
			ДокументДляПереноса.СуммаБонуса		= ДокументДляПереноса.СуммаБонуса;
		КонецЕсли;
		
		ДокументДляПереноса.ЗначениеПоказателя			= ВыборкаРезультат.ПоказательТекущийПериод.ЗначениеПоказателя;
		ДокументДляПереноса.ЗначениеПоказателяМаксимум	= ВыборкаРезультат.ПоказательТекущийПериод.ЗначениеПоказателяМаксимум;
		
		ДокументДляПереноса.НачалоПериодаПланирования			= ПериодПереноса.НачалоПериода;
		ДокументДляПереноса.КонецПериодаПланирования			= ПериодПереноса.КонецПериода;
		ДокументДляПереноса.ПредставлениеПериодаПланирования	= ПериодПереноса.ПредставлениеПериода;
		
		ДокументДляПереноса.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;
	
КонецПроцедуры // ПеренестиНаДругойПериодНаСервере()

&НаКлиенте
Процедура ОбновитьДанныеПлановПоПользователю()
	
	ТекущиеДанныеТаблицы = Элементы.ПользователиСписок.ТекущиеДанные;
	
	Если ТекущиеДанныеТаблицы <> Неопределено Тогда
		ЗаполнитьПланыПользователейТаблица(ТекущиеДанныеТаблицы.Ссылка);
	ИначеЕсли ЧьиПоказатели = "Мои" Тогда
		ЗаполнитьПланыПользователейТаблица(ТекущийПользователь);
	Иначе
		ПланыПользователей.Очистить();
	КонецЕсли;
	
КонецПроцедуры // ОбновитьДанныеПлановПоПользователю()

&НаКлиенте
Процедура КопироватьДругимПользователямЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия <> Неопределено Тогда
		МассивВыбранныхПользователей = Новый Массив;
		
		Для Каждого ТекущийПользовательСписка Из РезультатЗакрытия Цикл
			Если ТекущийПользовательСписка.Пометка Тогда
				МассивВыбранныхПользователей.Добавить(ТекущийПользовательСписка.Значение);
			КонецЕсли;
		КонецЦикла;
		
		МассивВыбранныхПоказателей = Новый Массив;
		
		Для Каждого ТекущийПользовательСписка Из ДополнительныеПараметры.ВыбранныеПоказатели Цикл
			МассивВыбранныхПоказателей.Добавить(ТекущийПользовательСписка.Показатель);
		КонецЦикла;
		
		КопироватьДругимПользователямНаСервере(
			МассивВыбранныхПользователей,
			МассивВыбранныхПоказателей,
			ДополнительныеПараметры.ПользовательКопирования);
		
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Копирование показателей'; en = 'Copying indicators'"), ,
			НСтр("ru = 'Копирование показателей другим пользователям выполнено.';
				|en = 'Copying of indicators to other users has been completed.'"),
			БиблиотекаКартинок.CRM_Выполнено);
		
		ОповеститьОбИзменении(Тип("ДокументСсылка.CRM_УстановкаИспользуемыхПоказателей"));
	КонецЕсли;
	
КонецПроцедуры // КопироватьДругимПользвателямЗавершение()

&НаСервере
Процедура КопироватьДругимПользователямНаСервере(ВыбранныеПользователи, ВыбранныеПоказатели, ПользовательКопирования)
	
	ДатаДокумента = ТекущаяДатаСеанса();
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Пользователи.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втПользователи
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|	Пользователи.Ссылка В(&Пользователи)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	CRM_ШаблоныКлючевыхПоказателей.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втПоказатели
	|ИЗ
	|	Справочник.CRM_ШаблоныКлючевыхПоказателей КАК CRM_ШаблоныКлючевыхПоказателей
	|ГДЕ
	|	CRM_ШаблоныКлючевыхПоказателей.Ссылка В(&Показатели)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	CRM_УстановкаИспользуемыхПоказателей.Ссылка КАК Ссылка,
	|	CRM_УстановкаИспользуемыхПоказателей.Исполнитель КАК Исполнитель,
	|	CRM_УстановкаИспользуемыхПоказателей.Показатель КАК Показатель
	|ПОМЕСТИТЬ втУстановкиПоказателей
	|ИЗ
	|	Документ.CRM_УстановкаИспользуемыхПоказателей КАК CRM_УстановкаИспользуемыхПоказателей
	|ГДЕ
	|	CRM_УстановкаИспользуемыхПоказателей.НачалоПериодаПланирования = &НачалоПериодаПланирования
	|	И CRM_УстановкаИспользуемыхПоказателей.КонецПериодаПланирования = &КонецПериодаПланирования
	|	И CRM_УстановкаИспользуемыхПоказателей.ПометкаУдаления = ЛОЖЬ
	|	И CRM_УстановкаИспользуемыхПоказателей.Показатель В(&Показатели)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПоказатели.Ссылка КАК ПоказательСсылка,
	|	втПользователи.Ссылка КАК ПользовательСсылка
	|ПОМЕСТИТЬ втПоказателиПользователей
	|ИЗ
	|	втПользователи КАК втПользователи,
	|	втПоказатели КАК втПоказатели
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПоказателиПользователей.ПользовательСсылка КАК ПользовательСсылка,
	|	втПоказателиПользователей.ПоказательСсылка КАК ПоказательСсылка,
	|	ЕСТЬNULL(втУстановкиПоказателей.Ссылка, НЕОПРЕДЕЛЕНО) КАК ДокументСсылка,
	|	втУстановкиПоказателейКопирование.Ссылка КАК ДокументСсылкаКопирования
	|ИЗ
	|	втПоказателиПользователей КАК втПоказателиПользователей
	|		ЛЕВОЕ СОЕДИНЕНИЕ втУстановкиПоказателей КАК втУстановкиПоказателей
	|		ПО втПоказателиПользователей.ПоказательСсылка = втУстановкиПоказателей.Показатель
	|			И втПоказателиПользователей.ПользовательСсылка = втУстановкиПоказателей.Исполнитель
	|		ЛЕВОЕ СОЕДИНЕНИЕ втУстановкиПоказателей КАК втУстановкиПоказателейКопирование
	|		ПО втПоказателиПользователей.ПоказательСсылка = втУстановкиПоказателейКопирование.Показатель
	|			И (втУстановкиПоказателейКопирование.Исполнитель = &ПользовательКопирования)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Запрос.УстановитьПараметр("Пользователи",	ВыбранныеПользователи);
	Запрос.УстановитьПараметр("Показатели",		ВыбранныеПоказатели);
	
	Запрос.УстановитьПараметр("НачалоПериодаПланирования",	НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериодаПланирования",	НачалоДня(КонецПериода));
	
	Запрос.УстановитьПараметр("ПользовательКопирования", ПользовательКопирования);
	
	ВыборкаДокументов = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаДокументов.Следующий() Цикл
		Если ВыборкаДокументов.ДокументСсылка = Неопределено Тогда
			ДокументОбъект = ВыборкаДокументов.ДокументСсылкаКопирования.Скопировать();
			ДокументОбъект.Дата	= ДатаДокумента;
		Иначе
			ДокументОбъект		= ВыборкаДокументов.ДокументСсылка.ПолучитьОбъект();
			ОбъектКопирования	= ВыборкаДокументов.ДокументСсылкаКопирования.ПолучитьОбъект();
			
			ЗаполнитьЗначенияСвойств(
				ДокументОбъект, ОбъектКопирования, ,
				"Дата, Номер, Ссылка, Проведен, ПометкаУдаления");
		КонецЕсли;
		
		ДокументОбъект.Автор		= ТекущийПользователь;
		ДокументОбъект.Исполнитель	= ВыборкаДокументов.ПользовательСсылка;
		
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;
	
КонецПроцедуры // КопироватьДругимПользвателямНаСервере()

&НаСервере
Процедура ПерекраситьКнопкиВариантаОтображенияПоказателей(ИмяКоманды)
	
	МассивКнопок = Новый Массив;
	МассивКнопок.Добавить(Элементы.ВыбратьМоиПоказатели);
	МассивКнопок.Добавить(Элементы.ВыбратьПоказателиПодразделения);
	
	Для Каждого ТекущаяКнопка Из МассивКнопок Цикл
		ТекущаяКнопка.Пометка = (ИмяКоманды = Команды[ТекущаяКнопка.Имя].Имя);
		
		Если ТекущаяКнопка.Пометка Тогда
			ТекущаяКнопка.ЦветФона		= ЦветаСтиля.CRM_ОсновнойГолубой;
			ТекущаяКнопка.ЦветРамки		= ЦветаСтиля.CRM_ОсновнойГолубой;
			ТекущаяКнопка.ЦветТекста	= ЦветаСтиля.ЦветФонаПоля;
		Иначе
			ТекущаяКнопка.ЦветФона		= ЦветаСтиля.CRM_СерыйДляВторостепенныхФункций;
			ТекущаяКнопка.ЦветРамки		= ЦветаСтиля.CRM_СерыйДляВторостепенныхФункций;
			ТекущаяКнопка.ЦветТекста	= ЦветаСтиля.ЦветФонаПоля;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииВариантаОтображенияПоказателей()
	
	ВидимостьЭлементов = ЧьиПоказатели <> "Мои";
	
	Элементы.ГруппаПользователи.Видимость = ВидимостьЭлементов;
	
	Если ЧьиПоказатели = "Мои" Тогда
		ЗаполнитьПланыПользователейТаблица(ТекущийПользователь);
	КонецЕсли;
	
КонецПроцедуры // ПриИзмененииВариантаОтображенияПоказателей()

&НаКлиенте
Процедура УстановкаПоказателейЗавершение(ВыбранныйШаблон, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйШаблон <> Неопределено Тогда
		ПериодПланирования = Новый СтандартныйПериод;
		ПериодПланирования.ДатаНачала		= НачалоДня(НачалоПериода);
		ПериодПланирования.ДатаОкончания	= НачалоДня(КонецПериода);
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Показатель",			ВыбранныйШаблон);
		ПараметрыФормы.Вставить("Исполнитель",			ДополнительныеПараметры.ИспользуемыйПользователь);
		ПараметрыФормы.Вставить("ПериодПланирования",	ПериодПланирования);
		
		ПараметрыОтбора		= Новый Структура("ФлагВыбора", Истина);
		ИсполнителиСтроки	= ПользователиСписок.НайтиСтроки(ПараметрыОтбора);
		
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ОбновлениеСпискаПланов", ЭтотОбъект);
		
		Если ИсполнителиСтроки.Количество() > 0 Тогда
			СписокИсполнителей = Новый СписокЗначений;
			
			Для Каждого ТекущийСписокИсполнителя Из ИсполнителиСтроки Цикл
				СписокИсполнителей.Добавить(
					ТекущийСписокИсполнителя.Ссылка,
					ТекущийСписокИсполнителя.Наименование,
					Истина);
			КонецЦикла;
			
			ПараметрыФормы.Вставить("Исполнитель", СписокИсполнителей);
			
			ФормаДляОткрытия =
				"Документ.CRM_УстановкаИспользуемыхПоказателей.Форма.ФормаУстановкиПоказателяНесколькимПользователям";
		Иначе
			ФормаДляОткрытия = "Документ.CRM_УстановкаИспользуемыхПоказателей.ФормаОбъекта";
		КонецЕсли;
		
		ОткрытьФорму(
			ФормаДляОткрытия, ПараметрыФормы, ЭтотОбъект, КлючУникальности , , ,
			ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры // УстановкаПоказателейЗавершение()

&НаКлиенте
Процедура ВыбратьПериодЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(
		ЭтотОбъект, РезультатВыбора, "ПредставлениеПериода,ПериодичностьКонтроля");
	
	НачалоПериода	= РезультатВыбора.НачалоПериода;
	КонецПериода	= РезультатВыбора.КонецПериода;
	
	ОбновитьДанныеПлановПоПользователю();
	
КонецПроцедуры // ВыбратьПериодЗавершение()

&НаКлиенте
Процедура ОбновлениеСпискаПланов(Результат, Дополнительно) Экспорт
	
	ОбновитьДанныеПлановПоПользователю();
	
КонецПроцедуры // ОбновлениеСпискаПланов()

&НаСервере
Процедура ОтменитьПоказателиНаСервере(МассивСсылокНаДокументы)
	
	Для Каждого ТекущаяСсылкаНаДокумент Из МассивСсылокНаДокументы Цикл
		ОбъектДокумента = ТекущаяСсылкаНаДокумент.ПолучитьОбъект();
		ОбъектДокумента.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	КонецЦикла;
	
КонецПроцедуры // ОтменитьПоказателиНаСервере()

#КонецОбласти

// +Рабочий стол
#Область Подключаемый_РабочийСтол

&НаКлиенте
Процедура Подключаемый_ПолеHTMLЗаметокПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	CRM_РабочийСтолКлиент.ПолеHTMLЗаметокПриНажатии(
		ЭтотОбъект, Элемент, ДанныеСобытия, СтандартнаяОбработка);
	
КонецПроцедуры // Подключаемый_ПолеHTMLЗаметокПриНажатии()

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	CRM_СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтотОбъект, Команда);
	
КонецПроцедуры // Подключаемый_ВыполнитьПереопределяемуюКоманду()

#КонецОбласти
// -Рабочий стол

