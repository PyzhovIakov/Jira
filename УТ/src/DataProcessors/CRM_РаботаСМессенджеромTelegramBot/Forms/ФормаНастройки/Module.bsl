
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьЗначенияСвойств(Объект, Параметры);
	
	Параметры.Свойство("ПараметрыПрокси", ПараметрыПрокси);
	
	ДЗ = РеквизитФормыВЗначение("НастройкиБота");
	Если ЗначениеЗаполнено(Объект.НастройкиБота) Тогда
		// BSLLS:MissingCodeTryCatchEx-off
		Попытка
			МассивСтруктур = CRM_РаботаСМессенджерамиСервер.ПолучитьЗначениеИзОтветаJSON(Объект.НастройкиБота);
			ЗаполнитьДеревоЗначенийИзМассиваСтруктур(ДЗ, МассивСтруктур);
		Исключение
			// Если в настройках не json, настроеваем как новый
		КонецПопытки;
		// BSLLS:MissingCodeTryCatchEx-on
	КонецЕсли;
	
	Если ДЗ.Строки.Количество() = 0 Тогда
		СтрокаСтарт = ДЗ.Строки.Добавить();
		СтрокаСтарт.callback_data = "/start";
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(ДЗ, "НастройкиБота");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаСправка(Команда)

	ПерейтиПоНавигационнойСсылке(CRM_ОбщегоНазначенияСервер.ПолучитьСсылкуНаРазделСправки("Telegram"));

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПодключение(Команда)
	Попытка
		ПроверитьПодключениеКTelegram();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Подключение прошло успешно.';
			|en='Connection was successful.'"));
	Исключение
		Инфо = ИнформацияОбОшибке();
		Описание = ?(Инфо.Причина = Неопределено, Инфо.Описание, Инфо.Причина.Описание);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Описание);
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура Готово(Команда)
	Если ПроверитьЗаполнение() Тогда
		ПараметрыДоступа = Новый Структура;
		ПараметрыДоступа.Вставить("Токен", Объект.Токен);
		Объект.НастройкиБота = СформироватьТекстОтвета();
		ПараметрыДоступа.Вставить("НастройкиБота", Объект.НастройкиБота);
		Закрыть(ПараметрыДоступа);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьПримерСкрипта(Команда)
	
	ОповещениеЗавершения = Новый ОписаниеОповещения("ЗагрузитьПримерСкриптаЗавершение", ЭтотОбъект);
	
	СтрокиДерева =  НастройкиБота.ПолучитьЭлементы();
	
	НастройкиЗаполнены = Истина;
	Если СтрокиДерева.Количество() = 0 Тогда
		НастройкиЗаполнены = Ложь;
	Иначе
		Если СтрокиДерева.Количество() = 1 Тогда
			Строка = СтрокиДерева[0];
			Если СокрЛП(Строка.callback_data) = "/start"
				И СокрЛП(Строка.text) = ""
				И СокрЛП(Строка.Ответ) = "" Тогда
				НастройкиЗаполнены = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если НастройкиЗаполнены Тогда
		ТекстВопроса = НСтр("ru = 'Настройка чат-бота будет очищена. Продолжить?'");
		ПоказатьВопрос(ОповещениеЗавершения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ВыполнитьОбработкуОповещения(ОповещениеЗавершения, КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьПримерСкриптаЗавершение(Результат, ДопПараметры) Экспорт
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	ЗагрузитьПримерСкриптаНаСервере();
	Модифицированность = Истина;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПроверитьПодключениеКTelegram()
	ДанныеБота = Обработки.CRM_РаботаСМессенджеромTelegramBot.ДанныеБотаTelegram(Объект.Токен, ПараметрыПрокси);
КонецПроцедуры

#Область ДействияБота

Функция СформироватьТекстОтвета()
	ДЗ = РеквизитФормыВЗначение("НастройкиБота");
	МассивСтруктур = ДеревоЗначенийВМассивСтруктур(ДЗ);
	ТекстКнопок = ПолучитьСтрокуJSON(МассивСтруктур);
	Возврат ТекстКнопок;
КонецФункции

Функция ПолучитьСтрокуJSON(Значение)
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет, , Истина));
	ЗаписатьJSON(ЗаписьJSON, Значение);
	Возврат ЗаписьJSON.Закрыть();
КонецФункции
	
Функция ДеревоЗначенийВМассивСтруктур(Дерево, ИменаКолонок = "")
	Результат = Новый Массив;
	
	Если ИменаКолонок = "" Тогда
		ИменаКолонок = "Строки";
		Для Каждого Колонка Из Дерево.Колонки Цикл
			ИменаКолонок = ИменаКолонок + "," + Колонка.Имя;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Строка Из Дерево.Строки Цикл
		СтруктураСтроки = Новый Структура(ИменаКолонок);
		ЗаполнитьЗначенияСвойств(СтруктураСтроки, Строка);
		СтруктураСтроки.Строки = ДеревоЗначенийВМассивСтруктур(Строка, ИменаКолонок);
		Результат.Добавить(СтруктураСтроки);
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

Процедура ЗаполнитьДеревоЗначенийИзМассиваСтруктур(Дерево, МассивСтруктур) 
	Если ТипЗнч(Дерево) = Тип("ДеревоЗначений") Тогда 
		СтруктураКолонок = МассивСтруктур[0];
		Для Каждого Поле Из СтруктураКолонок Цикл
			Если Поле.Ключ = "Строки" Тогда
				Продолжить;
			КонецЕсли;
			Если Дерево.Колонки.Найти(Поле.Ключ) = Неопределено Тогда
				Дерево.Колонки.Добавить(Поле.Ключ);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли; 
	Для Каждого Строка Из МассивСтруктур Цикл
		СтрокаДЗ = Дерево.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаДЗ, Строка);
		ЗаполнитьДеревоЗначенийИзМассиваСтруктур(СтрокаДЗ, Строка.Строки);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьПримерСкриптаНаСервере()
	
	ДеревоОбъект = РеквизитФормыВЗначение("НастройкиБота", Тип("ДеревоЗначений"));
	ДеревоОбъект.Строки.Очистить();
	
	Макет = Обработки.CRM_РаботаСМессенджеромTelegramBot.ПолучитьМакет("ПримерСкриптаДляЧатБота");
	Для Сч = 2 По Макет.ВысотаТаблицы Цикл
		
		Родитель		= СокрЛП(Макет.Область(Сч, 1).Текст);
		Команда			= СокрЛП(Макет.Область(Сч, 2).Текст);
		ТекстКнопки		= СокрЛП(Макет.Область(Сч, 3).Текст);
		Ответ			= СокрЛП(Макет.Область(Сч, 4).Текст);
		
		ДобавитьСтрокуДерева(Родитель, Команда, ТекстКнопки, Ответ, ДеревоОбъект);
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ДеревоОбъект, "НастройкиБота");
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДобавитьСтрокуДерева(Родитель, Команда, ТекстКнопки, Ответ, ДеревоОбъект)
	
	Если ПустаяСтрока(Родитель) Тогда
		НоваяСтрока = ДеревоОбъект.Строки.Добавить();
	Иначе
		НайденнаяСтрока = ДеревоОбъект.Строки.Найти(Родитель, "callback_data", Истина);
		Если НайденнаяСтрока = Неопределено Тогда
			НоваяСтрока = ДеревоОбъект.Строки.Добавить();
		Иначе
			НоваяСтрока = НайденнаяСтрока.Строки.Добавить();
		КонецЕсли;
	КонецЕсли;
	
	НоваяСтрока.callback_data = Команда;
	НоваяСтрока.Ответ = Ответ;
	НоваяСтрока.text = ТекстКнопки;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиБотаПередНачаломИзменения(Элемент, Отказ)
	Если НастройкиБота.ПолучитьЭлементы()[0] = Элемент.ТекущиеДанные
		И Элемент.ТекущийЭлемент.Имя <> "КлавиатураОтвет" Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НастройкиБотаПередУдалением(Элемент, Отказ)
	Если НастройкиБота.ПолучитьЭлементы()[0] = Элемент.ТекущиеДанные Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#КонецОбласти
