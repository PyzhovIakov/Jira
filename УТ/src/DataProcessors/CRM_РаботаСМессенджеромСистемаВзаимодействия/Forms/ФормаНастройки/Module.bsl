
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияСвойств(Объект, Параметры);
	
	Если Объект.СписокОбъектов.Количество() = 0 Тогда
		Объект.СписокОбъектов.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.CRM_Интерес"));
	КонецЕсли;
	
	СписокОбъектов.ЗагрузитьЗначения(Объект.СписокОбъектов.ВыгрузитьЗначения());
	
	ОбсужденияДоступны = Обсуждения.ОбсужденияДоступны();
	Элементы.ГруппаОбсужденияДоступны.Видимость = ОбсужденияДоступны;
	Элементы.ГруппаПодключениеОбсуждений.Видимость = НЕ ОбсужденияДоступны;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	
	МодульОбсужденияСлужебныйКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ОбсужденияСлужебныйКлиент");
	Если НЕ МодульОбсужденияСлужебныйКлиент.Подключены() Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Обсуждения не подключены!'"));
		Возврат;
	КонецЕсли;
	
	Объект.СписокОбъектов.ЗагрузитьЗначения(СписокОбъектов.ВыгрузитьЗначения());
	Если ПроверитьЗаполнение() Тогда
		Позиция = Объект.СписокОбъектов.Количество() - 1;
		Пока Позиция >= 0 Цикл
			Элемент = Объект.СписокОбъектов[Позиция];
			Если НЕ ЗначениеЗаполнено(Элемент.Значение) Тогда
				Объект.СписокОбъектов.Удалить(Элемент);
			КонецЕсли;
			Позиция = Позиция - 1;
		КонецЦикла;
		ПараметрыДоступа = Новый Структура;
		ПараметрыДоступа.Вставить("СписокОбъектов", Объект.СписокОбъектов);
		Закрыть(ПараметрыДоступа);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаСправка(Команда)

	ПерейтиПоНавигационнойСсылке(CRM_ОбщегоНазначенияСервер.ПолучитьСсылкуНаРазделСправки("СистемаВзаимодействия"));

КонецПроцедуры

&НаКлиенте
Процедура СписокОбъектовЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	фиксНастройки = НастройкиОтбораИдентификаторов();
	 
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ФиксированныеНастройки", фиксНастройки);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	
	ОткрытьФорму("Справочник.ИдентификаторыОбъектовМетаданных.ФормаВыбора", ПараметрыФормы, Элемент, ,
		 , , ,
		 РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция НастройкиОтбораИдентификаторов()
	
	СписокСправочников = Новый СписокЗначений;
	СписокСправочников.Добавить(Справочники.ИдентификаторыОбъектовМетаданных.НайтиПоРеквизиту("Имя",
		 "Справочники",
		 Справочники.ИдентификаторыОбъектовМетаданных.ПустаяСсылка()));
	СписокСправочников.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Метаданные.Справочники.Партнеры));
	СписокСправочников.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Метаданные.Справочники.КонтактныеЛицаПартнеров));
	СписокСправочников.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Метаданные.Справочники.ДоговорыКонтрагентов));
	Если НЕ CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
		СписокСправочников.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Справочник.СоглашенияСКлиентами"));
	КонецЕсли;
	
	фиксНастройки = Новый НастройкиКомпоновкиДанных;
	 
	ГруппаЭлементовОтбора = фиксНастройки.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаЭлементовОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	ГруппаЭлементовОтбора.Использование = Истина;
	ГруппаЭлементовОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	// Документы
	ГруппаОтбораДокументов = ГруппаЭлементовОтбора.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбораДокументов.Использование  = Истина;
	ГруппаОтбораДокументов.ТипГруппы  = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	// Все документы
	эОтбор = ГруппаОтбораДокументов.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	эОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
	эОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии;
	эОтбор.ПравоеЗначение = Справочники.ИдентификаторыОбъектовМетаданных.НайтиПоРеквизиту("Имя",
		 "Документы",
		 Справочники.ИдентификаторыОбъектовМетаданных.ПустаяСсылка());
	эОтбор.Использование = Истина;
	эОтбор.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	// Исключая документы
	СписокИсключаемыхДокументов = Новый СписокЗначений;
	СписокИсключаемыхДокументов.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Метаданные.Документы.CRM_СообщениеМессенджера));
	
	эОтбор = ГруппаОтбораДокументов.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	эОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
	эОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке;
	эОтбор.ПравоеЗначение = СписокИсключаемыхДокументов;
	эОтбор.Использование = Истина;
	эОтбор.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	// Справочники
	эОтбор = ГруппаЭлементовОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	эОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
	эОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	эОтбор.ПравоеЗначение = СписокСправочников;
	эОтбор.Использование = Истина;
	эОтбор.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	эОтбор = фиксНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	эОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПометкаУдаления");
	эОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	эОтбор.ПравоеЗначение = Ложь;
	эОтбор.Использование = Истина;
	эОтбор.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	эОтбор = фиксНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	эОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПометкаБудущегоУдаления");
	эОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	эОтбор.ПравоеЗначение = Ложь;
	эОтбор.Использование = Истина;
	эОтбор.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	Возврат фиксНастройки;
	
КонецФункции

&НаКлиенте
Процедура ДекорацияПодключениеОбсужденийОбработкаНавигационнойСсылки(Элемент,
	 НавигационнаяСсылкаФорматированнойСтроки,
	 СтандартнаяОбработка)
		
	СтандартнаяОбработка = Ложь;
	МодульОбсужденияСлужебныйКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ОбсужденияСлужебныйКлиент");
	Если НЕ МодульОбсужденияСлужебныйКлиент.Подключены() Тогда
		МодульОбсужденияСлужебныйКлиент.ПоказатьПодключение();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ОбсужденияПодключены" Тогда 
		МодульОбсужденияСлужебныйКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ОбсужденияСлужебныйКлиент");
		ОбсужденияДоступны = МодульОбсужденияСлужебныйКлиент.Подключены();
		Элементы.ГруппаОбсужденияДоступны.Видимость = ОбсужденияДоступны;
		Элементы.ГруппаПодключениеОбсуждений.Видимость = НЕ ОбсужденияДоступны;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
