
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ВариантПерехода = Параметры.ВариантПерехода;
	Если ВариантПерехода = "ПереходаНеБыло" Тогда
		Отказ = Истина;
		Возврат;
	ИначеЕсли ВариантПерехода = "ОблакоВОблако" Тогда
		Настройки = СервисПрогнозирования.ПолучитьАвторизационныеНастройкиСервиса();
		СохраненныйТокенПриложения = Настройки.ТокенПриложения;
		ТребуетсяПолныйСбросНастроек = Ложь;
	Иначе
		ТребуетсяПолныйСбросНастроек = Истина;
	КонецЕсли;
	
	СервисПрогнозирования.ЗаблокироватьСервисПрогнозирования(ТребуетсяПолныйСбросНастроек);
	
	// новые параметры
	НовоеРазделение = СервисПрогнозирования.ТекущиеПараметрыАвторизацииИИ();
	РегистрыСведений.ПараметрыАвторизацииИскусственногоИнтеллекта.Установить(
		Перечисления.СервисыИскусственногоИнтеллекта.СервисПрогнозирования,
		НовоеРазделение);
	
	Настройки = СервисПрогнозирования.ПолучитьАвторизационныеНастройкиСервиса();
	АвторизацияУспешна = ЗначениеЗаполнено(Настройки.ТокенПриложения);
	
	ОбновитьСвойстваЭлементовФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если АвторизацияУспешна Тогда
		Оповестить("СнятиеБлокировки",, ВладелецФормы);
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИдентификаторЗаданияПереподключитьсяВСервисе) Тогда
		ОтменитьВыполнениеЗадания(ИдентификаторЗаданияПереподключитьсяВСервисе);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПереподключитьсяВСервисе(Команда)
	
	ПереподключитьсяВСервисеНаСервере();
	Если Не ПустаяСтрока(ИдентификаторЗаданияПереподключитьсяВСервисе) Тогда
		ПодключитьОбработчикОжидания("Подключаемый_ПереподключитьсяВСервисе", 1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Закрыть();
	Если АвторизацияУспешна Тогда
		Оповестить("СнятиеБлокировки",, ВладелецФормы);
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьСвойстваЭлементовФормы()
	
	Если АвторизацияУспешна Тогда
		Элементы.СтраницыПодсказок.ТекущаяСтраница = Элементы.СтраницаПодключитьПрогнозирование;
		Элементы.ГруппаИнформации.Заголовок = НСтр("ru='Исходная база'");
		Элементы.ИнформацияИзменениеРежимаРаботы.Видимость = Ложь;
		Элементы.ПереподключитьсяВСервисе.Видимость        = Ложь;
		Элементы.КомандаОК.Видимость                       = Истина;
	Иначе
		Элементы.СтраницыПодсказок.ТекущаяСтраница = Элементы.СтраницаПодключеноУспешно;
		Элементы.ГруппаИнформации.Заголовок = НСтр("ru='Что произошло'");
		Элементы.ИнформацияИзменениеРежимаРаботы.Видимость = Истина;
		Элементы.ПереподключитьсяВСервисе.Видимость        = Истина;
		Элементы.КомандаОК.Видимость                       = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПереподключитьсяВСервисеНаСервере()
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	
	РезультатРасчета = Неопределено;
	Если ВариантПерехода = "ОблакоВОблако" Тогда
		ФункцияПереподключения = "СервисПрогнозирования.ПеререгистрироватьПриложениеВСервисеПоИТС";
			РезультатРасчета = ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения,
				ФункцияПереподключения,
				СохраненныйТокенПриложения);
	Иначе
		ФункцияПереподключения = "СервисПрогнозирования.ОтправитьЗаявкуВСервис";
			РезультатРасчета = ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, ФункцияПереподключения);
	КонецЕсли;
	
	Если РезультатРасчета <> Неопределено
		И РезультатРасчета.Статус = "Выполняется" Тогда
		ИдентификаторЗаданияПереподключитьсяВСервисе = РезультатРасчета.ИдентификаторЗадания;
		АдресХранилищаПереподключитьсяВСервисе       = РезультатРасчета.АдресРезультата;
	ИначеЕсли РезультатРасчета <> Неопределено
		И РезультатРасчета.Статус = "Выполнено" Тогда
		АдресХранилищаПереподключитьсяВСервисе       = РезультатРасчета.АдресРезультата;
		РезультатПереподключитьсяВСервисеНаСервере(Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПереподключитьсяВСервисе()
	
	РезультатПереподключитьсяВСервисеНаСервере();
	Если Не ПустаяСтрока(ИдентификаторЗаданияПереподключитьсяВСервисе) Тогда
		ПодключитьОбработчикОжидания("Подключаемый_ПереподключитьсяВСервисе", 1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РезультатПереподключитьсяВСервисеНаСервере(ВыполнениеПроверено = Ложь)
	
	Если ВыполнениеПроверено
		Или Не ПустаяСтрока(ИдентификаторЗаданияПереподключитьсяВСервисе)
			И ДлительныеОперации.ЗаданиеВыполнено(Новый УникальныйИдентификатор(ИдентификаторЗаданияПереподключитьсяВСервисе)) Тогда
		
		ИдентификаторЗаданияПереподключитьсяВСервисе = "";
		Ответ = ПолучитьИзВременногоХранилища(АдресХранилищаПереподключитьсяВСервисе);
		Если Не ПустаяСтрока(Ответ.ТекстОшибки) Тогда
			ВызватьИсключение Ответ.ТекстОшибки;
		КонецЕсли;
		
		АвторизацияУспешна = Истина;
		ОбновитьСвойстваЭлементовФормы();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОтменитьВыполнениеЗадания(ИдентификаторЗадания)
	
	Если ТипЗнч(ИдентификаторЗадания) = Тип("Строка") Тогда
		ДлительныеОперации.ОтменитьВыполнениеЗадания(Новый УникальныйИдентификатор(ИдентификаторЗадания));
	Иначе
		ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
