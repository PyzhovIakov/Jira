#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТипРасположения = Параметры.ТипРасположенияХостаВнешнихНавигационныхСсылок;
	Если Не ЗначениеЗаполнено(ТипРасположения) Тогда
		ТипРасположения = Перечисления.ТипыРасположенияИнформационнойБазы.НаВебСервере;
	КонецЕсли;
	
	Если ТипРасположения = Перечисления.ТипыРасположенияИнформационнойБазы.НаВебСервере Тогда
		АдресВебСервиса = Параметры.АдресХостаВнешнихНавигационныхСсылок;
		
	ИначеЕсли ТипРасположения = Перечисления.ТипыРасположенияИнформационнойБазы.НаСервере1СПредприятия Тогда
		ПоложениеРазделителя = СтрНайти(Параметры.АдресХостаВнешнихНавигационныхСсылок, "/");
		Если ПоложениеРазделителя = 0 Тогда
			ИмяИнформационнойБазы = Параметры.АдресХостаВнешнихНавигационныхСсылок;
		Иначе
			КластерСерверов = Лев(Параметры.АдресХостаВнешнихНавигационныхСсылок, ПоложениеРазделителя - 1);
			ИмяИнформационнойБазы = Сред(Параметры.АдресХостаВнешнихНавигационныхСсылок, ПоложениеРазделителя + 1);
		КонецЕсли;
		
	ИначеЕсли ТипРасположения = Перечисления.ТипыРасположенияИнформационнойБазы.НаКомпьютереВЛокальнойСети Тогда
		СетевойКаталог = Параметры.АдресХостаВнешнихНавигационныхСсылок;
		СетевойКаталог = СтрЗаменить(СетевойКаталог, "/", "\");
		СетевойКаталог = "\\" + СетевойКаталог;
		
	ИначеЕсли ТипРасположения = Перечисления.ТипыРасположенияИнформационнойБазы.НаДанномКомпьютере Тогда
		ЛокальныйКаталог = Параметры.АдресХостаВнешнихНавигационныхСсылок;
		ЛокальныйКаталог = СтрЗаменить(ЛокальныйКаталог, "/", "\");
		Диск = Лев(ЛокальныйКаталог, 1);
		Путь = Сред(ЛокальныйКаталог, 3);
		ЛокальныйКаталог = Диск + ":\" + Путь;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(АдресВебСервиса) Тогда
		Если ЗначениеЗаполнено(Параметры.АдресВебСервиса) Тогда
			АдресВебСервиса = Параметры.АдресВебСервиса;
		Иначе
			АдресВебСервиса = ИнтеграцияС1СДокументооборотБазоваяФункциональность.АдресВебСервиса1СДокументооборот(
				Истина);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	НачатьПолучениеКаталогаДокументов(Новый ОписаниеОповещения("ПолучениеКаталогаДокументовЗавершение", ЭтотОбъект));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура АдресВебСервисаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ЗначениеЗаполнено(АдресВебСервиса) Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияС1СДокументооборот3Клиент.ОткрытьОбъектДО(
		"e1cib/command/Обработка.ПанельАдминистрированияБесшовнойИнтеграции.Команда.НастройкиИнтеграции",
		АдресВебСервиса);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресВебСервисаПриИзменении(Элемент)
	
	ТипРасположения = ПредопределенноеЗначение("Перечисление.ТипыРасположенияИнформационнойБазы.НаВебСервере");
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяИнформационнойБазыПриИзменении(Элемент)
	
	ТипРасположения = ПредопределенноеЗначение("Перечисление.ТипыРасположенияИнформационнойБазы.НаСервере1СПредприятия");
	
КонецПроцедуры

&НаКлиенте
Процедура КластерСерверовПриИзменении(Элемент)
	
	ТипРасположения = ПредопределенноеЗначение("Перечисление.ТипыРасположенияИнформационнойБазы.НаСервере1СПредприятия");
	
КонецПроцедуры

&НаКлиенте
Процедура ЛокальныйКаталогНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДиалогВыборКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Если ПустаяСтрока(ЛокальныйКаталог) Тогда
		ДиалогВыборКаталога.Каталог = КаталогДокументов;
	Иначе
		ДиалогВыборКаталога.Каталог = ЛокальныйКаталог;
	КонецЕсли;
	
	ОписаниеОповещенияДиалогаВыбора = Новый ОписаниеОповещения(
		"ВыборКаталогаЗавершение",
		ЭтотОбъект,
		ПредопределенноеЗначение("Перечисление.ТипыРасположенияИнформационнойБазы.НаДанномКомпьютере"));
	ФайловаяСистемаКлиент.ПоказатьДиалогВыбора(ОписаниеОповещенияДиалогаВыбора, ДиалогВыборКаталога);
	
КонецПроцедуры

&НаКлиенте
Процедура ЛокальныйКаталогПриИзменении(Элемент)
	
	ТипРасположения = ПредопределенноеЗначение("Перечисление.ТипыРасположенияИнформационнойБазы.НаДанномКомпьютере");
	
КонецПроцедуры

&НаКлиенте
Процедура СетевойКаталогНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДиалогВыборКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Если ПустаяСтрока(СетевойКаталог) Тогда
		ДиалогВыборКаталога.Каталог = КаталогДокументов;
	Иначе
		ДиалогВыборКаталога.Каталог = СетевойКаталог;
	КонецЕсли;
	
	ОписаниеОповещенияДиалогаВыбора = Новый ОписаниеОповещения(
		"ВыборКаталогаЗавершение",
		ЭтотОбъект,
		ПредопределенноеЗначение("Перечисление.ТипыРасположенияИнформационнойБазы.НаКомпьютереВЛокальнойСети"));
	ФайловаяСистемаКлиент.ПоказатьДиалогВыбора(ОписаниеОповещенияДиалогаВыбора, ДиалогВыборКаталога);
	
КонецПроцедуры

&НаКлиенте
Процедура СетевойКаталогПриИзменении(Элемент)
	
	ТипРасположения = ПредопределенноеЗначение("Перечисление.ТипыРасположенияИнформационнойБазы.НаКомпьютереВЛокальнойСети");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	ОчиститьСообщения();
	
	Результат = Новый Структура("АдресХостаВнешнихНавигационныхСсылок");
	Результат.Вставить("ТипРасположенияХостаВнешнихНавигационныхСсылок", ТипРасположения);
	
	Отказ = Ложь;
	
	Если ТипРасположения = ПредопределенноеЗначение("Перечисление.ТипыРасположенияИнформационнойБазы.НаВебСервере") Тогда
		Если Не ЗначениеЗаполнено(АдресВебСервиса) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru = 'Требуется указать адрес информационной базы на веб-сервере'"),,
				"АдресВебСервиса",,
				Отказ);
		Иначе
			Результат.АдресХостаВнешнихНавигационныхСсылок = АдресВебСервиса;
		КонецЕсли;
		
	ИначеЕсли ТипРасположения =
			ПредопределенноеЗначение("Перечисление.ТипыРасположенияИнформационнойБазы.НаСервере1СПредприятия") Тогда
		Если Не ЗначениеЗаполнено(КластерСерверов) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru = 'Требуется указать кластер серверов, на котором расположена информационная база'"),,
				"КластерСерверов",,
				Отказ);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ИмяИнформационнойБазы) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru = 'Требуется указать имя информационной базы на сервере'"),,
				"ИмяИнформационнойБазы",,
				Отказ);
		КонецЕсли;
		Если Не Отказ Тогда
			Результат.АдресХостаВнешнихНавигационныхСсылок = КластерСерверов + "/" + ИмяИнформационнойБазы;
		КонецЕсли;
		
	ИначеЕсли ТипРасположения =
			ПредопределенноеЗначение("Перечисление.ТипыРасположенияИнформационнойБазы.НаКомпьютереВЛокальнойСети") Тогда
		Если Не ЭтоСетевойКаталог(СетевойКаталог) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru = 'Требуется указать сетевой каталог'"),,
				"СетевойКаталог",,
				Отказ);
		Иначе
			Результат.АдресХостаВнешнихНавигационныхСсылок = Сред(СетевойКаталог, 3);
			Результат.АдресХостаВнешнихНавигационныхСсылок =
				СтрЗаменить(Результат.АдресХостаВнешнихНавигационныхСсылок, "\", "/");
		КонецЕсли;
		
	ИначеЕсли ТипРасположения =
			ПредопределенноеЗначение("Перечисление.ТипыРасположенияИнформационнойБазы.НаДанномКомпьютере") Тогда
		Если Не ЭтоЛокальныйКаталог(ЛокальныйКаталог) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru = 'Требуется указать каталог на данном компьютере'"),,
				"ЛокальныйКаталог",,
				Отказ);
		Иначе
			Диск = Лев(ЛокальныйКаталог, 1);
			Путь = СтрЗаменить(Сред(ЛокальныйКаталог, 4), "\", "/");
			Результат.АдресХостаВнешнихНавигационныхСсылок = Диск + "/" + Путь;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не Отказ Тогда
		Закрыть(Результат);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыборКаталогаЗавершение(ВыбранныеКаталоги, НовыйТипРасположения) Экспорт
	
	Если ТипЗнч(ВыбранныеКаталоги) = Тип("Массив") И ВыбранныеКаталоги.Количество() > 0 Тогда
		Если НовыйТипРасположения = ПредопределенноеЗначение("Перечисление.ТипыРасположенияИнформационнойБазы.НаДанномКомпьютере") Тогда
			Если ЭтоЛокальныйКаталог(ВыбранныеКаталоги[0]) Тогда
				ЛокальныйКаталог = ВыбранныеКаталоги[0];
				ТипРасположения = НовыйТипРасположения;
			Иначе
				ПоказатьПредупреждение(, НСтр("ru = 'Требуется указать каталог на данном компьютере'"));
			КонецЕсли;
		ИначеЕсли НовыйТипРасположения = ПредопределенноеЗначение("Перечисление.ТипыРасположенияИнформационнойБазы.НаКомпьютереВЛокальнойСети") Тогда
			Если ЭтоСетевойКаталог(ВыбранныеКаталоги[0]) Тогда
				СетевойКаталог = ВыбранныеКаталоги[0];
				ТипРасположения = НовыйТипРасположения;
			Иначе
				ПоказатьПредупреждение(, НСтр("ru = 'Требуется указать сетевой каталог'"));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучениеКаталогаДокументовЗавершение(Результат, ПараметрыОповещения) Экспорт
	
	КаталогДокументов = Результат;
	Элементы.ЛокальныйКаталог.ПодсказкаВвода = КаталогДокументов + "InfoBase";
	
КонецПроцедуры

&НаКлиенте
Функция ЭтоЛокальныйКаталог(Каталог)
	
	Возврат (Сред(Каталог, 2, 2) = ":\");
	
КонецФункции

&НаКлиенте
Функция ЭтоСетевойКаталог(Каталог)
	
	Возврат (Лев(Каталог, 2) = "\\");
	
КонецФункции

#КонецОбласти