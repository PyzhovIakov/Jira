
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИспользоватьПодразделения = CRM_ОбщегоНазначенияПовтИсп.ИспользоватьПодразделения();
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.СтруктураФильтра);
	ТекущийПользовательСтарый = ТекущийПользователь;
	Если ТипЗнч(ТекущийПользователь) <> Тип("СправочникСсылка.Пользователи") Тогда
		ТекущийПользователь = Справочники.Пользователи.ПустаяСсылка();
	КонецЕсли;
	
	//ПараметрыВыбораПользователь = Новый Массив;
	//ПараметрыВыбораПользователь.Добавить(Новый ПараметрВыбора("Отбор.Ссылка",
		// ПараметрыСеанса.CRM_ДоступныеПользователи));
	//Элементы.ТекущийПользователь.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораПользователь);
	
	Если НЕ ПолучитьФункциональнуюОпцию("CRM_ИспользоватьТеги") Тогда
		Элементы.ГруппаТэги.Видимость = Ложь;
	Иначе
		Если ТипЗнч(ТекущийПользователь) = Тип("СправочникСсылка.Пользователи") Тогда
			ОтборПодразделениеДляТегов = ТекущийПользователь.Подразделение;
			СписокВышестоящихПодразделений.ЗагрузитьЗначения(CRM_МетодыМодулейМенеджеровСправочников.ПолучитьВсеПодразделенияРодители(ОтборПодразделениеДляТегов,
				 Истина));
			ОбновитьЗначенияОтбораТеговСервер();
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТекущаяРоль) Тогда
		ТекущаяРоль = НСтр("ru = '<Все роли>'; en = '<All roles>'");
	КонецЕсли;
	
	Элементы.ПоискПодразделение.Видимость = ИспользоватьПодразделения;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	CRM_ЦентрМониторингаКлиент.НачатьЗамерОперацииБизнесСтатистики(
		"CRM_Статистика.АРММоиПродажи.ДлительностьСценариев.ВремяУстановкиФильтра");
	
	ПоискИсточникПривлеченияПриИзменении("");
	ПоказатьТекущийВариантПериода();
	ИзменитьОтображениеПолейОтборов();
	ЗаполнитьСписокРолейПользователя();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ПослеСозданияТега" И (Источник = Элементы.Тег) Тогда
		Тег = Параметр;
		ДобавитьТэг();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	CRM_ЦентрМониторингаКлиент.ЗавершитьЗамерОперацииБизнесСтатистики(
		"CRM_Статистика.АРММоиПродажи.ДлительностьСценариев.ВремяУстановкиФильтра");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПоискИсточникПривлеченияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора",		Истина);
	ПараметрыФормы.Вставить("ТекущаяСтрока",	ПоискИсточникПривлечения);
	ОткрытьФорму("ПланВидовХарактеристик.КаналыРекламныхВоздействий.ФормаВыбора", ПараметрыФормы, Элемент, ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПоискИсточникПривлеченияПриИзменении(Элемент)
	ПоискЗначениеИсточникаПривлечения = Неопределено;
	Элементы.ПоискЗначениеИсточникаПривлечения.ПодсказкаВвода = Строка(CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(ПоискИсточникПривлечения,
		 "ТипЗначения"));
	Если ЗначениеЗаполнено(ПоискИсточникПривлечения)
		 И НЕ (ТипПВХ(ПоискИсточникПривлечения) = Тип("ПеречислениеСсылка.CRM_КаналыБезУказанияИсточника")) Тогда
		Элементы.ПоискЗначениеИсточникаПривлечения.Доступность		= Истина;
		Элементы.ПоискЗначениеИсточникаПривлечения.ТолькоПросмотр	= Ложь;
	Иначе
		Элементы.ПоискЗначениеИсточникаПривлечения.Доступность		= Ложь;
		Элементы.ПоискЗначениеИсточникаПривлечения.ТолькоПросмотр	= Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПоискЗначениеИсточникаПривлеченияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(ПоискИсточникПривлечения) Тогда
		Если ТипПВХ(ПоискИсточникПривлечения) = Тип("СправочникСсылка.МаркетинговыеМероприятия") Тогда
			СтандартнаяОбработка = Ложь;
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("РежимВыбора",		Истина);
			ПараметрыФормы.Вставить("ТекущаяСтрока",	ПоискЗначениеИсточникаПривлечения);
			ПараметрыФормы.Вставить("СкрытьПодменюВид",	Истина);
			ФормаВыбора = ПолучитьФорму("Справочник.МаркетинговыеМероприятия.ФормаВыбора", ПараметрыФормы, Элемент, ЭтотОбъект);
			ЭлементОтбора					= ФормаВыбора.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.НеРавно;
			ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("Завершено");
			ЭлементОтбора.ПравоеЗначение	= Истина;
			ЭлементОтбора.Использование		= Истина;
			ГруппаОтбора					= ФормаВыбора.Список.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
			ГруппаОтбора.ТипГруппы			= ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
			ЭлементОтбора					= ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.Равно;
			ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("ДатаОкончания");
			ЭлементОтбора.ПравоеЗначение	= Дата("00010101");
			ЭлементОтбора.Использование		= Истина;
			ЭлементОтбора					= ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
			ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("CRM_ДатаАктуальности");
			ЭлементОтбора.ПравоеЗначение	= НачалоДня(ОбщегоНазначенияКлиент.ДатаСеанса());
			ЭлементОтбора.Использование		= Истина;
			ФормаВыбора.Открыть();
		ИначеЕсли ТипПВХ(ПоискИсточникПривлечения) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
			СтандартнаяОбработка	= Ложь;
			ДополнительныеПараметры	= Новый Структура("Элемент", Элемент);
			ПараметрыФормы			= Новый Структура;
			Если ЗначениеЗаполнено(ПоискЗначениеИсточникаПривлечения)
				 И (ТипЗнч(ПоискЗначениеИсточникаПривлечения) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров")) Тогда
				ПараметрыФормы.Вставить("ТекущаяСтрока",
					 CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(ПоискЗначениеИсточникаПривлечения,
					 "Владелец"));
			КонецЕсли;	
			ОткрытьФорму("Справочник.КонтактныеЛицаПартнеров.ФормаВыбора", ПараметрыФормы, Элемент, ,
				 ВариантОткрытияОкна.ОтдельноеОкно);
		ИначеЕсли ТипПВХ(ПоискИсточникПривлечения) = Тип("СправочникСсылка.Партнеры") Тогда
			СтандартнаяОбработка	= Ложь;
			ДополнительныеПараметры	= Новый Структура("Элемент", Элемент);
			ПараметрыФормы			= Новый Структура;
			ОткрытьФорму("Справочник.Партнеры.ФормаВыбора", ПараметрыФормы, Элемент, , ВариантОткрытияОкна.ОтдельноеОкно);	
		ИначеЕсли ТипПВХ(ПоискИсточникПривлечения) = Тип("СправочникСсылка.Пользователи") Тогда
			СтандартнаяОбработка	= Ложь;
			ДополнительныеПараметры	= Новый Структура("Элемент", Элемент);
			ПараметрыФормы			= Новый Структура;
			ПараметрыФормы.Вставить("РежимВыбора", Истина);
			ОткрытьФорму("Справочник.Пользователи.Форма.CRM_ФормаСписка", ПараметрыФормы, Элемент, ,
				 ВариантОткрытияОкна.ОтдельноеОкно);	
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтборСозданыСегодняНажатие(Элемент)
	Если Элемент.Имя = "ОтборСозданыСегодня" Тогда
		ВариантПериода = "Сегодня";
	ИначеЕсли Элемент.Имя = "ОтборСозданыЗа3Дня" Тогда
		ВариантПериода = "3 дня";
	ИначеЕсли Элемент.Имя = "ОтборСозданыЗаНеделю" Тогда
		ВариантПериода = "Неделя";
	ИначеЕсли Элемент.Имя = "ОтборСозданыЗаМесяц" Тогда
		ВариантПериода = "Месяц";
	ИначеЕсли Элемент.Имя = "ОтборОчистить" Тогда
		ВариантПериода = "";	
	КонецЕсли;	
	ПоказатьТекущийВариантПериода();
КонецПроцедуры

&НаКлиенте
Процедура ТекущийПользовательПриИзменении(Элемент)
	ТекущийПользовательПриИзмененииНаСервере();
	Подключаемый_ТегОтборНажатие(Элементы.Тег_Очистить, Ложь);
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события "ПриИзменении" элемента формы "Тег".
//
Процедура ТегПриИзменении(Элемент)
	ДобавитьТэг();
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события "Создание" элемента формы "Тег".
//
Процедура ТегСоздание(Элемент, СтандартнаяОбработка)
	CRM_ТегиКлиент.ТегСоздание(Элемент, СтандартнаяОбработка, ОтборПодразделениеДляТегов);
	ДобавитьТэг();
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяРольОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекущаяРоль = НСтр("ru = '<Все роли>'; en = '<All roles>'");
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяРольНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Оповещение = Новый ОписаниеОповещения("ТекущаяРольЗавершениеВыбора", ЭтотОбъект);
	ОткрытьФорму("Справочник.РолиИсполнителей.ФормаВыбора", , ЭтотОбъект, , , , Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяРольЗавершениеВыбора(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяРоль = ВыбранноеЗначение;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяРольАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ТипЗнч(ТекущаяРоль) = Тип("Строка") Тогда
		ОписаниеТипа = Новый ОписаниеТипов("СправочникСсылка.РолиИсполнителей");
		ТекущаяРоль = ОписаниеТипа.ПривестиЗначение(ТекущаяРоль);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Применить(Команда)
	Закрыть(ПолучитьСтруктуруФильтра());
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	
	ОчиститьНаСервере();
	ИзменитьОтображениеПолейОтборов();
	Подключаемый_ТегОтборНажатие(Элементы.Тег_Очистить, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПериодОчистить(Команда)
	ВариантПериода = "";
	ПоказатьТекущийВариантПериода();
КонецПроцедуры

&НаКлиенте
Процедура ТегОтборОчистить(Команда)
	Подключаемый_ТегОтборНажатие(Элементы.Тег_Очистить, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПоле(Команда)
	
	СписокВыбора = Новый СписокЗначений;
	Если НЕ Элементы.ГруппаТекущаяРоль.Видимость Тогда
		СписокВыбора.Добавить("Роль", НСтр("ru = 'Роль     '; en = 'Role     '"));
	КонецЕсли;
	Если НЕ Элементы.ГруппаТекущийАвтор.Видимость Тогда
		СписокВыбора.Добавить("Автор", НСтр("ru = 'Автор    '; en = 'Author    '"));
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ДобавитьПолеЗавершение", ЭтотОбъект);
	ПоказатьВыборИзСписка(Оповещение, СписокВыбора, ТекущийЭлемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПолеЗавершение(Результат, ДополнитлеьныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Значение = "Роль" Тогда
		Элементы.ГруппаТекущаяРоль.Видимость = Истина;
		ОтборПоРолиУстановлен = Истина;
	ИначеЕсли Результат.Значение = "Автор" Тогда
		Элементы.ГруппаТекущийАвтор.Видимость = Истина;
	КонецЕсли;
	
	ИзменитьОтображениеКнопкиСоздания();
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьПоле(Команда)
	
	Если Команда.Имя = "УдалитьПолеТекущаяРоль" Тогда
		Элементы.ГруппаТекущаяРоль.Видимость = Ложь;
		ОтборПоРолиУстановлен = Ложь;
	ИначеЕсли Команда.Имя = "УдалитьПолеТекущийАвтор" Тогда
		Элементы.ГруппаТекущийАвтор.Видимость = Ложь;
	КонецЕсли;
	
	ИзменитьОтображениеКнопкиСоздания();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ТипПВХ(ПВХСсылка)
	Возврат ТипЗнч(ПВХСсылка.ТипЗначения.ПривестиЗначение());
КонецФункции // ТипПВХ()

&НаСервере
Процедура ОбновитьЗначенияОтбораТеговСервер()
	
	//
	МассивУдаляемыхЭлементов = Новый Массив;
	Для Каждого Элемент Из Элементы.ГруппаТэги.ПодчиненныеЭлементы Цикл
		МассивУдаляемыхЭлементов.Добавить(Элемент);
	КонецЦикла;
	
	Для Каждого Элемент Из МассивУдаляемыхЭлементов Цикл
		Элементы.Удалить(Элемент);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	CRM_Теги.Ссылка КАК Тег,
		|	CRM_Теги.ЦветКрасный КАК ЦветКрасный,
		|	CRM_Теги.ЦветЗеленый КАК ЦветЗеленый,
		|	CRM_Теги.ЦветСиний КАК ЦветСиний,
		|	CRM_Теги.ЦветПредставление КАК ЦветПредставление
		|ИЗ
		|	Справочник.CRM_Теги КАК CRM_Теги
		|ГДЕ
		|	CRM_Теги.Ссылка В(&МассивТегов)";
	Запрос.УстановитьПараметр("МассивТегов", ОтборТеги.ВыгрузитьЗначения());
	
	ЦветаТегов = Запрос.Выполнить().Выгрузить();
	
	НомерЭлемента = 0;
	НомерСтрокиЭлементов = 0;
	ТекущаяДлинаСтроки = 0;
	ЭлементовВГруппе = 0;
	Для Каждого ЭлементОтбораТег Из ОтборТеги Цикл
		ЭлементОтбораТег.Пометка = Ложь;
		Если СтрДлина(ЭлементОтбораТег.Представление) > 15 Тогда
			ПредставлениеТега = СокрЛП(Лев(ЭлементОтбораТег.Представление, 15)) + "...";
			ТекущаяДлинаСтроки = ТекущаяДлинаСтроки + 15;
		Иначе
			ПредставлениеТега = СокрЛП(ЭлементОтбораТег.Представление);
			ТекущаяДлинаСтроки = ТекущаяДлинаСтроки + СтрДлина(ПредставлениеТега);
		КонецЕсли;
		
		Если НомерСтрокиЭлементов = 0 Или ТекущаяДлинаСтроки > 30 Тогда
			
			ТекущаяДлинаСтроки = СтрДлина(ПредставлениеТега);
			НомерСтрокиЭлементов = НомерСтрокиЭлементов + 1;
			
			ГруппаТегов = Элементы.Добавить("СтрокаТегов" + НомерСтрокиЭлементов, Тип("ГруппаФормы"), Элементы.ГруппаТэги);
			ГруппаТегов.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			ГруппаТегов.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
			ГруппаТегов.ОтображатьЗаголовок = Ложь;
			ГруппаТегов.Отображение = ОтображениеОбычнойГруппы.Нет;
			ГруппаТегов.РастягиватьПоВертикали = Ложь;
			ГруппаТегов.Высота = 1;
			ЭлементовВГруппе = 0;
		КонецЕсли;
		
		ЦветТега = ЦветаТегов.Найти(ЭлементОтбораТег.Значение, "Тег");
		ЦветФонаТега = Неопределено;
		ЦветТекстаТега = ЦветаСтиля.CRM_ОсновнойГолубой;
		Если ЦветТега <> Неопределено И ЗначениеЗаполнено(ЦветТега.ЦветПредставление) Тогда
			// BSLLS:StyleElementConstructors-off
			ЦветФонаТега = Новый Цвет(ЦветТега.ЦветКрасный, ЦветТега.ЦветЗеленый, ЦветТега.ЦветСиний);
			// BSLLS:StyleElementConstructors-on
			ЦветТекстаТега = CRM_ОбщегоНазначенияКлиентСервер.ПолучитьКонтрастныйЦвет(ЦветФонаТега);
		КонецЕсли;
		
		ТегФорматированнаяСтрока = Новый ФорматированнаяСтрока(ПредставлениеТега, , ЦветТекстаТега, ЦветФонаТега);
		КнопкаУдалитьТегФоматированнаяСтрока = Новый ФорматированнаяСтрока(БиблиотекаКартинок.CRM_УдалитьСиняя, , , , "Тег_"
			+ ЭлементОтбораТег.ПолучитьИдентификатор());
		
		ЭлементыЗаголовка = Новый Массив;
		ЭлементыЗаголовка.Добавить(ТегФорматированнаяСтрока);
		ЭлементыЗаголовка.Добавить(КнопкаУдалитьТегФоматированнаяСтрока);
		
		ЭлементТег = Элементы.Добавить("Тег_" + ЭлементОтбораТег.ПолучитьИдентификатор(), Тип("ДекорацияФормы"), ГруппаТегов);
		ЭлементТег.Вид = ВидДекорацииФормы.Надпись;
		ЭлементТег.Заголовок = Новый ФорматированнаяСтрока(ЭлементыЗаголовка);
		ЭлементТег.Гиперссылка = Истина;
		ЭлементТег.Подсказка = ЭлементОтбораТег.Представление;
		ЭлементТег.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Лево;
		ЭлементТег.АвтоМаксимальнаяШирина = Ложь;
		ЭлементТег.Ширина = Окр(СтрДлина(ПредставлениеТега) * 0.8 + 4);
		ЭлементТег.РастягиватьПоГоризонтали = Ложь;
		ЭлементТег.УстановитьДействие("Нажатие", "Подключаемый_ТегОтборНажатие");
		ЭлементовВГруппе = ЭлементовВГруппе + 1;
		НомерЭлемента = НомерЭлемента + 1;
		
	КонецЦикла;
	//
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ТегОтборНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;   
	Если Элемент.Имя = "Тег_Очистить" Тогда
		ОтборТеги.Очистить();
	Иначе	
		ВыбранныйТег = ОтборТеги.НайтиПоИдентификатору(Число(СтрЗаменить(Элемент.Имя, "Тег_", "")));
		ОтборТеги.Удалить(ВыбранныйТег);
	КонецЕсли;
	ОбновитьЗначенияОтбораТеговСервер();	
КонецПроцедуры

&НаСервере
Процедура ПоказатьТекущийВариантПериода()
	Если ВариантПериода = "Сегодня" Тогда
		Элементы.ОтборСозданыСегодня.ЦветФона = ЦветаСтиля.CRM_ОсновнойГолубой;
		Элементы.ОтборСозданыСегодня.ЦветТекста = Новый Цвет(255, 255, 255);
		
		Элементы.ОтборСозданыЗа3Дня.ЦветФона = Новый Цвет(255, 255, 255);
		Элементы.ОтборСозданыЗа3Дня.ЦветТекста = ЦветаСтиля.CRM_ОсновнойГолубой;
		
		Элементы.ОтборСозданыЗаНеделю.ЦветФона = Новый Цвет(255, 255, 255);
		Элементы.ОтборСозданыЗаНеделю.ЦветТекста = ЦветаСтиля.CRM_ОсновнойГолубой;
		
		Элементы.ОтборСозданыЗаМесяц.ЦветФона = Новый Цвет(255, 255, 255);
		Элементы.ОтборСозданыЗаМесяц.ЦветТекста = ЦветаСтиля.CRM_ОсновнойГолубой;
		
		Элементы.ОтборОчистить.ЦветФона = Новый Цвет(255, 255, 255);
		Элементы.ОтборОчистить.ЦветТекста = ЦветаСтиля.CRM_ОсновнойГолубой;
	ИначеЕсли ВариантПериода = "3 дня" Тогда
		Элементы.ОтборСозданыЗа3Дня.ЦветФона = ЦветаСтиля.CRM_ОсновнойГолубой;
		Элементы.ОтборСозданыЗа3Дня.ЦветТекста = Новый Цвет(255, 255, 255);
		
		Элементы.ОтборСозданыСегодня.ЦветФона = Новый Цвет(255, 255, 255);
		Элементы.ОтборСозданыСегодня.ЦветТекста = ЦветаСтиля.CRM_ОсновнойГолубой;
		
		Элементы.ОтборСозданыЗаНеделю.ЦветФона = Новый Цвет(255, 255, 255);
		Элементы.ОтборСозданыЗаНеделю.ЦветТекста = ЦветаСтиля.CRM_ОсновнойГолубой;
		
		Элементы.ОтборСозданыЗаМесяц.ЦветФона = Новый Цвет(255, 255, 255);
		Элементы.ОтборСозданыЗаМесяц.ЦветТекста = ЦветаСтиля.CRM_ОсновнойГолубой;
		
		Элементы.ОтборОчистить.ЦветФона = Новый Цвет(255, 255, 255);
		Элементы.ОтборОчистить.ЦветТекста = ЦветаСтиля.CRM_ОсновнойГолубой;
	ИначеЕсли ВариантПериода = "Неделя" Тогда
		Элементы.ОтборСозданыЗаНеделю.ЦветФона = ЦветаСтиля.CRM_ОсновнойГолубой;
		Элементы.ОтборСозданыЗаНеделю.ЦветТекста = Новый Цвет(255, 255, 255);
		
		Элементы.ОтборСозданыЗа3Дня.ЦветФона = Новый Цвет(255, 255, 255);
		Элементы.ОтборСозданыЗа3Дня.ЦветТекста = ЦветаСтиля.CRM_ОсновнойГолубой;
		
		Элементы.ОтборСозданыСегодня.ЦветФона = Новый Цвет(255, 255, 255);
		Элементы.ОтборСозданыСегодня.ЦветТекста = ЦветаСтиля.CRM_ОсновнойГолубой;
		
		Элементы.ОтборСозданыЗаМесяц.ЦветФона = Новый Цвет(255, 255, 255);
		Элементы.ОтборСозданыЗаМесяц.ЦветТекста = ЦветаСтиля.CRM_ОсновнойГолубой;
		
		Элементы.ОтборОчистить.ЦветФона = Новый Цвет(255, 255, 255);
		Элементы.ОтборОчистить.ЦветТекста = ЦветаСтиля.CRM_ОсновнойГолубой;
	ИначеЕсли ВариантПериода = "Месяц" Тогда
		Элементы.ОтборСозданыЗаМесяц.ЦветФона = ЦветаСтиля.CRM_ОсновнойГолубой;
		Элементы.ОтборСозданыЗаМесяц.ЦветТекста = Новый Цвет(255, 255, 255);
		
		Элементы.ОтборСозданыЗа3Дня.ЦветФона = Новый Цвет(255, 255, 255);
		Элементы.ОтборСозданыЗа3Дня.ЦветТекста = ЦветаСтиля.CRM_ОсновнойГолубой;
		
		Элементы.ОтборСозданыЗаНеделю.ЦветФона = Новый Цвет(255, 255, 255);
		Элементы.ОтборСозданыЗаНеделю.ЦветТекста = ЦветаСтиля.CRM_ОсновнойГолубой;
		
		Элементы.ОтборСозданыСегодня.ЦветФона = Новый Цвет(255, 255, 255);
		Элементы.ОтборСозданыСегодня.ЦветТекста = ЦветаСтиля.CRM_ОсновнойГолубой;
		
		Элементы.ОтборОчистить.ЦветФона = Новый Цвет(255, 255, 255);
		Элементы.ОтборОчистить.ЦветТекста = ЦветаСтиля.CRM_ОсновнойГолубой;
	Иначе
		Элементы.ОтборСозданыЗаМесяц.ЦветФона = Новый Цвет(255, 255, 255);
		Элементы.ОтборСозданыЗаМесяц.ЦветТекста = ЦветаСтиля.CRM_ОсновнойГолубой;
		
		Элементы.ОтборСозданыЗа3Дня.ЦветФона = Новый Цвет(255, 255, 255);
		Элементы.ОтборСозданыЗа3Дня.ЦветТекста = ЦветаСтиля.CRM_ОсновнойГолубой;
		
		Элементы.ОтборСозданыЗаНеделю.ЦветФона = Новый Цвет(255, 255, 255);
		Элементы.ОтборСозданыЗаНеделю.ЦветТекста = ЦветаСтиля.CRM_ОсновнойГолубой;
		
		Элементы.ОтборСозданыСегодня.ЦветФона = Новый Цвет(255, 255, 255);
		Элементы.ОтборСозданыСегодня.ЦветТекста = ЦветаСтиля.CRM_ОсновнойГолубой;	
		
		Элементы.ОтборОчистить.ЦветФона = ЦветаСтиля.CRM_ОсновнойГолубой;
		Элементы.ОтборОчистить.ЦветТекста = Новый Цвет(255, 255, 255);
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруФильтра()
	
	СтруктураФильтра = Новый Структура;
	СтруктураФильтра.Вставить("СкрытьПропущенныеТелефонныеЗвонки", СкрытьПропущенныеТелефонныеЗвонки);
	СтруктураФильтра.Вставить("СкрытьОтвеченныеТелефонныеЗвонки", СкрытьОтвеченныеТелефонныеЗвонки);
	СтруктураФильтра.Вставить("СкрытьЗаявки", СкрытьЗаявки);
	СтруктураФильтра.Вставить("СкрытьСообщения", СкрытьСообщения);
	СтруктураФильтра.Вставить("СкрытьЭлектронныеПисьма", СкрытьЭлектронныеПисьма);
	СтруктураФильтра.Вставить("СкрытьПовторныеОбращения", СкрытьПовторныеОбращения);
	СтруктураФильтра.Вставить("СкрытьКолонкуОбращения", СкрытьКолонкуОбращения);
	
	СтруктураФильтра.Вставить("ОтборПоРолиУстановлен", ОтборПоРолиУстановлен);
	
	СтруктураФильтра.Вставить("ТекущийПользователь", ТекущийПользователь);
	СтруктураФильтра.Вставить("ТекущаяРоль", ?(ТипЗнч(ТекущаяРоль) = Тип("СправочникСсылка.РолиИсполнителей")
		 И ОтборПоРолиУстановлен,
		 ТекущаяРоль, Справочники.РолиИсполнителей.ПустаяСсылка()));
	СтруктураФильтра.Вставить("ТекущийАвтор", ?(Элементы.ГруппаТекущийАвтор.Видимость, ТекущийАвтор,
		 Справочники.Пользователи.ПустаяСсылка()));
	СтруктураФильтра.Вставить("ПоискПодразделение", ПоискПодразделение);
	
	СтруктураФильтра.Вставить("ВариантПериода", ВариантПериода);
	
	СтруктураФильтра.Вставить("ПоискКлиент", ПоискКлиент);
	СтруктураФильтра.Вставить("ПоискТипУслуги", ПоискТипУслуги);
	СтруктураФильтра.Вставить("ПоискПроект", ПоискПроект);
	СтруктураФильтра.Вставить("ПоискИсточникПривлечения", ПоискИсточникПривлечения);
	СтруктураФильтра.Вставить("ПоискЗначениеИсточникаПривлечения", ПоискЗначениеИсточникаПривлечения);
	СтруктураФильтра.Вставить("ОтборТеги", ОтборТеги);
	
	Возврат СтруктураФильтра;
	
КонецФункции

&НаСервере
Процедура ОчиститьНаСервере()
	ПоискКлиент = Справочники.Партнеры.ПустаяСсылка();
	ПоискПодразделение = Справочники.СтруктураПредприятия.ПустаяСсылка();
	ПоискТипУслуги = Справочники.CRM_ТипУслуги.ПустаяСсылка();
	ПоискПроект = Справочники.Проекты.ПустаяСсылка();
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	ПоискИсточникПривлечения = ПланыВидовХарактеристик.КаналыРекламныхВоздействий.ПустаяСсылка();
	ПоискЗначениеИсточникаПривлечения = Неопределено;
	ТекущаяРоль = НСтр("ru = '<Все роли>'; en = '<All roles>'");
	ОтборПоРолиУстановлен = Истина;
	ТекущийАвтор = Справочники.Пользователи.ПустаяСсылка();
	
	Элементы.ПоискЗначениеИсточникаПривлечения.ПодсказкаВвода = Строка(CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(ПоискИсточникПривлечения,
		 "ТипЗначения"));
	Если ЗначениеЗаполнено(ПоискИсточникПривлечения)
		 И НЕ (ТипПВХ(ПоискИсточникПривлечения) = Тип("ПеречислениеСсылка.CRM_КаналыБезУказанияИсточника")) Тогда
		Элементы.ПоискЗначениеИсточникаПривлечения.Доступность		= Истина;
		Элементы.ПоискЗначениеИсточникаПривлечения.ТолькоПросмотр	= Ложь;
	Иначе
		Элементы.ПоискЗначениеИсточникаПривлечения.Доступность		= Ложь;
		Элементы.ПоискЗначениеИсточникаПривлечения.ТолькоПросмотр	= Истина;
	КонецЕсли;
	ВариантПериода = "";
	ПоказатьТекущийВариантПериода();
КонецПроцедуры

&НаСервере
Процедура ТекущийПользовательПриИзмененииНаСервере()
	Если ТекущийПользовательСтарый <> ТекущийПользователь Тогда
		ОтборТеги.Очистить();
		Если ТипЗнч(ТекущийПользователь) = Тип("СправочникСсылка.Пользователи") Тогда
			Подразделение = ТекущийПользователь.Подразделение;
		КонецЕсли;
		СписокВышестоящихПодразделений.ЗагрузитьЗначения(CRM_МетодыМодулейМенеджеровСправочников.ПолучитьВсеПодразделенияРодители(Подразделение,
			 Истина));
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьТэг()
	
	Если НЕ ЗначениеЗаполнено(Тег) Тогда
		Возврат;
	КонецЕсли;
	
	Если ОтборТеги.НайтиПоЗначению(Тег) = Неопределено Тогда
		ОтборТеги.Добавить(Тег, Тег.Наименование, Истина);
		ОбновитьЗначенияОтбораТеговСервер();
		
	КонецЕсли;
	
	Тег = ПредопределенноеЗначение("Справочник.CRM_Теги.ПустаяСсылка");
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьОтображениеПолейОтборов()
	
	Элементы.ГруппаТекущаяРоль.Видимость = ЗначениеЗаполнено(ТекущаяРоль) И ОтборПоРолиУстановлен;
	Элементы.ГруппаТекущийАвтор.Видимость = ЗначениеЗаполнено(ТекущийАвтор);
	ИзменитьОтображениеКнопкиСоздания();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьОтображениеКнопкиСоздания()
	
	Элементы.ДобавитьПолеТекущийПользователь.Видимость = НЕ Элементы.ГруппаТекущаяРоль.Видимость
		 И НЕ Элементы.ГруппаТекущийАвтор.Видимость;
	Элементы.ДобавитьПолеТекущаяРоль.Видимость         = Элементы.ГруппаТекущаяРоль.Видимость
		 И НЕ Элементы.ГруппаТекущийАвтор.Видимость;
	Элементы.ДобавитьПолеТекущийАвтор.Видимость        = НЕ Элементы.ГруппаТекущаяРоль.Видимость
		 И Элементы.ГруппаТекущийАвтор.Видимость;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокРолейПользователя()
	
	Элементы.ТекущаяРоль.СписокВыбора.Очистить();
	Элементы.ТекущаяРоль.СписокВыбора.Добавить(НСтр("ru = '<Все роли>'; en = '<All roles>'"));
	
КонецПроцедуры

#КонецОбласти
