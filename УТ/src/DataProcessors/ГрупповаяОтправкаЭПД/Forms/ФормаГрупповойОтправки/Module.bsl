
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("Организация", Организация);
	Параметры.Свойство("ТекущийТитул", ТекущийТитул);
	Параметры.Свойство("СписокИнтервал", СписокИнтервал);
	
	// Титулы для групповой отправки
	Элементы.ТекущийТитул.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул2"), НСтр("ru='ЭПЛ - Медосмотр'"));
	Элементы.ТекущийТитул.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул3"), НСтр("ru='ЭПЛ - Контроль транспорта'"));
	Элементы.ТекущийТитул.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул4"), НСтр("ru='ЭПЛ - Показания (выезд)'"));
	Элементы.ТекущийТитул.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул5"), НСтр("ru='ЭПЛ - Показания (заезд)'"));
	Элементы.ТекущийТитул.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул6"), НСтр("ru='ЭПЛ - Медосмотр (после)'"));
	
	Элементы.ТекущийТитул.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул2"), НСтр("ru='ЭТрН - Погрузка'"));
	Элементы.ТекущийТитул.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул4"), НСтр("ru='ЭТрН - Разгрузка'"));
	
	Если Элементы.ТекущийТитул.СписокВыбора.НайтиПоЗначению(ТекущийТитул) = Неопределено Тогда
		ТекущийТитул = Неопределено;
	КонецЕсли;	
	
	ОбменСГИСЭПД.ПриСозданииНаСервереПодчиненнойФормы(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
	МассивИменКолонок = Новый Массив;
	Для Каждого РеквизитКолонки Из ПолучитьРеквизиты("ДоступныеДокументы") Цикл
		МассивИменКолонок.Добавить(РеквизитКолонки.Имя);
	КонецЦикла;
	НачальныйСписокКолонок = СтрСоединить(МассивИменКолонок, ",");
	
	ВремяНачала = '00010101000000';
	ВремяОкончания = '00010101235959';
	
	УстановитьПредставлениеПериода();
	
	УстановитьТекущийШагПомощника();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ГрупповоеЗаполнениеПриИзменении(Элемент)
	
	ГруппаРеквизиты = Элементы.Найти("ГруппаРеквизиты" + ЭтотОбъект.ПрефиксТитула);
	
	Для Каждого Элемент Из ГруппаРеквизиты.ПодчиненныеЭлементы Цикл
		Если Элемент.Видимость = Истина
		И Элемент.Имя <> "ГруппаГрупповоеЗаполнение" + ЭтотОбъект.ПрефиксТитула Тогда
			Элемент.Доступность = ГрупповоеЗаполнение;		
		КонецЕсли;
	КонецЦикла;
																		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ИзменитьОформление();
	
	Если ЗначениеЗаполнено(ТекущийТитул) Тогда
		ТекущийЭлемент = Элементы.ФормаДалее;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ДокументыЭПД" И ЗначениеЗаполнено(Параметр) Тогда
		Строки = ДоступныеДокументы.НайтиСтроки(Новый Структура("Ссылка", Параметр));
		Для Каждого Строка Из Строки Цикл
			Если СтрНачинаетсяС(Строка.СтатусОтправки, "Ошибки заполнения") Тогда
				ОписанияОшибок = ОбменСГИСЭПДВызовСервера.ПроверитьЗаполнениеДокументаЭПД(Строка.Ссылка, 
																							ТекущийТитул, 
																							ИмяОбъекта);
																							
				Если ОписанияОшибок.Количество() > 0 Тогда
					Строка.СтатусОтправки = "Ошибки заполнения (" + ОписанияОшибок.Количество() + ")";
				Иначе
					Строка.СтатусОтправки = "Подготовлен к отправке";
					КоличествоОшибокЗаполнения = Макс(0, КоличествоОшибокЗаполнения - 1);
				КонецЕсли;	
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы


#Область Навигация

&НаКлиенте
Процедура Шаг1ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработатьИзменениеШага("Шаг1", НавигационнаяСсылкаФорматированнойСтроки);

КонецПроцедуры

&НаКлиенте
Процедура Шаг2ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработатьИзменениеШага("Шаг2", НавигационнаяСсылкаФорматированнойСтроки);

КонецПроцедуры

&НаКлиенте
Процедура Шаг3ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработатьИзменениеШага("Шаг3", НавигационнаяСсылкаФорматированнойСтроки);

КонецПроцедуры

&НаКлиенте
Процедура Шаг4ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ОбработатьИзменениеШага("Шаг4", НавигационнаяСсылкаФорматированнойСтроки);

КонецПроцедуры

#КонецОбласти


&НаКлиенте
Процедура ТитулМедосмотрВариантМедработникПриИзменении(Элемент)
	
	ИзменитьОформление();
																		
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрШтатныйМедработникПриИзменении(Элемент)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеПриИзменении(ЭтотОбъект, 
					ХранимыеДанныеТитулМедосмотрШтатныйМедработник, 
					Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрШтатныйМедработникАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеАвтоПодбор(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрШтатныйМедработникОткрытие(Элемент, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеОткрытие(ЭтотОбъект, ХранимыеДанныеТитулМедосмотрШтатныйМедработник, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрШтатныйМедработникНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеНачалоВыбора(ЭтотОбъект, Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрСтороннийМедработникПриИзменении(Элемент)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеПриИзменении(ЭтотОбъект, 
					ХранимыеДанныеТитулМедосмотрСтороннийМедработник, 
					Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрСтороннийМедработникАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеАвтоПодбор(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрСтороннийМедработникОткрытие(Элемент, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеОткрытие(ЭтотОбъект, ХранимыеДанныеТитулМедосмотрСтороннийМедработник, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрСтороннийМедработникНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеНачалоВыбора(ЭтотОбъект, Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулВыпускОтветственныйЗаСостояниеТСПриИзменении(Элемент)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеПриИзменении(ЭтотОбъект, 
					ХранимыеДанныеТитулВыпускОтветственныйЗаСостояниеТС, 
					Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулВыпускОтветственныйЗаСостояниеТСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеАвтоПодбор(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулВыпускОтветственныйЗаСостояниеТСОткрытие(Элемент, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеОткрытие(ЭтотОбъект, ХранимыеДанныеТитулВыпускОтветственныйЗаСостояниеТС, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулВыпускОтветственныйЗаСостояниеТСНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеНачалоВыбора(ЭтотОбъект, Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулВыездУполномоченныйНаПроставлениеДанныхПриИзменении(Элемент)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеПриИзменении(ЭтотОбъект, 
					ХранимыеДанныеТитулВыездУполномоченныйНаПроставлениеДанных, 
					Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулВыездУполномоченныйНаПроставлениеДанныхАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеАвтоПодбор(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулВыездУполномоченныйНаПроставлениеДанныхОткрытие(Элемент, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеОткрытие(ЭтотОбъект, ХранимыеДанныеТитулВыездУполномоченныйНаПроставлениеДанных, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулВыездУполномоченныйНаПроставлениеДанныхНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеНачалоВыбора(ЭтотОбъект, Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулЗаездУполномоченныйНаПроставлениеДанныхПриИзменении(Элемент)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеПриИзменении(ЭтотОбъект, 
					ХранимыеДанныеТитулЗаездУполномоченныйНаПроставлениеДанных, 
					Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулЗаездУполномоченныйНаПроставлениеДанныхАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеАвтоПодбор(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулЗаездУполномоченныйНаПроставлениеДанныхОткрытие(Элемент, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеОткрытие(ЭтотОбъект, ХранимыеДанныеТитулЗаездУполномоченныйНаПроставлениеДанных, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулЗаездУполномоченныйНаПроставлениеДанныхНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеНачалоВыбора(ЭтотОбъект, Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрПослеШтатныйМедработникПриИзменении(Элемент)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеПриИзменении(ЭтотОбъект, 
					ХранимыеДанныеТитулМедосмотрПослеШтатныйМедработник, 
					Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрПослеШтатныйМедработникАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеАвтоПодбор(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрПослеШтатныйМедработникОткрытие(Элемент, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеОткрытие(ЭтотОбъект, ХранимыеДанныеТитулМедосмотрПослеШтатныйМедработник, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрПослеШтатныйМедработникНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеНачалоВыбора(ЭтотОбъект, Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрПослеСтороннийМедработникПриИзменении(Элемент)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеПриИзменении(ЭтотОбъект, 
					ХранимыеДанныеТитулМедосмотрПослеСтороннийМедработник, 
					Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрПослеСтороннийМедработникАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеАвтоПодбор(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрПослеСтороннийМедработникОткрытие(Элемент, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеОткрытие(ЭтотОбъект, ХранимыеДанныеТитулМедосмотрПослеСтороннийМедработник, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеТитулМедосмотрПослеСтороннийМедработникНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеНачалоВыбора(ЭтотОбъект, Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущийТитулПриИзменении(Элемент)
	
	Элементы.ФормаДалее.Доступность = ЗначениеЗаполнено(ТекущийТитул);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулВыездПризнакНачалаРейсаПриИзменении(Элемент)
	
	ИзменитьОформление();

КонецПроцедуры

&НаКлиенте
Процедура ТитулЗаездПризнакОкончанияРейсаПриИзменении(Элемент)
	
	ИзменитьОформление();

КонецПроцедуры

&НаКлиенте
Процедура ТитулМедосмотрВариантМедработникПослеПриИзменении(Элемент)
	
	ИзменитьОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантПогрузкиПриИзменении(Элемент)
	
	ИзменитьОформление(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура НавигацияКартинкаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработатьИзменениеШага(НавигационнаяСсылкаФорматированнойСтроки, НавигационнаяСсылкаФорматированнойСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантВыгрузкиПриИзменении(Элемент)

	ИзменитьОформление(Элемент.Имя);	

КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаПриемкаЗамечанияДатаВремяПрибытияПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаПриемкаЗамечанияДатаВремяУбытияПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаПриемкаЗамечанияДатаВремяПостановкиНаПогрузкуПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаПриемкаЗамечанияВОтношенииФактическогоСостояниеГрузаПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаПриемкаЗамечанияВОтношенииМассыГрузаПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаПриемкаЗамечанияВОтношенииКоличестваГрузовыхМестПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаПриемкаЗамечанияВОтношенииПроведенияПогрузочныхРаботПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаВыдачаДатаВремяПрибытияПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаВыдачаДатаВремяУбытияПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаВыдачаДатаИВремяПостановкиНаВыгрузкуПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаВыдачаЗамечанияВОтношенииФактическогоСостоянияГрузаПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТитулПеревозчикаВыдачаЗамечанияВОтношенииПроведенияРаботПоВыгрузкеПриИзменении(Элемент)
	
	ПриИзмененииДанныхНаФорме(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура МедосмотрУОУПриИзменении(Элемент)
	
	Для Каждого Элемент Из Элементы.ГруппаРеквизитыТитулМедосмотр.ПодчиненныеЭлементы Цикл
		Если Элемент <> Элементы.ГруппаМедосмотрУОУ
		И Элемент <> Элементы.ГруппаРеквизитаТитулМедосмотрОтметкаОРезультатеПроведения
		И Не ЭтоЭлементУправленияЗаполнением(Элемент) Тогда
			Элемент.Видимость = ОтправитьУОУ = 0;
		КонецЕсли;
	КонецЦикла;
	
	Элементы.ГруппаМедосмотрКомментарийУОУ.Видимость = ОтправитьУОУ = 1;

КонецПроцедуры

&НаКлиенте
Процедура МедосмотрПослеУОУПриИзменении(Элемент)
	
	Для Каждого Элемент Из Элементы.ГруппаРеквизитыТитулМедосмотрПосле.ПодчиненныеЭлементы Цикл
		Если Элемент <> Элементы.ГруппаМедосмотрПослеУОУ
		И Элемент <> Элементы.ГруппаРеквизитаТитулМедосмотрПослеОтметкаОРезультатеПроведения
		И Не ЭтоЭлементУправленияЗаполнением(Элемент) Тогда
			Элемент.Видимость = ОтправитьУОУ = 0;
		КонецЕсли;
	КонецЦикла;
	Элементы.ГруппаМедосмотрПослеКомментарийУОУ.Видимость = ОтправитьУОУ = 1;
	
КонецПроцедуры

&НаКлиенте
Процедура ВремяНачалаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиентСервер.ОкруглениеДатыПриРегулировании(ВремяНачала, Направление, СтандартнаяОбработка, 60 * 60);
	
КонецПроцедуры

&НаКлиенте
Процедура ВремяНачалоПриИзменении(Элемент)
	
	ИзменениеПериодаЗапроса(СписокИнтервал.ДатаНачала, СписокИнтервал.ДатаОкончанияы);

КонецПроцедуры

&НаКлиенте
Процедура ВремяОкончанияПриИзменении(Элемент)
	
	ИзменениеПериодаЗапроса(СписокИнтервал.ДатаНачала, СписокИнтервал.ДатаОкончания);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыДоступныеДокументы

&НаКлиенте
Процедура ДоступныеДокументыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные = Элемент.ТекущиеДанные; 
	Если ЗначениеЗаполнено(ТекущиеДанные.ИдентификаторСтроки) = Ложь Или Копирование = Истина Тогда
		ТекущиеДанные.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступныеДокументыПриАктивизацииСтроки(Элемент)
	
	Если Элементы.ДоступныеДокументы.ТекущаяСтрока <> Неопределено Тогда
		ОтображаемыеВерсииТитулов.Вставить(ЭтотОбъект.ПрефиксТитула, Элементы.ДоступныеДокументы.ТекущаяСтрока + 1);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступныеДокументыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ДоступныеДокументыПредставлениеЗамечаний" Тогда
		СтандартнаяОбработка = Ложь;	
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Заголовок", "Замечания");
		ПараметрыФормы.Вставить("ЗапретитьИзменение", НавигацияПараметрФормы = "СписокДокументов");
		СтруктураРеквизитовГруппы = Новый Структура;
		СтрокаДокумента = ДоступныеДокументы.НайтиПоИдентификатору(ВыбраннаяСтрока);
		Для Каждого КиЗ Из ОписаниеРеквизитовТекущегоТитула Цикл
			Если СтрНачинаетсяС(СтрЗаменить(КиЗ.Ключ, ЭтотОбъект.ПрефиксТитула, ""), "Замечания")
			И КиЗ.Значение.Тип.Типы().Найти(Тип("Строка")) <> Неопределено Тогда
				ОписаниеРеквизита = НовыйОписаниеРеквизита();
				ЗаполнитьЗначенияСвойств(ОписаниеРеквизита, КиЗ.Значение);
				ОписаниеРеквизита.Вставить("Значение", СтрокаДокумента[КиЗ.Ключ]);
				СтруктураРеквизитовГруппы.Вставить(КиЗ.Ключ, ОписаниеРеквизита);	
			КонецЕсли;
		КонецЦикла;
		ПараметрыФормы.Вставить("СтруктураРеквизитов", СтруктураРеквизитовГруппы);
		ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПредставлениеГруппыРеквизитов_Закрытие", ЭтотОбъект, ВыбраннаяСтрока);
		ОткрытьФорму("Обработка.ГрупповаяОтправкаЭПД.Форма.ПредставлениеГруппыРеквизитов",
			ПараметрыФормы, ЭтотОбъект, УникальныйИдентификатор, , , 
			ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ИначеЕсли ПоляПодчиненныхФорм.НайтиПоЗначению(Поле.Имя) <> Неопределено Тогда 
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ИдентификаторСтроки", ВыбраннаяСтрока);
		ДополнительныеПараметры.Вставить("ИмяПоля", Поле.Имя);
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ДоступныеДокументыВыбор_Завершение", ЭтотОбъект, ДополнительныеПараметры);
		
		ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, 
			СтрЗаменить(Поле.Имя, "ДоступныеДокументы", ""), 
			Элемент.ТекущиеДанные, 
			НавигацияПараметрФормы <> "СписокДокументов",
			,
			ОповещениеОЗавершении);
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступныеДокументыПередНачаломИзменения(Элемент, Отказ)
	
	Если Элементы.ДоступныеДокументы.ТекущийЭлемент <> Элементы.ДоступныеДокументыПометка
		И Элементы.ДоступныеДокументы.ТекущийЭлемент <> Элементы.ДоступныеДокументыПометкаПриОтправке
		И Не (НавигацияПараметрФормы = "Отправка" 
			И Элементы.ДоступныеДокументы.ТекущийЭлемент.Родитель = Элементы.ГруппаЗаполнение
			Или Элементы.ДоступныеДокументы.ТекущийЭлемент = Элементы.ДоступныеДокументыКомментарийУОУ) Тогда
		Отказ = Истина;
		ТекущаяСтрокаТаблицы = ДоступныеДокументы.НайтиПоИдентификатору(Элементы.ДоступныеДокументы.ТекущаяСтрока);
		Если ТекущаяСтрокаТаблицы <> Неопределено И ЗначениеЗаполнено(ТекущаяСтрокаТаблицы.Ссылка) Тогда
			Если Элементы.ДоступныеДокументы.ТекущийЭлемент = Элементы.ДоступныеДокументыСтатусОтправки Тогда
				ПараметрыОткрытия = Новый Структура;
				ПараметрыОткрытия.Вставить("Ключ", ТекущаяСтрокаТаблицы.Ссылка);
				Если СтрНачинаетсяС(ТекущаяСтрокаТаблицы.СтатусОтправки, "Ошибки заполнения") Тогда
					ПараметрыОткрытия.Вставить("ПоказатьОшибкиЗаполнения", Истина);
				КонецЕсли;
				ОткрытьФорму(ИмяОбъекта + ".Форма.ОсновнаяФорма", ПараметрыОткрытия);
			Иначе
				ПоказатьЗначение(Неопределено, ТекущаяСтрокаТаблицы.Ссылка);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступныеДокументыПометкаПриИзменении(Элемент)
	
	КоличествоВыбрано = КоличествоВыбрано + ?(Элементы.ДоступныеДокументы.ТекущиеДанные.Пометка, 1, -1);
	
	ОбновитьНадписьКоличествоВыбрано();		

КонецПроцедуры

&НаКлиенте
Процедура ДоступныеДокументыПометкаПриОтправкеПриИзменении(Элемент)
	
	КоличествоВыбраноДляОтправки = КоличествоВыбраноДляОтправки + ?(Элементы.ДоступныеДокументы.ТекущиеДанные.ПометкаПриОтправке, 1, -1);
	
	ОбновитьНадписьКоличествоВыбрано();	
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьТитулПеревозчикаПриемкаОтметкиПеревозчикаПриПриемеГруза(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТитулПеревозчикаВыдачаОтметкиПриВыдачеГруза(Команда)
	
	ОбменСГИСЭПДКлиент.ВывестиФормуВводаДанных(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	Если НавигацияПараметрФормы = "СписокДокументов" Тогда
		ИмяКолонки = "Пометка";
		ИмяСчетчика = "КоличествоВыбрано";
	Иначе
		ИмяКолонки = "ПометкаПриОтправке";
		ИмяСчетчика = "КоличествоВыбраноДляОтправки";
	КонецЕсли;
	
	Для Каждого Строка Из ДоступныеДокументы Цикл
		Если Строка[ИмяКолонки] = Ложь И Элементы.ДоступныеДокументы.ПроверитьСтроку(Строка.ПолучитьИдентификатор()) Тогда
			Строка[ИмяКолонки] = Истина;
			ЭтотОбъект[ИмяСчетчика] = ЭтотОбъект[ИмяСчетчика] + 1;
		КонецЕсли;
	КонецЦикла;
	
	ОбновитьНадписьКоличествоВыбрано();

КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	Если НавигацияПараметрФормы = "СписокДокументов" Тогда
		ИмяКолонки = "Пометка";
		ИмяСчетчика = "КоличествоВыбрано";
	Иначе
		ИмяКолонки = "ПометкаПриОтправке";
		ИмяСчетчика = "КоличествоВыбраноДляОтправки";
	КонецЕсли;
	
	Для Каждого Строка Из ДоступныеДокументы Цикл
		Если Строка[ИмяКолонки] = Истина И Элементы.ДоступныеДокументы.ПроверитьСтроку(Строка.ПолучитьИдентификатор()) Тогда
			Строка[ИмяКолонки] = Ложь;
			ЭтотОбъект[ИмяСчетчика] = ЭтотОбъект[ИмяСчетчика] - 1;
		КонецЕсли;
	КонецЦикла;
	
	ОбновитьНадписьКоличествоВыбрано();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьПринудительно(Команда)
	
	ДополнительныеПараметры = Новый Структура;

	ОбъектыУчета = Новый Массив;
	ИдентификаторыСтрок = Новый Массив;
	Для Каждого ИдентификаторСтроки Из Элементы.ДоступныеДокументы.ВыделенныеСтроки Цикл
		Строка = ДоступныеДокументы.НайтиПоИдентификатору(ИдентификаторСтроки);
		ОбъектыУчета.Добавить(Строка.Ссылка);
		ИдентификаторыСтрок.Добавить(ИдентификаторСтроки);
	КонецЦикла;
	ДополнительныеПараметры.Вставить("ОбъектыУчета", ОбъектыУчета);
	
	ДополнительныеПараметрыПослеВыполнения = Новый Структура;
	ДополнительныеПараметрыПослеВыполнения.Вставить("ИдентификаторыСтрок", ИдентификаторыСтрок);
	
	ДополнительныеПараметры.Вставить("ОповещениеУспешногоЗавершения", Новый ОписаниеОповещения("ПослеВыполненияДействийПоЭДО", ЭтотОбъект, ДополнительныеПараметрыПослеВыполнения));
	
	НаборДействий = Новый Соответствие;	
	ЭлектронныеДокументыЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
		"Перечисление.ДействияПоЭДО.ЗакрытьПринудительно"));
	
	ДополнительныеПараметры.Вставить("НаборДействий", НаборДействий);	
	ДополнительныеПараметры.Вставить("ОсновноеДействие", ПредопределенноеЗначение(
			"Перечисление.ДействияПоЭДО.ЗакрытьПринудительно"));
					
	ДополнительныеПараметрыВводаСтроки = ОбщегоНазначенияБЭДКлиент.ПараметрыВводаСтроки();
	ДополнительныеПараметрыВводаСтроки.ЗаголовокФормы = НСтр("ru = 'Укажите причину закрытия документооборота'");
	ДополнительныеПараметрыВводаСтроки.НазваниеКнопкиПоУмолчанию = НСтр("ru = 'Закрыть электронный документ'");
	ДополнительныеПараметрыВводаСтроки.Многострочность = Истина;
	ДополнительныеПараметрыВводаСтроки.Обязательность = Истина;
	ДополнительныеПараметрыВводаСтроки.КомментарийОбязательностиВвода =
		НСтр("ru = 'Для закрытия документооборота по выбранным ЭД необходимо указать причину закрытия.'");
		
	Обработчик = Новый ОписаниеОповещения("ВыполнитьОтменуФормированияДокументовПослеВводаСтроки", ЭтотОбъект, ДополнительныеПараметры);
		
	ОбщегоНазначенияБЭДКлиент.ПоказатьВводСтрокиБЭД(Обработчик, ДополнительныеПараметрыВводаСтроки);

КонецПроцедуры

&НаКлиенте
Процедура УстановитьИнтервалГиперссылка(Команда)
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ДатаНачалаБыло", СписокИнтервал.ДатаНачала);
	ДополнительныеПараметры.Вставить("ДатаОкончанияБыло", СписокИнтервал.ДатаОкончания);
	
	Оповещение = Новый ОписаниеОповещения("УстановитьИнтервалЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ОбменСГИСЭПДКлиентПереопределяемый.РедактироватьПериод(СписокИнтервал,, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДействиеДалее(Команда)
	
	Если НавигацияПараметрФормы = "ВыборТитула" Тогда
		НавигацияПараметрФормы = "СписокДокументов";
	ИначеЕсли НавигацияПараметрФормы = "СписокДокументов" Тогда
		НавигацияПараметрФормы = "ЗаполнениеДанных";
	ИначеЕсли НавигацияПараметрФормы = "ЗаполнениеДанных" Тогда
		НавигацияПараметрФормы = "Отправка";
	ИначеЕсли НавигацияПараметрФормы = "Отправка" Тогда
		ПроверкаБезОтправки = Ложь;
		ЗаполнитьИОтправить();
		Возврат;
	КонецЕсли; 
	
	Если НавигацияПараметрФормы = "СписокДокументов" Тогда
		ПараметрыТитула = ОбменСГИСЭПДКлиентСервер.ПрефиксТитулаПоЭлементуРегламентаЭДО(ТекущийТитул);
		ЭтотОбъект.ПрефиксТитула = ПараметрыТитула.ВПрограмме;		
		ИмяОбъекта = ОбменСГИСЭПДКлиентСервер.ИмяОбъектаПоТитулу(ТекущийТитул);	
		ИменаРеквизитовДокумента = ПолучитьИменаРеквизитовДокумента();
		
		СтруктураРеквизитов = Новый ФиксированнаяСтруктура();
		ОтображаемыеВерсииТитулов = Новый Структура;
		ОтображаемыеВерсииТитулов.Вставить(ЭтотОбъект.ПрефиксТитула, 0);	
		УстановитьТекущийШагПомощника();
	ИначеЕсли НавигацияПараметрФормы = "ЗаполнениеДанных" 
		И ЗначениеЗаполнено(ЭтотОбъект.ПрефиксТитула) Тогда
		ОтображаемыеВерсииТитулов.Вставить(ЭтотОбъект.ПрефиксТитула, 0);		
		ЗаполнитьЗначенияПоУмолчанию();
		
		КоличествоПредзаполненных = 0;
		Для Каждого Строка Из ДоступныеДокументы Цикл
			Если Элементы.ДоступныеДокументы.ПроверитьСтроку(Строка.ПолучитьИдентификатор())
			И Строка.Пометка И Строка.РеквизитыЗаполнены Тогда
				КоличествоПредзаполненных = КоличествоПредзаполненных + 1;	
			КонецЕсли;
		КонецЦикла;
		
		ПоказатьФлагиВариантовЗаполнения();	
		
		УстановитьТекущийШагПомощника();
	ИначеЕсли НавигацияПараметрФормы = "Отправка" Тогда
		ЗаполнитьДанныеПоСтрокам();	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьДокументы(Команда)
	
	ПроверкаБезОтправки = Истина;
	ЗаполнитьИОтправить();
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПриИзмененииДанныхНаФорме(ИмяЭлемента)
	
	ОтображаемыеВерсииТитулов.Вставить(ЭтотОбъект.ПрефиксТитула, 0);
	
	ЗначениеРеквизита = ЭтотОбъект[ИмяЭлемента];
	
	ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, ИмяЭлемента, ЗначениеРеквизита, , , Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеГруппыРеквизитов_Закрытие(Результат, ВыбраннаяСтрока) Экспорт
	
	Если Результат <> Неопределено Тогда
		ПредставлениеГруппы = "";
		СтрокаДокумента = ДоступныеДокументы.НайтиПоИдентификатору(ВыбраннаяСтрока);
		Для Каждого КиЗ Из Результат Цикл
			СтрокаДокумента[КиЗ.Ключ] = КиЗ.Значение;	
			ПредставлениеГруппы = ПредставлениеГруппы + ?(ПредставлениеГруппы = "", "", " ") + КиЗ.Значение;
		КонецЦикла;
		СтрокаДокумента["ПредставлениеЗамечаний"] = ПредставлениеГруппы;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступныеДокументыВыбор_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	ВерсииТитула = Неопределено;
	СтруктураРеквизитов.Свойство(ЭтотОбъект.ПрефиксТитула, ВерсииТитула);
	
	Если ВерсииТитула <> Неопределено 
	И ДополнительныеПараметры.ИдентификаторСтроки + 1 <= ВерсииТитула.ВГраница() 
	И ВерсииТитула[ДополнительныеПараметры.ИдентификаторСтроки + 1] <> Неопределено Тогда
		ИмяГруппы = СтрЗаменить(ДополнительныеПараметры.ИмяПоля, "ДоступныеДокументы", "");
		ИмяГруппы = СтрЗаменить(ИмяГруппы, "Заполнить", "");
		ЗаполненоКоличество = 0;
		Для Каждого КиЗ Из ВерсииТитула[ДополнительныеПараметры.ИдентификаторСтроки + 1] Цикл
			Если СтрНачинаетсяС(КиЗ.Ключ, ИмяГруппы)
			И СтрЗаканчиваетсяНа(КиЗ.Ключ, "ИдентификаторСтроки") = Ложь
			И СтрЗаканчиваетсяНа(КиЗ.Ключ, "ИдентификаторСтрокиРодителя") = Ложь
			И ЗначениеЗаполнено(КиЗ.Значение) Тогда
				ЧастиСтроки = ОбменСГИСЭПДКлиентСервер.РазделитьСтрокуСоСложнымРазделителем(КиЗ.Ключ, "__");
				Если ЧастиСтроки.Количество() = 3 Тогда
					ЗаполненоКоличество = Макс(ЗаполненоКоличество, Число(ЧастиСтроки[1]));
				Иначе
					ЗаполненоКоличество = 1;	
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		СтрокаТаблицы = ДоступныеДокументы.НайтиПоИдентификатору(ДополнительныеПараметры.ИдентификаторСтроки);
		СтрокаТаблицы["Заполнено" + ИмяГруппы] = ЗаполненоКоличество;
		СтрокаТаблицы["Заполнить" + ИмяГруппы] = ПросклонятьПоЧислуНаСервере(ЗаполненоКоличество, "запись");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьОформление(ИмяЭлемента = Неопределено)

	Если НавигацияПараметрФормы = "ВыборТитула" Тогда
		Возврат;
	КонецЕсли;
	
	// Страница Медосмотр
	Если ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул2") Тогда
		Элементы.ГруппаРеквизитаХранимыеДанныеТитулМедосмотрШтатныйМедработник.Видимость =
																			ВариантМедработник = 0;
		Элементы.ГруппаРеквизитаХранимыеДанныеТитулМедосмотрСтороннийМедработник.Видимость =
																			ВариантМедработник = 1;
																		
	// Страница Выезд
	ИначеЕсли ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул4") Тогда
		Элементы.ГруппаРеквизитаТитулВыездДатаИВремяВыезда.Видимость = ТитулВыездПризнакНачалаРейса = "1";
		Элементы.ГруппаРеквизитаТитулВыездПоказанияОдометраПриВыезде.Видимость = ТитулВыездПризнакНачалаРейса = "1";
		Элементы.ГруппаРеквизитаТитулВыездДатаИВремяПриема.Видимость = ТитулВыездПризнакНачалаРейса = "2";
		Элементы.ГруппаРеквизитаТитулВыездПоказанияОдометраПриПриеме.Видимость = ТитулВыездПризнакНачалаРейса = "2";
	
	// Страница Заезд
	ИначеЕсли ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул5") Тогда
		Элементы.ГруппаРеквизитаТитулЗаездДатаИВремяЗаезда.Видимость = ТитулЗаездПризнакОкончанияРейса = "1";
		Элементы.ГруппаРеквизитаТитулЗаездПоказанияОдометраПриЗаезде.Видимость = ТитулЗаездПризнакОкончанияРейса = "1";
		Элементы.ГруппаРеквизитаТитулЗаездДатаИВремяСдачи.Видимость = ТитулЗаездПризнакОкончанияРейса = "2";
		Элементы.ГруппаРеквизитаТитулЗаездПоказанияОдометраПриСдаче.Видимость = ТитулЗаездПризнакОкончанияРейса = "2";
		
	// Страница Медосмотр (после)
	ИначеЕсли ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул6") Тогда
		Элементы.ГруппаРеквизитаХранимыеДанныеТитулМедосмотрПослеШтатныйМедработник.Видимость =
																		ВариантМедработникПосле = 0;
		Элементы.ГруппаРеквизитаХранимыеДанныеТитулМедосмотрПослеСтороннийМедработник.Видимость =
																		ВариантМедработникПосле = 1;
																	
	// Страница "Погрузка"
	ИначеЕсли ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул2") Тогда
		Если ЗначениеЗаполнено(ТитулПеревозчикаПриемкаЗамечанияДатаВремяПрибытия)
			Или ЗначениеЗаполнено(ТитулПеревозчикаПриемкаЗамечанияДатаВремяУбытия)
			Или ЗначениеЗаполнено(ТитулПеревозчикаПриемкаЗамечанияДатаВремяПостановкиНаПогрузку)
			Или ЗначениеЗаполнено(ТитулПеревозчикаПриемкаЗамечанияВОтношенииФактическогоСостояниеГруза)
			Или ЗначениеЗаполнено(ТитулПеревозчикаПриемкаЗамечанияВОтношенииМассыГруза)
			Или ЗначениеЗаполнено(ТитулПеревозчикаПриемкаЗамечанияВОтношенииКоличестваГрузовыхМест)
			Или ЗначениеЗаполнено(ТитулПеревозчикаПриемкаЗамечанияВОтношенииПроведенияПогрузочныхРабот)
			Или ОбменСГИСЭПДКлиентСервер.ПолучитьКоличествоСтрокТаблицыИзСтруктурыФормы(ЭтотОбъект, "ТитулПеревозчикаПриемкаОтметкиПеревозчикаПриПриемеГруза") > 0 Тогда
			ВариантПогрузки = 1;	
		ИначеЕсли ИмяЭлемента <> "ВариантПогрузки" Тогда
			ВариантПогрузки = 0;	
		КонецЕсли;
		Для Каждого ТекущийЭлементГруппы Из Элементы.ГруппаРеквизитыТитулПеревозчикаПриемка.ПодчиненныеЭлементы Цикл
			Если ТекущийЭлементГруппы.Имя <> "ГруппаВариантПогрузки"
			И Не ЭтоЭлементУправленияЗаполнением(ТекущийЭлементГруппы) Тогда
				ТекущийЭлементГруппы.Видимость = ВариантПогрузки > 0;	
			КонецЕсли;
		КонецЦикла;
		
	// Страница "Разгрузка"
	ИначеЕсли ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул4") Тогда
		Если ЗначениеЗаполнено(ТитулПеревозчикаВыдачаДатаВремяПрибытия)
			Или ЗначениеЗаполнено(ТитулПеревозчикаВыдачаДатаВремяУбытия)
			Или ЗначениеЗаполнено(ТитулПеревозчикаВыдачаДатаИВремяПостановкиНаВыгрузку)
			Или ЗначениеЗаполнено(ТитулПеревозчикаВыдачаЗамечанияВОтношенииФактическогоСостоянияГруза)
			Или ЗначениеЗаполнено(ТитулПеревозчикаВыдачаЗамечанияВОтношенииПроведенияРаботПоВыгрузке)
			Или ОбменСГИСЭПДКлиентСервер.ПолучитьКоличествоСтрокТаблицыИзСтруктурыФормы(ЭтотОбъект, "ТитулПеревозчикаВыдачаОтметкиПриВыдачеГруза") > 0 Тогда
			ВариантВыгрузки = 1;
		ИначеЕсли ИмяЭлемента <> "ВариантВыгрузки" Тогда
			ВариантВыгрузки = 0;	
		КонецЕсли;
		Для Каждого ТекущийЭлементГруппы Из Элементы.ГруппаРеквизитыТитулПеревозчикаВыдача.ПодчиненныеЭлементы Цикл
			Если ТекущийЭлементГруппы.Имя <> "ГруппаВариантВыгрузки"
			И Не ЭтоЭлементУправленияЗаполнением(ТекущийЭлементГруппы) Тогда
				ТекущийЭлементГруппы.Видимость = ВариантВыгрузки > 0;	
			КонецЕсли;
		КонецЦикла;
			
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗначенияПоУмолчанию()
	
	Если ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул2") Тогда
		ТитулМедосмотрОтметкаОРезультатеПроведения = "Прошел предсменный медицинский осмотр, к исполнению трудовых обязанностей допущен";
		ТитулМедосмотрДатаИВремяПроведения = ОбщегоНазначенияКлиент.ДатаСеанса();	
	ИначеЕсли ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул3") Тогда
		ТитулВыпускДатаИВремяПредрейсовогоКонтроля = ОбщегоНазначенияКлиент.ДатаСеанса();
		ТитулВыпускДатаИВремяВыпускаНаЛинию = ОбщегоНазначенияКлиент.ДатаСеанса();
	ИначеЕсли ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул4") Тогда
		ТитулВыездПризнакНачалаРейса = "1";
		ТитулВыездДатаИВремяВыезда = ОбщегоНазначенияКлиент.ДатаСеанса();
	ИначеЕсли ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул5") Тогда
		ТитулЗаездПризнакОкончанияРейса = "1";
		ТитулЗаездДатаИВремяЗаезда = ОбщегоНазначенияКлиент.ДатаСеанса();
	ИначеЕсли ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул6") Тогда	
		ТитулМедосмотрПослеОтметкаОРезультатеПроведения = "Прошел послерейсовый медицинский осмотр";
		ТитулМедосмотрПослеДатаИВремяПроведения = ОбщегоНазначенияКлиент.ДатаСеанса();
		
	ИначеЕсли ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул2") Тогда
		ВариантПогрузки = 0;
	ИначеЕсли ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул4") Тогда
		ВариантВыгрузки = 0;
	КонецЕсли;
	
	ИзменитьОформление();
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСпецифическоеДляТитулаОформление()
	
	ПрефиксТаблицы = "ДоступныеДокументы";

	// Медосмотр
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
    ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(ПрефиксТаблицы + "ХранимыеДанныеТитулМедосмотрШтатныйМедработник");
    
    ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
    ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Отображать", Ложь);

    ЭлементУсловия  = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементУсловия.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПрефиксТаблицы + ".ВариантМедработник");
    ЭлементУсловия.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    ЭлементУсловия.ПравоеЗначение = 1;

	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
    ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(ПрефиксТаблицы + "ХранимыеДанныеТитулМедосмотрСтороннийМедработник");
    
    ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

    ЭлементУсловия  = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементУсловия.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПрефиксТаблицы + ".ВариантМедработник");
    ЭлементУсловия.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    ЭлементУсловия.ПравоеЗначение = 0; 
    
    // Выезд
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
    ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(ПрефиксТаблицы + "ТитулВыездДатаИВремяПриема");
    ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
    ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(ПрефиксТаблицы + "ТитулВыездПоказанияОдометраПриПриеме");
    
    ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

    ЭлементУсловия  = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементУсловия.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПрефиксТаблицы + ".ТитулВыездПризнакНачалаРейса");
    ЭлементУсловия.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    ЭлементУсловия.ПравоеЗначение = "1";

	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
    ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(ПрефиксТаблицы + "ТитулВыездДатаИВремяВыезда");
    ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
    ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(ПрефиксТаблицы + "ТитулВыездПоказанияОдометраПриВыезде");
    
    ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

    ЭлементУсловия  = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементУсловия.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПрефиксТаблицы + ".ТитулВыездПризнакНачалаРейса");
    ЭлементУсловия.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    ЭлементУсловия.ПравоеЗначение = "2";   
    
    // Заезд
    ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
    ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(ПрефиксТаблицы + "ТитулЗаездДатаИВремяСдачи");
    ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
    ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(ПрефиксТаблицы + "ТитулЗаездПоказанияОдометраПриСдаче");
    
    ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

    ЭлементУсловия  = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементУсловия.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПрефиксТаблицы + ".ТитулЗаездПризнакОкончанияРейса");
    ЭлементУсловия.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    ЭлементУсловия.ПравоеЗначение = "1";

	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
    ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(ПрефиксТаблицы + "ТитулЗаездДатаИВремяЗаезда");
    ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
    ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(ПрефиксТаблицы + "ТитулЗаездПоказанияОдометраПриЗаезде");
    
    ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

    ЭлементУсловия  = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементУсловия.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПрефиксТаблицы + ".ТитулЗаездПризнакОкончанияРейса");
    ЭлементУсловия.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    ЭлементУсловия.ПравоеЗначение = "2";
    
	// Медосмотр (после)
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
    ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(ПрефиксТаблицы + "ХранимыеДанныеТитулМедосмотрПослеШтатныйМедработник");
    
    ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

    ЭлементУсловия  = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементУсловия.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПрефиксТаблицы + ".ВариантМедработникПосле");
    ЭлементУсловия.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    ЭлементУсловия.ПравоеЗначение = 1;

	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
    ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(ПрефиксТаблицы + "ХранимыеДанныеТитулМедосмотрПослеСтороннийМедработник");
    
    ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

    ЭлементУсловия  = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементУсловия.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПрефиксТаблицы + ".ВариантМедработникПосле");
    ЭлементУсловия.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    ЭлементУсловия.ПравоеЗначение = 0;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНадписьКоличествоВыбрано()
	
	Если НавигацияПараметрФормы = "СписокДокументов" Тогда
		ИмяСчетчика = "КоличествоВыбрано";
	Иначе
		ИмяСчетчика = "КоличествоВыбраноДляОтправки";
	КонецЕсли;
	
	Элементы.ФормаДалее.Доступность = ЭтотОбъект[ИмяСчетчика] > 0;
	
	НадписьКоличествоВыбрано = "Выбрано " + ЭтотОбъект[ИмяСчетчика] + " из " + ДоступныеДокументы.Количество();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОтменуФормированияДокументовПослеВводаСтроки(Комментарий, ДополнительныеПараметры) Экспорт
	
	Если Комментарий = Неопределено Тогда
		Возврат; 
	КонецЕсли;
	
	ИнтерфейсДокументовЭДОВызовСервера.ОтменитьФормированиеДокументовПоОбъектамУчета(ДополнительныеПараметры.ОбъектыУчета, Комментарий);	
	
	Результат = ИнтерфейсДокументовЭДОКлиентСервер.НовыйИтогВыполненияДействийПоЭДО();
	Результат.ОбработаноПоДействиям.Вставить(ПредопределенноеЗначение(
		"Перечисление.ДействияПоЭДО.ЗакрытьПринудительно"), ДополнительныеПараметры.ОбъектыУчета.Количество());
	
	ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеУспешногоЗавершения, Результат);
	
	Оповестить(ИнтерфейсДокументовЭДОКлиент.ИмяСобытияОбновленияТекущихДелЭДО());
			
КонецПроцедуры

&НаКлиенте
Процедура СобратьДанные(КонтейнерОтображаемойВерсии)
	
	Если КонтейнерОтображаемойВерсии.НомерВерсии = 0 Тогда
		КонтейнерРеквизитов = ЭтотОбъект;
	Иначе
		КонтейнерРеквизитов = ДоступныеДокументы.НайтиПоИдентификатору(КонтейнерОтображаемойВерсии.НомерВерсии - 1);
	КонецЕсли;
	
	Для Каждого КиЗ Из ОписаниеРеквизитовТекущегоТитула Цикл
		Если СтрНачинаетсяС(КиЗ.Ключ, ЭтотОбъект.ПрефиксТитула)
		Или СтрНачинаетсяС(КиЗ.Ключ, "ХранимыеДанные" + ЭтотОбъект.ПрефиксТитула)
		Или СтрНачинаетсяС(КиЗ.Ключ, "Ссылка" + ЭтотОбъект.ПрефиксТитула) 
		Или СтрНачинаетсяС(КиЗ.Ключ, "Вариант") Тогда
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, 
				КиЗ.Ключ, 
				КонтейнерРеквизитов[КиЗ.Ключ], 
				Истина, 
				КонтейнерОтображаемойВерсии, 
				Ложь);
		КонецЕсли;
	КонецЦикла;
	
	Если ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул2") Тогда
		ВариантМедработник = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, "ВариантМедработник", 0, КонтейнерОтображаемойВерсии);
		Если ВариантМедработник = 0 Тогда
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, 
				"ХранимыеДанныеТитулМедосмотрСтороннийМедработник", 
				Неопределено, 
				Истина, 
				КонтейнерОтображаемойВерсии, 
				Ложь);
			ОбменСГИСЭПДКлиентСервер.УдалитьРеквизитыПоГруппеДанных(ЭтотОбъект, "ТитулМедосмотрСтороннийМедработник", КонтейнерОтображаемойВерсии, Ложь);
		Иначе
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, 
				"ХранимыеДанныеТитулМедосмотрШтатныйМедработник", 
				Неопределено, 
				Истина, 
				КонтейнерОтображаемойВерсии, 
				Ложь);
			ОбменСГИСЭПДКлиентСервер.УдалитьРеквизитыПоГруппеДанных(ЭтотОбъект, "ТитулМедосмотрШтатныйМедработник", КонтейнерОтображаемойВерсии, Ложь);
		КонецЕсли;
	ИначеЕсли ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул6") Тогда
		ВариантМедработникПосле = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, "ВариантМедработникПосле", 0, КонтейнерОтображаемойВерсии);
		Если ВариантМедработникПосле = 0 Тогда
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, 
				"ХранимыеДанныеТитулМедосмотрПослеСтороннийМедработник", 
				Неопределено, 
				Истина, 
				КонтейнерОтображаемойВерсии, 
				Ложь);
			ОбменСГИСЭПДКлиентСервер.УдалитьРеквизитыПоГруппеДанных(ЭтотОбъект, "ТитулМедосмотрПослеСтороннийМедработник", КонтейнерОтображаемойВерсии, Ложь);
		Иначе	
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, 
				"ХранимыеДанныеТитулМедосмотрПослеШтатныйМедработник", 
				Неопределено, 
				Истина, 
				КонтейнерОтображаемойВерсии, 
				Ложь);
			ОбменСГИСЭПДКлиентСервер.УдалитьРеквизитыПоГруппеДанных(ЭтотОбъект, "ТитулМедосмотрПослеШтатныйМедработник", КонтейнерОтображаемойВерсии, Ложь);
		КонецЕсли;
	ИначеЕсли ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул4") Тогда
		ТитулВыездПризнакНачалаРейса = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, "ТитулВыездПризнакНачалаРейса", "1", КонтейнерОтображаемойВерсии);
		Если ТитулВыездПризнакНачалаРейса = "1" Тогда
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, 
				"ТитулВыездДатаИВремяПриема", 
				Неопределено, 
				Истина, 
				КонтейнерОтображаемойВерсии, 
				Ложь);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, 
				"ТитулВыездПоказанияОдометраПриПриеме", 
				Неопределено, 
				Истина, 
				КонтейнерОтображаемойВерсии, 
				Ложь);
		Иначе
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, 
				"ТитулВыездДатаИВремяВыезда", 
				Неопределено, 
				Истина, 
				КонтейнерОтображаемойВерсии, 
				Ложь);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, 
				"ТитулВыездПоказанияОдометраПриВыезде", 
				Неопределено, 
				Истина, 
				КонтейнерОтображаемойВерсии, 
				Ложь);
		КонецЕсли;
	ИначеЕсли ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул5") Тогда
		ТитулЗаездПризнакОкончанияРейса = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, "ТитулЗаездПризнакОкончанияРейса", "1", КонтейнерОтображаемойВерсии);
		Если ТитулЗаездПризнакОкончанияРейса = "1" Тогда
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, 
				"ТитулЗаездДатаИВремяСдачи", 
				Неопределено, 
				Истина, 
				КонтейнерОтображаемойВерсии, 
				Ложь);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, 
				"ТитулЗаездПоказанияОдометраПриСдаче", 
				Неопределено, 
				Истина, 
				КонтейнерОтображаемойВерсии, 
				Ложь);	
		Иначе
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, 
				"ТитулЗаездДатаИВремяЗаезда", 
				Неопределено, 
				Истина, 
				КонтейнерОтображаемойВерсии, 
				Ложь);
			ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
				ЭтотОбъект, 
				"ТитулЗаездПоказанияОдометраПриЗаезде", 
				Неопределено, 
				Истина, 
				КонтейнерОтображаемойВерсии, 
				Ложь);
		КонецЕсли;
	ИначеЕсли ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул2") Тогда
		ВариантПогрузки = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, "ВариантПогрузки", 0, КонтейнерОтображаемойВерсии);
		Если ВариантПогрузки = 0 Тогда
			Для Каждого КиЗ Из КонтейнерОтображаемойВерсии.СтруктураРеквизитовЗаполнение[КонтейнерОтображаемойВерсии.ПрефиксТитула][КонтейнерОтображаемойВерсии.НомерВерсии] Цикл
				Если СтрНачинаетсяС(КиЗ.Ключ, "Вариант") = Ложь Тогда
					ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
						ЭтотОбъект, 
						КиЗ.Ключ, 
						Неопределено, 
						Истина, 
						КонтейнерОтображаемойВерсии, 
						Ложь);
				КонецЕсли;
			КонецЦикла;	
		КонецЕсли;	
	ИначеЕсли ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул4") Тогда
		ВариантВыгрузки = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, "ВариантВыгрузки", 0, КонтейнерОтображаемойВерсии);
		Если ВариантВыгрузки = 0 Тогда
			Для Каждого КиЗ Из КонтейнерОтображаемойВерсии.СтруктураРеквизитовЗаполнение[КонтейнерОтображаемойВерсии.ПрефиксТитула][КонтейнерОтображаемойВерсии.НомерВерсии] Цикл
				Если СтрНачинаетсяС(КиЗ.Ключ, "Вариант") = Ложь Тогда
					ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
						ЭтотОбъект, 
						КиЗ.Ключ, 
						Неопределено, 
						Истина, 
						КонтейнерОтображаемойВерсии, 
						Ложь);
				КонецЕсли;
			КонецЦикла;		
		КонецЕсли;	
	КонецЕсли;
	
	Для Каждого КиЗ Из КонтейнерОтображаемойВерсии.СтруктураРеквизитовЗаполнение[КонтейнерОтображаемойВерсии.ПрефиксТитула][КонтейнерОтображаемойВерсии.НомерВерсии] Цикл
		Если СтрНачинаетсяС(КиЗ.Ключ, "ХранимыеДанные") Тогда
			ОбменСГИСЭПДКлиент.ХранимыеДанныеПриИзменении(ЭтотОбъект, 
					КиЗ.Значение, 
					Элементы.Найти("ДоступныеДокументы" + КиЗ.Ключ),
					,
					КонтейнерОтображаемойВерсии,
					Ложь);
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДанныеПоСтрокам() Экспорт
	
	//ПерезаполнитьПоля = Результат > 0;
	ОчищатьПоля = ПерезаполнитьПоля; //Результат = 2;
	
	СтруктураОтбораСтрок = Новый Структура;
	СтруктураОтбораСтрок.Вставить("Пометка", Истина);
	Элементы.ДоступныеДокументы.ОтборСтрок = Новый ФиксированнаяСтруктура(СтруктураОтбораСтрок);

	ОтображаемыеВерсииТитулов.Вставить(ЭтотОбъект.ПрефиксТитула, 0);
	КонтейнерОтображаемойВерсии = ОбменСГИСЭПДКлиентСервер.КонтейнерОтображаемойВерсииРеквизита(ЭтотОбъект, ЭтотОбъект.ПрефиксТитула);
	
	СобратьДанные(КонтейнерОтображаемойВерсии);
	СтруктураРеквизитов = ОбменСГИСЭПДКлиентСервер.СкопироватьВФиксированноеЗначенияРекурсивно(КонтейнерОтображаемойВерсии.СтруктураРеквизитовЗаполнение);
	
	ГруппаКлючевогоРеквизита = СтрЗаменить(ИмяКлючевогоРеквизита, "ХранимыеДанные", "");
	
	Для Каждого Строка Из ДоступныеДокументы Цикл
		Если Элементы.ДоступныеДокументы.ПроверитьСтроку(Строка.ПолучитьИдентификатор()) = Ложь Тогда
			Продолжить;	
		КонецЕсли;		
		Строка.ПометкаПриОтправке = Истина;
		КоличествоВыбраноДляОтправки = КоличествоВыбраноДляОтправки + 1;
		Для Каждого Колонка Из Элементы.ГруппаЗаполнение.ПодчиненныеЭлементы Цикл
			ИмяКолонки = СтрЗаменить(Колонка.Имя, "ДоступныеДокументы", "");
			Если ИмяКолонки = "ПредставлениеЗамечаний"
			Или СтрНачинаетсяС(ИмяКолонки, "Заполнить") Тогда
				Продолжить;
			КонецЕсли;
		
			Если (ЗначениеЗаполнено(ЭтотОбъект[ИмяКолонки])  
				Или ОчищатьПоля = Истина)
			И (ЗначениеЗаполнено(Строка[ИмяКолонки]) = Ложь 
				И СтрНачинаетсяС(ИмяКолонки, "Вариант") = Ложь
				Или ПерезаполнитьПоля = Истина) Тогда
				Строка[ИмяКолонки] = ЭтотОбъект[ИмяКолонки];
			КонецЕсли;
		КонецЦикла;
		
		Строка.ОтправитьУОУ = ОтправитьУОУ;
		Если ПерезаполнитьПоля = Истина Или ЗначениеЗаполнено(Строка.КомментарийУОУ) = Ложь Тогда
			Строка.КомментарийУОУ = КомментарийУОУ;
		КонецЕсли;
		
		НомерВерсии = Строка.ПолучитьИдентификатор() + 1;
		ОтображаемыеВерсииТитулов.Вставить(ЭтотОбъект.ПрефиксТитула, НомерВерсии);
		КонтейнерОтображаемойВерсии = ОбменСГИСЭПДКлиентСервер.КонтейнерОтображаемойВерсииРеквизита(ЭтотОбъект, ЭтотОбъект.ПрефиксТитула);
		
		СчетчикиКоличество = Новый Структура;
		Для Каждого КиЗ Из КонтейнерОтображаемойВерсии.СтруктураРеквизитовЗаполнение[КонтейнерОтображаемойВерсии.ПрефиксТитула][0] Цикл
			Если СтрНачинаетсяС(КиЗ.Ключ, ГруппаКлючевогоРеквизита) Тогда
				Продолжить;
			КонецЕсли;
			Если (ЗначениеЗаполнено(КиЗ.Значение) Или ОчищатьПоля = Истина) Тогда			
				ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(
					ЭтотОбъект, 
					КиЗ.Ключ, 
					КиЗ.Значение, 
					ПерезаполнитьПоля И Не СтрНачинаетсяС(КиЗ.Ключ, "Вариант"), 
					КонтейнерОтображаемойВерсии, 
					Ложь);			
				Для Каждого ЭлементСписка Из ПоляПодчиненныхФорм Цикл
					ИмяГруппы = СтрЗаменить(ЭлементСписка.Значение, "ДоступныеДокументы", "");
					ИмяГруппы = СтрЗаменить(ИмяГруппы, "Заполнить", "");
					Если СтрНачинаетсяС(КиЗ.Ключ, ИмяГруппы)
					И СтрЗаканчиваетсяНа(КиЗ.Ключ, "ИдентификаторСтроки") = Ложь
					И СтрЗаканчиваетсяНа(КиЗ.Ключ, "ИдентификаторСтрокиРодителя") = Ложь Тогда
						ЧастиСтроки = ОбменСГИСЭПДКлиентСервер.РазделитьСтрокуСоСложнымРазделителем(КиЗ.Ключ, "__");
						Если ЧастиСтроки.Количество() = 3 Тогда
							НомерСтроки = Число(ЧастиСтроки[1]);
						Иначе
							НомерСтроки = 1;
						КонецЕсли;
						ТекущееЗначениеСчетчика = Неопределено;
						Если СчетчикиКоличество.Свойство(ИмяГруппы, ТекущееЗначениеСчетчика) Тогда
							СчетчикиКоличество.Вставить(ИмяГруппы, Макс(ТекущееЗначениеСчетчика, НомерСтроки));
						Иначе
							СчетчикиКоличество.Вставить(ИмяГруппы, 1);
						КонецЕсли;							 
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;	
		Для Каждого КиЗ Из СчетчикиКоличество Цикл
			Строка["Заполнено" + КиЗ.Ключ] = Истина;	
			Строка["Заполнить" + КиЗ.Ключ] = ПросклонятьПоЧислуНаСервере(Строка.Количество, "запись");	
		КонецЦикла;
		
		Если Строка.Свойство("ПредставлениеЗамечаний") Тогда
			Строка["ПредставлениеЗамечаний"] = "";
			Для Каждого КиЗ Из ОписаниеРеквизитовТекущегоТитула Цикл					
				Если СтрНачинаетсяС(СтрЗаменить(КиЗ.Ключ, ЭтотОбъект.ПрефиксТитула, ""), "Замечания")
					И ЗначениеЗаполнено(Строка[КиЗ.Ключ])
					И ТипЗнч(Строка[КиЗ.Ключ]) = Тип("Строка") Тогда
						Строка["ПредставлениеЗамечаний"] = Строка["ПредставлениеЗамечаний"] 
							+ ?(Строка["ПредставлениеЗамечаний"] = "", "", " ") + Строка[КиЗ.Ключ];		
				КонецЕсли;			
			КонецЦикла;
		КонецЕсли;
		СтруктураРеквизитов = ОбменСГИСЭПДКлиентСервер.СкопироватьВФиксированноеЗначенияРекурсивно(КонтейнерОтображаемойВерсии.СтруктураРеквизитовЗаполнение);
	КонецЦикла;
	
	УстановитьТекущийШагПомощника();
	
КонецПроцедуры

&НаСервере
Функция ПросклонятьПоЧислуНаСервере(Количество, Единица, Падеж = "Именительный")
	
	Возврат ПолучитьСклоненияСтрокиПоЧислу("", Количество, Единица, "ЧС=Количественное;Л=ru_RU", "ПД=" + Падеж)[0];
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьИОтправить()
	
	Доступность = ПроверкаБезОтправки;
	
	КоличествоОшибокЗаполнения = 0;
	КоличествоОбработано = 0;
	КоличествоПодготовленоКОтправке = 0;
	
	МассивДляУОУ = Новый Массив;
	МассивИдентификаторовУОУ = Новый Массив;
	ТекстыУОУ = Новый Соответствие;
	Объект = Новый Структура;
	Для Каждого Строка Из ДоступныеДокументы Цикл
		Если Строка.ПометкаПриОтправке Тогда
			ИдентификаторСтроки = Строка.ПолучитьИдентификатор();
			СсылкаНаОбъект = Строка.Ссылка;
			Объект.Вставить("Объект" + ИдентификаторСтроки, ОбменСГИСЭПДВызовСервера.ЗначенияРеквизитовОбъекта(СсылкаНаОбъект, ИменаРеквизитовДокумента));
			Если Строка.ОтправитьУОУ = 1 Тогда
				МассивДляУОУ.Добавить(Строка.Ссылка);
				МассивИдентификаторовУОУ.Добавить(ИдентификаторСтроки);
				ТекстыУОУ.Вставить(Строка.Ссылка, Строка.КомментарийУОУ);	
			Иначе	
				Если ПроверкаБезОтправки = Ложь
				И Строка.СтатусОтправки = "Подготовлен к отправке" Тогда 
					ДополнительныеПараметры = Новый Структура;
					ДополнительныеПараметры.Вставить("ИдентификаторСтроки", ИдентификаторСтроки);
					ПередВыполнениемДействийПоЭДО(Строка.Ссылка, ДополнительныеПараметры);
				Иначе
					НомерВерсии = ИдентификаторСтроки + 1;
					ОтображаемыеВерсииТитулов.Вставить(ЭтотОбъект.ПрефиксТитула, НомерВерсии);
									
					КонтейнерОтображаемойВерсии = ОбменСГИСЭПДКлиентСервер.КонтейнерОтображаемойВерсииРеквизита(ЭтотОбъект, ЭтотОбъект.ПрефиксТитула);
					СобратьДанные(КонтейнерОтображаемойВерсии);

					ОбменСГИСЭПДКлиентСервер.УстановитьЗначениеРеквизитаВСтруктуреФормы(ЭтотОбъект, 
						ЭтотОбъект.ПрефиксТитула + "НомерВерсии", Строка.НомерВерсии, , КонтейнерОтображаемойВерсии, Истина);
					
					Объект.Вставить("Объект" + ИдентификаторСтроки, ОбменСГИСЭПДВызовСервера.ЗначенияРеквизитовОбъекта(СсылкаНаОбъект, ИменаРеквизитовДокумента));
					ОбменСГИСЭПДКлиент.ОтправитьЭПД(ЭтотОбъект, , , ИдентификаторСтроки);
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если МассивДляУОУ.Количество() > 0 И ПроверкаБезОтправки = Ложь Тогда
		ОбменСГИСЭПДКлиент.ОтправитьУОУ(МассивДляУОУ, ТекущийТитул, ТекстыУОУ, ЭтотОбъект, МассивИдентификаторовУОУ);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьДействияПоЭДО()
	
	ПодготовленныеДляОтправки.Сортировать("ДействияСтрокой");
	
	ТекущиеДействияСтрокой = "";
	Для ИндексСтроки = 0 По ПодготовленныеДляОтправки.Количество() - 1 Цикл
		СтрокаДействие = ПодготовленныеДляОтправки[ИндексСтроки];
		Строка = ДоступныеДокументы.НайтиПоИдентификатору(СтрокаДействие.ИдентификаторСтроки);
		
		Если Строка = Неопределено Или Строка.ПометкаПриОтправке = Ложь Тогда
			Продолжить;
		КонецЕсли;
		
		КоличествоОбработано = КоличествоОбработано + 1;
		
		Если СтрНачинаетсяС(Строка.СтатусОтправки, "Ошибки заполнения")
		Или ЗначениеЗаполнено(СтрокаДействие.ДействияСтрокой) = Ложь Тогда
			ПослеВыполненияДействийПоЭДО(Неопределено, Неопределено);
			Продолжить;
		КонецЕсли;
		
		Если СтрокаДействие.ДействияСтрокой <> ТекущиеДействияСтрокой Тогда
				
			ТекущиеДействияСтрокой = СтрокаДействие.ДействияСтрокой;
			
			НаборДействий = Новый Соответствие;
			Если СтрНайти(СтрокаДействие.ДействияСтрокой, "Сформировать") Тогда
				ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
					"Перечисление.ДействияПоЭДО.Сформировать"));
			КонецЕсли;
			Если СтрНайти(СтрокаДействие.ДействияСтрокой, "СформироватьОтвет") Тогда
				ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
					"Перечисление.ДействияПоЭДО.СформироватьОтвет"));
			КонецЕсли;
			Если СтрНайти(СтрокаДействие.ДействияСтрокой, "Подписать") Тогда
				ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
					"Перечисление.ДействияПоЭДО.Подписать"));
			КонецЕсли;
			Если СтрНайти(СтрокаДействие.ДействияСтрокой, "ПодготовитьКОтправке") Тогда
				ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
					"Перечисление.ДействияПоЭДО.ПодготовитьКОтправке"));
			КонецЕсли;
			Если СтрНайти(СтрокаДействие.ДействияСтрокой, "Отправить") Тогда
				ИнтерфейсДокументовЭДОКлиентСервер.ДобавитьДействие(НаборДействий, ПредопределенноеЗначение(
					"Перечисление.ДействияПоЭДО.Отправить"));
			КонецЕсли;
			
			ПараметрыВыполненияДействийПоЭДО = ИнтерфейсДокументовЭДОКлиентСервер.НовыеПараметрыВыполненияДействийПоЭДО();
			ПараметрыВыполненияДействийПоЭДО.НаборДействий = НаборДействий;
			
			ДополнительныеПараметрыУспешногоЗавершения = Новый Структура;
			ДополнительныеПараметрыУспешногоЗавершения.Вставить("НаборДействий", НаборДействий);
			
			ИдентификаторыСтрок = Новый Массив;
			Исправления = Новый Массив;
		КонецЕсли;		
			
		ИдентификаторыСтрок.Добавить(СтрокаДействие.ИдентификаторСтроки);
		Если СтрокаДействие.ЭтоИсправление Тогда		
			Исправления.Добавить(СтрокаДействие.Ссылка);
		КонецЕсли;	
		ПараметрыВыполненияДействийПоЭДО.ОбъектыДействий.ОбъектыУчета.Добавить(СтрокаДействие.Ссылка);		
				
		Если КоличествоОбработано = КоличествоВыбраноДляОтправки
			Или ПодготовленныеДляОтправки[ИндексСтроки + 1].ДействияСтрокой <> ТекущиеДействияСтрокой Тогда
				
			ДополнительныеПараметрыУспешногоЗавершения.Вставить("ИдентификаторыСтрок", ИдентификаторыСтрок);
			ДополнительныеПараметрыУспешногоЗавершения.Вставить("Исправления", Исправления);
			
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("ЭтоИсправление", СтрокаДействие.ЭтоИсправление);
			ДополнительныеПараметры.Вставить("ОповещениеУспешногоЗавершения",
				Новый ОписаниеОповещения("ПослеВыполненияДействийПоЭДО", ЭтотОбъект, 
											ДополнительныеПараметрыУспешногоЗавершения, 
											"ПослеВыполненияДействийПоЭДО_ОбработкаОшибки", ЭтотОбъект));
		
			Оповещение = Новый ОписаниеОповещения("ПослеВыполненияДействийПоЭДО", ИнтерфейсДокументовЭДОКлиент, ДополнительныеПараметры);
			
			ЭлектронныеДокументыЭДОКлиент.НачатьВыполнениеДействийПоЭДО(Оповещение, ПараметрыВыполненияДействийПоЭДО);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередВыполнениемДействийПоЭДО(Результат, ДополнительныеПараметры) Экспорт
	
	ИдентификаторСтроки = Неопределено;
	ЭтоИсправление = Неопределено;
	НаборДействий = Неопределено;
	
	Если ДополнительныеПараметры <> Неопределено Тогда
		ДополнительныеПараметры.Свойство("ИдентификаторСтроки", ИдентификаторСтроки);
		ДополнительныеПараметры.Свойство("ЭтоИсправление", ЭтоИсправление);
		ДополнительныеПараметры.Свойство("НаборДействий", НаборДействий);
	КонецЕсли;
	
	Если ИдентификаторСтроки <> Неопределено Тогда
		НайденныеСтроки = ПодготовленныеДляОтправки.НайтиСтроки(Новый Структура("ИдентификаторСтроки", ИдентификаторСтроки));
		Если НайденныеСтроки.Количество() > 0 Тогда
			НоваяСтрока = НайденныеСтроки[0];
		КонецЕсли;
	КонецЕсли;
	
	Если НоваяСтрока = Неопределено Тогда
		НайденныеСтроки = ПодготовленныеДляОтправки.НайтиСтроки(Новый Структура("Ссылка", Результат));
		Если НайденныеСтроки.Количество() > 0 Тогда
			НоваяСтрока = НайденныеСтроки[0];
		КонецЕсли;
	КонецЕсли;
	
	Если НоваяСтрока = Неопределено Тогда 
		НоваяСтрока = ПодготовленныеДляОтправки.Добавить();
		НоваяСтрока.Ссылка = Результат;
	КонецЕсли;
	
	Если ИдентификаторСтроки <> Неопределено Тогда
		НоваяСтрока.ИдентификаторСтроки = ИдентификаторСтроки;
	КонецЕсли;
	
	Если ЭтоИсправление <> Неопределено Тогда
		НоваяСтрока.ЭтоИсправление = ЭтоИсправление;
	КонецЕсли;
	
	КоличествоПодготовленоКОтправке = КоличествоПодготовленоКОтправке + 1;
	
	Строка = ДоступныеДокументы.НайтиПоИдентификатору(НоваяСтрока.ИдентификаторСтроки);
									
	Если НаборДействий <> Неопределено Тогда												
		Если НаборДействий.Количество() = 0 Тогда		
			Строка.СтатусОтправки = "Нет доступных действий";
		Иначе	
			ОписанияОшибок = Неопределено;
			Если ДополнительныеПараметры.Свойство("ОписанияОшибок", ОписанияОшибок) = Ложь Тогда
				ОписанияОшибок = ОбменСГИСЭПДВызовСервера.ПроверитьЗаполнениеДокументаЭПД(НоваяСтрока.Ссылка, 
																							ТекущийТитул, 
																							ИмяОбъекта);
			КонецЕсли;
																							
			Если ОписанияОшибок.Количество() > 0 Тогда
				Строка.СтатусОтправки = "Ошибки заполнения (" + ОписанияОшибок.Количество() + ")";
				
				КоличествоОшибокЗаполнения = КоличествоОшибокЗаполнения + 1;
			Иначе
				Строка.СтатусОтправки = "Подготовлен к отправке";
			КонецЕсли;
			
			Если НаборДействий.Получить(
				ПредопределенноеЗначение("Перечисление.ДействияПоЭДО.Сформировать")) <> Неопределено Тогда
				НоваяСтрока.ДействияСтрокой = НоваяСтрока.ДействияСтрокой + "Сформировать";	
			КонецЕсли;
			Если НаборДействий.Получить(
				ПредопределенноеЗначение("Перечисление.ДействияПоЭДО.СформироватьОтвет")) <> Неопределено Тогда
				НоваяСтрока.ДействияСтрокой = НоваяСтрока.ДействияСтрокой + "СформироватьОтвет";	
			КонецЕсли;
			Если НаборДействий.Получить(
				ПредопределенноеЗначение("Перечисление.ДействияПоЭДО.Подписать")) <> Неопределено Тогда
				НоваяСтрока.ДействияСтрокой = НоваяСтрока.ДействияСтрокой + "Подписать";	
			КонецЕсли;
			Если НаборДействий.Получить(
				ПредопределенноеЗначение("Перечисление.ДействияПоЭДО.ПодготовитьКОтправке")) <> Неопределено Тогда
				НоваяСтрока.ДействияСтрокой = НоваяСтрока.ДействияСтрокой + "ПодготовитьКОтправке";	
			КонецЕсли;
			Если НаборДействий.Получить(
				ПредопределенноеЗначение("Перечисление.ДействияПоЭДО.Отправить")) <> Неопределено Тогда
				НоваяСтрока.ДействияСтрокой = НоваяСтрока.ДействияСтрокой + "Отправить";	
			КонецЕсли;
		КонецЕсли;	

	КонецЕсли;
	
	Если КоличествоПодготовленоКОтправке = КоличествоВыбраноДляОтправки Тогда
		Если ПроверкаБезОтправки = Истина Тогда
			ПроверкаБезОтправки = Ложь;
		Иначе
			ВыполнитьДействияПоЭДО();
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьИменаРеквизитовДокумента()
	
	Результат = Новый Структура;
	
	ЧастиИмениОбъекта = СтрРазделить(ИмяОбъекта, ".");
	
	Для Каждого Реквизит Из Метаданные.Документы[ЧастиИмениОбъекта[1]].Реквизиты Цикл
		Результат.Вставить(Реквизит.Имя);
	КонецЦикла;
	
	Результат.Вставить("Ссылка");
	Результат.Вставить("Дата");
	Результат.Вставить("Номер");
	
	Возврат Результат;	
	
КонецФункции

&НаКлиенте
Процедура Записать(ПараметрыЗаписи) Экспорт
	
	// Перед записью
	Отказ = Ложь;
	
	СтрокаДокумента = ДоступныеДокументы.НайтиПоИдентификатору(ПараметрыЗаписи.ИдентификаторСтроки);
	
	ЗаписатьНаСервере(Отказ, ПараметрыЗаписи, СтрокаДокумента.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНаСервере(Отказ, ПараметрыЗаписи, СсылкаДляЗаписи)
	
	ТекущийОбъект = СсылкаДляЗаписи.ПолучитьОбъект();
	
	ИдентификаторСтроки = Неопределено;
	Если ТипЗнч(Объект) = Тип("Структура")
	И ПараметрыЗаписи.Свойство("ИдентификаторСтроки", ИдентификаторСтроки)
	И Объект.Свойство("Объект" + ИдентификаторСтроки) Тогда
		ТекущийОбъектСтруктура = Объект["Объект" + ИдентификаторСтроки];
	КонецЕсли;
	
	Если ТекущийОбъектСтруктура = Неопределено 
	Или ТекущийОбъектСтруктура.Свойство("ТекущийТитул") = Ложь 
	Или ЗначениеЗаполнено(ТекущийОбъектСтруктура.ТекущийТитул) = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьТекущийТитул = Неопределено;
	Если ПараметрыЗаписи.Свойство("УстановитьТекущийТитул", УстановитьТекущийТитул)
	И УстановитьТекущийТитул = Истина Тогда
		Если ИмяОбъекта = "Документ.ЭлектронныйПутевойЛист" Тогда
			ОбменСГИСЭПДКлиентСервер.УстановитьТекущийДоступныйТитулЭПЛ(ТекущийОбъект);
		ИначеЕсли ИмяОбъекта = "Документ.ЭлектроннаяТранспортнаяНакладная" Тогда
			ОбменСГИСЭПДКлиентСервер.УстановитьТекущийДоступныйТитулЭТрН(ТекущийОбъект);
		КонецЕсли;
	КонецЕсли;
	
	ИнформацияПоПрефиксамТитула = ОбменСГИСЭПДКлиентСервер.ПрефиксТитулаПоЭлементуРегламентаЭДО(ТекущийОбъектСтруктура.ТекущийТитул);
	
	Если ИнформацияПоПрефиксамТитула.ВПрограмме = Неопределено Тогда
		Для Каждого КиЗ Из ТекущийОбъектСтруктура Цикл
			Если КиЗ.Ключ = "Ссылка" Тогда
				Продолжить;
			КонецЕсли;
			ТекущийОбъект[КиЗ.Ключ] = КиЗ.Значение;	
		КонецЦикла;
		ТекущийОбъект.Записать();
		Возврат;
	КонецЕсли;  
	    
	Если ТекущийОбъектСтруктура.ТекущийТитул <> ТекущийТитул Тогда
		ТекущийОбъект.Записать();
		Возврат;
	КонецЕсли;
	
	КонтейнерОтображаемойВерсии = ОбменСГИСЭПДКлиентСервер.КонтейнерОтображаемойВерсииРеквизита(ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме);
	КонтейнерОтображаемойВерсии.НомерВерсии = ИдентификаторСтроки + 1;
	
	ОбменСГИСЭПД.ЗаполнитьДополнительныеРеквизитыФормы(ЭтотОбъект, ИнформацияПоПрефиксамТитула.ВПрограмме, КонтейнерОтображаемойВерсии);
	
	НомерВерсии = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект, 
		ИнформацияПоПрефиксамТитула.ВПрограмме + "НомерВерсии", 0, КонтейнерОтображаемойВерсии);
	
	Если ПараметрыЗаписи.Свойство("НеДобавлятьВерсию") = Ложь Тогда
		// Запишем версию при необходимости
		ТекущийОбъект.ДополнительныеСвойства.Вставить("НомерВерсии", НомерВерсии);
		
		ИдентификаторФайлаВерсии = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект,
			ИнформацияПоПрефиксамТитула.ВПрограмме + "ИдентификаторФайла", , КонтейнерОтображаемойВерсии);
		
		ДатаФормированияФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект,
										ИнформацияПоПрефиксамТитула.ВПрограмме + "ДатаФормированияФайла", , КонтейнерОтображаемойВерсии);
		ВремяФормированияФайла = ОбменСГИСЭПДКлиентСервер.ПолучитьЗначениеРеквизитаИзСтруктурыФормы(ЭтотОбъект,
										ИнформацияПоПрефиксамТитула.ВПрограмме + "ВремяФормированияФайла", , КонтейнерОтображаемойВерсии);
		
		ДатаВерсии =  ДатаФормированияФайла
						+ 60 * 60 * Час(ВремяФормированияФайла) 
						+ 60 * Минута(ВремяФормированияФайла) 
						+ Секунда(ВремяФормированияФайла);
				
		ВерсияТитула = Новый Структура;
		ВерсияТитула.Вставить("НомерВерсии", НомерВерсии);
		ВерсияТитула.Вставить("ИдентификаторФайла", ИдентификаторФайлаВерсии);
		ВерсияТитула.Вставить("Титул", ТекущийТитул);
		ВерсияТитула.Вставить("ДатаВерсии", ДатаВерсии);
		
		ТекущийОбъект.ДополнительныеСвойства.Вставить("ВерсияТитула", ВерсияТитула);
	КонецЕсли;
	
	МассивВерсийТитула = Неопределено;
	СтруктураРеквизитов.Свойство(ИнформацияПоПрефиксамТитула.ВПрограмме, МассивВерсийТитула);
	Если МассивВерсийТитула <> Неопределено Тогда
		ТекущийОбъект.ДополнительныеСвойства.Вставить("СтруктураРеквизитов", МассивВерсийТитула[ПараметрыЗаписи.ИдентификаторСтроки + 1]);
	КонецЕсли;
	
	Для Каждого КиЗ Из МассивВерсийТитула[ПараметрыЗаписи.ИдентификаторСтроки + 1] Цикл
		Если ТекущийОбъектСтруктура.Свойство(КиЗ.Ключ) Тогда
			ТекущийОбъект[КиЗ.Ключ] = КиЗ.Значение;	
		КонецЕсли;
	КонецЦикла;
	
	ТекущийОбъект.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыполненияДействийПоЭДО_ОбработкаОшибки(ИнформацияОбОшибке, СтандартнаяОбработка, ДополнительныеПараметры) Экспорт
	
	Доступность = Истина;
	ОбменСГИСЭПДКлиент.ОчиститьИдФайлТекущегоТитула(ЭтотОбъект, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыполненияДействийПоЭДО(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ДействиеОтправить = ПредопределенноеЗначение("Перечисление.ДействияПоЭДО.Отправить");
		КоличествоОтправленоТекущее = Результат.ОбработаноПоДействиям.Получить(ДействиеОтправить);
		
		ДействиеЗакрытьПринудительно = ПредопределенноеЗначение("Перечисление.ДействияПоЭДО.ЗакрытьПринудительно");
		КоличествоЗакрытоПринудительно = Результат.ОбработаноПоДействиям.Получить(ДействиеЗакрытьПринудительно);
		
		Если КоличествоОтправленоТекущее <> Неопределено Тогда
			Если КоличествоОтправленоТекущее > 0 Тогда
				Для Каждого ИдентификаторСтроки Из ДополнительныеПараметры.ИдентификаторыСтрок Цикл
					
					СтрокаДокумента = ДоступныеДокументы.НайтиПоИдентификатору(ИдентификаторСтроки);
					
					Если ДополнительныеПараметры.Свойство("Исправления") 
					И ДополнительныеПараметры.Исправления.Найти(СтрокаДокумента.Ссылка) <> Неопределено Тогда
						ОбменСГИСЭПДВызовСервера.ОтметитьИсправлениеДокумента(СтрокаДокумента.Ссылка);	
					КонецЕсли;
					
					ПараметрыЗаписи = Новый Структура;
					ПараметрыЗаписи.Вставить("НеТребуетсяИдентификацияФайла");
					ПараметрыЗаписи.Вставить("ИдентификаторСтроки", ИдентификаторСтроки);
					ПараметрыЗаписи.Вставить("УстановитьТекущийТитул", Истина);
					Записать(ПараметрыЗаписи);
					
					СтрокаДокумента.КартинкаОтправлено = 1;
					СтрокаДокумента.ПометкаПриОтправке = Ложь;
					СтрокаДокумента.СтатусОтправки = "Отправлено";
				КонецЦикла;
				КоличествоВыбрано = КоличествоВыбрано - КоличествоОтправленоТекущее;
				КоличествоВыбраноДляОтправки = КоличествоВыбраноДляОтправки - КоличествоОтправленоТекущее;
				КоличествоОтправлено = КоличествоОтправлено + КоличествоОтправленоТекущее;
				Элементы.ФормаДалее.Доступность = КоличествоВыбраноДляОтправки > 0;
				ОбновитьНадписьКоличествоВыбрано();
			Иначе
				Для Каждого ИдентификаторСтроки Из ДополнительныеПараметры.ИдентификаторыСтрок Цикл
					
					СтрокаДокумента = ДоступныеДокументы.НайтиПоИдентификатору(ИдентификаторСтроки);
					
					СтрокаДокумента.ПометкаПриОтправке = Ложь;
					СтрокаДокумента.СтатусОтправки = "Нет доступных действий";
					
					КоличествоВыбрано = КоличествоВыбрано - 1;
					КоличествоВыбраноДляОтправки = КоличествоВыбраноДляОтправки - 1;
				КонецЦикла;	
				ОбновитьНадписьКоличествоВыбрано();
			КонецЕсли;
			
			Если КоличествоОбработано = КоличествоВыбраноДляОтправки + КоличествоОтправлено Тогда
				Доступность = Истина;
				
				ПараметрыРезультата = Новый Структура;
				ПараметрыРезультата.Вставить("КоличествоОбработано", КоличествоОбработано);
				ПараметрыРезультата.Вставить("КоличествоОтправлено", КоличествоОтправлено);
				ПараметрыРезультата.Вставить("КоличествоОшибокЗаполнения", КоличествоОшибокЗаполнения);
				
				РезультатОтправки_Завершение = Новый ОписаниеОповещения("РезультатОтправки_Завершение", ЭтотОбъект);
				
				ОткрытьФорму("Обработка.ГрупповаяОтправкаЭПД.Форма.РезультатОтправки", 
					ПараметрыРезультата, 
					ЭтотОбъект, УникальныйИдентификатор, , , 
					РезультатОтправки_Завершение, 
					РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			КонецЕсли;
					
		ИначеЕсли КоличествоЗакрытоПринудительно <> Неопределено И КоличествоЗакрытоПринудительно > 0 Тогда
			Для Каждого ИдентификаторСтроки Из ДополнительныеПараметры.ИдентификаторыСтрок Цикл
				СтрокаДокумента = ДоступныеДокументы.НайтиПоИдентификатору(ИдентификаторСтроки);	
				ДоступныеДокументы.Удалить(СтрокаДокумента);
				СтрокиПодготовленные = ПодготовленныеДляОтправки.НайтиСтроки(Новый Структура("Ссылка", СтрокаДокумента.Ссылка));
				Для Каждого СтрокаПодготовленная Из СтрокиПодготовленные Цикл
					ПодготовленныеДляОтправки.Удалить(СтрокаПодготовленная);
				КонецЦикла;
			КонецЦикла;
			КоличествоВыбрано = КоличествоВыбрано - КоличествоЗакрытоПринудительно;
			Если НавигацияПараметрФормы = "Отправка" Тогда
				КоличествоВыбраноДляОтправки = КоличествоВыбраноДляОтправки - КоличествоЗакрытоПринудительно;
			КонецЕсли;
			ОбновитьНадписьКоличествоВыбрано();
			
			Доступность = Истина;
		Иначе
			Доступность = Истина;
		КонецЕсли;
		
		// После записи (клиент)
		Оповестить("Запись_ДокументыЭПД");
	ИначеЕсли КоличествоОбработано = КоличествоВыбраноДляОтправки + КоличествоОтправлено Тогда
		Доступность = Истина;
	КонецЕсли;
	
	Если КоличествоВыбраноДляОтправки = 0 И КоличествоОбработано = КоличествоОтправлено Тогда
		НавигацияПараметрФормы = "Отправлено";
		УстановитьТекущийШагПомощника();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатОтправки_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если КоличествоОбработано = КоличествоОтправлено Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИнтервалЗавершение(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СписокИнтервал.ДатаНачала > СписокИнтервал.ДатаОкончания Тогда
		СписокИнтервал.ДатаОкончания  = КонецДня(СписокИнтервал.ДатаНачала);
	КонецЕсли;
	
	УстановитьПредставлениеПериода();
	
	ИзменениеПериодаЗапроса(ДополнительныеПараметры.ДатаНачалаБыло, ДополнительныеПараметры.ДатаОкончанияБыло);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменениеПериодаЗапроса(ДатаНачалаБыло, ДатаОкончанияБыло)
	
	Если НавигацияПараметрФормы = "СписокДокументов" Тогда
		НужноОбновитьДанные = Ложь;
		Если ВремяНачалаЗапроса > ВремяНачала
		Или ВремяОкончанияЗапроса < ВремяОкончания Тогда
			НужноОбновитьДанные = Истина;
		ИначеЕсли ДатаНачалаБыло > СписокИнтервал.ДатаНачала
		Или ДатаОкончанияБыло < СписокИнтервал.ДатаОкончания Тогда
			НужноОбновитьДанные = Истина;
		КонецЕсли;
		
		Если НужноОбновитьДанные Тогда
			ЗаполнитьТаблицу();
		Иначе
			ВремяНачалаСекунд = 3600 * Час(ВремяНачала) + 60 * Минута(ВремяНачала)+ Секунда(ВремяНачала);
			ВремяОкончанияСекунд = 3600 * Час(ВремяОкончания) + 60 * Минута(ВремяОкончания)+ Секунда(ВремяОкончания);
			Для СчетчикСтрок = 0 По ДоступныеДокументы.Количество() - 1 Цикл   
				Строка = ДоступныеДокументы[ДоступныеДокументы.Количество() - СчетчикСтрок - 1];
				Если Строка.ДатаДокументаИБ < СписокИнтервал.ДатаНачала
				Или Строка.ДатаДокументаИБ > СписокИнтервал.ДатаОкончания
				Или Строка.ДатаДокументаИБ < НачалоДня(Строка.ДатаДокументаИБ) + ВремяНачалаСекунд
				Или Строка.ДатаДокументаИБ > НачалоДня(Строка.ДатаДокументаИБ) + ВремяОкончанияСекунд Тогда
					ДоступныеДокументы.Удалить(Строка);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПредставлениеПериода()
	
	Если ЗначениеЗаполнено(СписокИнтервал.ДатаНачала)
	Или ЗначениеЗаполнено(СписокИнтервал.ДатаОкончания) Тогда
		ВремяОкончания = '00010101235959';
		ТекущаяДатаСеанса = ТекущаяДатаСеанса();
		Если СписокИнтервал.ДатаНачала = НачалоДня(СписокИнтервал.ДатаОкончания) Тогда
			Если СписокИнтервал.ДатаНачала = НачалоДня(ТекущаяДатаСеанса) Тогда
				Элементы.СписокУстановитьИнтервалГиперссылка.Заголовок = НСтр("ru='Сегодня'");
				ВремяСейчас = '00010101' + 3600 * Час(ТекущаяДатаСеанса) + 60 * Минута(ТекущаяДатаСеанса) + Секунда(ТекущаяДатаСеанса);
				Если ВремяОкончания > ВремяСейчас Тогда
					ВремяОкончания = ВремяСейчас;
				КонецЕсли;
			ИначеЕсли КонецДня(СписокИнтервал.ДатаНачала) = НачалоДня(ТекущаяДатаСеанса) - 1 Тогда
				Элементы.СписокУстановитьИнтервалГиперссылка.Заголовок = НСтр("ru='Вчера'");
			КонецЕсли;
		Иначе
			Элементы.СписокУстановитьИнтервалГиперссылка.Заголовок = ПредставлениеПериода(СписокИнтервал.ДатаНачала, 
																		СписокИнтервал.ДатаОкончания,
																		"Л=ru_RU");
		КонецЕсли;
	Иначе
		Элементы.СписокУстановитьИнтервалГиперссылка.Заголовок = "Все дни";	
	КонецЕсли;
	
	Элементы.СписокУстановитьИнтервалГиперссылка1.Заголовок = Элементы.СписокУстановитьИнтервалГиперссылка.Заголовок;
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьФлагиВариантовЗаполнения()
	
	ЭлементРодитель = Элементы.Найти("ГруппаРеквизиты" + ЭтотОбъект.ПрефиксТитула);
	
	ГруппаГрупповоеЗаполнение = Элементы.Найти("ГрупповоеЗаполнение" + ЭтотОбъект.ПрефиксТитула);
	
	Если ГруппаГрупповоеЗаполнение = Неопределено Тогда
		ПервыйЭлементРодителя = ЭлементРодитель.ПодчиненныеЭлементы[0];
		
		ГруппаГрупповоеЗаполнение = Элементы.Вставить("ГруппаГрупповоеЗаполнение" + ЭтотОбъект.ПрефиксТитула,
														Тип("ГруппаФормы"),
														ЭлементРодитель,
														ПервыйЭлементРодителя);
		ГруппаГрупповоеЗаполнение.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаГрупповоеЗаполнение.ОтображатьЗаголовок = Ложь;
		ГруппаГрупповоеЗаполнение.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		ГруппаГрупповоеЗаполнение.Отображение = ОтображениеОбычнойГруппы.Нет;
		ГруппаГрупповоеЗаполнение.Объединенная = Ложь;
		
		ОтступЛевоГрупповоеЗаполнение = Элементы.Добавить("ОтступЛевоГрупповоеЗаполнение" + ЭтотОбъект.ПрефиксТитула,
														Тип("ДекорацияФормы"),
														ГруппаГрупповоеЗаполнение);
		ОтступЛевоГрупповоеЗаполнение.Вид = ВидДекорацииФормы.Надпись;
		
		ЭлементГрупповоеЗаполнение = Элементы.Добавить("ГрупповоеЗаполнение" + ЭтотОбъект.ПрефиксТитула,
														Тип("ПолеФормы"),
														ГруппаГрупповоеЗаполнение);
		ЭлементГрупповоеЗаполнение.Вид = ВидПоляФормы.ПолеПереключателя;
		ЭлементГрупповоеЗаполнение.ВидПереключателя = ВидПереключателя.Тумблер;
		ЭлементГрупповоеЗаполнение.СписокВыбора.Добавить(1, "Заполнить документы");
		ЭлементГрупповоеЗаполнение.СписокВыбора.Добавить(0, "Не заполнять");
		ЭлементГрупповоеЗаполнение.ПутьКДанным = "ГрупповоеЗаполнение";
		ЭлементГрупповоеЗаполнение.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		
		ЭлементГрупповоеЗаполнение.УстановитьДействие("ПриИзменении", "Подключаемый_ГрупповоеЗаполнениеПриИзменении");
		
		ОтступНизГрупповоеЗаполнение = Элементы.Вставить("ОтступНизГрупповоеЗаполнение" + ЭтотОбъект.ПрефиксТитула,
														Тип("ДекорацияФормы"),
														ЭлементРодитель,
														ПервыйЭлементРодителя);
		ОтступНизГрупповоеЗаполнение.Вид = ВидДекорацииФормы.Надпись;
	КонецЕсли;
	
	ГруппаИнфоПерезаполнятьПоля = Элементы.Найти("ГруппаИнфоПерезаполнятьПоля" + ЭтотОбъект.ПрефиксТитула);
	
	Если КоличествоПредзаполненных > 0 Тогда
		Если ГруппаИнфоПерезаполнятьПоля = Неопределено Тогда
			ОтступВерхПерезаполнятьПоля = Элементы.Добавить("ОтступВерхПерезаполнятьПоля" + ЭтотОбъект.ПрефиксТитула,
														Тип("ДекорацияФормы"),
														ЭлементРодитель);
			ОтступВерхПерезаполнятьПоля.Вид = ВидДекорацииФормы.Надпись;
			
			ГруппаИнфоПерезаполнятьПоля = Элементы.Добавить("ГруппаИнфоПерезаполнятьПоля" + ЭтотОбъект.ПрефиксТитула,
														Тип("ГруппаФормы"),
														ЭлементРодитель);
			ГруппаИнфоПерезаполнятьПоля.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			ГруппаИнфоПерезаполнятьПоля.ОтображатьЗаголовок = Ложь;
			ГруппаИнфоПерезаполнятьПоля.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
			ГруппаИнфоПерезаполнятьПоля.Отображение = ОтображениеОбычнойГруппы.Нет;
			ГруппаИнфоПерезаполнятьПоля.Объединенная = Ложь;
			
			ОтступЛевоИнфоПерезаполнятьПоля = Элементы.Добавить("ОтступЛевоИнфоПерезаполнятьПоля" + ЭтотОбъект.ПрефиксТитула,
														Тип("ДекорацияФормы"),
														ГруппаИнфоПерезаполнятьПоля);
			ОтступЛевоИнфоПерезаполнятьПоля.Вид = ВидДекорацииФормы.Надпись;
			
			ГруппаПерезаполнятьПоля = Элементы.Добавить("ГруппаПерезаполнятьПоля" + ЭтотОбъект.ПрефиксТитула,
														Тип("ГруппаФормы"),
														ГруппаИнфоПерезаполнятьПоля);
			ГруппаПерезаполнятьПоля.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			ГруппаПерезаполнятьПоля.ОтображатьЗаголовок = Ложь;
			ГруппаПерезаполнятьПоля.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
			ГруппаПерезаполнятьПоля.Отображение = ОтображениеОбычнойГруппы.Нет;
			ГруппаПерезаполнятьПоля.Объединенная = Ложь;
			ГруппаПерезаполнятьПоля.ЦветФона = ЦветаСтиля.ЦветВыделенияУчастникаЭПД;	
			
			ЭлементПерезаполнятьПоля = Элементы.Добавить("ПерезаполнятьПоля" + ЭтотОбъект.ПрефиксТитула,
														Тип("ПолеФормы"),
														ГруппаПерезаполнятьПоля);
			ЭлементПерезаполнятьПоля.Вид = ВидПоляФормы.ПолеФлажка;
			ЭлементПерезаполнятьПоля.ПутьКДанным = "ПерезаполнитьПоля";
			ЭлементПерезаполнятьПоля.Заголовок = "Перезаполнить реквизиты";
			ЭлементПерезаполнятьПоля.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
			
			ИнфоПерезаполнятьПоля = Элементы.Добавить("ИнфоПерезаполнятьПоля" + ЭтотОбъект.ПрефиксТитула,
														Тип("ДекорацияФормы"),
														ГруппаПерезаполнятьПоля);
			ИнфоПерезаполнятьПоля.Вид = ВидДекорацииФормы.Надпись;				
		Иначе
			ГруппаИнфоПерезаполнятьПоля.Видимость = Истина;
		КонецЕсли;
	ИначеЕсли ГруппаИнфоПерезаполнятьПоля <> Неопределено Тогда
		ГруппаИнфоПерезаполнятьПоля.Видимость = Ложь;
	КонецЕсли;
	
	Если ГруппаИнфоПерезаполнятьПоля <> Неопределено
	И ГруппаИнфоПерезаполнятьПоля.Видимость Тогда
		ИнфоПерезаполнятьПоля = Элементы.Найти("ИнфоПерезаполнятьПоля" + ЭтотОбъект.ПрефиксТитула);	
		
		МассивЧастейЗаголовка = Новый Массив;
		Если КоличествоВыбрано = 1 Тогда
			МассивЧастейЗаголовка.Добавить(Новый ФорматированнаяСтрока(
				"В выбранном документе есть заполненные реквизиты. Если установить флажок, они будут перезаполнены данными этой формы", 
				ШрифтыСтиля.ШрифтСостоянияКурсивНаФормеЭПД));	
		Иначе
			МассивЧастейЗаголовка.Добавить(Новый ФорматированнаяСтрока("В", ШрифтыСтиля.ШрифтСостоянияКурсивНаФормеЭПД));
			
			СклоненнаяСтрока = ПросклонятьПоЧислуНаСервере(КоличествоВыбрано, "документ", "Родительный");
			МассивЧастей = СтрРазделить(СклоненнаяСтрока, " ");
			
			МассивЧастейЗаголовка.Добавить(
					Новый ФорматированнаяСтрока(" " 
						+ КоличествоПредзаполненных 
						+ " из " 
						+ КоличествоВыбрано, 
					ШрифтыСтиля.ШрифтСостоянияКурсивЖирныйНаФормеЭПД));
			МассивЧастейЗаголовка.Добавить(Новый ФорматированнаяСтрока(
				" выбранных " + МассивЧастей[1] + " есть заполненные реквизиты. Если установить флажок, они будут перезаполнены данными этой формы", 
				ШрифтыСтиля.ШрифтСостоянияКурсивНаФормеЭПД));
		КонецЕсли;
		
		ИнфоПерезаполнятьПоля.Заголовок = Новый ФорматированнаяСтрока(МассивЧастейЗаголовка);	
	КонецЕсли;
	
	ГрупповоеЗаполнение = КоличествоПредзаполненных < КоличествоВыбрано;
	
	Для Каждого Элемент Из ЭлементРодитель.ПодчиненныеЭлементы Цикл
		Если Элемент.Видимость = Истина
		И Элемент <> ГруппаГрупповоеЗаполнение Тогда
			Элемент.Доступность = ГрупповоеЗаполнение;		
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ЭтоЭлементУправленияЗаполнением(Элемент)
	
	Возврат СтрНайти(Элемент.Имя, "ПерезаполнятьПоля") > 0
			Или СтрНайти(Элемент.Имя, "ГрупповоеЗаполнение") > 0;
	
КонецФункции

#Область НавигацияПоСтраницам

&НаСервере
Процедура УстановитьВидимостьСтраницы(ОтображаемаяСтраница)
	
	Элементы.Страницы.ТекущаяСтраница  = ОтображаемаяСтраница;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТекущийШагПомощника()
	
	Если НавигацияПараметрФормы = "" Тогда
		НавигацияПараметрФормы = "ВыборТитула";
	КонецЕсли;

	Если НавигацияПараметрФормы = "СписокДокументов" Тогда			
		ЗаполнитьТаблицу();
		УстановитьВидимостьСтраницыСписокДокументов("Шаг2"); 			
	ИначеЕсли НавигацияПараметрФормы = "ЗаполнениеДанных" Тогда			
		УстановитьВидимостьСтраницыЗаполнениеДанных("Шаг3");				
	ИначеЕсли НавигацияПараметрФормы = "Отправка" Или НавигацияПараметрФормы = "Отправлено" Тогда			
		УстановитьВидимостьСтраницыОтправка("Шаг4");			
	Иначе			
		УстановитьВидимостьСтраницыНачало("Шаг1");			
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьПоля()
	
	КоличествоВыбрано = 0;
	КоличествоВыбраноДляОтправки = 0;
	КоличествоОбработано = 0;
	КоличествоОтправлено = 0;
	КоличествоОшибокЗаполнения = 0;
	КоличествоПодготовленоКОтправке = 0;
	КоличествоПолучениеОтМП = 0;
	КоличествоПредзаполненных = 0;
	
	ПерезаполнитьПоля = Ложь;
	
	ПодготовленныеДляОтправки.Очистить();
	
	МассивЭлементов = Новый Массив;
	
	ИменаЗаполняемыхПолей = Новый Массив;
	
	Для Каждого Элемент Из Элементы.ГруппаКлючевыеПоля.ПодчиненныеЭлементы Цикл
		МассивЭлементов.Добавить(Элемент);	
	КонецЦикла;

	Для Каждого Элемент Из Элементы.ГруппаЗаполнение.ПодчиненныеЭлементы Цикл
		МассивЭлементов.Добавить(Элемент);
		ИменаЗаполняемыхПолей.Добавить(Элемент.Имя);	
	КонецЦикла;
	
	Для Каждого Элемент Из МассивЭлементов Цикл
		Элементы.Удалить(Элемент);
	КонецЦикла;
	
	СтруктураНачальныеКолонки = Новый Структура(НачальныйСписокКолонок);
	УдаляемыеРеквизиты = Новый Массив;
	Для Каждого РеквизитКолонки Из ПолучитьРеквизиты("ДоступныеДокументы") Цикл
		Если СтруктураНачальныеКолонки.Свойство(РеквизитКолонки.Имя) = Ложь Тогда
			УдаляемыеРеквизиты.Добавить(РеквизитКолонки.Путь + "." + РеквизитКолонки.Имя);
		КонецЕсли;
	КонецЦикла;
	
	ИзменитьРеквизиты(, УдаляемыеРеквизиты);
	
	ПоляПодчиненныхФорм.Очистить();
	
	МассивУдалить = Новый Массив;
	Для Каждого ЭлементУсловногоОформления Из УсловноеОформление.Элементы Цикл
		Для Каждого ОформляемоеПоле Из ЭлементУсловногоОформления.Поля.Элементы Цикл
			Если ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ДоступныеДокументы" + "ПредставлениеЗамечаний") Тогда
				МассивУдалить.Добавить(ЭлементУсловногоОформления);
				Прервать;
			КонецЕсли;	
			ЕстьЗаполняемоеПоле = Ложь;
			Для Каждого ИмяПоля Из ИменаЗаполняемыхПолей Цикл
				Если ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(ИмяПоля) Тогда
					МассивУдалить.Добавить(ЭлементУсловногоОформления);
					ЕстьЗаполняемоеПоле = Истина;
					Прервать;
				КонецЕсли;	
			КонецЦикла;
			Если ЕстьЗаполняемоеПоле = Истина Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	Для Каждого ЭлементУсловногоОформления Из МассивУдалить Цикл
		УсловноеОформление.Элементы.Удалить(ЭлементУсловногоОформления);
	КонецЦикла;
	
	ОтправитьУОУ = 0;
	КомментарийУОУ = "";
	
КонецПроцедуры

&НаСервере
Функция НовыйОписаниеРеквизита()
	
	Результат = Новый Структура;
	Результат.Вставить("Тип");
	Результат.Вставить("Заголовок");
	Результат.Вставить("Доступность", Ложь);
	Результат.Вставить("АвтоОтметкаНезаполненного", Ложь);
	Результат.Вставить("ЭтоПодчиненнаяФорма", Ложь);
	Результат.Вставить("МногострочныйРежим", Ложь);
	Результат.Вставить("СписокВыбора", Новый СписокЗначений);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура СобратьРеквизитыРекурсивно(ЭлементРодитель, СтруктураРезультат)
	
	Для Каждого Элемент Из ЭлементРодитель.ПодчиненныеЭлементы Цикл
		Если ТипЗнч(Элемент) = Тип("ГруппаФормы") Тогда
			СобратьРеквизитыРекурсивно(Элемент, СтруктураРезультат);
		ИначеЕсли СтрНачинаетсяС(Элемент.Имя, "Титул")
			Или СтрНачинаетсяС(Элемент.Имя, "ХранимыеДанныеТитул")
			Или СтрНачинаетсяС(Элемент.Имя, "СсылкаТитул")
			Или СтрНачинаетсяС(Элемент.Имя, "Вариант") Тогда
				ОписаниеРеквизита = НовыйОписаниеРеквизита();
				Если ТипЗнч(Элемент) = Тип("ПолеФормы") 
					И (Элемент.Вид = ВидПоляФормы.ПолеВвода Или Элемент.Вид = ВидПоляФормы.ПолеПереключателя) Тогда
					ОписаниеРеквизита.Доступность = Элемент.Видимость И Элемент.Родитель.Видимость;
					Для Каждого ЭлементСписка из Элемент.СписокВыбора Цикл
						ОписаниеРеквизита.СписокВыбора.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);	
					КонецЦикла;
					Если Элемент.Вид = ВидПоляФормы.ПолеВвода И Элемент.АвтоОтметкаНезаполненного = Истина Тогда
						ОписаниеРеквизита.АвтоОтметкаНезаполненного = Истина;	
					КонецЕсли;
					Если Элемент.Вид = ВидПоляФормы.ПолеВвода Тогда
						ОписаниеРеквизита.МногострочныйРежим = Элемент.МногострочныйРежим;
					КонецЕсли;
				КонецЕсли;
				ОписаниеРеквизита.Заголовок = Элемент.Заголовок;
				ПараметрыФормыСтруктура = Новый Структура(ЭтотОбъект.ОписаниеРеквизитовФормы.ПараметрыФормы);
				Если ПараметрыФормыСтруктура.Свойство(Элемент.Имя) Тогда
					МассивТипов = Новый Массив;
					МассивТипов.Добавить(ТипЗнч(ЭтотОбъект[Элемент.Имя]));
					ОписаниеРеквизита.Тип = Новый ОписаниеТипов(МассивТипов);
					Если ЗначениеЗаполнено(ОписаниеРеквизита.Заголовок) = Ложь Тогда
						ОписаниеРеквизита.Заголовок = ЭтотОбъект.ОписаниеРеквизитовФормы.Представления[Элемент.Имя];
					КонецЕсли;
				КонецЕсли;
				СтруктураРезультат.Вставить(Элемент.Имя, ОписаниеРеквизита);
		ИначеЕсли СтрНачинаетсяС(Элемент.Имя, "Заполнить") И ТипЗнч(Элемент) = Тип("КнопкаФормы") Тогда
			ОписаниеРеквизита = НовыйОписаниеРеквизита();
			ЭлементЗаголовок = Элемент.Родитель.ПодчиненныеЭлементы[0];
			ОписаниеРеквизита.Заголовок = СтрЗаменить(ЭлементЗаголовок.Заголовок, ":", "");
			ОписаниеРеквизита.ЭтоПодчиненнаяФорма = Истина;
			ОписаниеРеквизита.Тип = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(150));
			ОписаниеРеквизита.Доступность = Истина;
			СтруктураРезультат.Вставить(Элемент.Имя, ОписаниеРеквизита);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьУсловноеОформлениеТекстаДляСпискаВыбора(Элемент)

	Для Каждого ЭлементСпискаВыбора Из Элемент.СписокВыбора  Цикл
    	Если ЗначениеЗаполнено(ЭлементСпискаВыбора.Представление) И ЭлементСпискаВыбора.Значение <> ЭлементСпискаВыбора.Представление Тогда
			ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	        ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", ЭлементСпискаВыбора.Представление);
	
	        ЭлементУсловия  = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	        ЭлементУсловия.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(Элемент.ПутьКДанным);
	        ЭлементУсловия.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	        ЭлементУсловия.ПравоеЗначение = ЭлементСпискаВыбора.Значение;
	
	        ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	        ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(Элемент.Имя);
	    КонецЕсли;
    КонецЦикла;    

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицу()
	
	ПрефиксТаблицы = "ДоступныеДокументы";
	
	ЭтотОбъект[ПрефиксТаблицы].Очистить();
	ОчиститьПоля();
	
	ИменаРеквизитов = Новый Массив;
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.ХранимыеДанныеЭПД"));
	МассивТипов.Добавить(Тип("Строка"));
	ТипКлючевогоРеквизита = Новый ОписаниеТипов(МассивТипов, , Новый КвалификаторыСтроки(150));
	
	Если ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул2") Тогда
		ИмяКлючевогоРеквизита = "ХранимыеДанныеТитулМедосмотрВодитель";
		ЗаголовокКлючевогоРеквизита = НСтр("ru='Водитель'");
		ИменаРеквизитов.Добавить(ИмяКлючевогоРеквизита);
	ИначеЕсли ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул3") Тогда
		ИмяКлючевогоРеквизита = "ХранимыеДанныеТитулВыпускТранспортноеСредство";
		ЗаголовокКлючевогоРеквизита = НСтр("ru='Транспортное средство'");
		ИменаРеквизитов.Добавить(ИмяКлючевогоРеквизита);
	ИначеЕсли ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул4") Тогда
		ИмяКлючевогоРеквизита = "ХранимыеДанныеТитулВыпускТранспортноеСредство";
		ЗаголовокКлючевогоРеквизита = НСтр("ru='Транспортное средство'");
		ИменаРеквизитов.Добавить(ИмяКлючевогоРеквизита);
	ИначеЕсли ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул5") Тогда
		ИмяКлючевогоРеквизита = "ХранимыеДанныеТитулВыпускТранспортноеСредство";
		ЗаголовокКлючевогоРеквизита = НСтр("ru='Транспортное средство'");
		ИменаРеквизитов.Добавить(ИмяКлючевогоРеквизита);
	ИначеЕсли ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул6") Тогда
		ИмяКлючевогоРеквизита = "ХранимыеДанныеТитулМедосмотрПослеВодитель";
		ЗаголовокКлючевогоРеквизита = НСтр("ru='Водитель'");
		ИменаРеквизитов.Добавить(ИмяКлючевогоРеквизита);
		
	ИначеЕсли ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул2") Тогда
		ИмяКлючевогоРеквизита = "ХранимыеДанныеТитулГрузоотправителяТранспортноеСредство";
		ЗаголовокКлючевогоРеквизита = НСтр("ru='Транспортное средство'");
		ТипКлючевогоРеквизита = Новый ОписаниеТипов("Строка");
	ИначеЕсли ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул4") Тогда
		ИмяКлючевогоРеквизита = "ХранимыеДанныеТитулГрузоотправителяТранспортноеСредство";
		ЗаголовокКлючевогоРеквизита = НСтр("ru='Транспортное средство'");
		ТипКлючевогоРеквизита = Новый ОписаниеТипов("Строка");
	КонецЕсли;	
	
	СтруктураРеквизитовТитула = Новый Структура;
	
	ОписаниеКлючевогоРеквизита = НовыйОписаниеРеквизита();
	ОписаниеКлючевогоРеквизита.Тип = ТипКлючевогоРеквизита;
	ОписаниеКлючевогоРеквизита.Заголовок = ЗаголовокКлючевогоРеквизита;
	ОписаниеКлючевогоРеквизита.АвтоОтметкаНезаполненного = Истина;
	СтруктураРеквизитовТитула.Вставить(ИмяКлючевогоРеквизита, ОписаниеКлючевогоРеквизита);
	
	РеквизитыДобавление = Новый Массив;
	
	СтраницаТитула = Элементы.Найти("Страница" + ЭтотОбъект.ПрефиксТитула);	
	СобратьРеквизитыРекурсивно(СтраницаТитула, СтруктураРеквизитовТитула);
	
	ОписаниеРеквизитовТекущегоТитула = ОбменСГИСЭПДКлиентСервер.СкопироватьВФиксированноеЗначенияРекурсивно(СтруктураРеквизитовТитула);
	
	ДобавленоПредставлениеЗамечаний = Ложь;
	ПроверяемыеНаЗаполненностьТаблицы = Новый Массив;
	Для Каждого КиЗ Из СтруктураРеквизитовТитула Цикл
		ИменаРеквизитов.Добавить(КиЗ.Ключ);
		НовыйРеквизит = Новый РеквизитФормы(КиЗ.Ключ, КиЗ.Значение.Тип, ПрефиксТаблицы, КиЗ.Значение.Заголовок);
		РеквизитыДобавление.Добавить(НовыйРеквизит);
		Если КиЗ.Значение.ЭтоПодчиненнаяФорма Тогда
			ИмяТаблицы = СтрЗаменить(КиЗ.Ключ, "Заполнить", "");
			ПроверяемыеНаЗаполненностьТаблицы.Добавить(ИмяТаблицы);
			НовыйРеквизит = Новый РеквизитФормы("Заполнено" + ИмяТаблицы, 
				Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(2, 0, ДопустимыйЗнак.Неотрицательный)), ПрефиксТаблицы);
			РеквизитыДобавление.Добавить(НовыйРеквизит);	
		ИначеЕсли СтрНачинаетсяС(СтрЗаменить(КиЗ.Ключ, ЭтотОбъект.ПрефиксТитула, ""), "Замечания") 
			И КиЗ.Значение.Тип.Типы().Найти(Тип("Строка")) <> Неопределено
			И ДобавленоПредставлениеЗамечаний = Ложь Тогда
				НовыйРеквизит = Новый РеквизитФормы("ПредставлениеЗамечаний", КиЗ.Значение.Тип, ПрефиксТаблицы, "Замечания");
				РеквизитыДобавление.Добавить(НовыйРеквизит);	
				ДобавленоПредставлениеЗамечаний = Истина;
		КонецЕсли;
	КонецЦикла;
	
	ИзменитьРеквизиты(РеквизитыДобавление);
	
	МассивПолейЗамечаний = Новый Массив;
	Для Каждого КиЗ Из СтруктураРеквизитовТитула Цикл
		Если КиЗ.Ключ = ИмяКлючевогоРеквизита Тогда
			ЭлементРодитель = Элементы.ГруппаКлючевыеПоля;
		Иначе
			ЭлементРодитель = Элементы.ГруппаЗаполнение;
		КонецЕсли;
		НовыйЭлемент = Элементы.Добавить(ПрефиксТаблицы + КиЗ.Ключ, Тип("ПолеФормы"), ЭлементРодитель);	
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным = ПрефиксТаблицы + "." + КиЗ.Ключ;
		НовыйЭлемент.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Лево;
		Если КиЗ.Значение.СписокВыбора.Количество() > 0 Тогда
			Для Каждого ЭлементСписка Из КиЗ.Значение.СписокВыбора Цикл
				НовыйЭлемент.СписокВыбора.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);	
			КонецЦикла;
			НовыйЭлемент.РежимВыбораИзСписка = Истина;
			ДобавитьУсловноеОформлениеТекстаДляСпискаВыбора(НовыйЭлемент);
		КонецЕсли;
		НовыйЭлемент.АвтоОтметкаНезаполненного = КиЗ.Значение.АвтоОтметкаНезаполненного;
		НовыйЭлемент.ТолькоПросмотр = Не КиЗ.Значение.Доступность;
		Если КиЗ.Значение.Тип.Типы().Найти(Тип("Дата")) <> Неопределено Тогда
			НовыйЭлемент.Ширина = 12;	
		КонецЕсли;
		Если СтрНачинаетсяС(КиЗ.Ключ, "ХранимыеДанные") Тогда
			НовыйЭлемент.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ХранимыеДанныеЭПД");
			НовыйЭлемент.УстановитьДействие("НачалоВыбора", "Подключаемый_ХранимыеДанныеНачалоВыбора");
			НовыйЭлемент.УстановитьДействие("ПриИзменении", "Подключаемый_ХранимыеДанныеПриИзменении");
			НовыйЭлемент.УстановитьДействие("Открытие", "Подключаемый_ХранимыеДанныеОткрытие");
			НовыйЭлемент.УстановитьДействие("Автоподбор", "Подключаемый_ХранимыеДанныеАвтоподбор");
			НовыйЭлемент.ИсторияВыбораПриВводе = ИсторияВыбораПриВводе.НеИспользовать;
		ИначеЕсли КиЗ.Значение.ЭтоПодчиненнаяФорма Тогда
			НовыйЭлемент.ГиперссылкаЯчейки = Истина;
			НовыйЭлемент.РедактированиеТекста = Ложь;
			НовыйЭлемент.ЦветТекста = ЦветаСтиля.ГиперссылкаЦвет;
			ПоляПодчиненныхФорм.Добавить(НовыйЭлемент.Имя, "<не заполнено>");
			
			ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
		
			ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		    ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(ПрефиксТаблицы + КиЗ.Ключ);
		    
		    ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", "<не заполнено>");
		    ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста",
				ЦветаСтиля.ЦветСостоянияСерыйЭПД);
		
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
				ЭлементУсловногоОформления.Отбор,
				ПрефиксТаблицы + "." + "Заполнено" + СтрЗаменить(КиЗ.Ключ, "Заполнить", ""),
				0,
				ВидСравненияКомпоновкиДанных.Равно,
				,
				Истина);
		ИначеЕсли СтрНачинаетсяС(СтрЗаменить(КиЗ.Ключ, ЭтотОбъект.ПрефиксТитула, ""), "Замечания")
			И КиЗ.Значение.Тип.Типы().Найти(Тип("Строка")) <> Неопределено Тогда
			НовыйЭлемент.Видимость = Ложь;	
			МассивПолейЗамечаний.Добавить(КиЗ.Ключ);
			Если Элементы.Найти(ПрефиксТаблицы + "ПредставлениеЗамечаний") = Неопределено Тогда
				НовыйЭлемент = Элементы.Добавить(ПрефиксТаблицы + "ПредставлениеЗамечаний", Тип("ПолеФормы"), ЭлементРодитель);	
				НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
				НовыйЭлемент.ПутьКДанным = ПрефиксТаблицы + "." + "ПредставлениеЗамечаний";
				НовыйЭлемент.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Лево;
				НовыйЭлемент.ГиперссылкаЯчейки = Истина;
				НовыйЭлемент.РедактированиеТекста = Ложь;
				НовыйЭлемент.ЦветТекста = ЦветаСтиля.ГиперссылкаЦвет;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	Для Каждого Элемент Из Элементы.ГруппаЗаполнение.ПодчиненныеЭлементы Цикл
		ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(Элемент.Имя);	
	КонецЦикла;
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		ЭлементУсловногоОформления.Отбор,
		ПрефиксТаблицы + "." + "ОтправитьУОУ",
		1,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		Истина);
	
	Если МассивПолейЗамечаний.Количество() > 0 Тогда
		ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
		ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	    ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(ПрефиксТаблицы + "ПредставлениеЗамечаний");
	    
	    ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", "<не заполнено>");
	    ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста",
			ЦветаСтиля.ЦветСостоянияСерыйЭПД);
	
		ГруппаОтборЗамечания = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
								ЭлементУсловногоОформления.Отбор,
								"Замечания",
								ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);		
		Для Каждого ИмяПоля Из МассивПолейЗамечаний Цикл   
		    ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
				ГруппаОтборЗамечания,
				ПрефиксТаблицы + "." + ИмяПоля,
				,
				ВидСравненияКомпоновкиДанных.НеЗаполнено,
				,
				Истина);
		КонецЦикла;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	ВремяНачалаСекунд = 3600 * Час(ВремяНачала) + 60 * Минута(ВремяНачала)+ Секунда(ВремяНачала);
	ВремяОкончанияСекунд = 3600 * Час(ВремяОкончания) + 60 * Минута(ВремяОкончания)+ Секунда(ВремяОкончания);
	
	ИнтервалНачало = СписокИнтервал.ДатаНачала + ВремяНачалаСекунд;
	ИнтервалОкончание = НачалоДня(?(ЗначениеЗаполнено(СписокИнтервал.ДатаОкончания), 
		СписокИнтервал.ДатаОкончания, ТекущаяДатаСеанса())) + ВремяОкончанияСекунд;
		
	Запрос.УстановитьПараметр("ИнтервалНачало", ИнтервалНачало);
	Запрос.УстановитьПараметр("ИнтервалОкончание", ИнтервалОкончание);
	Запрос.УстановитьПараметр("ВремяНачалаСекунд", ВремяНачалаСекунд);
	Запрос.УстановитьПараметр("ВремяОкончанияСекунд", ВремяОкончанияСекунд);
	
	ВремяНачалаЗапроса = ВремяНачала;
	ВремяОкончанияЗапроса = ВремяОкончания;
	
	ГруппаКлючевогоРеквизита = СтрЗаменить(ИмяКлючевогоРеквизита, "ХранимыеДанные", "");
	
	НужныДанныеДонора = Ложь;
	Если ИмяКлючевогоРеквизита = "ХранимыеДанныеТитулМедосмотрВодитель"
		Или ИмяКлючевогоРеквизита = "ХранимыеДанныеТитулМедосмотрПослеВодитель" Тогда
			
		ИмяГруппыДонора = "Водитель";
			
		ИмяРеквизитаДонора = "ХранимыеДанные" + ИмяГруппыДонора;
		ИмяТаблицыДонора = "ТитулОформлениеВодители";	
		ТитулДонор = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул1");
		
		ИменаРеквизитовДонора = Новый Массив;
		ИменаРеквизитовДонора.Добавить(ИмяРеквизитаДонора);
		
		ОписаниеГруппыДанных = ОбменСГИСЭПДКлиентСервер.ОписаниеГруппыДанных(ИмяГруппыДонора, ЭтотОбъект.ИмяОбъекта);
		Для Каждого ИмяРеквизита Из ОписаниеГруппыДанных.Реквизиты Цикл
			ИменаРеквизитовДонора.Добавить(ИмяРеквизита);
		КонецЦикла;
		
		Запрос.УстановитьПараметр("ТитулДонор", ТитулДонор);
		Запрос.УстановитьПараметр("ИменаРеквизитовДонора", ИменаРеквизитовДонора);	
		Запрос.УстановитьПараметр("ИмяТаблицыДонора", ИмяТаблицыДонора);
		
		НужныДанныеДонора = Истина;
		
	ИначеЕсли ИмяКлючевогоРеквизита = "ХранимыеДанныеТитулВыпускТранспортноеСредство" Тогда
		
		ИмяГруппыДонора = "ТитулОформлениеТранспортноеСредство";
		
		ИмяРеквизитаДонора = "ХранимыеДанные" + ИмяГруппыДонора;
		ИмяТаблицыДонора = "";	
		ТитулДонор = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул1");
		
		ИменаРеквизитовДонора = Новый Массив;
		ИменаРеквизитовДонора.Добавить(ИмяРеквизитаДонора);
		
		ОписаниеГруппыДанных = ОбменСГИСЭПДКлиентСервер.ОписаниеГруппыДанных(ИмяГруппыДонора, ЭтотОбъект.ИмяОбъекта);
		Для Каждого ИмяРеквизита Из ОписаниеГруппыДанных.Реквизиты Цикл
			ИменаРеквизитовДонора.Добавить(ИмяГруппыДонора + ИмяРеквизита);
		КонецЦикла;
		Если ТекущийТитул = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭПЛ_Титул4") Тогда
			ИменаРеквизитовДонора.Добавить("ТитулОформлениеПризнакНачалаРейса");
		КонецЕсли;
			
		Запрос.УстановитьПараметр("ТитулДонор", ТитулДонор);
		Запрос.УстановитьПараметр("ИменаРеквизитовДонора", ИменаРеквизитовДонора);	
		Запрос.УстановитьПараметр("ИмяТаблицыДонора", ИмяТаблицыДонора);
		
		НужныДанныеДонора = Истина;
		
	ИначеЕсли ИмяКлючевогоРеквизита = "ХранимыеДанныеТитулГрузоотправителяТранспортноеСредство" Тогда
		
		ИмяГруппыДонора = "ТитулГрузоотправителяТранспортноеСредство";
		
		ИмяРеквизитаДонора = "ХранимыеДанные" + ИмяГруппыДонора;
		
		ТитулДонор = ПредопределенноеЗначение("Перечисление.ТипыЭлементовРегламентаЭДО.ЭТрН_Титул1");
		ИмяТаблицыДонора = "";
		
		ИменаРеквизитовДонора = Новый Массив;
		ИменаРеквизитовДонора.Добавить(ИмяРеквизитаДонора);
		
		ОписаниеГруппыДанных = ОбменСГИСЭПДКлиентСервер.ОписаниеГруппыДанных(ИмяГруппыДонора, ЭтотОбъект.ИмяОбъекта);
		Для Каждого ИмяРеквизита Из ОписаниеГруппыДанных.Реквизиты Цикл
			ИменаРеквизитовДонора.Добавить(ИмяГруппыДонора + ИмяРеквизита);
		КонецЦикла;
		
		Запрос.УстановитьПараметр("ТитулДонор", ТитулДонор);
		Запрос.УстановитьПараметр("ИменаРеквизитовДонора", ИменаРеквизитовДонора);	
		Запрос.УстановитьПараметр("ИмяТаблицыДонора", ИмяТаблицыДонора);
		
		НужныДанныеДонора = Истина;
		
	КонецЕсли;
	
	МожноЗаполнитьПоМП = Ложь;
	Если ОбщегоНазначения.ПодсистемаСуществует("ЭлектронноеВзаимодействие.ОбменСГИСЭПД.СервисВзаимодействияМПЭПД") Тогда
		МодульСервисВзаимодействияМПЭПДКлиентСервер = ОбщегоНазначения.ОбщийМодуль("СервисВзаимодействияМПЭПДКлиентСервер");
		ВидыСообщенийМП = Новый Массив;
		ВидСообщенияСообщение = МодульСервисВзаимодействияМПЭПДКлиентСервер.ВидВзаимодействияСМП("Сообщение");
		ВидыСообщенийМП.Добавить(ВидСообщенияСообщение);
		ВидСообщенияПривязка = МодульСервисВзаимодействияМПЭПДКлиентСервер.ВидВзаимодействияСМП("ПривязкаВодителя");
		ВидыСообщенийМП.Добавить(ВидСообщенияПривязка);
		СоответствиеТитуловТипамМП = МодульСервисВзаимодействияМПЭПДКлиентСервер.СоответствиеТитуловТипамМП(Истина);
		Запрос.УстановитьПараметр("ВидыСообщенийМП", ВидыСообщенийМП);
		ТипСообщенияМП = СоответствиеТитуловТипамМП.Получить(ТекущийТитул);
		МожноЗаполнитьПоМП = ТипСообщенияМП <> Неопределено;
		
		КартинкаКоллекцияСобытияМП = МодульСервисВзаимодействияМПЭПДКлиентСервер.КартинкаКоллекцияСобытияМобильногоПриложенияЭПД();	
		Элементы.ДоступныеДокументыКартинкаМобильноеПриложение.КартинкаЗначений = КартинкаКоллекцияСобытияМП;
	КонецЕсли;
	
	СоответствиеШагов = ОбменСГИСЭПДКлиентСервер.СоответствиеТитуловИШагов();
	Запрос.УстановитьПараметр("ТекущийШаг", СоответствиеШагов.Получить(ТекущийТитул));
	Запрос.УстановитьПараметр("ТекущийТитул", ТекущийТитул);
	Запрос.УстановитьПараметр("ИмяКлючевогоРеквизита", ИмяКлючевогоРеквизита);
	Запрос.УстановитьПараметр("ИменаРеквизитов", ИменаРеквизитов);
	Запрос.УстановитьПараметр("ПроверяемыеНаЗаполненностьТаблицы", ПроверяемыеНаЗаполненностьТаблицы);
	
	ДоступныеСостоянияЭДО = Новый Массив;
	ДоступныеСостоянияЭДО.Добавить(Перечисления.СостоянияДокументовЭДО.ТребуетсяОтправка);
	ДоступныеСостоянияЭДО.Добавить(Перечисления.СостоянияДокументовЭДО.ТребуетсяПовторнаяОтправка);
	ДоступныеСостоянияЭДО.Добавить(Перечисления.СостоянияДокументовЭДО.ТребуетсяПодписание);
	ДоступныеСостоянияЭДО.Добавить(Перечисления.СостоянияДокументовЭДО.ТребуетсяУточнение);
	// Временно, сейчас нужно для ЭПЛ
	ДоступныеСостоянияЭДО.Добавить(Перечисления.СостоянияДокументовЭДО.ОжидаетсяПодтверждение);
	
	Запрос.УстановитьПараметр("ДоступныеСостоянияЭДО", ДоступныеСостоянияЭДО);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	РеестрЭПД.Ссылка,
	|	РеестрЭПД.Организация,
	|	РеестрЭПД.НомерЭПД,
	|	РеестрЭПД.ДатаЭПД,
	|	РеестрЭПД.ДатаДокументаИБ,
	|	СостоянияПоОбъектамУчетаЭДО.СостояниеЭДО КАК СостояниеЭДО
	|ПОМЕСТИТЬ ВТ_ДОКУМЕНТЫ
	|ИЗ
	|	РегистрСведений.РеестрЭПД КАК РеестрЭПД
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияПоОбъектамУчетаЭДО КАК СостоянияПоОбъектамУчетаЭДО
	|		ПО СостоянияПоОбъектамУчетаЭДО.СсылкаНаОбъект = РеестрЭПД.Ссылка
	|		И СостоянияПоОбъектамУчетаЭДО.СостояниеЭДО В (&ДоступныеСостоянияЭДО)
	|ГДЕ
	|	РеестрЭПД.ТекущийШаг = &ТекущийШаг
	|	И РеестрЭПД.ТекущийШагВыполнен = ЛОЖЬ
	|	И РеестрЭПД.ПометкаУдаления = ЛОЖЬ
	|	И &Организация
	|	И РеестрЭПД.ДатаДокументаИБ МЕЖДУ &ИнтервалНачало И &ИнтервалОкончание
	|	И 3600 * ЧАС(РеестрЭПД.ДатаДокументаИБ) + 60 * МИНУТА(РеестрЭПД.ДатаДокументаИБ) + СЕКУНДА(РеестрЭПД.ДатаДокументаИБ)
	|		МЕЖДУ &ВремяНачалаСекунд И &ВремяОкончанияСекунд
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДОКУМЕНТЫ.Ссылка,
	|	ВТ_ДОКУМЕНТЫ.Организация,
	|	ВерсииТитуловЭПД.Титул,
	|	МАКСИМУМ(ВерсииТитуловЭПД.НомерВерсии) КАК НомерВерсии
	|ПОМЕСТИТЬ ВТ_ПОСЛЕДНИЕ_ВЕРСИИ
	|ИЗ
	|	ВТ_ДОКУМЕНТЫ КАК ВТ_ДОКУМЕНТЫ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ВерсииТитуловЭПД КАК ВерсииТитуловЭПД
	|		ПО ВТ_ДОКУМЕНТЫ.Ссылка = ВерсииТитуловЭПД.Документ
	|		И ВТ_ДОКУМЕНТЫ.Организация = ВерсииТитуловЭПД.Организация
	|		И (ВерсииТитуловЭПД.Титул = &ТекущийТитул
	|		ИЛИ ВерсииТитуловЭПД.Титул = &ТитулДонор)
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ДОКУМЕНТЫ.Ссылка,
	|	ВТ_ДОКУМЕНТЫ.Организация,
	|	ВерсииТитуловЭПД.Титул
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПОСЛЕДНИЕ_ВЕРСИИ.Ссылка,
	|	ЗначенияРеквизитовДокументовЭПД.ИмяТабличнойЧасти,
	|	МАКСИМУМ(ЗначенияРеквизитовДокументовЭПД.НомерСтрокиРеквизита) КАК Количество
	|ИЗ
	|	ВТ_ПОСЛЕДНИЕ_ВЕРСИИ КАК ВТ_ПОСЛЕДНИЕ_ВЕРСИИ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияРеквизитовДокументовЭПД КАК ЗначенияРеквизитовДокументовЭПД
	|		ПО ВТ_ПОСЛЕДНИЕ_ВЕРСИИ.Ссылка = ЗначенияРеквизитовДокументовЭПД.Документ
	|		И ВТ_ПОСЛЕДНИЕ_ВЕРСИИ.Организация = ЗначенияРеквизитовДокументовЭПД.Организация
	|		И ВТ_ПОСЛЕДНИЕ_ВЕРСИИ.Титул = ЗначенияРеквизитовДокументовЭПД.Титул
	|		И ВТ_ПОСЛЕДНИЕ_ВЕРСИИ.НомерВерсии = ЗначенияРеквизитовДокументовЭПД.НомерВерсии
	|		И ЗначенияРеквизитовДокументовЭПД.ИмяТабличнойЧасти В (&ПроверяемыеНаЗаполненностьТаблицы)
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПОСЛЕДНИЕ_ВЕРСИИ.Ссылка,
	|	ЗначенияРеквизитовДокументовЭПД.ИмяТабличнойЧасти";
	
	
	// Данные из мобильного приложения
	Если МожноЗаполнитьПоМП	= Истина Тогда
		Запрос.Текст = Запрос.Текст + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
		Запрос.Текст = Запрос.Текст + "ВЫБРАТЬ
		|	ВТ_ДОКУМЕНТЫ.Ссылка,
		|	КэшВзаимодействияМПЭПД.ВидСообщения,
		|	КэшВзаимодействияМПЭПД.ДанныеСообщения,
		|	КэшВзаимодействияМПЭПД.Дата,
		|	ПодключенныеМПЭПД.Наименование КАК МобильноеПриложение,
		|	ПодключенныеМПЭПД.Идентификатор,
		|	ПодключенныеМПЭПД.Удален,
		|	КэшВзаимодействияМПЭПД.ИдентификаторМП
		|ИЗ
		|	РегистрСведений.КэшВзаимодействияМПЭПД КАК КэшВзаимодействияМПЭПД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДОКУМЕНТЫ
		|		ПО КэшВзаимодействияМПЭПД.ДокументЭПД = ВТ_ДОКУМЕНТЫ.Ссылка
		|		И КэшВзаимодействияМПЭПД.ВидСообщения В(&ВидыСообщенийМП)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПодключенныеМПЭПД КАК ПодключенныеМПЭПД
		|		ПО КэшВзаимодействияМПЭПД.ИдентификаторЭДО = ПодключенныеМПЭПД.ИдентификаторЭДО
		|		И КэшВзаимодействияМПЭПД.ИдентификаторМП = ПодключенныеМПЭПД.ИдентификаторМП
		|УПОРЯДОЧИТЬ ПО 
		|	Дата УБЫВ";
	КонецЕсли;
	
	// Реквизиты документов по метаданным
	Запрос.Текст = Запрос.Текст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ 
	|	ВТ_ДОКУМЕНТЫ.Ссылка";
	
	Для Каждого КиЗ Из ИменаРеквизитовДокумента Цикл
		Запрос.Текст = Запрос.Текст + ",
		|	Документ." + КиЗ.Ключ;
	КонецЦикла;
	
	Запрос.Текст = Запрос.Текст + "
	|ИЗ 
	|	ВТ_ДОКУМЕНТЫ КАК ВТ_ДОКУМЕНТЫ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ИмяОбъекта + " КАК Документ
	|		ПО ВТ_ДОКУМЕНТЫ.Ссылка = Документ.Ссылка";
	
	// Основной запрос документов и реквизитов
	Запрос.Текст = Запрос.Текст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Запрос.Текст = Запрос.Текст + "ВЫБРАТЬ
	|	ВТ_ДОКУМЕНТЫ.Ссылка КАК Ссылка,
	|	ВТ_ДОКУМЕНТЫ.Организация КАК Организация,
	|	ВТ_ДОКУМЕНТЫ.НомерЭПД КАК НомерЭПД,
	|	ВТ_ДОКУМЕНТЫ.ДатаЭПД КАК ДатаЭПД,
	|	ВТ_ДОКУМЕНТЫ.ДатаДокументаИБ КАК ДатаДокументаИБ,
	|	ЕСТЬNULL(ВТ_ПОСЛЕДНИЕ_ВЕРСИИ.НомерВерсии, 0) КАК НомерВерсии,
	|	ЗначенияРеквизитовДокументовЭПД.ИмяРеквизита,
	|	ЗначенияРеквизитовДокументовЭПД.ЗначениеРеквизита,
	|	ЗначенияРеквизитовДокументовЭПД.ЗначениеРеквизитаСсылка,
	|	ЗначенияРеквизитовДокументовЭПД.ЗначениеРеквизитаСтрока,
	|	ЗначенияРеквизитовДокументовЭПД.ТипРеквизита,
	|	ЛОЖЬ КАК ЭтоРеквизитДонора
	|ИЗ
	|	ВТ_ДОКУМЕНТЫ КАК ВТ_ДОКУМЕНТЫ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияРеквизитовДокументовЭПД КАК ЗначенияРеквизитовДокументовЭПД
	|		ПО ВТ_ДОКУМЕНТЫ.Ссылка = ЗначенияРеквизитовДокументовЭПД.Документ
	|		И ВТ_ДОКУМЕНТЫ.Организация = ЗначенияРеквизитовДокументовЭПД.Организация
	|		И ЗначенияРеквизитовДокументовЭПД.Титул = &ТекущийТитул
	|		И ЗначенияРеквизитовДокументовЭПД.ИмяРеквизита В (&ИменаРеквизитов)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПОСЛЕДНИЕ_ВЕРСИИ
	|		ПО ЗначенияРеквизитовДокументовЭПД.Документ = ВТ_ПОСЛЕДНИЕ_ВЕРСИИ.Ссылка
	|		И ВТ_ПОСЛЕДНИЕ_ВЕРСИИ.Титул = &ТекущийТитул
	|		И ЗначенияРеквизитовДокументовЭПД.НомерВерсии = ВТ_ПОСЛЕДНИЕ_ВЕРСИИ.НомерВерсии";
	
	Если НужныДанныеДонора Тогда
		Запрос.Текст = Запрос.Текст + "	
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ДОКУМЕНТЫ.Ссылка,
		|	ВТ_ДОКУМЕНТЫ.Организация,
		|	ВТ_ДОКУМЕНТЫ.НомерЭПД,
		|	ВТ_ДОКУМЕНТЫ.ДатаЭПД,
		|	ВТ_ДОКУМЕНТЫ.ДатаДокументаИБ,
		|	ЕСТЬNULL(ВТ_ПОСЛЕДНИЕ_ВЕРСИИ.НомерВерсии, 0),
		|	ЗначенияРеквизитовДокументовЭПД.ИмяРеквизита,
		|	ЗначенияРеквизитовДокументовЭПД.ЗначениеРеквизита,
		|	ЗначенияРеквизитовДокументовЭПД.ЗначениеРеквизитаСсылка,
		|	ЗначенияРеквизитовДокументовЭПД.ЗначениеРеквизитаСтрока,
		|	ЗначенияРеквизитовДокументовЭПД.ТипРеквизита,
		|	ИСТИНА
		|ИЗ
		|	ВТ_ДОКУМЕНТЫ КАК ВТ_ДОКУМЕНТЫ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияРеквизитовДокументовЭПД КАК ЗначенияРеквизитовДокументовЭПД
		|		ПО ВТ_ДОКУМЕНТЫ.Ссылка = ЗначенияРеквизитовДокументовЭПД.Документ
		|		И ВТ_ДОКУМЕНТЫ.Организация = ЗначенияРеквизитовДокументовЭПД.Организация
		|		И ЗначенияРеквизитовДокументовЭПД.Титул = &ТитулДонор
		|		И ЗначенияРеквизитовДокументовЭПД.ИмяТабличнойЧасти = &ИмяТаблицыДонора
		|		И ЗначенияРеквизитовДокументовЭПД.ИмяРеквизита В(&ИменаРеквизитовДонора)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПОСЛЕДНИЕ_ВЕРСИИ
		|		ПО ЗначенияРеквизитовДокументовЭПД.Документ = ВТ_ПОСЛЕДНИЕ_ВЕРСИИ.Ссылка
		|		И ВТ_ПОСЛЕДНИЕ_ВЕРСИИ.Титул = &ТитулДонор
		|		И ЗначенияРеквизитовДокументовЭПД.НомерВерсии = ВТ_ПОСЛЕДНИЕ_ВЕРСИИ.НомерВерсии";
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + "
	|ИТОГИ
	|	МАКСИМУМ(Организация) КАК Организация,
	|	МАКСИМУМ(НомерЭПД) КАК НомерЭПД,
	|	МАКСИМУМ(ДатаЭПД) КАК ДатаЭПД,
	|	МАКСИМУМ(ДатаДокументаИБ) КАК ДатаДокументаИБ,
	|	МАКСИМУМ(НомерВерсии) КАК НомерВерсии
	|ПО
	|	Ссылка";
	
	Если ЗначениеЗаполнено(Организация) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Организация", "РеестрЭПД.Организация = &Организация");
		Запрос.УстановитьПараметр("Организация", Организация);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Организация", "ИСТИНА");	
	КонецЕсли;
	
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	РезультатРеквизитыПоМетаданным = РезультатПакета[РезультатПакета.ВГраница() - 1];
	РеквизитыПоМетаданным =  РезультатРеквизитыПоМетаданным.Выгрузить();
	
	СообщенияМП = Неопределено;
	Если МожноЗаполнитьПоМП	= Истина Тогда
		РезультатСообщенияМП = РезультатПакета[РезультатПакета.ВГраница() - 2];
		Если РезультатСообщенияМП.Пустой() = Ложь Тогда
			СообщенияМП =  РезультатСообщенияМП.Выгрузить();
		КонецЕсли;
	КонецЕсли;
	
	ЗаполненностьТаблиц = Неопределено;
	РезультатЗаполненностьТаблиц = РезультатПакета[РезультатПакета.ВГраница() - 2 - ?(МожноЗаполнитьПоМП = Истина, 1, 0)];
	Если РезультатЗаполненностьТаблиц.Пустой() = Ложь Тогда
		ЗаполненностьТаблиц =  РезультатЗаполненностьТаблиц.Выгрузить();
	КонецЕсли;
	
	СтруктураРеквизитовЗаполнение = ОбменСГИСЭПДКлиентСервер.СкопироватьИзФиксированногоЗначенияРекурсивно(СтруктураРеквизитов);	
	
	ПрефиксТитулаДонора = ОбменСГИСЭПДКлиентСервер.ПрефиксТитулаРеквизита(
							?(ЗначениеЗаполнено(ИмяТаблицыДонора), ИмяТаблицыДонора, ИмяРеквизитаДонора), 
							ЭтотОбъект.ИмяОбъекта);
	
	ВыборкаДокумент = РезультатПакета[РезультатПакета.ВГраница()].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаДокумент.Следующий() Цикл
		НоваяСтрока = ДоступныеДокументы.Добавить();
		
		НомерВерсии = НоваяСтрока.ПолучитьИдентификатор() + 1;
		ОтображаемыеВерсииТитулов.Вставить(ЭтотОбъект.ПрефиксТитула, НомерВерсии);
		
		НоваяСтрока.Пометка = Истина;
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДокумент);
		Выборка = ВыборкаДокумент.Выбрать();
		ПредставлениеГруппы = "";
		Пока Выборка.Следующий() Цикл
			Если Выборка.ТипРеквизита = ПредопределенноеЗначение("Перечисление.ТипыРеквизитовЭПД.НеограниченнаяСтрока")
				И ЗначениеЗаполнено(Выборка.ЗначениеРеквизитаСтрока) Тогда
				ЗначениеРеквизита = Выборка.ЗначениеРеквизитаСтрока;
			ИначеЕсли Выборка.ТипРеквизита = ПредопределенноеЗначение("Перечисление.ТипыРеквизитовЭПД.ПростойКромеСтроки")
				И ЗначениеЗаполнено(Выборка.ЗначениеРеквизита) Тогда
				ЗначениеРеквизита = Выборка.ЗначениеРеквизита;
			ИначеЕсли Выборка.ТипРеквизита = ПредопределенноеЗначение("Перечисление.ТипыРеквизитовЭПД.СсылочныйТип")
				И ЗначениеЗаполнено(Выборка.ЗначениеРеквизитаСсылка) Тогда
				ЗначениеРеквизита = Выборка.ЗначениеРеквизитаСсылка;
			Иначе
				ЗначениеРеквизита = Неопределено;
			КонецЕсли;
			Если Выборка.ЭтоРеквизитДонора Тогда
				Если Выборка.ИмяРеквизита = ИмяРеквизитаДонора Тогда
					НоваяСтрока[ИмяКлючевогоРеквизита] = ЗначениеРеквизита;
				Иначе			
					ВерсииТитула = Неопределено;
					СтруктураРеквизитовЗаполнение.Свойство(ЭтотОбъект.ПрефиксТитула, ВерсииТитула);
					Если ВерсииТитула = Неопределено Тогда
						ВерсииТитула = Новый Массив;
					КонецЕсли;
					Если НомерВерсии > ВерсииТитула.ВГраница() Или ВерсииТитула[НомерВерсии] = Неопределено Тогда
						РеквизитыДокумента = Новый Структура;
						ВерсииТитула.Вставить(НомерВерсии, РеквизитыДокумента);
					Иначе
						РеквизитыДокумента = ВерсииТитула[НомерВерсии];	
					КонецЕсли;
					Если СтрНачинаетсяС(Выборка.ИмяРеквизита, ИмяГруппыДонора) Тогда
						ИмяРеквизита = СтрЗаменить(Выборка.ИмяРеквизита, ИмяГруппыДонора, ГруппаКлючевогоРеквизита);
					ИначеЕсли ЗначениеЗаполнено(ПрефиксТитулаДонора) 
					И СтрНачинаетсяС(Выборка.ИмяРеквизита, ПрефиксТитулаДонора) Тогда
						ИмяРеквизита = СтрЗаменить(Выборка.ИмяРеквизита, ПрефиксТитулаДонора, ЭтотОбъект.ПрефиксТитула);	
					Иначе
						ИмяРеквизита = ГруппаКлючевогоРеквизита + Выборка.ИмяРеквизита;
					КонецЕсли;
					Если НоваяСтрока.Свойство(ИмяРеквизита) Тогда
						НоваяСтрока[ИмяРеквизита] = ЗначениеРеквизита;
					КонецЕсли;
					РеквизитыДокумента.Вставить(ИмяРеквизита, ЗначениеРеквизита);
					СтруктураРеквизитовЗаполнение.Вставить(ЭтотОбъект.ПрефиксТитула, ВерсииТитула);
				КонецЕсли;
			ИначеЕсли ЗначениеЗаполнено(НоваяСтрока[Выборка.ИмяРеквизита]) = Ложь Тогда
				НоваяСтрока[Выборка.ИмяРеквизита] = ЗначениеРеквизита;	
				
				Если Выборка.ИмяРеквизита <> ИмяКлючевогоРеквизита
				И ЗначениеЗаполнено(НоваяСтрока[Выборка.ИмяРеквизита]) Тогда
					НоваяСтрока.РеквизитыЗаполнены = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		// Удалим строки с незаполненными ключевыми полями
		Если ЗначениеЗаполнено(НоваяСтрока[ИмяКлючевогоРеквизита]) = Ложь Тогда
			ДоступныеДокументы.Удалить(НоваяСтрока);	
			Продолжить;
		КонецЕсли;
		
		КоличествоВыбрано = КоличествоВыбрано + 1;
		
		СтрокиРеквизитовПоМетаданным = РеквизитыПоМетаданным.Найти(ВыборкаДокумент.Ссылка, "Ссылка");
		Если СтрокиРеквизитовПоМетаданным <> Неопределено Тогда
			Для Каждого Колонка Из РеквизитыПоМетаданным.Колонки Цикл
				Если ЗначениеЗаполнено(СтрокиРеквизитовПоМетаданным[Колонка.Имя]) = Ложь Тогда
					Продолжить;
				КонецЕсли;
				ПрефиксТитулаРеквизита = ОбменСГИСЭПДКлиентСервер.ПрефиксТитулаРеквизита(Колонка.Имя, ЭтотОбъект.ИмяОбъекта);
				Если ПрефиксТитулаРеквизита <> "" Тогда
					ВерсииТитула = Неопределено;
					СтруктураРеквизитовЗаполнение.Свойство(ПрефиксТитулаРеквизита, ВерсииТитула);
					Если ВерсииТитула = Неопределено Тогда
						ВерсииТитула = Новый Массив;
					КонецЕсли;
					Если НомерВерсии > ВерсииТитула.ВГраница() Или ВерсииТитула[НомерВерсии] = Неопределено Тогда
						РеквизитыДокумента = Новый Структура;
					Иначе
						РеквизитыДокумента = ВерсииТитула[НомерВерсии];	
					КонецЕсли;
					РеквизитыДокумента.Вставить(Колонка.Имя, СтрокиРеквизитовПоМетаданным[Колонка.Имя]);
					ВерсииТитула.Вставить(НомерВерсии, РеквизитыДокумента);
					СтруктураРеквизитовЗаполнение.Вставить(ПрефиксТитулаРеквизита, ВерсииТитула);
				КонецЕсли;
			КонецЦикла;			
		КонецЕсли;
		
		// Данные из мобильного приложения (только если нет заполненного титула)
		Если НоваяСтрока.РеквизитыЗаполнены = Ложь И СообщенияМП <> Неопределено Тогда
			СтрокиПоДокументу = СообщенияМП.НайтиСтроки(Новый Структура("Ссылка", ВыборкаДокумент.Ссылка));
			Для Каждого СтрокаСообщенияМП Из СтрокиПоДокументу Цикл
				НоваяСтрока.МобильноеПриложение = СтрокаСообщенияМП.МобильноеПриложение;
				Если СтрокаСообщенияМП.ВидСообщения = ВидСообщенияПривязка Тогда
					Продолжить;
				КонецЕсли;
				ДанныеСообщения = ОбменСГИСЭПД.ПолучитьДанныеJSON(СтрокаСообщенияМП.ДанныеСообщения);
				Если Не ЗначениеЗаполнено(СтрокаСообщенияМП.ДанныеСообщения) Тогда
					Продолжить;
				КонецЕсли;	
				НоваяСтрока.КартинкаМобильноеПриложение = 6;
				КоличествоПолучениеОтМП = КоличествоПолучениеОтМП + 1;
				Если СоответствиеТитуловТипамМП.Получить(ДанныеСообщения.Type) = ТекущийТитул Тогда
					НоваяСтрока.РеквизитыЗаполнены = Истина;
					Принято = Неопределено;
					ДанныеСообщения.Свойство("Принято", Принято);
					Если Принято = Ложь Тогда
						НоваяСтрока.ОтправитьУОУ = 1;	
						ДанныеСообщения.Свойство("Комментарий", НоваяСтрока.Комментарий);
					КонецЕсли;
					Для Каждого КиЗ Из ДанныеСообщения Цикл
						Если СтрНачинаетсяС(КиЗ.Ключ, ЭтотОбъект.ПрефиксТитула) Тогда
							ЗначениеРеквизита = КиЗ.Значение;
							Если НоваяСтрока.Свойство(КиЗ.Ключ) Тогда
								ТипЗначенияНаФорме = ТипЗнч(НоваяСтрока[КиЗ.Ключ]);
								Если ТипЗначенияНаФорме = Тип("Булево") Тогда
									ЗначениеРеквизита = ОбменСГИСЭПДКлиентСервер.ПреобразоватьВБулево(ЗначениеРеквизита);
								ИначеЕсли ТипЗначенияНаФорме = Тип("Число") Тогда
									ЗначениеРеквизита = ОбменСГИСЭПДКлиентСервер.ПреобразоватьВЧисло(ЗначениеРеквизита);
								ИначеЕсли ТипЗначенияНаФорме = Тип("Дата") Тогда
									ЗначениеРеквизита = ОбменСГИСЭПДКлиентСервер.ПреобразоватьВДату(ЗначениеРеквизита);
								КонецЕсли;
								НоваяСтрока[КиЗ.Ключ] = ЗначениеРеквизита;
							КонецЕсли;	
						КонецЕсли;
					КонецЦикла;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		// Представление групповых полей
		Если ДобавленоПредставлениеЗамечаний Тогда
			ПредставлениеГруппы = "";
			Для Каждого ИмяПоля Из МассивПолейЗамечаний Цикл
				ПредставлениеГруппы = ПредставлениеГруппы + ?(ПредставлениеГруппы = "", "", " ") + НоваяСтрока[ИмяПоля];
			КонецЦикла;
			НоваяСтрока["ПредставлениеЗамечаний"] = ПредставлениеГруппы;	
		КонецЕсли;

		// Представление подчиненных форм
		Если ЗаполненностьТаблиц <> Неопределено Тогда
			ОтборСтрок = Новый Структура("Ссылка", НоваяСтрока.Ссылка);
			СтрокиЗаполненностиТаблиц = ЗаполненностьТаблиц.НайтиСтроки(ОтборСтрок);
			Для Каждого Строка Из СтрокиЗаполненностиТаблиц Цикл
				НоваяСтрока["Заполнено" + Строка.ИмяТабличнойЧасти] = Строка.Количество;
				НоваяСтрока["Заполнить" + Строка.ИмяТабличнойЧасти] = ПросклонятьПоЧислуНаСервере(Строка.Количество, "запись");
			КонецЦикла;
		КонецЕсли;
		
		Если НоваяСтрока.РеквизитыЗаполнены Тогда
			КоличествоПредзаполненных = КоличествоПредзаполненных + 1;
		КонецЕсли;
		
	КонецЦикла;
	
	Элементы.ГруппаМобильноеПриложение.Видимость = КоличествоПолучениеОтМП > 0;
	
	СтруктураРеквизитов = ОбменСГИСЭПДКлиентСервер.СкопироватьВФиксированноеЗначенияРекурсивно(СтруктураРеквизитовЗаполнение);
	
	НадписьКоличествоВыбрано = "Выбрано " + КоличествоВыбрано + " из " + ДоступныеДокументы.Количество();
	Элементы.ФормаДалее.Доступность = КоличествоВыбрано > 0;
	
	ДобавитьСпецифическоеДляТитулаОформление();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСтраницыНачало(ИмяШага)
	
	СтруктураНавигации = НавигацияПомощника();
	ИмяШагаПараметр = СтруктураНавигации[ИмяШага].СтруктураПараметровФормы.НавигацияПараметрФормы;
	
	Если СтруктураНавигации[ИмяШага].Доступен Тогда
		Элементы.ФормаДалее.Заголовок = НСтр("ru='Далее'");
		Элементы.ФормаДалее.Доступность = ЗначениеЗаполнено(ТекущийТитул);
		
		УстановитьВидимостьСтраницы(Элементы.СтраницаВыборТитула);	
		
		РазместитьНавигацию(ИмяШагаПараметр);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСтраницыСписокДокументов(ИмяШага)
	
	СтруктураНавигации = НавигацияПомощника();
	ИмяШагаПараметр = СтруктураНавигации[ИмяШага].СтруктураПараметровФормы.НавигацияПараметрФормы;
	
	Если СтруктураНавигации[ИмяШага].Доступен Тогда
		Элементы.ФормаДалее.Заголовок = НСтр("ru='Далее'");
		Элементы.ФормаДалее.Доступность = КоличествоВыбрано > 0;
		
		Элементы.ДоступныеДокументыПометка.Видимость = Истина;
		Элементы.ГруппаВремя1.Видимость = Истина;
		Элементы.ДоступныеДокументыПометкаПриОтправке.Видимость = Ложь;
		Элементы.ДоступныеДокументыСтатусОтправки.Видимость = Ложь;
		Элементы.ДоступныеДокументыКартинкаОтправлено.Видимость = Ложь;
		Элементы.ПроверитьДокументы.Видимость = Ложь;
		
		УстановитьВидимостьСтраницы(Элементы.СтраницаСписокДокументов);
		
		Элементы.ДоступныеДокументы.ОтборСтрок = Неопределено;
	
		// BSLLS:StyleElementConstructors-off
		ЦветПоУмолчанию = Новый Цвет();
		Для Каждого ЭлементКолонка Из Элементы.ГруппаЗаполнение.ПодчиненныеЭлементы Цикл
			ЭлементКолонка.АвтоОтметкаНезаполненного = Ложь;
			ЭлементКолонка.ЦветФона = ЦветПоУмолчанию;	
		КонецЦикла;
		Элементы.ДоступныеДокументыКомментарийУОУ.ЦветФона = ЦветПоУмолчанию;
		
		Если НавигацияПараметрФормы = "Отправка" Или НавигацияПараметрФормы = "Отправлено" Тогда
			Для Каждого Строка Из ДоступныеДокументы Цикл
				Если Строка.КартинкаОтправлено > 0 И Строка.Пометка Тогда
					Строка.Пометка = Ложь;	
				КонецЕсли;	
			КонецЦикла;
		КонецЕсли;
	
		РазместитьНавигацию(ИмяШагаПараметр);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСтраницыЗаполнениеДанных(ИмяШага)
	
	СтруктураНавигации = НавигацияПомощника();
	ИмяШагаПараметр = СтруктураНавигации[ИмяШага].СтруктураПараметровФормы.НавигацияПараметрФормы;
	
	Если СтруктураНавигации[ИмяШага].Доступен Тогда
		Элементы.ФормаДалее.Заголовок = НСтр("ru='Далее'");
		Элементы.ФормаДалее.Доступность = Истина;
		
		ТекущаяСтраница = Элементы.Найти("Страница" + ЭтотОбъект.ПрефиксТитула);
		
		ЭлементРодитель = ТекущаяСтраница.ПодчиненныеЭлементы.Найти("ГруппаРеквизиты" + ЭтотОбъект.ПрефиксТитула);
		
		ОтступСтраницаВерх = Элементы.Найти("ОтступСтраница" + ЭтотОбъект.ПрефиксТитула + "Верх");
		Если ОтступСтраницаВерх = Неопределено Тогда
			ОтступСтраницаВерх = Элементы.Вставить("ОтступСтраница" + ЭтотОбъект.ПрефиксТитула + "Верх", Тип("ДекорацияФормы"), ТекущаяСтраница, ЭлементРодитель);
			ОтступСтраницаВерх.Вид = ВидДекорацииФормы.Надпись;
			ОтступСтраницаВерх.Высота = 2;	
		КонецЕсли;
	
		УстановитьВидимостьСтраницы(ТекущаяСтраница);
		
		РазместитьНавигацию(ИмяШагаПараметр);
		
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ХранимыеДанныеПриИзменении(Элемент)
	
	ИмяРеквизита = СтрЗаменить(Элемент.Имя, "ДоступныеДокументы", "");
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеПриИзменении(ЭтотОбъект, 
					Элементы.ДоступныеДокументы.ТекущиеДанные[ИмяРеквизита], 
					Элемент,
					Элементы.ДоступныеДокументы.ТекущиеДанные);
					
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ХранимыеДанныеОткрытие(Элемент, СтандартнаяОбработка)
	
	ИмяРеквизита = СтрЗаменить(Элемент.Имя, "ДоступныеДокументы", "");
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеОткрытие(ЭтотОбъект, Элементы.ДоступныеДокументы.ТекущиеДанные[ИмяРеквизита], Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ХранимыеДанныеАвтоподбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ОбменСГИСЭПДКлиент.ХранимыеДанныеАвтоПодбор(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры


&НаКлиенте
Процедура Подключаемый_ХранимыеДанныеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ИмяРеквизита = СтрЗаменить(Элемент.Имя, "ДоступныеДокументы", "");
		
	ГруппаДанных = СтрЗаменить(ИмяРеквизита, "ХранимыеДанные", "");	
	ОписаниеГруппыДанных = ОбменСГИСЭПДКлиентСервер.ОписаниеГруппыДанных(ГруппаДанных, ИмяОбъекта);

	Если ОписаниеГруппыДанных.ЕстьХранимыеДанные = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКомпоновкиФормы = Новый НастройкиКомпоновкиДанных;
	
	ЭлементОтбора = НастройкиКомпоновкиФормы.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Тип");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = ОписаниеГруппыДанных.Тип;
	ЭлементОтбора.Использование = Истина; 
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ФиксированныеНастройки", НастройкиКомпоновкиФормы);
	ПараметрыФормы.Вставить("ГруппаДанных", ГруппаДанных);
	ПараметрыФормы.Вставить("Тип", ОписаниеГруппыДанных.Тип);
	ПараметрыФормы.Вставить("ИмяОбъекта", ИмяОбъекта);
	ПараметрыФормы.Вставить("ИдентификаторСтрокиРодителя", Неопределено);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Элемент", Элемент);
	
	ХранимыеДанныеНачалоВыбора_Завершение = Новый ОписаниеОповещения("ХранимыеДанныеНачалоВыбора_Завершение", ЭтотОбъект, ДополнительныеПараметры);
	 
	ОткрытьФорму("Справочник.ХранимыеДанныеЭПД.ФормаВыбора", ПараметрыФормы, ЭтотОбъект, , , , ХранимыеДанныеНачалоВыбора_Завершение);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеНачалоВыбора_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	Элемент = ДополнительныеПараметры.Элемент;
	Элементы.ДоступныеДокументы.ТекущиеДанные[СтрЗаменить(Элемент.Имя, "ДоступныеДокументы", "")] = Результат;
	
КонецПроцедуры


&НаСервере
Процедура УстановитьВидимостьСтраницыОтправка(ИмяШага)
	
	СтруктураНавигации = НавигацияПомощника();
	ИмяШагаПараметр = СтруктураНавигации[ИмяШага].СтруктураПараметровФормы.НавигацияПараметрФормы;
	
	Если СтруктураНавигации[ИмяШага].Доступен Тогда
		Элементы.ДоступныеДокументыПометка.Видимость = Ложь;
		Элементы.ГруппаВремя1.Видимость = Ложь;
		Элементы.ДоступныеДокументыПометкаПриОтправке.Видимость = Истина;
		Элементы.ДоступныеДокументыСтатусОтправки.Видимость = Истина;
		Элементы.ДоступныеДокументыКартинкаОтправлено.Видимость = Истина;
		Элементы.ПроверитьДокументы.Видимость = Истина;
		
		Элементы.ФормаДалее.Заголовок = НСтр("ru='Подписать и отправить'");
		Элементы.ФормаДалее.Доступность = КоличествоВыбраноДляОтправки > 0;
		
		УстановитьВидимостьСтраницы(Элементы.СтраницаСписокДокументов);
		
		Для Каждого ЭлементКолонка Из Элементы.ГруппаЗаполнение.ПодчиненныеЭлементы Цикл
			ИмяРеквизита = СтрЗаменить(ЭлементКолонка.Имя, "ДоступныеДокументы", "");
			Если ИмяРеквизита <> "ПредставлениеЗамечаний" Тогда
				ЭлементКолонка.АвтоОтметкаНезаполненного = ОписаниеРеквизитовТекущегоТитула[ИмяРеквизита].АвтоОтметкаНезаполненного;		
			КонецЕсли;	
			Если ЭлементКолонка.ТолькоПросмотр = Ложь Тогда
				ЭлементКолонка.ЦветФона = ЦветаСтиля.ЦветВыделенияУчастникаЭПД;
			КонецЕсли;
		КонецЦикла;
		Элементы.ДоступныеДокументыКомментарийУОУ.ЦветФона = ЦветаСтиля.ЦветВыделенияУчастникаЭПД;
		
		РазместитьНавигацию(ИмяШагаПараметр);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ИмяПомощника()

	Возврат "ГрупповаяОтправкаТитулов";

КонецФункции

&НаСервере
Функция НавигацияПомощника()

	СтруктураНавигации = Новый Структура;
	
	СтруктураНавигации.Вставить(НавигацияПомощниковСВозвратомЭПД.ИмяШага(1), СтруктураШагаНачало(1));
	СтруктураНавигации.Вставить(НавигацияПомощниковСВозвратомЭПД.ИмяШага(2), СтруктураШагаСписокДокументов(2));
	СтруктураНавигации.Вставить(НавигацияПомощниковСВозвратомЭПД.ИмяШага(3), СтруктураШагаЗаполнениеДанных(3));
	СтруктураНавигации.Вставить(НавигацияПомощниковСВозвратомЭПД.ИмяШага(4), СтруктураШагаОтправка(4));
	
	Возврат СтруктураНавигации;
	
КонецФункции

&НаСервере
Функция СтруктураШагаНачало(НомерШага)
	
	СтруктураШага                = НавигацияПомощниковСВозвратомЭПД.НовыйСтруктураШага();
	СтруктураШага.ИмяПомощника   = ИмяПомощника();
	СтруктураШага.НомерШага      = НомерШага;
	СтруктураШага.ТекстНавигации = НСтр("ru='Выбор титула'");
	СтруктураШага.СтруктураПараметровФормы.НавигацияПараметрФормы = "ВыборТитула";
	СтруктураШага.ТипЭлементаРегламента = ТекущийТитул;
	СтруктураШага.Выполнен = НавигацияПараметрФормы <> "ВыборТитула" Или КоличествоВыбрано > 0; 
	СтруктураШага.Доступен = НавигацияПараметрФормы <> "Отправлено";
	СтруктураШага.КоличествоВерсий = 1;
	СтруктураШага.НомерВерсии = 0;
	Возврат СтруктураШага;
	
КонецФункции

&НаСервере
Функция СтруктураШагаСписокДокументов(НомерШага)
	
	СтруктураШага                = НавигацияПомощниковСВозвратомЭПД.НовыйСтруктураШага();
	СтруктураШага.ИмяПомощника   = ИмяПомощника();
	СтруктураШага.НомерШага      = НомерШага;
	СтруктураШага.ТекстНавигации = НСтр("ru='Выбор документов'");
	СтруктураШага.СтруктураПараметровФормы.НавигацияПараметрФормы = "СписокДокументов";
	СтруктураШага.ТипЭлементаРегламента = ТекущийТитул;
	СтруктураШага.Выполнен = КоличествоВыбрано > 0 Или КоличествоОтправлено > 0; //НавигацияПараметрФормы = "ЗаполнениеДанных" 
								//Или НавигацияПараметрФормы = "Отправка" 
								//Или НавигацияПараметрФормы = "Отправлено";
	СтруктураШага.Доступен = НавигацияПараметрФормы <> "Отправлено" И (СтруктураШага.Выполнен Или НавигацияПараметрФормы = "СписокДокументов");
	СтруктураШага.КоличествоВерсий = 1;
	СтруктураШага.НомерВерсии = 0;
	Возврат СтруктураШага;
	
КонецФункции

&НаСервере
Функция СтруктураШагаЗаполнениеДанных(НомерШага)
	
	СтруктураШага                = НавигацияПомощниковСВозвратомЭПД.НовыйСтруктураШага();
	СтруктураШага.ИмяПомощника   = ИмяПомощника();
	СтруктураШага.НомерШага      = НомерШага;
	СтруктураШага.ТекстНавигации = НСтр("ru='Заполнение данных'");
	СтруктураШага.СтруктураПараметровФормы.НавигацияПараметрФормы = "ЗаполнениеДанных";
	СтруктураШага.ТипЭлементаРегламента = ТекущийТитул;
	СтруктураШага.Выполнен = КоличествоВыбраноДляОтправки > 0 Или КоличествоОтправлено > 0; //НавигацияПараметрФормы = "Отправка" 
							//	Или НавигацияПараметрФормы = "Отправлено";
	СтруктураШага.Доступен = НавигацияПараметрФормы <> "Отправлено" И (СтруктураШага.Выполнен Или НавигацияПараметрФормы = "ЗаполнениеДанных");
	СтруктураШага.КоличествоВерсий = 1;
	СтруктураШага.НомерВерсии = 0;
	Возврат СтруктураШага;
	
КонецФункции

&НаСервере
Функция СтруктураШагаОтправка(НомерШага)
	
	СтруктураШага                = НавигацияПомощниковСВозвратомЭПД.НовыйСтруктураШага();
	СтруктураШага.ИмяПомощника   = ИмяПомощника();
	СтруктураШага.НомерШага      = НомерШага;
	СтруктураШага.ТекстНавигации = НСтр("ru='Отправка'");
	СтруктураШага.СтруктураПараметровФормы.НавигацияПараметрФормы = ?(НавигацияПараметрФормы = "Отправлено", "Отправлено", "Отправка");
	СтруктураШага.ТипЭлементаРегламента = ТекущийТитул;
	СтруктураШага.Выполнен = НавигацияПараметрФормы = "Отправлено";
	СтруктураШага.Доступен = СтруктураШага.Выполнен Или НавигацияПараметрФормы = "Отправка"
							Или КоличествоВыбраноДляОтправки > 0 Или КоличествоОтправлено > 0;
	СтруктураШага.КоличествоВерсий = 1;
	СтруктураШага.НомерВерсии = 0;
	Возврат СтруктураШага;
	
КонецФункции

&НаСервере
Процедура РазместитьНавигацию(ВыбранныйТитулСтрока)

	НавигацияПараметрФормы = ВыбранныйТитулСтрока;
	
	СтруктураНавигацииПомощника = НавигацияПомощника();
	НавигацияПомощниковСВозвратомЭПД.РазместитьНавигацию(ЭтотОбъект, СтруктураНавигацииПомощника, Параметры);

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеШага(ИмяШага, НавигационнаяСсылка)
	
	Если ИмяШага = "Шаг1" Тогда
		УстановитьВидимостьСтраницыНачало(ИмяШага);
	ИначеЕсли ИмяШага = "Шаг2" Тогда
		УстановитьВидимостьСтраницыСписокДокументов(ИмяШага);
	ИначеЕсли ИмяШага = "Шаг3" Тогда
		УстановитьВидимостьСтраницыЗаполнениеДанных(ИмяШага);
	ИначеЕсли ИмяШага = "Шаг4" Тогда
		УстановитьВидимостьСтраницыОтправка(ИмяШага);	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

