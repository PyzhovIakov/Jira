#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Процедура КонвертироватьПКВФоне(СтруктураПараметров, АдресДляРазмещенияРезультата = Неопределено) Экспорт
	Обработано = 0;
	ТекПрогресс = 0;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	CRM_ПотенциальныеКлиенты.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.CRM_ПотенциальныеКлиенты КАК CRM_ПотенциальныеКлиенты
	                      |ГДЕ
	                      |	CRM_ПотенциальныеКлиенты.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	                      |	И CRM_ПотенциальныеКлиенты.КонтактноеЛицо = ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаПартнеров.ПустаяСсылка)");

	Выборка = Запрос.Выполнить().Выбрать();
	ОбщееКоличество = Выборка.Количество();
	Ошибки = Новый ТаблицаЗначений;
	Ошибки.Колонки.Добавить("ПотенциальныйКлиент");
	Ошибки.Колонки.Добавить("ТекстОшибки");
	Пока Выборка.Следующий() Цикл
		
		КонвертироватьПК(Выборка.Ссылка, Ошибки);
		
		Обработано = Обработано + 1;
		Процент = Окр(Обработано * 100 / ОбщееКоличество, 0);
		Если Процент > ТекПрогресс Тогда
			ТекПрогресс = Процент;
			ДлительныеОперации.СообщитьПрогресс(ТекПрогресс, Строка(ОбщееКоличество));
		КонецЕсли;
	КонецЦикла;

	ПоместитьВоВременноеХранилище(Ошибки, АдресДляРазмещенияРезультата);
	
КонецПроцедуры

Процедура КонвертироватьПК(ПотенциальныйКлиент, Ошибки)

	Клиент_Объект = Справочники.Партнеры.СоздатьЭлемент();
	Контакт_Объект = Неопределено;
	ЗаполнитьЗначенияСвойств(Клиент_Объект, ПотенциальныйКлиент, "ОсновнойМенеджер, Комментарий,
		| БизнесРегион,
		| ДатаРегистрации");	
	Если Не ЗначениеЗаполнено(Клиент_Объект.ОсновнойМенеджер) Тогда
		Клиент_Объект.ОсновнойМенеджер = ПотенциальныйКлиент.Автор;
	КонецЕсли;
	Если ЗначениеЗаполнено(ПотенциальныйКлиент.Организация) Тогда
		
		Клиент_Объект.ЮрФизЛицо	= Перечисления.КомпанияЧастноеЛицо.Компания;
		Клиент_Объект.Наименование = ПотенциальныйКлиент.Организация;
		Клиент_Объект.НаименованиеПолное = ПотенциальныйКлиент.Организация;
		
		Контакт_Объект = Справочники.КонтактныеЛицаПартнеров.СоздатьЭлемент();
		
		Контакт_Объект.Наименование = ПотенциальныйКлиент.Наименование;
		СтрокаТелефонаПотенциальногоКлиента	= ПотенциальныйКлиент.КонтактнаяИнформация.Найти(Справочники.ВидыКонтактнойИнформации.CRM_ТелефонПотенциальногоКлиента,
			 "Вид");
		Если НЕ (СтрокаТелефонаПотенциальногоКлиента = Неопределено) Тогда
			Контакт_Телефон = СтрокаТелефонаПотенциальногоКлиента.Представление;
			ВидКИ = Константы.CRM_ОсновнойВидТелефонаКонтакта.Получить();
			Если Не ЗначениеЗаполнено(ВидКИ) Тогда
				ВидКИ = Справочники.ВидыКонтактнойИнформации.ТелефонКонтактногоЛица;
			КонецЕсли;
			ТипКИ = Перечисления.ТипыКонтактнойИнформации.Телефон;
			СтруктураТелефона = сфпСофтФонПроСервер.сфпЗаполнитьСтруктуруПолейПоПредставлениюТелефон(Контакт_Телефон);
			Представление = УправлениеКонтактнойИнформациейКлиентСервер.СформироватьПредставлениеТелефона(СтруктураТелефона.КодСтраны,
				 СтруктураТелефона.КодГорода, СтруктураТелефона.НомерТелефона, СтруктураТелефона.Добавочный,
				 "");
			ДанныеКИ = УправлениеКонтактнойИнформациейСлужебныйВызовСервера.КонтактнаяИнформацияПоПредставлению(Представление,
				 ВидКИ, "");
			УправлениеКонтактнойИнформацией.ЗаписатьКонтактнуюИнформацию(Контакт_Объект, ДанныеКИ, ВидКИ, ТипКИ);
		КонецЕсли;
		
		СтрокаЭлектронногоАдресаПотенциальногоКлиента = ПотенциальныйКлиент.КонтактнаяИнформация.Найти(Справочники.ВидыКонтактнойИнформации.CRM_EmailПотенциальногоКлиента,
			 "Вид");
		Если НЕ (СтрокаЭлектронногоАдресаПотенциальногоКлиента = Неопределено) Тогда
			Контакт_Email = СтрокаЭлектронногоАдресаПотенциальногоКлиента.Представление;
			ВидКИ = Константы.CRM_ОсновнойВидEmailКонтакта.Получить();
			Если Не ЗначениеЗаполнено(ВидКИ) Тогда
				ВидКИ = Справочники.ВидыКонтактнойИнформации.EmailКонтактногоЛица;
			КонецЕсли;
			ТипКИ = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
			СтруктураПолейКИ = УправлениеКонтактнойИнформацией.ПараметрыВидаКонтактнойИнформации(ВидКИ);
			ДанныеКИ = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВXML(СтруктураПолейКИ, Контакт_Email, ВидКИ);
			УправлениеКонтактнойИнформацией.ЗаписатьКонтактнуюИнформацию(Контакт_Объект, ДанныеКИ, ВидКИ, ТипКИ);
		КонецЕсли;
		
		СтрокаДругойКИПотенциальногоКлиента = ПотенциальныйКлиент.КонтактнаяИнформация.Найти(Перечисления.ТипыКонтактнойИнформации.ВебСтраница,
			 "Тип");
		Если НЕ (СтрокаДругойКИПотенциальногоКлиента = Неопределено)
			 И Метаданные.Обработки.Найти("CRM_РаботаСМессенджером" 
			 	+ СтрокаДругойКИПотенциальногоКлиента.Вид.Наименование) <> Неопределено Тогда
			Контакт_МессенджерВид = Обработки["CRM_РаботаСМессенджером" 
				+ СтрокаДругойКИПотенциальногоКлиента.Вид.Наименование].ПолучитьВидКИМессенджера(Справочники.КонтактныеЛицаПартнеров.ПустаяСсылка());
			Контакт_Мессенджер = СтрокаДругойКИПотенциальногоКлиента.Представление;
			Если Контакт_МессенджерВид.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
				СтруктураТелефона = сфпСофтФонПроСервер.сфпЗаполнитьСтруктуруПолейПоПредставлениюТелефон(Контакт_Мессенджер);
				Представление = УправлениеКонтактнойИнформациейКлиентСервер.СформироватьПредставлениеТелефона(СтруктураТелефона.КодСтраны,
					 СтруктураТелефона.КодГорода, СтруктураТелефона.НомерТелефона, "",
					 "");
				ДанныеКИ = УправлениеКонтактнойИнформациейСлужебныйВызовСервера.КонтактнаяИнформацияПоПредставлению(Представление,
					 Контакт_МессенджерВид, "");
			Иначе
				СтруктураПолейКИ = УправлениеКонтактнойИнформацией.ПараметрыВидаКонтактнойИнформации(Контакт_МессенджерВид);
				ДанныеКИ = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВXML(СтруктураПолейКИ,
					 Контакт_Мессенджер,
					 Контакт_МессенджерВид);
			КонецЕсли;
			УправлениеКонтактнойИнформацией.ЗаписатьКонтактнуюИнформацию(Контакт_Объект, ДанныеКИ,
				 Контакт_МессенджерВид,
				 Контакт_МессенджерВид.Тип);
		КонецЕсли;
	Иначе
		Клиент_Объект.ЮрФизЛицо = Перечисления.КомпанияЧастноеЛицо.ЧастноеЛицо;
		Клиент_Объект.Наименование = ПотенциальныйКлиент.Наименование;
		Клиент_Объект.НаименованиеПолное = ПотенциальныйКлиент.Наименование;
		СтрокаТелефонаПотенциальногоКлиента	= ПотенциальныйКлиент.КонтактнаяИнформация.Найти(Справочники.ВидыКонтактнойИнформации.CRM_ТелефонПотенциальногоКлиента,
			 "Вид");
		Если НЕ (СтрокаТелефонаПотенциальногоКлиента = Неопределено) Тогда
			Клиент_Телефон = СтрокаТелефонаПотенциальногоКлиента.Представление;
			ВидКИ = Константы.CRM_ОсновнойВидТелефонаКлиента.Получить();
			Если Не ЗначениеЗаполнено(ВидКИ) Тогда
				ВидКИ = Справочники.ВидыКонтактнойИнформации.ТелефонПартнера;
			КонецЕсли;
			ТипКИ = Перечисления.ТипыКонтактнойИнформации.Телефон;
			СтруктураТелефона = сфпСофтФонПроСервер.сфпЗаполнитьСтруктуруПолейПоПредставлениюТелефон(Клиент_Телефон);
			Представление = УправлениеКонтактнойИнформациейКлиентСервер.СформироватьПредставлениеТелефона(СтруктураТелефона.КодСтраны,
				 СтруктураТелефона.КодГорода, СтруктураТелефона.НомерТелефона, СтруктураТелефона.Добавочный,
				 "");
			ДанныеКИ = УправлениеКонтактнойИнформациейСлужебныйВызовСервера.КонтактнаяИнформацияПоПредставлению(Представление,
				 ВидКИ, "");
			УправлениеКонтактнойИнформацией.ЗаписатьКонтактнуюИнформацию(Клиент_Объект, ДанныеКИ, ВидКИ, ТипКИ);
		КонецЕсли;
		
		СтрокаЭлектронногоАдресаПотенциальногоКлиента = ПотенциальныйКлиент.КонтактнаяИнформация.Найти(Справочники.ВидыКонтактнойИнформации.CRM_EmailПотенциальногоКлиента,
			 "Вид");
		Если НЕ (СтрокаЭлектронногоАдресаПотенциальногоКлиента = Неопределено) Тогда
			Клиент_Email = СтрокаЭлектронногоАдресаПотенциальногоКлиента.Представление;
			ВидКИ = Константы.CRM_ОсновнойВидEmailКлиента.Получить();
			Если Не ЗначениеЗаполнено(ВидКИ) Тогда
				ВидКИ = Справочники.ВидыКонтактнойИнформации.EmailПартнера;
			КонецЕсли;
			ТипКИ = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
			СтруктураПолейКИ = УправлениеКонтактнойИнформацией.ПараметрыВидаКонтактнойИнформации(ВидКИ);
			ДанныеКИ = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВXML(СтруктураПолейКИ, Клиент_Email, ВидКИ);
			УправлениеКонтактнойИнформацией.ЗаписатьКонтактнуюИнформацию(Клиент_Объект, ДанныеКИ, ВидКИ, ТипКИ);
		КонецЕсли;
		
		СтрокаДругойКИПотенциальногоКлиента = ПотенциальныйКлиент.КонтактнаяИнформация.Найти(Перечисления.ТипыКонтактнойИнформации.ВебСтраница,
			 "Тип");
		Если НЕ (СтрокаДругойКИПотенциальногоКлиента = Неопределено)
			 И Метаданные.Обработки.Найти("CRM_РаботаСМессенджером" 
			 	+ СтрокаДругойКИПотенциальногоКлиента.Вид.Наименование) <> Неопределено Тогда
			Клиент_МессенджерВид = Обработки["CRM_РаботаСМессенджером" 
				+ СтрокаДругойКИПотенциальногоКлиента.Вид.Наименование].ПолучитьВидКИМессенджера(Справочники.Партнеры.ПустаяСсылка());
			Клиент_Мессенджер = СтрокаДругойКИПотенциальногоКлиента.Представление;
			Если Клиент_МессенджерВид.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
				СтруктураТелефона = сфпСофтФонПроСервер.сфпЗаполнитьСтруктуруПолейПоПредставлениюТелефон(Клиент_Мессенджер);
				Представление = УправлениеКонтактнойИнформациейКлиентСервер.СформироватьПредставлениеТелефона(СтруктураТелефона.КодСтраны,
					 СтруктураТелефона.КодГорода, СтруктураТелефона.НомерТелефона, "",
					 "");
				ДанныеКИ = УправлениеКонтактнойИнформациейСлужебныйВызовСервера.КонтактнаяИнформацияПоПредставлению(Представление,
					 Клиент_МессенджерВид, "");
			Иначе
				СтруктураПолейКИ = УправлениеКонтактнойИнформацией.ПараметрыВидаКонтактнойИнформации(Клиент_МессенджерВид);
				ДанныеКИ = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВXML(СтруктураПолейКИ,
					 Клиент_Мессенджер,
					 Клиент_МессенджерВид);
			КонецЕсли;
			УправлениеКонтактнойИнформацией.ЗаписатьКонтактнуюИнформацию(Клиент_Объект, ДанныеКИ,
				 Клиент_МессенджерВид,
				 Клиент_МессенджерВид.Тип);
		КонецЕсли;
	КонецЕсли;
	
	Клиент_Объект.CRM_ОсновнаяОтрасль = ПотенциальныйКлиент.Отрасль;
	Клиент_Объект.CRM_Автор = ПотенциальныйКлиент.Автор;
	
	ОсновнойТипОтношенийСКлиентом = CRM_ОбщегоНазначенияПовтИсп.ПолучитьЗначениеНастройки("ОсновнойТипОтношенийСКлиентом");
	Если ЗначениеЗаполнено(ОсновнойТипОтношенийСКлиентом) Тогда
		Клиент_Объект.Клиент = ОсновнойТипОтношенийСКлиентом.Клиент;
		Клиент_Объект.Поставщик = ОсновнойТипОтношенийСКлиентом.Поставщик;
		Клиент_Объект.Конкурент = ОсновнойТипОтношенийСКлиентом.Конкурент;
		Клиент_Объект.ПрочиеОтношения = ОсновнойТипОтношенийСКлиентом.ПрочиеОтношения;
	Иначе
		Клиент_Объект.Клиент = Истина;
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Попытка

		ПКОбъект = ПотенциальныйКлиент.ПолучитьОбъект();
		
		Клиент_Объект.Записать();
		
		CRM_ПрисоединенныеФайлы.СкопироватьПрисоединенныеФайлы(ПотенциальныйКлиент, Клиент_Объект.Ссылка);
		
		Если Контакт_Объект <> Неопределено Тогда
			
			Контакт_Объект.Владелец = Клиент_Объект.Ссылка;
			
			Контакт_Объект.Записать();
			
			Клиент_Объект.CRM_ОсновноеКонтактноеЛицо = Контакт_Объект.Ссылка;
			Клиент_Объект.Записать();
			
			ПКОбъект.КонтактноеЛицо = Контакт_Объект.Ссылка;
			
		КонецЕсли;

		ПКОбъект.Партнер = Клиент_Объект.Ссылка;
		ПКОбъект.ОбменДанными.Загрузка = Истина;
		ПКОбъект.Записать();
		
		СсылкиЗамены = Новый Массив;
		СсылкиЗамены.Добавить(ПотенциальныйКлиент);
		
		ВключитьОбъекты = Новый Массив;
		ВключитьОбъекты.Добавить(Метаданные.Документы.CRM_Взаимодействие);
		ВключитьОбъекты.Добавить(Метаданные.Документы.CRM_Интерес);
		ВключитьОбъекты.Добавить(Метаданные.Документы.CRM_Заявка);
		ВключитьОбъекты.Добавить(Метаданные.Документы.CRM_СообщениеМессенджера);
		ВключитьОбъекты.Добавить(Метаданные.Документы.СообщениеSMS);
		ВключитьОбъекты.Добавить(Метаданные.Документы.ТелефонныйЗвонок);
		ВключитьОбъекты.Добавить(Метаданные.Документы.ЭлектронноеПисьмоВходящее);
		ВключитьОбъекты.Добавить(Метаданные.Документы.ЭлектронноеПисьмоИсходящее);
		ВключитьОбъекты.Добавить(Метаданные.БизнесПроцессы.CRM_БизнесПроцесс);
		ВключитьОбъекты.Добавить(Метаданные.Задачи.ЗадачаИсполнителя);

		НайденныеСсылки = НайтиПоСсылкам(СсылкиЗамены, , ВключитьОбъекты);
		Для каждого НайденнаяСсылка Из НайденныеСсылки Цикл
			Если ВключитьОбъекты.Найти(НайденнаяСсылка.Метаданные) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			НайденныйОбъект = НайденнаяСсылка.Данные.ПолучитьОбъект();
			ТипДанных = ТипЗнч(НайденнаяСсылка.Данные);
			Если ТипДанных = Тип("ДокументСсылка.CRM_Взаимодействие") 
				ИЛИ ТипДанных = Тип("ДокументСсылка.CRM_Интерес")
				ИЛИ ТипДанных = Тип("БизнесПроцессСсылка.CRM_БизнесПроцесс") Тогда
				
				НайденныйОбъект.Партнер = Клиент_Объект.Ссылка;
				НайденныйОбъект.КонтактноеЛицо = ?(Контакт_Объект = Неопределено, Неопределено, Контакт_Объект.Ссылка);
				НайденныйОбъект.ПотенциальныйКлиент = Неопределено;
			
			ИначеЕсли ТипДанных = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
				
				Если ЗначениеЗаполнено(НайденныйОбъект.БизнесПроцесс) И НайденныйОбъект.Выполнена Тогда
					// изменять можно только личные задачи 
					Продолжить;	
				КонецЕсли;
				
				НайденныйОбъект.CRM_Партнер = Клиент_Объект.Ссылка;
				НайденныйОбъект.CRM_КонтактноеЛицо = ?(Контакт_Объект = Неопределено, Неопределено, Контакт_Объект.Ссылка);
				НайденныйОбъект.CRM_ПотенциальныйКлиент = Неопределено;
				
			ИначеЕсли ТипДанных = Тип("ДокументСсылка.СообщениеSMS") Тогда
				
				СтрокаТЧ = НайденныйОбъект.Адресаты.Найти(ПотенциальныйКлиент);
				Если СтрокаТЧ <> Неопределено Тогда
					СтрокаТЧ.Контакт = Клиент_Объект.Ссылка;
				КонецЕсли;
				
			ИначеЕсли ТипДанных = Тип("ДокументСсылка.ТелефонныйЗвонок") Тогда
				
				НайденныйОбъект.АбонентКонтакт = Клиент_Объект.Ссылка;
				
			ИначеЕсли ТипДанных = Тип("ДокументСсылка.CRM_СообщениеМессенджера") Тогда
				
				НайденныйОбъект.Контакт = Клиент_Объект.Ссылка;
				
			ИначеЕсли ТипДанных = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
				
				Если НайденныйОбъект.ОтправительКонтакт = ПотенциальныйКлиент Тогда
					НайденныйОбъект.ОтправительКонтакт = Клиент_Объект.Ссылка;
				КонецЕсли;

				СтрокаТЧ = НайденныйОбъект.ПолучателиПисьма.Найти(ПотенциальныйКлиент);
				Если СтрокаТЧ <> Неопределено Тогда
					СтрокаТЧ.Контакт = Клиент_Объект.Ссылка;
				КонецЕсли;
				СтрокаТЧ = НайденныйОбъект.ПолучателиКопий.Найти(ПотенциальныйКлиент);
				Если СтрокаТЧ <> Неопределено Тогда
					СтрокаТЧ.Контакт = Клиент_Объект.Ссылка;
				КонецЕсли;
				СтрокаТЧ = НайденныйОбъект.ПолучателиОтвета.Найти(ПотенциальныйКлиент);
				Если СтрокаТЧ <> Неопределено Тогда
					СтрокаТЧ.Контакт = Клиент_Объект.Ссылка;
				КонецЕсли;
				СтрокаТЧ = НайденныйОбъект.АдресаУведомленияОПрочтении.Найти(ПотенциальныйКлиент);
				Если СтрокаТЧ <> Неопределено Тогда
					СтрокаТЧ.Контакт = Клиент_Объект.Ссылка;
				КонецЕсли;
				
			ИначеЕсли ТипДанных = Тип("ДокументСсылка.ЭлектронноеПисьмоИсходящее") Тогда
				
				СтрокаТЧ = НайденныйОбъект.ПолучателиПисьма.Найти(ПотенциальныйКлиент);
				Если СтрокаТЧ <> Неопределено Тогда
					СтрокаТЧ.Контакт = Клиент_Объект.Ссылка;
				КонецЕсли;
				СтрокаТЧ = НайденныйОбъект.ПолучателиКопий.Найти(ПотенциальныйКлиент);
				Если СтрокаТЧ <> Неопределено Тогда
					СтрокаТЧ.Контакт = Клиент_Объект.Ссылка;
				КонецЕсли;
				СтрокаТЧ = НайденныйОбъект.ПолучателиОтвета.Найти(ПотенциальныйКлиент);
				Если СтрокаТЧ <> Неопределено Тогда
					СтрокаТЧ.Контакт = Клиент_Объект.Ссылка;
				КонецЕсли;
				СтрокаТЧ = НайденныйОбъект.ПолучателиСкрытыхКопий.Найти(ПотенциальныйКлиент);
				Если СтрокаТЧ <> Неопределено Тогда
					СтрокаТЧ.Контакт = Клиент_Объект.Ссылка;
				КонецЕсли;
				
			ИначеЕсли ТипДанных = Тип("ДокументСсылка.CRM_Телемаркетинг") Тогда
				
				СтрокаТЧ = НайденныйОбъект.Участники.Найти(ПотенциальныйКлиент);
				Если СтрокаТЧ <> Неопределено Тогда
					СтрокаТЧ.Партнер = Клиент_Объект.Ссылка;
					СтрокаТЧ.КонтактноеЛицо = ?(Контакт_Объект = Неопределено, Неопределено, Контакт_Объект.Ссылка);
				КонецЕсли;

			ИначеЕсли ТипДанных = Тип("ДокументСсылка.CRM_РассылкаЭлектронныхПисем") Тогда
				
				СтрокаТЧ = НайденныйОбъект.Получатели.Найти(ПотенциальныйКлиент);
				Если СтрокаТЧ <> Неопределено Тогда
					СтрокаТЧ.Партнер = Клиент_Объект.Ссылка;
					СтрокаТЧ.КонтактноеЛицо = ?(Контакт_Объект = Неопределено, Неопределено, Контакт_Объект.Ссылка);
				КонецЕсли;

			КонецЕсли;

			НайденныйОбъект.Записать();
				
		КонецЦикла;

		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		Ошибка = Ошибки.Добавить();
		Ошибка.ПотенциальныйКлиент = ПотенциальныйКлиент;
		Ошибка.ТекстОшибки = ОписаниеОшибки();
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru='Недопустимый вызов объекта на клиенте.';en='Invalid call of object on client.'");
#КонецЕсли
