#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Функция ЗагрузитьCSVФайлВТаблицу(ИмяФайла, Разделитель)
	
	Файл = Новый Файл(ИмяФайла);
	Если НЕ Файл.Существует() Тогда 
		Возврат Новый ТаблицаЗначений;
	КонецЕсли;
	
	ЧтениеТекста = Новый ЧтениеТекста(ИмяФайла);
	Строка = ЧтениеТекста.ПрочитатьСтроку();
	Если Строка = Неопределено Тогда 
		ТекстСообщения = НСтр("ru='Не получилось загрузить данные из этого файла. Убедитесь в корректности данных в файле.';
			|en='Cannot import data from this file. Make sure that data in the file is correct.'");
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	КолонкиШапки = СтрРазделить(Строка, Разделитель, Ложь);
	Источник = Новый ТаблицаЗначений;
	ПозицияКолонкиВФайле = Новый Соответствие();
	
	Позиция = 1;
	Для каждого Колонка Из КолонкиШапки Цикл
		Если ЗначениеЗаполнено(Колонка) Тогда
			НоваяКолонка = Источник.Колонки.Добавить();
			НоваяКолонка.Имя = "Колонка" + Строка(Позиция);
			НоваяКолонка.Заголовок = Колонка;
			ПозицияКолонкиВФайле.Вставить(Позиция, НоваяКолонка.Имя);
		КонецЕсли;
		Позиция = Позиция + 1;
	КонецЦикла;
	
	Если Источник.Колонки.Количество() = 0 Тогда
		Возврат Источник;
	КонецЕсли;
	
	Строка = ЧтениеТекста.ПрочитатьСтроку();
	Пока Строка <> Неопределено Цикл
		НоваяСтрока = Источник.Добавить();
		Позиция = СтрНайти(Строка, Разделитель);
		Индекс = 0;
		Пока Позиция > 0 Цикл
			Если Источник.Колонки.Количество() < Индекс + 1 Тогда
				Прервать;
			КонецЕсли;
			ТемпСтр = Лев(Строка, Позиция - 1);
			Вхождений = СтрЧислоВхождений(ТемпСтр, """");
			Если Вхождений > 0 Тогда
				Если Вхождений % 2 <> 0 Тогда
					Позиция = СтрНайти(Строка, Разделитель, , Позиция + 1);
					Если Позиция > 0 Тогда
						Продолжить;
					Иначе
						ТемпСтр = Строка;
					КонецЕсли;
				КонецЕсли;
				ТемпСтр = СокрЛП(СтрЗаменить(ТемпСтр, """""", """"));
				Если Лев(ТемпСтр, 1) = """" И Прав(ТемпСтр, 1) = """" Тогда
					ТемпСтр = Сред(ТемпСтр, 2, СтрДлина(ТемпСтр) - 2);
				КонецЕсли;
			КонецЕсли;
			ИмяКолонки = ПозицияКолонкиВФайле.Получить(Индекс + 1);
			Если ИмяКолонки <> Неопределено Тогда
				НоваяСтрока[ИмяКолонки] = ТемпСтр;
			КонецЕсли;
			Строка = Сред(Строка, Позиция + 1);
			Позиция = СтрНайти(Строка, Разделитель);
			Индекс = Индекс + 1;
		КонецЦикла;
		Если Источник.Колонки.Количество() = Индекс + 1  Тогда
			НоваяСтрока[Индекс] = Строка;
		КонецЕсли;

		Строка = ЧтениеТекста.ПрочитатьСтроку();
	КонецЦикла;
	
	Возврат Источник;
	
КонецФункции

Процедура ДополнитьДеревоРеквизитовКонтактнойИнформацией(МетаданныеОбъекта, НовСтрОбъект, Отбор)
	МассивВидов = Новый Массив;
	Если МетаданныеОбъекта = Метаданные.Справочники.Партнеры Тогда
		МассивВидов.Добавить(Справочники.ВидыКонтактнойИнформации.СправочникПартнеры);
		Если Отбор = Перечисления.КомпанияЧастноеЛицо.Компания Тогда
			МассивВидов.Добавить(Справочники.ВидыКонтактнойИнформации.CRM_СправочникПартнерыКомпания);
		ИначеЕсли Отбор = Перечисления.КомпанияЧастноеЛицо.ЧастноеЛицо Тогда
			МассивВидов.Добавить(Справочники.ВидыКонтактнойИнформации.CRM_СправочникПартнерыЧастноеЛицо);
		КонецЕсли;
	ИначеЕсли МетаданныеОбъекта.Имя = "Контрагенты" Тогда
		
		ИмяКонстранты = "ИспользоватьПартнеровКакКонтрагентов";
		ИспользоватьПартнеровКакКонтрагентов = Константы[ИмяКонстранты].Получить();		
		
		Если НЕ ИспользоватьПартнеровКакКонтрагентов Тогда
			МассивВидов.Добавить(Справочники.ВидыКонтактнойИнформации["СправочникКонтрагенты"]);
		КонецЕсли;
		
	ИначеЕсли МетаданныеОбъекта = Метаданные.Справочники.CRM_ПотенциальныеКлиенты Тогда
		МассивВидов.Добавить(Справочники.ВидыКонтактнойИнформации.СправочникCRM_ПотенциальныеКлиенты);
	ИначеЕсли МетаданныеОбъекта = Метаданные.Справочники.КонтактныеЛицаПартнеров Тогда
		МассивВидов.Добавить(Справочники.ВидыКонтактнойИнформации.СправочникКонтактныеЛицаПартнеров);
	ИначеЕсли МетаданныеОбъекта = Метаданные.Справочники.Организации Тогда
		
	ИначеЕсли МетаданныеОбъекта = Метаданные.Справочники.ФизическиеЛица Тогда
		
	КонецЕсли;
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВидыКонтактнойИнформации.Ссылка КАК Ссылка,
	                      |	ВидыКонтактнойИнформации.Тип КАК Тип,
	                      |	ВидыКонтактнойИнформации.Наименование КАК Наименование
	                      |ИЗ
	                      |	Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации
	                      |ГДЕ
	                      |	ВидыКонтактнойИнформации.Родитель В(&Родитель)");
	Запрос.УстановитьПараметр("Родитель", МассивВидов);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НовСтрРеквизит = НовСтрОбъект.Строки.Добавить();
		НовСтрРеквизит.Объект = НовСтрОбъект.Объект;
		НовСтрРеквизит.ИмяРеквизита = Выборка.Ссылка;
		НовСтрРеквизит.ПредставлениеРеквизита = Выборка.Наименование + " (" 
			+ НРег(МетаданныеОбъекта.ПредставлениеОбъекта) 
			+ ")";
		НовСтрРеквизит.ТипРеквизита = Выборка.Тип;
	КонецЦикла;
	
КонецПроцедуры

Процедура ДополнитьДеревоРеквизитовДополнительнымиРеквизитами(МетаданныеОбъекта, НовСтрОбъект, Отбор)
	
	НаборСвойствОбъекта = Новый СписокЗначений;
	Если МетаданныеОбъекта = Метаданные.Справочники.Партнеры Тогда
		Объект = Справочники.Партнеры.СоздатьЭлемент();
		Объект.ЮрФизЛицо = Отбор;
		НаборСвойствОбъекта.ЗагрузитьЗначения(УправлениеСвойствамиСлужебный.ПолучитьНаборыСвойствОбъекта(Объект).ВыгрузитьКолонку("Набор"));
	ИначеЕсли МетаданныеОбъекта = Метаданные.Справочники.КонтактныеЛицаПартнеров Тогда
		НаборСвойствОбъекта.ЗагрузитьЗначения(УправлениеСвойствамиСлужебный.ПолучитьНаборыСвойствОбъекта(Справочники.КонтактныеЛицаПартнеров.ПустаяСсылка()).ВыгрузитьКолонку("Набор"));
	ИначеЕсли МетаданныеОбъекта = Метаданные.Справочники.CRM_ПотенциальныеКлиенты Тогда
		НаборСвойствОбъекта.ЗагрузитьЗначения(УправлениеСвойствамиСлужебный.ПолучитьНаборыСвойствОбъекта(Справочники.CRM_ПотенциальныеКлиенты.ПустаяСсылка()).ВыгрузитьКолонку("Набор"));
	КонецЕсли;

	Если НаборСвойствОбъекта.Количество() > 0 Тогда
		ДополнительныеСвойстваОбъекта = Новый ТаблицаЗначений;
		ДополнительныеСвойстваОбъекта.Колонки.Добавить("Свойство");
		
		ВидСвойств = Перечисления.ВидыСвойств.ДополнительныеРеквизиты;
		ТаблицаДополнительныхРеквизитов = УправлениеСвойствамиСлужебный.ЗначенияСвойств(ДополнительныеСвойстваОбъекта,
			НаборСвойствОбъекта, ВидСвойств);
			
		Для Каждого СтрокаТЗ Из ТаблицаДополнительныхРеквизитов Цикл
			
			Если СтрокаТЗ.ТипЗначения.СодержитТип(Тип("Булево"))
				 ИЛИ СтрокаТЗ.ТипЗначения.СодержитТип(Тип("Число"))
				 ИЛИ СтрокаТЗ.ТипЗначения.СодержитТип(Тип("Дата"))
				 ИЛИ СтрокаТЗ.ТипЗначения.СодержитТип(Тип("Строка"))
				 ИЛИ СтрокаТЗ.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов"))
				 Тогда
				 
				НовСтрРеквизит = НовСтрОбъект.Строки.Добавить();
				НовСтрРеквизит.Объект = НовСтрОбъект.Объект;
				НовСтрРеквизит.ИмяРеквизита = СтрокаТЗ.Свойство;
				НовСтрРеквизит.ПредставлениеРеквизита = СтрокаТЗ.Наименование + " (" 
					+ НРег(МетаданныеОбъекта.ПредставлениеОбъекта) 
					+ ")";
				НовСтрРеквизит.ТипРеквизита = СтрокаТЗ.ТипЗначения;
				НовСтрРеквизит.Создавать = Истина;
			КонецЕсли;
			 
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьСсылкуРеквизита(ИдентификаторМетаданных, СтруктураРеквизитов, Создавать = Ложь)
	Ссылка = НайтиОбъект(ИдентификаторМетаданных.ПолноеИмя, СтруктураРеквизитов);
	Если Ссылка = Неопределено И Создавать Тогда
		Ссылка = СоздатьОбъект(ИдентификаторМетаданных.ПолноеИмя, СтруктураРеквизитов);
	КонецЕсли;
	Возврат Ссылка;
КонецФункции

Процедура ЗагрузитьФайлВТаблицу(ПараметрыВызоваСервера, АдресХранилища) Экспорт
	
	Расширение = ПараметрыВызоваСервера.Расширение;
	ИмяВременногоФайла = ПараметрыВызоваСервера.ИмяВременногоФайла;
	
	Если Расширение = "csv" ИЛИ Расширение = "txt" Тогда
		ТаблицаЗначений = ЗагрузитьCSVФайлВТаблицу(ИмяВременногоФайла, ПараметрыВызоваСервера.Разделитель);
	Иначе
		ЗагруженныйШаблонСДанными = Новый ТабличныйДокумент;
		ЗагруженныйШаблонСДанными.Прочитать(ИмяВременногоФайла);
		ЗагруженныйШаблонСДанными.ВставитьОбласть(ЗагруженныйШаблонСДанными.Область("R1"),
			 ЗагруженныйШаблонСДанными.Область("R1"),
			 ТипСмещенияТабличногоДокумента.ПоВертикали);
		
		Построитель = Новый ПостроительЗапроса;
		Построитель.ИсточникДанных = Новый ОписаниеИсточникаДанных(ЗагруженныйШаблонСДанными.Область(1, 1,
			 ЗагруженныйШаблонСДанными.ВысотаТаблицы,
			 ЗагруженныйШаблонСДанными.ШиринаТаблицы));
		
	    Построитель.Выполнить();
	    ТаблицаЗначений = Построитель.Результат.Выгрузить();
		Если ТаблицаЗначений.Количество() > 0 Тогда
			Для каждого Колонка Из ТаблицаЗначений.Колонки Цикл
				Колонка.Заголовок = ТаблицаЗначений[0][Колонка.Имя];
			КонецЦикла;
			ТаблицаЗначений.Удалить(ТаблицаЗначений[0]);
		КонецЕсли;
	КонецЕсли;
	
	АдресХранилища = ПоместитьВоВременноеХранилище(ТаблицаЗначений, АдресХранилища);
	
	ФайловаяСистема.УдалитьВременныйФайл(ИмяВременногоФайла);
	
КонецПроцедуры

Функция СформироватьДеревоРеквизитов(ИмяМакета, Отбор = Неопределено) Экспорт
	ТабДок = Обработки.CRM_ЗагрузкаДанныхИзФайла.ПолучитьМакет(ИмяМакета);
	Построитель = Новый ПостроительЗапроса;
	Построитель.ИсточникДанных = Новый ОписаниеИсточникаДанных(ТабДок.Область(1, 1,
		 ТабДок.ВысотаТаблицы,
		 ТабДок.ШиринаТаблицы));
	Если ЗначениеЗаполнено(Отбор) Тогда
		Построитель.Отбор.Добавить("Отбор");
		Построитель.Отбор["Отбор"].Использование = Истина;
		Построитель.Отбор["Отбор"].Значение = "";
		Построитель.Отбор["Отбор"].ВидСравнения = ВидСравнения.Равно;
		Построитель.Выполнить();
		ТаблицаРеквизитов = Построитель.Результат.Выгрузить();
		Построитель.Отбор["Отбор"].Значение = СтрЗаменить(Строка(Отбор), " ", "");
		Построитель.Выполнить();
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Построитель.Результат.Выгрузить(), ТаблицаРеквизитов);
	Иначе	
		Построитель.Выполнить();
		ТаблицаРеквизитов = Построитель.Результат.Выгрузить();
	КонецЕсли;
	ТаблицаОбъектов = ТаблицаРеквизитов.Скопировать(, "Объект");
	ТаблицаОбъектов.Свернуть("Объект");
	ПустаяСтрока = ТаблицаОбъектов.Найти("", "Объект");
	Если ПустаяСтрока <> Неопределено Тогда
		ТаблицаОбъектов.Удалить(ПустаяСтрока);
	КонецЕсли;
	
	ДеревоРеквизитов = Новый ДеревоЗначений;
	ДеревоРеквизитов.Колонки.Добавить("Объект");
	ДеревоРеквизитов.Колонки.Добавить("ИмяРеквизита");
	ДеревоРеквизитов.Колонки.Добавить("ПредставлениеРеквизита", , "Реквизит");
	ДеревоРеквизитов.Колонки.Добавить("ТипРеквизита");
	ДеревоРеквизитов.Колонки.Добавить("Обязательный");
	ДеревоРеквизитов.Колонки.Добавить("Создавать");
	
	Для каждого Объект Из ТаблицаОбъектов Цикл
		МетаданныеОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(Объект.Объект).ПустаяСсылка().Метаданные();
		НовСтрОбъект = ДеревоРеквизитов.Строки.Добавить();
		НовСтрОбъект.ПредставлениеРеквизита = МетаданныеОбъекта.Синоним;
		НовСтрОбъект.Объект = Объект.Объект;
		РеквизитыОбъекта = ТаблицаРеквизитов.НайтиСтроки(Новый Структура("Объект", Объект.Объект));
		Для каждого Реквизит Из РеквизитыОбъекта Цикл
			НовСтрРеквизит = НовСтрОбъект.Строки.Добавить();
			НовСтрРеквизит.Объект = Реквизит.Объект;
			НовСтрРеквизит.ИмяРеквизита = Реквизит.ИмяРеквизита;
			НовСтрРеквизит.ПредставлениеРеквизита = Реквизит.ПредставлениеРеквизита;
			НовСтрРеквизит.Создавать = (ЗначениеЗаполнено(Реквизит.Создавать) И Вычислить(Реквизит.Создавать));
			Если ЗначениеЗаполнено(Реквизит.ТипЗначения) Тогда
				НовСтрРеквизит.ТипРеквизита = Новый ОписаниеТипов(Реквизит.ТипЗначения);
			Иначе
				МетаданныеРеквизит = МетаданныеОбъекта.Реквизиты.Найти(Реквизит.ИмяРеквизита);
				Если МетаданныеРеквизит <> Неопределено Тогда
					НовСтрРеквизит.ТипРеквизита = МетаданныеРеквизит.Тип;
					НовСтрРеквизит.Обязательный = (МетаданныеРеквизит.ПроверкаЗаполнения = ПроверкаЗаполнения.ВыдаватьОшибку);
					Если НовСтрРеквизит.Обязательный Тогда
						НовСтрРеквизит.ПредставлениеРеквизита = НовСтрРеквизит.ПредставлениеРеквизита;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Для каждого СтандартныйРеквизит Из МетаданныеОбъекта.СтандартныеРеквизиты Цикл
			Строка = НовСтрОбъект.Строки.Найти(СтандартныйРеквизит.Имя, "ИмяРеквизита");
			Если Строка <> Неопределено Тогда
				Строка.ТипРеквизита = СтандартныйРеквизит.Тип;
				Строка.Обязательный = (СтандартныйРеквизит.ПроверкаЗаполнения = ПроверкаЗаполнения.ВыдаватьОшибку);
				Если Строка.Обязательный Тогда
					Строка.ПредставлениеРеквизита = Строка.ПредставлениеРеквизита;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		ДополнитьДеревоРеквизитовКонтактнойИнформацией(МетаданныеОбъекта, НовСтрОбъект, Отбор);
		Если ПолучитьФункциональнуюОпцию("ИспользоватьДополнительныеРеквизитыИСведения") Тогда
			ДополнитьДеревоРеквизитовДополнительнымиРеквизитами(МетаданныеОбъекта, НовСтрОбъект, Отбор);
		КонецЕсли;
	КонецЦикла;
	Возврат ДеревоРеквизитов;
КонецФункции

Функция НайтиОбъект(ИмяМетаданных, ПоляПоиска) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Таблица.Ссылка КАК Ссылка
	               |ИЗ
	               |	ИмяМетаданных КАК Таблица
	               |ГДЕ
	               |	ИСТИНА";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИмяМетаданных", ИмяМетаданных);
	Для каждого Поле Из ПоляПоиска Цикл
		Если ТипЗнч(Поле.Значение) = Тип("Структура") Тогда
			Запрос.Текст = Запрос.Текст + "
			|	И Таблица." + Поле.Значение.Поле + " = &" + Поле.Ключ;
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение.Значение);
		Иначе
			Запрос.Текст = Запрос.Текст + "
			|	И Таблица." + Поле.Ключ + " = &" + СтрЗаменить(Поле.Ключ, ".", "");
			Запрос.УстановитьПараметр(СтрЗаменить(Поле.Ключ, ".", ""), Поле.Значение);
		КонецЕсли;
	КонецЦикла;
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция СоздатьОбъект(ИмяМетаданных, ЗначенияПолей, ЗначенияПоУмолчанию = Неопределено,
	 МассивКИ = Неопределено, МассивДопРеквизитов = Неопределено, Комментарий = "",
	 ВозвращатьОбъект = Ложь) Экспорт
	
	МодульМенеджера = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ИмяМетаданных);
	МетаданныеОбъекта = МодульМенеджера.ПустаяСсылка().Метаданные();
	Если ОбщегоНазначения.ЭтоСправочник(МетаданныеОбъекта) Тогда
		Объект = МодульМенеджера.СоздатьЭлемент();
	ИначеЕсли ОбщегоНазначения.ЭтоДокумент(МетаданныеОбъекта) Тогда
		Объект = МодульМенеджера.СоздатьДокумент();
	ИначеЕсли ОбщегоНазначения.ЭтоЗадача(МетаданныеОбъекта) Тогда
		Объект = МодульМенеджера.СоздатьЗадачу();
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Объект, ЗначенияПолей);
	
	Если ЗначенияПоУмолчанию <> Неопределено Тогда
		Для каждого Значение Из ЗначенияПоУмолчанию Цикл
			Если НЕ ЗначениеЗаполнено(Объект[Значение.Ключ]) Тогда
				Объект[Значение.Ключ] = Значение.Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если МассивКИ <> Неопределено Тогда
		Для каждого СтрокаКИ Из МассивКИ Цикл
			УправлениеКонтактнойИнформацией.ДобавитьКонтактнуюИнформацию(Объект, СтрокаКИ.Представление, СтрокаКИ.Вид, , Ложь);
		КонецЦикла;
	КонецЕсли;
	
	Если МассивДопРеквизитов <> Неопределено Тогда
		Для каждого ДопРеквизит Из МассивДопРеквизитов Цикл
			НовРеквизит = Объект["ДополнительныеРеквизиты"].Добавить();
			ЗаполнитьЗначенияСвойств(НовРеквизит, ДопРеквизит);
		КонецЦикла;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Комментарий) Тогда
		Если МетаданныеОбъекта.Реквизиты.Найти("Комментарий") <> Неопределено Тогда
			Объект["Комментарий"] = Объект["Комментарий"] + Комментарий;
		ИначеЕсли МетаданныеОбъекта.Реквизиты.Найти("Описание") <> Неопределено Тогда
			Объект["Описание"] = Объект["Описание"] + Комментарий;
		КонецЕсли;
	КонецЕсли;
	
	Если ВозвращатьОбъект Тогда
		Возврат Объект;
	Иначе
		Объект.Записать();
		Возврат Объект.Ссылка;
	КонецЕсли;

КонецФункции

Процедура ОбновитьОбъект(СсылкаОбъекта, Параметры) Экспорт
	
	Объект = СсылкаОбъекта.ПолучитьОбъект();
	
	Если Параметры.Свойство("ЗначенияРеквизитов") Тогда
		Для каждого КлючИЗначение Из Параметры.ЗначенияРеквизитов Цикл
			Если ЗначениеЗаполнено(КлючИЗначение.Значение) Тогда
				Объект[КлючИЗначение.Ключ] = КлючИЗначение.Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Параметры.Свойство("КонтактнаяИнформация") Тогда
		ВидыКИ = Новый Массив;
		Для каждого СтрокаКИ Из Параметры.КонтактнаяИнформация Цикл
			Если Параметры.Свойство("ВариантЗагрузкиКИ") И Параметры.ВариантЗагрузкиКИ = "Дополнять" Тогда
				ТипКИ = СтрокаКИ.Вид.Тип;
				КонтактнаяИнформация = УправлениеКонтактнойИнформациейСлужебный.КонтактнаяИнформацияПоПредставлению(СтрокаКИ.Представление,
					 СтрокаКИ.Вид);
				ЗначениеКИ = ?(ТипЗнч(КонтактнаяИнформация) = Тип("Структура"),
					 УправлениеКонтактнойИнформациейСлужебный.СтруктураВСтрокуJSON(КонтактнаяИнформация),
					 "");
				
				ПараметрыПоиска = Новый Структура("Тип, Значение", ТипКИ, ЗначениеКИ);
				Если Объект.КонтактнаяИнформация.НайтиСтроки(ПараметрыПоиска).Количество() = 0 Тогда
					УправлениеКонтактнойИнформацией.ДобавитьКонтактнуюИнформацию(Объект, ЗначениеКИ, СтрокаКИ.Вид, , Ложь);
				КонецЕсли;
			Иначе
				Первый = (ВидыКИ.Найти(СтрокаКИ.Вид) = Неопределено);
				УправлениеКонтактнойИнформацией.ДобавитьКонтактнуюИнформацию(Объект, СтрокаКИ.Представление,
					 СтрокаКИ.Вид, ,
					 Первый);
				ВидыКИ.Добавить(СтрокаКИ.Вид);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Параметры.Свойство("ДополнительныеРеквизиты") Тогда
		Для каждого ДопРеквизит Из Параметры.ДополнительныеРеквизиты Цикл
			Реквизит = Объект["ДополнительныеРеквизиты"].Найти(ДопРеквизит.Свойство, "Свойство");
			Если Реквизит = Неопределено Тогда
				НовРеквизит = Объект["ДополнительныеРеквизиты"].Добавить();
				ЗаполнитьЗначенияСвойств(НовРеквизит, ДопРеквизит);
			Иначе
				Реквизит.Значение = ДопРеквизит.Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Параметры.Свойство("Комментарий") И ЗначениеЗаполнено(Параметры.Комментарий) 
		И СсылкаОбъекта.Метаданные().Реквизиты.Найти("Комментарий") <> Неопределено
			 И СтрНайти(Объект["Комментарий"] , Параметры.Комментарий) = 0 Тогда
		Объект["Комментарий"] = Объект["Комментарий"] + Параметры.Комментарий;
	КонецЕсли;
	
	Объект.Записать();
	Возврат;

КонецПроцедуры

Процедура ЗаполнитьЗначенияРеквизитовВТаблице(ТаблицаСоответствий, ИсходнаяТаблицаДанных) Экспорт
	ТаблицаДанных = Новый ТаблицаЗначений;
	Для каждого СтрокаСоотвествия Из ТаблицаСоответствий Цикл
		Если ЗначениеЗаполнено(СтрокаСоотвествия.ТипРеквизита) Тогда
			Если ТипЗнч(СтрокаСоотвествия.ТипРеквизита) = Тип("ОписаниеТипов") Тогда
				ТаблицаДанных.Колонки.Добавить(СтрокаСоотвествия.ИмяКолонкиФайла, СтрокаСоотвествия.ТипРеквизита);
			Иначе
				ТаблицаДанных.Колонки.Добавить(СтрокаСоотвествия.ИмяКолонкиФайла, Новый ОписаниеТипов("Строка"));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Для каждого СтрокаДанных Из ИсходнаяТаблицаДанных Цикл
		Строка = ТаблицаДанных.Добавить();
		Для каждого СтрокаСоотвествия Из ТаблицаСоответствий Цикл
			Если ЗначениеЗаполнено(СтрокаСоотвествия.ТипРеквизита) Тогда
				Значение = СтрокаДанных[СтрокаСоотвествия.ИмяКолонкиФайла];
				Если ЗначениеЗаполнено(Значение) Тогда
					Если ТипЗнч(СтрокаСоотвествия.ТипРеквизита) = Тип("ОписаниеТипов") Тогда
						ТипЗначения = СтрокаСоотвествия.ТипРеквизита.Типы()[0];
						МетаданныеРеквизита = Метаданные.НайтиПоТипу(ТипЗначения);
						Если МетаданныеРеквизита <> Неопределено Тогда
							Если ОбщегоНазначения.ЭтоОбъектСсылочногоТипа(МетаданныеРеквизита) Тогда
								СтруктураРеквизитов = Новый Структура("Наименование", Значение);
								Если ТипЗначения = Тип("СправочникСсылка.ЗначенияСвойствОбъектов") Тогда
									СтруктураРеквизитов.Вставить("Владелец", СтрокаСоотвествия.ИмяРеквизита);
								КонецЕсли;
								Строка[СтрокаСоотвествия.ИмяКолонкиФайла] = ПолучитьСсылкуРеквизита(ОбщегоНазначения.ИдентификаторОбъектаМетаданных(
									ТипЗначения), СтруктураРеквизитов, СтрокаСоотвествия.Создавать);
							ИначеЕсли ОбщегоНазначения.ЭтоПеречисление(МетаданныеРеквизита) Тогда
								Если МетаданныеРеквизита.ЗначенияПеречисления.Найти(Значение) <> Неопределено Тогда
									Строка[СтрокаСоотвествия.ИмяКолонкиФайла] = Перечисления[МетаданныеРеквизита.Имя][Значение];
								КонецЕсли;
							КонецЕсли;
						Иначе
							Если СтрокаСоотвествия.ТипРеквизита.Типы()[0] = Тип("Дата") Тогда
								Строка[СтрокаСоотвествия.ИмяКолонкиФайла] = CRM_ОбщегоНазначенияКлиентСервер.ПолучитьДатуИзСтроки(Значение);
							Иначе
								Строка[СтрокаСоотвествия.ИмяКолонкиФайла] = СтрокаСоотвествия.ТипРеквизита.ПривестиЗначение(Значение);
							КонецЕсли;
						КонецЕсли;
					Иначе
						Строка[СтрокаСоотвествия.ИмяКолонкиФайла] = Значение;
					КонецЕсли;
				ИначеЕсли СтрокаСоотвествия.ИмяРеквизита = "БизнесРегион" Тогда
					КолонкаСоответствияНомераТелефона = ТаблицаСоответствий.Найти(Справочники.ВидыКонтактнойИнформации.ТелефонПартнера,
						 "ИмяРеквизита");
					Если КолонкаСоответствияНомераТелефона = Неопределено Тогда
						Продолжить;
					КонецЕсли;
					НомерТелефона = СтрокаДанных[КолонкаСоответствияНомераТелефона.ИмяКолонкиФайла];
					Если Не ЗначениеЗаполнено(НомерТелефона) Тогда
						Продолжить;
					КонецЕсли;
					СтруктураТелефона = сфпСофтФонПроСервер.сфпЗаполнитьСтруктуруПолейПоПредставлениюТелефон(НомерТелефона);
					БизнесРегион = CRM_УправлениеКонтактнойИнформациейВызовСервера.ОпределитьБизнесРегион(СтруктураТелефона.КодГорода
						+ СтруктураТелефона.НомерТелефона, СтруктураТелефона.КодСтраны, СтруктураТелефона.КодГорода);
					Если БизнесРегион <> Неопределено Тогда
						Строка[СтрокаСоотвествия.ИмяКолонкиФайла] = БизнесРегион;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	ИсходнаяТаблицаДанных = ТаблицаДанных;
	
КонецПроцедуры

Процедура ЗагрузитьКлиентов(Параметры, АдресХранилища = Неопределено) Экспорт
	
	ЭтоCRM = CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM();
	
	ТекущаяДатаСеанса = ТекущаяДатаСеанса();
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	КомментарийЗагрузки = " (" 
		+ НСтр("ru='Создан при импорте клиентов';en='Created when importing clients'") + " " + Формат(ТекущаяДатаСеанса, "ДФ='dd.MM.yyyy HH:mm'") + ")";
	КомментарийОбновления = " (" 
		+ НСтр("ru='Обновлен при импорте клиентов';en='Updated when importing clients'") + " " + Формат(ТекущаяДатаСеанса, "ДФ='dd.MM.yyyy HH:mm'") + ")";
	ТаблицаДанных = Параметры.ТаблицаДанных;
	РазделительКИ = Параметры.РазделительКИ;
	ВариантЗагрузкиКИ = Параметры.ВариантЗагрузкиКИ;
	СопоставлениеРеквизитов = Параметры.СопоставлениеРеквизитов;
	ЗаполнитьЗначенияРеквизитовВТаблице(СопоставлениеРеквизитов, ТаблицаДанных);
	
	НеРабиратьТипыКИ = Новый Массив;
	НеРабиратьТипыКИ.Добавить(Перечисления.ТипыКонтактнойИнформации.Адрес);
	НеРабиратьТипыКИ.Добавить(Перечисления.ТипыКонтактнойИнформации.Другое);
	
	СтрокиКлиент = СопоставлениеРеквизитов.НайтиСтроки(Новый Структура("Объект", "Справочник.Партнеры"));
	
	СтрокиКонтрагент = СопоставлениеРеквизитов.НайтиСтроки(Новый Структура("Объект", "Справочник.Контрагенты"));

	СтрокиКонтакт = СопоставлениеРеквизитов.НайтиСтроки(Новый Структура("Объект", "Справочник.КонтактныеЛицаПартнеров"));
	
	СтрокиИнтерес = СопоставлениеРеквизитов.НайтиСтроки(Новый Структура("Объект", "Документ.CRM_Интерес"));
	
	СтруктураКлиентаПоУмолчанию = Новый Структура;
	СтруктураКлиентаПоУмолчанию.Вставить("Родитель", Параметры.Группа);
	СтруктураКлиентаПоУмолчанию.Вставить("ОсновнойМенеджер", Параметры.Ответственный);
	СтруктураКлиентаПоУмолчанию.Вставить("ЮрФизЛицо", Параметры.ЮрФизЛицо);
	
	СтруктураКонтрагентаПоУмолчанию = Новый Структура;
	Если Не ЭтоCRM Тогда
		Если Параметры.ЮрФизЛицо = Перечисления.КомпанияЧастноеЛицо.Компания Тогда
			СтруктураКонтрагентаПоУмолчанию.Вставить("ЮрФизЛицо", Перечисления.ЮрФизЛицо.ЮрЛицо);
			СтруктураКонтрагентаПоУмолчанию.Вставить("ЮридическоеФизическоеЛицо",
				 Перечисления["ЮридическоеФизическоеЛицо"].ЮридическоеЛицо);
		Иначе
			СтруктураКонтрагентаПоУмолчанию.Вставить("ЮрФизЛицо", Перечисления.ЮрФизЛицо.ФизЛицо);
			СтруктураКонтрагентаПоУмолчанию.Вставить("ЮридическоеФизическоеЛицо",
				 Перечисления["ЮридическоеФизическоеЛицо"].ФизическоеЛицо);
		КонецЕсли;
	КонецЕсли;
	
	СтруктураИнтересаПоУмолчанию = Новый Структура;
	СтруктураИнтересаПоУмолчанию.Вставить("СостояниеИнтереса",
		 Справочники.CRM_СостоянияИнтересов.ПервичноеСостояниеСценария(Параметры.СценарийПродаж));
	СтруктураИнтересаПоУмолчанию.Вставить("ТипУслуги", Параметры.ТипУслуги);
	СтруктураИнтересаПоУмолчанию.Вставить("Ответственный", Параметры.Ответственный); 
	СтруктураИнтересаПоУмолчанию.Вставить("Подразделение", Параметры.Ответственный.Подразделение); 
	СтруктураИнтересаПоУмолчанию.Вставить("Дата", ТекущаяДатаСеанса);
	
	КоличествоНовыхКлиентов = 0;
	КоличествоНовыхКонтактов = 0;
	КоличествоНовыхКонтрагентов = 0;
	КоличествоНовыхИнтересов = 0;
	
	Для каждого СтрокаДанных Из ТаблицаДанных Цикл
		
		СтруктураРеквизитов = Новый Структура;
		МассивКИ = Новый Массив;
		МассивДопРеквизитов = Новый Массив;
		Для каждого Строка Из СтрокиКлиент Цикл
			Если ЗначениеЗаполнено(СтрокаДанных[Строка.ИмяКолонкиФайла]) Тогда
				Если ТипЗнч(Строка.ИмяРеквизита) = Тип("Строка") Тогда
					Если СтруктураРеквизитов.Свойство(Строка.ИмяРеквизита) Тогда
						Если Строка.ТипРеквизита.Типы()[0] = Тип("Строка") Тогда
							СтруктураРеквизитов[Строка.ИмяРеквизита] = СтруктураРеквизитов[Строка.ИмяРеквизита] + " " 
								+ СтрокаДанных[Строка.ИмяКолонкиФайла];
						КонецЕсли;
					Иначе
						СтруктураРеквизитов.Вставить(Строка.ИмяРеквизита, СтрокаДанных[Строка.ИмяКолонкиФайла]);
					КонецЕсли;
				ИначеЕсли ТипЗнч(Строка.ИмяРеквизита) = Тип("СправочникСсылка.ВидыКонтактнойИнформации") Тогда
					Если (НеРабиратьТипыКИ.Найти(Строка.ИмяРеквизита.Тип) = Неопределено) Тогда
						МассивКИТемп = СтрРазделить(СтрокаДанных[Строка.ИмяКолонкиФайла], РазделительКИ);
					Иначе
						МассивКИТемп = Новый Массив;
						МассивКИТемп.Добавить(СтрокаДанных[Строка.ИмяКолонкиФайла]);
					КонецЕсли;
					Для каждого ТемпКИ Из МассивКИТемп Цикл
						СтруктураСтрокиКИ = Новый Структура("Тип, Вид, Представление", Строка.ТипРеквизита,
							 Строка.ИмяРеквизита,
							 СокрЛП(ТемпКИ));
						МассивКИ.Добавить(СтруктураСтрокиКИ);
					КонецЦикла;
				ИначеЕсли ТипЗнч(Строка.ИмяРеквизита) = Тип("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения") Тогда
					СтруктураДопРеквизита = Новый Структура("Свойство, Значение", Строка.ИмяРеквизита,
						 СтрокаДанных[Строка.ИмяКолонкиФайла]);
					МассивДопРеквизитов.Добавить(СтруктураДопРеквизита);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Если Не СтруктураРеквизитов.Свойство("Наименование") ИЛИ Не ЗначениеЗаполнено(СтруктураРеквизитов.Наименование) Тогда
			Продолжить;
		КонецЕсли;
		Если Не СтруктураРеквизитов.Свойство("НаименованиеПолное")
			 ИЛИ Не ЗначениеЗаполнено(СтруктураРеквизитов.НаименованиеПолное) Тогда
			СтруктураРеквизитов.Вставить("НаименованиеПолное", СтруктураРеквизитов.Наименование);
		КонецЕсли;

		КлиентСсылка = Неопределено;
		СтруктураПоиска = Новый Структура;
		
		КонтрагентСсылка = Неопределено;
		
		СтруктураРеквизитовКонтрагента = Новый Структура;
		МассивКИКонтрагента = Новый Массив;
		МассивДопРеквизитовКонтрагента = Новый Массив;

		Если ЭтоCRM Тогда
			Если Параметры.ИскатьПоИННКПП И СтруктураРеквизитов.Свойство("CRM_ИНН")
				 И ЗначениеЗаполнено(СтруктураРеквизитов["CRM_ИНН"]) Тогда
				СтруктураРеквизитов.Вставить("ЮрФизЛицо", ?(СтрДлина(СтруктураРеквизитов["CRM_ИНН"]) = 12, 
					Перечисления.КомпанияЧастноеЛицо.ЧастноеЛицо, Перечисления.КомпанияЧастноеЛицо.Компания));
				СтруктураПоиска.Вставить("CRM_ИНН", СтруктураРеквизитов["CRM_ИНН"]); 
				Если СтруктураРеквизитов.Свойство("CRM_КПП") И ЗначениеЗаполнено(СтруктураРеквизитов["CRM_КПП"]) Тогда
					СтруктураПоиска.Вставить("CRM_КПП", СтруктураРеквизитов["CRM_КПП"]);
				КонецЕсли;
				КлиентСсылка = Обработки.CRM_ЗагрузкаДанныхИзФайла.НайтиОбъект("Справочник.Партнеры", СтруктураПоиска);
			КонецЕсли;
		Иначе
			
			// Заполним сразу реквизиты контрагента
			
			Для каждого Строка Из СтрокиКонтрагент Цикл
				Если ЗначениеЗаполнено(СтрокаДанных[Строка.ИмяКолонкиФайла]) Тогда
					Если ТипЗнч(Строка.ИмяРеквизита) = Тип("Строка") Тогда
						Если СтруктураРеквизитовКонтрагента.Свойство(Строка.ИмяРеквизита) Тогда
							Если Строка.ТипРеквизита.Типы()[0] = Тип("Строка") Тогда
								СтруктураРеквизитовКонтрагента[Строка.ИмяРеквизита] = СтруктураРеквизитовКонтрагента[Строка.ИмяРеквизита] 
									+ " " 
									+ СтрокаДанных[Строка.ИмяКолонкиФайла];
							КонецЕсли;
						Иначе
							СтруктураРеквизитовКонтрагента.Вставить(Строка.ИмяРеквизита, СтрокаДанных[Строка.ИмяКолонкиФайла]);
						КонецЕсли;
					ИначеЕсли ТипЗнч(Строка.ИмяРеквизита) = Тип("СправочникСсылка.ВидыКонтактнойИнформации") Тогда
						СтруктураСтрокиКИ = Новый Структура("Тип, Вид, Представление", Строка.ТипРеквизита,
							 Строка.ИмяРеквизита,
							 СтрокаДанных[Строка.ИмяКолонкиФайла]);
						МассивКИКонтрагента.Добавить(СтруктураСтрокиКИ);
					ИначеЕсли ТипЗнч(Строка.ИмяРеквизита) = Тип("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения") Тогда
						СтруктураДопРеквизита = Новый Структура("Свойство, Значение", Строка.ИмяРеквизита,
							 СтрокаДанных[Строка.ИмяКолонкиФайла]);
						МассивДопРеквизитовКонтрагента.Добавить(СтруктураДопРеквизита);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			// Партнера надо искать по ИНН и КПП контрагента
			
			Если Параметры.ИскатьПоИННКПП И СтруктураРеквизитовКонтрагента.Свойство("ИНН")
				 И ЗначениеЗаполнено(СтруктураРеквизитовКонтрагента["ИНН"]) Тогда
				СтруктураРеквизитов.Вставить("ЮрФизЛицо", ?(СтрДлина(СтруктураРеквизитовКонтрагента["ИНН"]) = 12, 
					Перечисления.КомпанияЧастноеЛицо.ЧастноеЛицо, Перечисления.КомпанияЧастноеЛицо.Компания));
				СтруктураРеквизитовКонтрагента.Вставить("ЮрФизЛицо", ?(СтрДлина(СтруктураРеквизитовКонтрагента["ИНН"]) = 12, 
					Перечисления.ЮрФизЛицо.ФизЛицо, Перечисления.ЮрФизЛицо.ЮрЛицо));
				СтруктураРеквизитовКонтрагента.Вставить("ЮридическоеФизическоеЛицо",
					 ?(СтрДлина(СтруктураРеквизитовКонтрагента["ИНН"]) = 12,
					Перечисления["ЮридическоеФизическоеЛицо"].ФизическоеЛицо, Перечисления["ЮридическоеФизическоеЛицо"].ЮридическоеЛицо));
				СтруктураПоиска.Вставить("ИНН", СтруктураРеквизитовКонтрагента["ИНН"]); 
				Если СтруктураРеквизитовКонтрагента.Свойство("КПП") И ЗначениеЗаполнено(СтруктураРеквизитовКонтрагента["КПП"]) Тогда
					СтруктураПоиска.Вставить("КПП", СтруктураРеквизитовКонтрагента["КПП"]);
				КонецЕсли;
				КонтрагентСсылка = Обработки.CRM_ЗагрузкаДанныхИзФайла.НайтиОбъект("Справочник.Контрагенты", СтруктураПоиска);
				Если ЗначениеЗаполнено(КонтрагентСсылка) Тогда
					КлиентСсылка = КонтрагентСсылка.Партнер;
				КонецЕсли;					
			КонецЕсли;
		КонецЕсли;	
			
		Если КлиентСсылка = Неопределено Тогда
			Если МассивКИ.Количество() > 0 Тогда
				Если Параметры.ИскатьПоТелефону Тогда
					Для каждого КИ Из МассивКИ Цикл
						Если КИ.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
							СтруктураПоиска.Очистить();
							СтруктураПоиска.Вставить("Тип", КИ.Тип);
							СтруктураПоиска.Вставить("Представление", КИ.Представление);
							КонтактСсылка = Обработки.CRM_ЗагрузкаДанныхИзФайла.НайтиОбъект("Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация",
								 СтруктураПоиска);
							Если КонтактСсылка <> Неопределено Тогда
								Прервать;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				Если КлиентСсылка = Неопределено И Параметры.ИскатьПоEmail Тогда
					Для каждого КИ Из МассивКИ Цикл
						Если КИ.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
							СтруктураПоиска.Очистить();
							СтруктураПоиска.Вставить("Тип", КИ.Тип);
							СтруктураПоиска.Вставить("Представление", КИ.Представление);
							КонтактСсылка = Обработки.CRM_ЗагрузкаДанныхИзФайла.НайтиОбъект("Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация",
								 СтруктураПоиска);
							Если КонтактСсылка <> Неопределено Тогда
								Прервать;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Если КлиентСсылка = Неопределено Тогда
            Если Не Параметры.ИскатьПоИННКПП Или НЕ СтруктураРеквизитов.Свойство("CRM_ИНН")
            	 Или Не ЗначениеЗаполнено(СтруктураРеквизитов["CRM_ИНН"]) Тогда
				СтруктураПоиска.Очистить();
				Если Параметры.ИскатьПоНаименованию И СтруктураРеквизитов.Свойство("Наименование")
					 И ЗначениеЗаполнено(СтруктураРеквизитов["Наименование"]) Тогда
					СтруктураПоиска.Вставить("Наименование", СтруктураРеквизитов["Наименование"]);
					КлиентСсылка = Обработки.CRM_ЗагрузкаДанныхИзФайла.НайтиОбъект("Справочник.Партнеры", СтруктураПоиска);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Если КлиентСсылка = Неопределено Тогда
			СтруктураРеквизитов.Вставить("ДатаРегистрации", ТекущаяДатаСеанса);
			СтруктураРеквизитов.Вставить("CRM_Автор", ТекущийПользователь);
			КлиентОбъект = Обработки.CRM_ЗагрузкаДанныхИзФайла.СоздатьОбъект("Справочник.Партнеры",
				 СтруктураРеквизитов, СтруктураКлиентаПоУмолчанию,
				МассивКИ, МассивДопРеквизитов, КомментарийЗагрузки, Истина);
			Для каждого ТипОтношений Из Параметры.CRM_ВсеТипыОтношений Цикл
				Если ТипОтношений.Пометка Тогда
					НовСтр = КлиентОбъект.CRM_ТипыОтношений.Добавить();
					НовСтр.ТипОтношений = ТипОтношений.Значение;	
				КонецЕсли;
			КонецЦикла;
			CRM_ОбработкиЗаполненияЗаписиКопированияОбъектов.СкорректироватьФлагиПоТипамОтношений(КлиентОбъект);
			КлиентОбъект.Записать();
			КлиентСсылка = КлиентОбъект.Ссылка;
			КоличествоНовыхКлиентов = КоличествоНовыхКлиентов + 1;
		Иначе
			ПараметрыОбновления = Новый Структура("ЗначенияРеквизитов, КонтактнаяИнформация,
				| ДополнительныеРеквизиты, Комментарий, ВариантЗагрузкиКИ",
				СтруктураРеквизитов, МассивКИ, МассивДопРеквизитов, КомментарийОбновления, ВариантЗагрузкиКИ);
			ОбновитьОбъект(КлиентСсылка, ПараметрыОбновления);
		КонецЕсли;
		
		Если КлиентСсылка = Неопределено Тогда
			Продолжить;
		КонецЕсли;

		Если Не ЭтоCRM Тогда 
			
			// Создаём контрагента
			
			ИспользоватьПартнеровКакКонтрагентов = Параметры.Свойство("ИспользоватьПартнеровКакКонтрагентов");
			
			Если КонтрагентСсылка = Неопределено Тогда
			
				СтруктураРеквизитовКонтрагента.Вставить("Партнер", КлиентСсылка);
				
				Если ИспользоватьПартнеровКакКонтрагентов Тогда
					Если Не СтруктураРеквизитовКонтрагента.Свойство("Наименование")
						 ИЛИ Не ЗначениеЗаполнено(СтруктураРеквизитовКонтрагента.Наименование) Тогда
						СтруктураРеквизитовКонтрагента.Вставить("Наименование", СтруктураРеквизитов.Наименование);
					КонецЕсли;
				КонецЕсли;
				НаименовениеКонтрагентаЗаполнено = СтруктураРеквизитовКонтрагента.Свойство("Наименование")
					 И ЗначениеЗаполнено(СтруктураРеквизитовКонтрагента.Наименование);
				
				Если Не СтруктураРеквизитовКонтрагента.Свойство("НаименованиеПолное")
					 ИЛИ Не ЗначениеЗаполнено(СтруктураРеквизитовКонтрагента.НаименованиеПолное) Тогда
					СтруктураРеквизитовКонтрагента.Вставить("НаименованиеПолное", СтруктураРеквизитовКонтрагента.Наименование);
				КонецЕсли;
				
				Если КонтрагентСсылка = Неопределено Тогда
					Если МассивКИКонтрагента.Количество() > 0 Тогда
						Если Параметры.ИскатьПоТелефону Тогда
							Для каждого КИ Из МассивКИКонтрагента Цикл
								Если КИ.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
									СтруктураПоиска.Очистить();
									СтруктураПоиска.Вставить("Тип", КИ.Тип);
									СтруктураПоиска.Вставить("Представление", КИ.Представление);
									КонтрагентСсылка = Обработки.CRM_ЗагрузкаДанныхИзФайла.НайтиОбъект("Справочник.Контрагенты.КонтактнаяИнформация",
										 СтруктураПоиска);
									Если КонтрагентСсылка <> Неопределено Тогда
										Прервать;
									КонецЕсли;
								КонецЕсли;
							КонецЦикла;
						КонецЕсли;
						Если КонтрагентСсылка = Неопределено И Параметры.ИскатьПоEmail Тогда
							Для каждого КИ Из МассивКИКонтрагента Цикл
								Если КИ.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
									СтруктураПоиска.Очистить();
									СтруктураПоиска.Вставить("Тип", КИ.Тип);
									СтруктураПоиска.Вставить("Представление", КИ.Представление);
									КонтрагентСсылка = Обработки.CRM_ЗагрузкаДанныхИзФайла.НайтиОбъект("Справочник.Контрагенты.КонтактнаяИнформация",
										 СтруктураПоиска);
									Если КонтрагентСсылка <> Неопределено Тогда
										Прервать;
									КонецЕсли;
								КонецЕсли;
							КонецЦикла;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;	
			Если КонтрагентСсылка = Неопределено Тогда
				СтруктураПоиска.Очистить();
				Если Параметры.ИскатьПоНаименованию И СтруктураРеквизитовКонтрагента.Свойство("Наименование")
					 И ЗначениеЗаполнено(СтруктураРеквизитовКонтрагента["Наименование"]) Тогда
					Если Параметры.ИскатьПоИННКПП И СтруктураРеквизитов.Свойство("CRM_ИНН")
						 И ЗначениеЗаполнено(СтруктураРеквизитов["CRM_ИНН"]) Тогда
						СтруктураПоиска.Вставить("CRM_ИНН", СтруктураРеквизитов["CRM_ИНН"]);
					КонецЕсли;
					СтруктураПоиска.Вставить("Наименование", СтруктураРеквизитовКонтрагента["Наименование"]);
					КонтрагентСсылка = Обработки.CRM_ЗагрузкаДанныхИзФайла.НайтиОбъект("Справочник.Контрагенты", СтруктураПоиска);
				КонецЕсли;
			КонецЕсли;
			
			Если КонтрагентСсылка = Неопределено Тогда
				
				Если НаименовениеКонтрагентаЗаполнено Тогда
				
					КонтрагентОбъект = Обработки.CRM_ЗагрузкаДанныхИзФайла.СоздатьОбъект("Справочник.Контрагенты",
						 СтруктураРеквизитовКонтрагента, СтруктураКонтрагентаПоУмолчанию,
						МассивКИКонтрагента, МассивДопРеквизитовКонтрагента, КомментарийЗагрузки, Истина);
					КонтрагентОбъект.Записать();
					КонтрагентСсылка = КонтрагентОбъект.Ссылка;
					КоличествоНовыхКонтрагентов = КоличествоНовыхКонтрагентов + 1;
				КонецЕсли;	
					
			Иначе
				ПараметрыОбновления = Новый Структура("ЗначенияРеквизитов, КонтактнаяИнформация,
					| ДополнительныеРеквизиты, Комментарий, ВариантЗагрузкиКИ",
					СтруктураРеквизитовКонтрагента, МассивКИКонтрагента, МассивДопРеквизитовКонтрагента, КомментарийОбновления, ВариантЗагрузкиКИ);
				ОбновитьОбъект(КонтрагентСсылка, ПараметрыОбновления);
			КонецЕсли;
			
		КонецЕсли;
		
		СтруктураРеквизитов = Новый Структура;
		СтруктураРеквизитов.Вставить("Владелец", КлиентСсылка);
		МассивКИ = Новый Массив;
		МассивДопРеквизитов = Новый Массив;
		Для каждого Строка Из СтрокиКонтакт Цикл
			Если ЗначениеЗаполнено(СтрокаДанных[Строка.ИмяКолонкиФайла]) Тогда
				Если ТипЗнч(Строка.ИмяРеквизита) = Тип("Строка") Тогда
						Если СтруктураРеквизитов.Свойство(Строка.ИмяРеквизита) Тогда
							Если Строка.ТипРеквизита.Типы()[0] = Тип("Строка") Тогда
								СтруктураРеквизитов[Строка.ИмяРеквизита] = СтруктураРеквизитов[Строка.ИмяРеквизита] + " " 
									+ СтрокаДанных[Строка.ИмяКолонкиФайла];
							КонецЕсли;
						Иначе
							СтруктураРеквизитов.Вставить(Строка.ИмяРеквизита, СтрокаДанных[Строка.ИмяКолонкиФайла]);
						КонецЕсли;
				ИначеЕсли ТипЗнч(Строка.ИмяРеквизита) = Тип("СправочникСсылка.ВидыКонтактнойИнформации") Тогда
					Если (НеРабиратьТипыКИ.Найти(Строка.ИмяРеквизита.Тип) = Неопределено) Тогда
						МассивКИТемп = СтрРазделить(СтрокаДанных[Строка.ИмяКолонкиФайла], РазделительКИ);
					Иначе
						МассивКИТемп = Новый Массив;
						МассивКИТемп.Добавить(СтрокаДанных[Строка.ИмяКолонкиФайла]);
					КонецЕсли;
					Для каждого ТемпКИ Из МассивКИТемп Цикл
						СтруктураСтрокиКИ = Новый Структура("Тип, Вид, Представление", Строка.ТипРеквизита,
							 Строка.ИмяРеквизита,
							 СокрЛП(ТемпКИ));
						МассивКИ.Добавить(СтруктураСтрокиКИ);
					КонецЦикла;
				ИначеЕсли ТипЗнч(Строка.ИмяРеквизита) = Тип("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения") Тогда
					СтруктураДопРеквизита = Новый Структура("Свойство, Значение", Строка.ИмяРеквизита,
						 СтрокаДанных[Строка.ИмяКолонкиФайла]);
					МассивДопРеквизитов.Добавить(СтруктураДопРеквизита);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		КонтактСсылка = Неопределено;
		СтруктураПоиска = Новый Структура;
		Если МассивКИ.Количество() > 0 Тогда
			Если Параметры.ИскатьПоТелефону Тогда
				Для каждого КИ Из МассивКИ Цикл
					Если КИ.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
						СтруктураПоиска.Очистить();
						СтруктураПоиска.Вставить("Владелец", Новый Структура("Поле, Значение", "Ссылка.Владелец", КлиентСсылка));
						СтруктураПоиска.Вставить("Тип", КИ.Тип);
						СтруктураПоиска.Вставить("Представление", КИ.Представление);
						КонтактСсылка = Обработки.CRM_ЗагрузкаДанныхИзФайла.НайтиОбъект("Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация",
							 СтруктураПоиска);
						Если КонтактСсылка <> Неопределено Тогда
							Прервать;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			Если КонтактСсылка = Неопределено И Параметры.ИскатьПоEmail Тогда
				Для каждого КИ Из МассивКИ Цикл
					Если КИ.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
						СтруктураПоиска.Очистить();
						СтруктураПоиска.Вставить("Владелец", Новый Структура("Поле, Значение", "Ссылка.Владелец", КлиентСсылка));
						СтруктураПоиска.Вставить("Тип", КИ.Тип);
						СтруктураПоиска.Вставить("Представление", КИ.Представление);
						КонтактСсылка = Обработки.CRM_ЗагрузкаДанныхИзФайла.НайтиОбъект("Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация",
							 СтруктураПоиска);
						Если КонтактСсылка <> Неопределено Тогда
							Прервать;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		Если КонтактСсылка = Неопределено Тогда
			Если Параметры.ИскатьПоНаименованию И СтруктураРеквизитов.Свойство("Наименование")
				 И ЗначениеЗаполнено(СтруктураРеквизитов["Наименование"]) Тогда
				СтруктураПоиска.Очистить();
				СтруктураПоиска.Вставить("Владелец", КлиентСсылка);
				СтруктураПоиска.Вставить("Наименование", СтруктураРеквизитов["Наименование"]);
				КонтактСсылка = Обработки.CRM_ЗагрузкаДанныхИзФайла.НайтиОбъект("Справочник.КонтактныеЛицаПартнеров",
					 СтруктураПоиска);
			КонецЕсли;
		КонецЕсли;
		Если СтруктураРеквизитов.Количество() > 1 Тогда
			Если КонтактСсылка = Неопределено Тогда
				СтруктураРеквизитов.Вставить("ДатаРегистрацииСвязи", ТекущаяДатаСеанса);
				СтруктураРеквизитов.Вставить("Автор", ТекущийПользователь);
				КонтактСсылка = Обработки.CRM_ЗагрузкаДанныхИзФайла.СоздатьОбъект("Справочник.КонтактныеЛицаПартнеров",
					 СтруктураРеквизитов, , МассивКИ, МассивДопРеквизитов,
					 КомментарийЗагрузки);
				КоличествоНовыхКонтактов = КоличествоНовыхКонтактов + 1;
			ИначеЕсли СтруктураРеквизитов.Количество() > 1 Тогда
				ПараметрыОбновления = Новый Структура("ЗначенияРеквизитов, КонтактнаяИнформация,
					| ДополнительныеРеквизиты, Комментарий, ВариантЗагрузкиКИ",
					СтруктураРеквизитов, МассивКИ, МассивДопРеквизитов, КомментарийОбновления, ВариантЗагрузкиКИ);
				ОбновитьОбъект(КонтактСсылка, ПараметрыОбновления);
			КонецЕсли;
		КонецЕсли;
		
		Если СтрокиИнтерес.Количество() > 0 Тогда
			СтруктураРеквизитов = Новый Структура;
			СтруктураРеквизитовЗадачи = Новый Структура;
			Для каждого Строка Из СтрокиИнтерес Цикл
				Если ЗначениеЗаполнено(СтрокаДанных[Строка.ИмяКолонкиФайла]) Тогда
					Если ТипЗнч(Строка.ИмяРеквизита) = Тип("Строка") Тогда
						Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Документы.CRM_Интерес.ПустаяСсылка(),
							 Строка.ИмяРеквизита) Тогда
							СтруктураРеквизитов.Вставить(Строка.ИмяРеквизита, СтрокаДанных[Строка.ИмяКолонкиФайла]);
						Иначе
							Если ЗначениеЗаполнено(СтрокаДанных[Строка.ИмяКолонкиФайла]) Тогда
								СтруктураРеквизитовЗадачи.Вставить(Строка.ИмяРеквизита, СтрокаДанных[Строка.ИмяКолонкиФайла]);
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			Если СтруктураРеквизитов.Количество() > 0 И СтруктураРеквизитов.Свойство("Тема") Тогда 
				СтруктураРеквизитов.Вставить("Партнер", КлиентСсылка); 
				СтруктураРеквизитов.Вставить("КонтактноеЛицо", КонтактСсылка); 
				СтруктураРеквизитов.Вставить("Ответственный", КлиентСсылка.ОсновнойМенеджер); 
				СтруктураРеквизитов.Вставить("Подразделение", КлиентСсылка.ОсновнойМенеджер.Подразделение); 
				СтруктураРеквизитов.Вставить("Офис", СтруктураРеквизитов.Подразделение.CRM_Офис); 
				СтруктураРеквизитов.Вставить("Организация", CRM_ОбщегоНазначенияСервер.ПолучитьПредопределеннуюОрганизацию());
				СтруктураРеквизитов.Вставить("Автор", Пользователи.ТекущийПользователь());
				
				ИнтересСсылка = Неопределено;
				СтруктураПоиска = Новый Структура;
				СтруктураПоиска.Вставить("Партнер", КлиентСсылка); 
				Если ЗначениеЗаполнено(КонтактСсылка) Тогда
					СтруктураПоиска.Вставить("КонтактноеЛицо", КонтактСсылка); 
				КонецЕсли;
				СтруктураПоиска.Вставить("Тема", СтруктураРеквизитов["Тема"]); 
				ИнтересСсылка = Обработки.CRM_ЗагрузкаДанныхИзФайла.НайтиОбъект("Документ.CRM_Интерес", СтруктураПоиска);
				Если ИнтересСсылка = Неопределено Тогда
					ИнтересСсылка = Обработки.CRM_ЗагрузкаДанныхИзФайла.СоздатьОбъект("Документ.CRM_Интерес",
						 СтруктураРеквизитов, СтруктураИнтересаПоУмолчанию, , ,
						 КомментарийЗагрузки);
					КоличествоНовыхИнтересов = КоличествоНовыхИнтересов + 1;
					Если ИнтересСсылка <> Неопределено И СтруктураРеквизитовЗадачи.Количество() > 0 Тогда
						СтруктураРеквизитовЗадачи.Вставить("Исполнитель", КлиентСсылка.ОсновнойМенеджер);
						СтруктураРеквизитовЗадачи.Вставить("CRM_Личная", Истина);
						СтруктураРеквизитовЗадачи.Вставить("CRM_Партнер", КлиентСсылка);
						СтруктураРеквизитовЗадачи.Вставить("CRM_КонтактноеЛицо", КонтактСсылка);
						СтруктураРеквизитовЗадачи.Вставить("Предмет", ИнтересСсылка);
						СтруктураРеквизитовЗадачи.Вставить("Автор", Пользователи.ТекущийПользователь());
						СтруктураРеквизитовЗадачи.Вставить("Дата", ТекущаяДатаСеанса);
						СтруктураРеквизитовЗадачи.Вставить("ДатаНачала", ТекущаяДатаСеанса);
						Обработки.CRM_ЗагрузкаДанныхИзФайла.СоздатьОбъект("Задача.ЗадачаИсполнителя",
							 СтруктураРеквизитовЗадачи, , , ,
							 "");
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ТекстСообщения = СтрШаблон(НСтр("ru='Загружено новых клиентов: %1"
"Загружено новых контактов: %2"
"Создано новых интересов клиентов: %3';en='Uploaded new customers: %1"
"Uploaded new contacts: %2"
"Created new customer leads: %3'"), КоличествоНовыхКлиентов, КоличествоНовыхКонтактов, КоличествоНовыхИнтересов);
	
	ПоместитьВоВременноеХранилище(Новый Структура("Заголовок, ТекстСообщения",
		 НСтр("ru='Загрузка данных завершена'"), ТекстСообщения),
		 АдресХранилища);
	
КонецПроцедуры

Процедура ЗагрузитьПотенциальныхКлиентов(Параметры, АдресХранилища = Неопределено) Экспорт
	
	ЭтоCRM = CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM();
	ТекущаяДатаСеанса = ТекущаяДатаСеанса();
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	КомментарийЗагрузки = " (" 
		+ НСтр("ru='Создан при импорте клиентов';en='Created when importing clients'") + " " + Формат(ТекущаяДатаСеанса, "ДФ='dd.MM.yyyy HH:mm'") + ")";
	КомментарийОбновления = " (" 
		+ НСтр("ru='Обновлен при импорте клиентов';en='Updated when importing clients'") + " " + Формат(ТекущаяДатаСеанса, "ДФ='dd.MM.yyyy HH:mm'") + ")";
	ТаблицаДанных = Параметры.ТаблицаДанных;
	РазделительКИ = Параметры.РазделительКИ;
	ВариантЗагрузкиКИ = Параметры.ВариантЗагрузкиКИ;
	СопоставлениеРеквизитов = Параметры.СопоставлениеРеквизитов;
	ЗаполнитьЗначенияРеквизитовВТаблице(СопоставлениеРеквизитов, ТаблицаДанных);
	
	НеРабиратьТипыКИ = Новый Массив;
	НеРабиратьТипыКИ.Добавить(Перечисления.ТипыКонтактнойИнформации.Адрес);
	НеРабиратьТипыКИ.Добавить(Перечисления.ТипыКонтактнойИнформации.Другое);
	
	СтрокиКлиент = СопоставлениеРеквизитов.НайтиСтроки(Новый Структура("Объект", "Справочник.CRM_ПотенциальныеКлиенты"));
	
	СтрокиИнтерес = СопоставлениеРеквизитов.НайтиСтроки(Новый Структура("Объект", "Документ.CRM_Интерес"));
	
	СтруктураКлиентаПоУмолчанию = Новый Структура;
	СтруктураКлиентаПоУмолчанию.Вставить("Родитель", Параметры.Группа);
	СтруктураКлиентаПоУмолчанию.Вставить("ОсновнойМенеджер", Параметры.Ответственный);
	
	СтруктураИнтересаПоУмолчанию = Новый Структура;
	СтруктураИнтересаПоУмолчанию.Вставить("СостояниеИнтереса",
		 Справочники.CRM_СостоянияИнтересов.ПервичноеСостояниеСценария(Параметры.СценарийПродаж));
	СтруктураИнтересаПоУмолчанию.Вставить("ТипУслуги", Параметры.ТипУслуги);
	СтруктураИнтересаПоУмолчанию.Вставить("Ответственный", Параметры.Ответственный); 
	СтруктураИнтересаПоУмолчанию.Вставить("Подразделение", Параметры.Ответственный.Подразделение); 
	СтруктураИнтересаПоУмолчанию.Вставить("Дата", ТекущаяДатаСеанса);
	
	КоличествоНовыхКлиентов = 0;
	КоличествоНовыхИнтересов = 0;
	
	Для каждого СтрокаДанных Из ТаблицаДанных Цикл
		
		СтруктураРеквизитов = Новый Структура;
		МассивКИ = Новый Массив;
		МассивДопРеквизитов = Новый Массив;
		Для каждого Строка Из СтрокиКлиент Цикл
			Если ЗначениеЗаполнено(СтрокаДанных[Строка.ИмяКолонкиФайла]) Тогда
				Если ТипЗнч(Строка.ИмяРеквизита) = Тип("Строка") Тогда
					Если СтруктураРеквизитов.Свойство(Строка.ИмяРеквизита) Тогда
						Если Строка.ТипРеквизита.Типы()[0] = Тип("Строка") Тогда
							СтруктураРеквизитов[Строка.ИмяРеквизита] = СтруктураРеквизитов[Строка.ИмяРеквизита] + " " 
								+ СтрокаДанных[Строка.ИмяКолонкиФайла];
						КонецЕсли;
					Иначе
						СтруктураРеквизитов.Вставить(Строка.ИмяРеквизита, СтрокаДанных[Строка.ИмяКолонкиФайла]);
					КонецЕсли;
				ИначеЕсли ТипЗнч(Строка.ИмяРеквизита) = Тип("СправочникСсылка.ВидыКонтактнойИнформации") Тогда
					Если (НеРабиратьТипыКИ.Найти(Строка.ИмяРеквизита.Тип) = Неопределено) Тогда
						МассивКИТемп = СтрРазделить(СтрокаДанных[Строка.ИмяКолонкиФайла], РазделительКИ);
					Иначе
						МассивКИТемп = Новый Массив;
						МассивКИТемп.Добавить(СтрокаДанных[Строка.ИмяКолонкиФайла]);
					КонецЕсли;
					Для каждого ТемпКИ Из МассивКИТемп Цикл
						СтруктураСтрокиКИ = Новый Структура("Тип, Вид, Представление", Строка.ТипРеквизита,
							 Строка.ИмяРеквизита,
							 СокрЛП(ТемпКИ));
						МассивКИ.Добавить(СтруктураСтрокиКИ);
					КонецЦикла;
				ИначеЕсли ТипЗнч(Строка.ИмяРеквизита) = Тип("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения") Тогда
					СтруктураДопРеквизита = Новый Структура("Свойство, Значение", Строка.ИмяРеквизита,
						 СтрокаДанных[Строка.ИмяКолонкиФайла]);
					МассивДопРеквизитов.Добавить(СтруктураДопРеквизита);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Если Не СтруктураРеквизитов.Свойство("Наименование") ИЛИ Не ЗначениеЗаполнено(СтруктураРеквизитов.Наименование) Тогда
			Продолжить;
		КонецЕсли;

		КлиентСсылка = Неопределено;
		СтруктураПоиска = Новый Структура;
		Если КлиентСсылка = Неопределено Тогда
			Если МассивКИ.Количество() > 0 Тогда
				Если Параметры.ИскатьПоТелефону Тогда
					Для каждого КИ Из МассивКИ Цикл
						Если КИ.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
							СтруктураПоиска.Очистить();
							СтруктураПоиска.Вставить("Тип", КИ.Тип);
							СтруктураПоиска.Вставить("Представление", КИ.Представление);
							КлиентСсылка = Обработки.CRM_ЗагрузкаДанныхИзФайла.НайтиОбъект("Справочник.CRM_ПотенциальныеКлиенты.КонтактнаяИнформация",
								 СтруктураПоиска);
							Если КлиентСсылка = Неопределено Тогда
								КлиентСсылка = Обработки.CRM_ЗагрузкаДанныхИзФайла.НайтиОбъект("Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация",
									 СтруктураПоиска);
							КонецЕсли;
							Если НЕ ЭтоCRM И КлиентСсылка = Неопределено Тогда
								КлиентСсылка = Обработки.CRM_ЗагрузкаДанныхИзФайла.НайтиОбъект("Справочник.Контрагенты.КонтактнаяИнформация",
									 СтруктураПоиска);
							КонецЕсли;
							Если КлиентСсылка <> Неопределено Тогда
								Прервать;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				Если КлиентСсылка = Неопределено И Параметры.ИскатьПоEmail Тогда
					Для каждого КИ Из МассивКИ Цикл
						Если КИ.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
							СтруктураПоиска.Очистить();
							СтруктураПоиска.Вставить("Тип", КИ.Тип);
							СтруктураПоиска.Вставить("Представление", КИ.Представление);
							КлиентСсылка = Обработки.CRM_ЗагрузкаДанныхИзФайла.НайтиОбъект("Справочник.CRM_ПотенциальныеКлиенты.КонтактнаяИнформация",
								 СтруктураПоиска);
							Если КлиентСсылка = Неопределено Тогда
								КлиентСсылка = Обработки.CRM_ЗагрузкаДанныхИзФайла.НайтиОбъект("Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация",
									 СтруктураПоиска);
							КонецЕсли;
							Если НЕ ЭтоCRM И КлиентСсылка = Неопределено Тогда
								КлиентСсылка = Обработки.CRM_ЗагрузкаДанныхИзФайла.НайтиОбъект("Справочник.Контрагенты.КонтактнаяИнформация",
									 СтруктураПоиска);
							КонецЕсли;
							Если КлиентСсылка <> Неопределено Тогда
								Прервать;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли; 
		
		// Нашли контакт, но не в справочнике "Потенциальные клиенты". Т.е. с клиентом уже работаем.
		Если ТипЗнч(КлиентСсылка) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
			Продолжить;
		КонецЕсли;
		Если НЕ ЭтоCRM И ТипЗнч(КлиентСсылка) = Тип("СправочникСсылка" + ".Контрагенты") Тогда
			Продолжить;
		КонецЕсли;
		
		Если КлиентСсылка = Неопределено Тогда
			СтруктураПоиска.Очистить();
			Если Параметры.ИскатьПоНаименованию И СтруктураРеквизитов.Свойство("Наименование")
				 И ЗначениеЗаполнено(СтруктураРеквизитов["Наименование"]) Тогда
				СтруктураПоиска.Вставить("Наименование", СтруктураРеквизитов["Наименование"]);
				КлиентСсылка = Обработки.CRM_ЗагрузкаДанныхИзФайла.НайтиОбъект("Справочник.CRM_ПотенциальныеКлиенты",
					 СтруктураПоиска);
			КонецЕсли;
		КонецЕсли;
		Если КлиентСсылка = Неопределено Тогда
			СтруктураРеквизитов.Вставить("ДатаРегистрации", ТекущаяДатаСеанса);
			СтруктураРеквизитов.Вставить("CRM_Автор", ТекущийПользователь);
			КлиентОбъект = Обработки.CRM_ЗагрузкаДанныхИзФайла.СоздатьОбъект("Справочник.CRM_ПотенциальныеКлиенты",
				 СтруктураРеквизитов, СтруктураКлиентаПоУмолчанию,
				МассивКИ, МассивДопРеквизитов, КомментарийЗагрузки, Истина);
			КлиентОбъект.Записать();
			КлиентСсылка = КлиентОбъект.Ссылка;
			КоличествоНовыхКлиентов = КоличествоНовыхКлиентов + 1;
		Иначе
			ПараметрыОбновления = Новый Структура("ЗначенияРеквизитов, КонтактнаяИнформация,
				| ДополнительныеРеквизиты, Комментарий, ВариантЗагрузкиКИ",
				СтруктураРеквизитов, МассивКИ, МассивДопРеквизитов, КомментарийОбновления, ВариантЗагрузкиКИ);
			ОбновитьОбъект(КлиентСсылка, ПараметрыОбновления);
		КонецЕсли;
		
		Если КлиентСсылка = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтрокиИнтерес.Количество() > 0 Тогда
			СтруктураРеквизитов = Новый Структура;
			СтруктураРеквизитовЗадачи = Новый Структура;
			Для каждого Строка Из СтрокиИнтерес Цикл
				Если ЗначениеЗаполнено(СтрокаДанных[Строка.ИмяКолонкиФайла]) Тогда
					Если ТипЗнч(Строка.ИмяРеквизита) = Тип("Строка") Тогда
						Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Документы.CRM_Интерес.ПустаяСсылка(),
							 Строка.ИмяРеквизита) Тогда
							СтруктураРеквизитов.Вставить(Строка.ИмяРеквизита, СтрокаДанных[Строка.ИмяКолонкиФайла]);
						Иначе
							Если ЗначениеЗаполнено(СтрокаДанных[Строка.ИмяКолонкиФайла]) Тогда
								СтруктураРеквизитовЗадачи.Вставить(Строка.ИмяРеквизита, СтрокаДанных[Строка.ИмяКолонкиФайла]);
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			Если СтруктураРеквизитов.Количество() > 0 И СтруктураРеквизитов.Свойство("Тема") Тогда 
				СтруктураРеквизитов.Вставить("ПотенциальныйКлиент", КлиентСсылка); 
				СтруктураРеквизитов.Вставить("Ответственный", КлиентСсылка.ОсновнойМенеджер); 
				СтруктураРеквизитов.Вставить("Подразделение", КлиентСсылка.ОсновнойМенеджер.Подразделение); 
				СтруктураРеквизитов.Вставить("Офис", СтруктураРеквизитов.Подразделение.CRM_Офис); 
				СтруктураРеквизитов.Вставить("Организация", CRM_ОбщегоНазначенияСервер.ПолучитьПредопределеннуюОрганизацию());
				СтруктураРеквизитов.Вставить("Автор", Пользователи.ТекущийПользователь());
				
				ИнтересСсылка = Неопределено;
				СтруктураПоиска = Новый Структура;
				СтруктураПоиска.Вставить("ПотенциальныйКлиент", КлиентСсылка); 
				СтруктураПоиска.Вставить("Тема", СтруктураРеквизитов["Тема"]); 
				ИнтересСсылка = Обработки.CRM_ЗагрузкаДанныхИзФайла.НайтиОбъект("Документ.CRM_Интерес", СтруктураПоиска);
				Если ИнтересСсылка = Неопределено Тогда
					ИнтересСсылка = Обработки.CRM_ЗагрузкаДанныхИзФайла.СоздатьОбъект("Документ.CRM_Интерес",
						 СтруктураРеквизитов, СтруктураИнтересаПоУмолчанию, , ,
						 КомментарийЗагрузки);
					КоличествоНовыхИнтересов = КоличествоНовыхИнтересов + 1;
					Если ИнтересСсылка <> Неопределено И СтруктураРеквизитовЗадачи.Количество() > 0 Тогда
						СтруктураРеквизитовЗадачи.Вставить("Исполнитель", КлиентСсылка.ОсновнойМенеджер);
						СтруктураРеквизитовЗадачи.Вставить("CRM_Личная", Истина);
						СтруктураРеквизитовЗадачи.Вставить("Предмет", ИнтересСсылка);
						СтруктураРеквизитовЗадачи.Вставить("Автор", Пользователи.ТекущийПользователь());
						СтруктураРеквизитовЗадачи.Вставить("Дата", ТекущаяДатаСеанса);
						СтруктураРеквизитовЗадачи.Вставить("ДатаНачала", ТекущаяДатаСеанса);
						Обработки.CRM_ЗагрузкаДанныхИзФайла.СоздатьОбъект("Задача.ЗадачаИсполнителя",
							 СтруктураРеквизитовЗадачи, , , ,
							 "");
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ТекстСообщения = СтрШаблон(НСтр("ru = 'Загружено новых клиентов: %1
                                     |Создано новых интересов: %2'"), КоличествоНовыхКлиентов, КоличествоНовыхИнтересов);
	
	ПоместитьВоВременноеХранилище(Новый Структура("Заголовок, ТекстСообщения",
		 НСтр("ru='Загрузка данных завершена'"), ТекстСообщения),
		 АдресХранилища);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
