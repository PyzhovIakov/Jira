
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ CRM_ЛицензированиеЭкспортныеМетоды.ПодсистемаCRMИспользуется() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Невозможно открыть форму загрузки. Подсистема 1С:CRM не используется! (см. Персональные настройки пользователя)';en='It is impossible to open the workstation ""My work"". Subsystem 1C: CRM is not used! (see Personal settings of the user)'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	CRM_ЛицензированиеЭкспортныеМетоды.ПолучитьЗащищеннуюОбработку().ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
	Ответственный = Пользователи.ТекущийПользователь();
	ТипУслуги = Справочники.CRM_ТипУслуги.ПоставкаТоварыУслуги;
	ЮрФизЛицо = Перечисления.КомпанияЧастноеЛицо.Компания;
	РеквизитыЗаполняемыеПоУмолчанию.Добавить("Справочник.Партнеры.Родитель");
	РеквизитыЗаполняемыеПоУмолчанию.Добавить("Справочник.Партнеры.ЮрФизЛицо");
	РеквизитыЗаполняемыеПоУмолчанию.Добавить("Справочник.Партнеры.ОсновнойМенеджер");
	РеквизитыЗаполняемыеПоУмолчанию.Добавить("Справочник.КонтактныеЛицаПартнеров.Владелец");
	РеквизитыЗаполняемыеПоУмолчанию.Добавить("Документ.CRM_Интерес.Дата");
	РеквизитыЗаполняемыеПоУмолчанию.Добавить("Документ.CRM_Интерес.СостояниеИнтереса");
	ТипКИТелефон = Перечисления.ТипыКонтактнойИнформации.Телефон;
	ТипКИEMail = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
	ИскатьПоИННКПП = Истина;
	ИскатьПоНаименованию = Истина;
	Разделитель = ";";
	РазделительКИ = ",";
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	CRM_СостоянияИнтересов.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.CRM_СостоянияИнтересов КАК CRM_СостоянияИнтересов
	                      |ГДЕ
	                      |	CRM_СостоянияИнтересов.Родитель = ЗНАЧЕНИЕ(Справочник.CRM_СостоянияИнтересов.ПустаяСсылка)
	                      |	И НЕ CRM_СостоянияИнтересов.ПометкаУдаления");
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() И Выборка.Количество() = 1 Тогда
		СценарийПродаж = Выборка.Ссылка;
	КонецЕсли;
	CRM_ЗаполнитьВсеТипыОтношений();
	
	Элементы.ТипУслуги.Видимость = ПолучитьФункциональнуюОпцию("CRM_ИспользоватьТипыУслуг");
	
	ЭтоCRM = CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM();
	
	Если ЭтоCRM Тогда
		ИспользоватьПартнеровКакКонтрагентов = Ложь;
	Иначе
		ИмяКонстранты = "ИспользоватьПартнеровКакКонтрагентов";
		ИспользоватьПартнеровКакКонтрагентов = Константы[ИмяКонстранты].Получить();		
	КонецЕсли;	
	
	ВариантЗагрузкиКИ = "Замещать";
	
	CRM_ЗаполнитьВсеТипыОтношений();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Отказ = Не CRM_ЛицензированиеКлиент.ПроверитьПодключениеОтраслевыхСервисовИОткрыть();
	Если Отказ Тогда Возврат КонецЕсли;
	
	CRM_ЗаполнитьТипыОтношений();
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииПродолжение", ЭтотОбъект, Отказ);
	ОбщегоНазначенияКлиент.ПроверитьРасширениеРаботыСФайламиПодключено(ОписаниеОповещения,,
		НСтр("ru='В Веб-клиенте без установленного расширения работы с файлами добавление файлов не поддерживается.';en='The adding files is not supported in the Web client without an installed extension to work with files.'"));
	ВидимостьЭлементов();
	
	CRM_ЗаполнитьТипыОтношений();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииПродолжение(Подключено, Отказ) Экспорт
	Возврат;	
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	ТаблицаСоответствия = Настройки.Получить("СопоставлениеРеквизитов");
	Если ТаблицаСоответствия<>Неопределено Тогда
		ЕстьНесоответствие = Ложь;
		Для каждого Строка Из ТаблицаСоответствия Цикл
			Строки = СопоставлениеРеквизитов.НайтиСтроки(Новый Структура("ПредставлениеКолонкиФайла", Строка.ПредставлениеКолонкиФайла));
			Если Строки.Количество() = 0 Тогда
				ЕстьНесоответствие = Истина;
			Иначе
				Если ЗначениеЗаполнено(Строка.ИмяРеквизита) Тогда
					ЗаполняемаяСтрока = Строки[0];
					ЗаполнитьЗначенияСвойств(ЗаполняемаяСтрока, Строка,, "ИмяКолонкиФайла");
					
					Если ЗаполняемаяСтрока.ИмяРеквизита = "ИНН" ИЛИ ЗаполняемаяСтрока.ИмяРеквизита = "КПП" Тогда
						ЗаполняемаяСтрока.Поиск = Истина;
					ИначеЕсли ЗаполняемаяСтрока.ИмяРеквизита = "Наименование" Тогда
						ЗаполняемаяСтрока.Поиск = ИскатьПоНаименованию;
					ИначеЕсли ЗаполняемаяСтрока.ТипРеквизита = ТипКИEMail Тогда
						ЗаполняемаяСтрока.Поиск = ИскатьПоEmail;
					ИначеЕсли ЗаполняемаяСтрока.ТипРеквизита = ТипКИТелефон Тогда
						ЗаполняемаяСтрока.Поиск = ИскатьПоТелефону;
					ИначеЕсли ЗаполняемаяСтрока.ИмяРеквизита = "Тема" Тогда
						ЗаполняемаяСтрока.Поиск = Истина;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Настройки.Удалить("СопоставлениеРеквизитов");
		ВидимостьЭлементов();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	Если ЗначениеЗаполнено(ЮрФизЛицо) Тогда
		Если СопоставлениеРеквизитов.НайтиСтроки(Новый Структура("Сопоставлен", Истина)).Количество() = 0 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не сопоставлены поля справочников с колонками файла!';en='Catalogs fields are not matching to file columns!'"));
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		ДеревоРеквизитов = Обработки.CRM_ЗагрузкаДанныхИзФайла.СформироватьДеревоРеквизитов("CRM_Модуль_Партнеры", ЮрФизЛицо);
		СтрокиОбязательных = ДеревоРеквизитов.Строки.НайтиСтроки(Новый Структура("Обязательный", Истина), Истина);
		Для каждого Строка Из СтрокиОбязательных Цикл
			Если СопоставлениеРеквизитов.НайтиСтроки(Новый Структура("Сопоставлен, Объект", Истина, Строка.Объект)).Количество() > 0 Тогда
				Если СопоставлениеРеквизитов.НайтиСтроки(Новый Структура("Сопоставлен, Объект, ИмяРеквизита", Истина, Строка.Объект, Строка.ИмяРеквизита)).Количество() = 0 Тогда
					Если РеквизитыЗаполняемыеПоУмолчанию.НайтиПоЗначению(Строка.Объект+"."+Строка.ИмяРеквизита) = Неопределено Тогда
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон(НСтр("ru='Не сопоставлено обязательное для заполнения поле ""%1""!';en='Required field ""%1"" is not compared!'"),
							Строка.ПредставлениеРеквизита));
						Отказ = Истина;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	ПроверяемыеРеквизиты.Добавить("Ответственный");

	Если Элементы.СценарийПродаж.Видимость Тогда
		ПроверяемыеРеквизиты.Добавить("СценарийПродаж");
		ПроверяемыеРеквизиты.Добавить("ТипУслуги");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьФайл(Команда)
	
	Если СопоставлениеРеквизитов.Количество() > 0 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ИмяФайлаОбменаНачалоВыбораЗавершение", ЭтотОбъект); 
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru='Все сделанные ранее сопоставления будут утеряны. Продолжить?';en='All ma before comparison will be lost. Continue?'"), РежимДиалогаВопрос.ДаНет);
	Иначе
		ВыборФайла();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаОбменаНачалоВыбораЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		СопоставлениеРеквизитов.Очистить();
		ВыборФайла();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
	Если ПроверитьЗаполнение() Тогда
		Если СтрокВЗагружаемомФайле > 50 Тогда
			CRM_ОбщегоНазначенияКлиент.ПоказатьНашеПредупреждение(НСтр("ru='Можно продолжать использовать систему, по окончании загрузки появится оповещение."
"Время операции может быть длительным из-за размера файла.';en='You can continue to use system, when download is complete, a notification will appear."
"Operation time may be long due to file size.'"), 5, НСтр("ru='Импорт клиентов из файла начался'"));
		Иначе
			ТекстСостояния = НСтр("en = 'Import Customers from File'; ru = 'Импорт клиентов из файла'");
			ТекстПояснения = НСтр("ru = 'Выполняется загрузка клиентов...'; en = 'Сustomers are being loaded...'");
			Состояние(ТекстСостояния, , ТекстПояснения, БиблиотекаКартинок.ДлительнаяОперация48);
		КонецЕсли;
		
		ДлительнаяОперация = ЗагрузитьНаСервере();
		Если ДлительнаяОперация = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		Если ДлительнаяОперация.Статус = "Выполнено" Тогда
			CRM_ОбщегоНазначенияКлиент.ВывестиСообщениеПоОкончанииФоновогоЗадания(ДлительнаяОперация, Неопределено);
		ИначеЕсли ДлительнаяОперация.Статус = "Выполняется" Тогда
			ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Неопределено);
			ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
			
			ОповещениеОЗавершении = Новый ОписаниеОповещения("ВывестиСообщениеПоОкончанииФоновогоЗадания", CRM_ОбщегоНазначенияКлиент);
			ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
		КонецЕсли;
		// CRM_НастройкаРазделовРешения 
		Если CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
			ЗаписьВыполнена = CRM_НачалоРаботыСПрограммойВызовСервера.ЗаписатьНастроенныйРазделРешения(ПредопределенноеЗначение("Перечисление.CRM_РазделыНастройкиРешения.ПортретКлиента"));
			Если ЗаписьВыполнена Тогда
				Оповестить("ОбновитьНастроенныеРазделы");
			КонецЕсли;
		КонецЕсли;
		Если ДлительнаяОперация.Статус = "Выполняется" И СтрокВЗагружаемомФайле > 50 Тогда
			ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьЗавершение", ЭтотОбъект);
			CRM_ОбщегоНазначенияКлиент.ПоказатьНашеПредупреждение(НСтр("ru='Можно продолжать использовать систему, по окончании загрузки появится оповещение."
			                                                      "Время операции может быть длительным из-за размера файла.'"), 5,
			                                                      НСтр("ru='Импорт клиентов из файла начался'"),
			                                                      ОписаниеОповещения);
		ИначеЕсли ДлительнаяОперация.Статус = "Выполняется" Тогда
			ТекстСостояния = НСтр("en = 'Import Customers from File'; ru = 'Импорт клиентов из файла'");
			ТекстПояснения = НСтр("ru = 'Выполняется загрузка клиентов...'; en = 'Сustomers are being loaded...'");
			Состояние(ТекстСостояния, , ТекстПояснения, БиблиотекаКартинок.ДлительнаяОперация48);
		Иначе
			ЗагрузитьЗавершение();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьЗавершение(Результат = Неопределено, ДопПараметры = Неопределено) Экспорт
	Закрыть();
	Если CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
		CRM_РабочийСтолКлиент.ПереинициализироватьРабочийСтолКлиент("Справочник.Партнеры.Форма.CRM_ФормаСписка");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИмяФайлаПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ИмяФайла) Тогда
		Файл = Новый Файл(ИмяФайла);
		РасширениеФайла = СтрЗаменить(Файл.Расширение, ".", "");
		Если СтрНайти(РасширениеФайла, "csv") > 0 Или СтрНайти(РасширениеФайла, "txt") > 0 Тогда
			Элементы.Разделитель.Видимость = Истина;
		Иначе	
			Элементы.Разделитель.Видимость = Ложь;
		КонецЕсли;
		ПрочитатьФайлВТаблицу();
	Иначе	
		РасширениеФайла = "";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РазделительПриИзменении(Элемент)
	Если Разделитель<>"" Тогда
		СопоставлениеРеквизитов.Очистить();
		ПрочитатьФайлВТаблицу();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СопоставлениеРеквизитовПредставлениеРеквизитаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыОткрытия = Новый Структура("ИмяМакета, Отбор", "CRM_Модуль_Партнеры", ЮрФизЛицо);
	МассивРеквизитов = Новый Массив;
	Для каждого Строка Из СопоставлениеРеквизитов Цикл
		Если Строка(Строка.ТипРеквизита) <> "Строка" Тогда
			МассивРеквизитов.Добавить(Строка.ПредставлениеРеквизита);
		КонецЕсли;
	КонецЦикла;
	ПараметрыОткрытия.Вставить("ИсключитьРеквизиты", МассивРеквизитов);
	ОткрытьФорму("Обработка.CRM_ЗагрузкаДанныхИзФайла.Форма.ФормаВыбораРеквизита", ПараметрыОткрытия, Элемент,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура СопоставлениеРеквизитовПредставлениеРеквизитаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекДанные = Элементы.СопоставлениеРеквизитов.ТекущиеДанные;
	ЗаполнитьЗначенияСвойств(ТекДанные, ВыбранноеЗначение);
	ТекДанные.Сопоставлен = Истина;
	Если ТекДанные.ИмяРеквизита = "ИНН" ИЛИ ТекДанные.ИмяРеквизита = "КПП" Тогда
		ТекДанные.Поиск = Истина;
	ИначеЕсли ТекДанные.ИмяРеквизита = "Наименование" Тогда
		ТекДанные.Поиск = ИскатьПоНаименованию;
	ИначеЕсли ТекДанные.ТипРеквизита = ТипКИEMail Тогда
		ТекДанные.Поиск = ИскатьПоEmail;
	ИначеЕсли ТекДанные.ТипРеквизита = ТипКИТелефон Тогда
		ТекДанные.Поиск = ИскатьПоТелефону;
	ИначеЕсли ТекДанные.ИмяРеквизита = "Тема" Тогда
		ТекДанные.Поиск = Истина;
	КонецЕсли;
		
	ВидимостьЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура СопоставлениеРеквизитовПредставлениеРеквизитаОчистка(Элемент, СтандартнаяОбработка)
	ТекДанные = Элементы.СопоставлениеРеквизитов.ТекущиеДанные;
	ТекДанные.ИмяРеквизита = "";
	ТекДанные.ТипРеквизита = Неопределено;
	ТекДанные.Объект = Неопределено;
	ТекДанные.Сопоставлен = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура СопоставлениеРеквизитовПриИзменении(Элемент)
	ВидимостьЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура ЮрФизЛицоПриИзменении(Элемент)
	ЮрФизЛицоПриИзмененииНаСервере();
	ВидимостьЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура СкачатьПримерФайлаНажатие(Элемент)
	АдресФайлаПримера = ПолучитьАдресФайлаВХранилище();
	ПолучаемыеФайлы = Новый Массив;
	ПолучаемыйФайл = Новый ОписаниеПередаваемогоФайла;
	ПолучаемыйФайл.Имя = НСтр("ru='Пример файла импорта клиентов'")+".csv";
	ПолучаемыйФайл.Хранение = АдресФайлаПримера;
	ПолучаемыеФайлы.Добавить(ПолучаемыйФайл);
	ОписаниеОповещения = Новый ОписаниеОповещения("СкачатьПримерФайлаЗавершение", ЭтотОбъект);
	Режим = РежимДиалогаВыбораФайла.Сохранение;
	ДиалогСохраненияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогСохраненияФайла.ПолноеИмяФайла = ПолучаемыйФайл.Имя;
	ДиалогСохраненияФайла.Фильтр = НСтр("ru='Текстовый документ c разделителями (*.csv)|*.csv'");
	НачатьПолучениеФайлов(ОписаниеОповещения, ПолучаемыеФайлы, ДиалогСохраненияФайла);
КонецПроцедуры

&НаКлиенте
Процедура ИскатьПоТелефонуПриИзменении(Элемент)
	ПоляПоискаПриИзменении(ТипКИТелефон, ИскатьПоТелефону);
КонецПроцедуры

&НаКлиенте
Процедура ИскатьПоEmailПриИзменении(Элемент)
	ПоляПоискаПриИзменении(ТипКИEMail, ИскатьПоEmail);
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияНужнаПомощьНажатие(Элемент)
	ПерейтиПоНавигационнойСсылке(CRM_ОбщегоНазначенияСервер.ПолучитьСсылкуНаРазделСправки("ЗагрузкаДанныхИзФайла"));
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовПодвалаФормы

&НаКлиенте
Процедура СценарийПродажНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("ЭтоПоддержка", Ложь);
	СтруктураОтбора.Вставить("ПометкаУдаления", Ложь);
	СтруктураОтбора.Вставить("Родитель", ПредопределенноеЗначение("Справочник.CRM_СостоянияИнтересов.ПустаяСсылка"));
	
	ПараметрыФормыВыбора = Новый Структура;
	ПараметрыФормыВыбора.Вставить("Отбор", СтруктураОтбора);
	
	ОткрытьФорму("Справочник.CRM_СостоянияИнтересов.Форма.ФормаВыбора", ПараметрыФормыВыбора, Элемент, УникальныйИдентификатор, ВариантОткрытияОкна.ОтдельноеОкно);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВидимостьЭлементов()
	Элементы.СценарийПродаж.Видимость = (СопоставлениеРеквизитов.НайтиСтроки(Новый Структура("Объект, ИмяРеквизита", "Документ.CRM_Интерес", "Тема")).Количество() > 0);
	//Элементы.ИскатьПоИННКПП.Видимость = (СопоставлениеРеквизитов.НайтиСтроки(Новый Структура("Объект, ИмяРеквизита", "Справочник.Контрагенты", "ИНН")).Количество() > 0);
	Элементы.ИскатьПоТелефону.Видимость = (СопоставлениеРеквизитов.НайтиСтроки(Новый Структура("ТипРеквизита", ТипКИТелефон)).Количество() > 0); 
	Элементы.ИскатьПоEmail.Видимость = (СопоставлениеРеквизитов.НайтиСтроки(Новый Структура("ТипРеквизита", ТипКИEMail)).Количество() > 0);
	Элементы.ТипУслуги.Видимость = Элементы.СценарийПродаж.Видимость;
КонецПроцедуры

&НаСервере
Функция ЗагрузитьФайлСДаннымиВТабличныйДокументНаСервере()
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(РасширениеФайла);
	ДвоичныеДанные = ПолучитьИЗВременногоХранилища(АдресФайла);
	ДвоичныеДанные.Записать(ИмяВременногоФайла);
	
	
	ПараметрыВызоваСервера = Новый Структура();
	ПараметрыВызоваСервера.Вставить("Расширение", РасширениеФайла);
	ПараметрыВызоваСервера.Вставить("ИмяВременногоФайла", ИмяВременногоФайла);
	ПараметрыВызоваСервера.Вставить("Разделитель", Разделитель);
	ПараметрыВызоваСервера.Вставить("ИспользоватьПартнеровКакКонтрагентов", ИспользоватьПартнеровКакКонтрагентов);
	
	
	ПараметрыВыполненияВФоне = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполненияВФоне.НаименованиеФоновогоЗадания = НСтр("ru='Загрузка справочников из файла: Выполнение серверного метода загрузка данных из файла'");
	
	ФоновоеЗадание = ДлительныеОперации.ВыполнитьВФоне("Обработки.CRM_ЗагрузкаДанныхИзФайла.ЗагрузитьФайлВТаблицу",
		ПараметрыВызоваСервера, ПараметрыВыполненияВФоне);
	
	Возврат ФоновоеЗадание;
	
КонецФункции

&НаКлиенте
Процедура ПослеЗагрузкиФайлаСДаннымиВТаблицуЗначений(ФоновоеЗадание, ДополнительныеПараметры) Экспорт

	Если ФоновоеЗадание = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ФоновоеЗадание.Статус = "Выполнено" Тогда
		АдресТаблицыСДанными = ФоновоеЗадание.АдресРезультата;
		ПослеЗагрузкиФайлаСДаннымиВТаблицуЗначенийСервер(АдресТаблицыСДанными);
		ВидимостьЭлементов();
	Иначе
		ВывестиСообщениеОбОшибке(НСтр("ru='Не удалось произвести загрузку данных.'"), ФоновоеЗадание.КраткоеПредставлениеОшибки);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПослеЗагрузкиФайлаСДаннымиВТаблицуЗначенийСервер(АдресТаблицыСДанными)

	ТаблицаДанных = ПолучитьИзВременногоХранилища(АдресТаблицыСДанными);
	СтрокВЗагружаемомФайле = ТаблицаДанных.Количество();
	Для каждого Колонка Из ТаблицаДанных.Колонки Цикл
		НоваяСтрока = СопоставлениеРеквизитов.Добавить();
		НоваяСтрока.ИмяКолонкиФайла = Колонка.Имя;
		НоваяСтрока.ПредставлениеКолонкиФайла = Колонка.Заголовок;
	КонецЦикла;
	Если ЗначениеЗаполнено(ЮрФизЛицо) Тогда
		ЮрФизЛицоПриИзмененииНаСервере();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВывестиСообщениеОбОшибке(ТекстОшибкиДляПользователя, ТехническаяИнформация)
	ТекстСообщенияОбОшибке = ТекстОшибкиДляПользователя + Символы.ПС
		+ НСтр("ru='Возможная причина: Загружаемые данные некорректные."
"Техническая информация: %1'");
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон(ТекстСообщенияОбОшибке, ТехническаяИнформация));
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьФайлВТаблицу()
	
	ФоновоеЗадание = ЗагрузитьФайлСДаннымиВТабличныйДокументНаСервере();
	НастройкиОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	НастройкиОжидания.ВыводитьОкноОжидания = Ложь;
	Обработчик = Новый ОписаниеОповещения("ПослеЗагрузкиФайлаСДаннымиВТаблицуЗначений", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ФоновоеЗадание, Обработчик, НастройкиОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайла()
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыборФайлаПродолжение", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПроверитьРасширениеРаботыСФайламиПодключено(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайлаПродолжение(ПодключеноРасширениеРаботыСФайлами, ДополнительныеПараметры) Экспорт
	ОповещениеЗавершения = Новый ОписаниеОповещения("ВыборФайлаЗавершение", ЭтотОбъект);

	ПараметрыЗагрузки = ФайловаяСистемаКлиент.ПараметрыЗагрузкиФайла();
	ПараметрыЗагрузки.Диалог.Фильтр = НСтр("ru='Все поддерживаемые форматы файлов(*.xls;*.xlsx;*.ods;*.mxl;*.csv;*.txt)|*.xls;*.xlsx;*.ods;*.mxl;*.csv;*.txt|Книга Excel 97 (*.xls)|*.xls|Книга Excel 2007 (*.xlsx)|*.xlsx|Электронная таблица OpenDocument (*.ods)|*.ods|Текстовый документ c разделителями (*.csv;*.txt)|*.csv;*.txt|Табличный документ (*.mxl)|*.mxl'");
	ПараметрыЗагрузки.ИдентификаторФормы = УникальныйИдентификатор;
	ФайловаяСистемаКлиент.ЗагрузитьФайл(ОповещениеЗавершения , ПараметрыЗагрузки, ИмяФайла);
КонецПроцедуры
	
&НаКлиенте
Процедура ВыборФайлаЗавершение(Результат, ДопПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ИмяФайла = Результат.Имя;
		АдресФайла = Результат.Хранение;
		ИмяФайлаПриИзменении(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЮрФизЛицоПриИзмененииНаСервере()
	
	Если СопоставлениеРеквизитов.Количество() > 0 Тогда
		ДеревоРеквизитов = Обработки.CRM_ЗагрузкаДанныхИзФайла.СформироватьДеревоРеквизитов("CRM_Модуль_Партнеры", ЮрФизЛицо);
		Для каждого Строка Из СопоставлениеРеквизитов Цикл
			СтрокаДерева = ДеревоРеквизитов.Строки.Найти(Строка.ПредставлениеКолонкиФайла, "ПредставлениеРеквизита", Истина);
			Если СтрокаДерева <> Неопределено Тогда
				Строка.Объект = СтрокаДерева.Объект;
				Строка.ИмяРеквизита = СтрокаДерева.ИмяРеквизита;
				Строка.ПредставлениеРеквизита = СтрокаДерева.ПредставлениеРеквизита;
				Строка.ТипРеквизита = СтрокаДерева.ТипРеквизита;
				Строка.Обязательный = СтрокаДерева.Обязательный;
				Строка.Создавать    = СтрокаДерева.Создавать;
				Строка.Сопоставлен  = Истина;
				Если Строка.ИмяРеквизита = "ИНН" Тогда
					Строка.Поиск = Истина;
				ИначеЕсли Строка.ТипРеквизита = ТипКИEMail Тогда
					Строка.Поиск = ИскатьПоEmail;
				ИначеЕсли Строка.ТипРеквизита = ТипКИТелефон Тогда
					Строка.Поиск = ИскатьПоТелефону;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗагрузитьНаСервере()
	ИмяМетода = "Обработки.CRM_ЗагрузкаДанныхИзФайла.ЗагрузитьКлиентов";
	
	НастройкиЗапуска = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	НастройкиЗапуска.НаименованиеФоновогоЗадания = НСтр("ru='Загрузка клиентской базы из файла'");
	НастройкиЗапуска.ОжидатьЗавершение = 0;
	
	ПараметрыМетода = Новый Структура;
	ПараметрыМетода.Вставить("ТаблицаДанных", ПолучитьИзВременногоХранилища(АдресТаблицыСДанными));
	ПараметрыМетода.Вставить("СопоставлениеРеквизитов", РеквизитФормыВЗначение("СопоставлениеРеквизитов", Тип("ТаблицаЗначений")));
	ПараметрыМетода.Вставить("ЮрФизЛицо", ЮрФизЛицо);
	ПараметрыМетода.Вставить("СценарийПродаж", СценарийПродаж);
	ПараметрыМетода.Вставить("ТипУслуги", ТипУслуги);
	ПараметрыМетода.Вставить("Ответственный", Ответственный);
	ПараметрыМетода.Вставить("ИскатьПоТелефону", ИскатьПоТелефону);
	ПараметрыМетода.Вставить("ИскатьПоEmail", ИскатьПоEmail);
	ПараметрыМетода.Вставить("ИскатьПоИННКПП", ИскатьПоИННКПП);
	ПараметрыМетода.Вставить("ИскатьПоНаименованию", ИскатьПоНаименованию);
	ПараметрыМетода.Вставить("Группа", Группа);
	ПараметрыМетода.Вставить("CRM_ВсеТипыОтношений", CRM_ВсеТипыОтношений);
	ПараметрыМетода.Вставить("ИспользоватьПартнеровКакКонтрагентов", ИспользоватьПартнеровКакКонтрагентов);
	ПараметрыМетода.Вставить("РазделительКИ", РазделительКИ);
	ПараметрыМетода.Вставить("ВариантЗагрузкиКИ", ВариантЗагрузкиКИ);
	
	Возврат ДлительныеОперации.ВыполнитьВФоне(ИмяМетода, ПараметрыМетода, НастройкиЗапуска);
КонецФункции

&НаКлиенте
Процедура СкачатьПримерФайлаЗавершение(ПолученныеФайлы, ДополнительныеПараметры) Экспорт
	Результат = Истина;
КонецПроцедуры

&НаСервере
Функция ПолучитьАдресФайлаВХранилище()
	ДвоичныеДанные = Обработки.CRM_ЗагрузкаДанныхИзФайла.ПолучитьМакет("CRM_Модуль_ПартнерыПример");
	АдресФайлаПримера = ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификатор);
	Возврат АдресФайлаПримера;
КонецФункции

&НаСервере
Процедура ПоляПоискаПриИзменении(ТипКИ, Поиск)
	Для каждого Строка Из СопоставлениеРеквизитов Цикл
		Если Строка.ТипРеквизита = ТипКИ Тогда
			Строка.Поиск = Поиск;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

#Область ТипыОтношений

&НаСервере
// Процедура  заполняет все типы отношений клиента.
//
// Параметры:
//	Нет.
//
Процедура CRM_ЗаполнитьВсеТипыОтношений()
	Выбранные = Новый Массив;
	Выбранные.Добавить(Справочники.CRM_ТипыОтношений.Покупатель);
	Справочники.CRM_ТипыОтношений.ЗаполнитьСписокОтношений(CRM_ВсеТипыОтношений, Выбранные);
КонецПроцедуры // CRM_ЗаполнитьВсеТипыОтношений()

&НаКлиенте
// Процедура заполняет реквизит формы CRM_ТипыОтношений.
//
// Параметры:
//	Нет.
//
Процедура CRM_ЗаполнитьТипыОтношений()
	CRM_ТипыОтношений = "";
	Для Каждого ТипОтношений Из CRM_ВсеТипыОтношений Цикл
		Если ТипОтношений.Пометка Тогда
			CRM_ТипыОтношений = CRM_ТипыОтношений  + "; " + ТипОтношений.Значение;
		КонецЕсли;
		
	КонецЦикла;	
	Если СтрДлина(CRM_ТипыОтношений) > 0 Тогда
		CRM_ТипыОтношений = Сред(CRM_ТипыОтношений, 3);
	КонецЕсли;	

КонецПроцедуры // CRM_ЗаполнитьТипыОтношений();

&НаКлиенте
// Процедура - обработчик события "НачалоВыбора" элемента формы "CRM_ТипыОтношений".
//
Процедура CRM_ТипыОтношенийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка	= Ложь;
	
	ОповещениеВыбора		= Новый ОписаниеОповещения("CRM_ОбработкаВыбораТиповОтношений", ЭтотОбъект);
	CRM_ВсеТипыОтношений.ПоказатьОтметкуЭлементов(ОповещениеВыбора, НСтр("ru='Отметьте типы отношений с клиентом'"));
КонецПроцедуры // CRM_ТипыОтношенийНачалоВыбора()

&НаКлиенте
// Процедура - обработчик выбора типов отношений.
//
// Параметры:
//	СписокТипов				- СписокЗначений	- Список типов отношений.
//	ДополнительныеПараметры	- Структура			- Структура дополнительных параметров.
//
Процедура CRM_ОбработкаВыбораТиповОтношений(РезультатВыбора, ДополнительныеПараметры) Экспорт
	Если РезультатВыбора = Неопределено Тогда Возврат; КонецЕсли;
	CRM_ЗаполнитьТипыОтношений();
КонецПроцедуры // CRM_ОбработкаВыбораТиповОтношений()

#КонецОбласти

#КонецОбласти


