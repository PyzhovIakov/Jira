
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Характеристика = ПланыВидовХарактеристик.CRM_НастройкиПользователей.ОсновнойТипУслуг;
	Менеджер = РегистрыСведений.CRM_НастройкиПользователей.СоздатьМенеджерЗаписи();
	Менеджер.Настройка = Характеристика;
	Менеджер.Пользователь = Пользователи.АвторизованныйПользователь();
	Менеджер.Прочитать();
	Попытка
		ОсновнойТипУслуг = Менеджер.Значение;
	Исключение
		ОсновнойТипУслуг = Ложь;
	КонецПопытки;
	
	Характеристика = ПланыВидовХарактеристик.CRM_НастройкиПользователей.ОсновнойСценарий;
	Менеджер = РегистрыСведений.CRM_НастройкиПользователей.СоздатьМенеджерЗаписи();
	Менеджер.Настройка = Характеристика;
	Менеджер.Пользователь = Пользователи.АвторизованныйПользователь();
	Менеджер.Прочитать();
	Попытка
		ОсновнойСценарий = Менеджер.Значение;
	Исключение
		ОсновнойСценарий = Ложь;
	КонецПопытки;
	
	Характеристика = ПланыВидовХарактеристик.CRM_НастройкиПользователей.ОсновнойТипОбращения;
	Менеджер = РегистрыСведений.CRM_НастройкиПользователей.СоздатьМенеджерЗаписи();
	Менеджер.Настройка = Характеристика;
	Менеджер.Пользователь = Пользователи.АвторизованныйПользователь();
	Менеджер.Прочитать();
	Попытка
		ОсновнойТипОбращения = Менеджер.Значение;
	Исключение
		ОсновнойТипОбращения = Справочники.CRM_ТипыОбращений.ПустаяСсылка();
	КонецПопытки;
	
	ПоискПоПочтовомуДомену = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("CRM_МастерРегистрацииОбращения.ПоискПоПочтовомуДомену",
		 "МастерРегистрации",
		 Ложь);
	
	РежимВводаНовогоКлиента = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("CRM_МастерРегистрацииОбращения.РежимВводаНовогоКлиента",
		 "МастерРегистрации",
		 1);
	
	Если РольДоступна("ПолныеПрава") Или РольДоступна("CRM_НастройкаПрограммы") Тогда
		Элементы.ГруппаОбщиеНастройки.Видимость = Истина;
		
		CRM_ОсновнойВидEmailКлиента = Константы.CRM_ОсновнойВидEmailКлиента.Получить();
		CRM_ОсновнойВидТелефонаКлиента = Константы.CRM_ОсновнойВидТелефонаКлиента.Получить();
		CRM_ОсновнойВидEmailКонтакта = Константы.CRM_ОсновнойВидEmailКонтакта.Получить();
		CRM_ОсновнойВидТелефонаКонтакта = Константы.CRM_ОсновнойВидТелефонаКонтакта.Получить();
		
		ЗаполнитьСписокВыбораВидаКИ(Элементы.CRM_ОсновнойВидEmailКлиента,
									Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты,
									Справочники.ВидыКонтактнойИнформации.СправочникПартнеры);
		ЗаполнитьСписокВыбораВидаКИ(Элементы.CRM_ОсновнойВидТелефонаКлиента,
									Перечисления.ТипыКонтактнойИнформации.Телефон,
									Справочники.ВидыКонтактнойИнформации.СправочникПартнеры);
		ЗаполнитьСписокВыбораВидаКИ(Элементы.CRM_ОсновнойВидEmailКонтакта,
									Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты,
									Справочники.ВидыКонтактнойИнформации.СправочникКонтактныеЛицаПартнеров);
		ЗаполнитьСписокВыбораВидаКИ(Элементы.CRM_ОсновнойВидТелефонаКонтакта,
									Перечисления.ТипыКонтактнойИнформации.Телефон,
									Справочники.ВидыКонтактнойИнформации.СправочникКонтактныеЛицаПартнеров);
									
	Иначе
		Элементы.ГруппаОбщиеНастройки.Видимость = Ложь;
	КонецЕсли;
	
	ИспользоватьТипыУслуг = ПолучитьФункциональнуюОпцию("CRM_ИспользоватьТипыУслуг");
	ЗаполнитьДоступныеСценарииПродаж();
	
	ЗаполнитьВариантыНазначенияОтветственного();
	
	ИзмененСоставРеквизитов = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОсновнойТипОбращенияПриИзменении(Элемент)
	
	ЗаполнитьДоступныеСценарииПродаж();
	
КонецПроцедуры // ОсновнойТипОбращенияПриИзменении()

&НаКлиенте
Процедура ОсновнойТипУслугПриИзменении(Элемент)
	
	ЗаполнитьДоступныеСценарииПродаж();
	
КонецПроцедуры // ОсновнойТипУслугПриИзменении()

&НаКлиенте
Процедура ПубличныеДоменыДекорацияНажатие(Элемент)
	ОписаниеОповещения = Новый ОписаниеОповещения("ПубличныеДоменыНажатиеЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.CRM_ФормаСпискаПубличныхДоменов",,
		ЭтотОбъект, , , , ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ПубличныеДоменыНажатиеЗавершение(Результат, ДопПараметры) Экспорт
	Возврат; // Заглушка
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗакрытьСВозвратомПараметров()
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("ОсновнойТипУслуги", ОсновнойТипУслуг);
	СтруктураВозврата.Вставить("ОсновнойТипОбращения", ОсновнойТипОбращения);
	СтруктураВозврата.Вставить("ИзмененСоставРеквизитов", ИзмененСоставРеквизитов);
	
	Закрыть(СтруктураВозврата);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	ЗакрытьСВозвратомПараметров();
КонецПроцедуры

&НаСервере
Процедура ПрименитьНаСервере()
	
	Характеристика = ПланыВидовХарактеристик.CRM_НастройкиПользователей.ОсновнойТипУслуг;
	Менеджер = РегистрыСведений.CRM_НастройкиПользователей.СоздатьМенеджерЗаписи();
	Менеджер.Настройка = Характеристика;
	Менеджер.Значение = ОсновнойТипУслуг;
	Менеджер.Пользователь = Пользователи.АвторизованныйПользователь();
	Менеджер.Записать(Истина);
	
	Характеристика = ПланыВидовХарактеристик.CRM_НастройкиПользователей.ОсновнойСценарий;
	Менеджер = РегистрыСведений.CRM_НастройкиПользователей.СоздатьМенеджерЗаписи();
	Менеджер.Настройка = Характеристика;
	Менеджер.Значение = ОсновнойСценарий;
	Менеджер.Пользователь = Пользователи.АвторизованныйПользователь();
	Менеджер.Записать(Истина);
	
	Характеристика = ПланыВидовХарактеристик.CRM_НастройкиПользователей.ОсновнойТипОбращения;
	Менеджер = РегистрыСведений.CRM_НастройкиПользователей.СоздатьМенеджерЗаписи();
	Менеджер.Настройка = Характеристика;
	Менеджер.Значение = ОсновнойТипОбращения;
	Менеджер.Пользователь = Пользователи.АвторизованныйПользователь();
	Менеджер.Записать(Истина);
	
	ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекСохранить("CRM_МастерРегистрацииОбращения.РежимВводаНовогоКлиента",
		 "МастерРегистрации",
		 РежимВводаНовогоКлиента);
		 
	ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекСохранить("CRM_МастерРегистрацииОбращения.НазначениеОтветственного",
		 "МастерРегистрации",
		 ОбщегоНазначения.ТаблицаЗначенийВМассив(ТаблицаНазначенияОтветственного.Выгрузить()));
		 
	ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекСохранить("CRM_МастерРегистрацииОбращения.ПоискПоПочтовомуДомену",
		 "МастерРегистрации",
		 ПоискПоПочтовомуДомену);
	
	Если РольДоступна("ПолныеПрава") Или РольДоступна("CRM_НастройкаПрограммы") Тогда
		Если CRM_ОсновнойВидEmailКлиента <> Константы.CRM_ОсновнойВидEmailКлиента.Получить() Тогда
			Константы.CRM_ОсновнойВидEmailКлиента.Установить(CRM_ОсновнойВидEmailКлиента);
		КонецЕсли;
		Если CRM_ОсновнойВидТелефонаКлиента <> Константы.CRM_ОсновнойВидТелефонаКлиента.Получить() Тогда
			Константы.CRM_ОсновнойВидТелефонаКлиента.Установить(CRM_ОсновнойВидТелефонаКлиента);
		КонецЕсли;
		Если CRM_ОсновнойВидEmailКонтакта <> Константы.CRM_ОсновнойВидEmailКонтакта.Получить() Тогда
			Константы.CRM_ОсновнойВидEmailКонтакта.Установить(CRM_ОсновнойВидEmailКонтакта);
		КонецЕсли;
		Если CRM_ОсновнойВидТелефонаКонтакта <> Константы.CRM_ОсновнойВидТелефонаКонтакта.Получить() Тогда
			Константы.CRM_ОсновнойВидТелефонаКонтакта.Установить(CRM_ОсновнойВидТелефонаКонтакта);
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

&НаКлиенте
Процедура Применить(Команда)
	ПрименитьНаСервере();
	ЗакрытьСВозвратомПараметров();
КонецПроцедуры

&НаКлиенте
Процедура НастроитьСоставРеквизитов(Команда)
	Оповещение = Новый ОписаниеОповещения("НастроитьСоставРеквизитовЗавершение", ЭтотОбъект);
	ОткрытьФорму("Обработка.CRM_МастерРегистрацииОбращения.Форма.ФормаНастройкиСоставаРеквизитов", ,
		 ЭтотОбъект, , , , Оповещение,
		 РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьСписокВыбораВидаКИ(Элемент, ТипКИ, РодительКИ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВидыКонтактнойИнформации.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации
		|ГДЕ
		|	ВидыКонтактнойИнформации.Родитель = &РодительКИ
		|	И ВидыКонтактнойИнформации.Тип = &ТипКИ";
	
	Запрос.УстановитьПараметр("ТипКИ", ТипКИ);
	Запрос.УстановитьПараметр("РодительКИ", РодительКИ);
	
	РезультатЗапросаТЗ = Запрос.Выполнить().Выгрузить();
	
	Элемент.РежимВыбораИзСписка = Истина;
	Элемент.КнопкаСоздания = Ложь;
	Элемент.СписокВыбора.ЗагрузитьЗначения(РезультатЗапросаТЗ.ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьСоставРеквизитовЗавершение(Результат, ДопРеквизиты) Экспорт
	Если Результат = Истина Тогда
		ИзмененСоставРеквизитов = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДоступныеСценарииПродаж()
	
	ЭтоПоддержка = (ЗначениеЗаполнено(ОсновнойТипОбращения)
		 И ОсновнойТипОбращения <> Справочники.CRM_ТипыОбращений.Интерес);
	
	ПараметрыСценариев = Новый Структура;
	ПараметрыСценариев.Вставить("ТипУслуги",				ОсновнойТипУслуг);
	ПараметрыСценариев.Вставить("ТипОбращения",				ОсновнойТипОбращения);
	ПараметрыСценариев.Вставить("ЭтоПоддержка",				ЭтоПоддержка);
	ПараметрыСценариев.Вставить("Ответственный",			Пользователи.АвторизованныйПользователь());
	ПараметрыСценариев.Вставить("ИспользоватьТипыУслуг",	ИспользоватьТипыУслуг);
	ПараметрыСценариев.Вставить("ДоступныКарты",			Ложь);
	
	ДоступныеСценарии = Обработки.CRM_МастерРегистрацииОбращения.ПолучитьДоступныеСценарииПродаж(ПараметрыСценариев);
	
	Элементы.ОсновнойСценарий.СписокВыбора.Очистить();
	
	СписокСодержитТекущийОсновнойСценарийИзНастройки = Ложь;
	Для Каждого ТекущийСценарийОбхода Из ДоступныеСценарии Цикл
		Элементы.ОсновнойСценарий.СписокВыбора.Добавить(ТекущийСценарийОбхода.Значение.Ссылка);
		
		Если ОсновнойСценарий = ТекущийСценарийОбхода.Значение.Ссылка Тогда
			СписокСодержитТекущийОсновнойСценарийИзНастройки = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если Не СписокСодержитТекущийОсновнойСценарийИзНастройки
			И ЗначениеЗаполнено(ОсновнойСценарий)
			И (ЗначениеЗаполнено(ОсновнойТипУслуг) Или ЗначениеЗаполнено(ОсновнойТипОбращения)) Тогда
		ОсновнойСценарий = Справочники.CRM_СостоянияИнтересов.ПустаяСсылка();
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("en = 'The ""Main sales scenario"" setting was cleared due to a change in the dependent setting: ""Main type of services"" or ""Main type of treatment""';
				| ru = 'Настройка ""Основной сценарий продажи"" была очищена по причине изменения зависимой настройки: ""Основной тип услуг"" или ""Основной тип обращения""'")
		);
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьДоступныеСценарииПродаж()

&НаСервере
Процедура ЗаполнитьВариантыНазначенияОтветственного()
	
	ТаблицаИсточник = Обработки.CRM_МастерРегистрацииОбращения.ВариантыНазначенияОтветственного();
	
	ТаблицаНазначенияОтветственного.Очистить();
	Для Каждого СтрИсточник Из ТаблицаИсточник Цикл
		
		НС = ТаблицаНазначенияОтветственного.Добавить();
		ЗаполнитьЗначенияСвойств(НС, СтрИсточник);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
