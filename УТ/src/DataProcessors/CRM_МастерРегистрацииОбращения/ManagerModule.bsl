#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьДоступныеСценарииПродаж(Знач ПараметрыСценариев) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДоступныеСценарии = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	СостоянияИнтересов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ДоступныеПоТипуОбращенияСостояния
	|ИЗ
	|	Справочник.CRM_СостоянияИнтересов КАК СостоянияИнтересов
	|ГДЕ
	|	СостоянияИнтересов.Родитель = ЗНАЧЕНИЕ(Справочник.CRM_СостоянияИнтересов.ПустаяСсылка)
	|	И НЕ СостоянияИнтересов.ПометкаУдаления
	|	И ВЫБОР
	|			КОГДА &ЭтоПоддержка
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ НЕ СостоянияИнтересов.ЭтоПоддержка
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СостоянияИнтересовТипыОбращений.Ссылка
	|ИЗ
	|	Справочник.CRM_СостоянияИнтересов.ТипыОбращений КАК СостоянияИнтересовТипыОбращений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.CRM_СостоянияИнтересов КАК СостоянияИнтересов
	|		ПО (СостоянияИнтересов.Ссылка = СостоянияИнтересовТипыОбращений.Ссылка)
	|ГДЕ
	|	СостоянияИнтересов.Родитель = ЗНАЧЕНИЕ(Справочник.CRM_СостоянияИнтересов.ПустаяСсылка)
	|	И НЕ СостоянияИнтересов.ПометкаУдаления
	|	И ВЫБОР
	|			КОГДА &ЭтоПоддержка
	|				ТОГДА СостоянияИнтересов.ЭтоПоддержка
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	И СостоянияИнтересовТипыОбращений.ТипОбращения = &ТипОбращения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияИнтересов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ДоступныеПоПодразделениямСостояния
	|ИЗ
	|	Справочник.CRM_СостоянияИнтересов КАК СостоянияИнтересов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.CRM_СостоянияИнтересов.Подразделения КАК ПодразделенияСостояний
	|		ПО СостоянияИнтересов.Ссылка = ПодразделенияСостояний.Ссылка
	|ГДЕ
	|	ЕСТЬNULL(ПодразделенияСостояний.Ссылка, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|	И СостоянияИнтересов.Родитель = ЗНАЧЕНИЕ(Справочник.CRM_СостоянияИнтересов.ПустаяСсылка)
	|	И НЕ СостоянияИнтересов.ПометкаУдаления
	|	И СостоянияИнтересов.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка КАК Ссылка
	|			ИЗ
	|				ДоступныеПоТипуОбращенияСостояния КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СостоянияИнтересов.Ссылка
	|ИЗ
	|	Справочник.CRM_СостоянияИнтересов КАК СостоянияИнтересов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.CRM_СостоянияИнтересов.Подразделения КАК ПодразделенияСостояний
	|		ПО СостоянияИнтересов.Ссылка = ПодразделенияСостояний.Ссылка
	|ГДЕ
	|	ПодразделенияСостояний.Подразделение В ИЕРАРХИИ(&Подразделение)
	|	И СостоянияИнтересов.Родитель = ЗНАЧЕНИЕ(Справочник.CRM_СостоянияИнтересов.ПустаяСсылка)
	|	И НЕ СостоянияИнтересов.ПометкаУдаления
	|	И СостоянияИнтересов.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка КАК Ссылка
	|			ИЗ
	|				ДоступныеПоТипуОбращенияСостояния КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияИнтересов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ДоступныеСостояния
	|ИЗ
	|	Справочник.CRM_СостоянияИнтересов КАК СостоянияИнтересов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.CRM_СостоянияИнтересов.ТипыУслуг КАК ТипыУслугСостояний
	|		ПО СостоянияИнтересов.Ссылка = ТипыУслугСостояний.Ссылка
	|ГДЕ
	|	ЕСТЬNULL(ТипыУслугСостояний.Ссылка, ЗНАЧЕНИЕ(Справочник.CRM_ТипУслуги.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.CRM_ТипУслуги.ПустаяСсылка)
	|	И СостоянияИнтересов.Ссылка В
	|			(ВЫБРАТЬ
	|				ДоступныеПоПодразделениямСостояния.Ссылка КАК Ссылка
	|			ИЗ
	|				ДоступныеПоПодразделениямСостояния)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СостоянияИнтересов.Ссылка
	|ИЗ
	|	Справочник.CRM_СостоянияИнтересов КАК СостоянияИнтересов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.CRM_СостоянияИнтересов.ТипыУслуг КАК ТипыУслугСостояний
	|		ПО СостоянияИнтересов.Ссылка = ТипыУслугСостояний.Ссылка
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ИспользоватьТипыУслуг
	|				ТОГДА ТипыУслугСостояний.ТипУслуги = &ТипУслуги
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И СостоянияИнтересов.Ссылка В
	|			(ВЫБРАТЬ
	|				ДоступныеПоПодразделениямСостояния.Ссылка КАК Ссылка
	|			ИЗ
	|				ДоступныеПоПодразделениямСостояния)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДоступныеСостояния.Ссылка КАК Ссылка
	|ИЗ
	|	ДоступныеСостояния КАК ДоступныеСостояния";
	
	Запрос.УстановитьПараметр("ТипУслуги", ПараметрыСценариев.ТипУслуги);
	Запрос.УстановитьПараметр("ИспользоватьТипыУслуг", ПараметрыСценариев.ИспользоватьТипыУслуг);
	Если ПараметрыСценариев.Свойство("Подразделение") Тогда
		Запрос.УстановитьПараметр("Подразделение", ПараметрыСценариев.Подразделение);
	ИначеЕсли ПараметрыСценариев.Свойство("Ответственный") Тогда
		Запрос.УстановитьПараметр("Подразделение",
			 CRM_ОбщегоНазначенияСервер.ПолучитьРеквизитОтветственного(ПараметрыСценариев.Ответственный,
			 "Подразделение"));
	КонецЕсли;
	Запрос.УстановитьПараметр("ТипОбращения", ПараметрыСценариев.ТипОбращения);
	Запрос.УстановитьПараметр("ЭтоПоддержка", ПараметрыСценариев.ЭтоПоддержка);
	
	Если ПараметрыСценариев.Свойство("ИсточникОбращения") Тогда
		ТипИсточникаОбращения = ТипЗнч(ПараметрыСценариев.ИсточникОбращения);
		Если ЗначениеЗаполнено(ПараметрыСценариев.ИсточникОбращения) И
			(ТипИсточникаОбращения = Тип("СправочникСсылка.CRM_ИсточникиПолученияЛидов")
				ИЛИ ТипИсточникаОбращения = Тип("СправочникСсылка.CRM_УчетныеЗаписиМессенджеров")
				ИЛИ ТипИсточникаОбращения = Тип("СправочникСсылка.УчетныеЗаписиЭлектроннойПочты")) Тогда
				
			ТемпДоступныеСценарии = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
			ДоступныеСценарии.ЗагрузитьЗначения(CRM_ОбщегоНазначенияКлиентСервер.ПересечениеМножеств(ТемпДоступныеСценарии,
				ПараметрыСценариев.ИсточникОбращения.CRM_Сценарии.ВыгрузитьКолонку("Сценарий"))); 
		КонецЕсли;
	КонецЕсли;
	Если ДоступныеСценарии.Количество() = 0 Тогда
		ДоступныеСценарии.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	КонецЕсли;

	Если Не ПараметрыСценариев.ЭтоПоддержка И ПараметрыСценариев.ДоступныКарты Тогда
		
		Карты = CRM_БизнесПроцессыСервер.ВернутьСпискиДоступныхКарт(Истина);
		
		Для Каждого ЭлементСписка Из Карты Цикл
			ДоступныеСценарии.Добавить(ЭлементСписка.Значение, Строка(ЭлементСписка.Значение), ,
				 БиблиотекаКартинок.CRM_ПодсистемаБизнесПроцессы_Такси);
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ДоступныеСценарии;
	
КонецФункции

Функция НастройкаСоставаРеквизитовПоУмолчанию() Экспорт
	
	Настройки = Новый Структура;
	ОбщиеНастройки = Новый Структура;
	
	НастраиваемыеРеквизиты = Новый СписокЗначений;
	НастраиваемыеРеквизиты.Добавить("ОжидаемаяВыручка", НСтр("ru = 'Ожидаемая выручка'"), Истина);
	НастраиваемыеРеквизиты.Добавить("ОжидаемаяДатаПродажи", НСтр("ru = 'Ожидаемая дата продажи'"), Истина);
	НастраиваемыеРеквизиты.Добавить("Проект");
	НастраиваемыеРеквизиты.Добавить("ОсновнаяОрганизация", НСтр("ru = 'Организация'"));
	Если CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
		НастраиваемыеРеквизиты.Добавить("Договор");
	Иначе
		НастраиваемыеРеквизиты.Добавить("Соглашение");
		НастраиваемыеРеквизиты.Добавить("Контрагент");
		НастраиваемыеРеквизиты.Добавить("Договор");
	КонецЕсли;
	НастраиваемыеРеквизиты.Добавить("РольВИнтересе", НСтр("ru = 'Роль контакта'"));
	ОбщиеНастройки.Вставить("Интерес", НастраиваемыеРеквизиты);
	
	НастраиваемыеРеквизиты = Новый СписокЗначений;
	НастраиваемыеРеквизиты.Добавить("Клиент_ОбъектНаименованиеПолное", НСтр("ru = 'Публичное наименование'"));
	НастраиваемыеРеквизиты.Добавить("ГруппаКлиентИНН", НСтр("ru = 'ИНН'"), Истина);
	НастраиваемыеРеквизиты.Добавить("Клиент_ОбъектCRM_КодПоОКПО", НСтр("ru = 'ОКПО'"));
	Если CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
		НастраиваемыеРеквизиты.Добавить("Клиент_ОбъектCRM_ГоловнаяОрганизация", НСтр("ru = 'Головная организация'"));
	КонецЕсли;
	НастраиваемыеРеквизиты.Добавить("Клиент_ОбъектРодитель",
		?(CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM(), НСтр("ru = 'Группа'"), НСтр("ru = 'Головное предприятие'")));
	НастраиваемыеРеквизиты.Добавить("Клиент_ОбъектCRM_ОсновнаяОтрасль", НСтр("ru = 'Отрасль'"));
	НастраиваемыеРеквизиты.Добавить("Клиент_ОбъектCRM_СегментРынка", НСтр("ru = 'Сегмент рынка'"));
	НастраиваемыеРеквизиты.Добавить("Клиент_ОбъектCRM_Важность", НСтр("ru = 'Важность'"));
	НастраиваемыеРеквизиты.Добавить("Клиент_ОбъектCRM_СтатусРаботы", НСтр("ru = 'Статус работы'"));
	НастраиваемыеРеквизиты.Добавить("Клиент_ОбъектОсновнойМенеджер", НСтр("ru = 'Ответственный'"));
	НастраиваемыеРеквизиты.Добавить("ГруппаТипыОтношений", НСтр("ru = 'Тип отношений'"), Истина);
	НастраиваемыеРеквизиты.Добавить("Клиент_ОбъектБизнесРегион", НСтр("ru = 'Бизнес-регион'"));
	НастраиваемыеРеквизиты.Добавить("Клиент_Адрес", НСтр("ru = 'Адрес'"));
	НастраиваемыеРеквизиты.Добавить("Клиент_ЮрАдрес", НСтр("ru = 'Юридический адрес'"));
	НастраиваемыеРеквизиты.Добавить("Клиент_ОбъектПол", НСтр("ru = 'Пол'"));
	НастраиваемыеРеквизиты.Добавить("Клиент_ОбъектДатаРождения", НСтр("ru = 'Дата рождения'"));
	НастраиваемыеРеквизиты.Добавить("Клиент_ОбъектКомментарий", НСтр("ru = 'Комментарий'"));
	ОбщиеНастройки.Вставить("Клиент", НастраиваемыеРеквизиты);
	
	НастраиваемыеРеквизиты = Новый СписокЗначений;
	НастраиваемыеРеквизиты.Добавить("Должность", , Истина);
	НастраиваемыеРеквизиты.Добавить("СтатусКЛ", НСтр("ru = 'Статус'"));
	НастраиваемыеРеквизиты.Добавить("РольКонтактногоЛица", НСтр("ru = 'Роль'"));
	НастраиваемыеРеквизиты.Добавить("ПолКонтактногоЛица", НСтр("ru = 'Пол'"));
	НастраиваемыеРеквизиты.Добавить("ДатаРожденияКЛ", НСтр("ru = 'Дата рождения'"));
	НастраиваемыеРеквизиты.Добавить("Контакт_Описание", НСтр("ru = 'Описание'"));
	ОбщиеНастройки.Вставить("Контакт", НастраиваемыеРеквизиты);
	
	НастраиваемыеРеквизиты = Новый СписокЗначений;
	НастраиваемыеРеквизиты.Добавить("Должность1", НСтр("ru = 'Должность'"));
	НастраиваемыеРеквизиты.Добавить("Отрасль");
	НастраиваемыеРеквизиты.Добавить("БизнесРегион", НСтр("ru = 'Бизнес регион'"));
	НастраиваемыеРеквизиты.Добавить("РодительПК", НСтр("ru = 'Группа'"));
	ОбщиеНастройки.Вставить("ПотенциальныйКлиент", НастраиваемыеРеквизиты);
	
	Настройки.Вставить("ОбщиеНастройки", ОбщиеНастройки);
	
	Возврат Настройки;
	
КонецФункции

Функция СответствиеЭлементовМастераИИнтереса() Экспорт
	
	Соответствие = Новый Структура;
	
	Соответствие.Вставить("Должность", "Контакт_ОбъектCRM_Должность");
	Соответствие.Вставить("СтатусКЛ", "Контакт_Статус");
	Соответствие.Вставить("РольКонтактногоЛица", "Контакт_ОбъектCRM_РольКонтактногоЛица");
	Соответствие.Вставить("ПолКонтактногоЛица", "Контакт_ОбъектПол");
	Соответствие.Вставить("ДатаРожденияКЛ", "Контакт_ОбъектДатаРождения");
	Соответствие.Вставить("Контакт_Описание", "Контакт_ОбъектКомментарий");
	
	Возврат Соответствие;
	
КонецФункции

Функция ВариантыНазначенияОтветственного() Экспорт
	
	МассивСтруктур = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("CRM_МастерРегистрацииОбращения.НазначениеОтветственного",
		 "МастерРегистрации",
		 Неопределено);
	
	ТаблицаИсточник = Неопределено;	 
	Если МассивСтруктур = Неопределено Тогда
		ТаблицаИсточник = ВариантыНазначенияОтветственногоПоУмолчанию();
	Иначе
		ТаблицаИсточник = CRM_РабочийСтолСервер.МассивСтруктурВТаблицуЗначений(МассивСтруктур);
	КонецЕсли;
	
	Возврат ТаблицаИсточник;
	
КонецФункции

Функция ВариантыНазначенияОтветственногоПоУмолчанию(ПодставлятьОтветственногоЗаКлиентаВИнтерес = Ложь) Экспорт
	
	Таблица = Новый ТаблицаЗначений;
	
	Таблица.Колонки.Добавить("Вариант", Новый ОписаниеТипов("ПеречислениеСсылка.CRM_ВариантыНазначенияОтветственного"));
	Таблица.Колонки.Добавить("Используется", Новый ОписаниеТипов("Булево"));
	
	Если ПодставлятьОтветственногоЗаКлиентаВИнтерес Тогда
		НС = Таблица.Добавить();
		НС.Вариант = Перечисления.CRM_ВариантыНазначенияОтветственного.МенеджерКлиента;
		НС.Используется = Истина;	
	КонецЕсли;
	
	НС = Таблица.Добавить();
	НС.Вариант = Перечисления.CRM_ВариантыНазначенияОтветственного.ПерсональнаяНастройка;
	НС.Используется = Истина;	
	
	НС = Таблица.Добавить();
	НС.Вариант = Перечисления.CRM_ВариантыНазначенияОтветственного.ТекущийПользователь;
	НС.Используется = Истина;	
	
	Если НЕ ПодставлятьОтветственногоЗаКлиентаВИнтерес Тогда
		НС = Таблица.Добавить();
		НС.Вариант = Перечисления.CRM_ВариантыНазначенияОтветственного.МенеджерКлиента;
		НС.Используется = Ложь;	
	КонецЕсли;
	
	НС = Таблица.Добавить();
	НС.Вариант = Перечисления.CRM_ВариантыНазначенияОтветственного.РольСценария;
	НС.Используется = Ложь;	
	
	НС = Таблица.Добавить();
	НС.Вариант = Перечисления.CRM_ВариантыНазначенияОтветственного.ОтветственныйОбращения;
	НС.Используется = Ложь;
	
	Возврат Таблица;
	
КонецФункции

#КонецОбласти

#КонецЕсли
