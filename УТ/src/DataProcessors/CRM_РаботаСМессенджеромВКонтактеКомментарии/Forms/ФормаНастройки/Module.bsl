
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьЗначенияСвойств(Объект, Параметры);
	
	Параметры.Свойство("ПараметрыПрокси", ПараметрыПрокси);
	
	Элементы.ГруппаВебКлиент.Видимость = ОбщегоНазначенияКлиентСервер.ЭтоВебКлиент();
	Элементы.ГруппаТонкийКлиент.Видимость = НЕ Элементы.ГруппаВебКлиент.Видимость;
	
	Если ЗначениеЗаполнено(Объект.Токен) Тогда
		ЗаполнитьСписокГрупп();
	Иначе
		ДанныеАккаунта = НСтр("ru='Авторизуйтесь на сайте ВКонтакте.';en='Log on to site Vkontakte.'");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТокенПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.Токен) Тогда
		ЗаполнитьСписокГрупп();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	Если ПроверитьЗаполнение() Тогда
		ПараметрыДоступа = Новый Структура;
		ПараметрыДоступа.Вставить("Токен", Объект.Токен);
		ПараметрыДоступа.Вставить("IDГруппы", Объект.IDГруппы);
		Закрыть(ПараметрыДоступа);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Вход(Команда)
	ПутьКСтраницеАвторизации = "https://oauth.vk.com/authorize?v=5.67&client_id=6086563&scope=groups,market,offline,docs&redirect_uri=http://oauth.vk.com/blank.html&display=page&response_type=token";
	Если ОбщегоНазначенияКлиентСервер.ЭтоВебКлиент() Тогда
		//Оповещение = Новый ОписаниеОповещения("ОбработкаПредупрежденияПродолжение", ЭтотОбъект, ПутьКСтраницеАвторизации);
		//ПоказатьПредупреждение(Оповещение, НСтр("ru = 'Будет выполнен переход на сайт авторизации ВКонтакте.
		//|После авторизации необходимо скопировать полученный токен (в адресной строке, между access_token= и &expires_in) в поле ""Токен""'"));
		ОбработкаПредупрежденияПродолжение(ПутьКСтраницеАвторизации);
	Иначе
		ПараметрыАвторизации = Новый Структура("АвторизацияПользователя, ПутьКСтраницеАвторизации",
			 Истина,
			 ПутьКСтраницеАвторизации);
		ОписаниеОповещения = Новый ОписаниеОповещения("ВходЗавершение", ЭтотОбъект);
		ОткрытьФорму("Обработка.CRM_РаботаСМессенджеромВКонтакте.Форма.ФормаАвторизации",
			 ПараметрыАвторизации, , , , , ОписаниеОповещения,
			 РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСправка(Команда)

	ПерейтиПоНавигационнойСсылке(CRM_ОбщегоНазначенияСервер.ПолучитьСсылкуНаРазделСправки("ВКонтакте"));

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПодключение(Команда)
	Попытка
		Если ЗначениеЗаполнено(Объект.IDГруппы) Тогда
			ПроверитьПодключениеСервер();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Подключение прошло успешно.';
				|en='Connection was successful.'"));
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не выбрана группа!';en='Group is not selected!'"));
		КонецЕсли;
	Исключение
		Инфо = ИнформацияОбОшибке();
		Описание = ?(Инфо.Причина = Неопределено, Инфо.Описание, Инфо.Причина.Описание);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Описание);
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьТокенВК(Команда)
	Если ЗначениеЗаполнено(СсылкаАвторизацииВК) Тогда
		СтрокаНачалаТокена = "access_token=";
		Позиция = СтрНайти(СсылкаАвторизацииВК, СтрокаНачалаТокена);
		Если Позиция > 0 Тогда
			Объект.Токен = Сред(СсылкаАвторизацииВК, Позиция + СтрДлина(СтрокаНачалаТокена),
				  СтрНайти(СсылкаАвторизацииВК, "&expires_in=") - (Позиция 
				+ 13));
			ТокенПриИзменении(Неопределено);
		Иначе
			
		КонецЕсли;	
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Нстр("ru='Не заполнена ссылка авторизации!';
			|en='Authorization reference is not completed!'"));
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработкаПредупрежденияПродолжение(Результат)
	ОбщегоНазначенияКлиент.ПроверитьРасширениеРаботыСФайламиПодключено(Новый ОписаниеОповещения("ОбработкаКомандыПродолжение",
		 ЭтотОбъект, Результат),
		 НСтр("ru='Для продолжения необходимо установить расширение для работы с файлами.';en='To continue,
		| install the file operation extension.'"));	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаКомандыПродолжение(Результат, ДопПараметры) Экспорт
	// НачатьЗапускПриложения (Новый ОписаниеОповещения("ОбработкаКомандыЗавершение", ЭтотОбъект,
		// Новый Структура),
		// ДопПараметры);
	ПерейтиПоНавигационнойСсылке(ДопПараметры);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаКомандыЗавершение(Результат, ДопПараметры) Экспорт
	РезультирующаяСтрока = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ВходЗавершение(ТокенСтруктура, ДопПараметры) Экспорт
	Если ТокенСтруктура <> Неопределено Тогда
		ВходЗавершениеНаСервере(ТокенСтруктура);
		Если НЕ ЗначениеЗаполнено(Объект.IDГруппы) И Элементы.Группа.СписокВыбора.Количество() > 0 Тогда
			ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораГруппы", ЭтотОбъект);
			ПоказатьВыборИзСписка(ОписаниеОповещения, Элементы.Группа.СписокВыбора, Элементы.Группа);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВходЗавершениеНаСервере(ТокенСтруктура)
	ВходЗавершениеВКонтакте(ТокенСтруктура);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокГрупп()
	Попытка
		ДанныеАккаунта = НСтр("ru='Запись авторизована под пользователем';en='Record logged as user'") + ": " 
			+ Обработки.CRM_РаботаСМессенджеромВКонтакте.ДанныеГруппы(Объект.Токен,
			 ПараметрыПрокси);
		Элементы.ДанныеАккаунта.ЦветТекста = WebЦвета.ТемноЗеленый;
		Элементы.ДанныеАккаунта1.ЦветТекста = WebЦвета.ТемноЗеленый;
		Элементы.Вход.Картинка = БиблиотекаКартинок.CRM_ВиджетЦельВыполнена;
	Исключение
		ДанныеАккаунта = НСтр("ru='Авторизуйтесь на сайте ВКонтакте.';en='Log on to site Vkontakte.'");
	КонецПопытки;
	СписокГрупп = Обработки.CRM_РаботаСМессенджеромВКонтакте.ПолучитьСписокГруппПользователя(Объект.Токен,
		 ПараметрыПрокси);
	Элементы.Группа.СписокВыбора.Очистить();
	Элементы.Группа2.СписокВыбора.Очистить();
	Если СписокГрупп <> Неопределено Тогда
		Для каждого Группа Из СписокГрупп Цикл
			Элементы.Группа.СписокВыбора.Добавить(Группа.Значение, Группа.Представление);
			Элементы.Группа2.СписокВыбора.Добавить(Группа.Значение, Группа.Представление);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВходЗавершениеВКонтакте(ТокенСтруктура)
	Объект.Токен = ТокенСтруктура.Токен;
	ЗаполнитьСписокГрупп();
	ТекущийЭлемент = ?(Элементы.ГруппаВебКлиент.Видимость, Элементы.Группа2, Элементы.Группа);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораГруппы(ВыбранныйЭлемент, ДопПараметры) Экспорт
	Если ВыбранныйЭлемент <> Неопределено Тогда
		Объект.IDГруппы = ВыбранныйЭлемент.Значение;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПроверитьПодключениеСервер()
	ДанныеГруппы = Обработки.CRM_ИнтеграцияСМагазиномВКонтакте.ДанныеГруппы(Объект.Токен);
КонецПроцедуры

#КонецОбласти
