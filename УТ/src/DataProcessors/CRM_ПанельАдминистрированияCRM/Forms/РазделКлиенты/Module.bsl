
#Область ОписаниеПеременных

&НаКлиенте
Перем ОбновитьИнтерфейс;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура - обработчик события формы "ПриСозданииНаСервере".
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВариантПоставкиПользователяКОРП = CRM_ЛицензированиеЭкспортныеМетоды.ВариантПоставкиКОРП();
	ЭтоРазделенныйРежимРаботы = Константы.ИспользоватьРазделениеПоОбластямДанных.Получить();
	ЭтоПлатныйТариф = Константы.CRM_ПлатныйТарифДоступен.Получить();
	
	// поиск дублей
	Элементы.ГруппаРеквизитыПоискаДублей.Доступность = Константы.CRM_ВыполнятьПоискДублейПриЗаписиПартнера.Получить();
	
	ЗначениеХранилища = Константы.CRM_РеквизитыПоискаДублейПартнеров.Получить();
	РеквизитыПоиска = ЗначениеХранилища.Получить();
	Если РеквизитыПоиска <> Неопределено И (ТипЗнч(РеквизитыПоиска) = Тип("СписокЗначений"))
		 И (НЕ РеквизитыПоиска.Количество() = 0) Тогда
		
		РеквизитыПоискаДублейПартнеров = РеквизитыПоиска;
		
	Иначе
		ЗаполнитьРеквизитыПоиска();
	КонецЕсли;
	
	Элементы.CRM_ИспользоватьМониторПоказателей.Доступность = ВариантПоставкиПользователяКОРП;
	Если Не ВариантПоставкиПользователяКОРП Тогда
		Элементы.CRM_ИспользоватьМониторПоказателей.РасширеннаяПодсказка.Заголовок = 
			Элементы.CRM_ИспользоватьМониторПоказателей.РасширеннаяПодсказка.Заголовок  + Символы.ПС
			+ НСтр("ru='Доступно только для ""КОРП"" версии конфигурации!';
				   |en='Available only for ""CORP"" configuration version!'");
	КонецЕсли;
	
	Если CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() И ЭтоРазделенныйРежимРаботы Тогда
		Элементы.ГруппаОграниченияДоступа.Видимость = ЭтоПлатныйТариф;
		Элементы.ГруппаНастройкиУправленияДоступом.Видимость = Константы["CRM_ИспользоватьОграниченияДоступа"].Получить();
	Иначе	
		Элементы.ГруппаОграниченияДоступа.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.CRM_ПланироватьПродажи.Видимость = НЕ ЭтоРазделенныйРежимРаботы; 
	Элементы.ГруппаСправочникиПродаж4.Видимость = НЕ ЭтоРазделенныйРежимРаботы ИЛИ ЭтоПлатныйТариф; 
	
	Элементы.Группа1.Видимость = НЕ ЭтоРазделенныйРежимРаботы; 
	Элементы.Группа2.Видимость = НЕ ЭтоРазделенныйРежимРаботы; 
	
	Элементы.ГруппаУправлениеПоказателями.Видимость = НЕ ЭтоРазделенныйРежимРаботы ИЛИ ЭтоПлатныйТариф;
	Элементы.ГруппапоказательПравоЛево.Видимость = ПолучитьФункциональнуюОпцию("CRM_ИспользоватьПоказатели");
	
	Элементы.ГруппаПотенциалы.Видимость = НЕ ЭтоРазделенныйРежимРаботы;
	Элементы.CRM_РассчитыватьПотенциалКлиентов.Видимость = НЕ ЭтоРазделенныйРежимРаботы;
	Элементы.CRM_РассчитыватьПотенциалКлиентов.Доступность = ВариантПоставкиПользователяКОРП;
	Если Не ВариантПоставкиПользователяКОРП Тогда
		Элементы.CRM_РассчитыватьПотенциалКлиентов.РасширеннаяПодсказка.Заголовок = 
			Элементы.CRM_РассчитыватьПотенциалКлиентов.РасширеннаяПодсказка.Заголовок  + Символы.ПС
			+ НСтр("ru='Доступно только для ""КОРП"" версии конфигурации!'");
	КонецЕсли;
	
	Элементы.РегистрироватьДополнительнуюИнформацию.Видимость = НЕ ЭтоРазделенныйРежимРаботы;
	Элементы.ОткрытьНаборТиповДополнительнойИнформации.Видимость = НЕ ЭтоРазделенныйРежимРаботы;
	Элементы.ГруппаПоддержка.Видимость = НЕ ЭтоРазделенныйРежимРаботы;
	Элементы.ГруппаУправлениеПоказателямиЛево.Видимость = НЕ ЭтоРазделенныйРежимРаботы;
	Элементы.ГруппаПланированиеВстреч.Видимость = НЕ ЭтоРазделенныйРежимРаботы;
	
	Элементы.ГруппаОграничениеВыводаКлиентскойБазы.Видимость = ЭтоРазделенныйРежимРаботы;
	Если Не ВариантПоставкиПользователяКОРП Тогда
		Элементы.ДекорацияИспользоватьПланированиеВстреч.Заголовок = 
			Элементы.ДекорацияИспользоватьПланированиеВстреч.Заголовок  + Символы.ПС
			+ НСтр("ru='Доступно только для ""КОРП"" версии конфигурации!'");
	КонецЕсли;
	
	УстановитьДоступность();
	
	Элементы.CRM_ИспользоватьПланированиеВстреч.Доступность = ВариантПоставкиПользователяКОРП
		 И ПолучитьФункциональнуюОпцию("CRM_ИспользоватьБизнесПроцессы");
	
	Если Параметры.Свойство("ГруппаНастроек") Тогда
		Элементы[Параметры.ГруппаНастроек].Показать();
	КонецЕсли;
	
	Если Параметры.Свойство("УстановитьФокус") Тогда
		ТекущийЭлемент = Элементы[Параметры.УстановитьФокус];
	КонецЕсли;
	
	Если Не ЭтоРазделенныйРежимРаботы Тогда
		ЗащищенныйОбъект = CRM_ЛицензированиеЭкспортныеМетоды.ПолучитьЗащищеннуюОбработку();
		ЗащищенныйОбъект.ПанельАдминистрированияCRM_ПриСозданииНаСервере(ЭтотОбъект);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события формы "ПриЗакрытии".
//
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	ОбновитьИнтерфейсПрограммы();
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события формы "ОбработкаОповещения".
//
// Параметры:
//	ИмяСобытия - Строка - обрабатывается только событие Запись_НаборКонстант, генерируемое панелями администрирования.
//	Параметр   - Структура - содержит имена констант, подчиненных измененной константе, "вызвавшей" оповещение.
//	Источник   - Строка - имя измененной константы, "вызвавшей" оповещение.
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия <> "Запись_НаборКонстант" Тогда
		Возврат; // Такие событие не обрабатываются.
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

#Область СлужебныеПроцедурыИФункции

#Область Клиент

&НаКлиенте
Процедура Подключаемый_ПриИзмененииРеквизита(Элемент, ОбновлятьИнтерфейс = Истина)
	
	КонстантаИмя = ПриИзмененииРеквизитаСервер(Элемент.Имя);
	
	Если ОбновлятьИнтерфейс Тогда
		ПодключитьОбработчикОжидания("ОбновитьИнтерфейсПрограммы", 1, Истина);
		ОбновитьИнтерфейс = Истина;
	КонецЕсли;
	
	Если КонстантаИмя <> "" Тогда
		Оповестить("Запись_НаборКонстант", Новый Структура, КонстантаИмя);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнтерфейсПрограммы()
	
	Если ОбновитьИнтерфейс = Истина Тогда
		ОбновитьИнтерфейс = Ложь;
		ОбновитьИнтерфейс();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // Клиент

#Область ВызовСервера

&НаСервере
Функция ПриИзмененииРеквизитаСервер(ИмяЭлемента)
	
	РеквизитПутьКДанным = Элементы[ИмяЭлемента].ПутьКДанным;
	КонстантаИмя = СохранитьЗначениеРеквизита(РеквизитПутьКДанным);
	
	ОбновитьПовторноИспользуемыеЗначения();
	УстановитьДоступность(РеквизитПутьКДанным);
	
	Возврат КонстантаИмя;
	
КонецФункции

#КонецОбласти // ВызовСервера

#Область Сервер

&НаСервере
Процедура УстановитьДоступность(РеквизитПутьКДанным = "")
	
	Если РеквизитПутьКДанным = "НаборКонстант.CRM_ИспользоватьЗаявки" ИЛИ РеквизитПутьКДанным = "" Тогда
		Элементы.ДекорацияИсточникиЗаявок.Видимость = НаборКонстант.CRM_ИспользоватьЗаявки;
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.CRM_РассчитыватьПотенциалКлиентов" Тогда
		Задание = РегламентныеЗадания.НайтиПредопределенное(Метаданные.РегламентныеЗадания.CRM_РасчетПотенциалаКлиентов);
		Задание.Использование = ПолучитьФункциональнуюОпцию("CRM_РассчитыватьПотенциалКлиентов");
		Задание.Записать();
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.CRM_РегистрироватьДополнительнуюИнформацию" Тогда
		Элементы.ОткрытьНаборТиповДополнительнойИнформации.Видимость =
			ПолучитьФункциональнуюОпцию("CRM_РегистрироватьДополнительнуюИнформацию");
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.CRM_ИспользоватьПоддержку" ИЛИ РеквизитПутьКДанным = "" Тогда
		ИспользоватьПоддержку = ПолучитьФункциональнуюОпцию("CRM_ИспользоватьПоддержку");
		Элементы.ОткрытьТипыОбращений.Видимость = ИспользоватьПоддержку;
		Элементы.ОткрытьСценарииПоддержки.Видимость = ИспользоватьПоддержку;
		Элементы.ОткрытьУровниПоддержки.Видимость = ИспользоватьПоддержку;
		Элементы.КомандаОбратнойСвязи.Видимость = ИспользоватьПоддержку;
		Элементы.ПроверитьПубликациюСервисаОбратнойСвязи.Видимость = ИспользоватьПоддержку;
		Элементы.CRM_СрокАктуальностиЗапросаНаОценку.Видимость = ИспользоватьПоддержку;
	КонецЕсли;

	Если РеквизитПутьКДанным = "НаборКонстант.CRM_ОтображатьВКарточкеКлиентаЧисленность" ИЛИ РеквизитПутьКДанным = "" Тогда
		ОтображатьВКарточкеКлиентаЧисленность = ПолучитьФункциональнуюОпцию("CRM_ОтображатьВКарточкеКлиентаЧисленность");
		Элементы.ОткрытьЧисленностьСотрудников.Видимость = ОтображатьВКарточкеКлиентаЧисленность;
		Элементы.ОткрытьЧисленностьРабочихМест.Видимость = ОтображатьВКарточкеКлиентаЧисленность;
	КонецЕсли;
	
	Элементы.ОткрытьТипыУслуг.Видимость = НаборКонстант.CRM_ИспользоватьТипыУслуг;
	
	Если РеквизитПутьКДанным = "НаборКонстант.CRM_ИспользоватьПланированиеПродаж" ИЛИ РеквизитПутьКДанным = "" Тогда
		ИспользоватьПланированиеПродаж = ПолучитьФункциональнуюОпцию("CRM_ИспользоватьПланированиеПродаж");
		Элементы.ОткрытьПланыПродаж.Видимость = ИспользоватьПланированиеПродаж;
		Элементы.ОткрытьСхемыПлановПродаж.Видимость = ИспользоватьПланированиеПродаж;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СохранитьЗначениеРеквизита(РеквизитПутьКДанным)
	
	// Сохранение значений реквизитов, не связанных с константами напрямую (в отношении один-к-одному).
	Если РеквизитПутьКДанным = "" Тогда
		Возврат "";
	КонецЕсли;
	
	// Определение имени константы.
	КонстантаИмя = "";
	Если НРег(Лев(РеквизитПутьКДанным, 14)) = НРег("НаборКонстант.") Тогда
		// Если путь к данным реквизита указан через "НаборКонстант".
		КонстантаИмя = Сред(РеквизитПутьКДанным, 15);
	КонецЕсли;
	
	// Сохранения значения константы.
	Если КонстантаИмя <> "" Тогда
		КонстантаМенеджер = Константы[КонстантаИмя];
		КонстантаЗначение = НаборКонстант[КонстантаИмя];
		
		Если КонстантаМенеджер.Получить() <> КонстантаЗначение Тогда
			КонстантаМенеджер.Установить(КонстантаЗначение);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат КонстантаИмя;
	
КонецФункции

#КонецОбласти // Сервер

#Область Клиенты

&НаКлиенте
Процедура ОткрытьВидыСвязейКлиентов(Команда)
	ОткрытьФорму("Справочник.ВидыСвязейМеждуПартнерами.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКЛ(Команда)
	ОткрытьФорму("Справочник.КонтактныеЛицаПартнеров.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВысокочастотныеФИО(Команда)
	ОткрытьФорму("Справочник.CRM_ВысокочастотныеФИО.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРолиКЛ(Команда)
	ОткрытьФорму("Справочник.РолиКонтактныхЛицПартнеров.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДолжности(Команда)
	ОткрытьФорму("Справочник.CRM_Должности.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСтатусыКонтактныхЛиц(Команда)
	ОткрытьФорму("Справочник.CRM_СтатусыКонтактныхЛиц.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьБизнесРегионы(Команда)
	ОткрытьФорму("Справочник.БизнесРегионы.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОтрасли(Команда)
	ОткрытьФорму("Справочник.CRM_Отрасли.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройкиПараметровКонтроля(Команда)
	ОткрытьФорму("Справочник.CRM_ПравилаРасчетаКачестваЗаполненияДанных.Форма.ФормаНастройки", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНаборТиповДополнительнойИнформации(Команда)
	ОткрытьФорму("ПланВидовХарактеристик.CRM_ДополнительнаяИнформация.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура CRM_ИспользоватьВидыДеятельностиУПартнеровПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыПоиска()
	
	РеквизитыПоискаДублейПартнеров.Добавить("Наименование;ПОДОБНО", "Наименование");
	РеквизитыПоискаДублейПартнеров.Добавить("НаименованиеПолное;ПОДОБНО", "Наименование полное");
	РеквизитыПоискаДублейПартнеров.Добавить("CRM_ИНН;=", "ИНН");
	РеквизитыПоискаДублейПартнеров.Добавить("Контакт_Адрес;ПОДОБНО", "Адрес");
	РеквизитыПоискаДублейПартнеров.Добавить("Контакт_АдресЭлектроннойПочты;ПОДОБНО", "Email");
	РеквизитыПоискаДублейПартнеров.Добавить("Контакт_Телефон;ПОДОБНО", "Телефон");
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнятьПоискДублейПриЗаписиПартнераПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	Элементы.ГруппаРеквизитыПоискаДублей.Доступность = НаборКонстант.CRM_ВыполнятьПоискДублейПриЗаписиПартнера;
КонецПроцедуры

&НаКлиенте
Процедура CRM_АвтоматическийКонтрольДублейКонтактовПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура CRM_ЗапретитьВводНовогоКлиентаКонтактаПриНайденныхСовпаденияхПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура CRM_ЗапретитьВводНовогоКонтактаПриНайденныхСовпаденияхПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура CRM_ИскатьДублиТолькоПоПолномуСовпадениюПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
	Если CRM_ИскатьДублиТолькоПоПолномуСовпадениюПриИзмененииНаСервере() Тогда
		РеквизитПоиска = РеквизитыПоискаДублейПартнеров.НайтиПоЗначению("Наименование;ПОДОБНО");
		Если РеквизитПоиска <> Неопределено Тогда
			РеквизитПоиска.Значение = "Наименование;=";
		КонецЕсли;
		РеквизитПоиска = РеквизитыПоискаДублейПартнеров.НайтиПоЗначению("НаименованиеПолное;ПОДОБНО");
		Если РеквизитПоиска <> Неопределено Тогда
			РеквизитПоиска.Значение = "НаименованиеПолное;=";
		КонецЕсли;
	Иначе
		РеквизитПоиска = РеквизитыПоискаДублейПартнеров.НайтиПоЗначению("Наименование;=");
		Если РеквизитПоиска <> Неопределено Тогда
			РеквизитПоиска.Значение = "Наименование;ПОДОБНО";
		КонецЕсли;
		РеквизитПоиска = РеквизитыПоискаДублейПартнеров.НайтиПоЗначению("НаименованиеПолное;=");
		Если РеквизитПоиска <> Неопределено Тогда
			РеквизитПоиска.Значение = "НаименованиеПолное;ПОДОБНО";
		КонецЕсли;
	КонецЕсли;
	
	ЗаписатьРеквизитыПоискаДублейПартнеров(РеквизитыПоискаДублейПартнеров);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция CRM_ИскатьДублиТолькоПоПолномуСовпадениюПриИзмененииНаСервере()
	Возврат Константы.CRM_ИскатьДублиТолькоПоПолномуСовпадению.Получить();
КонецФункции

&НаСервереБезКонтекста
Процедура ЗаписатьРеквизитыПоискаДублейПартнеров(РеквизитыПоискаДублейПартнеров)
	Константы.CRM_РеквизитыПоискаДублейПартнеров.Установить(Новый ХранилищеЗначения(РеквизитыПоискаДублейПартнеров));
КонецПроцедуры

&НаКлиенте
Процедура РеквизитыПоискаДублейПартнеровПометкаПриИзменении(Элемент)
	ЗаписатьРеквизитыПоискаДублейПартнеров(РеквизитыПоискаДублейПартнеров);
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияИсторияРеквизитовКлиентовНажатие(Элемент,
	 НавигационнаяСсылкаФорматированнойСтроки,
	 СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если НаборКонстант.CRM_ВестиИсториюРеквизитовКлиентов Тогда
		ПараметрыФормы = Новый Структура("Данные", "Клиенты");
		ОткрытьФорму("РегистрСведений.CRM_НастройкаВерсионированияРеквизитовПартнеров.Форма.НастройкаВерсионирования",
			 ПараметрыФормы,
			 ЭтотОбъект);
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Ведение истории реквизитов отключено.';
			|en='Keeping the history of attributes is disabled.'"));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура CRM_НастройкаИсторииРеквизитовИнтереса(Элемент, НавигационнаяСсылкаФорматированнойСтроки,
	 СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если НаборКонстант.CRM_ВестиИсториюРеквизитовКлиентов Тогда
		ПараметрыФормы = Новый Структура("Данные", "Интересы");
		ОткрытьФорму("РегистрСведений.CRM_НастройкаВерсионированияРеквизитовПартнеров.Форма.НастройкаВерсионирования",
			 ПараметрыФормы,
			 ЭтотОбъект);
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Ведение истории реквизитов отключено.';
			|en='Keeping the history of attributes is disabled.'"));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура CRM_ОсновнойВидEmailКонтактаПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура CRM_ОсновнойВидТелефонаКонтактаПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура РегистрироватьДополнительнуюИнформациюПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура CRM_РассчитыватьПотенциалКлиентовПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура УказыватьВКарточкеКонтактногоЛицаБолееОднойРолиПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

#КонецОбласти // Клиенты

#Область Продажи

&НаКлиенте
Процедура ОткрытьВоронкиПродаж(Команда)
	ОткрытьФорму("Справочник.CRM_ВоронкиПродаж.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВажностьКлиентов(Команда)
	ОткрытьФорму("Справочник.CRM_ВажностьКлиентов.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСтатусыРаботыСКлиентами(Команда)
	ОткрытьФорму("Справочник.CRM_СтатусыРаботыСКлиентом.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьТипыОтношений(Команда)
	ОткрытьФорму("Справочник.CRM_ТипыОтношений.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСегментыРынка(Команда)
	ОткрытьФорму("Справочник.CRM_СегментыРынка.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЧисленностьСотрудников(Команда)
	ОткрытьФорму("Справочник.CRM_ЧисленностьСотрудниковКлиента.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЧисленностьРабочихМест(Команда)
	ОткрытьФорму("Справочник.CRM_ЧисленностьРабочихМестКлиента.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьТипыУслуг(Команда)
	ОткрытьФорму("Справочник.CRM_ТипУслуги.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСостоянияИнтересов(Команда)
	ОткрытьФорму("Обработка.CRM_НастройкаСценарияПродаж.Форма.Форма", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура CRM_ПечататьНомераДокументовБезПрефиксовПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура CRM_ИспользоватьКоммерческиеПредложенияПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура CRM_ПланироватьПродажиПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПричиныОтказовПоИнтересам(Команда)
	ОткрытьФорму("Справочник.CRM_ПричиныОтказаПоИнтересам.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПричиныОтклоненияОбращений(Команда)
	ОткрытьФорму("Справочник.CRM_ПричиныОтклоненияОбращений.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьТовары(Команда)
	ОткрытьФорму("Справочник.Номенклатура.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРазделители(Команда)
	ОткрытьФорму("Справочник.CRM_Разделители.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура CRM_РазрешатьСозданиеИнтересовПоОдномуТипуУслугиПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура CRM_СвязыватьРанееПолученныеEmailиЗвонкиСКлиентамиПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура CRM_ОтображатьВАРМИсходящиеПисьмаИЗвонкиПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура CRM_РегистрироватьВИнтересахВзаимосвязиКлиентовПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПланыПродаж(Команда)
	ОткрытьФорму("Справочник.CRM_ПланПродаж.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура CRM_ИспользоватьПланированиеПродажПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСхемыПлановПродаж(Команда)
	ОткрытьФорму("Справочник.CRM_СхемаПланаПродаж.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура CRM_ЗапретитьПечатьСчетаИзИнтересаПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент, Истина);
КонецПроцедуры

&НаКлиенте
Процедура НеСвязыватьСАктивнымИнтересомДокументыПриКопированииПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

#КонецОбласти // Продажи

#Область Поддержка

&НаКлиенте
Процедура CRM_ИспользоватьПоддержкуПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура CRM_АдресСервисаОбратнойСвязиПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьТипыОбращений(Команда)
	ОткрытьФорму("Справочник.CRM_ТипыОбращений.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСценарииПоддержки(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ЭтоПоддержка", Истина);
	ОткрытьФорму("Обработка.CRM_НастройкаСценарияПродаж.Форма.Форма", ПараметрыОткрытия, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьУровниПоддержки(Команда)
	
	ОткрытьФорму("Справочник.CRM_УровниПоддержки.Форма.ФормаСписка", , ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОписаниеОбратнойСвязи(Команда)
	ПерейтиПоНавигационнойСсылке(CRM_ОбщегоНазначенияСервер.ПолучитьСсылкуНаРазделСправки("СервисОбратнойСвязи"));
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьАдресПубликациюСервисаОбратнойСвязи()
	Возврат Константы.CRM_АдресСервисаОбратнойСвязи.Получить();
КонецФункции // ПолучитьАдресПубликациюСервисаОбратнойСвязи()

&НаКлиенте
Процедура ПроверитьПубликациюСервисаОбратнойСвязи(Команда)
	АдресДляПроверки = СокрЛП(ПолучитьАдресПубликациюСервисаОбратнойСвязи());
	Если ЗначениеЗаполнено(АдресДляПроверки) Тогда
		АдресДляПроверки = ?(Прав(АдресДляПроверки, 1) = "/", АдресДляПроверки + "ping", АдресДляПроверки + "/ping");
		ПерейтиПоНавигационнойСсылке(АдресДляПроверки);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура CRM_СрокАктуальностиЗапросаНаОценкуПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура КомандаОписаниеПланированияПродаж(Команда)
	ПерейтиПоНавигационнойСсылке(CRM_ОбщегоНазначенияСервер.ПолучитьСсылкуНаРазделСправки("ПланированиеПродаж"));
КонецПроцедуры

&НаКлиенте
Процедура КомандаОписаниеПотенциалы(Команда)
	ПерейтиПоНавигационнойСсылке(CRM_ОбщегоНазначенияСервер.ПолучитьСсылкуНаРазделСправки("ПотенциалПродаж"));
КонецПроцедуры

#КонецОбласти

#Область УправлениеПоказателями

&НаКлиенте
Процедура CRM_ИспользоватьМониторПоказателейПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура CRM_ГлубинаПересчетаПоказателейПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьШаблоныПоказателей(Команда)
	ОткрытьФорму("Справочник.CRM_ШаблоныКлючевыхПоказателей.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

#КонецОбласти // УправлениеПоказателями

#Область Заявки

&НаКлиенте
Процедура CRM_ИспользоватьЗаявкиПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияИсточникиЗаявокНажатие(Элемент)
	ОткрытьФорму("Справочник.CRM_ИсточникиПолученияЛидов.ФормаСписка");
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРолиИсполнителей(Команда)
	ОткрытьФорму("Справочник.РолиИсполнителей.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура СправкаЗаявки(Команда)
	ПерейтиПоНавигационнойСсылке(CRM_ОбщегоНазначенияСервер.ПолучитьСсылкуНаРазделСправки("ЗагурзкаИОбработкаЗаявок"));
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПравилаОбработкиОбращений(Команда)
	ОткрытьФорму("Справочник.CRM_ПравилаОбработкиОбращений.ФормаСписка");
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьУсловияОбработкиОбращений(Команда)
	ОткрытьФорму("Справочник.CRM_УсловияОбработкиОбращений.ФормаСписка");
КонецПроцедуры

#КонецОбласти // Заявки

#Область Карточка

&НаКлиенте
Процедура CRM_ИспользоватьТипыУслугПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

#КонецОбласти // Карточка

#Область ПраваДоступа

&НаКлиенте
Процедура CRM_ОграничитьВыводКлиентскойБазыПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура CRM_ИспользоватьОграниченияДоступаПриИзменении(Элемент)
	ПолучитьДоступностьУровней();
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаСервере
Процедура ПолучитьДоступностьУровней()
	УровниДоступны = НаборКонстант["CRM_ИспользоватьОграниченияДоступа"];
	Элементы.ГруппаНастройкиУправленияДоступом.Видимость = УровниДоступны;
КонецПроцедуры

&НаСервере
Процедура ПолучитьДоступностьПоказателей()
	ПоказателиДоступны = НаборКонстант["CRM_ИспользоватьПоказатели"];
	Элементы.ГруппапоказательПравоЛево.Видимость = ПоказателиДоступны;
	Если НЕ ПоказателиДоступны Тогда
		КонстантаМенеджер = Константы["CRM_ИспользоватьМониторПоказателей"];
		КонстантаМенеджер.Установить(Ложь);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура CRM_ИспользоватьПоказателиПриИзменении(Элемент)
	
	CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики(
		"CRM_Статистика.Показатели.МониторПоказателей.КоличествоНажатийВключенияКнопкиИспользоватьМониторПоказателейВРазделеКлиентыИПродажи");
	
	ПолучитьДоступностьПоказателей();
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	Прочитать();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОписаниеЖурналВстреч(Команда)
	ПерейтиПоНавигационнойСсылке(CRM_ОбщегоНазначенияСервер.ПолучитьСсылкуНаРазделСправки("АРМ_ЖурналВстреч"));
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьШаблоныЧекЛистов(Команда)
	ОткрытьФорму("Справочник.CRM_ШаблоныЧекЛистаВзаимодействий.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

#КонецОбласти // ПраваДоступа

#Область ПланированиеВстреч

&НаКлиенте
Процедура CRM_ИспользоватьПланированиеВстречПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура CRM_КлючAPIКартПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура CRM_ЗапретитьВводНовогоДоговораДляНовогоКлиентаПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

#КонецОбласти // ПланированиеВстреч

#КонецОбласти // СлужебныеПроцедурыИФункции
