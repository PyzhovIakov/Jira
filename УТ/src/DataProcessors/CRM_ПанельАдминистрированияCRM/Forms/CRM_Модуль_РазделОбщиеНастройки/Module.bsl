
&НаКлиенте
Перем ОбновитьИнтерфейс;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтоБазоваяВерсия = СтандартныеПодсистемыСервер.ЭтоБазоваяВерсияКонфигурации();
	ЭтоРазделенныйРежимРаботы = Константы.ИспользоватьРазделениеПоОбластямДанных.Получить();
	// +CRM_Модуль
	//Элементы.ФункциональнаяОпцияУчетПоНесколькимОрганизациям.Видимость = Не ЭтоБазоваяВерсия;
	// -CRM_Модуль
	
	Если CRM_ЛицензированиеЭкспортныеМетоды.ВариантПоставкиСтартИлиСтандарт() Тогда
		Элементы.CRM_ИспользоватьУчетРабочегоВремени.РасширеннаяПодсказка.Заголовок =
			Элементы.CRM_ИспользоватьУчетРабочегоВремени.РасширеннаяПодсказка.Заголовок + Символы.ПС
			+ НСтр("ru='Доступно только для ""ПРОФ"" и ""КОРП"" версий конфигурации!';
				   |en='Is only available for ""PROF"" and ""CORP"" configurations versions!'");
	КонецЕсли;
	
	ЭтоКорпВерсия = CRM_ЛицензированиеСервер.ВариантПоставкиКОРП();
	Если CRM_ОбщегоНазначенияПовтИсп.ЭтоУХ() Тогда
		Элементы.ГруппаПодсистемаУправленияПроектами.Видимость = Ложь;
	Иначе
		Элементы.CRM_ИспользоватьПодсистемуУправленияПроектами.Доступность = ЭтоКорпВерсия 
			И ПолучитьФункциональнуюОпцию("CRM_Модуль_ИспользоватьПроекты");
	КонецЕсли;
	Элементы.CRM_ИспользоватьДолжностныеПозиции.Доступность = ЭтоКорпВерсия;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	ОбновитьИнтерфейсПрограммы();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Клиент

&НаКлиенте
Процедура Подключаемый_ПриИзмененииРеквизита(Элемент, ОбновлятьИнтерфейс = Истина)
	
	КонстантаИмя = ПриИзмененииРеквизитаСервер(Элемент.Имя);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Если ОбновлятьИнтерфейс Тогда
		ОбновитьИнтерфейс = Истина;
		ПодключитьОбработчикОжидания("ОбновитьИнтерфейсПрограммы", 1, Истина);
	КонецЕсли;
	
	Если КонстантаИмя <> "" Тогда
		Оповестить("Запись_НаборКонстант", Новый Структура, КонстантаИмя);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнтерфейсПрограммы()
	
	Если ОбновитьИнтерфейс = Истина Тогда
		ОбновитьИнтерфейс = Ложь;
		ОбщегоНазначенияКлиент.ОбновитьИнтерфейсПрограммы();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Вызов сервера

&НаСервере
Функция ПриИзмененииРеквизитаСервер(ИмяЭлемента)
	
	РеквизитПутьКДанным = Элементы[ИмяЭлемента].ПутьКДанным;
	
	КонстантаИмя = СохранитьЗначениеРеквизита(РеквизитПутьКДанным);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Возврат КонстантаИмя;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Сервер

&НаСервере
Функция СохранитьЗначениеРеквизита(РеквизитПутьКДанным)
	
	// Определение имени константы.
	КонстантаИмя = "";
	Если НРег(Лев(РеквизитПутьКДанным, 14)) = НРег("НаборКонстант.") Тогда
		// Если путь к данным реквизита указан через "НаборКонстант".
		КонстантаИмя = Сред(РеквизитПутьКДанным, 15);
	Иначе
		// Определение имени и запись значения реквизита в соответствующей константе из "НаборКонстант".
		// Используется для тех реквизитов формы, которые связаны с константами напрямую (в отношении один-к-одному).
	КонецЕсли;
	
	// Сохранения значения константы.
	Если КонстантаИмя <> "" Тогда
		КонстантаМенеджер = Константы[КонстантаИмя];
		КонстантаЗначение = НаборКонстант[КонстантаИмя];
		
		Если КонстантаМенеджер.Получить() <> КонстантаЗначение Тогда
			КонстантаМенеджер.Установить(КонстантаЗначение);
		КонецЕсли;
	КонецЕсли;
	
	Возврат КонстантаИмя;
	
КонецФункции

&НаКлиенте
Процедура НастройкиРаботыСРечью(Команда)
	
	ПерейтиПоНавигационнойСсылке("e1cib/app/Обработка.CRM_ПанельАдминистрированияРаботыСРечью");
	
КонецПроцедуры

#КонецОбласти

#Область CRM_Настройки

&НаКлиенте
Процедура CRM_НачалоРабочегоДняПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура CRM_КонецРабочегоДняПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура CRM_НачалоОбедаПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура CRM_КонецОбедаПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура СправочникОрганизации(Команда)
	
	Если Модифицированность Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = 
			НСтр("ru='Данные еще не записаны! Переход к редактированию справочника ""Организации"" возможен только после записи данных!
			|;en='Data has not been written yet! Passage to editing of catalog ""Companies"" are possible only after data record!'");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли; 
	
	ПараметрОрганизация = Новый Структура("Ключ", ОсновнаяОрганизация);
	Форма = ПолучитьФорму("Справочник.Организации.ФормаОбъекта", ПараметрОрганизация);
	Форма.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура CRM_ОсновнойПроизводственныйКалендарьПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПроизводственныеКалендари(Команда)
	ОткрытьФорму("Справочник.ПроизводственныеКалендари.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВалюты(Команда)
	ОткрытьФорму("Справочник.Валюты.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДолжностныеПозиции(Команда)
	ОткрытьФорму("Справочник.CRM_ДолжностныеПозиции.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьШаблоныАвтотекста(Команда)
	ОткрытьФорму("Справочник.CRM_ШаблоныАвтотекста.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВнешниеБиблиотеки(Команда)
	
	ОткрытьФорму("Справочник.CRM_ВнешниеБиблиотеки.ФормаСписка", , ЭтотОбъект);
	
КонецПроцедуры // ОткрытьВнешниеБиблиотеки

#КонецОбласти // CRM_Настройки


