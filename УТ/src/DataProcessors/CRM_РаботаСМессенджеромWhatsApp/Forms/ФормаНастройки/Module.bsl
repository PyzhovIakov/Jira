
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияСвойств(Объект, Параметры);
	
	Параметры.Свойство("ПараметрыПрокси", ПараметрыПрокси);
	
	Если Не Параметры.Свойство("Токен") Тогда
		Объект.Провайдер = 1;
	КонецЕсли;
	
	Если Объект.Провайдер = 0 Тогда
		Элементы.ГруппаПровайдеры.ТекущаяСтраница = Элементы.ГруппаChatApi;
	ИначеЕсли Объект.Провайдер = 1 Тогда
		Элементы.ГруппаПровайдеры.ТекущаяСтраница = Элементы.ГрппаGreenApi;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	Если ПроверитьЗаполнение() Тогда
		ПараметрыДоступа = Новый Структура;
		ПараметрыДоступа.Вставить("Провайдер", Объект.Провайдер);
		ПараметрыДоступа.Вставить("Токен", Объект.Токен);
		ПараметрыДоступа.Вставить("ApiURL", Объект.ApiURL);
		ПараметрыДоступа.Вставить("Сервер", Объект.Сервер);
		ПараметрыДоступа.Вставить("Ресурс", Объект.Ресурс);
		ПараметрыДоступа.Вставить("АдресWebhook", Объект.АдресWebhook);
		ПараметрыДоступа.Вставить("ИспользоватьWebhook", ЗначениеЗаполнено(Объект.АдресWebhook));

		Если Объект.Провайдер = 1 И Не ЗначениеЗаполнено(Объект.АдресWebhook) Тогда
			УстановитьНастройкиGreen();
		КонецЕсли;
		Закрыть(ПараметрыДоступа);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаСправка(Команда)

	ПерейтиПоНавигационнойСсылке(CRM_ОбщегоНазначенияСервер.ПолучитьСсылкуНаРазделСправки("WhatsApp"));

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПодключение(Команда)
	Попытка
		Если ЗначениеЗаполнено(Объект.Токен) И ЗначениеЗаполнено(Объект.ApiURL) Тогда
			ПроверитьПодключениеСервер();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("en='Connection was successful.';
				|ru='Подключение прошло успешно.'"));
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Введите регистрационные данные'") 
				+ " " + ?(Объект.Провайдер = 0, "chat-api.com",
				 "green-api.com"));
		КонецЕсли;
	Исключение
		Инфо = ИнформацияОбОшибке();
		Описание = ?(Инфо.Причина = Неопределено, Инфо.Описание, Инфо.Причина.Описание);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Описание);
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьQRКод(Команда)
	Если ЗначениеЗаполнено(Объект.Токен) И ЗначениеЗаполнено(Объект.ApiURL) Тогда
		КомандаПолучитьQRКод();
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Введите регистрационные данные'") 
			+ " " + ?(Объект.Провайдер = 0, "chat-api.com",
			 "green-api.com"));
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ApiURLПриИзменении(Элемент)
	Объект.ApiURL = СокрЛП(Объект.ApiURL);
	РазобратьApiURL(Объект.ApiURL);
КонецПроцедуры

&НаКлиенте
Процедура ТокенПриИзменении(Элемент)
	Объект.Токен = СокрЛП(Объект.Токен);
КонецПроцедуры

&НаКлиенте
Процедура ПровайдерПриИзменении(Элемент)
	ПровайдерПриИзмененииСервер();
КонецПроцедуры

&НаСервере
Процедура ПровайдерПриИзмененииСервер()
	Объект.Токен = "";
	Объект.ApiURL = "";
	Объект.Сервер = "";
	Объект.Ресурс = "";
	Если Объект.Провайдер = 0 Тогда
		Элементы.ГруппаПровайдеры.ТекущаяСтраница = Элементы.ГруппаChatApi;
		Если ЗначениеЗаполнено(Объект.Токен) Тогда
			ДанныеАккаунта = НСтр("ru = 'Введите данные, полученные на сайте my.1msg.io'");
		КонецЕсли;
	ИначеЕсли Объект.Провайдер = 1 Тогда
		Элементы.ГруппаПровайдеры.ТекущаяСтраница = Элементы.ГрппаGreenApi;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПроверитьПодключениеСервер()
	ПараметрыПроверки = Новый Структура("Провайдер, Токен, ApiURL, Сервер, Ресурс");
	ЗаполнитьЗначенияСвойств(ПараметрыПроверки, Объект);
	Обработки.CRM_РаботаСМессенджеромWhatsApp.ПроверитьПодключение(ПараметрыПроверки, ПараметрыПрокси);
КонецПроцедуры

Процедура РазобратьApiURL(ApiURL)
	
	Позиция = СтрНайти(ApiURL, "/", , , 3);
	Объект.Сервер = СтрЗаменить(Лев(ApiURL, Позиция - 1), "https://", "");
	Объект.Ресурс = Сред(ApiURL, Позиция);
	Если Прав(Объект.Ресурс, 1) <> "/" Тогда
		Объект.Ресурс = Объект.Ресурс + "/";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура КомандаПолучитьQRКод()
	
	ПараметрыПроверки = Новый Структура("Провайдер, Токен, ApiURL, Сервер, Ресурс");
	ЗаполнитьЗначенияСвойств(ПараметрыПроверки, Объект);
	Ответ = Обработки.CRM_РаботаСМессенджеромWhatsApp.ПолучитьQRКод(ПараметрыПроверки, ПараметрыПрокси);
	СтатусQRКода = Ответ.type;
	Если Ответ.type = "qrCode" Тогда
		QRКод = Обработки.CRM_РаботаСМессенджеромWhatsApp.ПолучитьМакет("QRМакет").ПолучитьТекст();
		QRКод = СтрЗаменить(QRКод, "%QR_DATA%", Ответ.message);
		Элементы.QRКод.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьНастройкиGreen()
	
	ПараметрыПроверки = Новый Структура("Провайдер, Токен, ApiURL, АдресWebhook");
	ЗаполнитьЗначенияСвойств(ПараметрыПроверки, Объект);
	ПараметрыПроверки.Вставить("ПараметрыПрокси", ПараметрыПрокси);
	Ответ = Обработки.CRM_РаботаСМессенджеромWhatsApp.УстановитьWebhookGreen(Неопределено, ПараметрыПроверки);
	
КонецПроцедуры

#КонецОбласти
