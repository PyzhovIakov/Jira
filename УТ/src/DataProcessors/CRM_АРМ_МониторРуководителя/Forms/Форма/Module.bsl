////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции модуля формы "Обработки.CRM_МониторРуководителя.Форма".
//
////////////////////////////////////////////////////////////////////////////////

#Область ОписаниеПеременных

&НаКлиенте
Перем ДокументБраузера;

&НаКлиенте
Перем ОкноБраузера;

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
	// +CRM_РаботаСВнешнимиБиблиотеками
	CRM_РаботаСВнешнимиБиблиотекамиВызовСервера.ПриСозданииНаСервере(ЭтотОбъект);
	// -CRM_РаботаСВнешнимиБиблиотеками
	
	// +Виджеты
	CRM_РаботаСВиджетамиСервер.ПриСозданииНаСервере(ЭтотОбъект, "МониторРуководителя");
	// -Виджеты
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// +CRM_РаботаСВнешнимиБиблиотеками
	ПриПолученииБиблиотекОповещение = Новый ОписаниеОповещения(
		"Подключаемый_ПриПолученииВнешнейБиблиотекиВиджета", ЭтотОбъект);
	
	CRM_РаботаСВнешнимиБиблиотекамиКлиент.ПриОткрытииФормы(ЭтотОбъект, ПриПолученииБиблиотекОповещение);
	// -CRM_РаботаСВнешнимиБиблиотеками
	
	// +АвтообновлениеВиджетов
	ПодключитьОбработчикОжидания("Подключаемый_ОбработчикАвтообновленияВиджетов", 60);
	// -АвтообновлениеВиджетов
	
КонецПроцедуры // ПриОткрытии()

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если ПризнакИзмененияСетки Тогда
		Если ОкноБраузера = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		МассивРасположенийВиджетов = Новый Массив;
		
		Для Каждого ТекущийВиджетСохранения Из ОкноБраузера.getWidgets() Цикл
			ЗаписьСохраненияВиджета = Новый Структура;
			
			ЗаписьСохраненияВиджета.Вставить("ИндексВертикальный",		ТекущийВиджетСохранения["x"]);
			ЗаписьСохраненияВиджета.Вставить("ИндексГоризонтальный",	ТекущийВиджетСохранения["y"]);
			ЗаписьСохраненияВиджета.Вставить("ИдентификаторВиджета",	ТекущийВиджетСохранения["_id"]);
			
			МассивРасположенийВиджетов.Добавить(ЗаписьСохраненияВиджета);
		КонецЦикла;
		
		СохранитьСеткуВиджетовНаСервере(МассивРасположенийВиджетов);
	КонецЕсли;
	
КонецПроцедуры // ПриЗакрытии()

&НаКлиенте
Процедура Подключаемый_ПриПолученииВнешнейБиблиотекиВиджета(ИсточникиВнешнихБиблиотек, ДополнительныеПараметры) Экспорт
	
	ИнициализироватьHTMLСетки();
	
КонецПроцедуры // Подключаемый_ПриПолученииВнешнейБиблиотекиВиджета()

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СеткаВиджетовHTMLДокументСформирован(Элемент)
	
	ДокументБраузера = Элементы.СеткаВиджетовHTML.Документ;
	ОкноБраузера = ДокументБраузера.defaultView;
	
	Для Каждого ТекущийВариантВиджета Из ЭтотОбъект.ВариантыВиджетовФормы Цикл
		РазмерыВариантаВиджета = ПолучитьСтандартныеРазмерыВиджета(ТекущийВариантВиджета);
		
		ОкноБраузера.createWidget(
			ТекущийВариантВиджета.ИмяДанных,
			ТекущийВариантВиджета.ИндексВертикальный,
			ТекущийВариантВиджета.ИндексГоризонтальный,
			РазмерыВариантаВиджета.Ширина,
			РазмерыВариантаВиджета.Высота,
			ЭтотОбъект[ТекущийВариантВиджета.ИмяДанных]);
	КонецЦикла;
	
КонецПроцедуры // СеткаВиджетовHTMLДокументСформирован()

&НаКлиенте
Процедура СеткаВиджетовHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ОкноБраузера = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// --------------
	
	ОбрабатываемоеСобытие = ОкноБраузера.getEvent();
	
	Если ОбрабатываемоеСобытие = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТипСобытия = ОбрабатываемоеСобытие["type"];
	
	// --------------
	// События сетки.
	
	Если ТипСобытия = "GRID_LAYOUT_UPDATE" Тогда
		ПризнакИзмененияСетки = Истина;
	КонецЕсли;
	
	// --------------
	// События виджета.
	
	Если ЗначениеЗаполнено(ОбрабатываемоеСобытие["id"]) Тогда
		
		ДанныеНажатогоВиджета = CRM_РаботаСВиджетамиКлиентСервер.ПолучитьДанныеВиджета(
			ЭтотОбъект, ОбрабатываемоеСобытие["id"]);
		
		Если ДанныеНажатогоВиджета <> Неопределено Тогда
			
			Если ТипСобытия = "WIDGET_BUTTON_UPDATE" Тогда
				
				ОбновитьВиджетНаСервере(ДанныеНажатогоВиджета.ПолучитьИдентификатор());
				
				ОкноБраузера.updateWidgetByID(
					ДанныеНажатогоВиджета.ИмяДанных,
					ЭтотОбъект[ДанныеНажатогоВиджета.ИмяДанных]);
				
			ИначеЕсли ТипСобытия = "WIDGET_BUTTON_SETTINGS" Тогда
				
				ОписаниеОповещенияОИзмененииНастроек = Новый ОписаниеОповещения(
					"ПриИзмененииНастроекВариантаВиджета", ЭтотОбъект);
				
				CRM_РаботаСВиджетамиКлиент.ОткрытьНастройкиВиджета(
					ЭтотОбъект, ДанныеНажатогоВиджета, ОписаниеОповещенияОИзмененииНастроек);
				
			ИначеЕсли ТипСобытия = "WIDGET_BUTTON_REMOVE" Тогда
				
				ОкноБраузера.removeWidgetByID(ДанныеНажатогоВиджета.ИмяДанных);
				
				УдалитьВиджетНаСервере(ДанныеНажатогоВиджета.ПолучитьИдентификатор());
				
				ПризнакИзмененияСетки = Истина;
				
			ИначеЕсли ТипСобытия = "WIDGET_BUTTON_TRANSCRIBE" Тогда
				
				CRM_РаботаСВиджетамиКлиент.ОткрытьРасшифровкуВиджета(
					ЭтотОбъект, ДанныеНажатогоВиджета);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ОкноБраузера.API_EVENT = Неопределено;
	
КонецПроцедуры // СеткаВиджетовHTMLПриНажатии()

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьВиджет(Команда)
	
	CRM_РаботаСВиджетамиКлиент.ОткрытьВыборВариантаВиджета(ЭтотОбъект);
	
КонецПроцедуры // ДобавитьВиджет()

&НаКлиенте
Процедура ДобавитьВиджетЗавершение(ВыбранныеВариантВиджета, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеВариантВиджета = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИдентификаторСтрокиДанных = ДобавитьВиджетНаСервере(ВыбранныеВариантВиджета);
	
	ДанныеВиджета = ЭтотОбъект.ВариантыВиджетовФормы.НайтиПоИдентификатору(ИдентификаторСтрокиДанных);
	
	РазмерыВариантаВиджета = ПолучитьСтандартныеРазмерыВиджета(ДанныеВиджета);
	
	ОкноБраузера.appendWidgetToGrid(
		ДанныеВиджета.ИмяДанных,
		РазмерыВариантаВиджета.Ширина,
		РазмерыВариантаВиджета.Высота,
		ЭтотОбъект[ДанныеВиджета.ИмяДанных]);
	
	ПризнакИзмененияСетки = Истина;
	
КонецПроцедуры // ДобавитьВиджетЗавершение()

&НаКлиенте
Процедура ОбновитьВсеВиджеты(Команда)
	
	ОбновитьВсеВиджетыНаСервере();
	
	Для Каждого ТекущийВиджетОбновления Из ЭтотОбъект.ВариантыВиджетовФормы Цикл
		
		Если ТекущийВиджетОбновления.Скрыт Тогда
			Продолжить;
		КонецЕсли;
		
		ОкноБраузера.updateWidgetByID(
			ТекущийВиджетОбновления.ИмяДанных,
			ЭтотОбъект[ТекущийВиджетОбновления.ИмяДанных]);
		
	КонецЦикла;
	
КонецПроцедуры // ОбновитьВсеВиджеты()

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

#Область Виджеты

&НаСервере
Функция ДобавитьВиджетНаСервере(ВариантВиджета)
	
	Возврат CRM_РаботаСВиджетамиСервер.ДобавитьВиджет(ЭтотОбъект, ВариантВиджета);
	
КонецФункции // ДобавитьВиджетНаСервере()

&НаСервере
Функция ОбработчикАвтообновленияВиджетов()
	
	Возврат CRM_РаботаСВиджетамиСервер.ОбработатьАвтообновлениеВиджетов(ЭтотОбъект);
	
КонецФункции // ОбработчикАвтообновленияВиджетов()

&НаСервере
Процедура ОбновитьВиджетНаСервере(ИдентификаторСтрокиДанных)
	
	CRM_РаботаСВиджетамиСервер.ОбновитьВиджет(ЭтотОбъект, ИдентификаторСтрокиДанных);
	
КонецПроцедуры // ОбновитьВиджетНаСервере()

&НаСервере
Процедура УдалитьВиджетНаСервере(ИдентификаторСтрокиДанных)
	
	CRM_РаботаСВиджетамиСервер.УдалитьВиджет(ЭтотОбъект, ИдентификаторСтрокиДанных);
	
КонецПроцедуры // УдалитьВиджетНаСервере()

&НаКлиенте
Процедура Подключаемый_ОбработчикАвтообновленияВиджетов() Экспорт
	
	ОбновленныеВиджеты = ОбработчикАвтообновленияВиджетов();
	
	Для Каждого ТекущееИмяДанныхОбновленногоВиджета Из ОбновленныеВиджеты Цикл
		
		ОкноБраузера.updateWidgetByID(
			ТекущееИмяДанныхОбновленногоВиджета,
			ЭтотОбъект[ТекущееИмяДанныхОбновленногоВиджета]);
		
	КонецЦикла;
	
КонецПроцедуры //Подключаемый_ОбработчикАвтообновленияВиджетов()

&НаСервере
Процедура ОбновитьВсеВиджетыНаСервере()
	
	CRM_РаботаСВиджетамиСервер.ОбновитьВсеВиджеты(ЭтотОбъект);
	
КонецПроцедуры // ОбновитьВсеВиджетыНаСервере()

#КонецОбласти

&НаКлиенте
Функция ПолучитьСтандартныеРазмерыВиджета(ДанныеВиджета)
	
	Если ДанныеВиджета.ТипВиджета = ПредопределенноеЗначение("Перечисление.CRM_ТипыИсточниковДанныхВиджетов.КлючевойПоказатель") Тогда
		
		Возврат Новый Структура("Высота, Ширина", 1, 1);
		
	ИначеЕсли ДанныеВиджета.ТипВиджета = ПредопределенноеЗначение("Перечисление.CRM_ТипыИсточниковДанныхВиджетов.ВоронкаПродаж")
			Или ДанныеВиджета.ТипВиджета = ПредопределенноеЗначение("Перечисление.CRM_ТипыИсточниковДанныхВиджетов.ДебиторскаяЗадолженность") Тогда
		
		Возврат Новый Структура("Высота, Ширина", 2, 2);
		
	ИначеЕсли ДанныеВиджета.ТипВиджета = ПредопределенноеЗначение("Перечисление.CRM_ТипыИсточниковДанныхВиджетов.ДинамикаПродаж")
			Или ДанныеВиджета.ТипВиджета = ПредопределенноеЗначение("Перечисление.CRM_ТипыИсточниковДанныхВиджетов.ДинамикаСтатусовКлиентов")
			Или ДанныеВиджета.ТипВиджета = ПредопределенноеЗначение("Перечисление.CRM_ТипыИсточниковДанныхВиджетов.ТрудозатратыВремениПоВидамРабот") Тогда
		
		Возврат Новый Структура("Высота, Ширина", 2, 3);
		
	ИначеЕсли ДанныеВиджета.ТипВиджета = ПредопределенноеЗначение("Перечисление.CRM_ТипыИсточниковДанныхВиджетов.СтатистикаТелефонныхЗвонков") Тогда
		
		Возврат Новый Структура("Высота, Ширина", 2, 1);
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции // ПолучитьСтандартныеРазмерыВиджета()

&НаСервере
Процедура ИнициализироватьHTMLСетки()
	
	БлокИнтеграцииСкрипта = CRM_РаботаСВнешнимиБиблиотекамиВызовСервера.ПолучитьБлокИнтеграцииВнешнейБиблиотеки(
		Справочники.CRM_ВнешниеБиблиотеки.БиблиотекаОтображенияГрафиков, ЭтотОбъект.ФлагСовместимостиВнешнихБиблиотек);
	
	СкриптПостроенияДиаграммHTML = Справочники.CRM_Виджеты.ПолучитьМакет("HTML_Диаграммы").ПолучитьТекст();
	СкриптПостроенияДиаграммHTML = СтрЗаменить(
		СкриптПостроенияДиаграммHTML, "<CRM::CURRENT_CURRENCY>", Строка(Константы.ВалютаУправленческогоУчета.Получить()));
	
	СеткаВиджетовHTML = Обработки.CRM_АРМ_МониторРуководителя.ПолучитьМакет("HTML_СеткаВиджетов").ПолучитьТекст();
	СеткаВиджетовHTML = СтрЗаменить(СеткаВиджетовHTML, "<!-- {{CRM:PATH_TO_LIBRARY}} -->", БлокИнтеграцииСкрипта);
	СеткаВиджетовHTML = СтрЗаменить(СеткаВиджетовHTML, "<!-- {{CRM:PLOT_SCRIPT}} -->", СкриптПостроенияДиаграммHTML);
	
	CRM_РаботаСВнешнимиБиблиотекамиВызовСервера.ЗаменитьПутиВызоваБиблиотек(
		ЭтотОбъект.ИсточникиВнешнихБиблиотек, СеткаВиджетовHTML);
	
КонецПроцедуры // ИнициализироватьHTMLСетки()

&НаСервере
Процедура СохранитьСеткуВиджетовНаСервере(МассивРасположенийВиджетов)
	
	НаборЗаписейВиджетовСетки = РегистрыСведений.CRM_ПорядокВиджетов.СоздатьНаборЗаписей();
	НаборЗаписейВиджетовСетки.Отбор.ВариантРаботыВиджетов.Установить("МониторРуководителя");
	НаборЗаписейВиджетовСетки.Отбор.Пользователь.Установить(ТекущийПользователь);
	
	НаборЗаписейВиджетовСетки.Прочитать();
	НаборЗаписейВиджетовСетки.Очистить();
	
	Для Каждого ТекущееРасположениеВиджета Из МассивРасположенийВиджетов Цикл
		
		ДанныеВиджета = CRM_РаботаСВиджетамиКлиентСервер.ПолучитьДанныеВиджета(
			ЭтотОбъект, ТекущееРасположениеВиджета.ИдентификаторВиджета);
		
		Если ДанныеВиджета = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяЗаписьРазмещения = НаборЗаписейВиджетовСетки.Добавить();
		
		// Информация о варианте.
		НоваяЗаписьРазмещения.ВариантРаботыВиджетов	= "МониторРуководителя";
		НоваяЗаписьРазмещения.ВариантВиджета		= ДанныеВиджета.ВариантВиджета;
		НоваяЗаписьРазмещения.Пользователь			= ТекущийПользователь;
		
		// Положение варианта виджета.
		НоваяЗаписьРазмещения.ИндексВертикальный	= ТекущееРасположениеВиджета.ИндексВертикальный;
		НоваяЗаписьРазмещения.ИндексГоризонтальный	= ТекущееРасположениеВиджета.ИндексГоризонтальный;
		
	КонецЦикла;
	
	НаборЗаписейВиджетовСетки.Записать(Истина);
	
КонецПроцедуры // СохранитьСеткуВиджетовНаСервере()

&НаКлиенте
Процедура ПриИзмененииНастроекВариантаВиджета(ДанныеВиджета, ДополнительныеПараметры) Экспорт
	
	ОбновитьВиджетНаСервере(ДанныеВиджета.ПолучитьИдентификатор());
	
	ОкноБраузера.updateWidgetByID(
		ДанныеВиджета.ИмяДанных,
		ЭтотОбъект[ДанныеВиджета.ИмяДанных]);
	
КонецПроцедуры // ПриИзмененииНастроекВариантаВиджета()

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
