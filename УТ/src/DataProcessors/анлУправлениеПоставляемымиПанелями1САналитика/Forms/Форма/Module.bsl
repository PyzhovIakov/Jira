#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	АдресСервера = анлАналитика.АдресСервера(); 
	АдресСервераНаСервереАналитики = АдресСервера;
	ЗаполнитьСоставПоставляемыхПанелей();
	СерверСистемыАналитикиДоступен = анлАналитика.СерверСистемыАналитикиДоступен();

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	УправлениеФормой();
	
	Если СерверСистемыАналитикиДоступен Тогда
		ВыполнитьОбновлениеСтатусовПоставляемыхПанелей();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновленСоставПанелейВАналитике" Тогда
		
		Если СерверСистемыАналитикиДоступен Тогда
			ВыполнитьОбновлениеСтатусовПоставляемыхПанелей();
		КонецЕсли;
				
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура АдресСервераИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)

	УправлениеФормой(Текст);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоПанелей

&НаКлиенте
Процедура ДеревоПанелейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ДеревоПанелей.ТекущиеДанные;
	Если Поле.Имя = "ДеревоПанелейСтатусКартинка" Тогда
		
		ТекущиеДанные = Элементы.ДеревоПанелей.ТекущиеДанные;
		Если Не ТекущиеДанные = Неопределено 
			И СерверСистемыАналитикиДоступен
			И ЗначениеЗаполнено(ТекущиеДанные.ИмяМакета) Тогда
			
			МассивПанелей = Новый Массив;
			МассивПанелей.Добавить(ТекущиеДанные.ИмяМакета);
			
			ВыполнитьОбновлениеСтатусовПоставляемыхПанелей(МассивПанелей);
			
			Если ТекущиеДанные.ОтчетОСравнении = Истина Тогда
				ПоказатьОшибкиСтруктурыПоставляемойПанелиВПодключении(ТекущиеДанные.ИмяМакета);
			КонецЕсли;
			
		КонецЕсли;
	
	ИначеЕсли Поле.Имя = "ДеревоПанелейДействие" Тогда
		
		//Выполнить текущее действие
		Если Элементы.ДеревоПанелей.ТекущиеДанные <> Неопределено
			И СерверСистемыАналитикиДоступен
			И ЗначениеЗаполнено(ТекущиеДанные.ИмяМакета) Тогда
				МассивПанелей = Новый Массив;
				МассивПанелей.Добавить(ТекущиеДанные.ИмяМакета);
				анлПоставляемыеПанелиКлиент.ВыполнитьДействиеСПанелями(ТекущиеДанные.Действие, МассивПанелей);
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьАдрес(Команда)
	
	СерверСистемыАналитикиДоступен = УстановитьАдресСервераАналитики(АдресСервера);
	Если СерверСистемыАналитикиДоступен Тогда
		
		АдресСервераНаСервереАналитики = АдресСервера;
		ВыполнитьОбновлениеСтатусовПоставляемыхПанелей();
		
	Иначе
		ОповеститьОНедоступностиСервера();
	КонецЕсли;
		
	УправлениеФормой();
	ОбновитьИнтерфейс();

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтатусы(Команда)
	
	Если СерверАналитикиДоступен() Тогда
		
		СерверСистемыАналитикиДоступен = Истина;
		ВыполнитьОбновлениеСтатусовПоставляемыхПанелей();
		
		ОбновитьИнтерфейс();
		УправлениеФормой();
		
	Иначе
		ОповеститьОНедоступностиСервера();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьПоставляемуюПанель(Команда)
	
	Если СерверАналитикиДоступен() Тогда
		АдресХранения = ПакетПоставкиПанели();
		
		ПолноеИмяФайла = НСтр("ru = 'AnalyticsSystemSchema.zip'");
		Если ЭтоАдресВременногоХранилища(АдресХранения) Тогда
			ПараметрыДиалога = Новый ПараметрыДиалогаПолученияФайлов;
			ПараметрыДиалога.Заголовок = НСтр("ru = 'Выберите путь для сохранения файла'; en = 'Select the path to save the file'");
			ПараметрыДиалога.ВыборКаталога = Истина;
			
			НачатьПолучениеФайлаССервера(АдресХранения, ПолноеИмяФайла, ПараметрыДиалога);
		КонецЕсли
	Иначе
		ОповеститьОНедоступностиСервера();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УправлениеФормой(АдресСервераТекст = Неопределено)

	Если АдресСервераТекст = Неопределено Тогда
		АдресСервераТекст = АдресСервера;
	КонецЕсли;
	
	ДоступностьЭлементов = (АдресСервераТекст <> АдресСервераНаСервереАналитики);
	
	Элементы.УстановитьАдрес.Доступность = ДоступностьЭлементов;
	Элементы.ГруппаКоманднаяПанельМенеджераКоманды.Доступность = НЕ ДоступностьЭлементов;
	Элементы.ВыгрузитьПоставляемуюПанель.Доступность = НЕ ДоступностьЭлементов;
	Элементы.ОбновитьСтатусы.Доступность = НЕ ДоступностьЭлементов;	
	Элементы.ДеревоПанелейКонтекстноеМенюОбновитьСтатусы.Доступность = НЕ ДоступностьЭлементов;
	Элементы.ДеревоПанелейКонтекстноеМенюКоманды.Доступность = НЕ ДоступностьЭлементов;
	Элементы.ДеревоПанелейСтатусКартинка.Доступность = НЕ ДоступностьЭлементов;
	
	Элементы.ГруппаСистемаАналитикиНедоступна.Видимость = НЕ СерверСистемыАналитикиДоступен;

КонецПроцедуры

&НаКлиенте
Процедура ОповеститьОНедоступностиСервера()
	
	СообщениеОбОшибке = НСтр("ru = 'Сервер 1С:Аналитика не обнаружен.'");

	Если ЗначениеЗаполнено(АдресСервера) Тогда
		СообщениеОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Сервер 1С:Аналитика по адресу ""%1"" не обнаружен.'"), АдресСервера);
	КонецЕсли;
	
	ПоказатьОповещениеПользователя(НСтр("ru = 'Поставляемые панели 1С:Аналитика'"),,
		СообщениеОбОшибке,
		БиблиотекаКартинок.ДиалогВосклицание);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция УстановитьАдресСервераАналитики(АдресСервера)

	Возврат анлАналитика.УстановитьАдресСервера(АдресСервера);
	
КонецФункции

&НаСервереБезКонтекста
Функция СерверАналитикиДоступен()

	Возврат анлАналитика.СерверСистемыАналитикиДоступен();
	
КонецФункции

#Область ПоставляемыеПанели

&НаСервере
Процедура ЗаполнитьСоставПоставляемыхПанелей()

	ПоставляемыеПанелиКонфигурации = анлПоставляемыеПанели.ПоставляемыеПанелиКонфигурации();
	ЗначениеВРеквизитФормы(ПоставляемыеПанелиКонфигурации, "ПоставляемыеПанели");
	
	анлПоставляемыеПанели.ЗаполнитьДеревоПоставляемыхПанелей(
		ДеревоПанелей, РеквизитФормыВЗначение("ПоставляемыеПанели"));
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОшибкиСтруктурыПоставляемойПанелиНаСервере(Панель, Ошибки)
	
	анлПоставляемыеПанели.ОшибкиСтруктурыПоставляемойПанели(Панель, Ошибки);
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеСтатусовПанелей 

&НаКлиенте
Процедура ВыполнитьОбновлениеСтатусовПоставляемыхПанелей(МассивПанелей=Неопределено) Экспорт
	
	ДлительнаяОперация = ПолучитьСтатусыПоставляемыхПанелей(МассивПанелей);
	
	ДополнительныеПараметры = Новый Структура("МассивПанелей", МассивПанелей);
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ВыполнитьОбновлениеСтатусовПоставляемыхПанелейЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Выполняется актуализация статусов поставляемых паенелей 1С:Аналитика. Это может занять некоторое время.'");
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтатусыПоставляемыхПанелей(МассивПанелей = Неопределено)
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Актуализация статусов поставляемых панелей 1С:Аналитика (""%1"")'"), АдресСервера);
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, 
		"анлПоставляемыеПанели.СтатусыПоставляемыхПанелей", 
		РеквизитФормыВЗначение("ПоставляемыеПанели"),
		анлАналитика.ОбъектыАналитики(анлАналитика.ТипыКонтролируемыхОбъектовПанелиАналитики()),
		МассивПанелей);
	
Конецфункции

&НаКлиенте
Процедура ВыполнитьОбновлениеСтатусовПоставляемыхПанелейЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
	ИначеЕсли Результат.Статус = "Выполнено" Тогда
		
		ОбновитьСтатусыПоставляемыхПанелей(Результат.АдресРезультата);
		
		Если ДополнительныеПараметры.МассивПанелей <> Неопределено И
			ДополнительныеПараметры.МассивПанелей.Количество() = 1 Тогда
				ПоказатьОповещениеПользователя(НСтр("ru = 'Поставляемые панели 1С:Аналитика'"),,
					НСтр("ru = 'Обновление статуса поставляемой панели 1С:Аналитика завершено успешно.'"),
					БиблиотекаКартинок.ДиалогИнформация);
			Иначе
				ПоказатьОповещениеПользователя(НСтр("ru = 'Поставляемые панели 1С:Аналитика'"),,
					НСтр("ru = 'Обновление статусов поставляемых панелей 1С:Аналитика завершено успешно.'"),
					БиблиотекаКартинок.ДиалогИнформация);
			КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСтатусыПоставляемыхПанелей(АдресРезультата)

	ЗначениеВРеквизитФормы(ПолучитьИзВременногоХранилища(АдресРезультата), "ПоставляемыеПанели");	
	анлПоставляемыеПанели.ОбновитьСтатусыДереваПоставляемыхПанелей(
		ДеревоПанелей, РеквизитФормыВЗначение("ПоставляемыеПанели"));

КонецПроцедуры

// Показать ошибки структуры поставляемой панели в подключении.
// 
// Параметры:
//  Панель - Строка - наименование макета, содержащего данные поставляемой панели 1С:Аналитика
&НаКлиенте
Процедура ПоказатьОшибкиСтруктурыПоставляемойПанелиВПодключении(Панель)
	
	Ошибки = НеопределенО;
	ОшибкиСтруктурыПоставляемойПанелиНаСервере(Панель, Ошибки);

	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки);
	
КонецПроцедуры

#КонецОбласти

#Область РежимРазработчика

&НаСервере
Функция ПакетПоставкиПанели()

	ИмяВременногоКаталога = ПолучитьИмяВременногоФайла("");
	СоздатьКаталог(ИмяВременногоКаталога);
	ПутьКФайлу = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ИмяВременногоКаталога) + "AnalyticsSystemSchema";
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	ДвоичныеДанныеПакетаПОставки = анлАналитика.ДвоичныеДанныеПанелиПоставки(ТекущийПользователь);
	ДвоичныеДанныеПакетаПОставки.Записать(ПутьКФайлу + ".json");
	
	МаскаУпаковкиФайлов = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ИмяВременногоКаталога) + "*.json";
	ОбменДаннымиСервер.ЗапаковатьВZipФайл(ПутьКФайлу + ".zip", МаскаУпаковкиФайлов);
	
	ДвоичныеДанныеАрхиваПакета = Новый ДвоичныеДанные(ПутьКФайлу + ".zip");
	АдресВременногоХранилища = ПоместитьВоВременноеХранилище(ДвоичныеДанныеАрхиваПакета, УникальныйИдентификатор);
	УдалитьФайлы(ИмяВременногоКаталога);

	Возврат АдресВременногоХранилища;

КонецФункции

#КонецОбласти

#КонецОбласти
