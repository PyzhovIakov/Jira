
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("УчетнаяЗаписьМаркетплейса", УчетнаяЗапись);   
	УникальныйИдентификаторПользователя = Строка(ПользователиИнформационнойБазы.ТекущийПользователь().УникальныйИдентификатор);
	Если ЭтоАдресВременногоХранилища(УникальныйИдентификаторПользователя) Тогда
		ПараметрыФормы = ПолучитьИзВременногоХранилища(УникальныйИдентификаторПользователя);
		Если ПараметрыФормы <> Неопределено
			И  ПараметрыФормы.Свойство("БольшеНеЗадаватьВопросОВыделенныхСтроках") Тогда
			БольшеНеЗадаватьВопросОВыделенныхСтроках = ПараметрыФормы.БольшеНеЗадаватьВопросОВыделенныхСтроках;
		КонецЕсли;  
	КонецЕсли;
	 
	Если Не ЗначениеЗаполнено(УчетнаяЗапись) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ИдентификаторУчетнойЗаписи = СтрЗаменить(УчетнаяЗапись.УникальныйИдентификатор(), "-", "_");
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ЗагружаемыеТовары, "УчетнаяЗапись", УчетнаяЗапись, Истина);
	УстановитьФильтрЗагружаемыхТоваров();
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СтатусыПубликацииТоваровЯндексМаркет, "УчетнаяЗапись", УчетнаяЗапись, Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(УтверждениеАссортимента, "УчетнаяЗапись", УчетнаяЗапись, Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ИсправлениеОшибок, "УчетнаяЗапись", УчетнаяЗапись, Истина);
	
	ЗаполнитьИнформациюВПодсказках();
	ЗаполнитьДанныеПоУчетнойЗаписи();
	
	Результат = ПроверитьНаличиеДанныхИЗапускИмпортаКаталога(ДанныеУчетнойЗаписи);
	Элементы.ГруппаДлительноеОжиданиеЦены.ТолькоПросмотр = Результат.ЗаданиеАктивно;
	Элементы.ДекорацияИмпортТоварногоКаталога.Заголовок  = НаименованиеЗаданияИмпортаКаталога(Результат.ЗаданиеЗавершено); 
	
	Если Результат.ДанныеСуществуют Тогда
		ИмяАктивнойКнопки = "КнопкаПросмотрИРедактированиеАссортимента";
	Иначе
		ИмяАктивнойКнопки = "КнопкаИмпортТоварногоКаталога";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПриАктивацииГиперСсылкиНаПанели(ИмяАктивнойКнопки);
	
	Если Не ДанныеУчетнойЗаписи.ОбязательныеРеквизитыЗаполнены Тогда
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("УчетнаяЗаписьМаркетплейса", УчетнаяЗапись);
		
		ОткрытьФорму("Обработка.ПанельАдминистрированияПродажиЯндексМаркет.Форма.НастройкиОбменаДанными", 
			ПараметрыОткрытия, 
			, 
			ИдентификаторУчетнойЗаписи);
		
	Иначе
		ПодключитьОбработчикОжидания("ОбновитьТаблицуЦенНаКлиентеПодключаемый", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Обработка.ПодборТоваровПоОтбору.Форма.Форма"
			Или ИсточникВыбора.ИмяФормы = "Обработка.ПодборТоваровВДокументПродажи.Форма.Форма" Тогда
		ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение);
		Элементы.Ассортимент.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_СтатусыПубликацииТоваровЯндексМаркет" 
			Или ИмяСобытия = "ИнтеграцияСЯндексМаркетСервер.ОбновитьДанные"
			Или ИмяСобытия = "ЯндексМаркет_ИмпортТоварногоКаталога_Запись" Тогда
		Если ЗначениеЗаполнено(Параметр)
				И Параметр = УчетнаяЗапись Тогда
			Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаИмпортТоварногоКаталога Тогда
				Элементы.ЗагружаемыеТовары.Обновить();
			ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПросмотрИРедактированиеАссортимента Тогда
				Элементы.Ассортимент.Обновить();
			ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаУтверждениеРекомендаций Тогда
				Элементы.УтверждениеАссортимента.Обновить();
			ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаИсправлениеОшибок Тогда
				Элементы.ИсправлениеОшибок.Обновить();
			КонецЕсли; 
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "ЯндексМаркет_НастройкиОбменаДанными" Тогда
		Если ЗначениеЗаполнено(Параметр)
				И Параметр = УчетнаяЗапись Тогда
			ЗаполнитьДанныеПоУчетнойЗаписи();
			ПриАктивацииГиперСсылкиНаПанели(ИмяАктивнойКнопки);
			ОбновитьТаблицуЦенНаКлиенте();
			
			Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаИмпортТоварногоКаталога Тогда
				Элементы.ЗагружаемыеТовары.Обновить();
			ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПросмотрИРедактированиеАссортимента Тогда
				Элементы.Ассортимент.Обновить();
			ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаУтверждениеРекомендаций Тогда
				Элементы.УтверждениеАссортимента.Обновить();
			ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаИсправлениеОшибок Тогда
				Элементы.ИсправлениеОшибок.Обновить();
			КонецЕсли; 
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "Запись_НаборКонстант" 
				И Источник = "ИспользоватьНоменклатуруПартнеров" Тогда
		ПриАктивацииГиперСсылкиНаПанели(ИмяАктивнойКнопки);
		
	ИначеЕсли ИмяСобытия = "ЯндексМаркет_ИмпортТоварногоКаталога_Начало"
				И Источник = ДанныеУчетнойЗаписи.ИдентификаторКабинета Тогда
		Элементы.ГруппаДлительноеОжиданиеИмпорт.ТолькоПросмотр = Истина;
		ПриАктивацииГиперСсылкиНаПанели(ИмяАктивнойКнопки);
		
	ИначеЕсли ИмяСобытия = "ЯндексМаркет_ИмпортТоварногоКаталога_Окончание"
				И Источник = ДанныеУчетнойЗаписи.ИдентификаторКабинета Тогда
		Элементы.ГруппаДлительноеОжиданиеИмпорт.ТолькоПросмотр = Ложь;
		Элементы.ДекорацияИмпортТоварногоКаталога.Заголовок = НаименованиеЗаданияИмпортаКаталога(Параметр);
		Элементы.ЗагружаемыеТовары.Обновить();
		ПриАктивацииГиперСсылкиНаПанели(ИмяАктивнойКнопки);
		
	ИначеЕсли ИмяСобытия = "ЯндексМаркет_ИмпортТоварногоКаталога_СопоставлениеНоменклатуры"
				И Источник = ДанныеУчетнойЗаписи.ИдентификаторКабинета
				И Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаИмпортТоварногоКаталога Тогда
		Элементы.ЗагружаемыеТовары.Обновить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПереключательНовыеИзмененныеПриИзменении(Элемент)
	
	УстановитьФильтрЗагружаемыхТоваров();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыАссортимент

&НаКлиенте
Процедура АссортиментВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
		
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле.Имя = "АссортиментЕстьИдентификаторПлощадки" Тогда
		СтандартнаяОбработка = Ложь;
		
		Если ТекущиеДанные.ЕстьИдентификаторПлощадки Тогда
			ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку("https://pokupki.market.yandex.ru/product/" + СокрЛП(СтрЗаменить(ТекущиеДанные.ИдентификаторТовараПлощадки, Символ(160), "")));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АссортиментПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Не Копирование Тогда
		Отказ = Истина;
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("УчетнаяЗапись", УчетнаяЗапись);

		ОткрытьФорму("РегистрСведений.СтатусыПубликацииТоваровЯндексМаркет.Форма.ФормаЗаписи", 
			ПараметрыОткрытия,
			ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУтверждениеАссортимента

&НаКлиенте
Процедура УтверждениеАссортиментаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле.Имя = "УтверждениеАссортиментаВыбран" Тогда
		СтандартнаяОбработка = Ложь;
		
		ЗаписатьИзменениеФлагаВыбран(ВыбраннаяСтрока);
		Элементы.УтверждениеАссортимента.Обновить();
		
	ИначеЕсли Поле.Имя = "УтверждениеАссортиментаЕстьИдентификаторПлощадки" Тогда
		СтандартнаяОбработка = Ложь;
		
		Если ТекущиеДанные.ЕстьИдентификаторПлощадки Тогда
			ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку("https://pokupki.market.yandex.ru/product/" + СокрЛП(СтрЗаменить(ТекущиеДанные.ИдентификаторТовараПлощадки, Символ(160), "")));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УтверждениеАссортиментаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Не Копирование Тогда
		Отказ = Истина;
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("УчетнаяЗапись", УчетнаяЗапись);

		ОткрытьФорму("РегистрСведений.СтатусыПубликацииТоваровЯндексМаркет.Форма.ФормаЗаписи", 
			ПараметрыОткрытия,
			ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыИсправлениеОшибок

&НаКлиенте
Процедура ИсправлениеОшибокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле.Имя = "ИсправлениеОшибокВыбран" Тогда
		СтандартнаяОбработка = Ложь;
		
		ЗаписатьИзменениеФлагаВыбран(ВыбраннаяСтрока);
		Элементы.ИсправлениеОшибок.Обновить();
		
	ИначеЕсли Поле.Имя = "ИсправлениеОшибокЕстьИдентификаторПлощадки" Тогда
		СтандартнаяОбработка = Ложь;
		
		Если ТекущиеДанные.ЕстьИдентификаторПлощадки Тогда
			ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку("https://pokupki.market.yandex.ru/product/" + СокрЛП(СтрЗаменить(ТекущиеДанные.ИдентификаторТовараПлощадки, Символ(160), "")));
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИсправлениеОшибокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Не Копирование Тогда
		Отказ = Истина;
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("УчетнаяЗапись", УчетнаяЗапись);

		ОткрытьФорму("РегистрСведений.СтатусыПубликацииТоваровЯндексМаркет.Форма.ФормаЗаписи", 
			ПараметрыОткрытия,
			ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы    

&НаКлиенте
Процедура ИмпортТоварногоКаталога(Команда)
	
	ПриАктивацииГиперСсылкиНаПанели("КнопкаИмпортТоварногоКаталога");
	Элементы.ЗагружаемыеТовары.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПросмотрИРедактированиеАссортимента(Команда)
	
	ПриАктивацииГиперСсылкиНаПанели("КнопкаПросмотрИРедактированиеАссортимента");
	Элементы.Ассортимент.Обновить();

КонецПроцедуры

&НаКлиенте
Процедура УтверждениеРекомендаций(Команда)
	
	ПриАктивацииГиперСсылкиНаПанели("КнопкаУтверждениеРекомендаций");
	Элементы.УтверждениеАссортимента.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсправлениеОшибок(Команда)
	
	ПриАктивацииГиперСсылкиНаПанели("КнопкаИсправлениеОшибок");
	Элементы.ИсправлениеОшибок.Обновить();

КонецПроцедуры

&НаКлиенте
Процедура ПросмотрАктуальныхЦен(Команда)
	
	ПриАктивацииГиперСсылкиНаПанели("КнопкаПросмотрАктуальныхЦен");
	Элементы.АктуальныеЦены.Обновить(); 
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуНастроек(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("УчетнаяЗаписьМаркетплейса", УчетнаяЗапись);
	
	ОткрытьФорму("Обработка.ПанельАдминистрированияПродажиЯндексМаркет.Форма.НастройкиОбменаДанными", 
		ПараметрыОткрытия, 
		, 
		ИдентификаторУчетнойЗаписи);
	
КонецПроцедуры   

&НаКлиенте
Процедура ПоказатьПодсказку(Команда)
	
	ИмяЭлементаПодсказки = СтрЗаменить(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя, "Группа", "Подсказка");
	ИмяЭлементаОтступ    = СтрЗаменить(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя, "Группа", "ДекорацияОтступ");
	ИмяКнопкиСкрыть      = СтрЗаменить(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя, "Группа", "СкрытьПодсказку"); 
	
	Элементы[ИмяЭлементаПодсказки].Видимость = Истина;
	Элементы[ИмяЭлементаОтступ].Видимость    = Истина;
	Элементы[ИмяКнопкиСкрыть].Видимость      = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СкрытьПодсказку(Команда)
	
	ИмяЭлементаПодсказки = СтрЗаменить(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя, "Группа", "Подсказка");
	ИмяЭлементаОтступ    = СтрЗаменить(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя, "Группа", "ДекорацияОтступ");
	ИмяКнопкиСкрыть      = СтрЗаменить(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя, "Группа", "СкрытьПодсказку"); 
	
	Элементы[ИмяЭлементаПодсказки].Видимость = Ложь;
	Элементы[ИмяЭлементаОтступ].Видимость    = Ложь;
	Элементы[ИмяКнопкиСкрыть].Видимость      = Ложь;
	
КонецПроцедуры

#Область ОбработчикиКомандТаблицыФормыЗагружаемыеТовары 

&НаКлиенте
Процедура ПолучитьТоварыИзСервиса(Команда)
	
	ОчиститьСообщения();
	
	ДлительнаяОперация    = ПолучитьТоварыИзСервисаНаСервере();
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ПолучитьТоварыИзСервисаЗавершениеФоновогоЗадания", ЭтотОбъект);
	
	Если ДлительнаяОперация.Статус = "Выполнено"
			Или ДлительнаяОперация.Статус = "Отменено" Тогда
		ВыполнитьОбработкуОповещения(ОповещениеОЗавершении, ДлительнаяОперация);
		
	Иначе
		Элементы.ГруппаДлительноеОжиданиеИмпорт.ТолькоПросмотр = Истина;
		Оповестить("ЯндексМаркет_ИмпортТоварногоКаталога_Начало",, ДанныеУчетнойЗаписи.ИдентификаторКабинета);
		
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
		ПараметрыОжидания.ОтменятьПриЗакрытииФормыВладельца = Ложь;
		
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СопоставитьДанные(Команда)
	
	Ссылки = Новый Массив;
	Для Каждого СтрокаСписка Из Элементы.ЗагружаемыеТовары.ВыделенныеСтроки Цикл
		ДанныеСтроки = Элементы.ЗагружаемыеТовары.ДанныеСтроки(СтрокаСписка);
		Ссылки.Добавить(ДанныеСтроки.НоменклатураПартнера);
	КонецЦикла;
	
	НоменклатураДляСопоставления = НоменклатураКонтрагентовПоСсылкам(Ссылки);
	
	Если Не ЗначениеЗаполнено(НоменклатураДляСопоставления) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Сопоставление номенклатуры не требуется.'"));
		Возврат;
	КонецЕсли;
	
	Настройки = Новый Структура;
	Настройки.Вставить("РежимОткрытияОкна", РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Настройки.Вставить("ВладелецФормы",     ЭтотОбъект);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьСопоставлениеНоменклатуры", ЭтотОбъект);
	
	СопоставлениеНоменклатурыКонтрагентовКлиент.ОткрытьСопоставлениеНоменклатуры(НоменклатураДляСопоставления, 
		Настройки, 
		ОписаниеОповещения);
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьДанные(Команда)
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ЗаписатьЗагруженныеДанныеЗавершение", ЭтотОбъект);
	ПоказатьВопрос(ОповещениеОЗавершении, 
		НСтр("ru = 'Несопоставленные позиции товарного каталога будут пропущены из обработки. Продолжить запись данных?'"), 
		РежимДиалогаВопрос.ДаНет, 
		, 
		КодВозвратаДиалога.Нет, 
		НСтр("ru = 'Запись данных'"), 
		КодВозвратаДиалога.Нет);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандТаблицыФормыАссортимент

&НаКлиенте
Процедура ОткрытьПодбор(Команда)

	ОчиститьСообщения();
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = Ложь;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = Ложь;

	Организация = ДанныеУчетнойЗаписи.Организация;
	ВалютаРУ    = ЗначениеНастроекКлиентСерверПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Организация);   
	
	МассивТиповНоменклатуры = Новый Массив;
	МассивТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Товар"));

	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Организация",                             Организация);
	ПараметрыОткрытия.Вставить("ЦенаВключаетНДС",                         Истина);
	ПараметрыОткрытия.Вставить("ВозвращатьМногооборотнуюТару",            Ложь);
	ПараметрыОткрытия.Вставить("ОтборПоТипуНоменклатуры",                 Новый ФиксированныйМассив(МассивТиповНоменклатуры));
	ПараметрыОткрытия.Вставить("СкрыватьРучныеСкидки",                    Истина);
	ПараметрыОткрытия.Вставить("СкрыватьКнопкуЗапрашиватьКоличество",     Истина);
	ПараметрыОткрытия.Вставить("ОстаткиПоВсемСкладам",                    Истина);
	ПараметрыОткрытия.Вставить("ИспользоватьДатыОтгрузки",                Ложь);
	ПараметрыОткрытия.Вставить("Валюта",                                  ВалютаРУ);
	ПараметрыОткрытия.Вставить("Заголовок",                               НСтр("ru = 'Публикация товаров на Яндекс Маркет'"));
	ПараметрыОткрытия.Вставить("ЗаголовокКнопкиПеренести",                НСтр("ru = 'Перенести для публикации'"));
	ПараметрыОткрытия.Вставить("Дата",                                    ОбщегоНазначенияКлиент.ДатаСеанса());
	ПараметрыОткрытия.Вставить("Документ",                                ПредопределенноеЗначение("Документ.УстановкаЦенНоменклатуры.ПустаяСсылка"));
	ПараметрыОткрытия.Вставить("ПараметрыУказанияСерий",                  ПараметрыУказанияСерий);
	ПараметрыОткрытия.Вставить("ПодборВариантовОбеспечения",              Ложь);
	ПараметрыОткрытия.Вставить("ВидЦены",                                 ДанныеУчетнойЗаписи.ЦенаПродажи);
	ПараметрыОткрытия.Вставить("РежимПодбораБезСоглашенийСКлиентами",     Истина);
	ПараметрыОткрытия.Вставить("РежимПодбораБезКоличественныхПараметров", Истина);
	ПараметрыОткрытия.Вставить("РежимПодбораБезСуммовыхПараметров",       Истина);
	ПараметрыОткрытия.Вставить("НеРазбиватьНаборыПоКомплектующим",        Истина);
	ПараметрыОткрытия.Вставить("УчетнаяЗаписьМаркетплейса",               УчетнаяЗапись);

	ОткрытьФорму("Обработка.ПодборТоваровВДокументПродажи.Форма", 
		ПараметрыОткрытия, 
		ЭтотОбъект, 
		УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПоДаннымПрайсЛиста(Команда)
	
	ОчиститьСообщения();
	
	ДлительнаяОперация    = ОбновитьПоДаннымПрайсЛистаНаСервере();
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбновитьПоДаннымПрайсЛистаЗавершениеФоновогоЗадания", ЭтотОбъект);
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		ВыполнитьОбработкуОповещения(ОповещениеОЗавершении, ДлительнаяОперация);
		
	Иначе
		ПараметрыОжидания 								   = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьОкноОжидания 			   = Истина;
		ПараметрыОжидания.ТекстСообщения                   = НСтр("ru = 'Обновление товарного каталога по данным прайс-листа.'");
		ПараметрыОжидания.ОповещениеПользователя.Показать  = Истина;
		ПараметрыОжидания.ОповещениеПользователя.Текст 	   = НСтр("ru = 'Яндекс Маркет'");
		ПараметрыОжидания.ОповещениеПользователя.Пояснение = НСтр("ru = 'Обновление товарного каталога по данным прайс-листа завершено.'");
		ПараметрыОжидания.ОповещениеПользователя.Картинка  = БиблиотекаКартинок.ЛоготипЯндексМаркет;
		
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНоменклатуруПоОтбору(Команда)
	
	ОчиститьСообщения();
	
	МассивТиповНоменклатуры = Новый Массив;
	МассивТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Товар"));

	ПараметрыОткрытия = Новый Структура();
	ПараметрыОткрытия.Вставить("УникальныйИдентификатор",			УникальныйИдентификатор);
	ПараметрыОткрытия.Вставить("ОтборПоТипуНоменклатуры",           Новый ФиксированныйМассив(МассивТиповНоменклатуры));
	ПараметрыОткрытия.Вставить("ПодбиратьНоменклатуруПартнера", 	Ложь);
	ПараметрыОткрытия.Вставить("ИспользуетсяЦенообразование25", 	ЦенообразованиеКлиент.ИспользуетсяЦенообразование25(ОбщегоНазначенияКлиент.ДатаСеанса()));
	ПараметрыОткрытия.Вставить("Заголовок",						    НСтр("ru = 'Публикация товаров на Яндекс Маркет'"));
	ПараметрыОткрытия.Вставить("ЗаголовокКнопкиПеренести",			НСтр("ru = 'Перенести для публикации'"));
	ПараметрыОткрытия.Вставить("РежимВыбора",						Истина);
	ПараметрыОткрытия.Вставить("УчетнаяЗаписьМаркетплейса",		    УчетнаяЗапись);

	ОткрытьФорму("Обработка.ПодборТоваровПоОтбору.Форма.Форма", 
		ПараметрыОткрытия, 
		ЭтотОбъект,
		,,,
		, 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры 

&НаКлиенте
Процедура ЗаполнитьПоДаннымДругогоМагазина(Команда)

	ПараметрыОткрытия = Новый Структура("УчетнаяЗапись", УчетнаяЗапись);

	ОткрытьФорму("Обработка.УправлениеПродажамиНаЯндексМаркет.Форма.КопированиеАссортимента",
		ПараметрыОткрытия,
		ЭтотОбъект,
		Истина,,,,
		РежимОткрытияОкнаФормы.Независимый);

КонецПроцедуры

&НаКлиенте
Процедура ОтобратьПоМаркеруГотовы(Команда)
	
	ОтобратьПоМаркеруГотовыНаСервере();
	
	Элементы.ОтборПоМаркерам.Картинка = БиблиотекаКартинок.ЗеленыйШарБЭД;
	Элементы.Ассортимент.Обновить();

КонецПроцедуры

&НаКлиенте
Процедура ОтобратьПоМаркеруОшибка(Команда)
	
	ОтобратьПоМаркеруОшибкаНаСервере();
	
	Элементы.ОтборПоМаркерам.Картинка = БиблиотекаКартинок.КрасныйШарБЭД;
	Элементы.Ассортимент.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобратьПоМаркеруВПроцессе(Команда)
	
	ОтобратьПоМаркеруВПроцессеНаСервере();
	
	Элементы.ОтборПоМаркерам.Картинка = БиблиотекаКартинок.ЖелтыйШарБЭД;
	Элементы.Ассортимент.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобратьПоМаркеруНовые(Команда)
	
	ОтобратьПоМаркеруНовыеНаСервере();
	
	Элементы.ОтборПоМаркерам.Картинка = БиблиотекаКартинок.СерыйШарБЭД;
	Элементы.Ассортимент.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВсе(Команда)
	
	ПоказатьВсеНаСервере();
	
	Элементы.ОтборПоМаркерам.Картинка = БиблиотекаКартинок.Состояние0Процентов;
	Элементы.Ассортимент.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьОстатки(Команда)
	
	ОчиститьСообщения();
	
	Если ДанныеУчетнойЗаписи.НеОбновлятьДанныеТорговойПлощадки Тогда
		Возврат;
	КонецЕсли;
	
	ДлительнаяОперация    = ВыгрузитьОстаткиНаСервере();
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ЗавершитьДлительнуюОперациюНаКлиенте", ЭтотОбъект);
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		ВыполнитьОбработкуОповещения(ОповещениеОЗавершении, ДлительнаяОперация);
		
	Иначе
		ПараметрыОжидания 								   = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьОкноОжидания 			   = Истина;
		ПараметрыОжидания.ТекстСообщения                   = НСтр("ru = 'Выгрузка остатков товаров на торговую площадку.'");
		
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандТаблицыФормыУтверждениеАссортимента

&НаКлиенте
Процедура УтвердитьВыбранные(Команда) 
	
	ВыделенныеСтроки = Элементы.УтверждениеАссортимента.ВыделенныеСтроки;
	
	Если ВыделенныеСтроки.Количество() < 1 Тогда
		ОчиститьСообщения();
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Выделите строки, для которых необходимо утвердить рекомендации.'"));		
	Иначе   
		Если БольшеНеЗадаватьВопросОВыделенныхСтроках Тогда
			ОчиститьСообщения();
			УтвердитьОтклонитьВыбранныеНаСервере(ВыделенныеСтроки, Истина);
			Элементы.УтверждениеАссортимента.Обновить();			
		Иначе
			
			ЗаголовокСообщения = НСтр("ru='Утверждение рекомендаций'");
			ТекстВопроса =  СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Количество выделенных строк для утверждения рекомендаций - %1. Продолжить?'"),
			ВыделенныеСтроки.Количество()); 
			ДополнительныеПараметры = Новый Структура();
			ДополнительныеПараметры.Вставить("ВыделенныеСтроки",ВыделенныеСтроки); 
			ДополнительныеПараметры.Вставить("ПоложительноеРешение",Истина);
			СпроситьУПользователя(ТекстВопроса, ЗаголовокСообщения, ДополнительныеПараметры); 
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтклонитьВыбранные(Команда)
		
	ВыделенныеСтроки = Элементы.УтверждениеАссортимента.ВыделенныеСтроки;
	
	Если ВыделенныеСтроки.Количество() < 1 Тогда
		ОчиститьСообщения();
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Выделите строки, для которых необходимо отклонить рекомендации.'"));		
	Иначе     
		Если БольшеНеЗадаватьВопросОВыделенныхСтроках Тогда
			ОчиститьСообщения();
			УтвердитьОтклонитьВыбранныеНаСервере(ВыделенныеСтроки, Ложь);
			Элементы.УтверждениеАссортимента.Обновить();			
		Иначе
			ЗаголовокСообщения = НСтр("ru='Утверждение рекомендаций'");
			ТекстВопроса =  СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Количество выделенных строк для отклонения рекомендаций - %1. Продолжить?'"),
			ВыделенныеСтроки.Количество()); 
			ДополнительныеПараметры = Новый Структура();
			ДополнительныеПараметры.Вставить("ВыделенныеСтроки",ВыделенныеСтроки); 
			ДополнительныеПараметры.Вставить("ПоложительноеРешение",Ложь);
			СпроситьУПользователя(ТекстВопроса, ЗаголовокСообщения, ДополнительныеПараметры);  
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры   

#КонецОбласти

#Область ОбработчикиКомандТаблицыФормыИсправлениеОшибок

&НаКлиенте
Процедура ОтправитьНаПовторноеПолучениеРекомендации(Команда) 
	
	ВыделенныеСтроки = Элементы.ИсправлениеОшибок.ВыделенныеСтроки;
	
	Если ВыделенныеСтроки.Количество() < 1 Тогда
		ОчиститьСообщения();
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Выделите строки, для которых необходимо повторно запросить рекомендацию.'"));		
	Иначе   
		Если БольшеНеЗадаватьВопросОВыделенныхСтроках Тогда
			ОчиститьСообщения();
			ПовторноОтправитьЗапросВыбранныеНаСервере(ВыделенныеСтроки, "НаПолучениеРекомендации");
			Элементы.ИсправлениеОшибок.Обновить();		
		Иначе
			
			ЗаголовокСообщения = НСтр("ru='Получение рекомендаций'");
			ТекстВопроса =  СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Количество выделенных строк для получения рекомендаций - %1. Продолжить?'"),
			ВыделенныеСтроки.Количество()); 
			ДополнительныеПараметры = Новый Структура();
			ДополнительныеПараметры.Вставить("ВыделенныеСтроки",ВыделенныеСтроки); 
			ДополнительныеПараметры.Вставить("Действие","НаПолучениеРекомендации");
			СпроситьУПользователяИсправлениеОшибок(ТекстВопроса, ЗаголовокСообщения, ДополнительныеПараметры); 
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПовторноНаМодерацию(Команда)  
	
	ВыделенныеСтроки = Элементы.ИсправлениеОшибок.ВыделенныеСтроки;
	
	Если ВыделенныеСтроки.Количество() < 1 Тогда
		ОчиститьСообщения();
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Выделите строки, данные которых необходимо отправить на модерацию.'"));		
	Иначе   
		Если БольшеНеЗадаватьВопросОВыделенныхСтроках Тогда
			ОчиститьСообщения();
			ПовторноОтправитьЗапросВыбранныеНаСервере(ВыделенныеСтроки, "НаМодерацию");
			Элементы.ИсправлениеОшибок.Обновить();		
		Иначе
			
			ЗаголовокСообщения = НСтр("ru='Отправка на модерацию'");
			ТекстВопроса =  СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Количество выделенных строк для отправку на модерацию - %1. Продолжить?'"),
			ВыделенныеСтроки.Количество()); 
			ДополнительныеПараметры = Новый Структура();
			ДополнительныеПараметры.Вставить("ВыделенныеСтроки",ВыделенныеСтроки); 
			ДополнительныеПараметры.Вставить("Действие","НаМодерацию");
			СпроситьУПользователяИсправлениеОшибок(ТекстВопроса, ЗаголовокСообщения, ДополнительныеПараметры); 
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры   

#КонецОбласти

#Область ОбработчикиКомандТаблицыФормыАктуальныеЦены

&НаКлиенте
Процедура ЗагрузитьРекомендованныеЦены(Команда)

	ОчиститьСообщения();
	
	Если ДанныеУчетнойЗаписи.НеОбновлятьДанныеТорговойПлощадки Тогда
		Возврат;
	КонецЕсли;
	
	ДлительнаяОперация    = ЗагрузитьРекомендованныеЦеныНаСервере();
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ЗавершитьДлительнуюОперациюНаКлиенте", ЭтотОбъект);
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		ВыполнитьОбработкуОповещения(ОповещениеОЗавершении, ДлительнаяОперация);
		
	Иначе
		ПараметрыОжидания 								   = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьОкноОжидания 			   = Истина;
		ПараметрыОжидания.ТекстСообщения                   = НСтр("ru = 'Загрузка рекомендованных цен товаров с торговой площадки.'");
		
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	КонецЕсли;
	
КонецПроцедуры     

&НаКлиенте
Процедура ВыгрузитьУстановленныеЦены(Команда)
	
	ОчиститьСообщения();
	
	Если ДанныеУчетнойЗаписи.НеОбновлятьДанныеТорговойПлощадки Тогда
		Возврат;
	КонецЕсли;
	
	ДлительнаяОперация    = ВыгрузитьУстановленныеЦеныНаСервере();
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ЗавершитьДлительнуюОперациюНаКлиенте", ЭтотОбъект);
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		ВыполнитьОбработкуОповещения(ОповещениеОЗавершении, ДлительнаяОперация);
		
	Иначе
		ПараметрыОжидания 								   = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьОкноОжидания 			   = Истина;
		ПараметрыОжидания.ТекстСообщения                   = НСтр("ru = 'Выгрузка текущих цен товаров на торговую площадку.'");
		
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	КонецЕсли;

КонецПроцедуры  

&НаКлиенте
Процедура ОбновитьТаблицуЦен(Команда)
	
	ОбновитьТаблицуЦенНаКлиенте(Истина);
	
КонецПроцедуры    

&НаКлиенте
Процедура ОткрытьПрайсЛист(Команда)
	
	ОткрытьФорму("Обработка.ПрайсЛист.Форма.Форма",
		,
		,
		Истина);

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьИнформациюВПодсказках()   
	Элементы.ПодсказкаИмпортТоварногоКаталога.Заголовок = 
		НСтр("ru = 'Данный раздел предназначен для импорта данных о товаре из личного кабинета Яндекс Маркет. Опция импорта позволит выполнить первоначальный перенос данных о товаре в систему, в случае, если каталог товаров на Маркете был ранее заполнен.
				   |Загрузка данных осуществляется в несколько этапов:
				   |	Шаг 1. Загрузите данные о товаре из сервиса (команда ""Получить каталог из сервиса""). 
				   |	Шаг 2. Для сопоставления данных, не сопоставленных автоматически, воспользуйтесь командой ""Сопоставить данные"", при необходимости создайте новую номенклатуру.
				   |	Шаг 3. На основании сопоставленных данных создайте публикации товаров (выделите строки, воспользуйтесь командой ""Записать данные"").'");
	Элементы.ПодсказкаУтверждениеРекомендаций.Заголовок = 
		НСтр("ru = 'Вам необходимо проверить рекомендации о соответствии карточек товаров Яндекс Маркета Вашему товару. Если рекомендация кажется Вам подходящей - утвердите рекомендацию, иначе - отклоните. После утверждения рекоменации выбранные позиции будут исключены из перечня для утверждения и отправятся на модерацию в Яндекс Маркет. После успешного завершения модерации товарная позиция будет привязана к карточке товара площадки. В случае отклонения выбранные позиции будут исключены из перечня для утверждения и пересены в раздел ""Исправление ошибок публикации"" с комментарием ""Неверно подобранная рекомендация"".'");
	Элементы.ПодсказкаПросмотрИРедактированиеАссортимента.Заголовок = 
		НСтр("ru = 'Выгрузка товарного каталога осуществляется в четыре этапа:
				   |	Шаг 1. Получите рекомендованные SKU на Яндексе для ваших товаров. Добавьте публикуемые товары в таблицу ниже и дождитесь статуса ""Получена рекомендация"". Вы можете использовать базовый прайс-лист для заполнения данных об ассортименте.
				   |	Шаг 2. Сверьте информацию от Маркета с вашим ассортиментом. Перейдите на закладку ""Утверждение рекомендаций"" и ознакомьтесь с полученнной информацией. Утвердите рекомендации, которые считаете верными, отклоните, если рекомендация ошибочна.
				   |	Шаг 3. При необходимости обработайте проблемные позиции на закладке ""Исправление ошибок при публикации"".
				   |	Шаг 4. Дождитесь результатов модерации товаров (обработка может занимать до двух дней). Статус публикации ""Модерация пройдена"" означает, что после обновления данных об остатках товар будет доступен покутелю на торговой площадке.'");
	Элементы.ПодсказкаИсправлениеОшибок.Заголовок = 
		НСтр("ru = 'Ознакомьтесь с описанием ошибок, уточните данные о товаре при необходимости. После отработки замечаний возможно отправить данные о товаре повторно на получение рекомендации или на создание связи. В случае, если проблему устранить невозможно (например, товары указаннной категории не размещаются на площадке), вы можете не показывать товар в ассортименте.'");
	Элементы.ПодсказкаПросмотрАктуальныхЦен.Заголовок = 
		НСтр("ru = 'Ознакомьтесь с актуальными рекомендованными торговой площадкой ценами. Настройка прайс-листов для загрузки рекомендованных цен осуществляется в справочнике ""Виды цен"", редактирование цен продаж - в прайс-листе, настроенном для текущего магазина. Цены обновляются автоматически согласно заданному в настройках магазина расписанию. При необходимости можно выгрузить цену продажи и загрузить рекомендованные цены в текущий момент времени (команды ""Загрузить рекомендованные цены"" и ""Выгрузить текущую цену на Яндекс Маркет"").'");
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеПоУчетнойЗаписи()
	
	УстановитьПривилегированныйРежим(Истина);
	ДанныеУчетнойЗаписи = ИнтеграцияСЯндексМаркетСервер.ДанныеУчетнойЗаписиЯндексМаркет(УчетнаяЗапись);
    УстановитьПривилегированныйРежим(Ложь);
	
	Если ДанныеУчетнойЗаписи.ПометкаУдаления Тогда
		Элементы.ДекорацияУчетнаяЗапись.Картинка  = БиблиотекаКартинок.СтатусРаспознаванияДокументаОшибка;
		Элементы.ДекорацияУчетнаяЗапись.Подсказка = НСтр("ru = 'Магазин отсутствует в кабинете торговой площадки'");
	ИначеЕсли ДанныеУчетнойЗаписи.НеОбновлятьДанныеТорговойПлощадки Тогда
		Элементы.ДекорацияУчетнаяЗапись.Картинка  = БиблиотекаКартинок.УстановитьСтатусЗаказаЗакрыт;
		Элементы.ДекорацияУчетнаяЗапись.Подсказка = НСтр("ru = 'Обмен данными с магазином запрещен'");
	ИначеЕсли Не ДанныеУчетнойЗаписи.ОбязательныеРеквизитыЗаполнены Тогда
		Элементы.ДекорацияУчетнаяЗапись.Картинка  = БиблиотекаКартинок.Предупреждение;
		Элементы.ДекорацияУчетнаяЗапись.Подсказка = НСтр("ru = 'Требуется настройка'");
	ИначеЕсли Не ДанныеУчетнойЗаписи.ОбязательныеЗаданияВключены Тогда
		Элементы.ДекорацияУчетнаяЗапись.Картинка  = БиблиотекаКартинок.РегламентноеЗадание;
		Элементы.ДекорацияУчетнаяЗапись.Подсказка = НСтр("ru = 'Отключены обязательные регламентные задания'");
	Иначе
		Элементы.ДекорацияУчетнаяЗапись.Картинка  = БиблиотекаКартинок.СтатусРаспознаванияДокументаОбработан;
		Элементы.ДекорацияУчетнаяЗапись.Подсказка = "";
	КонецЕсли;

	Элементы.ВыгрузитьОстатки.Доступность                           = Не ДанныеУчетнойЗаписи.НеОбновлятьДанныеТорговойПлощадки;
	Элементы.АктуальныеЦеныЗагрузитьРекомендованныеЦены.Доступность = Не ДанныеУчетнойЗаписи.НеОбновлятьДанныеТорговойПлощадки;
	Элементы.АктуальныеЦеныВыгрузитьУстановленныеЦены.Доступность   = Не ДанныеУчетнойЗаписи.НеОбновлятьДанныеТорговойПлощадки;

	ЭтоFBS = (ДанныеУчетнойЗаписи.СхемаРаботы = ПредопределенноеЗначение("Перечисление.СхемыРаботыТорговыхПлощадок.FBS")
				ИЛИ ДанныеУчетнойЗаписи.СхемаРаботы = ПредопределенноеЗначение("Перечисление.СхемыРаботыТорговыхПлощадок.Express"));
	Элементы.ВыгрузитьОстатки.Видимость   = ЭтоFBS;
	Элементы.АссортиментОстаток.Видимость = ЭтоFBS;

КонецПроцедуры

&НаКлиенте
Процедура ПриАктивацииГиперСсылкиНаПанели(Значение)
	
	ИмяАктивнойКнопки = Значение;
	
	МассивИменКнопокПанели = Новый Массив;
	МассивИменКнопокПанели.Добавить("КнопкаИмпортТоварногоКаталога");
	МассивИменКнопокПанели.Добавить("КнопкаПросмотрИРедактированиеАссортимента");
	МассивИменКнопокПанели.Добавить("КнопкаУтверждениеРекомендаций");
	МассивИменКнопокПанели.Добавить("КнопкаИсправлениеОшибок");
	МассивИменКнопокПанели.Добавить("КнопкаПросмотрАктуальныхЦен");
	
	Для Каждого ЭлементКоллекции Из МассивИменКнопокПанели Цикл
		Если ЭлементКоллекции = ИмяАктивнойКнопки Тогда
			Элементы[ЭлементКоллекции].ЦветТекста = ОбщегоНазначенияКлиент.ЦветСтиля("ЦветРамки");
		Иначе
			Элементы[ЭлементКоллекции].ЦветТекста = ОбщегоНазначенияКлиент.ЦветСтиля("ЦветТекстаКнопки");
		КонецЕсли;
	КонецЦикла;
	
	ИмяСтраницы = СтрЗаменить(ИмяАктивнойКнопки, "Кнопка", "Группа");
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы[ИмяСтраницы];
	
	Элементы.КартинкаДлительноеОжиданиеИмпорт.Видимость = Элементы.ГруппаДлительноеОжиданиеИмпорт.ТолькоПросмотр
															И Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаИмпортТоварногоКаталога;
	Элементы.ДекорацияИмпортТоварногоКаталога.Видимость = Не Элементы.ГруппаДлительноеОжиданиеИмпорт.ТолькоПросмотр
															И Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаИмпортТоварногоКаталога;
	Элементы.ГруппаДлительноеОжиданиеЦены.Видимость     = Элементы.ГруппаДлительноеОжиданиеЦены.ТолькоПросмотр
															И Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПросмотрАктуальныхЦен;
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаИмпортТоварногоКаталога Тогда
		ИспользоватьНоменклатуруПартнеров = ОбщегоНазначенияУТВызовСервера.ЗначениеФункциональнойОпции("ИспользоватьНоменклатуруПартнеров");
		
		Элементы.ГруппаНеИспользуетсяНоменклатураПартнеров.Видимость     = Не ИспользоватьНоменклатуруПартнеров
																				Или Не ЗначениеЗаполнено(ДанныеУчетнойЗаписи.Партнер);
		Элементы.ДекорацияНеИспользуетсяНоменклатураПартнеров2.Видимость = Не ИспользоватьНоменклатуруПартнеров;
		Элементы.ДекорацияНеИспользуетсяНоменклатураПартнеров3.Видимость = ИспользоватьНоменклатуруПартнеров
																				И Не ЗначениеЗаполнено(ДанныеУчетнойЗаписи.Партнер);
		Элементы.ГруппаИспользуетсяНоменклатураПартнеров.Видимость       = ИспользоватьНоменклатуруПартнеров
																				И ЗначениеЗаполнено(ДанныеУчетнойЗаписи.Партнер);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение)
	
	ТаблицаТоваров = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресТоваровВХранилище);
	
	ИспользоватьУпаковкиНоменклатуры       = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	ИспользоватьХарактеристикиНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры");
		
	// Загрузка сформированного списка товаров.
	Для Каждого СтрокаТаблицыЗначений Из ТаблицаТоваров Цикл
		НачатьТранзакцию();
		
		Попытка
			БлокировкаДанных = Новый БлокировкаДанных;
			ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("РегистрСведений.СтатусыПубликацииТоваровЯндексМаркет");
			ЭлементБлокировкиДанных.УстановитьЗначение("УчетнаяЗапись", УчетнаяЗапись);
			ЭлементБлокировкиДанных.УстановитьЗначение("Номенклатура",  СтрокаТаблицыЗначений.Номенклатура);
			Если ИспользоватьХарактеристикиНоменклатуры Тогда
				ЭлементБлокировкиДанных.УстановитьЗначение("Характеристика", СтрокаТаблицыЗначений.Характеристика);
			КонецЕсли;
			БлокировкаДанных.Заблокировать();
	
			НаборЗаписей = РегистрыСведений.СтатусыПубликацииТоваровЯндексМаркет.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.УчетнаяЗапись.Установить(УчетнаяЗапись);
			НаборЗаписей.Отбор.Номенклатура.Установить(СтрокаТаблицыЗначений.Номенклатура);
			Если ИспользоватьХарактеристикиНоменклатуры Тогда
				НаборЗаписей.Отбор.Характеристика.Установить(СтрокаТаблицыЗначений.Характеристика);
			КонецЕсли;
			НаборЗаписей.Прочитать();
			
			Если НаборЗаписей.Количество() = 0 Тогда 
				Запись               = НаборЗаписей.Добавить(); 
				Запись.УчетнаяЗапись = УчетнаяЗапись;
				Запись.Номенклатура  = СтрокаТаблицыЗначений.Номенклатура;
				
				Если ИспользоватьХарактеристикиНоменклатуры Тогда
					Запись.Характеристика = СтрокаТаблицыЗначений.Характеристика;
				КонецЕсли;
				Если ИспользоватьУпаковкиНоменклатуры Тогда
					Запись.Упаковка = СтрокаТаблицыЗначений.Номенклатура.ЕдиницаИзмерения;
				КонецЕсли;
				
				НаборЗаписей.Записать();
			КонецЕсли;
		
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			ОбщегоНазначения.СообщитьПользователю(
				ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ОбновитьПоДаннымПрайсЛистаНаСервере()
	
	ПараметрыВыполнения 							 = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение            = 0;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания  = НСтр("ru = 'Яндекс Маркет. Обновление товарного каталога по данным прайс-листа.'");
	ПараметрыВыполнения.ЗапуститьВФоне               = Истина;
	ПараметрыВыполнения.ПрерватьВыполнениеЕслиОшибка = Истина;

	ИмяМетода = "ИнтеграцияСЯндексМаркетСервер.ЗаполнитьПоДаннымПрайсЛиста";

	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, 
		ИмяМетода, 
		УчетнаяЗапись,
		ДанныеУчетнойЗаписи.ЦенаПродажи);
	
КонецФункции

&НаКлиенте
Процедура ОбновитьПоДаннымПрайсЛистаЗавершениеФоновогоЗадания(Результат, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		Если Результат.Статус = "Ошибка" Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.ПодробноеПредставлениеОшибки);
		
		ИначеЕсли Результат.Статус = "Выполнено" 
		 		  И Результат.Свойство("АдресРезультата") Тогда
			Ошибка = ИнтеграцияСЯндексМаркетВызовСервера.ПолучитьРезультатВыполненияФоновогоЗадания(Результат.АдресРезультата);

			Если Не ПустаяСтрока(Ошибка.КодОшибки) Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(Ошибка.ОписаниеОшибки);
			Иначе
				Оповестить("ИнтеграцияСЯндексМаркетСервер.ОбновитьДанные", 
					УчетнаяЗапись, 
					"Обработка.УправлениеПродажамиНаЯндексМаркет.ВыгрузкаТоварногоКаталога.ОбновитьПоДаннымПрайсЛиста");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОтобратьПоМаркеруГотовыНаСервере()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		СтатусыПубликацииТоваровЯндексМаркет,
		"МаркерСтатуса",
		3,
		ВидСравненияКомпоновкиДанных.Равно);
	
КонецПроцедуры

&НаСервере
Процедура ОтобратьПоМаркеруОшибкаНаСервере()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		СтатусыПубликацииТоваровЯндексМаркет,
		"МаркерСтатуса",
		0,
		ВидСравненияКомпоновкиДанных.Равно);
	
КонецПроцедуры

&НаСервере
Процедура ОтобратьПоМаркеруВПроцессеНаСервере()

	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		СтатусыПубликацииТоваровЯндексМаркет,
		"МаркерСтатуса",
		1,
		ВидСравненияКомпоновкиДанных.Равно);
	
КонецПроцедуры

&НаСервере
Процедура ОтобратьПоМаркеруНовыеНаСервере()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		СтатусыПубликацииТоваровЯндексМаркет,
		"МаркерСтатуса",
		2,
		ВидСравненияКомпоновкиДанных.Равно);
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьВсеНаСервере()
	
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(
		СтатусыПубликацииТоваровЯндексМаркет,
		"МаркерСтатуса");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьДлительнуюОперациюНаКлиенте(Результат, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		Если Результат.Статус = "Ошибка" Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.ПодробноеПредставлениеОшибки);
		
		ИначеЕсли Результат.Статус = "Выполнено" 
		 		  И Результат.Свойство("АдресРезультата") Тогда
			Ошибка = ИнтеграцияСЯндексМаркетВызовСервера.ПолучитьРезультатВыполненияФоновогоЗадания(Результат.АдресРезультата);
			
			Если Не ПустаяСтрока(Ошибка.КодОшибки) Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(Ошибка.ОписаниеОшибки);
			Иначе
				ОбновитьТаблицуЦенНаКлиенте();
				ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Операция успешно завершена'"));
				Оповестить("ИнтеграцияСЯндексМаркетСервер.ОбновитьДанные", 
					УчетнаяЗапись, 
					"Обработка.УправлениеПродажамиНаЯндексМаркет.ВыгрузкаТоварногоКаталога.ЗавершитьДлительнуюОперациюНаКлиенте");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры    

&НаСервере
Функция ВыгрузитьОстаткиНаСервере()
	
	ПараметрыВыполнения 							 = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение            = 0;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания  = НСтр("ru = 'Яндекс Маркет. Выгрузка остатков товаров на торговую площадку.'");
	ПараметрыВыполнения.ЗапуститьВФоне               = Истина;
	ПараметрыВыполнения.ПрерватьВыполнениеЕслиОшибка = Истина;

	ИмяМетода = "ИнтеграцияСЯндексМаркетСервер.ВыгрузитьОстаткиТоваровЯндексМаркет";

	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ПоРасписанию", Ложь);
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, 
		ИмяМетода, 
		УчетнаяЗапись,
		ДополнительныеПараметры);
	
КонецФункции   

&НаСервере
Процедура ЗаписатьИзменениеФлагаВыбран(ВыбраннаяСтрока)
	
	НачатьТранзакцию();
	
	Попытка
		БлокировкаДанных = Новый БлокировкаДанных;
		ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("РегистрСведений.СтатусыПубликацииТоваровЯндексМаркет");
		ЭлементБлокировкиДанных.УстановитьЗначение("УчетнаяЗапись",  УчетнаяЗапись);
		ЭлементБлокировкиДанных.УстановитьЗначение("Номенклатура",   ВыбраннаяСтрока.Номенклатура);
		ЭлементБлокировкиДанных.УстановитьЗначение("Характеристика", ВыбраннаяСтрока.Характеристика);
		ЭлементБлокировкиДанных.УстановитьЗначение("Упаковка",       ВыбраннаяСтрока.Упаковка);
		БлокировкаДанных.Заблокировать();
		
		НаборЗаписей = РегистрыСведений.СтатусыПубликацииТоваровЯндексМаркет.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.УчетнаяЗапись.Установить(УчетнаяЗапись);
		НаборЗаписей.Отбор.Номенклатура.Установить(ВыбраннаяСтрока.Номенклатура);
		НаборЗаписей.Отбор.Характеристика.Установить(ВыбраннаяСтрока.Характеристика);
		НаборЗаписей.Отбор.Упаковка.Установить(ВыбраннаяСтрока.Упаковка);
		НаборЗаписей.Прочитать();
		
		Если НаборЗаписей.Количество() > 0 Тогда
			Запись        = НаборЗаписей[0];
			Запись.Выбран = Не Запись.Выбран;
			
			НаборЗаписей.Записать();
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ОбщегоНазначения.СообщитьПользователю(
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура УтвердитьОтклонитьВыбранныеНаСервере(МассивСтрок,ПоложительноеРешение)
	 
	Для Каждого ВыбраннаяСтрока Из МассивСтрок Цикл

			НачатьТранзакцию();
			
			Попытка
				БлокировкаДанных = Новый БлокировкаДанных;
				ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("РегистрСведений.СтатусыПубликацииТоваровЯндексМаркет");
				ЭлементБлокировкиДанных.УстановитьЗначение("УчетнаяЗапись",  УчетнаяЗапись);
				ЭлементБлокировкиДанных.УстановитьЗначение("Номенклатура",   ВыбраннаяСтрока.Номенклатура);
				ЭлементБлокировкиДанных.УстановитьЗначение("Характеристика", ВыбраннаяСтрока.Характеристика);
				ЭлементБлокировкиДанных.УстановитьЗначение("Упаковка",       ВыбраннаяСтрока.Упаковка);
				БлокировкаДанных.Заблокировать();
				
				НаборЗаписей = РегистрыСведений.СтатусыПубликацииТоваровЯндексМаркет.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.УчетнаяЗапись.Установить(УчетнаяЗапись);
				НаборЗаписей.Отбор.Номенклатура.Установить(ВыбраннаяСтрока.Номенклатура);
				НаборЗаписей.Отбор.Характеристика.Установить(ВыбраннаяСтрока.Характеристика);
				НаборЗаписей.Отбор.Упаковка.Установить(ВыбраннаяСтрока.Упаковка);
				НаборЗаписей.Прочитать();
				
				Если НаборЗаписей.Количество() > 0 Тогда
					Запись = НаборЗаписей[0];
					Если ПоложительноеРешение Тогда
						Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.УтвержденаРекомендация;
					Иначе
						Запись.Статус         = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.НевернаяРекомендация;
						Запись.ОписаниеОшибки = НСтр("ru = 'Если товар определен неправильно: 
														   |Проверьте, что товар относится к одной из категорий, представленных на Маркете.
														   |Убедитесь, что вы предоставили наиболее полные и точные данные о товаре. 
														   |Если вы не указали какую-либо информацию, уточните входные данные запроса (например, добавьте цвет или размер в характеристики товара или добавьте описание модели, скорректировав данные в поле ""Представление"" на закладке ""Данные о товаре"", укажите базовую цену товара, если она не заполнена).
														   |После заполненения данных отправьте повторно публикацию на получение рекомендации (кнопка ""Получить рекомендацию""). 
														   |Попробуйте найти товар в поиске по разделу ""Покупки"" на Маркете. Если товар найдется, SKU на Яндексе можно взять из URL его страницы. Например, если URL страницы товара — https://pokupki.market.yandex.ru/product/7715752, то его SKU на Яндексе — 7715752.Если советы не помогли - отправьте информацию о товаре без SKU на Яндексе (кнопка ""Отправить на модерацию"") - сотрудники Маркета могут подобрать или создать карточки для ваших товаров в личном кабинете, если товар еще не продается на Маркете.'");
					КонецЕсли;
					Запись.Выбран = Ложь;
					
					НаборЗаписей.Записать();
				КонецЕсли;
				
				ЗафиксироватьТранзакцию();
				
			Исключение
				ОтменитьТранзакцию();
				ОбщегоНазначения.СообщитьПользователю(
					ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			КонецПопытки;
		КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура ПовторноОтправитьЗапросВыбранныеНаСервере(МассивСтрок, Действие)
	
	Для Каждого ВыбраннаяСтрока Из МассивСтрок Цикл
		НачатьТранзакцию();
		
		Попытка
			БлокировкаДанных = Новый БлокировкаДанных;
			ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("РегистрСведений.СтатусыПубликацииТоваровЯндексМаркет");
			ЭлементБлокировкиДанных.УстановитьЗначение("УчетнаяЗапись",  УчетнаяЗапись);
			ЭлементБлокировкиДанных.УстановитьЗначение("Номенклатура",   ВыбраннаяСтрока.Номенклатура);
			ЭлементБлокировкиДанных.УстановитьЗначение("Характеристика", ВыбраннаяСтрока.Характеристика);
			ЭлементБлокировкиДанных.УстановитьЗначение("Упаковка",       ВыбраннаяСтрока.Упаковка);
			БлокировкаДанных.Заблокировать();
			
			НаборЗаписей = РегистрыСведений.СтатусыПубликацииТоваровЯндексМаркет.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.УчетнаяЗапись.Установить(УчетнаяЗапись);
			НаборЗаписей.Отбор.Номенклатура.Установить(ВыбраннаяСтрока.Номенклатура);
			НаборЗаписей.Отбор.Характеристика.Установить(ВыбраннаяСтрока.Характеристика);
			НаборЗаписей.Отбор.Упаковка.Установить(ВыбраннаяСтрока.Упаковка);
			НаборЗаписей.Прочитать();
			
			Если НаборЗаписей.Количество() > 0 Тогда
				Запись = НаборЗаписей[0];
				Если Действие = "НаПолучениеРекомендации" Тогда
					Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.Новый;
				ИначеЕсли Действие = "НаМодерацию" Тогда
					Если ЗначениеЗаполнено(Запись.ИдентификаторТовараПлощадки) Тогда
						Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.УтвержденаРекомендация;
					Иначе
						Запись.Статус = Перечисления.СтатусыВыгрузкиТоваровЯндексМаркет.СозданиеНового;
					КонецЕсли;
				КонецЕсли;
				Запись.Выбран = Ложь;
				
				НаборЗаписей.Записать();
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			ОбщегоНазначения.СообщитьПользователю(
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТаблицуЦенНаКлиентеПодключаемый()
	
	ОбновитьТаблицуЦенНаКлиенте(Ложь);
	
КонецПроцедуры
	
&НаКлиенте
Процедура ОбновитьТаблицуЦенНаКлиенте(ВыводитьОкноОжидания = Ложь)
	
	ОчиститьСообщения();
	
	ДлительнаяОперация    = ОбновитьТаблицуЦенНаСервере();
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбновитьТаблицуЦенЗавершениеФоновогоЗадания", ЭтотОбъект);
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		ВыполнитьОбработкуОповещения(ОповещениеОЗавершении, ДлительнаяОперация);
		
	Иначе
		ПараметрыОжидания 					   = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьОкноОжидания = ВыводитьОкноОжидания;
		
		Если ВыводитьОкноОжидания Тогда
			ПараметрыОжидания.ТекстСообщения                   = НСтр("ru = 'Обновление актуальных цен торговой площадки.'");
			ПараметрыОжидания.ОповещениеПользователя.Показать  = Истина;
			ПараметрыОжидания.ОповещениеПользователя.Текст 	   = НСтр("ru = 'Яндекс Маркет'");
			ПараметрыОжидания.ОповещениеПользователя.Пояснение = НСтр("ru = 'Обновление актуальных цен торговой площадки завершено.'");
			ПараметрыОжидания.ОповещениеПользователя.Картинка  = БиблиотекаКартинок.ЛоготипЯндексМаркет;

			Элементы.ГруппаДлительноеОжиданиеЦены.ТолькоПросмотр = Ложь;
			Элементы.ГруппаДлительноеОжиданиеЦены.Видимость      = Ложь;
			
		Иначе
			Элементы.ГруппаДлительноеОжиданиеЦены.ТолькоПросмотр = Истина;
			Элементы.ГруппаДлительноеОжиданиеЦены.Видимость      = (Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПросмотрАктуальныхЦен);
		КонецЕсли;
		
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ОбновитьТаблицуЦенНаСервере()
	
	ПараметрыВыполнения 							 = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение            = 0;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания  = НСтр("ru = 'Яндекс Маркет. Обновление актуальных цен торговой площадки.'");
	ПараметрыВыполнения.ЗапуститьВФоне               = Истина;
	ПараметрыВыполнения.ПрерватьВыполнениеЕслиОшибка = Истина;

	ИмяМетода = "ИнтеграцияСЯндексМаркетСервер.ОбновитьАктуальныеЦеныТорговойПлощадки";

	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, 
		ИмяМетода, 
		УчетнаяЗапись,
		ДанныеУчетнойЗаписи.ЦенаПродажи,
		ТаблицаЦен());
	
КонецФункции

&НаКлиенте
Процедура ОбновитьТаблицуЦенЗавершениеФоновогоЗадания(Результат, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		Если Результат.Статус = "Ошибка" Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.ПодробноеПредставлениеОшибки);
		
		ИначеЕсли Результат.Статус = "Выполнено" 
		 		  И Результат.Свойство("АдресРезультата") Тогда
			Ошибка = ИнтеграцияСЯндексМаркетВызовСервера.ПолучитьРезультатВыполненияФоновогоЗадания(Результат.АдресРезультата);
			
			Если Не ПустаяСтрока(Ошибка.КодОшибки) Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(Ошибка.ОписаниеОшибки);
			Иначе
				АктуальныеЦены.Очистить();
				
				Для Каждого ЭлементКоллекции Из Ошибка.АктуальныеЦены Цикл
					СтрокаТаблицыЗначений = АктуальныеЦены.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицыЗначений, ЭлементКоллекции);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ГруппаДлительноеОжиданиеЦены.ТолькоПросмотр = Ложь;
	Элементы.ГруппаДлительноеОжиданиеЦены.Видимость      = Ложь;

КонецПроцедуры

&НаСервере
Функция ТаблицаЦен()
	
	ТаблицаЦен = Новый ТаблицаЗначений;
	ТаблицаЦен.Колонки.Добавить("ВидЦены",     Новый ОписаниеТипов("СправочникСсылка.ВидыЦен")); 
	ТаблицаЦен.Колонки.Добавить("ПолеТаблицы", Новый ОписаниеТипов("Строка",,, Новый КвалификаторыСтроки(250, ДопустимаяДлина.Переменная)));
	
	МассивРекомендованныхЦен = ИнтеграцияСЯндексМаркетСервер.ПолучитьМассивРекомендованныхЦен(); 
	СоответствиеИменКолонок  = СоответствиеИменКолонок();
	
	Для Каждого ЭлементКоллекции Из МассивРекомендованныхЦен Цикл 
		ЗначениеИзХранилища = ЭлементКоллекции.ХранилищеНастроекПараметровСпособаЗаданияЦены.Получить();
		
		ИмяКолонки = СоответствиеИменКолонок.Получить(ЗначениеИзХранилища.ЗначениеПараметра); 
		Если ИмяКолонки <> Неопределено Тогда
			Элементы.АктуальныеЦены.ПодчиненныеЭлементы[ИмяКолонки].Видимость = Истина; 
			
			СтрокаТаблицыЗначений             = ТаблицаЦен.Добавить();
			СтрокаТаблицыЗначений.ВидЦены     = ЭлементКоллекции;
			СтрокаТаблицыЗначений.ПолеТаблицы = СтрЗаменить(ИмяКолонки, "АктуальныеЦены", "");
		КонецЕсли;
	КонецЦикла; 
	
	Возврат ТаблицаЦен; 
	
КонецФункции

&НаСервереБезКонтекста
Функция СоответствиеИменКолонок()
	
	СоответствиеИменКолонок = Новый Соответствие;
	СоответствиеИменКолонок.Вставить("Минимальная цена продажи на Маркете",                  "АктуальныеЦеныМинимальнаяЦенаПродажи");
	СоответствиеИменКолонок.Вставить("Рекомендованная Маркетом",                             "АктуальныеЦеныРекомендованнаяЦена");
	СоответствиеИменКолонок.Вставить("Минимальная среди всех предложений товара на Маркете", "АктуальныеЦеныМинимальнаяСредиВсехПредложений");
	СоответствиеИменКолонок.Вставить("Максимальная без скидки",                              "АктуальныеЦеныМаксимальнаяБезСкидки");
	СоответствиеИменКолонок.Вставить("Максимальная для показов на Маркете",                  "АктуальныеЦеныМаксимальнаяДляПоказов");
	
	Возврат СоответствиеИменКолонок; 

КонецФункции  

&НаСервере
Функция ЗагрузитьРекомендованныеЦеныНаСервере()
	  	
	ПараметрыВыполнения 							 = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение            = 0;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания  = НСтр("ru = 'Яндекс Маркет. Загрузка рекомендованных цен товаров с торговой площадки.'");
	ПараметрыВыполнения.ЗапуститьВФоне               = Истина;
	ПараметрыВыполнения.ПрерватьВыполнениеЕслиОшибка = Истина;
	
	ИмяМетода = "ИнтеграцияСЯндексМаркетСервер.ЗагрузитьРекомендованныеЦеныЯндексМаркет";

	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ПоРасписанию",   Ложь);
	ДополнительныеПараметры.Вставить("ТаблицаТоваров", ТаблицаТоваровИзВыделенныхСтрокАктуальныхЦен());

	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, 
		ИмяМетода, 
		УчетнаяЗапись,
		ДополнительныеПараметры);

КонецФункции 

&НаСервере
Функция ВыгрузитьУстановленныеЦеныНаСервере()
	  	
	ПараметрыВыполнения 							 = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение            = 0;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания  = НСтр("ru = 'Яндекс Маркет. Выгрузка текущих цен товаров на торговую площадку.'");
	ПараметрыВыполнения.ЗапуститьВФоне               = Истина;
	ПараметрыВыполнения.ПрерватьВыполнениеЕслиОшибка = Истина;
	
	ИмяМетода = "ИнтеграцияСЯндексМаркетСервер.ВыгрузитьУстановленныеЦеныЯндексМаркет";

	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ПоРасписанию",   Ложь);
	ДополнительныеПараметры.Вставить("ТаблицаТоваров", ТаблицаТоваровИзВыделенныхСтрокАктуальныхЦен());
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, 
		ИмяМетода, 
		УчетнаяЗапись,
		ДополнительныеПараметры);

КонецФункции   

&НаСервере
Функция ТаблицаТоваровИзВыделенныхСтрокАктуальныхЦен()

	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("УчетнаяЗапись",  Новый ОписаниеТипов("СправочникСсылка.УчетныеЗаписиМаркетплейсов"));
	Результат.Колонки.Добавить("Номенклатура",   Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Результат.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	Результат.Колонки.Добавить("Упаковка",       Новый ОписаниеТипов("СправочникСсылка.УпаковкиЕдиницыИзмерения"));
	
	Для Каждого Идентификатор Из Элементы.АктуальныеЦены.ВыделенныеСтроки Цикл
		СтрокаТаблицыЗначений = Результат.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицыЗначений, АктуальныеЦены.НайтиПоИдентификатору(Идентификатор), "Номенклатура, Характеристика, Упаковка");
	КонецЦикла;
	
	Результат.ЗаполнитьЗначения(УчетнаяЗапись, "УчетнаяЗапись");

	Возврат Результат;

КонецФункции

&НаСервереБезКонтекста
Функция ПроверитьНаличиеДанныхИЗапускИмпортаКаталога(ДанныеУчетнойЗаписи)
	
	Результат = Новый Структура;
	Результат.Вставить("ДанныеСуществуют", Истина);
	Результат.Вставить("ЗаданиеАктивно",   Ложь);
	Результат.Вставить("ЗаданиеЗавершено", Дата(1, 1, 1));
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СтатусыПубликацииТоваровЯндексМаркет.УчетнаяЗапись КАК УчетнаяЗапись
		|ИЗ
		|	РегистрСведений.СтатусыПубликацииТоваровЯндексМаркет КАК СтатусыПубликацииТоваровЯндексМаркет
		|ГДЕ
		|	СтатусыПубликацииТоваровЯндексМаркет.УчетнаяЗапись = &УчетнаяЗапись";
	
	Запрос.УстановитьПараметр("УчетнаяЗапись", ДанныеУчетнойЗаписи.УчетнаяЗапись);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Результат.ДанныеСуществуют = Ложь;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	Отбор = Новый Структура;
	Отбор.Вставить("Ключ", "ЯндексМаркет_ИмпортТоварногоКаталога_" + ДанныеУчетнойЗаписи.ИдентификаторКабинета);
	
	Задания = ФоновыеЗадания.ПолучитьФоновыеЗадания(Отбор);
	Если Задания.Количество() > 0 Тогда
		Результат.ЗаданиеАктивно   = (Задания[0].Состояние = СостояниеФоновогоЗадания.Активно);
		Результат.ЗаданиеЗавершено = ?(Задания[0].Состояние = СостояниеФоновогоЗадания.Завершено,
										Задания[0].Конец,
										?(Задания[0].Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно,
											Неопределено,
											Дата(1, 1, 1)));
	КонецЕсли;
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция НаименованиеЗаданияИмпортаКаталога(Завершено = Неопределено)
	
	Если Завершено = Дата(1, 1, 1) Тогда
		Возврат "";
	КонецЕсли;
	
	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Загрузка данных о товарах с торговой площадки завершена %1'"),
		?(Завершено = Неопределено, НСтр("ru = 'с ошибками'"), Формат(Завершено, "ДЛФ=DT")));
	
КонецФункции

&НаСервере
Процедура УстановитьФильтрЗагружаемыхТоваров()
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ЗагружаемыеТовары, 
		"ЕстьИзменения", 
		(ПереключательНовыеИзмененные = 2),
		(ПереключательНовыеИзмененные <> 0));
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТоварыИзСервисаНаСервере()
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение            = 0;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания  = НСтр("ru = 'Яндекс Маркет. Загрузка данных о товарах с торговой площадки.'");
	ПараметрыВыполнения.ЗапуститьВФоне               = Истина;
	ПараметрыВыполнения.ПрерватьВыполнениеЕслиОшибка = Истина;
	ПараметрыВыполнения.КлючФоновогоЗадания          = "ЯндексМаркет_ИмпортТоварногоКаталога_" + ДанныеУчетнойЗаписи.ИдентификаторКабинета;
	
	УстановитьПривилегированныйРежим(Истина);
	Отбор = Новый Структура();
	Отбор.Вставить("Ключ",      ПараметрыВыполнения.КлючФоновогоЗадания);
	Отбор.Вставить("Состояние", СостояниеФоновогоЗадания.Активно);
	
	АктивныеЗадания = ФоновыеЗадания.ПолучитьФоновыеЗадания(Отбор);
	Если АктивныеЗадания.Количество() > 0 Тогда
		ДлительнаяОперация = ДлительныеОперации.НовыйРезультатВыполненияОперации();
		ДлительнаяОперация.Статус = "Отменено";
		
	Иначе
		ИмяМетода = "ИнтеграцияСЯндексМаркетСервер.ИмпортироватьТоварныйКаталог";
		ДлительнаяОперация = ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, 
			ИмяМетода, 
			УчетнаяЗапись);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	Возврат ДлительнаяОперация;
	
КонецФункции

&НаКлиенте
Процедура ПолучитьТоварыИзСервисаЗавершениеФоновогоЗадания(Результат, ДополнительныеПараметры = Неопределено) Экспорт
	
	Завершено = Неопределено;
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		Если Результат.Статус = "Отменено" Тогда
			Возврат;
			
		ИначеЕсли Результат.Статус = "Ошибка" Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.ПодробноеПредставлениеОшибки);
		
		ИначеЕсли Результат.Статус = "Выполнено" 
		 			И Результат.Свойство("АдресРезультата") Тогда
			Ошибка = ИнтеграцияСЯндексМаркетВызовСервера.ПолучитьРезультатВыполненияФоновогоЗадания(Результат.АдресРезультата);
			
			Если Не ПустаяСтрока(Ошибка.КодОшибки) Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(Ошибка.ОписаниеОшибки);
			Иначе
				Завершено = ОбщегоНазначенияУТВызовСервера.ДатаСеанса();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ГруппаДлительноеОжиданиеИмпорт.ТолькоПросмотр = Ложь;
	Оповестить("ЯндексМаркет_ИмпортТоварногоКаталога_Окончание", Завершено, ДанныеУчетнойЗаписи.ИдентификаторКабинета);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НоменклатураКонтрагентовПоСсылкам(Знач Ссылки)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НоменклатураКонтрагентов.Владелец КАК Владелец,
		|	НоменклатураКонтрагентов.Идентификатор КАК Идентификатор
		|ПОМЕСТИТЬ втОтбор
		|ИЗ
		|	Справочник.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
		|ГДЕ
		|	НоменклатураКонтрагентов.Ссылка В(&Ссылки)";
	
	Запрос.УстановитьПараметр("Ссылки", Ссылки);
	
	Возврат СопоставлениеНоменклатурыКонтрагентов.ДанныеНоменклатурыКонтрагентаПоЗапросу(Запрос);
	
КонецФункции

&НаКлиенте
Процедура ОбработатьСопоставлениеНоменклатуры(РезультатСопоставления, ДополнительныеПараметры) Экспорт
	
	Если РезультатСопоставления = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Оповестить("ЯндексМаркет_ИмпортТоварногоКаталога_СопоставлениеНоменклатуры",, ДанныеУчетнойЗаписи.ИдентификаторКабинета);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьЗагруженныеДанныеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ОчиститьСообщения();
		
		ДлительнаяОперация    = ЗаписатьЗагруженныеДанныеНаСервере(Элементы.ЗагружаемыеТовары.ВыделенныеСтроки);
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ЗаписатьЗагруженныеДанныеЗавершениеФоновогоЗадания", ЭтотОбъект);
		
		Если ДлительнаяОперация.Статус = "Выполнено"
				Или ДлительнаяОперация.Статус = "Отменено" Тогда
			ВыполнитьОбработкуОповещения(ОповещениеОЗавершении, ДлительнаяОперация);
			
		Иначе
			ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
			ПараметрыОжидания.ВыводитьОкноОжидания             = Истина;
			ПараметрыОжидания.ТекстСообщения                   = НСтр("ru = 'Запись загруженных данных по позициям товарного каталога с торговой площадки Яндекс Маркет.'");
			ПараметрыОжидания.ОповещениеПользователя.Показать  = Истина;
			ПараметрыОжидания.ОповещениеПользователя.Текст     = НСтр("ru = 'Импорт данных'");
			ПараметрыОжидания.ОповещениеПользователя.Пояснение = НСтр("ru = 'Завершена запись загруженных данных по позициям товарного каталога с торговой площадки Яндекс Маркет.'");
			ПараметрыОжидания.ОповещениеПользователя.Картинка  = БиблиотекаКартинок.ЛоготипЯндексМаркет;
			
			ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ЗаписатьЗагруженныеДанныеНаСервере(Знач ВыделенныеСтроки)
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение            = 0;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания  = НСтр("ru = 'Яндекс Маркет. Запись загруженных данных по позициям товарного каталога с торговой площадки.'");
	ПараметрыВыполнения.ЗапуститьВФоне               = Истина;
	ПараметрыВыполнения.ПрерватьВыполнениеЕслиОшибка = Ложь;
	ПараметрыВыполнения.КлючФоновогоЗадания          = "ЯндексМаркет_ЗаписьТоварногоКаталога_" + ДанныеУчетнойЗаписи.ИдентификаторКабинета;
	
	УстановитьПривилегированныйРежим(Истина);
	Отбор = Новый Структура();
	Отбор.Вставить("Ключ",      ПараметрыВыполнения.КлючФоновогоЗадания);
	Отбор.Вставить("Состояние", СостояниеФоновогоЗадания.Активно);
	
	АктивныеЗадания = ФоновыеЗадания.ПолучитьФоновыеЗадания(Отбор);
	Если АктивныеЗадания.Количество() > 0 Тогда
		ДлительнаяОперация = ДлительныеОперации.НовыйРезультатВыполненияОперации();
		ДлительнаяОперация.Статус = "Отменено";
		
	Иначе
		ИмпортируемыеТовары = Новый ТаблицаЗначений;
		ИмпортируемыеТовары.Колонки.Добавить("УчетнаяЗапись",        Новый ОписаниеТипов("СправочникСсылка.УчетныеЗаписиМаркетплейсов"));
		ИмпортируемыеТовары.Колонки.Добавить("НоменклатураПартнера", Новый ОписаниеТипов("СправочникСсылка.НоменклатураКонтрагентов"));
		
		НаборПараметров = Новый Соответствие;
		РазмерПорции    = 1000;
		
		Для Каждого КлючЗаписи Из ВыделенныеСтроки Цикл
			Если ЗначениеЗаполнено(КлючЗаписи.НоменклатураПартнера) Тогда
				ЗаполнитьЗначенияСвойств(ИмпортируемыеТовары.Добавить(), КлючЗаписи);
				
				Если ИмпортируемыеТовары.Количество() >= РазмерПорции Тогда
					ПараметрыФункции = Новый Массив;
					ПараметрыФункции.Добавить(Перечисления.ВидыМаркетплейсов.МаркетплейсЯндексМаркет);
					ПараметрыФункции.Добавить(ИмпортируемыеТовары.Скопировать());
					
					НаборПараметров.Вставить(НаборПараметров.Количество(), ПараметрыФункции);
					ИмпортируемыеТовары.Очистить();
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если ИмпортируемыеТовары.Количество() > 0 Тогда
			ПараметрыФункции = Новый Массив;
			ПараметрыФункции.Добавить(Перечисления.ВидыМаркетплейсов.МаркетплейсЯндексМаркет);
			ПараметрыФункции.Добавить(ИмпортируемыеТовары.Скопировать());
			
			НаборПараметров.Вставить(НаборПараметров.Количество(), ПараметрыФункции);
			ИмпортируемыеТовары.Очистить();
		КонецЕсли;
		
		ИмяМетода = "РегистрыСведений.ИмпортируемыеТоварыТорговыхПлощадок.ЗаписатьЗагруженныеДанныеСТорговойПлощадки";
		ДлительнаяОперация = ДлительныеОперации.ВыполнитьФункциюВНесколькоПотоков(ИмяМетода,
			ПараметрыВыполнения, 
			НаборПараметров);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	Возврат ДлительнаяОперация;
	
КонецФункции

&НаКлиенте
Процедура ЗаписатьЗагруженныеДанныеЗавершениеФоновогоЗадания(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		Если Результат.Статус = "Отменено" Тогда
			Возврат;
			
		ИначеЕсли Результат.Статус = "Ошибка" Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.ПодробноеПредставлениеОшибки);
		
		ИначеЕсли Результат.Статус = "Выполнено" 
		 			И Результат.Свойство("АдресРезультата") Тогда
			Ошибка = ИнтеграцияСЯндексМаркетВызовСервера.ПолучитьРезультатВыполненияФоновогоЗадания(Результат.АдресРезультата);
			
			Если ТипЗнч(Ошибка) = Тип("Соответствие") Тогда
				КоличествоНетДанных = 0;
				
				Для Каждого КлючИЗначение Из Ошибка Цикл
					ОшибкаПотока = ИнтеграцияСЯндексМаркетВызовСервера.ПолучитьРезультатВыполненияФоновогоЗадания(КлючИЗначение.Значение.АдресРезультата);
					
					Если ЗначениеЗаполнено(ОшибкаПотока) И
							Не ПустаяСтрока(ОшибкаПотока.КодОшибки) Тогда
						Если СтрНайти(ОшибкаПотока.КодОшибки, "_НетДанных") Тогда
							КоличествоНетДанных = КоличествоНетДанных + 1;
						Иначе
							ОбщегоНазначенияКлиент.СообщитьПользователю(ОшибкаПотока.ОписаниеОшибки);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				
				Если ЗначениеЗаполнено(КоличествоНетДанных) И КоличествоНетДанных = Ошибка.Количество() Тогда
					ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Сопоставленные данные для записи позиций товарного каталога отсутствуют.'"));
				КонецЕсли;
				
			Иначе
				Если Не ПустаяСтрока(Ошибка.КодОшибки) Тогда
					ОбщегоНазначенияКлиент.СообщитьПользователю(Ошибка.ОписаниеОшибки);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Оповестить("ЯндексМаркет_ИмпортТоварногоКаталога_Запись", УчетнаяЗапись);
	
КонецПроцедуры

&НаКлиенте
Процедура СпроситьУПользователя(ТекстВопроса, ЗаголовокСообщения, ДополнительныеПараметры)
	
	ПараметрыСообщения = СтандартныеПодсистемыКлиент.ПараметрыВопросаПользователю();
	ПараметрыСообщения.ПредлагатьБольшеНеЗадаватьЭтотВопрос = Истина; 
	ПараметрыСообщения.Заголовок = ЗаголовокСообщения;
	
	СтандартныеПодсистемыКлиент.ПоказатьВопросПользователю(
		Новый ОписаниеОповещения("УтвердитьОтклонитьЗавершение", ЭтотОбъект, ДополнительныеПараметры), 
		ТекстВопроса, 
		РежимДиалогаВопрос.ОКОтмена, 
		ПараметрыСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура УтвердитьОтклонитьЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт

	Ответ = РезультатВопроса; 
	ВыделенныеСтроки = ДополнительныеПараметры.ВыделенныеСтроки; 
	ПоложительноеРешение = ДополнительныеПараметры.ПоложительноеРешение;
	
	Если Ответ <> Неопределено
		И Ответ.Значение = КодВозвратаДиалога.ОК Тогда
			ОчиститьСообщения();
			УтвердитьОтклонитьВыбранныеНаСервере(ВыделенныеСтроки, ПоложительноеРешение);
			Элементы.УтверждениеАссортимента.Обновить();
			Если Ответ.БольшеНеЗадаватьЭтотВопрос Тогда 
				 ПараметрыФормы = Новый Структура();
				 ПараметрыФормы.Вставить("БольшеНеЗадаватьВопросОВыделенныхСтроках",Истина);  
				 ПоместитьВоВременноеХранилище(УникальныйИдентификаторПользователя);
				 БольшеНеЗадаватьВопросОВыделенныхСтроках = Истина;
			КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СпроситьУПользователяИсправлениеОшибок(ТекстВопроса, ЗаголовокСообщения, ДополнительныеПараметры)
	
	ПараметрыСообщения = СтандартныеПодсистемыКлиент.ПараметрыВопросаПользователю();
	ПараметрыСообщения.ПредлагатьБольшеНеЗадаватьЭтотВопрос = Истина; 
	ПараметрыСообщения.Заголовок = ЗаголовокСообщения;     
	
	СтандартныеПодсистемыКлиент.ПоказатьВопросПользователю(
		Новый ОписаниеОповещения("ПовторноОтправитьЗапросЗавершение", ЭтотОбъект, ДополнительныеПараметры), 
		ТекстВопроса, 
		РежимДиалогаВопрос.ОКОтмена, 
		ПараметрыСообщения);
	 
КонецПроцедуры

&НаКлиенте
Процедура ПовторноОтправитьЗапросЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса; 
	ВыделенныеСтроки = ДополнительныеПараметры.ВыделенныеСтроки; 
	Действие = ДополнительныеПараметры.Действие;
	
	Если Ответ <> Неопределено
		И Ответ.Значение = КодВозвратаДиалога.ОК Тогда
			ОчиститьСообщения();
			ПовторноОтправитьЗапросВыбранныеНаСервере(ВыделенныеСтроки, Действие);
			Элементы.ИсправлениеОшибок.Обновить();
			Если Ответ.БольшеНеЗадаватьЭтотВопрос Тогда 
				 ПараметрыФормы = Новый Структура();
				 ПараметрыФормы.Вставить("БольшеНеЗадаватьВопросОВыделенныхСтроках",Истина);  
				 ПоместитьВоВременноеХранилище(УникальныйИдентификаторПользователя);
				 БольшеНеЗадаватьВопросОВыделенныхСтроках = Истина;
			КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
