
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("Организация", Организация);
	Параметры.Свойство("ТипГрузоперевозки", ТипГрузоперевозки);
	
	ОбщегоНазначенияКлиентСервер.ДополнитьСписок(СписокЗаказов, Параметры.СписокЗаказов);
	
	УстановитьДоступностьЭлементовПоЗначениюОпции();
	ВыполнитьДлительныеОперации();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(Кэш.ПараметрыМенеджераДлительныхОпераций.ФоновоеЗадание) Тогда
		ОжидатьЗавершениеВыполненияЗапроса(Кэш.ПараметрыМенеджераДлительныхОпераций);
		Кэш.Удалить("ПараметрыМенеджераДлительныхОпераций");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ПодключениеТестовогоПериодаКурьерика" Тогда
		
		Если Параметр = ПредопределенноеЗначение("Перечисление.СостоянияПодключенияСервисов.Подключен") Тогда
			ПараметрыОперации = СервисДоставкиКлиентСервер.НовыеПараметрыМенеджераДлительныхОпераций();
			ПараметрыОперации.Очередь.Добавить( , СервисДоставкиКлиентСервер.ИмяПроцедурыПолучитьСостояниеОпцииКурьерика());
			ВыполнитьЗапрос(ПараметрыОперации);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияСостояниеОпцияКурьерикаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ПодключитьТестовыйПериод" Тогда
		
		СтандартнаяОбработка = Ложь;
		СервисДоставкиКлиент.ПодключитьТестовыйПериодКурьерика();
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ОбновитьСостояние" Тогда
		
		СтандартнаяОбработка = Ложь;
		ПараметрыОперации = СервисДоставкиКлиентСервер.НовыеПараметрыМенеджераДлительныхОпераций();
		ПараметрыОперации.Очередь.Добавить( , СервисДоставкиКлиентСервер.ИмяПроцедурыПолучитьСостояниеОпцииКурьерика());
		ВыполнитьЗапрос(ПараметрыОперации);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокЗаказов

&НаКлиенте
Процедура СписокЗаказовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Идентификатор = СписокЗаказов.НайтиПоИдентификатору(ВыбраннаяСтрока).Значение;
	
	ПараметрыОткрытияФормы = СервисДоставкиКлиент.НовыйПараметрыОткрытьФормуСервисаДоставки();
	ПараметрыОткрытияФормы.ИмяФормы = СервисДоставкиКлиентСервер.ИмяФормыСервисаДоставки(ТипГрузоперевозки);
	ПараметрыОткрытияФормы.ТипГрузоперевозки = ТипГрузоперевозки;
	ПараметрыОткрытияФормы.ОрганизацияБизнесСети = Организация;
	ПараметрыОткрытияФормы.РежимМастера = СервисДоставкиКлиентСервер.РежимМастераЧерновик();
	ПараметрыОткрытияФормы.ИдентификаторЗаказа = Идентификатор;
	
	СервисДоставкиКлиент.ОткрытьФормуСервисаДоставки(ПараметрыОткрытияФормы);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Асинх Процедура ИгнорироватьИзменения(Команда)
	
	МассивИдентификаторов = ВыбранныеЗаказы();
	Если МассивИдентификаторов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Обещание = ВопросАсинх(
		СтрШаблон(
			НСтр("ru = 'Изменения товарного состава по выбранным заказам (%1) не будут отправлены в сервис. Продолжить?'"),
			Формат(МассивИдентификаторов.Количество(), НСтр("ru = 'ЧГ=;'"))),
		РежимДиалогаВопрос.ДаНет,,
		КодВозвратаДиалога.Нет);
	
	Ответ = Ждать Обещание;
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		ИгнорироватьИзмененияНаСервере(МассивИдентификаторов);
		ОбновитьЗаказы();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокЗаказов(Команда)
	
	ОбновитьЗаказы();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ДлительныеОперации

&НаКлиенте
Процедура ВыполнитьЗапрос(ПараметрыОперации)
	
	ИнтернетПоддержкаПодключена = Ложь;
	ВыполнитьЗапросВФоне(ИнтернетПоддержкаПодключена, ПараметрыОперации);
	
	Если ИнтернетПоддержкаПодключена = Ложь Тогда
		Оповещение = Новый ОписаниеОповещения("ВыполнитьЗапросПродолжение", ЭтотОбъект, ПараметрыОперации);
		ИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(Оповещение, ЭтотОбъект);
	Иначе
		ВыполнитьЗапросПродолжение(Истина, ПараметрыОперации);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗапросПродолжение(Результат, ДополнительныеПараметры) Экспорт
	
	ФоновоеЗадание = ДополнительныеПараметры.ФоновоеЗадание;
	
	Если Результат = Неопределено Тогда
		ТекстСообщения = НСтр("ru = 'Отсутствует подключение к Интернет-поддержке пользователей.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
	ИначеЕсли ТипЗнч(Результат) = Тип("Структура") Тогда
		// Повторный вызов метода после подключения к Интернет-поддержке.
		ИнтернетПоддержкаПодключена = Ложь;
		ВыполнитьЗапросВФоне(ИнтернетПоддержкаПодключена, ДополнительныеПараметры);
		ФоновоеЗадание = ДополнительныеПараметры.ФоновоеЗадание;
	КонецЕсли;
	
	Если ФоновоеЗадание = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ФоновоеЗадание.Статус = "Выполняется" Тогда
		ОжидатьЗавершениеВыполненияЗапроса(ДополнительныеПараметры);
	ИначеЕсли ФоновоеЗадание.Статус = "Выполнено" Тогда
		ВыполнитьЗапросЗавершение(ФоновоеЗадание, ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗапросВФоне(ИнтернетПоддержкаПодключена, ПараметрыОперации)
	
	Если Не СервисДоставки.ВозможенЗапускФоновогоЗадания(ЭтотОбъект, ПараметрыОперации, ИнтернетПоддержкаПодключена) Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Ложь;
	ПараметрыЗапроса = ПараметрыЗапроса(ПараметрыОперации, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СервисДоставки.ЗапуститьФоновоеЗадание(ЭтотОбъект, ПараметрыОперации, ПараметрыЗапроса);
	
КонецПроцедуры

&НаКлиенте
Процедура ОжидатьЗавершениеВыполненияЗапроса(ПараметрыОперации)
	
	ФоновоеЗадание = ПараметрыОперации.ФоновоеЗадание;
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения(ПараметрыОперации.ИмяПроцедурыЗавершения, ЭтотОбъект, ПараметрыОперации);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ЗаполнитьЗначенияСвойств(ПараметрыОжидания, ПараметрыОперации);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ФоновоеЗадание, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗавершениемДлительнойОперации(Результат, ДополнительныеПараметры)
	
	Очередь = ДополнительныеПараметры.Очередь;
	
	Для Каждого Операция Из Очередь Цикл
		
		ИмяМетода = Операция.Представление;
		
		Если ИмяМетода = СервисДоставкиКлиентСервер.ИмяПроцедурыПолучитьСостояниеОпцииКурьерика() Тогда
			
			Если Результат = Неопределено Тогда
				Модифицированность = Ложь;
				Закрыть();
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗапросЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ПередЗавершениемДлительнойОперации(Результат, ДополнительныеПараметры);
	
	Отказ = ТипЗнч(Результат) <> Тип("Структура");
	
	СервисДоставкиКлиент.ОбработатьРезультатФоновогоЗадания(Результат, ДополнительныеПараметры, Отказ);
	
	Если Отказ Или Результат.Статус <> "Выполнено" Или Не ЗначениеЗаполнено(Результат.АдресРезультата)
		Или Не ЭтоАдресВременногоХранилища(Результат.АдресРезультата) Тогда
		СервисДоставкиКлиент.ПослеЗавершенияДлительнойОперации(Результат, ДополнительныеПараметры);
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеПараметры.ОбработкаРезультатаНаСервере Тогда
		ОбработатьРезультатМенеджераДлительныхОпераций(Результат.АдресРезультата);
	КонецЕсли;
	
	СервисДоставкиКлиент.ПослеЗавершенияДлительнойОперации(Результат, ДополнительныеПараметры);
	
КонецПроцедуры

#Область ИнициализацияДлительныхОпераций

&НаСервере
Процедура ВыполнитьДлительныеОперации()
	
	ПараметрыОперации = СервисДоставкиКлиентСервер.НовыеПараметрыМенеджераДлительныхОпераций();
	ПараметрыОперации.ОбработкаРезультатаНаСервере = Истина;
	
	Если ТипГрузоперевозки = Перечисления.ТипыГрузоперевозки.Курьерика Тогда
		ПараметрыОперации.ТекстСообщения = НСтр("ru = 'Получение состояния опции Курьерика.'");
		ПараметрыОперации.Очередь.Добавить( , СервисДоставкиКлиентСервер.ИмяПроцедурыПолучитьСостояниеОпцииКурьерика());
	КонецЕсли;
	
	ВыполнитьЗапросВФоне(Ложь, ПараметрыОперации);
	Кэш = Новый Структура("ПараметрыМенеджераДлительныхОпераций", ПараметрыОперации);
	
КонецПроцедуры

#КонецОбласти

#Область ПараметрыДлительныхОпераций

&НаСервере
Функция ПараметрыЗапроса(ПараметрыОперации, Отказ)
	
	ПараметрыЗапроса = Новый Структура();
	
	Для Каждого Операция Из ПараметрыОперации.Очередь Цикл
		
		ИмяПроцедуры = Операция.Представление;
		
		Если ИмяПроцедуры = СервисДоставкиКлиентСервер.ИмяПроцедурыПолучитьСостояниеОпцииКурьерика() Тогда
			Операция.Значение = СервисДоставки.НовыйПараметрыЗапросаПолучитьСостояниеОпцииКурьерика();
		КонецЕсли;
		
	КонецЦикла;
	
	ПараметрыЗапроса.Вставить("Очередь", ПараметрыОперации.Очередь);
	ПараметрыЗапроса.Вставить("ТипГрузоперевозки", СервисДоставкиКлиентСервер.ТипГрузоперевозкиСервис1ССДЭК());
	ПараметрыЗапроса.Вставить("ОрганизацияБизнесСетиСсылка", Организация);
	
	Возврат ПараметрыЗапроса;
	
КонецФункции

#КонецОбласти

#Область РезультатыДлительныхОпераций

// Обрабатывает результат менеджера длительных операций на сервере.
// 
// Параметры:
//  АдресРезультата - Строка - Адрес результата
// 
// Возвращаемое значение:
//  Произвольный - Результат обработки
&НаСервере
Функция ОбработатьРезультатМенеджераДлительныхОпераций(АдресРезультата)
	
	РезультатМенеджера = ПолучитьИзВременногоХранилища(АдресРезультата);
	УдалитьИзВременногоХранилища(АдресРезультата);
	
	Очередь = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(РезультатМенеджера, "Очередь", Новый СписокЗначений);
	
	Для Каждого Операция Из Очередь Цикл
		
		ИмяМетода = Операция.Представление;
		Результат = Операция.Значение;
		
		Если ИмяМетода = СервисДоставкиКлиентСервер.ИмяПроцедурыПолучитьСостояниеОпцииКурьерика() Тогда
			
			ЗагрузитьРезультатПолучитьСостояниеОпцииКурьерика(Результат);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат РезультатМенеджера;
	
КонецФункции

&НаСервере
Процедура ЗагрузитьРезультатПолучитьСостояниеОпцииКурьерика(Результат)
	
	Если ЗначениеЗаполнено(Результат) И ТипЗнч(Результат) = Тип("Структура") Тогда
		
		Если СервисДоставки.ЕстьОшибки(Результат) Тогда
			Возврат;
		КонецЕсли;
		
		ОпцияДоступнаКурьерика = Результат.ОпцияДоступна;
		КомментарийОпцияКурьерика = Результат.Комментарий;
		БалансОпцияКурьерика = Результат.Баланс;
		СрокДействияОпцияКурьерика = Результат.СрокДействияОпцияКурьерика;
		
		Если Не ОпцияДоступнаКурьерика Тогда
			ДоступенТестовыйПериод = Результат.ДоступенТестовыйПериод;
		КонецЕсли;
		
		СервисДоставкиВызовСервера.УстановитьЗаголовокОпцияКурьерика(ЭтотОбъект);
		УстановитьДоступностьЭлементовПоЗначениюОпции();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

&НаСервере
Процедура ИгнорироватьИзмененияНаСервере(МассивИдентификаторов)
	
	СервисДоставки.УстановитьПризнакИзмененияЗаказов("ИдентификаторДокумента", МассивИдентификаторов, Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЗаказы()
	
	СписокЗаказов.Очистить();
	
	ПараметрыОтбораЗаказов = Новый Структура();
	ПараметрыОтбораЗаказов.Вставить("ТипГрузоперевозки", ТипГрузоперевозки);
	ПараметрыОтбораЗаказов.Вставить("Организация", Организация);
	
	ОбщегоНазначенияКлиентСервер.ДополнитьСписок(СписокЗаказов,
		РегистрыСведений.ЖурналЗаказовСервисДоставки.ЗаказыКПовторнойОтправке(ПараметрыОтбораЗаказов));
	
КонецПроцедуры

&НаКлиенте
Функция ВыбранныеЗаказы()
	
	МассивИдентификаторов = Новый Массив;
	
	Для Каждого ЭлементСписка Из СписокЗаказов Цикл
		
		Если ЭлементСписка.Пометка Тогда
			МассивИдентификаторов.Добавить(ЭлементСписка.Значение);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат МассивИдентификаторов;
	
КонецФункции

&НаСервере
Процедура УстановитьДоступностьЭлементовПоЗначениюОпции()
	
	Элементы.ГруппаПодпискаНаСервис.Видимость = ОтображатьУведомлениеПоОпцииКурьерика;
	
КонецПроцедуры

#КонецОбласти
