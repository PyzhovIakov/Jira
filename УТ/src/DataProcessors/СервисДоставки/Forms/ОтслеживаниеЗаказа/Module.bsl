
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ТипГрузоперевозки", ТипГрузоперевозки);
	Параметры.Свойство("ОрганизацияБизнесСетиСсылка", ОрганизацияБизнесСетиСсылка);
	
	Если СервисДоставки.НедоступнаРаботаСФормой(ЭтотОбъект, Отказ) Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьФормуПоТипуГрузоперевозки();
	
	АвтоНавигационнаяСсылка = Ложь;
	НавигационнаяСсылка = "e1cib/command/" + СтрЗаменить(ИмяФормы, "Форма", "Команда");
	
	Параметры.Свойство("ТрекНомер", ТрекНомер);
	Параметры.Свойство("ИдентификаторЗаказа", ИдентификаторЗаказа);
	
	УстановитьВидимостьДоступность();
	
	ВыполнитьДлительныеОперации();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(Кэш.ПараметрыМенеджераДлительныхОпераций.ФоновоеЗадание) Тогда
		ОжидатьЗавершениеВыполненияЗапроса(Кэш.ПараметрыМенеджераДлительныхОпераций);
		Кэш.Удалить("ПараметрыМенеджераДлительныхОпераций");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КарточкаЗаказаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	
	СтандартнаяОбработка = Ложь;
	
	Если Расшифровка = "Грузоперевозчик" Тогда
		
		ОткрытьФормуГрузоперевозчика();
		
	ИначеЕсли Расшифровка = "Тариф" Тогда
		
		ОткрытьФормуТарифа();
		
	ИначеЕсли Расшифровка = "ТочкаОтправления" Тогда
		
		Если ТочкаОтправленияИдентификатор <> "" Тогда
			ОткрытьФормуТерминала(ТочкаОтправленияИдентификатор);
		КонецЕсли;
		
	ИначеЕсли Расшифровка = "ТочкаНазначения" Тогда
		
		Если ТочкаНазначенияИдентификатор <> "" Тогда
			ОткрытьФормуТерминала(ТочкаНазначенияИдентификатор);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура НайтиЗаказПоТрекНомеру(Команда)
	
	ОчиститьСообщения();
	
	Если ЗначениеЗаполнено(ТрекНомер) Тогда
		
		Если СтрДлина(ТрекНомер) > 5 Тогда
			
			ОчиститьРеквизитыФормы();
			
			ПараметрыОперации = СервисДоставкиКлиентСервер.НовыеПараметрыМенеджераДлительныхОпераций();
			ПараметрыОперации.ОбработкаРезультатаНаСервере = Истина;
			ПараметрыОперации.ВыводитьОкноОжидания = Ложь;
			ПараметрыОперации.ТекстСообщения = НСтр("ru = 'Получение данных по заказу'");
			
			ПараметрыОперации.Очередь.Добавить( , СервисДоставкиКлиентСервер.ИмяПроцедурыПолучитьГрафикДвиженияЗаказаПоТрекНомеру());
			
			ВыполнитьЗапрос(ПараметрыОперации);
			
		Иначе
			
			ТекстОшибки = НСтр("ru = 'Трек-номер должен быть больше 5 символов.'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки, , Элементы.ТрекНомер);
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ДлительныеОперации

&НаКлиенте
Процедура ВыполнитьЗапрос(ПараметрыОперации)
	
	ИнтернетПоддержкаПодключена = Ложь;
	ВыполнитьЗапросВФоне(ИнтернетПоддержкаПодключена, ПараметрыОперации);
	
	Если ИнтернетПоддержкаПодключена = Ложь Тогда
		Оповещение = Новый ОписаниеОповещения("ВыполнитьЗапросПродолжение", ЭтотОбъект, ПараметрыОперации);
		ИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(Оповещение, ЭтотОбъект);
	Иначе
		ВыполнитьЗапросПродолжение(Истина, ПараметрыОперации);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗапросПродолжение(Результат, ДополнительныеПараметры) Экспорт
	
	ФоновоеЗадание = ДополнительныеПараметры.ФоновоеЗадание;
	
	Если Результат = Неопределено Тогда
		ТекстСообщения = НСтр("ru = 'Отсутствует подключение к Интернет-поддержке пользователей.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
	ИначеЕсли ТипЗнч(Результат) = Тип("Структура") Тогда
		// Повторный вызов метода после подключения к Интернет-поддержке.
		ИнтернетПоддержкаПодключена = Ложь;
		ВыполнитьЗапросВФоне(ИнтернетПоддержкаПодключена, ДополнительныеПараметры);
		ФоновоеЗадание = ДополнительныеПараметры.ФоновоеЗадание;
	КонецЕсли;
	
	Если ФоновоеЗадание = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ФоновоеЗадание.Статус = "Выполняется" Тогда
		ОжидатьЗавершениеВыполненияЗапроса(ДополнительныеПараметры);
	ИначеЕсли ФоновоеЗадание.Статус = "Выполнено" Тогда
		ВыполнитьЗапросЗавершение(ФоновоеЗадание, ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗапросВФоне(ИнтернетПоддержкаПодключена, ПараметрыОперации)
	
	Если Не СервисДоставки.ВозможенЗапускФоновогоЗадания(ЭтотОбъект, ПараметрыОперации, ИнтернетПоддержкаПодключена) Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Ложь;
	ПараметрыЗапроса = ПараметрыЗапроса(ПараметрыОперации, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СервисДоставки.ЗапуститьФоновоеЗадание(ЭтотОбъект, ПараметрыОперации, ПараметрыЗапроса);
	
КонецПроцедуры

&НаКлиенте
Процедура ОжидатьЗавершениеВыполненияЗапроса(ПараметрыОперации)
	
	ФоновоеЗадание = ПараметрыОперации.ФоновоеЗадание;
	
	Если Не ПараметрыОперации.ВыводитьОкноОжидания Тогда
		
		Для Каждого Операция Из ФоновоеЗадание.Очередь Цикл
			
			ИмяМетода = Операция.Представление;
			
			Если ИмяМетода = СервисДоставкиКлиентСервер.ИмяПроцедурыПолучитьГрафикДвиженияЗаказа()
				Или ИмяМетода = СервисДоставкиКлиентСервер.ИмяПроцедурыПолучитьГрафикДвиженияЗаказаПоТрекНомеру() Тогда
				
				Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаОжиданиеЗагрузки;
				
			КонецЕсли;
		
		КонецЦикла;
		
	КонецЕсли;
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения(ПараметрыОперации.ИмяПроцедурыЗавершения, ЭтотОбъект, ПараметрыОперации);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ЗаполнитьЗначенияСвойств(ПараметрыОжидания, ПараметрыОперации);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ФоновоеЗадание, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗавершениемДлительнойОперации(Результат, ДополнительныеПараметры)
	
	Очередь = ДополнительныеПараметры.Очередь;
	
	Для Каждого Операция Из Очередь Цикл
		
		ИмяМетода = Операция.Представление;
		
		Если ИмяМетода = СервисДоставкиКлиентСервер.ИмяПроцедурыПолучитьГрафикДвиженияЗаказа()
			Или ИмяМетода = СервисДоставкиКлиентСервер.ИмяПроцедурыПолучитьГрафикДвиженияЗаказаПоТрекНомеру() Тогда
				
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаОсновная;
				
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗапросЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ПередЗавершениемДлительнойОперации(Результат, ДополнительныеПараметры);
	
	Отказ = ТипЗнч(Результат) <> Тип("Структура");
	
	СервисДоставкиКлиент.ОбработатьРезультатФоновогоЗадания(Результат, ДополнительныеПараметры, Отказ);
	
	Если Отказ Или Результат.Статус <> "Выполнено" Или Не ЗначениеЗаполнено(Результат.АдресРезультата)
		Или Не ЭтоАдресВременногоХранилища(Результат.АдресРезультата) Тогда
		СервисДоставкиКлиент.ПослеЗавершенияДлительнойОперации(Результат, ДополнительныеПараметры);
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеПараметры.ОбработкаРезультатаНаСервере Тогда
		ОбработатьРезультатМенеджераДлительныхОпераций(Результат.АдресРезультата);
	КонецЕсли;
	
КонецПроцедуры

#Область ИнициализацияДлительныхОпераций

&НаСервере
Процедура ВыполнитьДлительныеОперации()
	
	ПараметрыОперации = СервисДоставкиКлиентСервер.НовыеПараметрыМенеджераДлительныхОпераций();
	ПараметрыОперации.ОбработкаРезультатаНаСервере = Истина;
	ПараметрыОперации.ВыводитьОкноОжидания = Ложь;
	ПараметрыОперации.ТекстСообщения = НСтр("ru = 'Получение данных по заказу'");
	
	Если ИдентификаторЗаказа <> "" Тогда
		ПараметрыОперации.Очередь.Добавить( , СервисДоставкиКлиентСервер.ИмяПроцедурыПолучитьГрафикДвиженияЗаказа());
	ИначеЕсли ТрекНомер <> "" Тогда
		ПараметрыОперации.Очередь.Добавить( , СервисДоставкиКлиентСервер.ИмяПроцедурыПолучитьГрафикДвиженияЗаказаПоТрекНомеру());
	КонецЕсли;
	
	ВыполнитьЗапросВФоне(Ложь, ПараметрыОперации);
	Кэш = Новый Структура("ПараметрыМенеджераДлительныхОпераций", ПараметрыОперации);
	
КонецПроцедуры

#КонецОбласти

#Область ПараметрыДлительныхОпераций

&НаСервере
Функция ПараметрыЗапроса(ПараметрыОперации, Отказ)
	
	ПараметрыЗапроса = Новый Структура;
	
	Для Каждого Операция Из ПараметрыОперации.Очередь Цикл
		
		ИмяМетода = Операция.Представление;
	
		Если ИмяМетода = СервисДоставкиКлиентСервер.ИмяПроцедурыПолучитьГрафикДвиженияЗаказа() Тогда
			Операция.Значение = ПараметрыЗапросаПолучитьГрафикДвиженияЗаказа(ПараметрыОперации, Отказ);
		ИначеЕсли ИмяМетода = СервисДоставкиКлиентСервер.ИмяПроцедурыПолучитьГрафикДвиженияЗаказаПоТрекНомеру() Тогда
			Операция.Значение = ПараметрыЗапросаПолучитьГрафикДвиженияЗаказаПоТрекНомеру(ПараметрыОперации, Отказ);
		КонецЕсли;
		
	КонецЦикла;
	
	ПараметрыЗапроса.Вставить("Очередь", ПараметрыОперации.Очередь);
	ПараметрыЗапроса.Вставить("ТипГрузоперевозки", ТипГрузоперевозки);
	ПараметрыЗапроса.Вставить("ОрганизацияБизнесСетиСсылка", ОрганизацияБизнесСетиСсылка);
	
	Возврат ПараметрыЗапроса;
	
КонецФункции

&НаСервере
Функция ПараметрыЗапросаПолучитьГрафикДвиженияЗаказа(ПараметрыОперации, Отказ)
	
	ПараметрыЗапроса = СервисДоставки.НовыйПараметрыЗапросаПолучитьГрафикДвиженияЗаказа();
	ПараметрыЗапроса.Вставить("ИдентификаторЗаказа", ИдентификаторЗаказа);
	
	Возврат ПараметрыЗапроса;
	
КонецФункции

&НаСервере
Функция ПараметрыЗапросаПолучитьГрафикДвиженияЗаказаПоТрекНомеру(ПараметрыОперации, Отказ)
	
	ПараметрыЗапроса = СервисДоставки.НовыйПараметрыЗапросаПолучитьГрафикДвиженияЗаказаПоТрекНомеру();
	ПараметрыЗапроса.Вставить("ТрекНомер", ТрекНомер);
	ПараметрыЗапроса.Вставить("ГрузоперевозчикИдентификатор", ГрузоперевозчикИдентификатор);
	
	Возврат ПараметрыЗапроса;
	
КонецФункции

#КонецОбласти

#Область РезультатыДлительныхОпераций

// Обрабатывает результат менеджера длительных операций на сервере.
// 
// Параметры:
//  АдресРезультата - Строка - Адрес результата
// 
// Возвращаемое значение:
//  Произвольный - Результат обработки
&НаСервере
Функция ОбработатьРезультатМенеджераДлительныхОпераций(АдресРезультата)
	
	РезультатМенеджера = ПолучитьИзВременногоХранилища(АдресРезультата);
	УдалитьИзВременногоХранилища(АдресРезультата);
	
	Очередь = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(РезультатМенеджера, "Очередь", Новый СписокЗначений);
	
	Для Каждого Операция Из Очередь Цикл
		
		ИмяМетода = Операция.Представление;
		Результат = Операция.Значение;
		ОперацияВыполнена = Истина;
		
		Если ИмяМетода = СервисДоставкиКлиентСервер.ИмяПроцедурыПолучитьГрафикДвиженияЗаказа()
			Или ИмяМетода = СервисДоставкиКлиентСервер.ИмяПроцедурыПолучитьГрафикДвиженияЗаказаПоТрекНомеру() Тогда
			
			ЗагрузитьРезультатЗапросаПолучитьГрафикДвиженияЗаказа(Результат, ОперацияВыполнена);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат РезультатМенеджера;
	
КонецФункции

&НаСервере
Процедура ЗагрузитьРезультатЗапросаПолучитьГрафикДвиженияЗаказа(Результат, ОперацияВыполнена)
	
	Если ЗначениеЗаполнено(Результат) И ТипЗнч(Результат) = Тип("Структура") Тогда
		
		Если СервисДоставки.ЕстьОшибки(Результат, ОперацияВыполнена) Тогда
			Возврат;
		КонецЕсли;
		
		ДанныеЗаказа = Результат.Данные;
		ОбработатьПараметры(ДанныеЗаказа);
		
		ЗаказПредставление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Заказ на доставку № %1 от %2'"),
			НомерЗаказа,
			Формат(ДатаЗаказа, "ДЛФ=D"));
		
		Если ДанныеЗаказа.Свойство("ГрафикДвиженияЗаказа") Тогда
			
			Список.Очистить();
			
			Для Каждого ТекущаяСтрока Из ДанныеЗаказа.ГрафикДвиженияЗаказа Цикл
				
				НоваяСтрока = Список.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
				
				ДатаПредставление = Формат(НоваяСтрока.Дата, "ДЛФ=D");
				
				Если НоваяСтрока.Дата < НоваяСтрока.ДатаМаксимальная Тогда
					ДатаПредставление = ДатаПредставление + " - " + Формат(НоваяСтрока.ДатаМаксимальная, "ДЛФ=D");
				КонецЕсли;
				
				НоваяСтрока.ДатаПредставление = ДатаПредставление;
				
				МестоположениеПредставление = "";
				
				Если ЗначениеЗаполнено(НоваяСтрока.МестоположениеИдентификатор) Тогда
					МестоположениеПредставление = НоваяСтрока.МестоположениеНаименование;
				ИначеЕсли ЗначениеЗаполнено(НоваяСтрока.МестоположениеНаименование) Тогда
					МестоположениеПредставление = НоваяСтрока.МестоположениеНаименование;
					МестоположениеПредставление = МестоположениеПредставление
						+ " (" + НоваяСтрока.МестоположениеАдрес + ")";
				ИначеЕсли ЗначениеЗаполнено(НоваяСтрока.МестоположениеАдрес) Тогда
					МестоположениеПредставление = НоваяСтрока.МестоположениеАдрес;
				КонецЕсли;
				
				НоваяСтрока.МестоположениеПредставление = МестоположениеПредставление;
				НоваяСтрока.ФактКартинка = ?(НоваяСтрока.ЭтоФакт, 1, 0);
				
			КонецЦикла;
			
		КонецЕсли;
		
		СформироватьКарточкуЗаказа();

	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Прочее

&НаСервере
Процедура ОбработатьПараметры(Параметры)
	
	ПараметрыДляФормы = Новый Структура;
	СервисДоставкиКлиентСервер.ЗаполнитьЛинейныеДанныеПоСтруктуре(Параметры, ПараметрыДляФормы, "");
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ПараметрыДляФормы,,"ТрекНомер, ТипГрузоперевозки");
	ТрекНомер = ?(ТрекНомер = "", ПараметрыДляФормы.ТрекНомер, ТрекНомер);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуТерминала(МестоположениеИдентификатор)
	
	Если Не ЗначениеЗаполнено(МестоположениеИдентификатор) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытияФормы = Новый Структура;
	
	ПараметрыОткрытияФормы.Вставить("Идентификатор", МестоположениеИдентификатор);
	ПараметрыОткрытияФормы.Вставить("ОрганизацияБизнесСетиСсылка", ОрганизацияБизнесСетиСсылка);
	ПараметрыОткрытияФормы.Вставить("ТипГрузоперевозки", ТипГрузоперевозки);
	
	ОткрытьФорму(
		"Обработка.СервисДоставки.Форма.КарточкаТерминала",
		ПараметрыОткрытияФормы,
		ЭтотОбъект,,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуГрузоперевозчика()
	
	ПараметрыОткрытияФормы = Новый Структура();
	ПараметрыОткрытияФормы.Вставить("Идентификатор", ГрузоперевозчикИдентификатор);
	ПараметрыОткрытияФормы.Вставить("ОрганизацияБизнесСетиСсылка", ОрганизацияБизнесСетиСсылка);
	ПараметрыОткрытияФормы.Вставить("ТипГрузоперевозки", ТипГрузоперевозки);
	
	ОткрытьФорму("Обработка.СервисДоставки.Форма.КарточкаГрузоперевозчика", 
		ПараметрыОткрытияФормы,
		,
		ГрузоперевозчикИдентификатор,,,,
		РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуТарифа()
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("Идентификатор", ТарифИдентификатор);
	ПараметрыОткрытияФормы.Вставить("ОрганизацияБизнесСетиСсылка", ОрганизацияБизнесСетиСсылка);
	ПараметрыОткрытияФормы.Вставить("ТипГрузоперевозки", ТипГрузоперевозки);
	
	ОткрытьФорму("Обработка.СервисДоставки.Форма.КарточкаТарифа", ПараметрыОткрытияФормы, , ТарифИдентификатор, , , ,
		РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДоступность()
	
	Элементы.ГруппаШапка.Видимость = (ИдентификаторЗаказа = "");
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьРеквизитыФормы()
	
	ОчиститьРеквизитыФормыНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьРеквизитыФормыНаСервере()
	
	ПараметрыЗаказа = СервисДоставки.НовыйПараметрыОтветаПолучитьГрафикДвиженияЗаказа();
	ОбработатьПараметры(ПараметрыЗаказа);
	ЗаказПредставление = "";
	КарточкаЗаказа.Очистить();
	Список.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьКарточкуЗаказа()
	
	КарточкаЗаказа = ТабличныйДокументКарточкаЗаказа();
	
КонецПроцедуры

&НаСервере
Функция ТабличныйДокументКарточкаЗаказа()
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Макет = Обработки.СервисДоставки.ПолучитьМакет("ОтслеживаниеЗаказа");
	
	Если Заблокирован Тогда
		ОбластьМакетаЗаголовокБлокировки = Макет.ПолучитьОбласть("ЗаголовокБлокировки");
		ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокБлокировки);
	КонецЕсли;
	
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
	
	ПараметрыОбласти = ОбластьМакетаШапка.Параметры;
	
	ПараметрыОбласти.ЗаказПредставление = Новый ФорматированнаяСтрока(ЗаказПредставление, , , ,
		СервисДоставкиКлиентСервер.АдресСтраницыЗаказаНаДоставку(ТипГрузоперевозки, ТрекНомер));
	ПараметрыОбласти.Состояние = Состояние;
	ПараметрыОбласти.ГрузоперевозчикНаименование = ГрузоперевозчикНаименование;
	ПараметрыОбласти.РасшифровкаГрузоперевозчик = "Грузоперевозчик";
	ПараметрыОбласти.ТарифНаименование = ?(ТарифНаименование = "",НСтр("ru='<не указан>'"),ТарифНаименование);
	ПараметрыОбласти.РасшифровкаТариф = "Тариф";
	ПараметрыОбласти.ТрекНомер = ТрекНомер;
	ПараметрыОбласти.ДатаИВремяОформления = Формат(ДатаСозданияЗаказа, "ДЛФ=DT");
	
	ПараметрыОбласти.ТочкаОтправленияГород = ТочкаОтправленияГород;
	ПараметрыОбласти.СпособОтгрузки = СпособОтгрузкиНаименование;
	
	Если ТочкаОтправленияТипИдентификатор = 4 Или СпособОтгрузкиИдентификатор = 2 Тогда
		ПараметрыОбласти.ТочкаОтправленияНаименование = ?(ТочкаОтправленияАдрес = "", НСтр("ru='<не указан>'"),
			ТочкаОтправленияАдрес);
	Иначе
		ПараметрыОбласти.ТочкаОтправленияНаименование = ?(ТочкаОтправленияНаименование = "", НСтр("ru='<не указан>'"),
			ТочкаОтправленияНаименование);
	КонецЕсли;
	
	ПараметрыОбласти.ТочкаОтправленияТипНаименование = ?(ТочкаОтправленияТипНаименование = "", НСтр("ru='Адрес'"),
		ТочкаОтправленияТипНаименование);
	
	ПараметрыОбласти.РасшифровкаТочкаОтправления = "ТочкаОтправления";
	ПараметрыОбласти.ТочкаОтправленияТелефон = ?(ТочкаОтправленияТелефон = "", ГрузоперевозчикТелефон,
		ТочкаОтправленияТелефон);
	
	ПараметрыОбласти.ТочкаНазначенияГород = ТочкаНазначенияГород;
	ПараметрыОбласти.СпособДоставки = СпособДоставкиНаименование;
	
	Если ТочкаНазначенияТипИдентификатор = 4 Или СпособДоставкиИдентификатор = 2 Тогда
		ПараметрыОбласти.ТочкаНазначенияНаименование = ?(ТочкаНазначенияАдрес = "", НСтр("ru='<не указан>'"),
			ТочкаНазначенияАдрес);
	Иначе
		ПараметрыОбласти.ТочкаНазначенияНаименование = ?(ТочкаНазначенияНаименование = "", НСтр("ru='<не указан>'"),
			ТочкаНазначенияНаименование);
	КонецЕсли;
	
	ПараметрыОбласти.ТочкаНазначенияТипНаименование = ?(ТочкаНазначенияТипНаименование = "", НСтр("ru='Адрес'"),
		ТочкаНазначенияТипНаименование);
	ПараметрыОбласти.РасшифровкаТочкаНазначения = "ТочкаНазначения";
	ПараметрыОбласти.ТочкаНазначенияТелефон = ?(ТочкаНазначенияТелефон = "", ГрузоперевозчикТелефон,
		ТочкаНазначенияТелефон);
	
	ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
	
	Если ДополнительнаяИнформация <> "" Тогда
		ОбластьМакетаДополнительнаяИнформация = Макет.ПолучитьОбласть("ДополнительнаяИнформация");
		ОбластьМакетаДополнительнаяИнформация.Параметры.Комментарий = ДополнительнаяИнформация;
		ТабличныйДокумент.Вывести(ОбластьМакетаДополнительнаяИнформация);
	КонецЕсли;

	ОбластьМакетаГрафикЗаголовок = Макет.ПолучитьОбласть("ГрафикЗаголовок");
	ТабличныйДокумент.Вывести(ОбластьМакетаГрафикЗаголовок);
	
	ОбластьМакетаГрафикСтрокаФакт = Макет.ПолучитьОбласть("ГрафикСтрокаФакт");
	ОбластьМакетаГрафикСтрокаПлан = Макет.ПолучитьОбласть("ГрафикСтрокаПлан");
	
	Для Каждого ТекущаяСтрока Из Список Цикл
		
		Если ТекущаяСтрока.ЭтоФакт Тогда
			ТекущаяОбласть = ОбластьМакетаГрафикСтрокаФакт;
		Иначе
			ТекущаяОбласть = ОбластьМакетаГрафикСтрокаПлан;
		КонецЕсли;
		
		ТекущаяОбласть.Параметры.ДатаПредставление = ТекущаяСтрока.ДатаПредставление;
		ТекущаяОбласть.Параметры.Состояние = ТекущаяСтрока.СостояниеНаименование;
		ТекущаяОбласть.Параметры.МестоположениеГород = ТекущаяСтрока.МестоположениеГород;
		
		ТекущаяОбласть.Параметры.МестоположениеПредставление = ?(ТекущаяОбласть.Параметры.МестоположениеГород = "",
			НСтр("ru='<не указано>'"), "");
		
		ТекущаяОбласть.Параметры.МестоположениеТипПредставление = "";
		
		Если ТекущаяСтрока.МестоположениеПредставление <> "" Тогда
			Если ТекущаяСтрока.МестоположениеТипНаименование <> "" Тогда
				ТекущаяОбласть.Параметры.МестоположениеТипПредставление = ТекущаяСтрока.МестоположениеТипНаименование + ":";
			КонецЕсли;
			ТекущаяОбласть.Параметры.МестоположениеПредставление = ТекущаяСтрока.МестоположениеПредставление;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ТекущаяОбласть);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

&НаСервере
Процедура НастроитьФормуПоТипуГрузоперевозки()
	
	Заголовок = СтрШаблон(НСтр("ru = '%1: Трекер заказов'"),
		СервисДоставкиКлиентСервер.ПредставлениеТипаГрузоперевозки(ТипГрузоперевозки));
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
