
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.СтруктураФильтра);
	
	УстановитьПараметрыВыбора();
	
	ОбновитьПредставлениеПериода();
	
	Если Не ПолучитьФункциональнуюОпцию("CRM_ИспользоватьТеги") Тогда
		Элементы.ГруппаТэги.Видимость = Ложь;
	Иначе
		ТекущийПользователь = Пользователи.ТекущийПользователь();
		Если ТипЗнч(ТекущийПользователь) = Тип("СправочникСсылка.Пользователи") Тогда
			ОтборПодразделениеДляТегов = ТекущийПользователь.Подразделение;
			СписокВышестоящихПодразделений.ЗагрузитьЗначения(
				CRM_МетодыМодулейМенеджеровСправочников.ПолучитьВсеПодразделенияРодители(ОтборПодразделениеДляТегов, Истина));
			ОбновитьЗначенияОтбораТеговСервер();
		КонецЕсли;
	КонецЕсли;
	
	CRM_СоздатьКнопкиРежимФильтра();
	
	Если Параметры.СтруктураФильтра.Свойство("НастройкиКомпоновки")
		 И Параметры.СтруктураФильтра.НастройкиКомпоновки <> Неопределено Тогда
		РежимФильтра = 1;
		ПокраситьКнопкиРежимФильтраНаСервере();
		Элементы.ГруппаПростыеНастройки.Видимость = Ложь;
		Элементы.ГруппаРасширенныеНастройки.Видимость = Истина;
		ИнициализацияКомпоновки();
		Компоновщик.ЗагрузитьНастройки(Параметры.СтруктураФильтра.НастройкиКомпоновки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если РежимФильтра = 0 Тогда
		CRM_Простой(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ПослеСозданияТега" И (Источник = Элементы.Тег) Тогда
		Тег = Параметр;
		ДобавитьТег();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#Область Период

&НаКлиенте
Процедура ПредставлениеПериодаНажатие(Элемент)

	Оповещение = Новый ОписаниеОповещения("ПредставлениеПериодаНажатиеЗавершение", ЭтотОбъект);
	
	Диалог = Новый ДиалогРедактированияСтандартногоПериода;
	Диалог.Период = Период;
	Диалог.Показать(Оповещение); 
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеПериодаНажатиеЗавершение(НовыйПериод, ДополнительныеДанные) Экспорт
	
	Если НовыйПериод = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(НовыйПериод) = Тип("СтандартныйПериод") Тогда
		Период = НовыйПериод;
	ИначеЕсли ТипЗнч(НовыйПериод) = Тип("Дата") Тогда
		Период.ДатаНачала = '0001-01-01';
		Период.ДатаОкончания = НовыйПериод;
		Период.Вариант = ВариантСтандартногоПериода.ПроизвольныйПериод;
	КонецЕсли;
	
	ПериодПриИзмененииСервер();
	
КонецПроцедуры

&НаСервере
Процедура ПериодПриИзмененииСервер()
	ОбновитьПредставлениеПериода();
КонецПроцедуры

&НаСервере
Процедура ОбновитьПредставлениеПериода()
	
	Если НЕ Элементы.ПредставлениеПериодаКнопка.Видимость Тогда
		Возврат;
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(Период.ДатаНачала) И НЕ ЗначениеЗаполнено(Период.ДатаОкончания) Тогда
		ПредставлениеПериода = НСтр("ru='за все время';en='For All Time'");
	//ИначеЕсли Элементы.ПредставлениеПериода.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет Тогда
	//	ПредставлениеПериода = НСтр("ru='за ';en='for '")
		//+НРег(ПредставлениеПериода(Отчет.Период.ДатаНачала,
		// КонецДня(Период.ДатаОкончания)));
	Иначе
		ПредставлениеПериода = НРег(ПредставлениеПериода(НачалоДня(Период.ДатаНачала),
			 ?(ЗначениеЗаполнено(Период.ДатаОкончания), КонецДня(Период.ДатаОкончания),
			 Период.ДатаОкончания)));
	КонецЕсли;
	
	Элементы.ПредставлениеПериодаКнопка.Заголовок = ПредставлениеПериода;
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ОтветственныйПриИзменении(Элемент)
	
	Если Ответственный = Неопределено Тогда
		Ответственный = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка");
	КонецЕсли;
	
	ВыбранПользователь = (ТипЗнч(Ответственный) = Тип("СправочникСсылка.Пользователи"));
	
	Если ВыбранПользователь Тогда
		
		УстановитьПараметрыВыбора();
		
	Иначе
		
		Элементы.Ответственный.ПараметрыВыбора = Новый ФиксированныйМассив(Новый Массив);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события "Создание" элемента формы "Тег".
//
// Параметры:
//  Элемент                   - тег, для которого обрабатывается событие.
//  СтандартнаяОбработка      - Булево - признак стандартной обработки события.
//
Процедура ТегСоздание(Элемент, СтандартнаяОбработка)
	CRM_ТегиКлиент.ТегСоздание(Элемент, СтандартнаяОбработка, ОтборПодразделениеДляТегов);
	ДобавитьТег();
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события "ПриИзменении" элемента формы "Тег".
//
// Параметры:
//  Элемент                   - тег, для которого обрабатывается событие.
//
Процедура ТегПриИзменении(Элемент)
	ДобавитьТег();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Применить(Команда)
	
	Закрыть(ПолучитьСтруктуруФильтра());
	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	
	ОчиститьНаСервере();
		
	Если Элементы.ГруппаРасширенныеНастройки.Видимость Тогда
		ИнициализацияКомпоновки();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура CRM_Простой(Команда)
	
	РежимФильтра = 0;
	ПокраситьКнопкиРежимФильтраНаСервере();
	
	Элементы.ГруппаПростыеНастройки.Видимость = Истина;
	Элементы.ГруппаРасширенныеНастройки.Видимость = Ложь;
	ЗаполнитьПоляФильтраПоОтборуКомпоновщика();

КонецПроцедуры

&НаКлиенте
Процедура CRM_Расширенный(Команда)
	
	РежимФильтра = 1;
	ПокраситьКнопкиРежимФильтраНаСервере();
	
	Элементы.ГруппаПростыеНастройки.Видимость = Ложь;
	Элементы.ГруппаРасширенныеНастройки.Видимость = Истина;
	ЗаполнитьОтборКомпоновщика();
	
КонецПроцедуры

&НаКлиенте
Процедура ТегОтборОчистить(Команда)
	Подключаемый_ТегОтборНажатие(Элементы.Тег_Очистить, Ложь);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализацияКомпоновки()

	СхемаКомпоновкиДанных = Обработки.CRM_МенеджерПочты.ПолучитьМакет("МакетФильтра");

	ХранилищеСхемы = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, УникальныйИдентификатор);
    Компоновщик.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(ХранилищеСхемы));
    Компоновщик.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоляФильтраПоОтборуКомпоновщика()
	
	Если Компоновщик.Настройки.Отбор.Элементы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьНаСервере();
	
	Для Каждого ЭлементОтбора Из Компоновщик.Настройки.Отбор.Элементы Цикл
		
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			
			Если ЭлементОтбора.Использование Тогда
				ЭтотОбъект[ЭлементОтбора.Представление] = ЭлементОтбора.ПравоеЗначение;
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(ЭлементОтбора) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда
		
			Для Каждого ЭлементОтбораГруппы Из ЭлементОтбора.Элементы Цикл
				Если ЭлементОтбораГруппы.Использование Тогда
					ЭтотОбъект[ЭлементОтбораГруппы.Представление] = ЭлементОтбораГруппы.ПравоеЗначение;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОтборКомпоновщика()
	
	ИнициализацияКомпоновки();
	
	Для Каждого ЭлементОтбора Из Компоновщик.Настройки.Отбор.Элементы Цикл
		
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			
			Если ЗначениеЗаполнено(ЭтотОбъект[ЭлементОтбора.Представление]) Тогда
				ЭлементОтбора.ПравоеЗначение = ЭтотОбъект[ЭлементОтбора.Представление];
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(ЭлементОтбора) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда
		
			Для Каждого ЭлементОтбораГруппы Из ЭлементОтбора.Элементы Цикл
				Если ЗначениеЗаполнено(ЭтотОбъект[ЭлементОтбораГруппы.Представление]) Тогда
					ЭлементОтбораГруппы.ПравоеЗначение = ЭтотОбъект[ЭлементОтбораГруппы.Представление];
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруФильтра()
	
	СтруктураФильтра = Новый Структура;
	
	СтруктураФильтра.Вставить("ОтборТеги", ОтборТеги);
	СтруктураФильтра.Вставить("Период", Период);
	
	Если Элементы.ГруппаПростыеНастройки.Видимость Тогда
		СтруктураФильтра.Вставить("Отправитель", Отправитель);
		СтруктураФильтра.Вставить("Получатель", Получатель);
		СтруктураФильтра.Вставить("Тема", Тема);
		СтруктураФильтра.Вставить("ТекстПисьма", ТекстПисьма);	
		СтруктураФильтра.Вставить("Ответственный", Ответственный);
		СтруктураФильтра.Вставить("НастройкиКомпоновки", Неопределено);
	КонецЕсли;
	
	Если Элементы.ГруппаРасширенныеНастройки.Видимость Тогда
		
		Для Каждого ЭлементОтбора Из Компоновщик.Настройки.Отбор.Элементы Цикл
		
			Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
				
				Если ЭлементОтбора.Использование Тогда
					СтруктураФильтра.Вставить(ЭлементОтбора.Представление, ЭлементОтбора.ПравоеЗначение);
				Иначе
					СтруктураФильтра.Вставить(ЭлементОтбора.Представление);
				КонецЕсли;
				
			ИначеЕсли ТипЗнч(ЭлементОтбора) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда
			
				Для Каждого ЭлементОтбораГруппы Из ЭлементОтбора.Элементы Цикл
					Если ЭлементОтбораГруппы.Использование Тогда
						СтруктураФильтра.Вставить(ЭлементОтбораГруппы.Представление, ЭлементОтбораГруппы.ПравоеЗначение);
					Иначе
						СтруктураФильтра.Вставить(ЭлементОтбораГруппы.Представление);
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЦикла;
		
		СтруктураФильтра.Вставить("НастройкиКомпоновки", Компоновщик.Настройки);
		
	КонецЕсли;
	
	СтруктураФильтра.Вставить("ПоказатьТолькоНепрочитанные", ПоказатьТолькоНепрочитанные);
	
	Возврат СтруктураФильтра;
	
КонецФункции	

&НаСервере
Процедура ОчиститьНаСервере()
	
	Период = Новый СтандартныйПериод;
	ОбновитьПредставлениеПериода();
	ОтборТеги.Очистить();
	
	Отправитель = "";
	Получатель = "";
	Тема = "";
	ТекстПисьма = "";
	Ответственный = Справочники.Пользователи.ПустаяСсылка(); //Пользователи.ТекущийПользователь();
	ПоказатьТолькоНепрочитанные = Ложь;

КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыВыбора()
	
	ПараметрыВыбораПользователь = Новый Массив;
	ПараметрыВыбораПользователь.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", ПараметрыСеанса.CRM_ДоступныеПользователи));
	Элементы.Ответственный.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораПользователь);
	
КонецПроцедуры

&НаСервере
Процедура CRM_СоздатьКнопкиРежимФильтра()
	
	СтруктураСоздания = Новый Структура;
	
	СтруктураКоманднаяПанель = Новый Структура;
	СтруктураКоманднаяПанель.Вставить("Имя", "CRM_РежимФильтра_Группа");
	СтруктураКоманднаяПанель.Вставить("Родитель", "CRM_РежимФильтра");
	
	СтруктураГруппаКнопок = Новый Структура;
	СтруктураГруппаКнопок.Вставить("Имя", "CRM_РежимФильтра_Элемент");
	
	СтруктураСоздания.Вставить("СтруктураКоманднаяПанель", СтруктураКоманднаяПанель);
	СтруктураСоздания.Вставить("СтруктураГруппаКнопок", СтруктураГруппаКнопок);
	
	СтруктураВидимыеКнопки = Новый Структура;
	
	СтруктураКнопка = Новый Структура;
	ИмяОписания = "CRM_Простой";
	СтруктураКнопка.Вставить("ИмяКнопки", ИмяОписания);
	СтруктураКнопка.Вставить("Заголовок", НСтр("ru = 'Простой'"));
	СтруктураКнопка.Вставить("ИмяКоманды", ИмяОписания);
	СтруктураКнопка.Вставить("Действие", ИмяОписания);
	СтруктураКнопка.Вставить("Отображение", ОтображениеКнопки.Текст);
	СтруктураКнопка.Вставить("ОтображениеФигуры", ОтображениеФигурыКнопки.Всегда);
	СтруктураКнопка.Вставить("Пометка", Истина);
	
	СтруктураВидимыеКнопки.Вставить(ИмяОписания, СтруктураКнопка);
	
	СтруктураКнопка = Новый Структура;
	ИмяОписания = "CRM_Расширенный";
	СтруктураКнопка.Вставить("ИмяКнопки", ИмяОписания);
	СтруктураКнопка.Вставить("Заголовок", НСтр("ru = 'Расширенный'"));
	СтруктураКнопка.Вставить("ИмяКоманды", ИмяОписания);
	СтруктураКнопка.Вставить("Действие", ИмяОписания);
	СтруктураКнопка.Вставить("Отображение", ОтображениеКнопки.Текст);
	СтруктураКнопка.Вставить("ОтображениеФигуры", ОтображениеФигурыКнопки.Всегда);
	
	СтруктураВидимыеКнопки.Вставить(ИмяОписания, СтруктураКнопка);
	
	СтруктураСоздания.Вставить("СтруктураВидимыеКнопки", СтруктураВидимыеКнопки);
	CRM_ЛицензированиеЭкспортныеМетоды.ПолучитьЗащищеннуюОбработку().
		СформироватьКоманднуюПанельПоСтруктуре(ЭтотОбъект, СтруктураСоздания);
	
	//
	
	ГруппаКнопокТумблера = Элементы.Найти("CRM_РежимФильтра_Группа");
	Если ГруппаКнопокТумблера <> Неопределено Тогда
		//ГруппаКнопокТумблера.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Центр;
		ГруппаКнопокТумблера.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Центр;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПокраситьКнопкиРежимФильтраНаСервере()
	
	НомерКнопки = 1;
	
	Если РежимФильтра = 0 Тогда
		НомерКнопки = 1;
	ИначеЕсли РежимФильтра = 1 Тогда
		НомерКнопки = 2;
	КонецЕсли;
	
	СтруктураВидимыеКнопки = Новый Структура;
	
	СтруктураКнопка = Новый Структура;
	ИмяОписания = "CRM_Простой";
	СтруктураКнопка.Вставить("ИмяКнопки", ИмяОписания);
	СтруктураКнопка.Вставить("Пометка", ?(НомерКнопки = 1, Истина, Ложь));
	
	СтруктураВидимыеКнопки.Вставить(ИмяОписания, СтруктураКнопка);
	
	СтруктураКнопка = Новый Структура;
	ИмяОписания = "CRM_Расширенный";
	СтруктураКнопка.Вставить("ИмяКнопки", ИмяОписания);
	СтруктураКнопка.Вставить("Пометка", ?(НомерКнопки = 2, Истина, Ложь));
	
	СтруктураВидимыеКнопки.Вставить(ИмяОписания, СтруктураКнопка);

	CRM_ЛицензированиеЭкспортныеМетоды.ПолучитьЗащищеннуюОбработку().
		ПокраситьКнопки(ЭтотОбъект, СтруктураВидимыеКнопки);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ТегОтборНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Элемент.Имя = "Тег_Очистить" Тогда
		ОтборТеги.Очистить();
	Иначе
		ВыбранныйТег = ОтборТеги.НайтиПоИдентификатору(Число(СтрЗаменить(Элемент.Имя, "Тег_", "")));
		ОтборТеги.Удалить(ВыбранныйТег);
	КонецЕсли;
	ОбновитьЗначенияОтбораТеговСервер();
КонецПроцедуры

&НаСервере
Процедура ОбновитьЗначенияОтбораТеговСервер()
	
	МассивУдаляемыхЭлементов = Новый Массив;
	Для Каждого Элемент Из Элементы.ГруппаТэги.ПодчиненныеЭлементы Цикл
		МассивУдаляемыхЭлементов.Добавить(Элемент);
	КонецЦикла;
	
	Для Каждого Элемент Из МассивУдаляемыхЭлементов Цикл
		Элементы.Удалить(Элемент);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	CRM_Теги.Ссылка КАК Тег,
		|	CRM_Теги.ЦветКрасный КАК ЦветКрасный,
		|	CRM_Теги.ЦветЗеленый КАК ЦветЗеленый,
		|	CRM_Теги.ЦветСиний КАК ЦветСиний,
		|	CRM_Теги.ЦветПредставление КАК ЦветПредставление
		|ИЗ
		|	Справочник.CRM_Теги КАК CRM_Теги
		|ГДЕ
		|	CRM_Теги.Ссылка В(&МассивТегов)";
	Запрос.УстановитьПараметр("МассивТегов", ОтборТеги.ВыгрузитьЗначения());
	
	ЦветаТегов = Запрос.Выполнить().Выгрузить();
	
	НомерЭлемента = 0;
	НомерСтрокиЭлементов = 0;
	ТекущаяДлинаСтроки = 0;
	ЭлементовВГруппе = 0;
	Для Каждого ЭлементОтбораТег Из ОтборТеги Цикл
		ЭлементОтбораТег.Пометка = Ложь;
		Если СтрДлина(ЭлементОтбораТег.Представление) > 15 Тогда
			ПредставлениеТега = СокрЛП(Лев(ЭлементОтбораТег.Представление, 15)) + "...";
			ТекущаяДлинаСтроки = ТекущаяДлинаСтроки + 15;
		Иначе
			ПредставлениеТега = СокрЛП(ЭлементОтбораТег.Представление);
			ТекущаяДлинаСтроки = ТекущаяДлинаСтроки + СтрДлина(ПредставлениеТега);
		КонецЕсли;
		
		Если НомерСтрокиЭлементов = 0 Или ТекущаяДлинаСтроки > 30 Тогда
			
			ТекущаяДлинаСтроки = СтрДлина(ПредставлениеТега);
			НомерСтрокиЭлементов = НомерСтрокиЭлементов + 1;
			
			ГруппаТегов = Элементы.Добавить("СтрокаТегов" + НомерСтрокиЭлементов, Тип("ГруппаФормы"), Элементы.ГруппаТэги);
			ГруппаТегов.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			ГруппаТегов.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
			ГруппаТегов.ОтображатьЗаголовок = Ложь;
			ГруппаТегов.Отображение = ОтображениеОбычнойГруппы.Нет;
			ГруппаТегов.РастягиватьПоВертикали = Ложь;
			ГруппаТегов.Высота = 1;
			ЭлементовВГруппе = 0;
		КонецЕсли;
		
		ЦветТега = ЦветаТегов.Найти(ЭлементОтбораТег.Значение, "Тег");
		ЦветФонаТега = Неопределено;
		ЦветТекстаТега = ЦветаСтиля.CRM_ОсновнойГолубой;
		Если ЦветТега <> Неопределено И ЗначениеЗаполнено(ЦветТега.ЦветПредставление) Тогда
			// BSLLS:StyleElementConstructors-off
			ЦветФонаТега = Новый Цвет(ЦветТега.ЦветКрасный, ЦветТега.ЦветЗеленый, ЦветТега.ЦветСиний);
			// BSLLS:StyleElementConstructors-on
			ЦветТекстаТега = CRM_ОбщегоНазначенияКлиентСервер.ПолучитьКонтрастныйЦвет(ЦветФонаТега);
		КонецЕсли;
		
		ТегФорматированнаяСтрока = Новый ФорматированнаяСтрока(ПредставлениеТега, , ЦветТекстаТега, ЦветФонаТега);
		ИдентификаторТега = ЭлементОтбораТег.ПолучитьИдентификатор();
		КнопкаУдалитьТегФоматированнаяСтрока = Новый ФорматированнаяСтрока(БиблиотекаКартинок.CRM_УдалитьСиняя, , , , "Тег_"
			+ ИдентификаторТега);
		
		ЭлементыЗаголовка = Новый Массив;
		ЭлементыЗаголовка.Добавить(ТегФорматированнаяСтрока);
		ЭлементыЗаголовка.Добавить(КнопкаУдалитьТегФоматированнаяСтрока);
		
		ЭлементТег = Элементы.Добавить("Тег_" + ЭлементОтбораТег.ПолучитьИдентификатор(), Тип("ДекорацияФормы"), 
			ГруппаТегов);
		ЭлементТег.Вид = ВидДекорацииФормы.Надпись;
		ЭлементТег.Заголовок = Новый ФорматированнаяСтрока(ЭлементыЗаголовка);
		ЭлементТег.Гиперссылка = Истина;
		ЭлементТег.Подсказка = ЭлементОтбораТег.Представление;
		ЭлементТег.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Лево;
		ЭлементТег.АвтоМаксимальнаяШирина = Ложь;
		ЭлементТег.Ширина =  Окр(СтрДлина(ПредставлениеТега) * 0.8 + 4);
		ЭлементТег.РастягиватьПоГоризонтали = Ложь;
		ЭлементТег.УстановитьДействие("Нажатие", "Подключаемый_ТегОтборНажатие");
		ЭлементовВГруппе = ЭлементовВГруппе + 1;
		НомерЭлемента = НомерЭлемента + 1;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьТег()
	
	Если НЕ ЗначениеЗаполнено(Тег) Тогда
		Возврат;
	КонецЕсли;
	
	Если ОтборТеги.НайтиПоЗначению(Тег) = Неопределено Тогда
		ОтборТеги.Добавить(Тег, Тег.Наименование, Истина);
		ОбновитьЗначенияОтбораТеговСервер();
		
	КонецЕсли;
	
	Тег = ПредопределенноеЗначение("Справочник.CRM_Теги.ПустаяСсылка");
	
КонецПроцедуры

#КонецОбласти
