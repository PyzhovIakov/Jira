
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УчетнаяЗапись = Параметры.Ключ;
	ВариантЗагрузки = "СДаты";
	
	ТекущаяДата = ТекущаяДатаСеанса();
	ДатаЗагрузки = НачалоМесяца(ТекущаяДата);
	ПериодЗагрузки = Новый СтандартныйПериод;
	ПериодЗагрузки.ДатаНачала = ДатаЗагрузки;
	ПериодЗагрузки.ДатаОкончания = КонецМесяца(ДатаЗагрузки);
	
	ЦветОсновнойГолубой = ЦветаСтиля.CRM_ОсновнойГолубой;
	ЦветСерыйДляВторостепенныхФункций = ЦветаСтиля.CRM_СерыйДляВторостепенныхФункций;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики(
		"CRM_Статистика.Взаимодействия.НастройкаУчетнойЗаписи.Удобство.КоличествоНажатияГиперссылкиЗагрузкаПочтыЗаПериод.КоличествоОткрытияФормы");
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ПроверяемыеРеквизиты.Очистить();
	
	Если ВариантЗагрузки = "СДаты" Тогда
		ПроверяемыеРеквизиты.Добавить("ДатаЗагрузки");
	ИначеЕсли ВариантЗагрузки = "ЗаПериод" Тогда
		ПроверяемыеРеквизиты.Добавить("ПериодЗагрузки");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики(
		"CRM_Статистика.Взаимодействия.НастройкаУчетнойЗаписи.Удобство.КоличествоНажатияГиперссылкиЗагрузкаПочтыЗаПериод.КоличествоЗакрытияФормы");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДатаЗагрузкиПриИзменении(Элемент)
	
	CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики(
		"CRM_Статистика.Взаимодействия.НастройкаУчетнойЗаписи.Удобство.КоличествоНажатияГиперссылкиЗагрузкаПочтыЗаПериод.КоличествоВыбораДаты");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбрабатыватьКакНовыеПриИзменении(Элемент)
	
	CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики(
		"CRM_Статистика.Взаимодействия.НастройкаУчетнойЗаписи.Удобство.КоличествоНажатияГиперссылкиЗагрузкаПочтыЗаПериод.КоличествоВключенияКнопкиОбрабатыватьКакНовые");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьВариантЗагрузки(Команда)
	
	ИмяКоманды = Команда.Имя;
	Элементы.СтраницыВариантыЗагрузки.ТекущаяСтраница = Элементы["Страница" + ИмяКоманды];
	
	Для Каждого Элемент Из Элементы.ГруппаВариантовЗагрузки.ПодчиненныеЭлементы Цикл
		Элемент.Пометка = Ложь;
		Элемент.ЦветФона = ЦветСерыйДляВторостепенныхФункций;
	КонецЦикла;
	Элемент = Элементы[ИмяКоманды];
	Элемент.Пометка = Истина;
	Элемент.ЦветФона = ЦветОсновнойГолубой;
	
	ВариантЗагрузки = СтрЗаменить(ИмяКоманды, "ВариантЗагрузки", "");
	
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
	
	CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики(
		"CRM_Статистика.Взаимодействия.НастройкаУчетнойЗаписи.Удобство.КоличествоНажатияГиперссылкиЗагрузкаПочтыЗаПериод.КоличествоВыбораКнопкиЗагрузить");
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Если ПолучениеПисемВыполняется Тогда
		
		ПолучениеПисемВыполняется = Ложь;
		НастроитьЭлементыФормы(ПолучениеПисемВыполняется);
		ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
		
		Возврат;
		
	КонецЕсли;
	
	ПолучениеПисемВыполняется = Истина;
	НастроитьЭлементыФормы(ПолучениеПисемВыполняется);
	
	ДлительнаяОперация = ПолучитьПочтуВФоне();
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		ЗагрузитьЗавершение(ДлительнаяОперация, Новый Структура());
	ИначеЕсли ДлительнаяОперация.Статус = "Выполняется" Тогда
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
		ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
		ПараметрыОжидания.ВыводитьСообщения = Истина;
		ПараметрыОжидания.Интервал = 1;
		ПараметрыОжидания.ОповещениеОПрогрессеВыполнения = Новый ОписаниеОповещения("ПрогрессЗагрузки", ЭтотОбъект); 
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ЗагрузитьЗавершение", ЭтотОбъект, Новый Структура());
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	
	CRM_ЦентрМониторингаКлиент.ЗаписатьОперациюБизнесСтатистики(
		"CRM_Статистика.Взаимодействия.НастройкаУчетнойЗаписи.Удобство.КоличествоНажатияГиперссылкиЗагрузкаПочтыЗаПериод.КоличествоВыбораКнопкиЗакрыть");
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьПочтуВФоне()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ВариантЗагрузки = "СДаты" Тогда
		ДатаНачалаПериода = ДатаЗагрузки;
		ДатаОкончанияПериода = КонецДня(ТекущаяДатаСеанса()) + 1;
	ИначеЕсли ВариантЗагрузки = "ЗаПериод" Тогда
		ДатаНачалаПериода = ПериодЗагрузки.ДатаНачала;
		ДатаОкончанияПериода = ПериодЗагрузки.ДатаОкончания + 1;
	КонецЕсли;
	
	УчетныеЗаписиПользователя = Новый Массив;
	УчетныеЗаписиПользователя.Добавить(УчетнаяЗапись);
	
	Если CRM_Взаимодействия.ФоновоеЗаданиеПолучениеОтправкаПочтыВыполняется(УчетныеЗаписиПользователя) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Получение почты уже выполняется. Пожалуйста, подождите...'"));
		Элементы.Загрузить.Заголовок = "Загрузить";
		Элементы.ОставшеесяВремя.Заголовок = "";
		ПолучениеПисемВыполняется = Ложь;
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УчетныеЗаписиЭлектроннойПочты.Ссылка                                                        КАК Ссылка,
	|	УчетныеЗаписиЭлектроннойПочты.АдресЭлектроннойПочты                                         КАК АдресЭлектроннойПочты,
	|	УчетныеЗаписиЭлектроннойПочты.Наименование                                                  КАК Наименование,
	|	ЕСТЬNULL(НастройкиУчетныхЗаписейЭлектроннойПочты.ПомещатьПисьмоВПапкуПисьмаОснования, ЛОЖЬ) КАК ПомещатьПисьмоВПапкуПисьмаОснования,
	|	ВЫБОР
	|		КОГДА УчетныеЗаписиЭлектроннойПочты.ВладелецУчетнойЗаписи = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(НастройкиУчетныхЗаписейЭлектроннойПочты.ОтветственныйЗаОбработкуПисем, ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка))
	|		ИНАЧЕ УчетныеЗаписиЭлектроннойПочты.ВладелецУчетнойЗаписи
	|	КОНЕЦ                                                                                       КАК ОтветственныйЗаОбработкуПисем,
	|	УчетныеЗаписиЭлектроннойПочты.ОставлятьКопииСообщенийНаСервере                              КАК ОставлятьКопии,
	|	УчетныеЗаписиЭлектроннойПочты.ПериодХраненияСообщенийНаСервере                              КАК ОставлятьДней,
	|	УчетныеЗаписиЭлектроннойПочты.ИмяПользователя                                               КАК ИмяПользователя,
	|	УчетныеЗаписиЭлектроннойПочты.ПротоколВходящейПочты                                         КАК ПротоколВходящейПочты,
	|	ЕСТЬNULL(ДатыПоследнейЗагрузкиПочтовыхСообщений.ДатаЗагрузкиПисем, ДАТАВРЕМЯ(1, 1, 1))      КАК ДатаЗагрузкиПисем,
	|	ВЫБОР
	|		КОГДА УчетныеЗаписиЭлектроннойПочты.ПротоколВходящейПочты = ""IMAP""
	|			ТОГДА ЕСТЬNULL(НастройкиУчетныхЗаписейЭлектроннойПочты.ОбработкаПисемВыполняетсяВДругомПочтовомКлиенте, ЛОЖЬ)
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                                                        КАК ОбработкаПисемВедетсяВДругомПочтовомКлиенте
	// +CRM
	|	,УчетныеЗаписиЭлектроннойПочты.CRM_СинхронизироватьПапкиСПочтовымСервером КАК СинхронизироватьПапкиСПочтовымСервером,
	|	УчетныеЗаписиЭлектроннойПочты.CRM_ИсточникЛидов КАК CRM_ИсточникЛидов,
	|	ВЫБОР
	|		КОГДА ПапкиУчетныхЗаписей.Папка ЕСТЬ NULL
	|			ТОГДА """"
	|		КОГДА ПапкиУчетныхЗаписей.Папка.CRM_ИмяНаСервере = """"
	|			ТОГДА ПапкиУчетныхЗаписей.Папка.Наименование
	|		ИНАЧЕ ПапкиУчетныхЗаписей.Папка.CRM_ИмяНаСервере
	|	КОНЕЦ КАК ИмяПапкиВходящие,
	|	УчетныеЗаписиЭлектроннойПочты.CRM_ПериодСинхронизацииПапок КАК ПериодСинхронизации,
	|	УчетныеЗаписиЭлектроннойПочты.CRM_ЗагружатьВложенияПриПолученииПисем КАК ЗагружатьВложения
	// -CRM
	|ИЗ
	|	Справочник.УчетныеЗаписиЭлектроннойПочты КАК УчетныеЗаписиЭлектроннойПочты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетныхЗаписейЭлектроннойПочты КАК НастройкиУчетныхЗаписейЭлектроннойПочты
	|		ПО (НастройкиУчетныхЗаписейЭлектроннойПочты.УчетнаяЗаписьЭлектроннойПочты = УчетныеЗаписиЭлектроннойПочты.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыПоследнейЗагрузкиПочтовыхСообщений КАК ДатыПоследнейЗагрузкиПочтовыхСообщений
	|		ПО (ДатыПоследнейЗагрузкиПочтовыхСообщений.УчетнаяЗапись = УчетныеЗаписиЭлектроннойПочты.Ссылка)
	// +CRM
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.CRM_ПапкиУчетныхЗаписей КАК ПапкиУчетныхЗаписей
	|		ПО УчетныеЗаписиЭлектроннойПочты.Ссылка = ПапкиУчетныхЗаписей.УчетнаяЗапись
	|			И ПапкиУчетныхЗаписей.ВидПапки = ЗНАЧЕНИЕ(Перечисление.CRM_ВидыПапокЭлектроннойПочты.Входящие)
	// -CRM
	|ГДЕ
	|	УчетныеЗаписиЭлектроннойПочты.ИспользоватьДляПолучения
	// +CRM
	|	И УчетныеЗаписиЭлектроннойПочты.Ссылка =&УчетнаяЗапись";
	// -CRM
	
	Запрос.УстановитьПараметр("УчетнаяЗапись", УчетнаяЗапись);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ДанныеУчетнойЗаписи = Новый Структура;
		Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
			ДанныеУчетнойЗаписи.Вставить(Колонка.Имя, Выборка[Колонка.Имя]);
		КонецЦикла;
	Иначе
		ТекстСообщения = НСтр("ru='Получение почты для данной учетной записи недоступно.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Возврат Неопределено;
	КонецЕсли;
	
	ПараметрыПроцедуры = Новый Структура;
	// +CRM
	ПараметрыПроцедуры.Вставить("ДанныеУчетнойЗаписи", ДанныеУчетнойЗаписи);
	ПараметрыПроцедуры.Вставить("ДатаНачалаПериода", ДатаНачалаПериода);
	ПараметрыПроцедуры.Вставить("ДатаОкончанияПериода", ДатаОкончанияПериода);
	ПараметрыПроцедуры.Вставить("ОбрабатыватьКакНовые", ОбрабатыватьКакНовые);
	// -CRM
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Получение электронной почты за период'");
	
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне("CRM_УправлениеЭлектроннойПочтой.ПолучитьПочтуЗаПериод",
		ПараметрыПроцедуры, ПараметрыВыполнения);
	Возврат ДлительнаяОперация;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ОтменитьВыполнениеЗадания(ИдентификаторЗадания)
	
	Если ЗначениеЗаполнено(ИдентификаторЗадания) Тогда 
		ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ПолучениеПисемВыполняется = Ложь;
	Элементы.Загрузить.Заголовок = "Загрузить";
	Элементы.ОставшеесяВремя.Заголовок = "";
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		
		Оповестить("ЗагруженаИсторияПисем", УчетнаяЗапись, ЭтотОбъект);
		
		РезультатВыполнения = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		Прогресс = 100;
		
		Если РезультатВыполнения = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		Если РезультатВыполнения.ЕстьОшибки Тогда
			ПоказатьОповещениеПользователя(Заголовок, ДополнительныеПараметры.НавигационнаяСсылка, 
				НСтр("ru = 'Не удалось выполнить все действия. Технические подробности для администратора в журнале регистрации.'"), 
				БиблиотекаКартинок.Ошибка32, СтатусОповещенияПользователя.Важное);
		Иначе	
			ПоказатьОповещениеПользователя(Заголовок, ДополнительныеПараметры.НавигационнаяСсылка,
				CRM_УправлениеЭлектроннойПочтойКлиент.РезультатОтправкиПолученияПисем(РезультатВыполнения));
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрогрессЗагрузки(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус <> "Выполняется" Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Прогресс <> Неопределено Тогда
		Прогресс = Результат.Прогресс.Процент;
		Элементы.ОставшеесяВремя.Заголовок = Результат.Прогресс.Текст;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьЭлементыФормы(ПолучениеПисемВыполняется)

	Если ПолучениеПисемВыполняется Тогда
		Прогресс = 0;
		Элементы.Загрузить.Заголовок = "Отмена";
	Иначе
		Элементы.Загрузить.Заголовок = "Загрузить";
		Элементы.ОставшеесяВремя.Заголовок = "";
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
