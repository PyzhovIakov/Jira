#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не Параметры.Свойство("ТекстЗапроса") Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ОтборКомпоновкиДанных = Неопределено;
	Параметры.Свойство("ОтборКомпоновкиДанных", ОтборКомпоновкиДанных);
	
	ОграничениеИспользования = Неопределено;
	Параметры.Свойство("ОграничениеИспользования", ОграничениеИспользования);
	
	Если Параметры.Свойство("Заголовок") И ЗначениеЗаполнено(Параметры.Заголовок) Тогда
		Заголовок = Параметры.Заголовок;
	КонецЕсли;
	
	Если Параметры.Свойство("ЗаголовокКомандыОК") И ЗначениеЗаполнено(Параметры.ЗаголовокКомандыОК) Тогда
		Элементы.КомандаОК.Заголовок = Параметры.ЗаголовокКомандыОК;
	КонецЕсли;
	
	Если Параметры.Свойство("ДополнительныеПоля") Тогда
		АдресМассиваДополнительныхПолей = ПоместитьВоВременноеХранилище(Параметры.ДополнительныеПоля,
			 УникальныйИдентификатор);		
		СформироватьДополнительныеПоля();
	КонецЕсли;
	
	ИнициализацияКомпоновки(Параметры.ТекстЗапроса, ОтборКомпоновкиДанных, ОграничениеИспользования);
	
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	Если ЭтоАдресВременногоХранилища(АдресМассиваДополнительныхПолей) Тогда
		
		ДополнительныеПоля = ПолучитьИзВременногоХранилища(АдресМассиваДополнительныхПолей);
				
		Для Каждого ДанныеПоля Из ДополнительныеПоля Цикл
			Настройки.Вставить(ДанныеПоля.Имя, ЭтотОбъект[ДанныеПоля.Имя]);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)

	Если ЭтоАдресВременногоХранилища(АдресМассиваДополнительныхПолей) Тогда
		
		ДополнительныеПоля = ПолучитьИзВременногоХранилища(АдресМассиваДополнительныхПолей);
				
		Для Каждого ДанныеПоля Из ДополнительныеПоля Цикл
			Если Настройки.Получить(ДанныеПоля.Имя) <> Неопределено Тогда
				ЭтотОбъект[ДанныеПоля.Имя] = Настройки[ДанныеПоля.Имя];
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПриИзмененииДополнительногоПоля(Элемент)

	СохраняемыеВНастройкахДанныеМодифицированы = Истина;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Если ЭтоАдресВременногоХранилища(АдресМассиваДополнительныхПолей) Тогда
		
		ДополнительныеПоля = ПолучитьИзВременногоХранилища(АдресМассиваДополнительныхПолей);
		
		СтруктураВозврата = Новый Структура;
		
		Для Каждого ДанныеПоля Из ДополнительныеПоля Цикл
			СтруктураВозврата.Вставить(ДанныеПоля.Имя, ЭтотОбъект[ДанныеПоля.Имя]);			
		КонецЦикла;
		
		СтруктураВозврата.Вставить("Отбор", КомпоновщикНастроекКомпоновкиДанных.Настройки.Отбор);
		
		Закрыть(СтруктураВозврата);
		
	Иначе
		
		Закрыть(КомпоновщикНастроекКомпоновкиДанных.Настройки.Отбор);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	Если ЭтоАдресВременногоХранилища(АдресСКДВоВременномХранилище) Тогда
		Попытка
			УдалитьИзВременногоХранилища(АдресСКДВоВременномХранилище);
		Исключение
			Закрыть(Неопределено);
		КонецПопытки;
	КонецЕсли;
	Закрыть(Неопределено);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализацияКомпоновки(ТекстЗапроса, ОтборКомпоновкиДанных = Неопределено,
	 ОграничениеИспользования = Неопределено)
	// Создание и настройка схемы компоновки данных.
	СКДДанные = Новый СхемаКомпоновкиДанных();
	
	ИсточникДанных = СКДДанные.ИсточникиДанных.Добавить();
	ИсточникДанных.Имя = "ИсточникДанных";
	ИсточникДанных.ТипИсточникаДанных = "Local";
	
	НаборДанных = СКДДанные.НаборыДанных.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
	НаборДанных.Имя = "НаборДанных";
	НаборДанных.ИсточникДанных = "ИсточникДанных";
	НаборДанных.Запрос = ТекстЗапроса;
	
	Настройки = СКДДанные.НастройкиПоУмолчанию;
	
	ДетальнаяГруппировка = Настройки.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
	ДетальнаяГруппировка.Использование = Истина;
	
	ВыбранноеАвтоПоле = Настройки.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
	ВыбранноеАвтоПоле.Использование = Истина;
	
	Если ЭтоАдресВременногоХранилища(АдресСКДВоВременномХранилище) Тогда
		// BSLLS:MissingCodeTryCatchEx-off
		Попытка
			УдалитьИзВременногоХранилища(АдресСКДВоВременномХранилище);
		
		Исключение КонецПопытки;
		// BSLLS:MissingCodeTryCatchEx-on
	КонецЕсли;
	
	Если ТипЗнч(ОграничениеИспользования) = Тип("Массив") Тогда
		
		Для Каждого Ограничение Из ОграничениеИспользования Цикл
			
			СтруктураПоля = Ограничение.Поле;
			
			Поле = НаборДанных.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
			Поле.Поле = СтруктураПоля.Поле;
			Поле.ПутьКДанным = СтруктураПоля.ПутьКДанным;
			Поле.Заголовок = СтруктураПоля.Заголовок;
			
			Для Каждого ВидОграничения Из Ограничение.ВидыОграничений Цикл
				Поле.ОграничениеИспользования[ВидОграничения] = Истина;
				Поле.ОграничениеИспользованияРеквизитов[ВидОграничения] = Истина;
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	АдресСКДВоВременномХранилище = ПоместитьВоВременноеХранилище(СКДДанные, УникальныйИдентификатор);
	КомпоновщикНастроекКомпоновкиДанных.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСКДВоВременномХранилище));
	
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных();
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СКДДанные));
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	Для Каждого ПолеВыбора Из КомпоновщикНастроек.Настройки.ДоступныеПоляВыбора.Элементы Цикл
		// Пропускаем системные поля
		Если Лев(Строка(ПолеВыбора.Поле), 13) = "СистемныеПоля" Или Лев(Строка(ПолеВыбора.Поле),
			 12) = "SystemFields" Тогда Продолжить; КонецЕсли;
		Если Лев(Строка(ПолеВыбора.Поле), 15) = "ПараметрыДанных" Или Лев(Строка(ПолеВыбора.Поле),
			 14) = "DataParameters" Тогда Продолжить; КонецЕсли;
		
		ВыбранныеПоляДетальнаяГруппировка =
			ДетальнаяГруппировка.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
		ВыбранныеПоляДетальнаяГруппировка.Поле  = Новый ПолеКомпоновкиДанных(ПолеВыбора.Поле);
	КонецЦикла;
	
	Настройки.ПараметрыДанных.Элементы.Очистить();
	
	Если ОтборКомпоновкиДанных <> Неопределено Тогда
		CRM_ОбщегоНазначенияКлиентСервер.СкопироватьОтборКомпоновкиДанных(КомпоновщикНастроекКомпоновкиДанных.Настройки.Отбор.Элементы,
			 ОтборКомпоновкиДанных.Элементы,
			 КомпоновщикНастроекКомпоновкиДанных.Настройки.Отбор.ДоступныеПоляОтбора);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьДополнительныеПоля()
	
	ДополнительныеПоля = ПолучитьИзВременногоХранилища(АдресМассиваДополнительныхПолей);
	
	ГруппаПолей = Элементы.ГруппаДополнительныеПоля;
	
	МассивРеквизитовФормы = Новый Массив;
	
	// реквизиты
	Для Каждого ДанныеПоля Из ДополнительныеПоля Цикл
		
		НовыйРеквизит = Новый РеквизитФормы(ДанныеПоля.Имя, ДанныеПоля.Тип);
		ЗаполнитьЗначенияСвойств(НовыйРеквизит, ДанныеПоля);
		
		МассивРеквизитовФормы.Добавить(НовыйРеквизит);
		
	КонецЦикла;
	
	ИзменитьРеквизиты(МассивРеквизитовФормы);
	
	// элементы управления добавляется после изменения реквизитов
	Для Каждого ДанныеПоля Из ДополнительныеПоля Цикл
		
		НовыйЭлементУправления = Элементы.Добавить(ДанныеПоля.ИмяЭУ, ДанныеПоля.ТипЭУ, ГруппаПолей);
		НовыйЭлементУправления.Вид = ВидПоляФормы[ДанныеПоля.ВидЭУ];
		НовыйЭлементУправления.ПутьКДанным = ДанныеПоля.ПутьКДаннымЭУ;
		НовыйЭлементУправления.Заголовок = ДанныеПоля.ЗаголовокЭУ;
		НовыйЭлементУправления.УстановитьДействие("ПриИзменении", "ПриИзмененииДополнительногоПоля");
		
		Если ДанныеПоля.Свойство("ПоложениеЗаголовкаЭУ") Тогда
			НовыйЭлементУправления.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы[ДанныеПоля.ПоложениеЗаголовкаЭУ];
		КонецЕсли;
		
		Если ДанныеПоля.Свойство("КнопкаОчисткиЭУ") Тогда
			НовыйЭлементУправления.КнопкаОчистки = ДанныеПоля.КнопкаОчисткиЭУ;
		КонецЕсли;
		
		Если ДанныеПоля.Свойство("СписокВыбора") Тогда
			НовыйЭлементУправления.РежимВыбораИзСписка = Истина;
			НовыйЭлементУправления.КнопкаСоздания = Ложь;
			НовыйЭлементУправления.СписокВыбора.ЗагрузитьЗначения(ДанныеПоля.СписокВыбора.ВыгрузитьЗначения());
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти
