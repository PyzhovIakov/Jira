
#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура - обработчик события формы "ПриСозданииНаСервере"
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ Пользователи.РолиДоступны("ПолныеПрава") Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Недостаточно прав для настройк прокси-сервера!';
			|en='It is insufficiently right for nastroyk of a proxy-server!'"));
		Отказ = Истина;
	КонецЕсли;
	Если Параметры.Свойство("ТекстОшибки") Тогда
		ОписаниеОшибки = Параметры.ТекстОшибки;
		Элементы.ОписаниеОшибки.Видимость = Истина;
	КонецЕсли;	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
// Процедура - обработчик события формы "ПриОткрытии"
//
Процедура ПриОткрытии(Отказ)
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииПродолжение", ЭтотОбъект);
	НачатьПодключениеРасширенияРаботыСФайлами(ОписаниеОповещения);
КонецПроцедуры // ПриОткрытии()

&НаКлиенте
// Процедура - обработчик события формы "ПослеЗаписи"
//
Процедура ПослеЗаписи(ПараметрыЗаписи)
    Если ИнформационнаяБазаФайловая() Тогда
        ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Изменения вступят в силу после перезапуска конфигурации';
        	|en='Changes will come into force after restarting of a configuration'"));
    КонецЕсли;
КонецПроцедуры // ПослеЗаписи()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОбработкаПроверкиФайлаНастроек(Существует, ДополнительныеПараметры) Экспорт 
	Если ВклВыклПрокси Тогда
		ДоступностьНастроекПрокси(Истина);
		Если Существует Тогда
			ОписаниеОповещения = Новый ОписаниеОповещения("ВклВыклПроксиПриИзмененииЗавершение", ЭтотОбъект, ВклВыклПрокси);
			ПоказатьВопрос(ОписаниеОповещения,
				 НСтр("ru='Обнаружен ранее созданный файл настроек conf\inetcfg.xml в каталоге программы!"
"Прочитать из него настройки?';en='Detected a previously created configuration file conf\inetcfg.xml in program directory!"
"Read out settings?'"), РежимДиалогаВопрос.ДаНет, , , "Внимание!");
		КонецЕсли;
	Иначе
		ДоступностьНастроекПрокси(Ложь);
		Если Существует Тогда
			ОписаниеОповещения = Новый ОписаниеОповещения("ВклВыклПроксиПриИзмененииЗавершение", ЭтотОбъект, ВклВыклПрокси);
			ПоказатьВопрос(ОписаниеОповещения,
				 НСтр("ru='Рекомендуется удалить ранее созданный файл настроек прокси-сервера conf\inetcfg.xml в каталоге программы!"
"Удалить его сейчас?'"), РежимДиалогаВопрос.ДаНет, , , "Внимание!");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры	

&НаКлиенте
// Процедура - обработчик события "ПриИзменении" переключателя "ВклВыклПрокси"
//
Процедура ВклВыклПроксиПриИзменении(Элемент)
	ФайлНастроек = Новый Файл(ПолучитьКаталогПрограммы() + "conf\inetcfg.xml");
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаПроверкиФайлаНастроек", ЭтотОбъект);
    ФайлНастроек.НачатьПроверкуСуществования(ОписаниеОповещения);
КонецПроцедуры // ВклВыклПроксиПриИзменении()

&НаКлиенте
Процедура ОбработкаПроверкиФайлаНастроекПослеУдаления(Существует, ДополнительныеПараметры) Экспорт
	Если Существует Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не удалось удалить файл настроек прокси-сервера (вероятно,
			| нет прав доступа в каталог программы). "
			"Необходимо удалить файл вручную. Обратитесь к администратору.'"));
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Файл настроек прокси-сервера удален.'"));
		ПроксиПользователь	= "";
		ПроксиПароль		= "";
		ПроксиСервер		= "";
		ПроксиПорт			= "";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаУдаленияФайлаНастроек(ДополнительныеПараметры) Экспорт
	ФайлНастроек = Новый Файл(ПолучитьКаталогПрограммы() + "conf\inetcfg.xml");
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаПроверкиФайлаНастроекПослеУдаления", ЭтотОбъект);
    ФайлНастроек.НачатьПроверкуСуществования(ОписаниеОповещения);
КонецПроцедуры	

&НаКлиенте
Процедура ВклВыклПроксиПриИзмененииЗавершение(Ответ, ВклВыклПроксиПриВопросе) Экспорт
	Если ВклВыклПроксиПриВопросе Тогда
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Настройки не прочитаны!'"));
		Иначе
			ПрочитатьФайлНастроек();
		КонецЕсли;  
	Иначе
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Файл настроек не был удален! Возможны проблемы при работе с сервером SMS4B!'"));
		Иначе
			ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаУдаленияФайлаНастроек", ЭтотОбъект); 
			НачатьУдалениеФайлов(ОписаниеОповещения, ПолучитьКаталогПрограммы() + "conf\inetcfg.xml");
		КонецЕсли;  
	КонецЕсли; 
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбработкаПроверкиСуществованияФайла(Существует, ДополнительныеПараметры) Экспорт 
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтветНаВопросОПерезаписиФайлаНастроек", ЭтотОбъект);
	Если Существует Тогда
		ПоказатьВопрос(ОписаниеОповещения,
			 НСтр("ru='Обнаружен ранее созданный файл настроек conf\inetcfg.xml в каталоге программы!"
"Перезаписать его?'"), РежимДиалогаВопрос.ДаНет, , , "Внимание!");
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.Да);		   
	КонецЕсли;
КонецПроцедуры	

&НаКлиенте
// Процедура - обработчик команды формы "СоздатьФайлНастроек"
//
Процедура СоздатьФайлНастроек(Команда)
    ВсеОК = Истина;
	Если НЕ ЗначениеЗаполнено(НаборКонстант.SMS4B_ПроксиСервер) Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не указан прокси-сервер!'"));
		Возврат;
	КонецЕсли;	
	Если НЕ ЗначениеЗаполнено(НаборКонстант.SMS4B_ПроксиПорт) Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не указан порт прокси-сервера!'"));
		Возврат;
	КонецЕсли;	
	// Проверим, нет ли уже созданного файла настроек
	ФайлНастроек = Новый Файл(ПолучитьКаталогПрограммы() + "conf\inetcfg.xml");
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаПроверкиСуществованияФайла", ЭтотОбъект);
    ФайлНастроек.НачатьПроверкуСуществования(ОписаниеОповещения);
КонецПроцедуры // СоздатьФайлНастроек()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
// Функция возвращает путь к каталогу программы
//
// Параметры:
//	Нет.
//
// Возвращаемое значение:
//	Строка	- Путь к каталогу программы
//
Функция ПолучитьКаталогПрограммы()
	Возврат КаталогПрограммы();
КонецФункции // ПолучитьКаталогПрограммы()

&НаКлиенте
// Функция определяет режим работы информационной базы: файловый (Истина) или Серверный (Ложь).
// При проверке используется СтрокаСоединенияИнформационнойБазы, которую можно указать явно.
//
// Параметры:
//  СтрокаСоединенияИнформационнойБазы - Строка - Параметр используется, если нужно проверить строку соединения
//													не текущей информационной базы.
//
// Возвращаемое значение:
//  Булево	- Признак файлового режима работы
//
Функция ИнформационнаяБазаФайловая(Знач СтрокаСоединенияИнформационнойБазы = "")
    Если ПустаяСтрока(СтрокаСоединенияИнформационнойБазы) Тогда
        СтрокаСоединенияИнформационнойБазы =  СтрокаСоединенияИнформационнойБазы();
    КонецЕсли;
    Возврат СтрНайти(Врег(СтрокаСоединенияИнформационнойБазы), "FILE=") = 1;
КонецФункции // ИнформационнаяБазаФайловая()

&НаКлиенте
// Управляет доступностью элементов формы настроек прокси
//
// Параметры:
//	Доступность	- Булево	- Доступность настроек
//
Процедура ДоступностьНастроекПрокси(Доступность)
	Элементы.ПроксиСервер.Доступность		= Доступность;
	Элементы.ПроксиПорт.Доступность			= Доступность;
	Элементы.ПроксиПользователь.Доступность	= Доступность;
	Элементы.ПроксиПароль.Доступность		= Доступность;
	Элементы.СоздатьФайлНастроек.Доступность	= Доступность;
КонецПроцедуры // ДоступностьНастроекПрокси()

&НаКлиенте
// Функция создает файл inetcfg.xml для работы с прокси
//
// Параметры
//  Адрес  - адрес прокси сервера
//  Порт   - порт прокси сервера
//  Имя    - Имя пользователя
//  Пароль - Пароль пользователя
//
Функция СоздатьФайлНастроекПрокси(Адрес, Порт, Имя, Пароль)
	Попытка
		ЗаписьХМЛ = Новый ЗаписьXML;
		ЗаписьХМЛ.ОткрытьФайл(ПолучитьКаталогПрограммы() + "conf\inetcfg.xml");
		ЗаписьХМЛ.ЗаписатьНачалоЭлемента("InternetProxy");
			ЗаписьХМЛ.ЗаписатьАтрибут("protocols", Строка(Адрес) + ":" + Строка(Порт));
			ЗаписьХМЛ.ЗаписатьАтрибут("user", Строка(Имя));
			ЗаписьХМЛ.ЗаписатьАтрибут("password", Строка(Пароль));
			ЗаписьХМЛ.ЗаписатьАтрибут("bypassOnLocal", "true");
		ЗаписьХМЛ.ЗаписатьКонецЭлемента();
		ЗаписьХМЛ.Закрыть();
	Исключение
		Возврат Ложь;
	КонецПопытки;
	Возврат Истина;
КонецФункции

&НаКлиенте
// Прочитать файл настроек прокси
//
Процедура ПрочитатьФайлНастроек()
	ОбъектXML = Новый ЧтениеXML;
	Попытка
		ОбъектXML.ОткрытьФайл(ПолучитьКаталогПрограммы() + "conf\inetcfg.xml");
	Исключение
		ОбъектXML.Закрыть();
		Возврат;
	КонецПопытки;
	Пока ОбъектXML.Прочитать() Цикл
		Если ОбъектXML.КоличествоАтрибутов() > 0 Тогда
			Пока ОбъектXML.ПрочитатьАтрибут() Цикл
				Если ОбъектXML.Имя = "protocols" Тогда 
					ПроксиСервер = Лев(ОбъектXML.Значение, СтрНайти(ОбъектXML.Значение, ":") - 1);
					ПроксиПорт   = Сред(ОбъектXML.Значение, СтрНайти(ОбъектXML.Значение, ":") + 1, 10);
				ИначеЕсли ОбъектXML.Имя = "user" Тогда
					ПроксиПользователь = ОбъектXML.Значение;
				ИначеЕсли ОбъектXML.Имя = "password" Тогда
					ПроксиПароль = ОбъектXML.Значение;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте 
Процедура ОтветНаВопросОПерезаписиФайлаНастроек(Ответ, ДопПараметры) Экспорт
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;				   
	КонецЕсли;  
	УдалосьЗаписать = СоздатьФайлНастроекПрокси(НаборКонстант.SMS4B_ПроксиСервер,
		 НаборКонстант.SMS4B_ПроксиПорт, НаборКонстант.SMS4B_ПроксиПользователь,
		 НаборКонстант.SMS4B_ПроксиПароль);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтветНаВопросОЛокальномСохраненииФайлаНастроек",
		 ЭтотОбъект,
		 УдалосьЗаписать);
	Если НЕ УдалосьЗаписать Тогда
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru='Не удалось записать файл настроек (вероятно,
			| нет прав доступа в каталог программы)."
		"Возможно сохранить файл локально на диск и вручную скопировать его (см. справку)."
		"Сохранить файл на диск?'"), РежимДиалогаВопрос.ДаНет, , , "Внимание!");
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.Да);		   
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте 
Процедура ОтветНаВопросОЛокальномСохраненииФайлаНастроек(Ответ, УдалосьЗаписать) Экспорт
	ОписаниеОповещения = Новый ОписаниеОповещения("СоздатьФайлНастроекЗавершение", ЭтотОбъект, УдалосьЗаписать);
	Если НЕ УдалосьЗаписать Тогда
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			ВсеОК = Ложь;
		Иначе
			Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
			ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
			ДиалогОткрытияФайла.Заголовок = НСтр("ru='Выберите каталог:'");
			ДиалогОткрытияФайла.Показать(ОписаниеОповещения);
		КонецЕсли;
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, Неопределено);		   
	КонецЕсли;
КонецПроцедуры

&НаКлиенте 
Процедура СоздатьФайлНастроекЗавершение(ВыбранныеФайлы, ДопПараметры) Экспорт
	Если ВыбранныеФайлы <> Неопределено Тогда
		Если ВыбранныеФайлы.Количество() > 0 Тогда
			ЗаписьХМЛ = Новый ЗаписьXML;
			Путь = СтрЗаменить(ВыбранныеФайлы[0] + "\inetcfg.xml", "\\", "\");
			ЗаписьХМЛ.ОткрытьФайл(Путь);
			ЗаписьХМЛ.ЗаписатьНачалоЭлемента("InternetProxy");
			ЗаписьХМЛ.ЗаписатьАтрибут("protocols", Строка(НаборКонстант.SMS4B_ПроксиСервер) + ":" 
				+ Строка(НаборКонстант.SMS4B_ПроксиПорт));
			ЗаписьХМЛ.ЗаписатьАтрибут("user", Строка(НаборКонстант.SMS4B_ПроксиПользователь));
			ЗаписьХМЛ.ЗаписатьАтрибут("password", Строка(НаборКонстант.SMS4B_ПроксиПароль));
			ЗаписьХМЛ.ЗаписатьАтрибут("bypassOnLocal", "true");
			ЗаписьХМЛ.ЗаписатьКонецЭлемента();
			ЗаписьХМЛ.Закрыть();
			ВсеОК = Истина;
		Иначе
			ВсеОК = Ложь;
		КонецЕсли;
	Иначе
		ВсеОК = Ложь;
	КонецЕсли;
	Если ВсеОК Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Файл настроек прокси-сервера успешно записан.'"));	
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Настройки прокси-сервера не сохранены. Возможны проблемы при работе с интернетом!'"));		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаПроверкиСуществованияФайлаНастроек(Существует, ДополнительныеПараметры) Экспорт 
	Если НЕ Существует Тогда
		Возврат;
	КонецЕсли;
	ИспользоватьПрокси = Истина;
	ДоступностьНастроекПрокси(Истина);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения,
		 НСтр("ru='Обнаружен ранее созданный файл настроек conf\inetcfg.xml в каталоге программы!"
	"Прочитать из него настройки?'"), РежимДиалогаВопрос.ДаНет, , , "Внимание!");
КонецПроцедуры	

&НаКлиенте
Процедура ПриОткрытииПродолжение(Результат, ДополнительныеПараметры) Экспорт
	ДоступностьНастроекПрокси(ВклВыклПрокси);
	ФайлНастроек = Новый Файл(ПолучитьКаталогПрограммы() + "conf\inetcfg.xml");
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаПроверкиСуществованияФайлаНастроек", ЭтотОбъект);
    ФайлНастроек.НачатьПроверкуСуществования(ОписаниеОповещения);
КонецПроцедуры // ПриОткрытии()

&НаКлиенте
Процедура ПриОткрытииЗавершение(Ответ, ДопПараметры) Экспорт
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Настройки не прочитаны!'"));
	Иначе
		ПрочитатьФайлНастроек();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
