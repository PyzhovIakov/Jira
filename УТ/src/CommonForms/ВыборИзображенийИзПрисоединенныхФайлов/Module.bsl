
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)	
	
	Если ЗначениеЗаполнено(Параметры.ВыбранныйФайл) 
		И Не ТипПараметраСоответствуетТипуРеквизитаФормы("ВыбранныйФайл") Тогда
		Отказ = Истина;
		Возврат;			
	КонецЕсли;
	
	ВыбранныйФайл = Параметры.ВыбранныйФайл;
	АдресТаблицыИзображений = Параметры.АдресТаблицыИзображений;
	ИдентификаторФормыВладельца = Параметры.ИдентификаторФормыВладельца;

	ДобавитьИзображения();			
	ЗадатьПредставлениеВладельца();	
	УказатьДоступныерасширения();			

	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ДекорацияИзображенияОтсутствуют", "Видимость", КоличествоИзображений = 0);	
		 
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура АдресКартинкиНажатие(Элемент, СтандартнаяОбработка)
	
	ОчиститьСообщения();
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ЗначениеЗаполнено(ВыбранныйФайл) Тогда
		ТекстСообщения = НСтр("ru='Отсутствует изображение для просмотра'", ОбщегоНазначенияКлиент.КодОсновногоЯзыка());
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ДанныеФайла = ПолучитьДанныеФайла(ВыбранныйФайл, УникальныйИдентификатор);
	РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайла);	
	
КонецПроцедуры

&НаКлиенте
Процедура КартинкаДляВыбораНажатие(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	Отбор = Новый Структура("ИмяРеквизитаЭлементаФормы", Элемент.Имя);
	НайденныеСтрокиИзображения = ТаблицаИзображений.НайтиСтроки(Отбор);
	Если НайденныеСтрокиИзображения.Количество() = 0 
		Или Не ЗначениеЗаполнено(НайденныеСтрокиИзображения[0].Изображение) Тогда
		ТекстСообщения = 
			НСтр("ru = 'Не удается выбрать данное изображение. Выберите другое или обратитесь к администратору'", 
			ОбщегоНазначенияКлиент.КодОсновногоЯзыка());
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	АдресКартинки = ЭтотОбъект[Элемент.Имя];
	
	ВыбранныйФайл = НайденныеСтрокиИзображения[0].Изображение;
		
	ВремяЗадержкиКлика = 300;
	Если ТекущаяУниверсальнаяДатаВМиллисекундах() - ВремяНажатия < ВремяЗадержкиКлика
		И Элемент.Имя = ИмяВыбранногоЭлемента Тогда
		Закрыть(ВыбранныйФайл);	
	Иначе
		ВремяНажатия = ТекущаяУниверсальнаяДатаВМиллисекундах();
		ОформлениеКартинок(Элемент.Имя);
	КонецЕсли;
					
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	Если Не ЗначениеЗаполнено(ВыбранныйФайл) Тогда
		ТекстСообщения = НСтр("ru = 'Выберите файл изображения'", ОбщегоНазначенияКлиент.КодОсновногоЯзыка());
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);	
		Возврат;
	КонецЕсли;
	
	Закрыть(ВыбранныйФайл);	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОформлениеКартинок(ИмяТекущегоЭлемента)

// BSLLS:StyleElementConstructors-off
	РамкаВыделения = Новый Рамка(ТипРамкиЭлементаУправления.Одинарная, 5);
	РамкаОбычная = Новый Рамка(ТипРамкиЭлементаУправления.Одинарная, 1);
// BSLLS:StyleElementConstructors-on
		
	// Выделяем выбранную картинку 
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, ИмяТекущегоЭлемента, "Рамка", РамкаВыделения);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, ИмяТекущегоЭлемента, "ЦветРамки", ЦветаСтиля.ЦветАкцента);
	
	Если ЗначениеЗаполнено(ИмяВыбранногоЭлемента) И ИмяВыбранногоЭлемента <> ИмяТекущегоЭлемента Тогда
			
		// Очищаем выделение с ранее выбранной картинки
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, ИмяВыбранногоЭлемента, "Рамка", РамкаОбычная);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, ИмяВыбранногоЭлемента, "ЦветРамки", ЦветаСтиля.ЦветРамки);
		
	КонецЕсли;

	ИмяВыбранногоЭлемента = ИмяТекущегоЭлемента;
			
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеФайла(ФайлКартинки, ИдентификаторФормы)
	
	ДополнительныеПараметры = РаботаСФайламиКлиентСервер.ПараметрыДанныхФайла();
	ДополнительныеПараметры.ВызыватьИсключение = Ложь;
	ДополнительныеПараметры.ИдентификаторФормы = ИдентификаторФормы;

	Возврат РаботаСФайлами.ДанныеФайла(ФайлКартинки, ДополнительныеПараметры);

КонецФункции 

&НаСервереБезКонтекста
Функция НавигационнаяСсылкаКартинки(ФайлКартинки, ИдентификаторФормы)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Результат = "";
	
	ДанныеФайла = ПолучитьДанныеФайла(ФайлКартинки, ИдентификаторФормы);
	Если ДанныеФайла <> Неопределено Тогда
		Результат = ДанныеФайла.СсылкаНаДвоичныеДанныеФайла;
	КонецЕсли;
		
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ОбновитьЭлементыФормыИзображений()
	
	Для Каждого СтрокаТаблицыИзображений Из ТаблицаИзображений Цикл
		
		СоздатьЭлементАдресКартинки(СтрокаТаблицыИзображений.ИмяРеквизитаЭлементаФормы, 
			СтрокаТаблицыИзображений.ИмяГруппыФормы);
		
		ЗначениеРеквизита = НавигационнаяСсылкаКартинки(СтрокаТаблицыИзображений.Изображение, УникальныйИдентификатор);
		ОбщегоНазначения.УстановитьЗначениеРеквизита(
			ЭтотОбъект, СтрокаТаблицыИзображений.ИмяРеквизитаЭлементаФормы, ЗначениеРеквизита);
		
		Если СтрокаТаблицыИзображений.Изображение = ВыбранныйФайл Тогда 
			АдресКартинки = ЗначениеРеквизита;
			ОформлениеКартинок(СтрокаТаблицыИзображений.ИмяРеквизитаЭлементаФормы);
		КонецЕсли;	
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция КоличествоИзображенийВСтроке()

	Результат = 5;

	КоличествоИзображенийВТриКолонки = 15;
	КоличествоИзображенийВЧетыреКолонки = 30;
	
	Если КоличествоИзображений < КоличествоИзображенийВТриКолонки Тогда
		Результат = 3;	
	ИначеЕсли КоличествоИзображений < КоличествоИзображенийВЧетыреКолонки Тогда
		Результат = 4;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура СоздатьЭлементАдресКартинки(ИмяЭлементаФормы, ИмяГруппыФормы)
	
	ГруппаФормы = НайтиСоздатьГруппуИзображенийВСтроке(ИмяГруппыФормы);

	ЭлементФормы = Элементы.Добавить(ИмяЭлементаФормы, Тип("ПолеФормы"), ГруппаФормы);
	ЭлементФормы.Вид = ВидПоляФормы.ПолеКартинки;
	ЭлементФормы.ПутьКДанным = ИмяЭлементаФормы;
	ЭлементФормы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	ЭлементФормы.АвтоМаксимальнаяВысота = Ложь;
	ЭлементФормы.РастягиватьПоВертикали = Ложь;
	ЭлементФормы.Высота = 5;
	ЭлементФормы.МаксимальнаяВысота = 5;
	ЭлементФормы.АвтоМаксимальнаяШирина = Ложь;
	ЭлементФормы.РастягиватьПоГоризонтали = Ложь;
	ЭлементФормы.Ширина = 15;
	ЭлементФормы.МаксимальнаяШирина = 15;
	ЭлементФормы.РазмерКартинки = РазмерКартинки.Пропорционально;
	ЭлементФормы.Гиперссылка = Истина;
	ЭлементФормы.УстановитьДействие("Нажатие", "КартинкаДляВыбораНажатие");
		
КонецПроцедуры

&НаСервере
Функция НайтиСоздатьГруппуИзображенийВСтроке(ИмяГруппы)
	
	ГруппаФормы = Элементы.Найти(ИмяГруппы);
	
	Если ГруппаФормы = Неопределено Тогда
		
		ГруппаФормы = Элементы.Добавить(ИмяГруппы, Тип("ГруппаФормы"), Элементы.СтраницаИзображения);
		ГруппаФормы.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаФормы.ОтображатьЗаголовок = Ложь;
		ГруппаФормы.Отображение = ОтображениеОбычнойГруппы.Нет;
		ГруппаФормы.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
			
	КонецЕсли;		
	
	Возврат ГруппаФормы;
	
КонецФункции

&НаСервере
Процедура ЗадатьПредставлениеВладельца()

	Если КоличествоИзображений = 0 Тогда
		Возврат;
	КонецЕсли;
			
	ПерваяСтрока = ТаблицаИзображений[0];
	Если Не ЗначениеЗаполнено(ПерваяСтрока.ПредставлениеВладельца) Тогда
		Возврат;
	КонецЕсли;
			
	Если ЗначениеЗаполнено(ПерваяСтрока.Владелец) Тогда
		
		ШаблонСтроки = НСтр("ru = '<span style=""color: НедоступныйДляВыбораЭлементБЭД"">
			|Изображения из присоединенных файлов</span> <a href=""%1"">%2</a>'", ОбщегоНазначения.КодОсновногоЯзыка());
		
		ПервыйПараметрШаблона = ПолучитьНавигационнуюСсылку(ПерваяСтрока.Владелец);
		ВторойПараметрШаблона = ПерваяСтрока.ПредставлениеВладельца;
	
	Иначе 
		
		ШаблонСтроки = НСтр("ru = '<span style=""color: НедоступныйДляВыбораЭлементБЭД"">
			|Изображения из присоединенных файлов %1</span>'", ОбщегоНазначения.КодОсновногоЯзыка());
							
		ПервыйПараметрШаблона = ПерваяСтрока.ПредставлениеВладельца;
		ВторойПараметрШаблона = Неопределено;
		
	КонецЕсли;

	ТекстЗаголовка = СтроковыеФункции.ФорматированнаяСтрока(
			ШаблонСтроки, ПервыйПараметрШаблона, ВторойПараметрШаблона);
			
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ДекорацияПредставлениеВладельца",
		"Заголовок", ТекстЗаголовка);
		
КонецПроцедуры

&НаСервере
Процедура УказатьДоступныеРасширения()
	
	ТекстДоступныхФорматов = СтрСоединить(КоммерческиеПредложенияСлужебный.РасширенияИзображений(), ", ");
	ТекстНадписи = СтрШаблон("Доступные форматы: %1", ТекстДоступныхФорматов);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ДекорацияДоступныеРасширения",
		"Заголовок", ТекстНадписи);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьИзображения()
				
	Если ЗначениеЗаполнено(АдресТаблицыИзображений) И ЭтоАдресВременногоХранилища(АдресТаблицыИзображений) Тогда		
		ТаблицаИзображений.Загрузить(ПолучитьИзВременногоХранилища(АдресТаблицыИзображений));				
	КонецЕсли;
			
	КоличествоИзображений = ТаблицаИзображений.Количество();
	Если КоличествоИзображений = 0 Тогда
		Возврат;	
	КонецЕсли;
	
	КоличествоИзображенийВСтроке = КоличествоИзображенийВСтроке();
	СчетчикГруппИзображенийВСтроке = 1;
	ИмяГруппыФормы = "";
	МассивДобавляемыхРеквизитов = Новый Массив;
				
	Для Счетчик = 1 По КоличествоИзображений Цикл
				
		ИмяРеквизитаЭлементаФормы = СтрШаблон("АдресКартинки%1", Счетчик);
		Если Счетчик % КоличествоИзображенийВСтроке = 1 Тогда
			ИмяГруппыФормы = СтрШаблон("ГруппаИзображенийВСтроке%1", СчетчикГруппИзображенийВСтроке);		
			СчетчикГруппИзображенийВСтроке = СчетчикГруппИзображенийВСтроке + 1;	
		КонецЕсли;

		ДобавитьИзображение(ТаблицаИзображений[Счетчик - 1], ИмяРеквизитаЭлементаФормы, ИмяГруппыФормы, 
			МассивДобавляемыхРеквизитов);		
		
	КонецЦикла;

	ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);	
	
	ОбновитьЭлементыФормыИзображений();				
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьИзображение(СтрокаТаблицыИзображений, ИмяРеквизитаЭлементаФормы, ИмяГруппыФормы, 
		МассивДобавляемыхРеквизитов)
	
	НовыйРеквизит = Новый РеквизитФормы(ИмяРеквизитаЭлементаФормы, Новый ОписаниеТипов("Строка"));
	МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);	
	
	СтрокаТаблицыИзображений.ИмяРеквизитаЭлементаФормы = ИмяРеквизитаЭлементаФормы;
	СтрокаТаблицыИзображений.ИмяГруппыФормы = ИмяГруппыФормы;
		
КонецПроцедуры

// Проверяет соответствие типа параметра типу реквизита формы
// 
// Параметры:
//  ИмяПараметра - Строка - Имя параметра
//  ИмяРеквизитаФормы - Строка - Имя реквизита формы. Если не заполнено, соответствует имени параметра. 
// 
// Возвращаемое значение:
//  Булево - результат проверки
&НаСервере
Функция ТипПараметраСоответствуетТипуРеквизитаФормы(ИмяПараметра, ИмяРеквизитаФормы = "")

	Результат = Ложь;
	
	Если Не ЗначениеЗаполнено(ИмяРеквизитаФормы) Тогда
		ИмяРеквизитаФормы = ИмяПараметра;	
	КонецЕсли;	
	
	ДанныеРеквизита = Неопределено;
	
	ВсеРеквизитыФормы = ПолучитьРеквизиты();
	Для Каждого Реквизит Из ВсеРеквизитыФормы Цикл
		Если Реквизит.Имя = ИмяРеквизитаФормы Тогда
			ДанныеРеквизита = Реквизит;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ДанныеРеквизита <> Неопределено Тогда
		ТипЗначенияПараметра = ТипЗнч(Параметры[ИмяПараметра]);
		Результат = Реквизит.ТипЗначения.СодержитТип(ТипЗначенияПараметра);	
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
