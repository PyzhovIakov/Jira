#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Параметры.Свойство("СтруктураПоиска") Тогда
		
		ДублиНайдены = НайтиДубли(Параметры.СтруктураОбъекта, Параметры.СтруктураПоиска);
		
		Если ДублиНайдены Тогда
			ВеткаКорень = ДеревоПоиска.ПолучитьЭлементы();
			ВеткаКорень.Очистить();
			НоваяСтрока					= ВеткаКорень.Добавить();
			НоваяСтрока.Представление	= НСтр("ru='Создать потенциального клиента';en='Create: Customer / Contact'");
			НоваяСтрока.Объект			= Справочники.CRM_ПотенциальныеКлиенты.ПустаяСсылка();
			
			Для Каждого СтрокаНайденого Из _ТаблицаНайдено Цикл
				
				Строка				= ВеткаКорень.Добавить();				
				Строка.Объект			= СтрокаНайденого.Объект;
				Строка.Код				= СтрокаНайденого.Код;
				Строка.ОтветственныйМенеджер = СтрокаНайденого.ОтветственныйМенеджер;
				Строка.Представление	= СтрокаНайденого.Представление;
				Строка.ПометкаУдаления = СтрокаНайденого.Объект.ПометкаУдаления;
				
			КонецЦикла;			
		Иначе
			Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ПравоДоступа("Добавление", Метаданные.Справочники.CRM_ПотенциальныеКлиенты) Тогда
		Элементы.ПродолжитьВводНового.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ТипЗнч(ВладелецФормы.ВладелецФормы) = Тип("ПолеФормы") Тогда
		Элементы.ПерейтиКНайденному.Заголовок = НСтр("ru = 'Использовать найденного клиента'");
	КонецЕсли;
	
	Если НЕ ДублиНайдены Тогда
		ПодключитьОбработчикОжидания("Подключаемый_ПродолжитьВводНового", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область КомандыФормы

&НаКлиенте
Процедура ПродолжитьВводНового(Команда)
	
	Если ЭтоВводНового Тогда
	
	ТД	= Элементы.ДеревоПоиска.ТекущиеДанные;
	
		Если ТД = Неопределено Или НЕ ЗначениеЗаполнено(ТД.Объект) Тогда
			Закрыть(Новый Структура("Результат,Объект", "Продолжить", Неопределено));
		Иначе
			Закрыть(Новый Структура("Результат,Объект", "Продолжить", ТД.Объект));
		КонецЕсли;	
	
	Иначе
		ПерейтиКНайденному(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВводНового()
	
	Закрыть(Новый Структура("Результат", "Продолжить"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКНайденному(Команда)
	
	ТД	= Элементы.ДеревоПоиска.ТекущиеДанные;
	Если НЕ ТД = Неопределено Тогда
		Закрыть(Новый Структура("Результат,Объект", "Перейти", ТД.Объект));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ВспомогательныеПроцедурыИФункции

&НаСервере 
Функция НайтиДубли(СтруктураОбъекта, СтруктураПоиска)
	
	МассивНайденных = НайтиДублиПК(СтруктураОбъекта, СтруктураПоиска);
	
	Если МассивНайденных.Количество() = 0 Тогда
		ЕстьНайденные = Ложь;
	Иначе	
		ЕстьНайденные = Истина;
		Для Каждого СтрокаМассива Из МассивНайденных Цикл
			Отбор = Новый Структура();
			Отбор.Вставить("Объект", СтрокаМассива.Ссылка);
			НайдСтрока = _ТаблицаНайдено.НайтиСтроки(Отбор);
			Если НайдСтрока.Количество() = 0 Тогда
				Строка = _ТаблицаНайдено.Добавить();
				Строка.Объект			= СтрокаМассива.Ссылка;
				Строка.Код				= СтрокаМассива.Ссылка.Код;
				Строка.Представление	= СтрокаМассива.Наименование;
				Строка.ОтветственныйМенеджер	= СтрокаМассива.ОсновнойМенеджер;
			КонецЕсли;
			Строка = ТаблицаРасшифровкаНайдено.Добавить();
			Строка.Объект = СтрокаМассива.Ссылка;
			Строка.ПредставлениеНайденоПо = СтрЗаменить(СтрокаМассива.ИмяРеквизита, "CRM_", "") + " - " 
				+ Строка(СтрокаМассива.Реквизит);
		КонецЦикла;
		_ТаблицаНайдено.Сортировать("Объект Возр");
	КонецЕсли;
	
	Возврат ЕстьНайденные;
	
КонецФункции

Функция НайтиДублиПК(СтруктураОбъекта, СтруктураПоиска)
	
	УстановитьПривилегированныйРежим(Истина);
	МассивНайденных	= Новый Массив;
	
	УсловияПоискаПоТочномуСовпадению = Новый Массив;
	УсловияПоискаПоЧастиСтроки = Новый Массив;
	
	Для Каждого КлючИЗначение Из СтруктураПоиска Цикл
		
		ИмяРеквизита		= КлючИЗначение.Ключ;
		НайденноеЗначение	= "";
		
		Если ТипЗнч(СтруктураОбъекта) = Тип("Структура") Тогда
			СтруктураОбъекта.Свойство(ИмяРеквизита, НайденноеЗначение);
		Иначе
			Если НЕ ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтруктураОбъекта,
				 ИмяРеквизита) Тогда Продолжить; КонецЕсли;
			НайденноеЗначение = СтруктураОбъекта[ИмяРеквизита];
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(НайденноеЗначение) Тогда
			
			Если СтрНайти(ИмяРеквизита, "CRM_") = 1 Тогда
				ИмяРеквизита	= СтрЗаменить(ИмяРеквизита, "CRM_", "");
			ИначеЕсли СтрНайти(ИмяРеквизита, "Контакт_") = 1 Тогда
				ИмяРеквизита	= СтрЗаменить(ИмяРеквизита, "Контакт_", "");
			Иначе
				Продолжить;
			КонецЕсли;
			
			Если ТипЗнч(СтруктураОбъекта) = Тип("Структура") Тогда
				СтруктураОбъекта.Свойство(ИмяРеквизита, НайденноеЗначение);
			Иначе
				Если НЕ ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтруктураОбъекта,
					 ИмяРеквизита) Тогда Продолжить; КонецЕсли;
				НайденноеЗначение = СтруктураОбъекта[ИмяРеквизита];
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(НайденноеЗначение) Тогда
				Продолжить;
			КонецЕсли;
			
		КонецЕсли;
		
		НовоеУсловие = Новый Структура();
		ПоляПоиска = Новый Массив();
		
		Если ИмяРеквизита = "Наименование" Тогда
			ПолеПоиска = Перечисления.CRM_ПоляПоискаКонтактов.Наименование;
		ИначеЕсли ИмяРеквизита = "Телефон" Тогда
			ПолеПоиска = Перечисления.CRM_ПоляПоискаКонтактов.Телефон;
		ИначеЕсли ИмяРеквизита = "АдресЭлектроннойПочты" Тогда
			ПолеПоиска = Перечисления.CRM_ПоляПоискаКонтактов.EMail;
		ИначеЕсли ИмяРеквизита = "Адрес" Тогда
			ПолеПоиска = Перечисления.CRM_ПоляПоискаКонтактов.Адрес;
		ИначеЕсли ИмяРеквизита = "Сайт" Тогда
			ПолеПоиска = Перечисления.CRM_ПоляПоискаКонтактов.Прочее;
		КонецЕсли;
		
		ПоляПоиска.Добавить(ПолеПоиска);
		НовоеУсловие = CRM_ПоискКонтактов.СтруктураУсловияПоиска(НайденноеЗначение);
		НовоеУсловие.Вставить("ПоляПоиска", ПоляПоиска);
		
		Если КлючИЗначение.Значение = ВРег("ПОДОБНО") Тогда
			УсловияПоискаПоЧастиСтроки.Добавить(НовоеУсловие);
		ИначеЕсли КлючИЗначение.Значение = "=" Тогда
			УсловияПоискаПоТочномуСовпадению.Добавить(НовоеУсловие);
		КонецЕсли;
		
	КонецЦикла;
	
	Если УсловияПоискаПоЧастиСтроки.Количество() > 0 Тогда
		
		МассивПК = CRM_ПоискКонтактов.ВыполнитьПоискКонтактов(УсловияПоискаПоЧастиСтроки, 1, , Истина);
		
		Если Не ЗначениеЗаполнено(МассивПК.КодОшибки) Тогда
			
			Для Каждого Строка Из МассивПК.ТаблицаРезультатов Цикл
				
				Если ТипЗнч(Строка.Владелец) = Тип("СправочникСсылка.CRM_ПотенциальныеКлиенты") Тогда
					НовыйЭлемент = Новый Структура("ИмяРеквизита, Наименование, ОсновнойМенеджер, Реквизит, Ссылка",
					Строка(Строка.ПолеПоиска), Строка.Владелец.Наименование, Строка.Владелец.ОсновнойМенеджер, Строка.ЗначениеПоиска, Строка.Владелец);
					МассивНайденных.Добавить(НовыйЭлемент);
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если УсловияПоискаПоТочномуСовпадению.Количество() > 0 Тогда
		
		МассивПК = CRM_ПоискКонтактов.ВыполнитьПоискКонтактов(УсловияПоискаПоТочномуСовпадению, 2, , Истина);
		
		Если Не ЗначениеЗаполнено(МассивПК.КодОшибки) Тогда
			
			Для Каждого Строка Из МассивПК.ТаблицаРезультатов Цикл
				
				Если ТипЗнч(Строка.Владелец) = Тип("СправочникСсылка.CRM_ПотенциальныеКлиенты") Тогда
					НовыйЭлемент = Новый Структура("ИмяРеквизита, Наименование, ОсновнойМенеджер, Реквизит, Ссылка",
					Строка(Строка.ПолеПоиска), Строка.Владелец.Наименование, Строка.Владелец.ОсновнойМенеджер, Строка.ЗначениеПоиска, Строка.Владелец);
					МассивНайденных.Добавить(НовыйЭлемент);
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат МассивНайденных;
	
КонецФункции

 #Область РаботаСДеревомПоиска

&НаКлиенте
Процедура ДеревоПоискаПриАктивизацииСтроки(Элемент)
	
	Если Элементы.ДеревоПоиска.ТекущиеДанные = Неопределено Тогда
		ТекОбъект = Неопределено;
	ИначеЕсли ТекОбъект = Элементы.ДеревоПоиска.ТекущиеДанные.Объект Тогда
		Возврат;
	Иначе
		ТекОбъект = Элементы.ДеревоПоиска.ТекущиеДанные.Объект;
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("ДеревоПоискаПриАктивизацииСтрокиОбработчик", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПоискаПриАктивизацииСтрокиОбработчик()
	
	ОтветственныйМенеджерКлиента = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка");
	
	Элементы.ОтветственныйМенеджерКлиента.Видимость	= Ложь;
	
	ЭтоВводНового = Ложь;
	Если Элементы.ДеревоПоиска.ТекущиеДанные = Неопределено Тогда
		
		Элементы.ПродолжитьВводНового.Заголовок 				= НСтр("ru='Продолжить ввод нового';en='Continue typing a new one'");
		Элементы.ПерейтиКНайденному.Доступность					= Ложь;
		Элементы.ТаблицаРасшифровкаНайдено.ОтборСтрок			= Новый ФиксированнаяСтруктура("Объект", Неопределено);
		ЭтоВводНового = Истина;
		
	ИначеЕсли НЕ ЗначениеЗаполнено(Элементы.ДеревоПоиска.ТекущиеДанные.Объект) Тогда
		
		Элементы.ПродолжитьВводНового.Заголовок					= НСтр("ru='Продолжить ввод нового';en='Continue typing a new one'");		
		Элементы.ПерейтиКНайденному.Доступность					= Ложь;
		Элементы.ТаблицаРасшифровкаНайдено.ОтборСтрок			= Новый ФиксированнаяСтруктура("Объект", ТекОбъект); 
		ЭтоВводНового = Истина;
		
	Иначе
		
		Элементы.ПродолжитьВводНового.Заголовок			= НСтр("ru='Выбрать текущего';en='Choose Customer'");
		
		ОтветственныйМенеджерКлиента					= Элементы.ДеревоПоиска.ТекущиеДанные.ОтветственныйМенеджер;
		Элементы.ОтветственныйМенеджерКлиента.Видимость	= Истина;
		Элементы.ТаблицаРасшифровкаНайдено.ОтборСтрок			= Новый ФиксированнаяСтруктура("Объект", ТекОбъект); 
		
	КонецЕсли;
	
	ИзменитьПодсказкуПродолжитьВводНового("");
	Элементы.ПродолжитьВводНового.Доступность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьПодсказкуПродолжитьВводНового(Подсказка)
	
	Команда = Команды.Найти("ПродолжитьВводНового");
	
	Если Команда <> Неопределено Тогда
		Команда.Подсказка = Подсказка;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПоискаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		
		ПоказатьЗначение(, Элемент.ТекущиеДанные.Объект);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
