
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МассивИдентификаторовОбъектов = Новый Массив;
	Если Не Параметры.Свойство("ИдентификаторМетаданных", ИдентификаторОбъекта) 
		И НЕ Параметры.Свойство("ИдентификаторыМетаданных", МассивИдентификаторовОбъектов) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	Параметры.Свойство("ВключатьДопРеквизиты", ВключатьДопРеквизиты);
	Параметры.Свойство("ОграничениеТипов", ОграничениеТипов);
	ВключатьДопРеквизиты = ВключатьДопРеквизиты
		 И ПолучитьФункциональнуюОпцию("ИспользоватьДополнительныеРеквизитыИСведения");
	Параметры.Свойство("ВключатьКИ", ВключатьКИ);
	Если НЕ Параметры.Свойство("Уровней", Уровней) Тогда
		Уровней = 3;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ИдентификаторОбъекта) И МассивИдентификаторовОбъектов.Количество() > 0 Тогда
		ИдентификаторОбъекта = МассивИдентификаторовОбъектов[0];
	КонецЕсли;
	Если МассивИдентификаторовОбъектов.Количество() > 1 Тогда
		Элементы.ИдентификаторОбъекта.Видимость = Истина;
		Элементы.ИдентификаторОбъекта.СписокВыбора.ЗагрузитьЗначения(МассивИдентификаторовОбъектов);
	КонецЕсли;
	
	СтандартныеРеквизиты = "Код, Наименование, Владелец, Родитель, Номер, Дата";
	
	МДИсточника = ИдентификаторОбъекта.ЗначениеПустойСсылки.Метаданные();
	ЭтоТЧ = Параметры.Свойство("ИмяТЧ");
	Если ЭтоТЧ Тогда
		МДИсточника = МДИсточника.ТабличныеЧасти.Найти(Параметры.ИмяТЧ);
		Если МДИсточника = Неопределено Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Дерево = РеквизитФормыВЗначение("ДеревоРеквизитов");
	СформироватьДеревоРеквизитов(Дерево, МДИсточника, , ЭтоТЧ);
	ЗначениеВРеквизитФормы(Дерево, "ДеревоРеквизитов");
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоРеквизитовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОбработатьВыбор(ВыбраннаяСтрока);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	ОбработатьВыбор(Элементы.ДеревоРеквизитов.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьДеревоРеквизитов(Дерево, МетаданныеОбъекта, ТекУровень = 1, ЭтоТЧ = Ложь)
	
	Если ТекУровень > Уровней Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекУровень = 1 И (ОграничениеТипов = Неопределено
		 Или ОграничениеТипов.СодержитТип(Тип(СтрЗаменить(МетаданныеОбъекта.ПолноеИмя(), ".", "Ссылка.")))) Тогда
		
		НовСтрРеквизит = Дерево.Строки.Добавить();
		НовСтрРеквизит.Реквизит = "Ссылка";
		НовСтрРеквизит.Представление = НСтр("ru = 'Ссылка'; en = 'Reference'");
		
		ЧастиИмени = СтрРазделить(МетаданныеОбъекта.ПолноеИмя(), ".");
		ПолноеИмяОбъекта = ЧастиИмени[0] + "." + ЧастиИмени[1];
		НовСтрРеквизит.Тип = Тип(СтрЗаменить(ПолноеИмяОбъекта, ".", "Ссылка."));
		
	КонецЕсли;

	Для каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
		Типы = Реквизит.Тип.Типы();
		Если СтрНайти(НРег(Реквизит.Имя), "удалить") = 1 ИЛИ Типы[0] = Тип("ХранилищеЗначения") Тогда
			Продолжить;
		КонецЕсли;
		
		НовСтрРеквизит = Дерево.Строки.Добавить();
		НовСтрРеквизит.Реквизит = Реквизит.Имя;
		НовСтрРеквизит.Представление = Строка(Реквизит);
		НовСтрРеквизит.Тип = Реквизит.Тип;
		
		Если Типы.Количество() = 1 И ОбщегоНазначения.ЭтоСсылка(Типы[0]) 
			И (ОбщегоНазначения.ЭтоДокумент(Метаданные.НайтиПоТипу(Типы[0]))
				 ИЛИ ОбщегоНазначения.ЭтоСправочник(Метаданные.НайтиПоТипу(Типы[0]))) Тогда
			СформироватьДеревоРеквизитов(НовСтрРеквизит, Метаданные.НайтиПоТипу(Типы[0]), ТекУровень + 1);
		КонецЕсли;
		
		Если НовСтрРеквизит.Строки.Количество() = 0 И ОграничениеТипов <> Неопределено
			И CRM_ОбщегоНазначенияКлиентСервер.ПересечениеМножеств(ОграничениеТипов.Типы(),
				 Реквизит.Тип.Типы()).Количество() = 0 Тогда
			Дерево.Строки.Удалить(НовСтрРеквизит);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого Реквизит Из МетаданныеОбъекта.СтандартныеРеквизиты Цикл
		Если СтрНайти(СтандартныеРеквизиты, Реквизит.Имя) > 0 
			И (ОграничениеТипов = Неопределено 
				Или CRM_ОбщегоНазначенияКлиентСервер.ПересечениеМножеств(ОграничениеТипов.Типы(), Реквизит.Тип.Типы()).Количество() > 0) Тогда
			НовСтрРеквизит = Дерево.Строки.Добавить();
			НовСтрРеквизит.Реквизит = Реквизит.Имя;
			НовСтрРеквизит.Представление = Реквизит.Имя;
			НовСтрРеквизит.Тип = Реквизит.Тип;
		КонецЕсли;
	КонецЦикла;

	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(МетаданныеОбъекта, "РеквизитыАдресации") Тогда
		Для каждого Реквизит Из МетаданныеОбъекта.РеквизитыАдресации Цикл
			НовСтрРеквизит = Дерево.Строки.Добавить();
			НовСтрРеквизит.Реквизит = Реквизит.Имя;
			НовСтрРеквизит.Представление = Реквизит.Имя;
			НовСтрРеквизит.Тип = Реквизит.Тип;
			
			Типы = Реквизит.Тип.Типы();
		
			Если Типы.Количество() = 1 И ОбщегоНазначения.ЭтоСсылка(Типы[0]) 
				И (ОбщегоНазначения.ЭтоДокумент(Метаданные.НайтиПоТипу(Типы[0]))
					 ИЛИ ОбщегоНазначения.ЭтоСправочник(Метаданные.НайтиПоТипу(Типы[0]))) Тогда
				СформироватьДеревоРеквизитов(НовСтрРеквизит, Метаданные.НайтиПоТипу(Типы[0]), ТекУровень + 1);
			КонецЕсли;
		
			Если НовСтрРеквизит.Строки.Количество() = 0 И ОграничениеТипов <> Неопределено
				И CRM_ОбщегоНазначенияКлиентСервер.ПересечениеМножеств(ОграничениеТипов.Типы(),
					 Реквизит.Тип.Типы()).Количество() = 0 Тогда
				Дерево.Строки.Удалить(НовСтрРеквизит);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если НЕ ЭтоТЧ Тогда
		Если ВключатьДопРеквизиты И МетаданныеОбъекта.ТабличныеЧасти.Найти("ДополнительныеРеквизиты") <> Неопределено Тогда
			ДополнитьДеревоРеквизитовДополнительнымиРеквизитами(МетаданныеОбъекта, Дерево, ТекУровень);
		КонецЕсли;
		
		Если ВключатьКИ И МетаданныеОбъекта.ТабличныеЧасти.Найти("КонтактнаяИнформация") <> Неопределено Тогда
			ДополнитьДеревоРеквизитовКонтактнойИнформацией(МетаданныеОбъекта, Дерево);
		КонецЕсли;
	КонецЕсли;
	
	Дерево.Строки.Сортировать("Представление", Истина);
	
КонецПроцедуры

Процедура ДополнитьДеревоРеквизитовКонтактнойИнформацией(МетаданныеОбъекта, НовСтрОбъект)
	МассивВидов = Новый Массив;
	Если МетаданныеОбъекта = Метаданные.Справочники.Партнеры Тогда
		МассивВидов.Добавить(Справочники.ВидыКонтактнойИнформации.СправочникПартнеры);
		МассивВидов.Добавить(Справочники.ВидыКонтактнойИнформации.CRM_СправочникПартнерыКомпания);
		МассивВидов.Добавить(Справочники.ВидыКонтактнойИнформации.CRM_СправочникПартнерыЧастноеЛицо);
	ИначеЕсли МетаданныеОбъекта = Метаданные.Справочники.CRM_ПотенциальныеКлиенты Тогда
		МассивВидов.Добавить(Справочники.ВидыКонтактнойИнформации.СправочникCRM_ПотенциальныеКлиенты);
	ИначеЕсли МетаданныеОбъекта = Метаданные.Справочники.КонтактныеЛицаПартнеров Тогда
		МассивВидов.Добавить(Справочники.ВидыКонтактнойИнформации.СправочникКонтактныеЛицаПартнеров);
	ИначеЕсли МетаданныеОбъекта = Метаданные.Справочники.Организации Тогда
		МассивВидов.Добавить(Справочники.ВидыКонтактнойИнформации.СправочникОрганизации);
	ИначеЕсли МетаданныеОбъекта = Метаданные.Справочники.ФизическиеЛица Тогда
		МассивВидов.Добавить(Справочники.ВидыКонтактнойИнформации.СправочникФизическиеЛица);
	КонецЕсли;
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВидыКонтактнойИнформации.Ссылка КАК Ссылка,
	                      |	ВидыКонтактнойИнформации.Тип КАК Тип,
	                      |	ВидыКонтактнойИнформации.Наименование КАК Наименование
	                      |ИЗ
	                      |	Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации
	                      |ГДЕ
	                      |	ВидыКонтактнойИнформации.Родитель В(&Родитель)");
	Запрос.УстановитьПараметр("Родитель", МассивВидов);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НовСтрРеквизит = НовСтрОбъект.Строки.Добавить();
		НовСтрРеквизит.Реквизит = Выборка.Ссылка;
		НовСтрРеквизит.Представление = Выборка.Наименование;
	КонецЦикла;
	
КонецПроцедуры

Процедура ДополнитьДеревоРеквизитовДополнительнымиРеквизитами(МетаданныеОбъекта, НовСтрОбъект, ТекУровень)
	
	НаборСвойствОбъекта = Новый СписокЗначений;
	Если МетаданныеОбъекта = Метаданные.Справочники.Партнеры Тогда
		Объект = Справочники.Партнеры.СоздатьЭлемент();
		НаборСвойствОбъекта.ЗагрузитьЗначения(УправлениеСвойствамиСлужебный.ПолучитьНаборыСвойствОбъекта(Объект).ВыгрузитьКолонку("Набор"));
	ИначеЕсли МетаданныеОбъекта = Метаданные.Справочники.КонтактныеЛицаПартнеров Тогда
		НаборСвойствОбъекта.ЗагрузитьЗначения(УправлениеСвойствамиСлужебный.ПолучитьНаборыСвойствОбъекта(Справочники.КонтактныеЛицаПартнеров.ПустаяСсылка()).ВыгрузитьКолонку("Набор"));
	ИначеЕсли МетаданныеОбъекта = Метаданные.Справочники.CRM_ПотенциальныеКлиенты Тогда
		НаборСвойствОбъекта.ЗагрузитьЗначения(УправлениеСвойствамиСлужебный.ПолучитьНаборыСвойствОбъекта(Справочники.CRM_ПотенциальныеКлиенты.ПустаяСсылка()).ВыгрузитьКолонку("Набор"));
	КонецЕсли;

	Если НаборСвойствОбъекта.Количество() > 0 Тогда
		ДополнительныеСвойстваОбъекта = Новый ТаблицаЗначений;
		ДополнительныеСвойстваОбъекта.Колонки.Добавить("Свойство");
		
		ВидСвойств = Перечисления.ВидыСвойств.ДополнительныеРеквизиты;
		ТаблицаДополнительныхРеквизитов = УправлениеСвойствамиСлужебный.ЗначенияСвойств(ДополнительныеСвойстваОбъекта,
			НаборСвойствОбъекта, ВидСвойств);
			
		Для Каждого СтрокаТЗ Из ТаблицаДополнительныхРеквизитов Цикл
			
			НовСтрРеквизит = НовСтрОбъект.Строки.Добавить();
			НовСтрРеквизит.Реквизит = СтрокаТЗ.Свойство;
			НовСтрРеквизит.Представление = СтрокаТЗ.Наименование;
			
			Типы = СтрокаТЗ.ТипЗначения.Типы();
			Если Типы.Количество() = 1  И ОбщегоНазначения.ЭтоСсылка(Типы[0])
				И (ОбщегоНазначения.ЭтоДокумент(Метаданные.НайтиПоТипу(Типы[0]))
					 ИЛИ ОбщегоНазначения.ЭтоСправочник(Метаданные.НайтиПоТипу(Типы[0]))) 
				И Типы[0] <> Тип("СправочникСсылка.ЗначенияСвойствОбъектов") Тогда
				 
				СформироватьДеревоРеквизитов(НовСтрРеквизит, Метаданные.НайтиПоТипу(Типы[0]), ТекУровень + 1);
				 
			КонецЕсли;
			 
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыбор(Строка)
	
	СтруктураРеквизита = СтруктураРеквизита(Строка);
	Если СтруктураРеквизита <> Неопределено Тогда
		Закрыть(СтруктураРеквизита);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СтруктураРеквизита(Строка)
	
	СтруктураРеквизита = Новый Структура;
	СтрокаДерева = ДеревоРеквизитов.НайтиПоИдентификатору(Строка);

	Если ОграничениеТипов <> Неопределено
		 И CRM_ОбщегоНазначенияКлиентСервер.ПересечениеМножеств(СтрокаДерева.Тип.Типы(),
		 	 ОграничениеТипов.Типы()).Количество() = 0 Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Данный реквизит нельзя выбрать из-за ограничения типа выбираемого реквизита!'"));
		Возврат Неопределено;
	КонецЕсли;
		
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить(СтрокаДерева.Реквизит);
	Представление = СтрокаДерева.Представление;
	
	Пока СтрокаДерева.ПолучитьРодителя() <> Неопределено Цикл
		СтрокаДерева = СтрокаДерева.ПолучитьРодителя();
		МассивРеквизитов.Вставить(0, СтрокаДерева.Реквизит);
		Представление = СтрокаДерева.Представление + "." + Представление;
	КонецЦикла;
	
	СтруктураРеквизита.Вставить("Реквизиты", МассивРеквизитов);
	СтруктураРеквизита.Вставить("Представление", Представление);
	СтруктураРеквизита.Вставить("ИдентификаторМетаданных", ИдентификаторОбъекта);
	
	Возврат СтруктураРеквизита;
	
КонецФункции

&НаСервере
Процедура ИдентификаторОбъектаПриИзмененииНаСервере()
	МДИсточника = ИдентификаторОбъекта.ЗначениеПустойСсылки.Метаданные();
	Дерево = РеквизитФормыВЗначение("ДеревоРеквизитов");
	Дерево.Строки.Очистить();
	СформироватьДеревоРеквизитов(Дерево, МДИсточника, , ЭтоТЧ);
	ЗначениеВРеквизитФормы(Дерево, "ДеревоРеквизитов");
КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторОбъектаПриИзменении(Элемент)
	ИдентификаторОбъектаПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти
