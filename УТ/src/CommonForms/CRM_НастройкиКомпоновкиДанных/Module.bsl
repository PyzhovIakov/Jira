#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.Заголовок) Тогда
		Заголовок = Параметры.Заголовок;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Параметры.ИмяМакета) Тогда
		Отказ = Истина;
		Возврат;	
	КонецЕсли;
	
	ИмяМакета = Параметры.ИмяМакета;
	Если Параметры.ПоказыватьВыборИмениМакета Тогда
		Элементы.ИмяМакета.Видимость = Истина;
		Макеты = Метаданные.НайтиПоПолномуИмени(Параметры.ИмяОбъектаМетаданных).Макеты;	
		Для каждого Макет Из Макеты Цикл                                       		
			Элементы.ИмяМакета.СписокВыбора.Добавить(Макет.Имя, Макет.Синоним);		
		КонецЦикла;                                                            	
	КонецЕсли; 
	
	ИнициализироватьКомпоновщикСервер(Параметры.НастройкиКомпоновкиДанных);
		
КонецПроцедуры 

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		Отказ = Истина;
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаРезультатаСохранитьИзменения", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, "Данные были изменены. Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);	
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаРезультатаСохранитьИзменения(Ответ, ДопПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	ИначеЕсли Ответ = КодВозвратаДиалога.Да Тогда
		ЗаписатьИЗакрыть(Неопределено);
	КонецЕсли;  
	
КонецПроцедуры

#КонецОбласти  
	
#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИмяМакетаПриИзменении(Элемент)
	ИнициализироватьКомпоновщикСервер(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ИмяМакетаОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры
	
#КонецОбласти  
	
#Область ОбработчикиКомандФормы

&НаСервере
Функция РезультатЗакрытия()
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	
	Результат = Новый Структура;
	Результат.Вставить("ИмяМакета", ИмяМакета);
	Результат.Вставить("Настройки", Настройки);
	Результат.Вставить("ПредставлениеОтбора", Строка(Настройки.Отбор));
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Модифицированность = Ложь;
	Закрыть(РезультатЗакрытия());
	
КонецПроцедуры
	
#КонецОбласти  
	
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализироватьКомпоновщикСервер(НастройкаКомпоновки)
	
	Менеджер = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(Параметры.ИмяОбъектаМетаданных);	
	СхемаКомпоновки = Менеджер.ПолучитьМакет(ИмяМакета);
	
	АдресСхемы = ПоместитьВоВременноеХранилище(СхемаКомпоновки, УникальныйИдентификатор);
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы));
	
	Если НастройкаКомпоновки = Неопределено Тогда
		КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновки.НастройкиПоУмолчанию);
	Иначе
		Попытка
			КомпоновщикНастроек.ЗагрузитьНастройки(НастройкаКомпоновки);
			КомпоновщикНастроек.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);		
		Исключение
			КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновки.НастройкиПоУмолчанию);
		КонецПопытки;                                                                    		
	КонецЕсли;
	
КонецПроцедуры
	
#КонецОбласти

