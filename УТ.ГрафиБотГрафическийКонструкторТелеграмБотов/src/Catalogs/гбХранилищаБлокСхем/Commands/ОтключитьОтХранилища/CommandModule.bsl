
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	Перем ТекстПредупреждения;
	
	Если не ВыполнитьПроверкиНаСервере(ПараметрКоманды, ТекстПредупреждения) тогда
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеПодтвержденияПродолжения", 
		ЭтотОбъект, ПараметрКоманды);
	Если ЕстьЗахваченныеОбъекты(ПараметрКоманды) тогда
		ПоказатьВопрос(ОписаниеОповещения, "Существуют объекты, захваченные в хранилище.
			|Продолжить?", РежимДиалогаВопрос.ОКОтмена);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.ОК);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПослеПодтвержденияПродолжения(Результат, ПараметрКоманды) Экспорт
	
	Если Результат <> КодВозвратаДиалога.ОК тогда
		Возврат;
	КонецЕсли;
	
	
	//ОписаниеОповещения = Новый ОписаниеОповещения("ПослеПодтвержденияПродолжения", ЭтотОбъект, ПараметрКоманды);
	//ПоказатьВопрос(ОписаниеОповещения, "Объекты блок-схемы будут помещены в хранилище.
	//	|Объекты уже существующие в хранилище, будут получены из хранилища.", РежимДиалогаВопрос.ОКОтмена);
	ОтключитьБлокСхемуОтХранилища(ПараметрКоманды);
	
	ПоказатьПредупреждение(, "Блок-схема успешно отключена от хранилища");
	
	ОповеститьОбИзменении(ТипЗнч(ПараметрКоманды));	
	
	Оповестить("ГрафиБот:ИзменениеСостоянияХранилищаБлокСхем");
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьПроверкиНаСервере(БлокСхема, ТекстПредупреждения)
	ТекстПредупреждения = "";
	Запись = РегистрыСведений.гбИспользуемыеХранилищаБлокСхем.СоздатьМенеджерЗаписи();
	Запись.БлокСхема = БлокСхема;
	Запись.Прочитать();
	Если не Запись.Выбран() тогда
		ТекстПредупреждения = "Блок-схема не подключена к хранилищу";
	КонецЕсли;
	
	Возврат ПустаяСтрока(ТекстПредупреждения);
КонецФункции
	
&НаСервере
Функция ЕстьЗахваченныеОбъекты(БлокСхема)
	СписокОбъектов = Новый СписокЗначений;
	гбХранилище.ДобавитьПодчиненныеЭлементыБлокСхемыВСписок(БлокСхема, СписокОбъектов, Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	гбЗахватОбъектов.Объект КАК Объект,
		|	гбЗахватОбъектов.Хранилище КАК Хранилище,
		|	гбЗахватОбъектов.ДатаЗахвата КАК ДатаЗахвата
		|ИЗ
		|	РегистрСведений.гбИспользуемыеХранилищаБлокСхем КАК гбИспользуемыеХранилищаБлокСхем
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.гбПодчиненныеОбъектыБлокСхем КАК гбПодчиненныеОбъектыБлокСхем
		|		ПО гбИспользуемыеХранилищаБлокСхем.БлокСхема = гбПодчиненныеОбъектыБлокСхем.БлокСхема
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.гбЗахватОбъектов КАК гбЗахватОбъектов
		|		ПО (гбПодчиненныеОбъектыБлокСхем.Объект = гбЗахватОбъектов.Объект)
		|			И гбИспользуемыеХранилищаБлокСхем.Хранилище = гбЗахватОбъектов.Хранилище
		|ГДЕ
		|	гбИспользуемыеХранилищаБлокСхем.БлокСхема = &БлокСхема";
	
	Запрос.УстановитьПараметр("БлокСхема", БлокСхема);
	
	Возврат не Запрос.Выполнить().Пустой();
КонецФункции


&НаСервере
Процедура ОтключитьБлокСхемуОтХранилища(БлокСхема)
	
	Запись = РегистрыСведений.гбИспользуемыеХранилищаБлокСхем.СоздатьМенеджерЗаписи();
	Запись.БлокСхема = БлокСхема;
	Запись.Удалить();

	гбХранилище.БлокСхемаПриЗаписи(БлокСхема.ПолучитьОбъект(), Ложь);
	
КонецПроцедуры
	
