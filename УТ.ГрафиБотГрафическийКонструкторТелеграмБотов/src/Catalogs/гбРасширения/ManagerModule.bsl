
Процедура ОбновитьДанныеРасширений() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	гбРасширения.Ссылка КАК Ссылка,
		|	гбРасширения.Свойства КАК Свойства,
		|	гбРасширения.Код КАК Код,
		|	гбРасширения.Наименование КАК Наименование,
		|	гбРасширения.ХешСумма КАК ХешСумма
		|ИЗ
		|	Справочник.гбРасширения КАК гбРасширения
		|ГДЕ
		|	НЕ гбРасширения.ПометкаУдаления";
	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Расширения = РасширенияКонфигурации.Получить(Новый Структура("Имя", СокрЛП(ВыборкаДетальныеЗаписи.Код)));
		НадоОбновить = Ложь;
		Если Расширения.Количество() <> 1 тогда
			НадоОбновить = Истина;
		Иначе
			Расширение = Расширения[0];
			СтруктураСвойств = ВыборкаДетальныеЗаписи.Свойства.Получить();
			Если СтруктураСвойств = Неопределено тогда
				НадоОбновить = Истина;
			ИначеЕсли ВыборкаДетальныеЗаписи.ХешСумма <> гбХранилище.Хеш(Расширение.ХешСумма) тогда
				НадоОбновить = Истина;
			Иначе
				Для Каждого КлючЗначение из СтруктураСвойств цикл
					Если ЗначениеВСтрокуВнутр(КлючЗначение.Значение) <> ЗначениеВСтрокуВнутр(Расширение[КлючЗначение.Ключ]) тогда
						НадоОбновить = Истина;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;				
		КонецЕсли;
		
		Если НадоОбновить тогда
			Объект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			Объект.ДополнительныеСвойства.Вставить("ОбновлениеРасширения");
			Объект.Записать();
		КонецЕсли;
	КонецЦикла;

	
КонецПроцедуры