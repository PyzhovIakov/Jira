
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СписокБлокСхем = ПолучитьСписокБлокСхемБотовНаСервере();
	Если СписокБлокСхем.Количество() = 1 тогда
		Закрыть();
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", СписокБлокСхем[0].Значение);
		
		ОткрытьФорму("Справочник.гбБлокСхемы.ФормаОбъекта", ПараметрыФормы);
		
	ИначеЕсли СписокБлокСхем.Количество() = 0 тогда
		Закрыть();
		ПоказатьПредупреждение( , "Блок-схемы не определены");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Закрыть();
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", ВыбраннаяСтрока);
	
	ОткрытьФорму("Справочник.гбБлокСхемы.ФормаОбъекта", ПараметрыФормы);
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьСписокБлокСхемБотовНаСервере()
	
	Схема = Элементы.Список.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.Список.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	
	ТЗ = Новый ТаблицаЗначений;
	ПроцессорВывода.УстановитьОбъект(ТЗ); 
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Результат = Новый СписокЗначений;
	Результат.ЗагрузитьЗначения(ТЗ.ВыгрузитьКолонку("Ссылка"));
	Возврат Результат;
	
КонецФункции

#КонецОбласти



&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	гбХранилище.ПриСозданииНаСервере_ФормаСписка(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	гбХранилищеКлиент.СписокПриАктивизацииСтроки(ЭтаФорма, Элемент);	
	
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	ОбработкаОповещенияНаСервере(ИмяСобытия);
	гбХранилищеКлиент.ОбработкаОповещения_ФормаСписка(ЭтаФорма, ИмяСобытия, Параметр, Источник);
КонецПроцедуры

&НаСервере
Процедура ОбработкаОповещенияНаСервере(ИмяСобытия)
	гбХранилище.ОбработкаОповещения_ФормаСписка(ЭтаФорма, ИмяСобытия);
КонецПроцедуры

