
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	МетаданныеРасширения = гбСерверПовтИсп.ПолучитьМетаданныеРасширения("Имя, Синоним, Версия");
	Заголовок = МетаданныеРасширения.Синоним;
	ИмяРасширения = МетаданныеРасширения.Имя;
	Версия = МетаданныеРасширения.Версия;
	
	ПроверятьОбновления = Ложь <> гбСервер.ПолучитьЗначениеИзХранилищаОбщихНастроек("НастройкиПрограммы/ПроверкаОбновления",
			ИмяРасширения + "/ПроверятьОбновления", "");
			
	ПроверкаОбновленияПриНачалеРаботыСистемы = Параметры.ПроверкаОбновленияПриНачалеРаботыСистемы;
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если не ПропуститьПроверкуОбновленияПриОткрытии тогда
		Если ПроверкаОбновленияПриНачалеРаботыСистемы тогда
			Отказ = Истина;
			ФормаПроверкиОбновления = ЭтаФорма;
		КонецЕсли;
		НачатьПроверкуОбновления();
	КонецЕсли;
	ПропуститьПроверкуОбновленияПриОткрытии = Ложь;
	
	Если не ПроверкаОбновленияПриНачалеРаботыСистемы тогда
		ФормаПроверкиОбновления = Неопределено;
	КонецЕсли;
	
КонецПроцедуры



#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы


&НаКлиенте
Процедура ПроверятьОбновленияПриИзменении(Элемент)
	гбСервер.СохранитьЗначениеВХранилищеОбщихНастроек("НастройкиПрограммы/ПроверкаОбновления",
		ИмяРасширения + "/ПроверятьОбновления", ПроверятьОбновления);
		
	НачатьПроверкуОбновления();

КонецПроцедуры

&НаКлиенте
Процедура НоваяВерсияНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПерейтиПоНавигационнойСсылке(СтрШаблон("https://prod.v8-pr.ru/update/gbc/Distrib.GBC.ext.v%1.zip", НоваяВерсия));
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияИсторияИзмененийНажатие(Элемент)
	ПерейтиПоНавигационнойСсылке("https://prod.v8-pr.ru/update/gbc/.changelog.pdf");
КонецПроцедуры


#КонецОбласти


#Область СлужебныеПроцедурыИФункции


&НаСервере
Функция НачатьПроверкуОбновленияНаСервере()
	
	Если РольДоступна(Метаданные.Роли.гбИспользование) тогда
		КлючЛицензирования = гбСервер.ПолучитьЗначениеИзХранилищаОбщихНастроек("НастройкиПрограммы/НастройкиЛицензирования",
				ИмяРасширения + "/КлючЛицензирования", "");
		ПараметрыФоновогоЗадания = Новый Массив;
		ПараметрыФоновогоЗадания.Добавить(КлючЛицензирования);
	   	Возврат ФоновыеЗадания.Выполнить("гбСервер.ПроверитьОбновление", ПараметрыФоновогоЗадания).УникальныйИдентификатор; 
	КонецЕсли;

КонецФункции

&НаКлиенте
Функция НачатьПроверкуОбновления()
	
	Если ПроверятьОбновления тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.ГруппаВыпоняетсяПроверка;
		
		УникальныйИдентификаторЗаданияПроверкиОбновления = НачатьПроверкуОбновленияНаСервере();
		ПодключитьОбработчикОжидания("ПолучениеРезультатаПроверкиОбновления", 3, Истина);
	Иначе
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.ГруппаПроверкаОтключена;

	КонецЕсли;

КонецФункции


&НаКлиенте
Процедура ПолучениеРезультатаПроверкиОбновления() 
	
	Результат = ПолучениеРезультатаПроверкиОбновленияНаСервере(УникальныйИдентификаторЗаданияПроверкиОбновления);
	Если Результат = Неопределено тогда
		ПодключитьОбработчикОжидания("ПолучениеРезультатаПроверкиОбновления", 3, Истина);
		Возврат;		
	КонецЕсли;
	
	УникальныйИдентификаторЗаданияПроверкиОбновления = Неопределено;
	Если (ТипЗнч(Результат) = Тип("Строка") и Версия <> Результат) 
		или ТипЗнч(Результат) = Тип("ИнформацияОбОшибке") тогда
		Если не Открыта() тогда
			ПропуститьПроверкуОбновленияПриОткрытии = Истина;
			ПроверкаОбновленияПриНачалеРаботыСистемы = Ложь;
			Открыть();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры


&НаСервере
Функция ПолучениеРезультатаПроверкиОбновленияНаСервере(ИдентификаторЗадания)
	Перем Результат;
	ФоновоеЗадание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(ИдентификаторЗадания);
	
	Если ФоновоеЗадание = Неопределено тогда

	ИначеЕсли ФоновоеЗадание.Состояние = СостояниеФоновогоЗадания.Завершено тогда
		Сообщение = ФоновоеЗадание.ПолучитьСообщенияПользователю();
		
		Результат = СокрЛП(Сообщение[Сообщение.ВГраница()].Текст);
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.ГруппаНоваяВерсия;
		НоваяВерсия = Результат;
		
	ИначеЕсли ФоновоеЗадание.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно тогда
		Результат = ФоновоеЗадание.ИнформацияОбОшибке;
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.ГруппаОшибка;
		Ошибка = КраткоеПредставлениеОшибки(Результат);
	
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

#КонецОбласти
