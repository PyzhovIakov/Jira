//В запросе нужно использовать обязательно дату отправки, так как при отправке сообщения,
// в случае не удачной отправки, будут добавляться записи и иначе может возникнуть бесконечный цикл
	
Функция ПолучитьТаблицуКОтправкиСообщенийВсемПользователям(ВидОповещения) Экспорт

	СтруктураПараметровЗапроса = ПолучитьСтруктуруОтбора();
	СтруктураПараметровЗапроса.ТипИнтеграции = ВидОповещения;
	
	МассивРезультатов = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	cbr_ЗаданияКОтправкеСообщений.Пользователь,
		|	cbr_ЗаданияКОтправкеСообщений.ТекстСообщения,
		|	cbr_ЗаданияКОтправкеСообщений.ДатаПоследнейПопыткиОтправки,
		|	cbr_ЗаданияКОтправкеСообщений.СсылкаНаДокументОтправки
		|ПОМЕСТИТЬ вт_СообщенияКОтправке
		|ИЗ
		|	РегистрСведений.cbr_ЗаданияКОтправкеСообщений КАК cbr_ЗаданияКОтправкеСообщений
		|ГДЕ
		|	cbr_ЗаданияКОтправкеСообщений.ДоступноДляПовторнойОтправки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт_СообщенияКОтправке.Пользователь,
		|	вт_СообщенияКОтправке.ТекстСообщения,
		|	вт_СообщенияКОтправке.ДатаПоследнейПопыткиОтправки,
		|	вт_СообщенияКОтправке.СсылкаНаДокументОтправки
		|ПОМЕСТИТЬ вт_СообщениеКОтправкеДоступно
		|ИЗ
		|	вт_СообщенияКОтправке КАК вт_СообщенияКОтправке
		|ГДЕ
		|	вт_СообщенияКОтправке.ДатаПоследнейПопыткиОтправки < &ДатаПоследнейПопыткиОтправки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ вт_СообщенияКОтправке
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	cbr_СоответствиеПользователейДляИнтеграций.Пользователь КАК Пользователь,
		|	cbr_СоответствиеПользователейДляИнтеграций.АйДиПользователя
		|ПОМЕСТИТЬ вт_ИДПользователейКОтправке
		|ИЗ
		|	РегистрСведений.cbr_СоответствиеПользователейДляИнтеграций КАК cbr_СоответствиеПользователейДляИнтеграций
		|ГДЕ
		|	cbr_СоответствиеПользователейДляИнтеграций.ТипИнтеграции = &ТипИнтеграции
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Пользователь
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт_ИДПользователейКОтправке.АйДиПользователя,
		|	вт_СообщениеКОтправкеДоступно.ТекстСообщения,
		|	вт_СообщениеКОтправкеДоступно.Пользователь,
		|	вт_СообщениеКОтправкеДоступно.СсылкаНаДокументОтправки
		|ИЗ
		|	вт_ИДПользователейКОтправке КАК вт_ИДПользователейКОтправке
		|		ПРАВОЕ СОЕДИНЕНИЕ вт_СообщениеКОтправкеДоступно КАК вт_СообщениеКОтправкеДоступно
		|		ПО вт_СообщениеКОтправкеДоступно.Пользователь = вт_ИДПользователейКОтправке.Пользователь";

//	ЗаполнитьЗначенияСвойств(Запрос.Параметры, СтруктураПараметровЗапроса);
	Для каждого ЭлементСтруктурыПараметров из СтруктураПараметровЗапроса Цикл
		Запрос.УстановитьПараметр(ЭлементСтруктурыПараметров.Ключ, ЭлементСтруктурыПараметров.Значение );	
	КонецЦикла;
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

Функция ПолучитьСтруктуруОтправкиСообщения()
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("Пользователь",неопределено);
	СтруктураРезультат.Вставить("ТекстСообщения","");
	СтруктураРезультат.Вставить("ИдПользователя","");
	Возврат СтруктураРезультат;
КонецФункции

Функция ПолучитьСтруктуруОтбора()
	СтруктураОтбора = Новый Структура();
	СтруктураОтбора.Вставить("ТипИнтеграции",  "");
	СтруктураОтбора.Вставить("ДатаПоследнейПопыткиОтправки", ТекущаяДата());
	Возврат СтруктураОтбора;		
КонецФункции

Процедура ДобавитьИлиОбновитьЗапись(МассивСтруктурЗаписей)
	Если Не ЗначениеЗаполнено(МассивСтруктурЗаписей) Тогда
		Возврат;
	КонецЕсли;	
КонецПроцедуры

Процедура ДобавитьОбновитьЗаписьТелеграм(Пользователь,
	 									СсылкаНаДокументОтправки,
	 									ТекстСообщения,
	 									 ОшибкаПриОтправки,
	 									 ДоступноДляПовторнойОтправки) Экспорт
ВидОповещения = ПредопределенноеЗначение("ПланВидовХарактеристик.cbr_ВидыПользовательскихНастроек.Телеграм");	 									 
НаборЗаписей = СоздатьНаборЗаписей();
ДатаЗаписи = ТекущаяДата();
НаборЗаписей.Отбор.Пользователь.Установить(Пользователь);
НаборЗаписей.Отбор.СсылкаНаДокументОтправки.Установить(СсылкаНаДокументОтправки);
НаборЗаписей.Отбор.ВидОповещения.Установить(ВидОповещения);
НаборЗаписей.Прочитать();
Если НаборЗаписей.Количество() = 0 Тогда
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Пользователь = Пользователь;
		НоваяЗапись.СсылкаНаДокументОтправки = СсылкаНаДокументОтправки;
		НоваяЗапись.ВидОповещения = ВидОповещения;
		НоваяЗапись.ТекстСообщения = ТекстСообщения;
		НоваяЗапись.ДатаПоследнейПопыткиОтправки = ДатаЗаписи;
		НоваяЗапись.ДоступноДляПовторнойОтправки = ДоступноДляПовторнойОтправки;
	Иначе
		ВыбраннаяЗапись = НаборЗаписей[0];
		ВыбраннаяЗапись.ОшибкаПриОтправки = ОшибкаПриОтправки;
		ВыбраннаяЗапись.ДатаПоследнейПопыткиОтправки = ДатаЗаписи;
	КонецЕсли;
	НаборЗаписей.Записать();	
КонецПроцедуры

Процедура УдалитьЗаписьТелеграм(Пользователь,
	 									СсылкаНаДокументОтправки,
	 									ТекстСообщения,
	 									 ОшибкаПриОтправки,
	 									 ДоступноДляПовторнойОтправки) Экспорт
ВидОповещения = ПредопределенноеЗначение("ПланВидовХарактеристик.cbr_ВидыПользовательскихНастроек.Телеграм");	 									 
НаборЗаписей = СоздатьНаборЗаписей();
ДатаЗаписи = ТекущаяДата();
НаборЗаписей.Отбор.Пользователь.Установить(Пользователь);
НаборЗаписей.Отбор.СсылкаНаДокументОтправки.Установить(СсылкаНаДокументОтправки);
НаборЗаписей.Отбор.ВидОповещения.Установить(ВидОповещения);
НаборЗаписей.Записать();

КонецПроцедуры

