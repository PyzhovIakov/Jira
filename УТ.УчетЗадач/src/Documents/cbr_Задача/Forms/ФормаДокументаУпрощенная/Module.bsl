#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПараметрГлавная = Неопределено;
	Если Параметры.Свойство("ГлавнаяЗадача", ПараметрГлавная) Тогда
		Объект.ГлавнаяЗадача = ПараметрГлавная;
	КонецЕсли;
	
	ПараметрИсточникПараметров = Неопределено;
	Если Параметры.Свойство("ИсточникПараметров", ПараметрИсточникПараметров) Тогда
		ИсточникПараметров = ПараметрИсточникПараметров;
		cbr_ОбработчикиФормыЗадачиСервер.ЗаполнитьНаследуемыеПараметры(ЭтотОбъект, ПараметрИсточникПараметров);
		
		Параметры.Свойство("Исполнитель", Исполнитель);
	КонецЕсли;
	
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	Подписка = ПредопределенноеЗначение(
		"Перечисление.cbr_ПодпискаДляТриггера.ПриСозданииНаСервереФормыЗадачи");
	cbr_ОбработкаТриггеров.ВызовТриггера(Подписка, Объект.Ссылка);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) И ПараметрИсточникПараметров = Неопределено Тогда
		cbr_ОбработчикиФормыЗадачиСервер.ЗаполнитьПользовательскиеНастройки(ЭтотОбъект);
	КонецЕсли;
	
	Элементы.ГруппаВыбораМетки.Видимость = Ложь;
	
	Выборка = ПолучениеВыборкиМеток();
	Пока Выборка.Следующий() Цикл
		cbr_ЭлементыФормы.СоздатьКоманду(ЭтотОбъект,
										   "МеткаКоманда" + Выборка.Код,
										   Выборка.Наименование,
										   "ПрисвоитьЗначениеМетке");
		
		НоваяКнопка = cbr_ЭлементыФормы.СздКнопка(ЭтотОбъект,
													"МеткаКоманда" + Выборка.Код,
													Элементы.Метки,
													Выборка.Наименование,
													"МеткаКоманда" + Выборка.Код);
		НоваяКнопка.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Лево;
		Элементы.Переместить(Элементы["МеткаКоманда" + Выборка.Код], Элементы.Метки, Элементы.Ещё);
		НоваяКнопка.Фигура = ФигураКнопки.Овал;
		
		Цвет = Выборка.ЦветRGB;
		Если ЗначениеЗаполнено(Цвет) Тогда
			Фон = СтрРазделить(Цвет, ",");
			//@skip-check new-color
			НоваяКнопка.ЦветФона = Новый Цвет(Фон[0], Фон[1], Фон[2]);
		КонецЕсли;
		
		Цвет = Выборка.ЦветТекстаRGB;
		Если ЗначениеЗаполнено(Цвет) Тогда
			Фон = СтрРазделить(Цвет, ",");
			//@skip-check new-color
			НоваяКнопка.ЦветТекста = Новый Цвет(Фон[0], Фон[1], Фон[2]);
		КонецЕсли;

		СтрокаТаблицы = ТаблицаМеток.Добавить();
		СтрокаТаблицы.Команда = "МеткаКоманда" + Выборка.Код;
		СтрокаТаблицы.Код = Выборка.Код;

	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если ПараметрыЗаписи.Свойство("НеСохранять") Тогда
		Отказ = Истина;
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
КонецПроцедуры



&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	cbr_ДвиженияПоРегистрам.ДвижениеИсполнителиЗадач(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ТекущийОбъект.ОписаниеЗадачи = Новый ХранилищеЗначения(ОписаниеЗадачиДокумент);
КонецПроцедуры
#КонецОбласти


#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ОткрытьПолнуюФорму(Команда)	
	АдресОписанияЗадачи = ПоместитьВоВременноеХранилище(ОписаниеЗадачиДокумент);
	
	ПараметрыФормы = Новый Структура("НаименованиеЗадачи,ГлавнаяЗадача,ИсточникПараметров,ОписаниеЗадачи,Метка,Ключ",
		Объект.Наименование, Объект.ГлавнаяЗадача, ИсточникПараметров, АдресОписанияЗадачи, Объект.Метка, Объект.Ссылка);
		
	ФормаДок = ПолучитьФорму("Документ.cbr_Задача.Форма.ФормаДокумента", ПараметрыФормы);
	
	Если ОписаниеОповещенияОЗакрытии <> Неопределено Тогда
		ДанныеФормы = ФормаДок.Объект;
		
		ПараметрыДоп = Новый Структура("ФормаДок", ФормаДок);
		НовыйООЗ = Новый ОписаниеОповещения(ОписаниеОповещенияОЗакрытии.ИмяПроцедуры, ОписаниеОповещенияОЗакрытии.Модуль, 
			ПараметрыДоп);
	
		СоздатьГлавнуюЗадачуНаСервере(ДанныеФормы);
		ФормаДок.ОписаниеОповещенияОЗакрытии = НовыйООЗ;
	КонецЕсли;

	ФормаДок.Открыть();

	ОписаниеОповещенияОЗакрытии = Неопределено;
	ПараметрыЗакрытия = Новый Структура("НеСохранять", Истина);
	//@skip-check invocation-form-event-handler
	ПередЗаписью(Ложь, ПараметрыЗакрытия);
КонецПроцедуры

&НаКлиенте
Процедура МеткаЕщё(Команда)
	ВызовВыбораМеток();
КонецПроцедуры

&НаКлиенте
Процедура КонтекстноеМенюИзменить(Команда)
	ВызовВыбораМеток();
КонецПроцедуры

&НаКлиенте
Процедура КонтекстноеМенюОчистить(Команда)
	ОчисткаМетокНаФормеНаСервере();	
	Объект.Метка = Неопределено;
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервере
Функция СоздатьГлавнуюЗадачуНаСервере(ДанныеФормы)	
	Док = Документы.cbr_Задача.СоздатьДокумент();
	Док.УстановитьСсылкуНового(Объект.Ссылка);
	ЗначениеВДанныеФормы(Док, ДанныеФормы);
	Возврат  Объект.Ссылка; 
КонецФункции
#КонецОбласти

#Область Метки
&НаСервере
Функция ПолучениеВыборкиМеток()
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПРЕДСТАВЛЕНИЕ(Центр_МеткиЗадач.Наименование) КАК Наименование,
		|	Центр_МеткиЗадач.ЦветRGB,
		|	ПРЕДСТАВЛЕНИЕ(Центр_МеткиЗадач.Код) КАК Код,
		|	Центр_МеткиЗадач.ЦветТекстаRGB
		|ИЗ
		|	Справочник.cbr_МеткиЗадач КАК Центр_МеткиЗадач
		|ГДЕ
		|	Центр_МеткиЗадач.ВидимостьНаФорме = ИСТИНА";
	
	Возврат Запрос.Выполнить().Выбрать();
КонецФункции

&НаКлиенте
Процедура ПрисвоитьЗначениеМетке(Команда)
	ПараметрыМетки = Новый Структура("Команда", Команда.Имя);
	СтрокаМетки = ТаблицаМеток.НайтиСтроки(ПараметрыМетки);
	ПрисвоитьЗначениеМеткеНаСервере(СтрокаМетки[0].Код);
КонецПроцедуры

&НаСервере
Процедура ПрисвоитьЗначениеМеткеНаСервере(КодМетки)	
	Метка = Справочники.cbr_МеткиЗадач.НайтиПоКоду(КодМетки);
	Объект.Метка = Метка;
	ПослеВыбораМеткиНаСервере(Метка);
	Элементы.Ещё.Видимость = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ВызовВыбораМеток()
	ОписаниеОповещенияОЗакрытииФормыВыбора = Новый ОписаниеОповещения("ПослеВыбораМетки", ЭтотОбъект);
	ОткрытьФорму("Справочник.cbr_МеткиЗадач.ФормаВыбора",,,,,,ОписаниеОповещенияОЗакрытииФормыВыбора,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораМетки(Результат, ДополнительныеПараметры) Экспорт
	Если НЕ ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;

	ПослеВыбораМеткиНаСервере(Результат);
	Объект.Метка = Результат;
	Элементы.Ещё.Видимость = Ложь;	
КонецПроцедуры

&НаСервере
Процедура ПослеВыбораМеткиНаСервере(МеткаСсылка)
	Для Каждого СтрокаМетки Из ТаблицаМеток Цикл
		ИмяКоманды = СтрокаМетки.Команда;
		Элементы.Удалить(Элементы[ИмяКоманды]);
	КонецЦикла;
	
	ТаблицаМеток.Очистить();
	
	RGBМетки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(МеткаСсылка, "ЦветRGB");
	RGBТекстМетки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(МеткаСсылка, "ЦветТекстаRGB");
	НаименованиеМетки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(МеткаСсылка, "Наименование");
	
	Элементы.ГруппаВыбораМетки.Видимость = Истина;
	Элементы.ВыборМетки.Заголовок = НаименованиеМетки;

	Цвет = RGBМетки;
	Если ЗначениеЗаполнено(Цвет) Тогда
		Фон = СтрРазделить(Цвет, ",");
			//@skip-check new-color
		Элементы.ВыборМетки.ЦветФона = Новый Цвет(Фон[0], Фон[1], Фон[2]);
	Иначе
		//@skip-check new-color
		Элементы.ВыборМетки.ЦветФона = Новый Цвет(255, 255, 255);
	КонецЕсли;
	
	Цвет = RGBТекстМетки;
	Если ЗначениеЗаполнено(Цвет) Тогда
		Фон = СтрРазделить(Цвет, ",");
			//@skip-check new-color
		Элементы.ВыборМетки.ЦветТекстаЗаголовка = Новый Цвет(Фон[0], Фон[1], Фон[2]);
	Иначе
		//@skip-check new-color
		Элементы.ВыборМетки.ЦветТекстаЗаголовка = Новый Цвет(0, 0, 0);
	КонецЕсли;

	
	Элемент = Элементы.Найти("ВыборМеткиКнопка");
	Если Элемент <> Неопределено Тогда
		Элемент.Видимость = Ложь;
	КонецЕсли;						  																																	
КонецПроцедуры


&НаСервере
Процедура ОчисткаМетокНаФормеНаСервере()
	Элементы.ГруппаВыбораМетки.Видимость = Ложь;
	Элемент = Элементы.Найти("ВыборМеткиКнопка");
	Если Элемент = Неопределено Тогда
		cbr_ЭлементыФормы.СздКнопка(ЭтотОбъект, "ВыборМеткиКнопка", Элементы.Метки, "Метки", "МеткаЕщё", 2);
	Иначе
		Элемент.Видимость = Истина;
	КонецЕсли;	
КонецПроцедуры
#КонецОбласти
