
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПараметрПостановщик = Неопределено;
	Если Параметры.Свойство("Постановщик", ПараметрПостановщик) Тогда
		Постановщик = ПараметрПостановщик;
	КонецЕсли;
	
	ПараметрГлавныйМенеджер = Неопределено;
	Если Параметры.Свойство("ГлавныйМенеджер", ПараметрГлавныйМенеджер) Тогда
		ГлавныйМенеджер = ПараметрГлавныйМенеджер;
	КонецЕсли;
	
	ПараметрОснование = Неопределено;
	Если Параметры.Свойство("Основание", ПараметрОснование) Тогда
		Основание = ПараметрОснование;
	КонецЕсли;
	
	ПараметрАвтор = Неопределено;
	Если Параметры.Свойство("Автор", ПараметрАвтор) Тогда
		Автор = ПараметрАвтор;
	КонецЕсли;
	
	ПараметрИсполнительЗадачи = Неопределено;
	Если Параметры.Свойство("Исполнитель", ПараметрИсполнительЗадачи) Тогда
		ИсполнительЗадачи = ПараметрИсполнительЗадачи;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОтклонитьНаСервере()   	
	
	ГруппаЗадачи = ПолучениеГруппыЗадачи();
	
	Если ТипЗнч(Постановщик) = Тип("СправочникСсылка.Пользователи") Тогда
		Исполнитель = Постановщик;
	ИначеЕсли ГруппаЗадачи <> Неопределено И ТипЗнч(ИсполнительЗадачи) = Тип("СправочникСсылка.Пользователи") Тогда 
		Исполнитель = ГруппаЗадачи.Исполнитель;	
	Иначе
		Исполнитель = ГлавныйМенеджер;
	КонецЕсли;
	
	Менеджер = РегистрыСведений.cbr_ИсполнителиЗадач.СоздатьМенеджерЗаписи();
	Менеджер.Задача = Основание;
	Менеджер.Период = ТекущаяДатаСеанса();
	Менеджер.Исполнитель = Исполнитель;
	Менеджер.ПричинаОтказа = ПричинаОтказа;
	Менеджер.Записать();
	
	Если ГруппаЗадачи <> Неопределено Тогда
		Исполнитель = ГруппаЗадачи.Руководитель;
	КонецЕсли;
	
	ТекстПричиныОтказа = "Назначенный исполнитель отказался от задачи. Причина: " + ПричинаОтказа;
	cbr_УведомленияПользователей.ОтправитьУведомлениеПользователю(Исполнитель, ТекстПричиныОтказа, ТекущаяДатаСеанса(),
		ТекущаяДатаСеанса(), Перечисления.СпособыУстановкиВремениНапоминания.Периодически, 60, Основание, , Истина);
	
КонецПроцедуры

&НаСервере
Функция ПолучениеГруппыЗадачи()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	cbr_ГруппыДоступаКЗадачам.Ссылка КАК Ссылка,
	|	cbr_ГруппыДоступаКЗадачам.Руководитель
	|ПОМЕСТИТЬ ВТ_Группа
	|ИЗ
	|	Справочник.cbr_ГруппыДоступаКЗадачам КАК cbr_ГруппыДоступаКЗадачам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	cbr_ИсполнителиЗадачСрезПоследних.Исполнитель,
	|	ВТ_Группа.Руководитель
	|ИЗ
	|	РегистрСведений.cbr_ИсполнителиЗадач.СрезПоследних(, Задача = &Задача
	|	И Исполнитель В
	|		(ВЫБРАТЬ
	|			ВТ_Группа.Ссылка КАК Ссылка
	|		ИЗ
	|			ВТ_Группа КАК ВТ_Группа)) КАК cbr_ИсполнителиЗадачСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Группа КАК ВТ_Группа
	|		ПО cbr_ИсполнителиЗадачСрезПоследних.Исполнитель = ВТ_Группа.Ссылка";

	Запрос.УстановитьПараметр("Задача", Основание);

	РезультатЗапроса = Запрос.Выполнить();

	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Новый Структура("Исполнитель,Руководитель", Выборка.Исполнитель, Выборка.Руководитель);
	КонецЕсли;
	
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Процедура Отклонить(Команда)
	Если Не ЗначениеЗаполнено(ПричинаОтказа) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю("Не введена причина отказа");
		Возврат;		
	КонецЕсли;
	ОтклонитьНаСервере();
	Закрыть();
КонецПроцедуры
