#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
#Область ОбработчикиСобытий
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.cbr_Задача") Тогда
		Основание = ДанныеЗаполнения;
		ОстатокЧасов = ПолучитьОстатокЧасов();
		Часы = Мин(8, ОстатокЧасов);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
ОшибкаДвижений = cbr_ДвиженияПоРегистрам.ДвижениеЧасыТрудозатрат(Ссылка, Часы, Дата, Основание);

Если ОшибкаДвижений Тогда
	Отказ = Истина;
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "Часов больше чем согласовано";
	Сообщение.Сообщить();
КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыиФункции
Функция ПолучитьОстатокЧасов()
	ОстатокЧасов = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(ЕСТЬNULL(cbr_ЧасыТрудозатрат.Часы, 0)) КАК Часы,
	|	cbr_ТрудозатратыПоЗадаче.Основание КАК Основание
	|ПОМЕСТИТЬ вт_ЧасыПоЗадаче
	|ИЗ
	|	Документ.cbr_ТрудозатратыПоЗадаче КАК cbr_ТрудозатратыПоЗадаче
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.cbr_ЧасыТрудозатрат КАК cbr_ЧасыТрудозатрат
	|		ПО cbr_ЧасыТрудозатрат.Регистратор = cbr_ТрудозатратыПоЗадаче.Ссылка
	|		И cbr_ТрудозатратыПоЗадаче.Основание = &Задача
	|СГРУППИРОВАТЬ ПО
	|	cbr_ТрудозатратыПоЗадаче.Основание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(вт_ЧасыПоЗадаче.Часы, 0) КАК Часы,
	|	cbr_ОценкаЧасовСрезПоследних.До КАК До,
	|	cbr_ОценкаЧасовСрезПоследних.ТипОценки КАК ТипОценки
	|ИЗ
	|	РегистрСведений.cbr_ОценкаЧасов.СрезПоследних(, Задача = &Задача) КАК cbr_ОценкаЧасовСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ЧасыПоЗадаче КАК вт_ЧасыПоЗадаче
	|		ПО вт_ЧасыПоЗадаче.Основание = cbr_ОценкаЧасовСрезПоследних.Задача
	|ГДЕ
	|	cbr_ОценкаЧасовСрезПоследних.Согласовано";

	Запрос.УстановитьПараметр("Задача", Основание);

	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если Выборка.ТипОценки <> ПредопределенноеЗначение("Перечисление.cbr_ТипОценкиЧасов.ПоФакту") Тогда
			ЧасыИтог = 	Выборка.До - Выборка.Часы;
			ОстатокЧасов = ЧасыИтог;
		Иначе
			ОстатокЧасов = 8;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ОстатокЧасов;
КонецФункции
#КонецОбласти
#КонецЕсли