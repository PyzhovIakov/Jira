#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ОбновитьОстатокЧасов();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)	
	ИсполнительПараметр = Неопределено;
	Если Параметры.Свойство("Исполнитель", ИсполнительПараметр) Тогда
		Объект.Исполнитель = ИсполнительПараметр;
	КонецЕсли;
	
	Параметры.Свойство("ИзКалендаря", ОткрытоИзКалендаря);
	
	ОбновитьОстатокЧасов();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Если Объект.Проведен И ОткрытоИзКалендаря Тогда
		СтруктураРезультата = Новый Структура("Описание,Документ", Объект.ОписаниеДействий, Объект.Ссылка);
		Закрыть(СтруктураРезультата);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ОткрытоИзКалендаря Тогда
		Для Каждого Команда ИЗ КоманднаяПанель.ПодчиненныеЭлементы Цикл
			Если Команда.Имя <> "ФормаПроведение" Тогда
				Команда.Видимость = Ложь;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыиФункции
&НаСервере
Процедура ОбновитьОстатокЧасов()
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(ЕСТЬNULL(cbr_ЧасыТрудозатрат.Часы, 0)) КАК Часы,
	|	cbr_ТрудозатратыПоЗадаче.Основание КАК Основание
	|ПОМЕСТИТЬ вт_ЧасыПоЗадаче
	|ИЗ
	|	Документ.cbr_ТрудозатратыПоЗадаче КАК cbr_ТрудозатратыПоЗадаче
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.cbr_ЧасыТрудозатрат КАК cbr_ЧасыТрудозатрат
	|		ПО (cbr_ЧасыТрудозатрат.Регистратор = cbr_ТрудозатратыПоЗадаче.Ссылка)
	|			И (cbr_ТрудозатратыПоЗадаче.Основание = &Задача)
	|ГДЕ
	|	cbr_ТрудозатратыПоЗадаче.Основание = &Задача
	|	И cbr_ЧасыТрудозатрат.Исполнитель = &Исполнитель
	|
	|СГРУППИРОВАТЬ ПО
	|	cbr_ТрудозатратыПоЗадаче.Основание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(вт_ЧасыПоЗадаче.Часы, 0) КАК Часы,
	|	cbr_ОценкаЧасовСрезПоследних.До КАК До,
	|	cbr_ОценкаЧасовСрезПоследних.ТипОценки КАК ТипОценки,
	|	cbr_ОценкаЧасовСрезПоследних.От КАК От
	|ИЗ
	|	РегистрСведений.cbr_ОценкаЧасов.СрезПоследних(
	|			,
	|			Задача = &Задача
	|				И Согласовано = ИСТИНА) КАК cbr_ОценкаЧасовСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ЧасыПоЗадаче КАК вт_ЧасыПоЗадаче
	|		ПО (вт_ЧасыПоЗадаче.Основание = cbr_ОценкаЧасовСрезПоследних.Задача)
	|ГДЕ
	|	cbr_ОценкаЧасовСрезПоследних.Согласовано";

	Запрос.УстановитьПараметр("Задача", Объект.Основание);
	Запрос.УстановитьПараметр("Исполнитель", Объект.Исполнитель);
	
	РезультатЗапроса = Запрос.Выполнить();

	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		ТипОценки = Выборка.ТипОценки;
		ВыполненныеЧасы = Выборка.Часы;
		
		Если ТипОценки = ПредопределенноеЗначение("Перечисление.cbr_ТипОценкиЧасов.Рамочная") Тогда
			ОценкаЧасов = "от " + Выборка.От + " до " + Выборка.До;	
		ИначеЕсли ТипОценки = ПредопределенноеЗначение("Перечисление.cbr_ТипОценкиЧасов.Точная") Тогда
			ОценкаЧасов = Выборка.До;
		Иначе
			Элементы.ОценкаЧасов.Видимость = Ложь;
		КонецЕсли;		
		
		Если ТипОценки = ПредопределенноеЗначение("Перечисление.cbr_ТипОценкиЧасов.Точная") Тогда
			ОстатокЧасов = Выборка.До - Выборка.Часы;
		Иначе
			Элементы.ОстатокЧасов.Видимость = Ложь;
		КонецЕсли;
	
	КонецЕсли;
КонецПроцедуры
#КонецОбласти