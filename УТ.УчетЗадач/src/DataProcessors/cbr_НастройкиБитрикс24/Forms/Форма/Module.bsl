#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДанныеАвторизации = Новый Структура();
	ЗаполнитьФормуЗначениямиРегистра(ДанныеАвторизации);
	
	Если ЗначениеЗаполнено(ДанныеАвторизации) Тогда
		НастройкаЗавершена = ПроверитьЗавершениеНастройки(ДанныеАвторизации);
		ЭтоПерваяНастройка = Ложь;
		
	Иначе
		ЭтоПерваяНастройка = Истина;
		
	КонецЕсли;
	
	ИзменитьДоступностьПолейФормы();
	
	СтатусыТЧИзменена = Ложь;
	ПриоритетыТЧИзменена = Ложь;
	ТриггерыТЧИзменена = Ложь;
	
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура Битрикс24ИнтеграцияВключенаПриИзменении(Элемент)

	ПоменятьСтатусИнтеграцииБитрикс();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСоответствиеСтатусов

&НаКлиенте
Процедура СоответствиеСтатусовСтатусБитриксПриИзменении(Элемент)
	СтатусыТЧИзменена = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСоответствиеПриоритетов

&НаКлиенте
Процедура СоответствиеПриоритетовПриоритетБитриксПриИзменении(Элемент)
	ПриоритетыТЧИзменена = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСоответствиеТриггеров

&НаКлиенте
Процедура СоответствиеТриггеровДействиеПриИзменении(Элемент)
	ТриггерыТЧИзменена = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПроверитьВебХук(Команда)

	ДанныеАвторизации = Новый Структура("БитриксURL, Токен", БитриксURL, "");
	ПроверитьВебХукНаСервере(ДанныеАвторизации);

КонецПроцедуры

&НаКлиенте
Процедура СоздатьПапку(Команда)
	
	ДанныеАвторизации = СоздатьСтруктуруНастроек();
	СоздатьПапкуНаСервере(ДанныеАвторизации);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройки(Команда)
	СохранитьНастройкиНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРегистрДляТеста(Команда)
	ЗаполнитьРегистрДляТестаНаСервере();
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьФормуЗначениямиРегистра(ДанныеАвторизации)
	
	ТипНастройки = Перечисления.cbr_Б24_Настройки.ДанныеАвторизации;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	cbr_Б24_Настройки.Настройка КАК Настройка,
		|	cbr_Б24_Настройки.Значение КАК Значение
		|ИЗ
		|	РегистрСведений.cbr_Б24_Настройки КАК cbr_Б24_Настройки
		|ГДЕ
		|	cbr_Б24_Настройки.ТипНастройки = &ТипНастройки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	cbr_Б24_Настройки.Значение КАК СтатусБитрикс,
		|	cbr_СтатусыЗадач.Ссылка КАК СтатусЗадачи
		|ИЗ
		|	Справочник.cbr_СтатусыЗадач КАК cbr_СтатусыЗадач
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.cbr_Б24_Настройки КАК cbr_Б24_Настройки
		|		ПО cbr_Б24_Настройки.Настройка = cbr_СтатусыЗадач.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	cbr_Б24_Настройки.Значение КАК ПриоритетБитрикс,
		|	cbr_ПриоритетыЗадач.Ссылка КАК ПриоритетЗадачи
		|ИЗ
		|	Перечисление.cbr_ПриоритетыЗадач КАК cbr_ПриоритетыЗадач
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.cbr_Б24_Настройки КАК cbr_Б24_Настройки
		|		ПО cbr_Б24_Настройки.Настройка = cbr_ПриоритетыЗадач.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	cbr_ПодпискаДляТриггера.Ссылка КАК Триггер,
		|	cbr_Б24_Настройки.Значение КАК Действие
		|ИЗ
		|	Перечисление.cbr_ПодпискаДляТриггера КАК cbr_ПодпискаДляТриггера
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.cbr_Б24_Настройки КАК cbr_Б24_Настройки
		|		ПО cbr_ПодпискаДляТриггера.Ссылка = cbr_Б24_Настройки.Настройка";
	
	Запрос.УстановитьПараметр("ТипНастройки", ТипНастройки);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Выборка = РезультатЗапроса[0].Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ДанныеАвторизации.Вставить(Выборка.Настройка, Выборка.Значение);
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ДанныеАвторизации) Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеАвторизации);
	КонецЕсли;
	
	СоответствиеСтатусов.Загрузить(РезультатЗапроса[1].Выгрузить());
	СоответствиеПриоритетов.Загрузить(РезультатЗапроса[2].Выгрузить());
	СоответствиеТриггеров.Загрузить(РезультатЗапроса[3].Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьВебХукНаСервере(ДанныеАвторизации)
	
	// TODO: Титов - тут должна быть проверка векхука и токена и в зависимости от этого дальше работать

	Ответ = OPI_Bitrix24.ПолучитьТекущегоПользователя(БитриксURL);

	Если Ответ["error"] <> Неопределено Тогда
		ОбщегоНазначения.СообщитьПользователю(Ответ["error_description"]);
		Возврат;
	КонецЕсли;

	АйДиАдмин = Формат(Ответ["result"]["ID"], "ЧГ=");

	АйДиХранилища = cbr_Битрикс24.ПолучитьАйДиХранилищаПользователя(АйДиАдмин, ДанныеАвторизации);

КонецПроцедуры

&НаСервере
Процедура СоздатьПапкуНаСервере(Знач ДанныеАвторизации)

	Если ЗначениеЗаполнено(АйДиКаталогФайлов) Тогда
		// TODO: Титов - Если айдипапки есть то предложение пересоздать папку, а старую удалить или нет. 
		// Тогда и все файлы удалить и все связи.
		// Если папка уже есть, то только вернуть ее айди

	КонецЕсли;

	Если ЗначениеЗаполнено(АйДиХранилища) И ЗначениеЗаполнено(ИмяПапкиДляФайлов) Тогда
		
		АйДиКаталогФайлов = cbr_Битрикс24.ПолучитьАйДиПапкиПользователя(ДанныеАвторизации.АйДиАдмин, 
																		ДанныеАвторизации, 
																		ИмяПапкиДляФайлов);
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиНаСервере()
	
	// TODO: Титов - Добавить проверки на заполненность нужных данных
	// TODO: Титов - отправлять только измененные данные (проверка вообще показывать кнопку сохранить или нет)
	// TODO: Титов - в зависимости от изменений в настройках передаются разные типы настроек

	НастройкиБитрикс = СоздатьСтруктуруНастроек();
	ТипНастройки = Перечисления.cbr_Б24_Настройки.ДанныеАвторизации;

	НастройкаЗавершена = ПроверитьЗавершениеНастройки(НастройкиБитрикс);

	Если НастройкаЗавершена Тогда
		ОбновитьНастройкиВРегистре(НастройкиБитрикс, ТипНастройки);
	Иначе
		ОбщегоНазначения.СообщитьПользователю("Настройка не завершена.");
		Возврат;
	КонецЕсли;

	СохранитьСоответствиеСтатусов();
	СохранитьСоответствиеПриоритетов();
	СохранитьСоответствиеТриггеров();

КонецПроцедуры

&НаСервере
Процедура ИзменитьДоступностьПолейФормы()
	
	Элементы.ГруппаОсновныеНастройки.Доступность = Не НастройкаЗавершена;
	
	Если ЭтоПерваяНастройка Тогда
		Элементы.Битрикс24ИнтеграцияВключена.Заголовок = "Битрикс24 интеграция выключена";
		Элементы.Битрикс24ИнтеграцияВключена.ЦветТекстаЗаголовка = WebЦвета.Красный;
		Элементы.ГруппаВсеНастройки.Доступность = Ложь;
		Битрикс24ИнтеграцияВключена = Ложь;
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция СоздатьСтруктуруНастроек()

	НастройкиБитрикс = Новый Структура;

	НастройкиБитрикс.Вставить("Битрикс24ИнтеграцияВключена", Битрикс24ИнтеграцияВключена);
	НастройкиБитрикс.Вставить("БитриксURL", БитриксURL);
	НастройкиБитрикс.Вставить("АйДиАдмин", АйДиАдмин);
	НастройкиБитрикс.Вставить("АйДиХранилища", АйДиХранилища);
	НастройкиБитрикс.Вставить("ИмяПапкиДляФайлов", ИмяПапкиДляФайлов);
	НастройкиБитрикс.Вставить("АйДиКаталогФайлов", АйДиКаталогФайлов);
	НастройкиБитрикс.Вставить("ТипИнтеграции", ТипИнтеграции);
	НастройкиБитрикс.Вставить("Токен", "");

	Возврат НастройкиБитрикс;
КонецФункции

Процедура ОбновитьНастройкиВРегистре(Знач НастройкиБитрикс, Знач ТипНастройки)

	Для Каждого Настройка Из НастройкиБитрикс Цикл

		СтруктураЗаписи = Новый Структура;
		СтруктураЗаписи.Вставить("ТипНастройки", ТипНастройки);
		СтруктураЗаписи.Вставить("Настройка", Настройка.Ключ);
		СтруктураЗаписи.Вставить("Значение", Настройка.Значение);

		ОбменДаннымиСлужебный.ОбновитьЗаписьВРегистрСведений(СтруктураЗаписи, "cbr_Б24_Настройки");

	КонецЦикла;

КонецПроцедуры

Функция ПроверитьЗавершениеНастройки(Знач НастройкиБитрикс)

	Для Каждого Настройка Из НастройкиБитрикс Цикл
		Если Не ЗначениеЗаполнено(Настройка.Значение) И Настройка.Ключ <> "Токен" Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;

	Возврат Истина;

КонецФункции

&НаСервере
Процедура ПоменятьСтатусИнтеграцииБитрикс()

	Если Битрикс24ИнтеграцияВключена Тогда
		Элементы.Битрикс24ИнтеграцияВключена.Заголовок = "Битрикс24 интеграция включена";
		Элементы.Битрикс24ИнтеграцияВключена.ЦветТекстаЗаголовка = WebЦвета.Зеленый;
		Элементы.ГруппаВсеНастройки.Доступность = Истина;
	Иначе
		Элементы.Битрикс24ИнтеграцияВключена.Заголовок = "Битрикс24 интеграция выключена";
		Элементы.Битрикс24ИнтеграцияВключена.ЦветТекстаЗаголовка = WebЦвета.Красный;
		Элементы.ГруппаВсеНастройки.Доступность = Ложь;
	КонецЕсли;

	СтруктураЗаписи = Новый Структура;
	СтруктураЗаписи.Вставить("ТипНастройки", Перечисления.cbr_Б24_Настройки.ДанныеАвторизации);
	СтруктураЗаписи.Вставить("Настройка", "Битрикс24ИнтеграцияВключена");
	СтруктураЗаписи.Вставить("Значение", Битрикс24ИнтеграцияВключена);

	ОбменДаннымиСлужебный.ОбновитьЗаписьВРегистрСведений(СтруктураЗаписи, "cbr_Б24_Настройки");

КонецПроцедуры

&НаСервере
Процедура СохранитьСоответствиеСтатусов()

	Если Не СтатусыТЧИзменена Тогда
		Возврат;
	КонецЕсли;

	ТипНастройки = Перечисления.cbr_Б24_Настройки.СтатусСоответствие;

	Для Каждого СтрокаТЧ Из СоответствиеСтатусов Цикл
		Если ЗначениеЗаполнено(СтрокаТЧ.СтатусБитрикс) Тогда
			СтруктураЗаписи = Новый Структура;
			СтруктураЗаписи.Вставить("ТипНастройки", ТипНастройки);
			СтруктураЗаписи.Вставить("Настройка", СтрокаТЧ.СтатусЗадачи);
			СтруктураЗаписи.Вставить("Значение", СтрокаТЧ.СтатусБитрикс);

			ОбменДаннымиСлужебный.ОбновитьЗаписьВРегистрСведений(СтруктураЗаписи, "cbr_Б24_Настройки");
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура СохранитьСоответствиеПриоритетов()

	Если Не ПриоритетыТЧИзменена Тогда
		Возврат;
	КонецЕсли;

	ТипНастройки = Перечисления.cbr_Б24_Настройки.ПриоритетСоответствие;

	Для Каждого СтрокаТЧ Из СоответствиеПриоритетов Цикл
		Если ЗначениеЗаполнено(СтрокаТЧ.ПриоритетБитрикс) Тогда
			СтруктураЗаписи = Новый Структура;
			СтруктураЗаписи.Вставить("ТипНастройки", ТипНастройки);
			СтруктураЗаписи.Вставить("Настройка", СтрокаТЧ.ПриоритетЗадачи);
			СтруктураЗаписи.Вставить("Значение", СтрокаТЧ.ПриоритетБитрикс);

			ОбменДаннымиСлужебный.ОбновитьЗаписьВРегистрСведений(СтруктураЗаписи, "cbr_Б24_Настройки");
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура СохранитьСоответствиеТриггеров()

	Если Не ТриггерыТЧИзменена Тогда
		Возврат;
	КонецЕсли;

	ТипНастройки = Перечисления.cbr_Б24_Настройки.ТриггерСоответствие;

	Для Каждого СтрокаТЧ Из СоответствиеТриггеров Цикл
		Если ЗначениеЗаполнено(СтрокаТЧ.Действие) Тогда
			СтруктураЗаписи = Новый Структура;
			СтруктураЗаписи.Вставить("ТипНастройки", ТипНастройки);
			СтруктураЗаписи.Вставить("Настройка", СтрокаТЧ.Триггер);
			СтруктураЗаписи.Вставить("Значение", СтрокаТЧ.Действие);

			ОбменДаннымиСлужебный.ОбновитьЗаписьВРегистрСведений(СтруктураЗаписи, "cbr_Б24_Настройки");
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРегистрДляТестаНаСервере()
	НастройкиБитрикс = Новый Структура;
	ТипИнтеграции = ОбщегоНазначения.ПредопределенныйЭлемент(
		"ПланВидовХарактеристик.cbr_ВидыПользовательскихНастроек.Битрикс");
	ТипНастройки = Перечисления.cbr_Б24_Настройки.ДанныеАвторизации;

	НастройкиБитрикс.Вставить("Битрикс24ИнтеграцияВключена", Истина);
	НастройкиБитрикс.Вставить("БитриксURL", "https://c1c.bitrix24.ru/rest/3097/ztlcnlwwa060a57v/");
	НастройкиБитрикс.Вставить("АйДиАдмин", "3097");
	НастройкиБитрикс.Вставить("АйДиХранилища", "3943");
	НастройкиБитрикс.Вставить("ИмяПапкиДляФайлов", "TasksFiles");
	НастройкиБитрикс.Вставить("АйДиКаталогФайлов", "668697");
	НастройкиБитрикс.Вставить("ТипИнтеграции", ТипИнтеграции);
	НастройкиБитрикс.Вставить("Токен", "");

	Для Каждого Настройка Из НастройкиБитрикс Цикл

		СтруктураЗаписи = Новый Структура;
		СтруктураЗаписи.Вставить("ТипНастройки", ТипНастройки);
		СтруктураЗаписи.Вставить("Настройка", Настройка.Ключ);
		СтруктураЗаписи.Вставить("Значение", Настройка.Значение);

		ОбменДаннымиСлужебный.ОбновитьЗаписьВРегистрСведений(СтруктураЗаписи, "cbr_Б24_Настройки");

	КонецЦикла;
	
	ДанныеАвторизации = Новый Структура();
	ЗаполнитьФормуЗначениямиРегистра(ДанныеАвторизации);
	
	Если ЗначениеЗаполнено(ДанныеАвторизации) Тогда
		
		НастройкаЗавершена = ПроверитьЗавершениеНастройки(ДанныеАвторизации);
		ЭтоПерваяНастройка = Ложь;
		ИзменитьДоступностьПолейФормы();
	
	КонецЕсли;
	
	СтатусыТЧИзменена = Ложь;
	ПриоритетыТЧИзменена = Ложь;
	ТриггерыТЧИзменена = Ложь;
	
КонецПроцедуры
#КонецОбласти