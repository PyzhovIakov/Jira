#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Не Отказ Тогда
		ВыбранныйПользователь = Пользователи.АвторизованныйПользователь();

		АвтоЗаголовок = Ложь;
		Заголовок = "Настройки пользователя (" + ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыбранныйПользователь,
			"Наименование") + ")";

		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	cbr_ВидыПользовательскихНастроек.Ссылка,
		|	cbr_ВидыПользовательскихНастроек.Родитель,
		|	cbr_ВидыПользовательскихНастроек.ЭтоГруппа
		|ПОМЕСТИТЬ вт_ВсеНастройки
		|ИЗ
		|	ПланВидовХарактеристик.cbr_ВидыПользовательскихНастроек КАК cbr_ВидыПользовательскихНастроек
		|ГДЕ
		|	НЕ cbr_ВидыПользовательскихНастроек.ЭтоГруппа
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт_ВсеНастройки.Ссылка,
		|	cbr_ПользовательскиеНастройки.Значение,
		|	вт_ВсеНастройки.Родитель КАК Родитель,
		|	вт_ВсеНастройки.ЭтоГруппа
		|ИЗ
		|	вт_ВсеНастройки КАК вт_ВсеНастройки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.cbr_ПользовательскиеНастройки КАК cbr_ПользовательскиеНастройки
		|		ПО вт_ВсеНастройки.Ссылка = cbr_ПользовательскиеНастройки.ВидНастройки
		|		И cbr_ПользовательскиеНастройки.Пользователь = &Пользователь
		|ИТОГИ
		|ПО
		|	Родитель";

		Запрос.УстановитьПараметр("Пользователь", ВыбранныйПользователь);

		РезультатЗапроса = Запрос.Выполнить();

		ДеревоНаст = РеквизитФОрмыВЗначение("ДеревоНастроек");

		ВыборкаРодитель = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаРодитель.Следующий() Цикл
			НоваяГруппаНастроек = ДеревоНаст.Строки.Добавить();
			НоваяГруппаНастроек.Настройка = ВыборкаРодитель.Родитель;
			НоваяГруппаНастроек.ЭтоГруппа = Истина;
			Выборка = ВыборкаРодитель.Выбрать();

			Пока Выборка.Следующий() Цикл
				НоваяНастройка = НоваяГруппаНастроек.Строки.Добавить();
				НоваяНастройка.Настройка = Выборка.Ссылка;
				НоваяНастройка.Значение = Выборка.Значение;
				НоваяНастройка.ЭтоГруппа = Выборка.ЭтоГруппа;
			КонецЦикла;
		КонецЦикла;

		ЗначениеВРеквизитФормы(ДеревоНаст, "ДеревоНастроек");
	КонецЕсли;
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоНастроек
&НаКлиенте
Процедура ДеревоНастроекЗначениеПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ДеревоНастроек.ТекущиеДанные;

	ПользовательскиеНастройкиПостановщик = ПредопределенноеЗначение(
		"ПланВидовХарактеристик.cbr_ВидыПользовательскихНастроек.Постановщик");
	ПользовательскиеНастройкиВидЗадачи = ПредопределенноеЗначение(
			"ПланВидовХарактеристик.cbr_ВидыПользовательскихНастроек.ВидЗадачи");
	ПользовательскиеНастройкиКонтрольВремени = ПредопределенноеЗначение(
			"ПланВидовХарактеристик.cbr_ВидыПользовательскихНастроек.КонтрольВремени");
	ПользовательскиеНастройкиУчетВремени = ПредопределенноеЗначение(
			"ПланВидовХарактеристик.cbr_ВидыПользовательскихНастроек.УчетВремени");	
				
	Если ТекущиеДанные.Настройка = ПользовательскиеНастройкиПостановщик И ЗначениеЗаполнено(ТекущиеДанные.Значение) Тогда
		НастройкаВида = НастройкаДереваПоЗначению(ПользовательскиеНастройкиВидЗадачи, "Партнер");

		Если НастройкаВида <> Неопределено И НастройкаВида И ТипЗнч(
			ТекущиеДанные.Значение) = Тип("СправочникСсылка.Пользователи") Тогда

			СообщитьТекст("Постановщиком выбранного вида задачи не может быть пользователь");
		КонецЕсли;

		Если НастройкаВида <> Неопределено И Не НастройкаВида И ТипЗнч(
			ТекущиеДанные.Значение) = Тип("СправочникСсылка.Партнеры") Тогда

			СообщитьТекст("Постановщиком выбранного вида задачи не может быть партнер");
		КонецЕсли;
	КонецЕсли;

	Если ТекущиеДанные.Настройка = ПользовательскиеНастройкиВидЗадачи Тогда
		НастройкаВида = НастройкаДереваПоЗначению(ПользовательскиеНастройкиПостановщик, "Ссылка");

		НуженПартнер = ЗначениеРеквизитаОбъекта(ТекущиеДанные.Значение, "Партнер");
		Если НуженПартнер <> Неопределено И НуженПартнер И ТипЗнч(НастройкаВида) = Тип("СправочникСсылка.Пользователи") Тогда
			
			СообщитьТекст("Данный вид задачи несовместим с постановщиком-пользователем");
		КонецЕсли;

		Если НуженПартнер <> Неопределено И Не НуженПартнер И ТипЗнч(НастройкаВида) = Тип("СправочникСсылка.Партнеры") Тогда
			
			СообщитьТекст("Данный вид задачи несовместим с постановщиком-партнером");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекущиеДанные.Значение) Тогда
			НастройкаКонтроля = НастройкаДереваПоЗначению(ПользовательскиеНастройкиКонтрольВремени);
			НастройкаВида = ЗначениеРеквизитаОбъекта(ТекущиеДанные.Значение, "КонтрольВремени");
			Если НастройкаКонтроля <> Неопределено И Не НастройкаКонтроля И НастройкаВида Тогда
	
				СообщитьТекст("Контроль времени обязателен для выбранного вида задач");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Если ТекущиеДанные.Настройка = ПользовательскиеНастройкиКонтрольВремени 
		И ЗначениеЗаполнено(ТекущиеДанные.Значение) Тогда
		НастройкаКонтроля = НастройкаДереваПоЗначению(ПользовательскиеНастройкиВидЗадачи, "КонтрольВремени");
		Если НастройкаКонтроля <> Неопределено И НастройкаКонтроля И Не ТекущиеДанные.Значение Тогда

			СообщитьТекст("Контроль времени обязателен для выбранного вида задач");
		КонецЕсли;

		НастройкаУчета = НастройкаДереваПоЗначению(ПользовательскиеНастройкиУчетВремени);
		Если НастройкаУчета <> Неопределено И Не НастройкаУчета И ТекущиеДанные.Значение Тогда

			СообщитьТекст("Учет времени обязателен при включенном контроле");
		КонецЕсли;
	КонецЕсли;

	Если ТекущиеДанные.Настройка = ПользовательскиеНастройкиУчетВремени И ЗначениеЗаполнено(ТекущиеДанные.Значение) Тогда
		НастройкаКонтроля = НастройкаДереваПоЗначению(ПользовательскиеНастройкиКонтрольВремени);
		Если НастройкаКонтроля <> Неопределено И НастройкаКонтроля 
			И Не ТекущиеДанные.Значение Тогда
				
			СообщитьТекст("Учет времени обязателен при включенном контроле");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
#КонецОбласти
#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура СохранитьНастройки(Команда)
	СохранитьНастройкиНаСервере();
	Закрыть();
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервере
Функция ЗначениеРеквизитаОбъекта(ОбъектСсылка, ИмяРеквизита)
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбъектСсылка, ИмяРеквизита);
КонецФункции

&НаКлиенте
Процедура СообщитьТекст(ТекстСообщения)
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = ТекстСообщения;
	Сообщение.Сообщить();
КонецПроцедуры

&НаСервере
Функция НастройкаДереваПоЗначению(ЗначениеНастройки, ПолеНастройки = Неопределено)
	ДеревоНаст = РеквизитФОрмыВЗначение("ДеревоНастроек");
	ЗначениеНастройки = ДеревоНаст.Строки.Найти(ЗначениеНастройки, "Настройка", Истина).Значение;

	Если ЗначениеЗаполнено(ЗначениеНастройки) Тогда
		Если ПолеНастройки = Неопределено Тогда
			Возврат ЗначениеНастройки;
		Иначе
			Возврат ЗначениеНастройки[ПолеНастройки];
		КонецЕсли;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

&НаСервере
Процедура СохранитьНастройкиНаСервере()
	ДеревоНаст = РеквизитФормыВЗначение("ДеревоНастроек");
	Набор = РегистрыСведений.cbr_ПользовательскиеНастройки.СоздатьНаборЗаписей();
	Набор.Отбор.Пользователь.Установить(ВыбранныйПользователь);
	Набор.Прочитать();
	Набор.Очистить();

	Для Каждого СтрокаДерева Из ДеревоНаст.Строки Цикл
		РекурсивноеЗаполнениеНабора(СтрокаДерева, Набор);
	КонецЦикла;

	Набор.Записать();
КонецПроцедуры

&НаСервере
Процедура РекурсивноеЗаполнениеНабора(СтрокаДерева, Набор)
	Если СтрокаДерева.Строки.Количество() = 0 Тогда
		Если Не СтрокаДерева.ЭтоГруппа И ЗначениеЗаполнено(СтрокаДерева.Значение) Тогда
			Запись = Набор.Добавить();
			Запись.Пользователь = ВыбранныйПользователь;
			Запись.ВидНастройки = СтрокаДерева.Настройка;
			Запись.Значение = СтрокаДерева.Значение;
		КонецЕсли;

		Возврат;
	КонецЕсли;

	Для Каждого Строка Из СтрокаДерева.Строки Цикл
		РекурсивноеЗаполнениеНабора(Строка, Набор);
	КонецЦикла;
КонецПроцедуры
#КонецОбласти