#Область ПрограммныйИнтерфейс

//Возвращает всех пользователей, связанных с задачей
//	Параметры:
//		Ссылка - ДокументСсылка.cbr_Задача
//	Возвращаемое значение:
// 		Массив из СправочникСсылка.Пользователи - Пользователи задачи.
Функция ПользователиВыбраннойЗадачи(Ссылка) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	cbr_ЗадачаНаблюдатели.Пользователь КАК Пользователь
	|ПОМЕСТИТЬ вт_НесгруппированныеПользователи
	|ИЗ
	|	Документ.cbr_Задача.Наблюдатели КАК cbr_ЗадачаНаблюдатели
	|ГДЕ
	|	cbr_ЗадачаНаблюдатели.Ссылка = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	cbr_ЗадачаНаблюдатели.Пользователь
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	cbr_ИсполнителиЗадачСрезПоследних.Исполнитель
	|ИЗ
	|	РегистрСведений.cbr_ИсполнителиЗадач.СрезПоследних(, Задача = &Ссылка
	|	И Исполнитель ССЫЛКА Справочник.Пользователи) КАК cbr_ИсполнителиЗадачСрезПоследних
	|СГРУППИРОВАТЬ ПО
	|	cbr_ИсполнителиЗадачСрезПоследних.Исполнитель
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	cbr_Задача.Автор
	|ИЗ
	|	Документ.cbr_Задача КАК cbr_Задача
	|ГДЕ
	|	cbr_Задача.Ссылка = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	cbr_Задача.Автор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА cbr_Задача.Постановщик ССЫЛКА Справочник.Пользователи
	|			ТОГДА cbr_Задача.Постановщик
	|	КОНЕЦ
	|ИЗ
	|	Документ.cbr_Задача КАК cbr_Задача
	|ГДЕ
	|	cbr_Задача.Ссылка = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА cbr_Задача.Постановщик ССЫЛКА Справочник.Пользователи
	|			ТОГДА cbr_Задача.Постановщик
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	cbr_ГруппыДоступаКЗадачамПользователи.Пользователь
	|ИЗ
	|	РегистрСведений.cbr_ИсполнителиЗадач.СрезПоследних(, Задача = &Ссылка
	|	И Исполнитель ССЫЛКА Справочник.cbr_ГруппыДоступаКЗадачам) КАК cbr_ИсполнителиЗадачСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.cbr_ГруппыДоступаКЗадачам.Пользователи КАК cbr_ГруппыДоступаКЗадачамПользователи
	|		ПО cbr_ГруппыДоступаКЗадачамПользователи.Пользователь = cbr_ИсполнителиЗадачСрезПоследних.Исполнитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_НесгруппированныеПользователи.Пользователь
	|ИЗ
	|	вт_НесгруппированныеПользователи КАК вт_НесгруппированныеПользователи
	|СГРУППИРОВАТЬ ПО
	|	вт_НесгруппированныеПользователи.Пользователь";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	Выборка =  Запрос.Выполнить().Выбрать();

	МассивКандидатов = Новый Массив;
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.Пользователь) И Выборка.Пользователь
			<> Пользователи.АвторизованныйПользователь() Тогда
				
			Если МассивКандидатов.Найти(Выборка.Пользователь) = Неопределено Тогда
				МассивКандидатов.Добавить(Выборка.Пользователь);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	ОсновнойМенеджер = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ГлавныйМенеджер");
	Если ОсновнойМенеджер <> Справочники.Пользователи.ПустаяСсылка() Тогда
		Если МассивКандидатов.Найти(ОсновнойМенеджер) = Неопределено Тогда
			МассивКандидатов.Добавить(ОсновнойМенеджер);
		КонецЕсли;
	КонецЕсли;

	Возврат МассивКандидатов;
КонецФункции

#Область ЗаполнениеПолей
// Заполняет поля формы по настройкам пользователя
// 
// Параметры: 
//   ЭтаФорма - ФормаКлиентскогоПриложения
//
Процедура ЗаполнитьПользовательскиеНастройки(ЭтаФорма) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	cbr_ПользовательскиеНастройки.Значение,
	|	cbr_ПользовательскиеНастройки.ВидНастройки
	|ИЗ
	|	РегистрСведений.cbr_ПользовательскиеНастройки КАК cbr_ПользовательскиеНастройки
	|ГДЕ
	|	cbr_ПользовательскиеНастройки.Пользователь = &Пользователь
	|	И
	|		cbr_ПользовательскиеНастройки.ВидНастройки.Родитель = ЗНАЧЕНИЕ(ПланВидовХарактеристик.cbr_ВидыПользовательскихНастроек.НачальноеЗаполнениеЗадачи)
	|	И НЕ cbr_ПользовательскиеНастройки.ВидНастройки.ЭтоГруппа";

	Запрос.УстановитьПараметр("Пользователь", Пользователи.АвторизованныйПользователь());

	РезультатЗапроса = Запрос.Выполнить();

	Выборка = РезультатЗапроса.Выбрать();

	Пока Выборка.Следующий() Цикл
		Если Выборка.ВидНастройки = ПредопределенноеЗначение(
			"ПланВидовХарактеристик.cbr_ВидыПользовательскихНастроек.Исполнитель") Тогда
			ЭтаФорма.Исполнитель = Выборка.Значение;
			
			ДобавитьНаблюдателяОтИсполнителя(ЭтаФорма);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

// Добавляет в наблюдателей руководителя текущего исполнителя
// 
// Параметры: 
//   ЭтаФорма - ФормаКлиентскогоПриложения
Процедура ДобавитьНаблюдателяОтИсполнителя(ЭтаФорма) Экспорт
	Наблюдатель = Неопределено;
	
	Если ТипЗнч(ЭтаФорма.Исполнитель) = Тип("СправочникСсылка.cbr_ГруппыДоступаКЗадачам") Тогда
		Наблюдатель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭтаФорма.Исполнитель, "Руководитель");
	КонецЕсли;

	Если ТипЗнч(ЭтаФорма.Исполнитель) = Тип("СправочникСсылка.Пользователи") Тогда
		Подразделение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭтаФорма.Исполнитель, "Подразделение");
		Если ЗначениеЗаполнено(Подразделение) Тогда
			НаблюдательФизЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Подразделение, "ТекущийРуководитель");
		
			Запрос = Новый Запрос;
			Запрос.Текст =
				"ВЫБРАТЬ
				|	Пользователи.Ссылка
				|ИЗ
				|	Справочник.Пользователи КАК Пользователи
				|ГДЕ
				|	Пользователи.ФизическоеЛицо = &ФизическоеЛицо";
			
			Запрос.УстановитьПараметр("ФизическоеЛицо", НаблюдательФизЛицо);
			Выборка = Запрос.Выполнить().Выбрать();
			
			Если Выборка.Следующий() Тогда
				Наблюдатель = Выборка.Ссылка;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Наблюдатель <> Неопределено Тогда
		СтрокиСНаблюдателем = ЭтаФорма.Объект.Наблюдатели.НайтиСтроки(Новый Структура("Пользователь", Наблюдатель));
		
		Если СтрокиСНаблюдателем.Количество() = 0 Тогда
			НовыйНаблюдатель = ЭтаФорма.Объект.Наблюдатели.Добавить();
			НовыйНаблюдатель.Пользователь = Наблюдатель;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// Добавляет в наблюдателей руководителя текущего исполнителя
// 
// Параметры: 
//   ЭтаФорма - ФормаКлиентскогоПриложения
//
Процедура ДобавитьНаблюдателяОтМенеджера(ЭтаФорма) Экспорт
	Наблюдатель = Неопределено;
	
	Если ТипЗнч(ЭтаФорма.Объект.Постановщик) = Тип("СправочникСсылка.Партнеры") Тогда
		Подразделение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭтаФорма.Объект.ГлавныйМенеджер, "Подразделение");
		Если ЗначениеЗаполнено(Подразделение) Тогда
			НаблюдательФизЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Подразделение, "ТекущийРуководитель");
		КонецЕсли;
	КонецЕсли;

	Если ТипЗнч(ЭтаФорма.Объект.Постановщик) = Тип("СправочникСсылка.Пользователи") Тогда
		Подразделение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭтаФорма.Объект.Постановщик, "Подразделение");
		Если ЗначениеЗаполнено(Подразделение) Тогда
			НаблюдательФизЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Подразделение, "ТекущийРуководитель");
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НаблюдательФизЛицо) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	Пользователи.Ссылка
			|ИЗ
			|	Справочник.Пользователи КАК Пользователи
			|ГДЕ
			|	Пользователи.ФизическоеЛицо = &ФизическоеЛицо";
		
		Запрос.УстановитьПараметр("ФизическоеЛицо", НаблюдательФизЛицо);
		Выборка = Запрос.Выполнить().Выбрать();
				
		Если Выборка.Следующий() Тогда
			Наблюдатель = Выборка.Ссылка;
		КонецЕсли;
	КонецЕсли;

	Если Наблюдатель <> Неопределено Тогда
		СтрокиСНаблюдателем = ЭтаФорма.Объект.Наблюдатели.НайтиСтроки(Новый Структура("Пользователь", Наблюдатель));
		
		Если СтрокиСНаблюдателем.Количество() = 0 Тогда
			НовыйНаблюдатель = ЭтаФорма.Объект.Наблюдатели.Добавить();
			НовыйНаблюдатель.Пользователь = Наблюдатель;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// Заполняет поля формы по настройкам пользователя
// Возвращаемое значение:
//  Булево
Функция ЕстьПользовательскиеНастройки() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	cbr_ПользовательскиеНастройки.Значение,
	|	cbr_ПользовательскиеНастройки.ВидНастройки
	|ИЗ
	|	РегистрСведений.cbr_ПользовательскиеНастройки КАК cbr_ПользовательскиеНастройки
	|ГДЕ
	|	cbr_ПользовательскиеНастройки.Пользователь = &Пользователь
	|	И
	|		cbr_ПользовательскиеНастройки.ВидНастройки.Родитель = ЗНАЧЕНИЕ(ПланВидовХарактеристик.cbr_ВидыПользовательскихНастроек.НачальноеЗаполнениеЗадачи)
	|	И НЕ cbr_ПользовательскиеНастройки.ВидНастройки.ЭтоГруппа
	|	И cbr_ПользовательскиеНастройки.Значение <> НЕОПРЕДЕЛЕНО";

	Запрос.УстановитьПараметр("Пользователь", Пользователи.АвторизованныйПользователь());

	РезультатЗапроса = Запрос.Выполнить();

	Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
КонецФункции

// Заполняет данные объекта из источника
// Параметры: 
// ЭтаФорма - Форма
// Источник - ДокументСсылка.cbr_Задача
Процедура ЗаполнитьНаследуемыеПараметры(ЭтаФорма, Источник) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	cbr_Задача.ВидЗадачи,
	|	cbr_Задача.Постановщик КАК Постановщик,
	|	cbr_Задача.УчетВремени,
	|	cbr_Задача.КонтрольВремени,
	|	cbr_Задача.Приоритет,
	|	cbr_Задача.ГлавныйМенеджер
	|ИЗ
	|	Документ.cbr_Задача КАК cbr_Задача
	|ГДЕ
	|	cbr_Задача.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	cbr_ЗадачаНаблюдатели.Пользователь
	|ИЗ
	|	Документ.cbr_Задача.Наблюдатели КАК cbr_ЗадачаНаблюдатели
	|ГДЕ
	|	cbr_ЗадачаНаблюдатели.Ссылка = &Ссылка";

	Запрос.УстановитьПараметр("Ссылка", Источник);

	РезультатЗапроса = Запрос.ВыполнитьПакет();

	ВыборкаОсновныеПараметры = РезультатЗапроса[0].Выбрать();
	Если ВыборкаОсновныеПараметры.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма.Объект, ВыборкаОсновныеПараметры);

		ЭтоПартнер = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыборкаОсновныеПараметры.ВидЗадачи, "Партнер");
		Если ЭтоПартнер Тогда
			ЭтаФорма.Объект.Постановщик = ВыборкаОсновныеПараметры.Постановщик;
			ЭтаФорма.Исполнитель = ВыборкаОсновныеПараметры.ГлавныйМенеджер;
		Иначе
			ЭтаФорма.Объект.Постановщик = Пользователи.АвторизованныйПользователь();
			ЭтаФорма.Исполнитель = ВыборкаОсновныеПараметры.Постановщик;
		КонецЕсли;
	КонецЕсли;

	ВыборкаНаблюдатели = РезультатЗапроса[1].Выбрать();
	Пока ВыборкаНаблюдатели.Следующий() Цикл
		СтрокиСНаблюдателем = ЭтаФорма.Объект.Наблюдатели.НайтиСтроки(Новый Структура("Пользователь", ВыборкаНаблюдатели.Пользователь));
		
		Если СтрокиСНаблюдателем.Количество() = 0 Тогда
			НоваяСтрокаНаблюдателей = ЭтаФорма.Объект.Наблюдатели.Добавить();
			НоваяСтрокаНаблюдателей.Пользователь = ВыборкаНаблюдатели.Пользователь;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
#КонецОбласти
#КонецОбласти