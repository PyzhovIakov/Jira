#Область СлужебныеПроцедурыИФункции

Процедура ВызовТриггера(Подписка, Задача = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	cbr_Триггеры.Запрос,
		|	cbr_Триггеры.Ссылка,
		|	cbr_Триггеры.Уведомлять,
		|	cbr_Триггеры.Владелец как Статус,
		|	cbr_Триггеры.Наименование,
		|	cbr_Триггеры.ФорматнаяСтрока
		|ПОМЕСТИТЬ вт_Триггер
		|ИЗ
		|	Справочник.cbr_Триггеры КАК cbr_Триггеры
		|ГДЕ
		|	cbr_Триггеры.Подписка = &Подписка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт_Триггер.Запрос КАК Запрос,
		|	вт_Триггер.ФорматнаяСтрока КАК ФорматнаяСтрока,
		|	вт_Триггер.Ссылка КАК Ссылка,
		|	вт_Триггер.Уведомлять КАК Уведомлять,
		|	вт_Триггер.Статус КАК Статус,
		|	cbr_ТриггерыПараметры.Параметр,
		|	cbr_ТриггерыПараметры.Значение,
		|	вт_Триггер.Наименование КАК Наименование
		|ИЗ
		|	вт_Триггер КАК вт_Триггер
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.cbr_Триггеры.Параметры КАК cbr_ТриггерыПараметры
		|		ПО вт_Триггер.Ссылка = cbr_ТриггерыПараметры.Ссылка
		|ИТОГИ
		|	МАКСИМУМ(Запрос) КАК Запрос,
		|	МАКСИМУМ(Уведомлять) КАК Уведомлять,
		|	МАКСИМУМ(Наименование) КАК Наименование,
		|	МАКСИМУМ(Статус) КАК Статус,
		|	МАКСИМУМ(ФорматнаяСтрока) КАК ФорматнаяСтрока
		|ПО
		|	Ссылка";
	Запрос.УстановитьПараметр("Подписка", Подписка);
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		Попытка
			 ВыполнениеЗапросаИзСправочника(Выборка, Задача);		
		Исключение
			ОбщегоНазначения.СообщитьПользователю("Ошибка Выполнения");
		КонецПопытки;
	КонецЦикла;

КонецПроцедуры

Процедура ВыполнениеЗапросаИзСправочника(СправочникКонтроля, Задача)
	Запрос = Новый Запрос;
	Запрос.Текст = СправочникКонтроля.Запрос;
	ВыборкаПараметровКонтроля = СправочникКонтроля.Выбрать();
	Пока ВыборкаПараметровКонтроля.Следующий() Цикл
		Запрос.УстановитьПараметр(ВыборкаПараметровКонтроля.Параметр, ВыборкаПараметровКонтроля.Значение);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("ТекущийПользователь", Пользователи.АвторизованныйПользователь());
	Запрос.УстановитьПараметр("Задача", Задача);
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();

	Пока Выборка.Следующий() Цикл
		ТекущаяДата = ТекущаяДатаСеанса();
		Если Выборка.Владелец().Колонки.Найти("Ссылка") <> Неопределено Тогда
			Если ЗначениеЗаполнено(Выборка.Ссылка) Тогда
				РегистрыСведений.cbr_СтатусыЗадач.ЗаписатьСтатусЗадачи(Выборка.Ссылка, СправочникКонтроля.Статус,
					ТекущаяДата);
			Иначе
				Продолжить;
			КонецЕсли;
		Иначе
			Продолжить;
		КонецЕсли;

		Если СправочникКонтроля.Уведомлять И Выборка.Владелец().Колонки.Найти("Пользователь") <> Неопределено Тогда
			Если ЗначениеЗаполнено(Выборка.Пользователь) Тогда
				ТекстНапоминания = Строка(Выборка.Пользователь) + " " + Строка(СправочникКонтроля.Наименование);
				ФорматнаяСтрока = СправочникКонтроля.ФорматнаяСтрока;
				ФорматнаяСтрока = КонструкторСообщенияПользователя(ФорматнаяСтрока,Выборка);
				ТекстНапоминания = ФорматнаяСтрока;
				ПериодичностьНапоминания = Перечисления.СпособыУстановкиВремениНапоминания.Периодически;
				cbr_УведомленияПользователей.ОтправитьУведомлениеПользователю(Выборка.Пользователь, ТекстНапоминания,
					ТекущаяДата, ТекущаяДата, ПериодичностьНапоминания, 60, Выборка.Ссылка);
				//КонструкторСообщенияПользователя("Ты лучший - &Пользователь", Выборка)
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Процедура ВызовТриггераРегЗаданием() Экспорт
	ВызовТриггера(Перечисления.cbr_ПодпискаДляТриггера.РегламентноеЗадание);
КонецПроцедуры

Функция КонструкторСообщенияПользователя(ШаблонСообщения, Выборка)
	КорректировочныйШаблон = СтрЗаменить(ШаблонСообщения, Символы.ПС, " ");
	МассивЧастейСтроки = СтрРазделить(КорректировочныйШаблон, " ");
	СтруктураПараметровСтроки = Новый Соответствие;
	Для каждого ЭлементМассиваЧастей из МассивЧастейСтроки Цикл
		Если Лев(ЭлементМассиваЧастей, 1) = "&" Тогда
			НовыйКлюч = СтрЗаменитьПоРегулярномуВыражению(ЭлементМассиваЧастей,"[^a-zA-ZА-Яа-я0-9&]","");
			СтруктураПараметровСтроки.Вставить(НовыйКлюч, "");	
		КонецЕсли;	
	КонецЦикла;
	
	СписокДоступныхКолонок = Выборка.Владелец().Колонки;
	
	Для каждого ЭлементКолонка из СписокДоступныхКолонок Цикл
		Если СтруктураПараметровСтроки.Получить("&"+ЭлементКолонка.Имя) <> Неопределено Тогда
			СтруктураПараметровСтроки["&"+ЭлементКолонка.Имя] = Выборка[ЭлементКолонка.Имя];	
		КонецЕсли;	
	КонецЦикла;
	
	Для каждого ЭлементСтруктура из СтруктураПараметровСтроки Цикл
		ШаблонСообщения = СтрЗаменить(ШаблонСообщения, ЭлементСтруктура.Ключ, Строка(ЭлементСтруктура.Значение));			
	КонецЦикла;
			
	Возврат ШаблонСообщения;
КонецФункции

#КонецОбласти

