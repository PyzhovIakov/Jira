#Область ПрограммныйИнтерфейс
// Проверка изменения полей документа и отправка уведомления
// Параметры:
//	Источник - ДокументОбъект.cbr_Задача
//	Отказ - Булево
//	РежимЗаписи - РежимЗаписиДокумента
//	РежимПроведения - РежимПроведенияДокумента
Процедура cbr_ЗаписьЗадачиПередЗаписью(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	Ссылка = Источник.Ссылка;

	Если Ссылка = Документы.cbr_Задача.ПустаяСсылка() Или Источник.ЭтоНовый() Тогда
		НачатьТранзакцию();

		Попытка
			НовыйИД = Новый УникальныйИдентификатор;
			НоваяСсылка = Документы.cbr_Задача.ПолучитьСсылку(НовыйИД);
			Источник.УстановитьСсылкуНового(НоваяСсылка);
			Источник.УстановитьНовыйНомер();
			Ссылка = НоваяСсылка;

			Набор = РегистрыСведений.cbr_СобытияПоЗадачам.СоздатьНаборЗаписей();

			Событие = "Создана новая задача";

			Если Источник.ГлавнаяЗадача <> Документы.cbr_Задача.ПустаяСсылка() Тогда
				Запись = Набор.Добавить();
				Запись.Дата = ТекущаяДатаСеанса();
				Запись.АвторСобытия = Пользователи.АвторизованныйПользователь();
				Запись.Задача = Источник.ГлавнаяЗадача;
				Запись.Событие = СтрШаблон("%1 добавлена в подчиненные задачи", Источник);

				Событие = Событие + СтрШаблон("; ГлавнаяЗадача = %1; ", Источник.ГлавнаяЗадача);
			КонецЕсли;

			Запись = Набор.Добавить();
			Запись.Дата = ТекущаяДатаСеанса();
			Запись.АвторСобытия = Пользователи.АвторизованныйПользователь();
			Запись.Задача = Ссылка;
			Запись.Событие = Событие;

			Набор.Записать(РежимЗамещения.Слияние);
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ВызватьИсключение;
		КонецПопытки;
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	cbr_Задача.Наименование,
		|	cbr_Задача.ОписаниеЗадачи,
		|	cbr_Задача.ВидЗадачи,
		|	cbr_Задача.Постановщик,
		|	cbr_Задача.Приоритет,
		|	cbr_Задача.ГлавнаяЗадача,
		|	cbr_Задача.УчетВремени,
		|	cbr_Задача.КонтрольВремени,
		|	cbr_Задача.ГлавныйМенеджер,
		|	cbr_Задача.ТребуетКонтроляПоЗавершению,
		|	cbr_Задача.Метка
		|ИЗ
		|	Документ.cbr_Задача КАК cbr_Задача
		|ГДЕ
		|	cbr_Задача.Ссылка = &Ссылка";

		Запрос.УстановитьПараметр("Ссылка", Ссылка);

		РезультатЗапроса = Запрос.Выполнить();

		Если РезультатЗапроса.Пустой() Тогда
			Возврат;
		КонецЕсли;

		Выборка = РезультатЗапроса.Выгрузить();

		СобытияЗадачи = "";

		Для Каждого Колонка Из Выборка.Колонки Цикл
			ИмяРеквизита = Колонка.Имя;
			ЗнчаениеВОбъекте = Источник[ИмяРеквизита];
			ЗначениеВБазе = Выборка[0][ИмяРеквизита];

			Если ЗнчаениеВОбъекте <> Неопределено Тогда
				Если ТипЗнч(ЗначениеВБазе) = Тип("ХранилищеЗначения") Тогда
					ЗначениеВБазе = ЗначениеВБазе.Получить();
					ЗнчаениеВОбъекте = ЗнчаениеВОбъекте.Получить();
					Если ЗначениеВБазе <> Неопределено Тогда
						Если ЗначениеВБазе.Элементы.Количество() <> ЗнчаениеВОбъекте.Элементы.Количество() Тогда
							СобытияЗадачи = СобытияЗадачи + СтрШаблон("%1 изменено; ", ИмяРеквизита);
						ИначеЕсли ЗначениеВБазе.Элементы.Количество() <> 0 Тогда
							Для Счетчик = 1 По ЗначениеВБазе.Элементы.Количество() Цикл
								ПараграфВБазе = ЗначениеВБазе.Элементы[Счетчик - 1];
								ПараграфВОбъекте = ЗнчаениеВОбъекте.Элементы[Счетчик - 1];

								Если ПараграфВБазе.Элементы.Количество() <> ПараграфВОбъекте.Элементы.Количество() Тогда
									СобытияЗадачи = СобытияЗадачи + СтрШаблон("%1 изменено; ", ИмяРеквизита);
									Прервать;
								ИначеЕсли ПараграфВБазе.Элементы.Количество() = 0 Тогда
									Продолжить;
								КонецЕсли;

								Для СчетчикВнутренний = 1 По ПараграфВБазе.Элементы.Количество() Цикл

									Если ТипЗнч(ПараграфВБазе.Элементы[СчетчикВнутренний - 1]) = ТипЗнч(
									ПараграфВОбъекте.Элементы[СчетчикВнутренний - 1]) Тогда
										Если ТипЗнч(ПараграфВБазе.Элементы[СчетчикВнутренний - 1]) = Тип(
										"ТекстФорматированногоДокумента") Тогда
											Если ПараграфВОбъекте.Элементы[СчетчикВнутренний - 1].Текст
												<> ПараграфВБазе.Элементы[СчетчикВнутренний - 1].Текст Тогда
												СобытияЗадачи = СобытияЗадачи + СтрШаблон("%1 изменено; ", ИмяРеквизита);
												Прервать;
											КонецЕсли;
										ИначеЕсли ТипЗнч(ПараграфВБазе.Элементы[СчетчикВнутренний - 1]) = Тип(
										"КартинкаФорматированногоДокумента") Тогда
											Если ПараграфВОбъекте.Элементы[СчетчикВнутренний - 1].Картинка
												<> ПараграфВБазе.Элементы[СчетчикВнутренний - 1].Картинка Тогда
												СобытияЗадачи = СобытияЗадачи + СтрШаблон("%1 изменено; ", ИмяРеквизита);
												Прервать;
											КонецЕсли;
										КонецЕсли;
									Иначе
										СобытияЗадачи = СобытияЗадачи + СтрШаблон("%1 изменено; ", ИмяРеквизита);
										Прервать;
									КонецЕсли;

								КонецЦикла;

							КонецЦикла;
						КонецЕсли;
					КонецЕсли;
				ИначеЕсли ЗначениеВБазе <> ЗнчаениеВОбъекте Тогда
					Если ИмяРеквизита = "ГлавнаяЗадача" Тогда
						СобытияЗадачи = СобытияЗадачи + СтрШаблон("%1 = %2; ", ИмяРеквизита, ЗнчаениеВОбъекте);

						Набор = РегистрыСведений.cbr_СобытияПоЗадачам.СоздатьНаборЗаписей();

						Если ЗначениеВБазе <> Документы.cbr_Задача.ПустаяСсылка() Тогда
							Запись = Набор.Добавить();
							Запись.Дата = ТекущаяДатаСеанса();
							Запись.АвторСобытия = Пользователи.АвторизованныйПользователь();
							Запись.Задача = ЗначениеВБазе;
							Запись.Событие = СтрШаблон("Задача %1 убрана из подчиненных", Ссылка);
						КонецЕсли;

						Если ЗнчаениеВОбъекте <> Документы.cbr_Задача.ПустаяСсылка() Тогда
							Запись = Набор.Добавить();
							Запись.Дата = ТекущаяДатаСеанса();
							Запись.АвторСобытия = Пользователи.АвторизованныйПользователь();
							Запись.Задача = ЗнчаениеВОбъекте;
							Запись.Событие = СтрШаблон("%1 добавлена в подчиненные задачи", Ссылка);
						КонецЕсли;

						Набор.Записать(РежимЗамещения.Слияние);
					Иначе
						СобытияЗадачи = СобытияЗадачи + СтрШаблон("%1 = %2; ", ИмяРеквизита, ЗнчаениеВОбъекте);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;

		Если СобытияЗадачи = "" Тогда
			Возврат;
		КонецЕсли;

		НачатьТранзакцию();

		Попытка
			Запись = РегистрыСведений.cbr_СобытияПоЗадачам.СоздатьМенеджерЗаписи();

			Запись.Дата = ТекущаяДатаСеанса();
			Запись.АвторСобытия = Пользователи.АвторизованныйПользователь();
			Запись.Задача = Ссылка;
			Запись.Событие = СобытияЗадачи;

			Запись.Записать();
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ВызватьИсключение;
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры
#КонецОбласти