#Область ПрограммныйИнтерфейс
// Проверка изменения полей документа и отправка уведомления
// Параметры:
//	Источник - ДокументОбъект.cbr_Задача
//	Отказ - Булево
//	РежимЗаписи - РежимЗаписиДокумента
//	РежимПроведения - РежимПроведенияДокумента
Процедура cbr_ЗаписьЗадачиПередЗаписью(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	Ссылка = Источник.Ссылка;

	Если Ссылка = Документы.cbr_Задача.ПустаяСсылка() Или Источник.ЭтоНовый() Тогда
		НачатьТранзакцию();

		Попытка
			НовыйИД = Новый УникальныйИдентификатор;
			НоваяСсылка = Документы.cbr_Задача.ПолучитьСсылку(НовыйИД);
			Источник.УстановитьСсылкуНового(НоваяСсылка);
			Источник.УстановитьНовыйНомер();
			Ссылка = НоваяСсылка;

			Событие = "Создана новая задача";

			Если Источник.ГлавнаяЗадача <> Документы.cbr_Задача.ПустаяСсылка() Тогда
				СобытиеГлавной = СтрШаблон("%1 добавлена в подчиненные задачи", Источник);
				РегистрыСведений.cbr_СобытияПоЗадачам.ЗаписатьСобытие(Источник.ГлавнаяЗадача, СобытиеГлавной);

				Событие = Событие + СтрШаблон("; ГлавнаяЗадача = %1; ", Источник.ГлавнаяЗадача);
			КонецЕсли;
			
			РегистрыСведений.cbr_СобытияПоЗадачам.ЗаписатьСобытие(Ссылка, Событие);
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ВызватьИсключение;
		КонецПопытки;
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	cbr_Задача.Наименование,
		|	cbr_Задача.ОписаниеЗадачи,
		|	cbr_Задача.ВидЗадачи,
		|	cbr_Задача.Постановщик,
		|	cbr_Задача.Приоритет,
		|	cbr_Задача.ГлавнаяЗадача,
		|	cbr_Задача.УчетВремени,
		|	cbr_Задача.КонтрольВремени,
		|	cbr_Задача.ГлавныйМенеджер,
		|	cbr_Задача.ТребуетКонтроляПоЗавершению,
		|	cbr_Задача.Метка
		|ИЗ
		|	Документ.cbr_Задача КАК cbr_Задача
		|ГДЕ
		|	cbr_Задача.Ссылка = &Ссылка";

		Запрос.УстановитьПараметр("Ссылка", Ссылка);

		РезультатЗапроса = Запрос.Выполнить();

		Если РезультатЗапроса.Пустой() Тогда
			Возврат;
		КонецЕсли;

		Выборка = РезультатЗапроса.Выгрузить();

		СобытияЗадачи = "";

		Для Каждого Колонка Из Выборка.Колонки Цикл
			ИмяРеквизита = Колонка.Имя;
			ЗнчаениеВОбъекте = Источник[ИмяРеквизита];
			ЗначениеВБазе = Выборка[0][ИмяРеквизита];

			Если ЗнчаениеВОбъекте <> Неопределено Тогда
				Если ТипЗнч(ЗначениеВБазе) = Тип("ХранилищеЗначения") Тогда
					ЗначениеВБазе = ЗначениеВБазе.Получить();
					ЗнчаениеВОбъекте = ЗнчаениеВОбъекте.Получить();

					Если ЗначениеВБазе.Элементы.Количество() <> ЗнчаениеВОбъекте.Элементы.Количество() Тогда
						СобытияЗадачи = СобытияЗадачи + СтрШаблон("%1 изменено; ", ИмяРеквизита);
					ИначеЕсли ЗначениеВБазе.Элементы.Количество() <> 0 Тогда
						Для Счетчик = 1 По ЗначениеВБазе.Элементы.Количество() Цикл
							ПараграфВБазе = ЗначениеВБазе.Элементы[Счетчик - 1];
							ПараграфВОбъекте = ЗнчаениеВОбъекте.Элементы[Счетчик - 1];

							Если ПараграфВБазе.Элементы.Количество() <> ПараграфВОбъекте.Элементы.Количество() Тогда
								СобытияЗадачи = СобытияЗадачи + СтрШаблон("%1 изменено; ", ИмяРеквизита);
								Прервать;
							ИначеЕсли ПараграфВБазе.Элементы.Количество() = 0 Тогда
								Продолжить;
							КонецЕсли;

							Для СчетчикВнутренний = 1 По ПараграфВБазе.Элементы.Количество() Цикл

								Если ТипЗнч(ПараграфВБазе.Элементы[СчетчикВнутренний - 1]) = ТипЗнч(
									ПараграфВОбъекте.Элементы[СчетчикВнутренний - 1]) Тогда
									Если ТипЗнч(ПараграфВБазе.Элементы[СчетчикВнутренний - 1]) = Тип(
										"ТекстФорматированногоДокумента") Тогда
										Если ПараграфВОбъекте.Элементы[СчетчикВнутренний - 1].Текст
											<> ПараграфВБазе.Элементы[СчетчикВнутренний - 1].Текст Тогда
											СобытияЗадачи = СобытияЗадачи + СтрШаблон("%1 изменено; ", ИмяРеквизита);
											Прервать;
										КонецЕсли;
									ИначеЕсли ТипЗнч(ПараграфВБазе.Элементы[СчетчикВнутренний - 1]) = Тип(
										"КартинкаФорматированногоДокумента") Тогда
										Если ПараграфВОбъекте.Элементы[СчетчикВнутренний - 1].Картинка
											<> ПараграфВБазе.Элементы[СчетчикВнутренний - 1].Картинка Тогда
											СобытияЗадачи = СобытияЗадачи + СтрШаблон("%1 изменено; ", ИмяРеквизита);
											Прервать;
										КонецЕсли;
									КонецЕсли;
								Иначе
									СобытияЗадачи = СобытияЗадачи + СтрШаблон("%1 изменено; ", ИмяРеквизита);
									Прервать;
								КонецЕсли;

							КонецЦикла;

						КонецЦикла;

					КонецЕсли;
				ИначеЕсли ЗначениеВБазе <> ЗнчаениеВОбъекте Тогда
					Если ИмяРеквизита = "ГлавнаяЗадача" Тогда
						СобытияЗадачи = СобытияЗадачи + СтрШаблон("%1 = %2; ", ИмяРеквизита, ЗнчаениеВОбъекте);
						
						События = Новый Массив;

						Если ЗначениеВБазе <> Документы.cbr_Задача.ПустаяСсылка() Тогда
							ОписаниеСобытия = Новый Структура;
							ОписаниеСобытия.Вставить("Задача", ЗначениеВБазе);
							ОписаниеСобытия.Вставить("Событие", СтрШаблон("Задача %1 убрана из подчиненных", Ссылка));
							События.Добавить(ОписаниеСобытия);
						КонецЕсли;

						Если ЗнчаениеВОбъекте <> Документы.cbr_Задача.ПустаяСсылка() Тогда
							ОписаниеСобытия = Новый Структура;
							ОписаниеСобытия.Вставить("Задача", ЗнчаениеВОбъекте);
							ОписаниеСобытия.Вставить("Событие", СтрШаблон("%1 добавлена в подчиненные задачи", Ссылка));
							События.Добавить(ОписаниеСобытия);			
						КонецЕсли;
						
						РегистрыСведений.cbr_СобытияПоЗадачам.ЗаписатьНаборСобытий(События);
					Иначе
						СобытияЗадачи = СобытияЗадачи + СтрШаблон("%1 = %2; ", ИмяРеквизита, ЗнчаениеВОбъекте);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;

		Если СобытияЗадачи = "" Тогда
			Возврат;
		КонецЕсли;

		НачатьТранзакцию();
		Попытка
			РегистрыСведений.cbr_СобытияПоЗадачам.ЗаписатьСобытие(Ссылка, СобытияЗадачи);
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ВызватьИсключение;
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры
#КонецОбласти