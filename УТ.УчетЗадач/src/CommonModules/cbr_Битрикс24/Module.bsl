#Область ПрограммныйИнтерфейс
// Отправить задачу в битрикс.
// 
// Параметры:
//  ЗадачаСсылка - ДокументСсылка.Центр_Задача - Задача ссылка
Процедура ОтправитьЗадачуВБитрикс(ЗадачаСсылка) Экспорт
	
	// Перед этой процедурой должна быть проверка что исполнитель это не группа
	
	Если НЕ ЗначениеЗаполнено(ЗадачаСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеАвторизации = ПолучитьДанныеАвторизации();
	
	СтруктураЗадачи = ПолучитьДанныеЗадачи(ЗадачаСсылка, ДанныеАвторизации.ТипИнтеграции);
	ПереработатьДанныеСтруктуры(СтруктураЗадачи);
	
	АйДиЗадачиБитрикс = СтруктураЗадачи.АйДиЗадачиБитрикс;
	
	СтруктураЗадачиДляБитрикса = СоздатьСтруктуруЗадачиДляБитрикса(СтруктураЗадачи);
	
	Если ЗначениеЗаполнено(АйДиЗадачиБитрикс) Тогда
		
		Ответ = OPI_Bitrix24.ИзменитьЗадачу(ДанныеАвторизации.URL, АйДиЗадачиБитрикс, СтруктураЗадачиДляБитрикса, ДанныеАвторизации.Токен);
		ЭтоНоваяЗадача = Ложь;
		
	Иначе
		
		Ответ = OPI_Bitrix24.СоздатьЗадачу(ДанныеАвторизации.URL, СтруктураЗадачиДляБитрикса, ДанныеАвторизации.Токен);
		ЭтоНоваяЗадача = Истина;
		
	КонецЕсли;
	
	Если Ответ["error"] <> Неопределено Тогда
		
		ОбщегоНазначения.СообщитьПользователю(Ответ["error_description"]);
		Возврат;
			
	КонецЕсли;
	
	Если ЭтоНоваяЗадача Тогда
		АйДиЗадачиБитрикс = Ответ["result"]["task"]["id"];
		ЧекЛистПустой = Истина;
		
		МенеджерЗаписи = РегистрыСведений.cbr_Б24_СоответствиеЗадач.СоздатьМенеджерЗаписи();
        МенеджерЗаписи.Задача = ЗадачаСсылка;
        МенеджерЗаписи.АйДиЗадачиБитрикс = АйДиЗадачиБитрикс;
        МенеджерЗаписи.Записать();	
        
		ТекстПервогоКомментария = СтрШаблон("Задача создана на основании: %1", ПолучитьНавигационнуюСсылку(ЗадачаСсылка));
		Ответ = OPI_Bitrix24.ДобавитьКомментарийЗадачи(ДанныеАвторизации.URL, АйДиЗадачиБитрикс, ТекстПервогоКомментария, ДанныеАвторизации.Токен);
	
	Иначе
		
		// ТУДУ Получать айдишники чеклиста из ответа и передавать их в функцию. 
		// Так же можно сделать проверку построчную что бы уменьшить количество запросов к Битриксу. Менять только нужное
		// Сейчас чеклист полностью очищается и создается заново
		
		ЧекЛистПустой = ОчиститьЧекЛистЗадачи(АйДиЗадачиБитрикс);
		
	КонецЕсли;
	
	// Добавление в битрикс чеклиста если он есть в задаче
	Если СтруктураЗадачи.Свойство("ЧекЛист") Тогда
		
		// Если чеклист в задаче б24 не пустой тогда нужно сначала очистить и потом заполнить. То есть поставить задачу отложенную
		Если ЧекЛистПустой Тогда
			
			Для Каждого Элемент Из СтруктураЗадачи["ЧекЛист"] Цикл
				Ответ = OPI_Bitrix24.ДобавитьЭлементЧеклистаЗадачи(ДанныеАвторизации.URL, АйДиЗадачиБитрикс, Элемент, , ДанныеАвторизации.Токен);
			
				Если Ответ["error"] <> Неопределено Тогда
					ОбщегоНазначения.СообщитьПользователю(Ответ["error_description"]);
				КонецЕсли;
				
			КонецЦикла;
			
		Иначе
			ОбщегоНазначения.СообщитьПользователю("Чек лист не пустой");
		КонецЕсли;
		
	КонецЕсли;
	
	// Добавление в битрикс файлов если они есть в задаче
	Если СтруктураЗадачи.Свойство("Файл") Тогда
		
		АйДиОсновнойПапки = ДанныеАвторизации.АйДиКаталогФайлов;
		ПапкаФайлыЗадачи = ?(ЗначениеЗаполнено(СтруктураЗадачи.АйДиПапкиФайлов), СтруктураЗадачи.АйДиПапкиФайлов, ПолучитьАйДиПапкиФайлов(ЗадачаСсылка, АйДиЗадачиБитрикс, АйДиОсновнойПапки));
		
		Для Каждого ФайлСсылка Из СтруктураЗадачи.Файл Цикл
			АйДиФайла = ЗагрузитьФайлБитрикс(ФайлСсылка, ПапкаФайлыЗадачи);
			Ответ = OPI_Bitrix24.ДобавитьФайлВЗадачу(ДанныеАвторизации.URL, АйДиЗадачиБитрикс, АйДиФайла, ДанныеАвторизации.Токен);
			
			Если Ответ["error"] <> Неопределено Тогда
				ОбщегоНазначения.СообщитьПользователю(Ответ["error_description"]);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	
КонецПроцедуры

// Удалить задачу в битриксе.
// 
// Параметры:
//  ЗадачаСсылка - ДокументСсылка.Центр_Задача - Ссылка на задачу для получения АйДи задачи в Битриксе
Процедура УдалитьЗадачуВБитриксе(ЗадачаСсылка) Экспорт
	
	ДанныеАвторизации = ПолучитьДанныеАвторизации();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Центр_Б24_СоответствиеЗадач.АйДиЗадачиБитрикс
		|ИЗ
		|	РегистрСведений.cbr_Б24_СоответствиеЗадач КАК Центр_Б24_СоответствиеЗадач
		|ГДЕ
		|	Центр_Б24_СоответствиеЗадач.Задача = &ЗадачаСсылка";
	
	Запрос.УстановитьПараметр("ЗадачаСсылка", ЗадачаСсылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		АйДиЗадачиБитрикс = Выборка.АйДиЗадачиБитрикс;
	КонецЦикла;
	
	Ответ = OPI_Bitrix24.УдалитьЗадачу(ДанныеАвторизации.URL, АйДиЗадачиБитрикс, ДанныеАвторизации.Токен);
	
КонецПроцедуры
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
// Получить список хранилищ.
// 
// Параметры:
//  СтруктураОтбора - Структура - Параметры для фильтрации по типу ("Поле хранилища" - "Значение отбора")
// 
// Поля хранилища (получены из функции "ПолучитьСписокПолейХранилища"):
// 1. ROOT_OBJECT_ID: 		USE_IN_SHOW - Да 	/ USE_IN_FILTER - Нет 	/ TYPE - integer.
// 2. ENTITY_ID: 			USE_IN_SHOW - Да 	/ USE_IN_FILTER - Да 	/ TYPE - string.
// 3. ENTITY_TYPE: 			USE_IN_SHOW - Да 	/ USE_IN_FILTER - Да 	/ TYPE - string.
// 4. MODULE_ID: 			USE_IN_SHOW - Да 	/ USE_IN_FILTER - Нет 	/ TYPE - string.
// 5. CODE: 				USE_IN_SHOW - Да 	/ USE_IN_FILTER - Да 	/ TYPE - string.
// 6. NAME: 				USE_IN_SHOW - Да 	/ USE_IN_FILTER - Да 	/ TYPE - string.
// 7. ID: 					USE_IN_SHOW - Да 	/ USE_IN_FILTER - Да 	/ TYPE - integer.
// 
// Возвращаемое значение:
//  Строка - Получить список хранилищ.
Функция ПолучитьСписокХранилищ(Знач СтруктураОтбора = "") Экспорт
	
	ДанныеАвторизации = ПолучитьДанныеАвторизации();
	
	НомерЗаписи = 0;
	МаксимальноЗаписей = 1000;
	
	МассивХранилищ = Новый Массив();;
	
	ДопПараметры = Новый Структура();
	ДопПараметры.Вставить("filter", СтруктураОтбора);
	
	Пока НомерЗаписи < МаксимальноЗаписей Цикл
		
		ДопПараметры.Вставить("start", НомерЗаписи);
		
		Ответ = OPI_Bitrix24.ПолучитьСписокХранилищ(ДанныеАвторизации.URL, ДанныеАвторизации.Токен, ДопПараметры);
		
		Если Ответ["error"] <> Неопределено Тогда
			Прервать;
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивХранилищ, Ответ["result"]);
		
		Если Ответ["next"] = Неопределено Тогда
			Прервать;
		КонецЕсли;
		
		НомерЗаписи = Ответ["next"];
		МаксимальноЗаписей = Ответ["total"];
		
		КомандаWindows = "Timeout /T " + Формат(1, "ЧГ=0") + " /NoBreak";
		
		WshShell = Новый COMОбъект("WScript.Shell"); 
		WshShell.Run(КомандаWindows, 0, -1);
		
	КонецЦикла;
	
	Возврат МассивХранилищ;
	
КонецФункции

// Перевести массив хранилищ в текст с их свойствами.
// 
// Параметры:
//  МассивХранилищ - Массив - Массив хранилищ
// 
// Возвращаемое значение:
//  Строка - Перевести массив хранилищ в текст
Функция ПеревестиМассивХранилищВТекст(Знач МассивХранилищ) Экспорт
	
	РезультатТекст = "";
	НомерЭлемента = 1;
	
	Для Каждого ЭлементМассива Из МассивХранилищ Цикл
			РезультатТекст = РезультатТекст + НомерЭлемента;
			
			Для Каждого Элемент Из ЭлементМассива Цикл
				
				РезультатТекст = РезультатТекст + ". " + Элемент.Ключ + " - " + Элемент.Значение + " / ";
				
			КонецЦикла;
			
			РезультатТекст = РезультатТекст + Символы.ПС;
			НомерЭлемента = НомерЭлемента + 1;
	КонецЦикла;
	
	Возврат РезультатТекст;
	
КонецФункции

Функция ПолучитьСписокПолейХранилища() Экспорт
	
	ДанныеАвторизации = ПолучитьДанныеАвторизации();
	Ответ = OPI_Bitrix24.ПолучитьПоляХранилища(ДанныеАвторизации.URL, ДанныеАвторизации.Токен);
	
	РезультатТекст = "";
	НомерПоля = 1;
	
	Если Ответ["error"] <> Неопределено Тогда
		
		ОбщегоНазначения.СообщитьПользователю(Ответ["error_description"]);
		Возврат Неопределено;
			
	КонецЕсли;
	
	Для Каждого ПолеХранилища Из Ответ["result"] Цикл
		
		РезультатТекст = РезультатТекст + НомерПоля + ". " + ПолеХранилища.Ключ + ": ";
		
		Для Каждого СвойствоПоля Из ПолеХранилища.Значение Цикл
			РезультатТекст = РезультатТекст + СвойствоПоля.Ключ + " - " + СвойствоПоля.Значение + " / ";
		КонецЦикла;
		
		РезультатТекст = РезультатТекст + Символы.ПС;
		НомерПоля = НомерПоля + 1;
		
	КонецЦикла;
	
	Возврат РезультатТекст;
	
КонецФункции
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ПолучитьДанныеАвторизации()
	
	URL = "https://c1c.bitrix24.ru/rest/3097/ztlcnlwwa060a57v/";
	Токен = "";
	ТипИнтеграции = ОбщегоНазначения.ПредопределенныйЭлемент("ПланВидовХарактеристик.Центр_ВидыПользовательскихНастроек.Битрикс");
	
	ДанныеАвторизации = Новый Структура;
	
	ДанныеАвторизации.Вставить("URL", URL);
	ДанныеАвторизации.Вставить("Токен", Токен);
	ДанныеАвторизации.Вставить("АйДиАдмин", 3097);
	ДанныеАвторизации.Вставить("АйДиХранилище", 3943);
	ДанныеАвторизации.Вставить("АйДиКаталогФайлов", 668697);
	ДанныеАвторизации.Вставить("ТипИнтеграции", ТипИнтеграции);
	
	Возврат ДанныеАвторизации;
	
КонецФункции

#Область ДанныеЗадачи

Функция ПолучитьДанныеЗадачи(ЗадачаСсылка, ТипИнтеграции)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Центр_Задача.Наименование,
		|	Центр_Задача.ОписаниеЗадачи,
		|	Центр_Задача.ВидЗадачи,
		|	Центр_Задача.Постановщик,
		|	Центр_Задача.Приоритет,
		|	Центр_Задача.УчетВремени,
		|	Центр_Задача.КонтрольВремени,
		|	Центр_Задача.Метка,
		|	Центр_Б24_СоответствиеПользователейАвтор.АйДиПользователя КАК Автор,
		|	Центр_Б24_СоответствиеПользователейМенеджер.АйДиПользователя КАК ГлавныйМенеджер,
		|	Центр_Б24_СоответствиеЗадачВыбранная.АйДиЗадачиБитрикс,
		|	Центр_Б24_СоответствиеЗадачВыбранная.АйДиПапкиФайлов,
		|	cbr_Б24_СоответствиеЗадачГлавная.АйДиЗадачиБитрикс КАК ГлавнаяЗадача
		|ИЗ
		|	Документ.Центр_Задача КАК Центр_Задача
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.cbr_СоответствиеПользователейДляИнтеграций КАК
		|			Центр_Б24_СоответствиеПользователейАвтор
		|		ПО Центр_Задача.Автор = Центр_Б24_СоответствиеПользователейАвтор.Пользователь
		|		И Центр_Б24_СоответствиеПользователейАвтор.ТипИнтеграции = &ТипИнтеграции
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.cbr_СоответствиеПользователейДляИнтеграций КАК
		|			Центр_Б24_СоответствиеПользователейМенеджер
		|		ПО Центр_Задача.ГлавныйМенеджер = Центр_Б24_СоответствиеПользователейМенеджер.Пользователь
		|		И Центр_Б24_СоответствиеПользователейМенеджер.ТипИнтеграции = &ТипИнтеграции
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.cbr_Б24_СоответствиеЗадач КАК Центр_Б24_СоответствиеЗадачВыбранная
		|		ПО Центр_Б24_СоответствиеЗадачВыбранная.Задача = Центр_Задача.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.cbr_Б24_СоответствиеЗадач КАК cbr_Б24_СоответствиеЗадачГлавная
		|		ПО Центр_Задача.ГлавнаяЗадача = cbr_Б24_СоответствиеЗадачГлавная.Задача
		|ГДЕ
		|	Центр_Задача.Ссылка = &ЗадачаСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АВТОНОМЕРЗАПИСИ() КАК НомерЗаписи,
		|	Центр_ЗадачаМетки.Ссылка,
		|	Центр_ЗадачаМетки.Метка
		|ПОМЕСТИТЬ ВТ_Метки
		|ИЗ
		|	Документ.Центр_Задача.Метки КАК Центр_ЗадачаМетки
		|ГДЕ
		|	Центр_ЗадачаМетки.Ссылка = &ЗадачаСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АВТОНОМЕРЗАПИСИ() КАК НомерЗаписи,
		|	Центр_ЗадачаНаблюдатели.Ссылка,
		|	Центр_ЗадачаНаблюдатели.Пользователь КАК Наблюдатель,
		|	Центр_Б24_СоответствиеПользователей.АйДиПользователя
		|ПОМЕСТИТЬ ВТ_Наблюдатели
		|ИЗ
		|	Документ.Центр_Задача.Наблюдатели КАК Центр_ЗадачаНаблюдатели
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.cbr_СоответствиеПользователейДляИнтеграций КАК Центр_Б24_СоответствиеПользователей
		|		ПО Центр_ЗадачаНаблюдатели.Пользователь = Центр_Б24_СоответствиеПользователей.Пользователь
		|ГДЕ
		|	Центр_ЗадачаНаблюдатели.Ссылка = &ЗадачаСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АВТОНОМЕРЗАПИСИ() КАК НомерЗаписи,
		|	Центр_ИсполнителиЗадачСрезПоследних.Задача,
		|	ЕСТЬNULL(Центр_ГруппыДоступаКЗадачамПользователи.Пользователь, Центр_ИсполнителиЗадачСрезПоследних.Исполнитель) КАК
		|		Исполнитель
		|ПОМЕСТИТЬ ВТ_Исполнители
		|ИЗ
		|	РегистрСведений.Центр_ИсполнителиЗадач.СрезПоследних(, Задача = &ЗадачаСсылка) КАК
		|		Центр_ИсполнителиЗадачСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Центр_ГруппыДоступаКЗадачам.Пользователи КАК Центр_ГруппыДоступаКЗадачамПользователи
		|		ПО Центр_ИсполнителиЗадачСрезПоследних.Исполнитель = Центр_ГруппыДоступаКЗадачамПользователи.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АВТОНОМЕРЗАПИСИ() КАК НомерЗаписи,
		|	Центр_ЗадачаЧекЛист.Текст КАК ЧекЛист,
		|	Центр_ЗадачаЧекЛист.Выполнен КАК ЧекЛистСтатус
		|ПОМЕСТИТЬ ВТ_ЧекЛист
		|ИЗ
		|	Документ.Центр_Задача.ЧекЛист КАК Центр_ЗадачаЧекЛист
		|ГДЕ
		|	Центр_ЗадачаЧекЛист.Ссылка = &ЗадачаСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АВТОНОМЕРЗАПИСИ() КАК НомерЗаписи,
		|	Центр_ЗадачаПрисоединенныеФайлы.Ссылка
		|ПОМЕСТИТЬ ВТ_ФайлыЗадачи
		|ИЗ
		|	Справочник.Центр_ЗадачаПрисоединенныеФайлы КАК Центр_ЗадачаПрисоединенныеФайлы
		|ГДЕ
		|	Центр_ЗадачаПрисоединенныеФайлы.ВладелецФайла = &ЗадачаСсылка
		|	И Центр_ЗадачаПрисоединенныеФайлы.ПометкаУдаления = ЛОЖЬ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Метки.Метка,
		|	Центр_Б24_СоответствиеПользователей.АйДиПользователя КАК Исполнитель,
		|	ВТ_Наблюдатели.АйДиПользователя КАК Наблюдатель,
		|	ВТ_ЧекЛист.ЧекЛист,
		|	ВТ_ЧекЛист.ЧекЛистСтатус,
		|	ВТ_ФайлыЗадачи.Ссылка КАК Файл
		|ИЗ
		|	ВТ_Исполнители КАК ВТ_Исполнители
		|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_Наблюдатели КАК ВТ_Наблюдатели
		|		ПО ВТ_Исполнители.Задача = ВТ_Наблюдатели.Ссылка
		|		И ВТ_Исполнители.НомерЗаписи = ВТ_Наблюдатели.НомерЗаписи
		|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_Метки КАК ВТ_Метки
		|		ПО ВТ_Исполнители.Задача = ВТ_Метки.Ссылка
		|		И ВТ_Исполнители.НомерЗаписи = ВТ_Метки.НомерЗаписи
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.cbr_СоответствиеПользователейДляИнтеграций КАК Центр_Б24_СоответствиеПользователей
		|		ПО ВТ_Исполнители.Исполнитель = Центр_Б24_СоответствиеПользователей.Пользователь
		|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_ЧекЛист КАК ВТ_ЧекЛист
		|		ПО ВТ_Исполнители.НомерЗаписи = ВТ_ЧекЛист.НомерЗаписи
		|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_ФайлыЗадачи КАК ВТ_ФайлыЗадачи
		|		ПО ВТ_Исполнители.НомерЗаписи = ВТ_ФайлыЗадачи.НомерЗаписи";
	
	Запрос.УстановитьПараметр("ЗадачаСсылка", ЗадачаСсылка);
	Запрос.УстановитьПараметр("ТипИнтеграции", ТипИнтеграции);
		
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураИзЗапроса = ОбменДаннымиСлужебный.РезультатЗапросаВСтруктуру(МассивРезультатов[0]);
	
	ПоследнийЭлементМассива = МассивРезультатов[МассивРезультатов.Количество() - 1];
	
	// Создать структуру для массивов данных с именами колонок из запроса
	СтруктураМассивов = Новый Структура();
	Для Каждого Колонка Из ПоследнийЭлементМассива.Колонки Цикл
		СтруктураМассивов.Вставить(Колонка.Имя, Новый Массив());	
	КонецЦикла;
	
	ВыборкаТабличныхЗначений = ПоследнийЭлементМассива.Выбрать();
	
	// Заполняем структуру данных из табличных частей 
	Пока ВыборкаТабличныхЗначений.Следующий() Цикл
		
		Для Каждого Элемент Из СтруктураМассивов Цикл
			
			Если ЗначениеЗаполнено(ВыборкаТабличныхЗначений[Элемент.Ключ]) Тогда
				
				СтруктураМассивов[Элемент.Ключ].Добавить(ВыборкаТабличныхЗначений[Элемент.Ключ]);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	// Добавляем к структуре задачи данные из табличных частей
	Для Каждого Элемент Из СтруктураМассивов Цикл
		Если Элемент.Значение.Количество() Тогда
			СтруктураИзЗапроса.Вставить(Элемент.Ключ, Элемент.Значение);
		КонецЕсли;
	КонецЦикла;	
	
	Возврат СтруктураИзЗапроса;	
КонецФункции

// Получает на вход структуру с данными по задаче и переводит нужные нам данные в понятные для Битрикса.
// 
// Параметры:
//  ДанныеЗадачи - Структура - Структура с данными по задаче
Процедура ПереработатьДанныеСтруктуры(ДанныеЗадачи)
	
	Если ДанныеЗадачи.Свойство("Исполнитель") Тогда
		
		МассивИсполнителей = ДанныеЗадачи.Исполнитель;
		
		Если МассивИсполнителей.Количество() Тогда
			ДанныеЗадачи.Вставить("Исполнитель", МассивИсполнителей[0]);
			МассивИсполнителей.Удалить(0);
			ДанныеЗадачи.Вставить("ДополнительныеИсполнители", МассивИсполнителей);
		КонецЕсли;
		
	КонецЕсли;
	
	// Добавление описания к задаче. Данные из "ФорматированныйДокумент"
	Если ДанныеЗадачи.Свойство("ОписаниеЗадачи") Тогда
		
		ДанныеЗадачи.Вставить("ОписаниеЗадачи", ПолучитьТекстОписанияЗадачи(ДанныеЗадачи.ОписаниеЗадачи));
		
	КонецЕсли;
	
	Для Каждого Элемент Из ДанныеЗадачи Цикл
		
		Если НЕ ЗначениеЗаполнено(Элемент.Значение) Тогда
			ДанныеЗадачи.Вставить(Элемент.Ключ, "");
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Создать структуру соответствий ключей для задачи в битриксе.
// 
//UF_AUTO_353965577273 		- type - boolean 		/ title - Согласовано / 
//UF_AUTO_799574953143 		- type - double 		/ title - Оценка / 
//UF_MAIL_MESSAGE 			- type - mail_message 	/ title -  / 
//UF_TASK_WEBDAV_FILES 		- type - disk_file 		/ title - Загрузить файлы / 
//IS_PINNED 				- default - N 			/ values - ( N-Нет/Y-Да/ ) 							/ type - enum / title -  / 
//CHECKLIST 				- type - array 			/ title -  / 
//VIEWED_DATE 				- type - datetime 		/ title - Дата последнего просмотра / 
//EXCHANGE_MODIFIED 		- default -  			/ type - datetime 									/ title - EXCHANGE_MODIFIED / 
//SITE_ID 					- type - string 		/ title - SITE_ID / 
//FORUM_ID 					- type - integer 		/ title - FORUM_ID / 
//FORUM_TOPIC_ID 			- type - integer 		/ title - FORUM_TOPIC_ID / 
//FORKED_BY_TEMPLATE_ID 	- default - N 			/ values - ( N-Нет/Y-Да/ ) 							/ type - enum / title - Создано из шаблона / 
//EXCHANGE_ID 				- default 	-  			/ type - integer 									/ title - EXCHANGE_ID / 
//MATCH_WORK_TIME 			- type 	- integer 		/ title - Пропустить выходные дни / 
//TASK_CONTROL 				- default 	- N 		/ values - ( N-Нет/Y-Да/ ) 							/ type - enum / title - Принять работу / 
//ALLOW_TIME_TRACKING 		- default - N 			/ values - ( N-Нет/Y-Да/ ) 							/ type - enum / title -  / 
//ALLOW_CHANGE_DEADLINE 	- default - N 			/ values - ( N-Нет/Y-Да/ ) 							/ type - enum / title -  / 
//FLOW_ID 					- default - 0 			/ type - integer 									/ title - Поток / 
//SERVICE_COMMENTS_COUNT 	- default - 0 			/ type - integer 									/ title -  / 
//COMMENTS_COUNT 			- default - 0 			/ type - integer 									/ title - Кол-во комментариев / 
//ADD_IN_REPORT 			- default - N 			/ values - ( N-Нет/Y-Да/ ) 							/ type - enum / title - Добавить в отчет / 
//END_DATE_PLAN 			- default -  			/ type - datetime 									/ title - Плановое завершение / 
//IS_MUTED 					- default - N 			/ values - ( N-Нет/Y-Да/ ) 							/ type - enum / title -  / 
//START_DATE_PLAN 			- default -  			/ type - datetime 									/ title - Плановое начало / 
//OUTLOOK_VERSION 			- default -  			/ type - integer 									/ title - OUTLOOK_VERSION / 
//SORTING 					- type - double 		/ title - Индекс сортировки / 
//GUID 						- default -  			/ type - string 									/ title - GUID / 
//ACTIVITY_DATE 			- default -  			/ type - datetime 									/ title -  / 
//DURATION_TYPE 			- default - days 		/ values - Массив 									/ type - enum / title - DURATION_TYPE / 
//UF_CRM_TASK 				- type - crm 			/ title - Элементы CRM / 
//CLOSED_BY 				- default -  			/ type - integer 									/ title - Закрыл задачу / 
//IS_PINNED_IN_GROUP 		- default - N 			/ values - ( N-Нет/Y-Да/ ) 							/ type - enum / title -  / 
//STATUS_CHANGED_DATE 		- type - datetime 		/ title - Дата изменения статуса / 
//STATUS_CHANGED_BY 		- type - integer 		/ title - Изменил статус / 
//DURATION_FACT 			- type - integer 		/ title - Затрачено (фактически) / 
//CHANGED_DATE 				- type - datetime 		/ title - Дата изменения / 
//CHANGED_BY 				- type - integer 		/ title - Изменил / 
//DATE_START 				- default -  			/ type - datetime / title - Дата начала / 
//TIME_ESTIMATE 			- type - integer 		/ title - Затраченое время / 
//AUDITORS 					- type - array 			/ title - Наблюдатели / 
//ACCOMPLICES 				- type - array 			/ title - Соучастники / 
//RESPONSIBLE_ID 			- required - Да 		/ type - integer 									/ title - Исполнитель / 
//CREATED_BY 				- required - Да 		/ type - integer 									/ title - Постановщик / 
//XML_ID 					- default -  			/ type - string 									/ title - XML_ID / 
//BACKLOG_ID 				- default - 0 			/ type - integer 									/ title - Бэклог / 
//FAVORITE 					- default -  			/ values - ( N-Нет/Y-Да/ ) 							/ type - enum / title -  / 
//SPRINT_ID 				- default - 0 			/ type - integer 									/ title - Спринт / 
//NEW_COMMENTS_COUNT 		- default - 0 			/ type - integer 									/ title -  / 
//CREATED_DATE 				- type - datetime 		/ title -  / 
//SUBORDINATE 				- default -  			/ values - ( N-Нет/Y-Да/ ) 							/ type - enum / title - Задача подчиненного / 
//NOT_VIEWED 				- default - N 			/ values - ( N-Нет/Y-Да/ ) 							/ type - enum / title -  / 
//CLOSED_DATE 				- default -  			/ type - datetime 									/ title - Дата закрытия / 
//MULTITASK 				- default - N 			/ values - ( N-Нет/Y-Да/ ) 							/ type - enum / title - Множественная задача / 
//TIME_SPENT_IN_LOGS 		- type - integer 		/ title - Затраченое время из истории изменений / 
//REPLICATE 				- default - N 			/ values - ( N-Нет/Y-Да/ ) 							/ type - enum / title - Повторяемая задача / 
//STATUS 					- default - 2 			/ values - ( 6-Отложена/5-Завершена/4-Ожидает контроля/3-Выполняется/2-Ждёт выполнения/ ) type - enum / title - Статус / 
//DURATION_PLAN 			- type - integer 		/ title - Затрачено (план) / 
//MARK 						- default -  			/ values - ( P-Положительная/N-Отрицательная/ ) 	/ type - enum / title - Оценка / 
//UF_AUTO_791871108683 		- type - string 		/ title - Клиент / 
//TITLE 					- required - Да 		/ type - string 									/ title - Название / 
//GROUP_ID 					- default - 0 			/ type - integer									/ title - Проект / 
//STAGE_ID 					- default - 0 			/ type - integer 									/ title - Стадия / 
//PRIORITY 					- default - 1 			/ values - ( 0-Низкий/1-Средний/2-Высокий/ ) 		/ type - enum / title - Приоритет / 
//PARENT_ID 				- default - 0 			/ type - integer 									/ title - ID базовой задачи / 
//DESCRIPTION 				- type - string 		/ title - Описание / 
//ID 						- type - integer 		/ primary - Да 										/ title - ID / 
//DEADLINE 					- default -  			/ type - datetime 									/ title - Крайний срок /. 
//
// Возвращаемое значение:
// Структура Из КлючИЗначение - Структура полей  
Функция СоздатьСтруктуруСоответствийКлючей()
	
	СтруктураСоответствияКлючей = Новый Структура();
	
	СтруктураСоответствияКлючей.Вставить("Наименование", "TITLE");
	СтруктураСоответствияКлючей.Вставить("ОписаниеЗадачи", "DESCRIPTION");
	СтруктураСоответствияКлючей.Вставить("ВидЗадачи", "");
//	СтруктураСоответствияКлючей.Вставить("Постановщик", "UF_AUTO_791871108683");
	СтруктураСоответствияКлючей.Вставить("Приоритет", "PRIORITY");
	СтруктураСоответствияКлючей.Вставить("Автор", "CREATED_BY");
	СтруктураСоответствияКлючей.Вставить("ГлавнаяЗадача", "PARENT_ID");
	СтруктураСоответствияКлючей.Вставить("УчетВремени", "");
	СтруктураСоответствияКлючей.Вставить("КонтрольВремени", "");
	СтруктураСоответствияКлючей.Вставить("ГлавныйМенеджер", "");
	СтруктураСоответствияКлючей.Вставить("Исполнитель", "RESPONSIBLE_ID");
	СтруктураСоответствияКлючей.Вставить("Наблюдатель", "AUDITORS");
	СтруктураСоответствияКлючей.Вставить("ДополнительныеИсполнители", "ACCOMPLICES");
	СтруктураСоответствияКлючей.Вставить("ЧекЛист", "CHECKLIST");
	
	Возврат СтруктураСоответствияКлючей;
	
КонецФункции

// Заменить ключи в структуре задачи в соответствии со структурой из "СоздатьСтруктуруСоответствийКлючей".
// 
// Параметры:
//  ДанныеЗадачи - Структура - полученная из "ПолучитьДанныеЗадачи". Содержит поля и их значения из базы
// 
// Возвращаемое значение:
//  Структура - структура с измененными названиями ключей для Битрикс24
Функция СоздатьСтруктуруЗадачиДляБитрикса(ДанныеЗадачи)
	
	СоответствиеКлючей = СоздатьСтруктуруСоответствийКлючей();
	ДанныеЗадачиДляБитрикса = Новый Структура();
	
	Для Каждого ПараметрЗадачи Из ДанныеЗадачи Цикл
		Если СоответствиеКлючей.Свойство(ПараметрЗадачи.Ключ) = Истина 
				И ЗначениеЗаполнено(СоответствиеКлючей[ПараметрЗадачи.Ключ]) Тогда
					
			ДанныеЗадачиДляБитрикса.Вставить(СоответствиеКлючей[ПараметрЗадачи.Ключ], ПараметрЗадачи.Значение);
			
		КонецЕсли;
	КонецЦикла;
	
	Возврат ДанныеЗадачиДляБитрикса;
	
КонецФункции

#КонецОбласти



#Область ЧекЛисты

Функция ОчиститьЧекЛистЗадачи(АйДиЗадачиБитрикс)
	
	ДанныеАвторизации = ПолучитьДанныеАвторизации();
	Ответ = OPI_Bitrix24.ПолучитьЧеклистЗадачи(ДанныеАвторизации.URL, АйДиЗадачиБитрикс, ДанныеАвторизации.Токен);
	
	Если Ответ["error"] <> Неопределено Тогда
		ОбщегоНазначения.СообщитьПользователю(Ответ["error_description"]);
		Возврат Ложь;
	КонецЕсли;
	
	ЧекЛистЗадачи = Ответ["result"];
	Если ЧекЛистЗадачи.Количество() = 0 Тогда
		Возврат Истина;
	КонецЕсли;
	
	Для Каждого Элемент Из ЧекЛистЗадачи Цикл
		
		Ответ = OPI_Bitrix24.УдалитьЭлементЧеклистаЗадачи(ДанныеАвторизации.URL, АйДиЗадачиБитрикс, Элемент["ID"], ДанныеАвторизации.Токен);
		
		Если Ответ["error"] <> Неопределено Тогда
			ОбщегоНазначения.СообщитьПользователю(Ответ["error_description"]);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область ФайлыИПапки

Функция ЗагрузитьФайлБитрикс(Знач ФайлСсылка, Знач ПапкаФайлыЗадачи)
	
	ДанныеАвторизации = ПолучитьДанныеАвторизации();
	ДанныеФайла = РаботаСФайлами.ДвоичныеДанныеФайла(ФайлСсылка, Ложь);
	СвойстваФайла = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ФайлСсылка, "Наименование,Расширение");
	
	ИмяФайла = СвойстваФайла.Наименование + "." + СвойстваФайла.Расширение;
	MIMEТипФайла = ПолучитьMIMEТипФайла(СвойстваФайла.Расширение);
	
	Если ДанныеФайла <> Неопределено Тогда
		Ответ = OPI_Bitrix24.ЗагрузитьФайлВКаталог(ДанныеАвторизации.URL, ИмяФайла, ДанныеФайла, ПапкаФайлыЗадачи, MIMEТипФайла, ДанныеАвторизации.Токен);;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	Если Ответ["error"] <> Неопределено Тогда
		
		ОбщегоНазначения.СообщитьПользователю(Ответ["error_description"]);
		Возврат Неопределено;
			
	КонецЕсли;
	
	АйДиФайла = Ответ["result"]["ID"];
	
	Возврат АйДиФайла;
	
КонецФункции

Функция ПолучитьАйДиПапкиФайлов(Знач ЗадачаСсылка, Знач АйДиЗадачиБитрикс, Знач АйДиОсновнойПапки)
	
	ДанныеАвторизации = ПолучитьДанныеАвторизации();
	
	СтруктураОтбора = Новый Структура();
	СтруктураОтбора.Вставить("NAME", АйДиЗадачиБитрикс);
	
	Ответ = OPI_Bitrix24.ПолучитьДочерниеЭлементыКаталога(ДанныеАвторизации.URL, АйДиОсновнойПапки, СтруктураОтбора, ДанныеАвторизации.Токен);
	
	Если Ответ["error"] <> Неопределено Тогда
		ОбщегоНазначения.СообщитьПользователю(Ответ["error_description"]);
		Возврат Неопределено;
	КонецЕсли;
	
	Если Ответ["result"].Количество() > 0 Тогда
		АйДиПапкиФайлов = Ответ["result"][0]["ID"];
	Иначе
		Ответ = OPI_Bitrix24.СоздатьПодкаталог(ДанныеАвторизации.URL, АйДиОсновнойПапки, АйДиЗадачиБитрикс, ДанныеАвторизации.Токен);	
		
		Если Ответ["error"] <> Неопределено Тогда
			ОбщегоНазначения.СообщитьПользователю(Ответ["error_description"]);
			Возврат Неопределено;
		КонецЕсли;
		
		АйДиПапкиФайлов = Ответ["result"]["ID"];
		
	КонецЕсли;
	
	СтруктураЗаписи = Новый Структура;
	СтруктураЗаписи.Вставить("Задача", ЗадачаСсылка);
	СтруктураЗаписи.Вставить("АйДиЗадачиБитрикс", АйДиЗадачиБитрикс);
	СтруктураЗаписи.Вставить("АйДиПапкиФайлов", АйДиПапкиФайлов);
	
	ОбменДаннымиСлужебный.ОбновитьЗаписьВРегистрСведений(СтруктураЗаписи, "Центр_Б24_СоответствиеЗадач");
	
	Возврат АйДиПапкиФайлов;
	
КонецФункции

Функция ПолучитьMIMEТипФайла(Знач ФорматФайла)
	
	СоответствиеТипов = Новый Соответствие;
	
	// Текстовые
	СоответствиеТипов.Вставить("txt", 		"text/plain");
	СоответствиеТипов.Вставить("html", 		"text/html");
	СоответствиеТипов.Вставить("docx", 		"application/vnd.openxmlformats-officedocument.wordprocessingml.document");
	СоответствиеТипов.Вставить("doc", 		"application/msword");
	СоответствиеТипов.Вставить("pdf", 		"application/pdf");
	
	// Изображения
	СоответствиеТипов.Вставить("jpg", 		"image/jpeg");
	СоответствиеТипов.Вставить("jpeg", 		"image/jpeg");
	СоответствиеТипов.Вставить("png", 		"image/png");
	СоответствиеТипов.Вставить("ico", 		"image/vnd.microsoft.icon");
	СоответствиеТипов.Вставить("webp", 		"image/webp");
	СоответствиеТипов.Вставить("gif", 		"image/gif");
	СоответствиеТипов.Вставить("heic", 		"image/heic");
	
	// Табличные
	СоответствиеТипов.Вставить("xls", 		"application/vnd.ms-excel");
	СоответствиеТипов.Вставить("xlsx", 		"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
	
	// Архивы
	СоответствиеТипов.Вставить("zip", 		"application/zip");
	СоответствиеТипов.Вставить("rar", 		"application/vnd.rar");
	
	Возврат СоответствиеТипов[ФорматФайла];
	
КонецФункции

#КонецОбласти

#Область ОписаниеЗадачи

Функция ПолучитьТекстОписанияЗадачи(ФорматированныйДокументСсылка)
	
	ФорматированныйДокумент = ФорматированныйДокументСсылка.Получить();
	ОписаниеЗадачи = "";

	Для Каждого ПараграфДокумента Из ФорматированныйДокумент.Элементы Цикл
		
		Если ПараграфДокумента.Элементы.Количество() = 0 Тогда
			
			ОписаниеЗадачи = ОписаниеЗадачи + Символы.ПС;
			
		КонецЕсли;
		
		Для Каждого ЭлементПараграфа Из ПараграфДокумента.Элементы Цикл
			
			Если ТипЗнч(ЭлементПараграфа) = Тип("ТекстФорматированногоДокумента") Тогда
				ОписаниеЗадачи = ОписаниеЗадачи + ЭлементПараграфа.Текст + Символы.ПС;	
			ИначеЕсли ТипЗнч(ЭлементПараграфа) = Тип("КартинкаФорматированногоДокумента") Тогда
				ОписаниеЗадачи = ОписаниеЗадачи + ЭлементПараграфа.Картинка + Символы.ПС;
			КонецЕсли;	
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ОписаниеЗадачи;
	
КонецФункции

#КонецОбласти

//Функция ПолучитьИменнаПараметровСтруктурыЗадачиВТексте()
//	URL      = "https://c1c.bitrix24.ru/rest/3089/hxjd2525sutx3574/"; 
//	СтруктураДляБитрикса = OPI_Bitrix24.ПолучитьСтруктуруЗадачи(URL);
//	
//	Текст = "";
//	
//	Для Каждого Элемент Из СтруктураДляБитрикса["result"]["fields"] Цикл
//		
//		Текст = Текст + Элемент.Ключ + " - ";
//		Для Каждого Эл Из Элемент.Значение Цикл
//			Если ТипЗнч(Эл.Значение) = Тип("Соответствие") Тогда
//				Текст = Текст + Эл.Ключ + " - ( ";
//				Для Каждого Э Из Эл.Значение Цикл
//					Текст = Текст + Э.Ключ + "-" + Э.Значение + "/";
//				КонецЦикла;
//				Текст = Текст + " ) ";
//			Иначе
//				Текст = Текст + Эл.Ключ + " - " + Эл.Значение + " / ";
//			КонецЕсли;
//			
//		КонецЦикла;
//		
//		Текст = Текст + Символы.ПС;
//		
//	КонецЦикла;
//	
//	Возврат Текст;
//	
//КонецФункции

#КонецОбласти

